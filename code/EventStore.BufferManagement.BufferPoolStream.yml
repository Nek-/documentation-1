### YamlMime:ManagedReference
items:
- uid: EventStore.BufferManagement.BufferPoolStream
  commentId: T:EventStore.BufferManagement.BufferPoolStream
  id: BufferPoolStream
  parent: EventStore.BufferManagement
  children:
  - EventStore.BufferManagement.BufferPoolStream.#ctor(EventStore.BufferManagement.BufferPool)
  - EventStore.BufferManagement.BufferPoolStream.BufferPool
  - EventStore.BufferManagement.BufferPoolStream.CanRead
  - EventStore.BufferManagement.BufferPoolStream.CanSeek
  - EventStore.BufferManagement.BufferPoolStream.CanWrite
  - EventStore.BufferManagement.BufferPoolStream.Capacity
  - EventStore.BufferManagement.BufferPoolStream.Dispose(System.Boolean)
  - EventStore.BufferManagement.BufferPoolStream.Flush
  - EventStore.BufferManagement.BufferPoolStream.Length
  - EventStore.BufferManagement.BufferPoolStream.Position
  - EventStore.BufferManagement.BufferPoolStream.Read(System.Byte[],System.Int32,System.Int32)
  - EventStore.BufferManagement.BufferPoolStream.Seek(System.Int64,SeekOrigin)
  - EventStore.BufferManagement.BufferPoolStream.SetLength(System.Int64)
  - EventStore.BufferManagement.BufferPoolStream.ToArray
  - EventStore.BufferManagement.BufferPoolStream.Write(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: BufferPoolStream
  nameWithType: BufferPoolStream
  fullName: EventStore.BufferManagement.BufferPoolStream
  type: Class
  source:
    remote:
      path: src/EventStore.BufferManagement/BufferPoolStream.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: BufferPoolStream
    path: ../EventStore/src/EventStore.BufferManagement/BufferPoolStream.cs
    startLine: 5
  assemblies:
  - EventStore.BufferManagement
  namespace: EventStore.BufferManagement
  syntax:
    content: 'public class BufferPoolStream : Stream'
    content.vb: >-
      Public Class BufferPoolStream
          Inherits Stream
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.BufferManagement.BufferPoolStream.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.BufferManagement.BufferPoolStream.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.BufferManagement.BufferPoolStream.BufferPool
  commentId: P:EventStore.BufferManagement.BufferPoolStream.BufferPool
  id: BufferPool
  parent: EventStore.BufferManagement.BufferPoolStream
  langs:
  - csharp
  - vb
  name: BufferPool
  nameWithType: BufferPoolStream.BufferPool
  fullName: EventStore.BufferManagement.BufferPoolStream.BufferPool
  type: Property
  source:
    remote:
      path: src/EventStore.BufferManagement/BufferPoolStream.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: BufferPool
    path: ../EventStore/src/EventStore.BufferManagement/BufferPoolStream.cs
    startLine: 10
  assemblies:
  - EventStore.BufferManagement
  namespace: EventStore.BufferManagement
  syntax:
    content: public BufferPool BufferPool { get; }
    parameters: []
    return:
      type: EventStore.BufferManagement.BufferPool
    content.vb: Public ReadOnly Property BufferPool As BufferPool
  overload: EventStore.BufferManagement.BufferPoolStream.BufferPool*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.BufferManagement.BufferPoolStream.CanRead
  commentId: P:EventStore.BufferManagement.BufferPoolStream.CanRead
  id: CanRead
  parent: EventStore.BufferManagement.BufferPoolStream
  langs:
  - csharp
  - vb
  name: CanRead
  nameWithType: BufferPoolStream.CanRead
  fullName: EventStore.BufferManagement.BufferPoolStream.CanRead
  type: Property
  source:
    remote:
      path: src/EventStore.BufferManagement/BufferPoolStream.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CanRead
    path: ../EventStore/src/EventStore.BufferManagement/BufferPoolStream.cs
    startLine: 12
  assemblies:
  - EventStore.BufferManagement
  namespace: EventStore.BufferManagement
  syntax:
    content: public override bool CanRead { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
  overload: EventStore.BufferManagement.BufferPoolStream.CanRead*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.BufferManagement.BufferPoolStream.CanSeek
  commentId: P:EventStore.BufferManagement.BufferPoolStream.CanSeek
  id: CanSeek
  parent: EventStore.BufferManagement.BufferPoolStream
  langs:
  - csharp
  - vb
  name: CanSeek
  nameWithType: BufferPoolStream.CanSeek
  fullName: EventStore.BufferManagement.BufferPoolStream.CanSeek
  type: Property
  source:
    remote:
      path: src/EventStore.BufferManagement/BufferPoolStream.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CanSeek
    path: ../EventStore/src/EventStore.BufferManagement/BufferPoolStream.cs
    startLine: 13
  assemblies:
  - EventStore.BufferManagement
  namespace: EventStore.BufferManagement
  syntax:
    content: public override bool CanSeek { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean
  overload: EventStore.BufferManagement.BufferPoolStream.CanSeek*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.BufferManagement.BufferPoolStream.CanWrite
  commentId: P:EventStore.BufferManagement.BufferPoolStream.CanWrite
  id: CanWrite
  parent: EventStore.BufferManagement.BufferPoolStream
  langs:
  - csharp
  - vb
  name: CanWrite
  nameWithType: BufferPoolStream.CanWrite
  fullName: EventStore.BufferManagement.BufferPoolStream.CanWrite
  type: Property
  source:
    remote:
      path: src/EventStore.BufferManagement/BufferPoolStream.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CanWrite
    path: ../EventStore/src/EventStore.BufferManagement/BufferPoolStream.cs
    startLine: 14
  assemblies:
  - EventStore.BufferManagement
  namespace: EventStore.BufferManagement
  syntax:
    content: public override bool CanWrite { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
  overload: EventStore.BufferManagement.BufferPoolStream.CanWrite*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.BufferManagement.BufferPoolStream.Length
  commentId: P:EventStore.BufferManagement.BufferPoolStream.Length
  id: Length
  parent: EventStore.BufferManagement.BufferPoolStream
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: BufferPoolStream.Length
  fullName: EventStore.BufferManagement.BufferPoolStream.Length
  type: Property
  source:
    remote:
      path: src/EventStore.BufferManagement/BufferPoolStream.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Length
    path: ../EventStore/src/EventStore.BufferManagement/BufferPoolStream.cs
    startLine: 15
  assemblies:
  - EventStore.BufferManagement
  namespace: EventStore.BufferManagement
  syntax:
    content: public override long Length { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Overrides ReadOnly Property Length As Long
  overload: EventStore.BufferManagement.BufferPoolStream.Length*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.BufferManagement.BufferPoolStream.Capacity
  commentId: P:EventStore.BufferManagement.BufferPoolStream.Capacity
  id: Capacity
  parent: EventStore.BufferManagement.BufferPoolStream
  langs:
  - csharp
  - vb
  name: Capacity
  nameWithType: BufferPoolStream.Capacity
  fullName: EventStore.BufferManagement.BufferPoolStream.Capacity
  type: Property
  source:
    remote:
      path: src/EventStore.BufferManagement/BufferPoolStream.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Capacity
    path: ../EventStore/src/EventStore.BufferManagement/BufferPoolStream.cs
    startLine: 16
  assemblies:
  - EventStore.BufferManagement
  namespace: EventStore.BufferManagement
  syntax:
    content: public int Capacity { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Capacity As Integer
  overload: EventStore.BufferManagement.BufferPoolStream.Capacity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.BufferManagement.BufferPoolStream.Position
  commentId: P:EventStore.BufferManagement.BufferPoolStream.Position
  id: Position
  parent: EventStore.BufferManagement.BufferPoolStream
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: BufferPoolStream.Position
  fullName: EventStore.BufferManagement.BufferPoolStream.Position
  type: Property
  source:
    remote:
      path: src/EventStore.BufferManagement/BufferPoolStream.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Position
    path: ../EventStore/src/EventStore.BufferManagement/BufferPoolStream.cs
    startLine: 18
  assemblies:
  - EventStore.BufferManagement
  namespace: EventStore.BufferManagement
  syntax:
    content: public override long Position { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Overrides Property Position As Long
  overload: EventStore.BufferManagement.BufferPoolStream.Position*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.BufferManagement.BufferPoolStream.#ctor(EventStore.BufferManagement.BufferPool)
  commentId: M:EventStore.BufferManagement.BufferPoolStream.#ctor(EventStore.BufferManagement.BufferPool)
  id: '#ctor(EventStore.BufferManagement.BufferPool)'
  parent: EventStore.BufferManagement.BufferPoolStream
  langs:
  - csharp
  - vb
  name: BufferPoolStream(BufferPool)
  nameWithType: BufferPoolStream.BufferPoolStream(BufferPool)
  fullName: EventStore.BufferManagement.BufferPoolStream.BufferPoolStream(EventStore.BufferManagement.BufferPool)
  type: Constructor
  source:
    remote:
      path: src/EventStore.BufferManagement/BufferPoolStream.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.BufferManagement/BufferPoolStream.cs
    startLine: 33
  assemblies:
  - EventStore.BufferManagement
  namespace: EventStore.BufferManagement
  summary: "\nInitializes a new instance of the <xref href=\"EventStore.BufferManagement.BufferPoolStream\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public BufferPoolStream(BufferPool bufferPool)
    parameters:
    - id: bufferPool
      type: EventStore.BufferManagement.BufferPool
      description: The buffer pool used as underlying storage.
    content.vb: Public Sub New(bufferPool As BufferPool)
  overload: EventStore.BufferManagement.BufferPoolStream.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.BufferManagement.BufferPoolStream.Flush
  commentId: M:EventStore.BufferManagement.BufferPoolStream.Flush
  id: Flush
  parent: EventStore.BufferManagement.BufferPoolStream
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: BufferPoolStream.Flush()
  fullName: EventStore.BufferManagement.BufferPoolStream.Flush()
  type: Method
  source:
    remote:
      path: src/EventStore.BufferManagement/BufferPoolStream.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Flush
    path: ../EventStore/src/EventStore.BufferManagement/BufferPoolStream.cs
    startLine: 40
  assemblies:
  - EventStore.BufferManagement
  namespace: EventStore.BufferManagement
  syntax:
    content: public override void Flush()
    content.vb: Public Overrides Sub Flush
  overload: EventStore.BufferManagement.BufferPoolStream.Flush*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.BufferManagement.BufferPoolStream.Seek(System.Int64,SeekOrigin)
  commentId: M:EventStore.BufferManagement.BufferPoolStream.Seek(System.Int64,SeekOrigin)
  id: Seek(System.Int64,SeekOrigin)
  parent: EventStore.BufferManagement.BufferPoolStream
  langs:
  - csharp
  - vb
  name: Seek(Int64, SeekOrigin)
  nameWithType: BufferPoolStream.Seek(Int64, SeekOrigin)
  fullName: EventStore.BufferManagement.BufferPoolStream.Seek(System.Int64, SeekOrigin)
  type: Method
  source:
    remote:
      path: src/EventStore.BufferManagement/BufferPoolStream.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Seek
    path: ../EventStore/src/EventStore.BufferManagement/BufferPoolStream.cs
    startLine: 45
  assemblies:
  - EventStore.BufferManagement
  namespace: EventStore.BufferManagement
  syntax:
    content: public override long Seek(long offset, SeekOrigin origin)
    parameters:
    - id: offset
      type: System.Int64
    - id: origin
      type: SeekOrigin
    return:
      type: System.Int64
    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long
  overload: EventStore.BufferManagement.BufferPoolStream.Seek*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.BufferManagement.BufferPoolStream.SetLength(System.Int64)
  commentId: M:EventStore.BufferManagement.BufferPoolStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: EventStore.BufferManagement.BufferPoolStream
  langs:
  - csharp
  - vb
  name: SetLength(Int64)
  nameWithType: BufferPoolStream.SetLength(Int64)
  fullName: EventStore.BufferManagement.BufferPoolStream.SetLength(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.BufferManagement/BufferPoolStream.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: SetLength
    path: ../EventStore/src/EventStore.BufferManagement/BufferPoolStream.cs
    startLine: 64
  assemblies:
  - EventStore.BufferManagement
  namespace: EventStore.BufferManagement
  syntax:
    content: public override void SetLength(long value)
    parameters:
    - id: value
      type: System.Int64
    content.vb: Public Overrides Sub SetLength(value As Long)
  overload: EventStore.BufferManagement.BufferPoolStream.SetLength*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.BufferManagement.BufferPoolStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:EventStore.BufferManagement.BufferPoolStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: EventStore.BufferManagement.BufferPoolStream
  langs:
  - csharp
  - vb
  name: Read(Byte[], Int32, Int32)
  nameWithType: BufferPoolStream.Read(Byte[], Int32, Int32)
  fullName: EventStore.BufferManagement.BufferPoolStream.Read(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.BufferManagement/BufferPoolStream.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Read
    path: ../EventStore/src/EventStore.BufferManagement/BufferPoolStream.cs
    startLine: 71
  assemblies:
  - EventStore.BufferManagement
  namespace: EventStore.BufferManagement
  syntax:
    content: public override int Read(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overrides Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer
  overload: EventStore.BufferManagement.BufferPoolStream.Read*
  nameWithType.vb: BufferPoolStream.Read(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: EventStore.BufferManagement.BufferPoolStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
- uid: EventStore.BufferManagement.BufferPoolStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:EventStore.BufferManagement.BufferPoolStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: EventStore.BufferManagement.BufferPoolStream
  langs:
  - csharp
  - vb
  name: Write(Byte[], Int32, Int32)
  nameWithType: BufferPoolStream.Write(Byte[], Int32, Int32)
  fullName: EventStore.BufferManagement.BufferPoolStream.Write(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.BufferManagement/BufferPoolStream.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Write
    path: ../EventStore/src/EventStore.BufferManagement/BufferPoolStream.cs
    startLine: 80
  assemblies:
  - EventStore.BufferManagement
  namespace: EventStore.BufferManagement
  syntax:
    content: public override void Write(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    content.vb: Public Overrides Sub Write(buffer As Byte(), offset As Integer, count As Integer)
  overload: EventStore.BufferManagement.BufferPoolStream.Write*
  nameWithType.vb: BufferPoolStream.Write(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: EventStore.BufferManagement.BufferPoolStream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
- uid: EventStore.BufferManagement.BufferPoolStream.Dispose(System.Boolean)
  commentId: M:EventStore.BufferManagement.BufferPoolStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: EventStore.BufferManagement.BufferPoolStream
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: BufferPoolStream.Dispose(Boolean)
  fullName: EventStore.BufferManagement.BufferPoolStream.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.BufferManagement/BufferPoolStream.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Dispose
    path: ../EventStore/src/EventStore.BufferManagement/BufferPoolStream.cs
    startLine: 86
  assemblies:
  - EventStore.BufferManagement
  namespace: EventStore.BufferManagement
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overload: EventStore.BufferManagement.BufferPoolStream.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: EventStore.BufferManagement.BufferPoolStream.ToArray
  commentId: M:EventStore.BufferManagement.BufferPoolStream.ToArray
  id: ToArray
  parent: EventStore.BufferManagement.BufferPoolStream
  langs:
  - csharp
  - vb
  name: ToArray()
  nameWithType: BufferPoolStream.ToArray()
  fullName: EventStore.BufferManagement.BufferPoolStream.ToArray()
  type: Method
  source:
    remote:
      path: src/EventStore.BufferManagement/BufferPoolStream.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ToArray
    path: ../EventStore/src/EventStore.BufferManagement/BufferPoolStream.cs
    startLine: 93
  assemblies:
  - EventStore.BufferManagement
  namespace: EventStore.BufferManagement
  syntax:
    content: public byte[] ToArray()
    return:
      type: System.Byte[]
    content.vb: Public Function ToArray As Byte()
  overload: EventStore.BufferManagement.BufferPoolStream.ToArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.BufferManagement
  commentId: N:EventStore.BufferManagement
  isExternal: false
  name: EventStore.BufferManagement
  nameWithType: EventStore.BufferManagement
  fullName: EventStore.BufferManagement
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.BufferManagement.BufferPoolStream.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<BufferPoolStream>()
  nameWithType: ProtobufExtensions.Serialize<BufferPoolStream>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.BufferManagement.BufferPoolStream>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of BufferPoolStream)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.BufferManagement.BufferPoolStream)()
  name.vb: Serialize(Of BufferPoolStream)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<BufferPoolStream>
    nameWithType: ProtobufExtensions.Serialize<BufferPoolStream>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.BufferManagement.BufferPoolStream>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of BufferPoolStream)
    nameWithType: ProtobufExtensions.Serialize(Of BufferPoolStream)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.BufferManagement.BufferPoolStream)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.BufferManagement.BufferPoolStream.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<BufferPoolStream>()
  nameWithType: ProtobufExtensions.SerializeToArray<BufferPoolStream>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.BufferManagement.BufferPoolStream>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of BufferPoolStream)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.BufferManagement.BufferPoolStream)()
  name.vb: SerializeToArray(Of BufferPoolStream)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<BufferPoolStream>
    nameWithType: ProtobufExtensions.SerializeToArray<BufferPoolStream>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.BufferManagement.BufferPoolStream>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of BufferPoolStream)
    nameWithType: ProtobufExtensions.SerializeToArray(Of BufferPoolStream)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.BufferManagement.BufferPoolStream)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.BufferManagement.BufferPoolStream.BufferPool*
  commentId: Overload:EventStore.BufferManagement.BufferPoolStream.BufferPool
  isExternal: false
  name: BufferPool
  nameWithType: BufferPoolStream.BufferPool
  fullName: EventStore.BufferManagement.BufferPoolStream.BufferPool
- uid: EventStore.BufferManagement.BufferPool
  commentId: T:EventStore.BufferManagement.BufferPool
  parent: EventStore.BufferManagement
  isExternal: false
  name: BufferPool
  nameWithType: BufferPool
  fullName: EventStore.BufferManagement.BufferPool
- uid: EventStore.BufferManagement.BufferPoolStream.CanRead*
  commentId: Overload:EventStore.BufferManagement.BufferPoolStream.CanRead
  isExternal: false
  name: CanRead
  nameWithType: BufferPoolStream.CanRead
  fullName: EventStore.BufferManagement.BufferPoolStream.CanRead
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.BufferManagement.BufferPoolStream.CanSeek*
  commentId: Overload:EventStore.BufferManagement.BufferPoolStream.CanSeek
  isExternal: false
  name: CanSeek
  nameWithType: BufferPoolStream.CanSeek
  fullName: EventStore.BufferManagement.BufferPoolStream.CanSeek
- uid: EventStore.BufferManagement.BufferPoolStream.CanWrite*
  commentId: Overload:EventStore.BufferManagement.BufferPoolStream.CanWrite
  isExternal: false
  name: CanWrite
  nameWithType: BufferPoolStream.CanWrite
  fullName: EventStore.BufferManagement.BufferPoolStream.CanWrite
- uid: EventStore.BufferManagement.BufferPoolStream.Length*
  commentId: Overload:EventStore.BufferManagement.BufferPoolStream.Length
  isExternal: false
  name: Length
  nameWithType: BufferPoolStream.Length
  fullName: EventStore.BufferManagement.BufferPoolStream.Length
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.BufferManagement.BufferPoolStream.Capacity*
  commentId: Overload:EventStore.BufferManagement.BufferPoolStream.Capacity
  isExternal: false
  name: Capacity
  nameWithType: BufferPoolStream.Capacity
  fullName: EventStore.BufferManagement.BufferPoolStream.Capacity
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.BufferManagement.BufferPoolStream.Position*
  commentId: Overload:EventStore.BufferManagement.BufferPoolStream.Position
  isExternal: false
  name: Position
  nameWithType: BufferPoolStream.Position
  fullName: EventStore.BufferManagement.BufferPoolStream.Position
- uid: EventStore.BufferManagement.BufferPoolStream
  commentId: T:EventStore.BufferManagement.BufferPoolStream
  isExternal: false
  name: BufferPoolStream
  nameWithType: BufferPoolStream
  fullName: EventStore.BufferManagement.BufferPoolStream
- uid: EventStore.BufferManagement.BufferPoolStream.#ctor*
  commentId: Overload:EventStore.BufferManagement.BufferPoolStream.#ctor
  isExternal: false
  name: BufferPoolStream
  nameWithType: BufferPoolStream.BufferPoolStream
  fullName: EventStore.BufferManagement.BufferPoolStream.BufferPoolStream
- uid: EventStore.BufferManagement.BufferPoolStream.Flush*
  commentId: Overload:EventStore.BufferManagement.BufferPoolStream.Flush
  isExternal: false
  name: Flush
  nameWithType: BufferPoolStream.Flush
  fullName: EventStore.BufferManagement.BufferPoolStream.Flush
- uid: EventStore.BufferManagement.BufferPoolStream.Seek*
  commentId: Overload:EventStore.BufferManagement.BufferPoolStream.Seek
  isExternal: false
  name: Seek
  nameWithType: BufferPoolStream.Seek
  fullName: EventStore.BufferManagement.BufferPoolStream.Seek
- uid: SeekOrigin
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: SeekOrigin
- uid: EventStore.BufferManagement.BufferPoolStream.SetLength*
  commentId: Overload:EventStore.BufferManagement.BufferPoolStream.SetLength
  isExternal: false
  name: SetLength
  nameWithType: BufferPoolStream.SetLength
  fullName: EventStore.BufferManagement.BufferPoolStream.SetLength
- uid: EventStore.BufferManagement.BufferPoolStream.Read*
  commentId: Overload:EventStore.BufferManagement.BufferPoolStream.Read
  isExternal: false
  name: Read
  nameWithType: BufferPoolStream.Read
  fullName: EventStore.BufferManagement.BufferPoolStream.Read
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.BufferManagement.BufferPoolStream.Write*
  commentId: Overload:EventStore.BufferManagement.BufferPoolStream.Write
  isExternal: false
  name: Write
  nameWithType: BufferPoolStream.Write
  fullName: EventStore.BufferManagement.BufferPoolStream.Write
- uid: EventStore.BufferManagement.BufferPoolStream.Dispose*
  commentId: Overload:EventStore.BufferManagement.BufferPoolStream.Dispose
  isExternal: false
  name: Dispose
  nameWithType: BufferPoolStream.Dispose
  fullName: EventStore.BufferManagement.BufferPoolStream.Dispose
- uid: EventStore.BufferManagement.BufferPoolStream.ToArray*
  commentId: Overload:EventStore.BufferManagement.BufferPoolStream.ToArray
  isExternal: false
  name: ToArray
  nameWithType: BufferPoolStream.ToArray
  fullName: EventStore.BufferManagement.BufferPoolStream.ToArray

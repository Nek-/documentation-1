### YamlMime:ManagedReference
items:
- uid: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager
  commentId: T:EventStore.BufferManagement.Tests.when_creating_a_buffer_manager
  id: when_creating_a_buffer_manager
  parent: EventStore.BufferManagement.Tests
  children:
  - EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_chunk_size_causes_an_argumentexception
  - EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_chunks_per_segment_causes_an_argumentexception
  - EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_number_of_segments_causes_an_argumentexception
  - EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_zero_chunk_size_causes_an_argumentexception
  - EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_zero_chunks_per_segment_causes_an_argumentexception
  - EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.can_create_a_manager_with_zero_inital_segments
  langs:
  - csharp
  - vb
  name: when_creating_a_buffer_manager
  nameWithType: when_creating_a_buffer_manager
  fullName: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager
  type: Class
  source:
    remote:
      path: src/EventStore.BufferManagement.Tests/BufferManagerTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: when_creating_a_buffer_manager
    path: ../EventStore/src/EventStore.BufferManagement.Tests/BufferManagerTests.cs
    startLine: 5
  assemblies:
  - EventStore.BufferManagement.Tests
  namespace: EventStore.BufferManagement.Tests
  syntax:
    content: 'public class when_creating_a_buffer_manager : object'
    content.vb: >-
      Public Class when_creating_a_buffer_manager

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_zero_chunk_size_causes_an_argumentexception
  commentId: M:EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_zero_chunk_size_causes_an_argumentexception
  id: a_zero_chunk_size_causes_an_argumentexception
  parent: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager
  langs:
  - csharp
  - vb
  name: a_zero_chunk_size_causes_an_argumentexception()
  nameWithType: when_creating_a_buffer_manager.a_zero_chunk_size_causes_an_argumentexception()
  fullName: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_zero_chunk_size_causes_an_argumentexception()
  type: Method
  source:
    remote:
      path: src/EventStore.BufferManagement.Tests/BufferManagerTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: a_zero_chunk_size_causes_an_argumentexception
    path: ../EventStore/src/EventStore.BufferManagement.Tests/BufferManagerTests.cs
    startLine: 8
  assemblies:
  - EventStore.BufferManagement.Tests
  namespace: EventStore.BufferManagement.Tests
  syntax:
    content: public void a_zero_chunk_size_causes_an_argumentexception()
    content.vb: Public Sub a_zero_chunk_size_causes_an_argumentexception
  overload: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_zero_chunk_size_causes_an_argumentexception*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_chunk_size_causes_an_argumentexception
  commentId: M:EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_chunk_size_causes_an_argumentexception
  id: a_negative_chunk_size_causes_an_argumentexception
  parent: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager
  langs:
  - csharp
  - vb
  name: a_negative_chunk_size_causes_an_argumentexception()
  nameWithType: when_creating_a_buffer_manager.a_negative_chunk_size_causes_an_argumentexception()
  fullName: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_chunk_size_causes_an_argumentexception()
  type: Method
  source:
    remote:
      path: src/EventStore.BufferManagement.Tests/BufferManagerTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: a_negative_chunk_size_causes_an_argumentexception
    path: ../EventStore/src/EventStore.BufferManagement.Tests/BufferManagerTests.cs
    startLine: 14
  assemblies:
  - EventStore.BufferManagement.Tests
  namespace: EventStore.BufferManagement.Tests
  syntax:
    content: public void a_negative_chunk_size_causes_an_argumentexception()
    content.vb: Public Sub a_negative_chunk_size_causes_an_argumentexception
  overload: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_chunk_size_causes_an_argumentexception*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_chunks_per_segment_causes_an_argumentexception
  commentId: M:EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_chunks_per_segment_causes_an_argumentexception
  id: a_negative_chunks_per_segment_causes_an_argumentexception
  parent: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager
  langs:
  - csharp
  - vb
  name: a_negative_chunks_per_segment_causes_an_argumentexception()
  nameWithType: when_creating_a_buffer_manager.a_negative_chunks_per_segment_causes_an_argumentexception()
  fullName: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_chunks_per_segment_causes_an_argumentexception()
  type: Method
  source:
    remote:
      path: src/EventStore.BufferManagement.Tests/BufferManagerTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: a_negative_chunks_per_segment_causes_an_argumentexception
    path: ../EventStore/src/EventStore.BufferManagement.Tests/BufferManagerTests.cs
    startLine: 20
  assemblies:
  - EventStore.BufferManagement.Tests
  namespace: EventStore.BufferManagement.Tests
  syntax:
    content: public void a_negative_chunks_per_segment_causes_an_argumentexception()
    content.vb: Public Sub a_negative_chunks_per_segment_causes_an_argumentexception
  overload: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_chunks_per_segment_causes_an_argumentexception*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_zero_chunks_per_segment_causes_an_argumentexception
  commentId: M:EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_zero_chunks_per_segment_causes_an_argumentexception
  id: a_zero_chunks_per_segment_causes_an_argumentexception
  parent: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager
  langs:
  - csharp
  - vb
  name: a_zero_chunks_per_segment_causes_an_argumentexception()
  nameWithType: when_creating_a_buffer_manager.a_zero_chunks_per_segment_causes_an_argumentexception()
  fullName: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_zero_chunks_per_segment_causes_an_argumentexception()
  type: Method
  source:
    remote:
      path: src/EventStore.BufferManagement.Tests/BufferManagerTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: a_zero_chunks_per_segment_causes_an_argumentexception
    path: ../EventStore/src/EventStore.BufferManagement.Tests/BufferManagerTests.cs
    startLine: 26
  assemblies:
  - EventStore.BufferManagement.Tests
  namespace: EventStore.BufferManagement.Tests
  syntax:
    content: public void a_zero_chunks_per_segment_causes_an_argumentexception()
    content.vb: Public Sub a_zero_chunks_per_segment_causes_an_argumentexception
  overload: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_zero_chunks_per_segment_causes_an_argumentexception*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_number_of_segments_causes_an_argumentexception
  commentId: M:EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_number_of_segments_causes_an_argumentexception
  id: a_negative_number_of_segments_causes_an_argumentexception
  parent: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager
  langs:
  - csharp
  - vb
  name: a_negative_number_of_segments_causes_an_argumentexception()
  nameWithType: when_creating_a_buffer_manager.a_negative_number_of_segments_causes_an_argumentexception()
  fullName: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_number_of_segments_causes_an_argumentexception()
  type: Method
  source:
    remote:
      path: src/EventStore.BufferManagement.Tests/BufferManagerTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: a_negative_number_of_segments_causes_an_argumentexception
    path: ../EventStore/src/EventStore.BufferManagement.Tests/BufferManagerTests.cs
    startLine: 32
  assemblies:
  - EventStore.BufferManagement.Tests
  namespace: EventStore.BufferManagement.Tests
  syntax:
    content: public void a_negative_number_of_segments_causes_an_argumentexception()
    content.vb: Public Sub a_negative_number_of_segments_causes_an_argumentexception
  overload: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_number_of_segments_causes_an_argumentexception*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.can_create_a_manager_with_zero_inital_segments
  commentId: M:EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.can_create_a_manager_with_zero_inital_segments
  id: can_create_a_manager_with_zero_inital_segments
  parent: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager
  langs:
  - csharp
  - vb
  name: can_create_a_manager_with_zero_inital_segments()
  nameWithType: when_creating_a_buffer_manager.can_create_a_manager_with_zero_inital_segments()
  fullName: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.can_create_a_manager_with_zero_inital_segments()
  type: Method
  source:
    remote:
      path: src/EventStore.BufferManagement.Tests/BufferManagerTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: can_create_a_manager_with_zero_inital_segments
    path: ../EventStore/src/EventStore.BufferManagement.Tests/BufferManagerTests.cs
    startLine: 38
  assemblies:
  - EventStore.BufferManagement.Tests
  namespace: EventStore.BufferManagement.Tests
  syntax:
    content: public void can_create_a_manager_with_zero_inital_segments()
    content.vb: Public Sub can_create_a_manager_with_zero_inital_segments
  overload: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.can_create_a_manager_with_zero_inital_segments*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.BufferManagement.Tests
  commentId: N:EventStore.BufferManagement.Tests
  isExternal: false
  name: EventStore.BufferManagement.Tests
  nameWithType: EventStore.BufferManagement.Tests
  fullName: EventStore.BufferManagement.Tests
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<when_creating_a_buffer_manager>()
  nameWithType: ProtobufExtensions.Serialize<when_creating_a_buffer_manager>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.BufferManagement.Tests.when_creating_a_buffer_manager>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of when_creating_a_buffer_manager)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.BufferManagement.Tests.when_creating_a_buffer_manager)()
  name.vb: Serialize(Of when_creating_a_buffer_manager)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<when_creating_a_buffer_manager>
    nameWithType: ProtobufExtensions.Serialize<when_creating_a_buffer_manager>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.BufferManagement.Tests.when_creating_a_buffer_manager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of when_creating_a_buffer_manager)
    nameWithType: ProtobufExtensions.Serialize(Of when_creating_a_buffer_manager)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.BufferManagement.Tests.when_creating_a_buffer_manager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<when_creating_a_buffer_manager>()
  nameWithType: ProtobufExtensions.SerializeToArray<when_creating_a_buffer_manager>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.BufferManagement.Tests.when_creating_a_buffer_manager>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of when_creating_a_buffer_manager)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.BufferManagement.Tests.when_creating_a_buffer_manager)()
  name.vb: SerializeToArray(Of when_creating_a_buffer_manager)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<when_creating_a_buffer_manager>
    nameWithType: ProtobufExtensions.SerializeToArray<when_creating_a_buffer_manager>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.BufferManagement.Tests.when_creating_a_buffer_manager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of when_creating_a_buffer_manager)
    nameWithType: ProtobufExtensions.SerializeToArray(Of when_creating_a_buffer_manager)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.BufferManagement.Tests.when_creating_a_buffer_manager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_zero_chunk_size_causes_an_argumentexception*
  commentId: Overload:EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_zero_chunk_size_causes_an_argumentexception
  isExternal: false
  name: a_zero_chunk_size_causes_an_argumentexception
  nameWithType: when_creating_a_buffer_manager.a_zero_chunk_size_causes_an_argumentexception
  fullName: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_zero_chunk_size_causes_an_argumentexception
- uid: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_chunk_size_causes_an_argumentexception*
  commentId: Overload:EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_chunk_size_causes_an_argumentexception
  isExternal: false
  name: a_negative_chunk_size_causes_an_argumentexception
  nameWithType: when_creating_a_buffer_manager.a_negative_chunk_size_causes_an_argumentexception
  fullName: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_chunk_size_causes_an_argumentexception
- uid: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_chunks_per_segment_causes_an_argumentexception*
  commentId: Overload:EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_chunks_per_segment_causes_an_argumentexception
  isExternal: false
  name: a_negative_chunks_per_segment_causes_an_argumentexception
  nameWithType: when_creating_a_buffer_manager.a_negative_chunks_per_segment_causes_an_argumentexception
  fullName: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_chunks_per_segment_causes_an_argumentexception
- uid: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_zero_chunks_per_segment_causes_an_argumentexception*
  commentId: Overload:EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_zero_chunks_per_segment_causes_an_argumentexception
  isExternal: false
  name: a_zero_chunks_per_segment_causes_an_argumentexception
  nameWithType: when_creating_a_buffer_manager.a_zero_chunks_per_segment_causes_an_argumentexception
  fullName: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_zero_chunks_per_segment_causes_an_argumentexception
- uid: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_number_of_segments_causes_an_argumentexception*
  commentId: Overload:EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_number_of_segments_causes_an_argumentexception
  isExternal: false
  name: a_negative_number_of_segments_causes_an_argumentexception
  nameWithType: when_creating_a_buffer_manager.a_negative_number_of_segments_causes_an_argumentexception
  fullName: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.a_negative_number_of_segments_causes_an_argumentexception
- uid: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.can_create_a_manager_with_zero_inital_segments*
  commentId: Overload:EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.can_create_a_manager_with_zero_inital_segments
  isExternal: false
  name: can_create_a_manager_with_zero_inital_segments
  nameWithType: when_creating_a_buffer_manager.can_create_a_manager_with_zero_inital_segments
  fullName: EventStore.BufferManagement.Tests.when_creating_a_buffer_manager.can_create_a_manager_with_zero_inital_segments

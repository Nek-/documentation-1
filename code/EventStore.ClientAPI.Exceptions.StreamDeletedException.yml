### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.Exceptions.StreamDeletedException
  commentId: T:EventStore.ClientAPI.Exceptions.StreamDeletedException
  id: StreamDeletedException
  parent: EventStore.ClientAPI.Exceptions
  children:
  - EventStore.ClientAPI.Exceptions.StreamDeletedException.#ctor
  - EventStore.ClientAPI.Exceptions.StreamDeletedException.#ctor(System.String)
  - EventStore.ClientAPI.Exceptions.StreamDeletedException.Stream
  langs:
  - csharp
  - vb
  name: StreamDeletedException
  nameWithType: StreamDeletedException
  fullName: EventStore.ClientAPI.Exceptions.StreamDeletedException
  type: Class
  source:
    remote:
      path: src/EventStore.ClientAPI/Exceptions/StreamDeletedException.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: StreamDeletedException
    path: ../EventStore/src/EventStore.ClientAPI/Exceptions/StreamDeletedException.cs
    startLine: 8
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Exceptions
  summary: "\nException thrown if an operation is attempted on a stream which\nhas been deleted.\n"
  example: []
  syntax:
    content: 'public class StreamDeletedException : EventStoreConnectionException'
    content.vb: >-
      Public Class StreamDeletedException
          Inherits EventStoreConnectionException
  inheritance:
  - System.Object
  - EventStore.ClientAPI.Exceptions.EventStoreConnectionException
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.ClientAPI.Exceptions.StreamDeletedException.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.ClientAPI.Exceptions.StreamDeletedException.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.Exceptions.StreamDeletedException.Stream
  commentId: F:EventStore.ClientAPI.Exceptions.StreamDeletedException.Stream
  id: Stream
  parent: EventStore.ClientAPI.Exceptions.StreamDeletedException
  langs:
  - csharp
  - vb
  name: Stream
  nameWithType: StreamDeletedException.Stream
  fullName: EventStore.ClientAPI.Exceptions.StreamDeletedException.Stream
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Exceptions/StreamDeletedException.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Stream
    path: ../EventStore/src/EventStore.ClientAPI/Exceptions/StreamDeletedException.cs
    startLine: 13
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Exceptions
  summary: "\nThe name of the deleted stream.\n"
  example: []
  syntax:
    content: public readonly string Stream
    return:
      type: System.String
    content.vb: Public ReadOnly Stream As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Exceptions.StreamDeletedException.#ctor(System.String)
  commentId: M:EventStore.ClientAPI.Exceptions.StreamDeletedException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: EventStore.ClientAPI.Exceptions.StreamDeletedException
  langs:
  - csharp
  - vb
  name: StreamDeletedException(String)
  nameWithType: StreamDeletedException.StreamDeletedException(String)
  fullName: EventStore.ClientAPI.Exceptions.StreamDeletedException.StreamDeletedException(System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/Exceptions/StreamDeletedException.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/Exceptions/StreamDeletedException.cs
    startLine: 19
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Exceptions
  summary: "\nConstructs a new instance of <xref href=\"EventStore.ClientAPI.Exceptions.StreamDeletedException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public StreamDeletedException(string stream)
    parameters:
    - id: stream
      type: System.String
      description: The name of the deleted stream.
    content.vb: Public Sub New(stream As String)
  overload: EventStore.ClientAPI.Exceptions.StreamDeletedException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.Exceptions.StreamDeletedException.#ctor
  commentId: M:EventStore.ClientAPI.Exceptions.StreamDeletedException.#ctor
  id: '#ctor'
  parent: EventStore.ClientAPI.Exceptions.StreamDeletedException
  langs:
  - csharp
  - vb
  name: StreamDeletedException()
  nameWithType: StreamDeletedException.StreamDeletedException()
  fullName: EventStore.ClientAPI.Exceptions.StreamDeletedException.StreamDeletedException()
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/Exceptions/StreamDeletedException.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/Exceptions/StreamDeletedException.cs
    startLine: 29
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Exceptions
  summary: "\nConstructs a new instance of <xref href=\"EventStore.ClientAPI.Exceptions.StreamDeletedException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public StreamDeletedException()
    content.vb: Public Sub New
  overload: EventStore.ClientAPI.Exceptions.StreamDeletedException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI.Exceptions
  commentId: N:EventStore.ClientAPI.Exceptions
  isExternal: false
  name: EventStore.ClientAPI.Exceptions
  nameWithType: EventStore.ClientAPI.Exceptions
  fullName: EventStore.ClientAPI.Exceptions
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.ClientAPI.Exceptions.EventStoreConnectionException
  commentId: T:EventStore.ClientAPI.Exceptions.EventStoreConnectionException
  parent: EventStore.ClientAPI.Exceptions
  isExternal: false
  name: EventStoreConnectionException
  nameWithType: EventStoreConnectionException
  fullName: EventStore.ClientAPI.Exceptions.EventStoreConnectionException
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.Exceptions.StreamDeletedException.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<StreamDeletedException>()
  nameWithType: ProtobufExtensions.Serialize<StreamDeletedException>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.ClientAPI.Exceptions.StreamDeletedException>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of StreamDeletedException)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.ClientAPI.Exceptions.StreamDeletedException)()
  name.vb: Serialize(Of StreamDeletedException)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<StreamDeletedException>
    nameWithType: ProtobufExtensions.Serialize<StreamDeletedException>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.ClientAPI.Exceptions.StreamDeletedException>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of StreamDeletedException)
    nameWithType: ProtobufExtensions.Serialize(Of StreamDeletedException)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.ClientAPI.Exceptions.StreamDeletedException)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.Exceptions.StreamDeletedException.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<StreamDeletedException>()
  nameWithType: ProtobufExtensions.SerializeToArray<StreamDeletedException>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.ClientAPI.Exceptions.StreamDeletedException>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of StreamDeletedException)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.ClientAPI.Exceptions.StreamDeletedException)()
  name.vb: SerializeToArray(Of StreamDeletedException)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<StreamDeletedException>
    nameWithType: ProtobufExtensions.SerializeToArray<StreamDeletedException>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.ClientAPI.Exceptions.StreamDeletedException>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of StreamDeletedException)
    nameWithType: ProtobufExtensions.SerializeToArray(Of StreamDeletedException)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.ClientAPI.Exceptions.StreamDeletedException)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.ClientAPI.Exceptions.StreamDeletedException
  commentId: T:EventStore.ClientAPI.Exceptions.StreamDeletedException
  isExternal: false
  name: StreamDeletedException
  nameWithType: StreamDeletedException
  fullName: EventStore.ClientAPI.Exceptions.StreamDeletedException
- uid: EventStore.ClientAPI.Exceptions.StreamDeletedException.#ctor*
  commentId: Overload:EventStore.ClientAPI.Exceptions.StreamDeletedException.#ctor
  isExternal: false
  name: StreamDeletedException
  nameWithType: StreamDeletedException.StreamDeletedException
  fullName: EventStore.ClientAPI.Exceptions.StreamDeletedException.StreamDeletedException

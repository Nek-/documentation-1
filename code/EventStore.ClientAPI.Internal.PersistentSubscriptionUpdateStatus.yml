### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus
  commentId: T:EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus
  id: PersistentSubscriptionUpdateStatus
  parent: EventStore.ClientAPI.Internal
  children:
  - EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.AccessDenied
  - EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.Failure
  - EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.NotFound
  - EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.Success
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionUpdateStatus
  nameWithType: PersistentSubscriptionUpdateStatus
  fullName: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus
  type: Enum
  source:
    remote:
      path: src/EventStore.ClientAPI/Internal/PersistentSubscriptionUpdateStatus.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PersistentSubscriptionUpdateStatus
    path: ../EventStore/src/EventStore.ClientAPI/Internal/PersistentSubscriptionUpdateStatus.cs
    startLine: 5
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Internal
  summary: "\nEnumeration representing the status of a single subscription create message.\n"
  example: []
  syntax:
    content: 'public enum PersistentSubscriptionUpdateStatus : int'
    content.vb: Public Enum PersistentSubscriptionUpdateStatus As Integer
  extensionMethods:
  - EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.Success
  commentId: F:EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.Success
  id: Success
  parent: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: PersistentSubscriptionUpdateStatus.Success
  fullName: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.Success
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Internal/PersistentSubscriptionUpdateStatus.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Success
    path: ../EventStore/src/EventStore.ClientAPI/Internal/PersistentSubscriptionUpdateStatus.cs
    startLine: 10
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Internal
  summary: "\nThe subscription was created successfully\n"
  example: []
  syntax:
    content: Success = null
    return:
      type: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus
    content.vb: Success = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.NotFound
  commentId: F:EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.NotFound
  id: NotFound
  parent: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus
  langs:
  - csharp
  - vb
  name: NotFound
  nameWithType: PersistentSubscriptionUpdateStatus.NotFound
  fullName: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.NotFound
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Internal/PersistentSubscriptionUpdateStatus.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: NotFound
    path: ../EventStore/src/EventStore.ClientAPI/Internal/PersistentSubscriptionUpdateStatus.cs
    startLine: 14
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Internal
  summary: "\nThe subscription already exists\n"
  example: []
  syntax:
    content: NotFound = null
    return:
      type: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus
    content.vb: NotFound = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.Failure
  commentId: F:EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.Failure
  id: Failure
  parent: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus
  langs:
  - csharp
  - vb
  name: Failure
  nameWithType: PersistentSubscriptionUpdateStatus.Failure
  fullName: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.Failure
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Internal/PersistentSubscriptionUpdateStatus.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Failure
    path: ../EventStore/src/EventStore.ClientAPI/Internal/PersistentSubscriptionUpdateStatus.cs
    startLine: 18
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Internal
  summary: "\nSome failure happened creating the subscription\n"
  example: []
  syntax:
    content: Failure = null
    return:
      type: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus
    content.vb: Failure = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.AccessDenied
  commentId: F:EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.AccessDenied
  id: AccessDenied
  parent: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus
  langs:
  - csharp
  - vb
  name: AccessDenied
  nameWithType: PersistentSubscriptionUpdateStatus.AccessDenied
  fullName: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.AccessDenied
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Internal/PersistentSubscriptionUpdateStatus.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AccessDenied
    path: ../EventStore/src/EventStore.ClientAPI/Internal/PersistentSubscriptionUpdateStatus.cs
    startLine: 22
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Internal
  summary: "\nYou do not have permissions to update this subscription\n"
  example: []
  syntax:
    content: AccessDenied = null
    return:
      type: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus
    content.vb: AccessDenied = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.ClientAPI.Internal
  commentId: N:EventStore.ClientAPI.Internal
  isExternal: false
  name: EventStore.ClientAPI.Internal
  nameWithType: EventStore.ClientAPI.Internal
  fullName: EventStore.ClientAPI.Internal
- uid: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<PersistentSubscriptionUpdateStatus>()
  nameWithType: EnumExtensions.EnumValueName<PersistentSubscriptionUpdateStatus>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of PersistentSubscriptionUpdateStatus)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus)()
  name.vb: EnumValueName(Of PersistentSubscriptionUpdateStatus)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<PersistentSubscriptionUpdateStatus>
    nameWithType: EnumExtensions.EnumValueName<PersistentSubscriptionUpdateStatus>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of PersistentSubscriptionUpdateStatus)
    nameWithType: EnumExtensions.EnumValueName(Of PersistentSubscriptionUpdateStatus)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PersistentSubscriptionUpdateStatus>()
  nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionUpdateStatus>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PersistentSubscriptionUpdateStatus)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus)()
  name.vb: Serialize(Of PersistentSubscriptionUpdateStatus)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PersistentSubscriptionUpdateStatus>
    nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionUpdateStatus>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PersistentSubscriptionUpdateStatus)
    nameWithType: ProtobufExtensions.Serialize(Of PersistentSubscriptionUpdateStatus)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PersistentSubscriptionUpdateStatus>()
  nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionUpdateStatus>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionUpdateStatus)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus)()
  name.vb: SerializeToArray(Of PersistentSubscriptionUpdateStatus)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PersistentSubscriptionUpdateStatus>
    nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionUpdateStatus>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PersistentSubscriptionUpdateStatus)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionUpdateStatus)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  isExternal: false
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  isExternal: false
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  isExternal: false
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus
  commentId: T:EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus
  parent: EventStore.ClientAPI.Internal
  isExternal: false
  name: PersistentSubscriptionUpdateStatus
  nameWithType: PersistentSubscriptionUpdateStatus
  fullName: EventStore.ClientAPI.Internal.PersistentSubscriptionUpdateStatus

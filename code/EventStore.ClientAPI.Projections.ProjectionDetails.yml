### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.Projections.ProjectionDetails
  commentId: T:EventStore.ClientAPI.Projections.ProjectionDetails
  id: ProjectionDetails
  parent: EventStore.ClientAPI.Projections
  children:
  - EventStore.ClientAPI.Projections.ProjectionDetails.#ctor(System.Int64,System.Int64,System.Int64,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Single,System.String,System.Int64,Uri,Uri,Uri,Uri,Uri,Uri,System.String,System.Int64,System.Int32,System.Int32)
  - EventStore.ClientAPI.Projections.ProjectionDetails.BufferedEvents
  - EventStore.ClientAPI.Projections.ProjectionDetails.CheckpointStatus
  - EventStore.ClientAPI.Projections.ProjectionDetails.CoreProcessingTime
  - EventStore.ClientAPI.Projections.ProjectionDetails.DisableCommandUrl
  - EventStore.ClientAPI.Projections.ProjectionDetails.EffectiveName
  - EventStore.ClientAPI.Projections.ProjectionDetails.EnableCommandUrl
  - EventStore.ClientAPI.Projections.ProjectionDetails.Epoch
  - EventStore.ClientAPI.Projections.ProjectionDetails.EventsProcessedAfterRestart
  - EventStore.ClientAPI.Projections.ProjectionDetails.LastCheckpoint
  - EventStore.ClientAPI.Projections.ProjectionDetails.Mode
  - EventStore.ClientAPI.Projections.ProjectionDetails.Name
  - EventStore.ClientAPI.Projections.ProjectionDetails.PartitionsCached
  - EventStore.ClientAPI.Projections.ProjectionDetails.Position
  - EventStore.ClientAPI.Projections.ProjectionDetails.Progress
  - EventStore.ClientAPI.Projections.ProjectionDetails.QueryUrl
  - EventStore.ClientAPI.Projections.ProjectionDetails.ReadsInProgress
  - EventStore.ClientAPI.Projections.ProjectionDetails.ResultUrl
  - EventStore.ClientAPI.Projections.ProjectionDetails.StateReason
  - EventStore.ClientAPI.Projections.ProjectionDetails.StateUrl
  - EventStore.ClientAPI.Projections.ProjectionDetails.Status
  - EventStore.ClientAPI.Projections.ProjectionDetails.StatusUrl
  - EventStore.ClientAPI.Projections.ProjectionDetails.Version
  - EventStore.ClientAPI.Projections.ProjectionDetails.WritePendingEventsAfterCheckpoint
  - EventStore.ClientAPI.Projections.ProjectionDetails.WritePendingEventsBeforeCheckpoint
  - EventStore.ClientAPI.Projections.ProjectionDetails.WritesInProgress
  langs:
  - csharp
  - vb
  name: ProjectionDetails
  nameWithType: ProjectionDetails
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails
  type: Class
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ProjectionDetails
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 7
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nProvides the details for a projection.\n"
  example: []
  syntax:
    content: 'public sealed class ProjectionDetails : object'
    content.vb: >-
      Public NotInheritable Class ProjectionDetails
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.ClientAPI.Projections.ProjectionDetails.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.ClientAPI.Projections.ProjectionDetails.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.CoreProcessingTime
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.CoreProcessingTime
  id: CoreProcessingTime
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: CoreProcessingTime
  nameWithType: ProjectionDetails.CoreProcessingTime
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.CoreProcessingTime
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CoreProcessingTime
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 12
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe CoreProcessingTime\n"
  example: []
  syntax:
    content: public readonly long CoreProcessingTime
    return:
      type: System.Int64
    content.vb: Public ReadOnly CoreProcessingTime As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.Version
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.Version
  id: Version
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ProjectionDetails.Version
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.Version
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Version
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 17
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection version\n"
  example: []
  syntax:
    content: public readonly long Version
    return:
      type: System.Int64
    content.vb: Public ReadOnly Version As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.Epoch
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.Epoch
  id: Epoch
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: Epoch
  nameWithType: ProjectionDetails.Epoch
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.Epoch
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Epoch
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 22
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe Epoch\n"
  example: []
  syntax:
    content: public readonly long Epoch
    return:
      type: System.Int64
    content.vb: Public ReadOnly Epoch As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.EffectiveName
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.EffectiveName
  id: EffectiveName
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: EffectiveName
  nameWithType: ProjectionDetails.EffectiveName
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.EffectiveName
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EffectiveName
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 27
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection EffectiveName\n"
  example: []
  syntax:
    content: public readonly string EffectiveName
    return:
      type: System.String
    content.vb: Public ReadOnly EffectiveName As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.WritesInProgress
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.WritesInProgress
  id: WritesInProgress
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: WritesInProgress
  nameWithType: ProjectionDetails.WritesInProgress
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.WritesInProgress
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WritesInProgress
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 32
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection WritesInProgress\n"
  example: []
  syntax:
    content: public readonly int WritesInProgress
    return:
      type: System.Int32
    content.vb: Public ReadOnly WritesInProgress As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.ReadsInProgress
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.ReadsInProgress
  id: ReadsInProgress
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: ReadsInProgress
  nameWithType: ProjectionDetails.ReadsInProgress
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.ReadsInProgress
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadsInProgress
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 37
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection ReadsInProgress\n"
  example: []
  syntax:
    content: public readonly int ReadsInProgress
    return:
      type: System.Int32
    content.vb: Public ReadOnly ReadsInProgress As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.PartitionsCached
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.PartitionsCached
  id: PartitionsCached
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: PartitionsCached
  nameWithType: ProjectionDetails.PartitionsCached
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.PartitionsCached
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PartitionsCached
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 42
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection PartitionsCached\n"
  example: []
  syntax:
    content: public readonly int PartitionsCached
    return:
      type: System.Int32
    content.vb: Public ReadOnly PartitionsCached As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.Status
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.Status
  id: Status
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ProjectionDetails.Status
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.Status
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Status
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 47
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection Status\n"
  example: []
  syntax:
    content: public readonly string Status
    return:
      type: System.String
    content.vb: Public ReadOnly Status As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.StateReason
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.StateReason
  id: StateReason
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: StateReason
  nameWithType: ProjectionDetails.StateReason
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.StateReason
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StateReason
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 52
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection StateReason\n"
  example: []
  syntax:
    content: public readonly string StateReason
    return:
      type: System.String
    content.vb: Public ReadOnly StateReason As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.Name
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.Name
  id: Name
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ProjectionDetails.Name
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.Name
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Name
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 57
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection Name\n"
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.Mode
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.Mode
  id: Mode
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: ProjectionDetails.Mode
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.Mode
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Mode
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 62
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection Mode\n"
  example: []
  syntax:
    content: public readonly string Mode
    return:
      type: System.String
    content.vb: Public ReadOnly Mode As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.Position
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.Position
  id: Position
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ProjectionDetails.Position
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.Position
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Position
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 67
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection Position\n"
  example: []
  syntax:
    content: public readonly string Position
    return:
      type: System.String
    content.vb: Public ReadOnly Position As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.Progress
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.Progress
  id: Progress
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: ProjectionDetails.Progress
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.Progress
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Progress
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 72
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection Progress\n"
  example: []
  syntax:
    content: public readonly float Progress
    return:
      type: System.Single
    content.vb: Public ReadOnly Progress As Single
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.LastCheckpoint
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.LastCheckpoint
  id: LastCheckpoint
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: LastCheckpoint
  nameWithType: ProjectionDetails.LastCheckpoint
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.LastCheckpoint
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: LastCheckpoint
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 77
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nLastCheckpoint\n"
  example: []
  syntax:
    content: public readonly string LastCheckpoint
    return:
      type: System.String
    content.vb: Public ReadOnly LastCheckpoint As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.EventsProcessedAfterRestart
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.EventsProcessedAfterRestart
  id: EventsProcessedAfterRestart
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: EventsProcessedAfterRestart
  nameWithType: ProjectionDetails.EventsProcessedAfterRestart
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.EventsProcessedAfterRestart
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EventsProcessedAfterRestart
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 82
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection EventsProcessedAfterRestart\n"
  example: []
  syntax:
    content: public readonly long EventsProcessedAfterRestart
    return:
      type: System.Int64
    content.vb: Public ReadOnly EventsProcessedAfterRestart As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.StatusUrl
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.StatusUrl
  id: StatusUrl
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: StatusUrl
  nameWithType: ProjectionDetails.StatusUrl
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.StatusUrl
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StatusUrl
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 87
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection StatusUrl\n"
  example: []
  syntax:
    content: public readonly Uri StatusUrl
    return:
      type: Uri
    content.vb: Public ReadOnly StatusUrl As Uri
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.StateUrl
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.StateUrl
  id: StateUrl
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: StateUrl
  nameWithType: ProjectionDetails.StateUrl
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.StateUrl
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StateUrl
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 92
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection StateUrl\n"
  example: []
  syntax:
    content: public readonly Uri StateUrl
    return:
      type: Uri
    content.vb: Public ReadOnly StateUrl As Uri
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.ResultUrl
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.ResultUrl
  id: ResultUrl
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: ResultUrl
  nameWithType: ProjectionDetails.ResultUrl
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.ResultUrl
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ResultUrl
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 97
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection ResultUrl\n"
  example: []
  syntax:
    content: public readonly Uri ResultUrl
    return:
      type: Uri
    content.vb: Public ReadOnly ResultUrl As Uri
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.QueryUrl
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.QueryUrl
  id: QueryUrl
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: QueryUrl
  nameWithType: ProjectionDetails.QueryUrl
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.QueryUrl
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: QueryUrl
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 102
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection QueryUrl\n"
  example: []
  syntax:
    content: public readonly Uri QueryUrl
    return:
      type: Uri
    content.vb: Public ReadOnly QueryUrl As Uri
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.EnableCommandUrl
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.EnableCommandUrl
  id: EnableCommandUrl
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: EnableCommandUrl
  nameWithType: ProjectionDetails.EnableCommandUrl
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.EnableCommandUrl
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EnableCommandUrl
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 107
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection EnableCommandUrl\n"
  example: []
  syntax:
    content: public readonly Uri EnableCommandUrl
    return:
      type: Uri
    content.vb: Public ReadOnly EnableCommandUrl As Uri
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.DisableCommandUrl
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.DisableCommandUrl
  id: DisableCommandUrl
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: DisableCommandUrl
  nameWithType: ProjectionDetails.DisableCommandUrl
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.DisableCommandUrl
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DisableCommandUrl
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 112
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection DisableCommandUrl\n"
  example: []
  syntax:
    content: public readonly Uri DisableCommandUrl
    return:
      type: Uri
    content.vb: Public ReadOnly DisableCommandUrl As Uri
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.CheckpointStatus
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.CheckpointStatus
  id: CheckpointStatus
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: CheckpointStatus
  nameWithType: ProjectionDetails.CheckpointStatus
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.CheckpointStatus
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CheckpointStatus
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 117
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection CheckpointStatus\n"
  example: []
  syntax:
    content: public readonly string CheckpointStatus
    return:
      type: System.String
    content.vb: Public ReadOnly CheckpointStatus As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.BufferedEvents
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.BufferedEvents
  id: BufferedEvents
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: BufferedEvents
  nameWithType: ProjectionDetails.BufferedEvents
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.BufferedEvents
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: BufferedEvents
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 122
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection BufferedEvents\n"
  example: []
  syntax:
    content: public readonly long BufferedEvents
    return:
      type: System.Int64
    content.vb: Public ReadOnly BufferedEvents As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.WritePendingEventsBeforeCheckpoint
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.WritePendingEventsBeforeCheckpoint
  id: WritePendingEventsBeforeCheckpoint
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: WritePendingEventsBeforeCheckpoint
  nameWithType: ProjectionDetails.WritePendingEventsBeforeCheckpoint
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.WritePendingEventsBeforeCheckpoint
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WritePendingEventsBeforeCheckpoint
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 127
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection WritePendingEventsBeforeCheckpoint\n"
  example: []
  syntax:
    content: public readonly int WritePendingEventsBeforeCheckpoint
    return:
      type: System.Int32
    content.vb: Public ReadOnly WritePendingEventsBeforeCheckpoint As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.WritePendingEventsAfterCheckpoint
  commentId: F:EventStore.ClientAPI.Projections.ProjectionDetails.WritePendingEventsAfterCheckpoint
  id: WritePendingEventsAfterCheckpoint
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: WritePendingEventsAfterCheckpoint
  nameWithType: ProjectionDetails.WritePendingEventsAfterCheckpoint
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.WritePendingEventsAfterCheckpoint
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WritePendingEventsAfterCheckpoint
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 132
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nThe projection WritePendingEventsAfterCheckpoint\n"
  example: []
  syntax:
    content: public readonly int WritePendingEventsAfterCheckpoint
    return:
      type: System.Int32
    content.vb: Public ReadOnly WritePendingEventsAfterCheckpoint As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.#ctor(System.Int64,System.Int64,System.Int64,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Single,System.String,System.Int64,Uri,Uri,Uri,Uri,Uri,Uri,System.String,System.Int64,System.Int32,System.Int32)
  commentId: M:EventStore.ClientAPI.Projections.ProjectionDetails.#ctor(System.Int64,System.Int64,System.Int64,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Single,System.String,System.Int64,Uri,Uri,Uri,Uri,Uri,Uri,System.String,System.Int64,System.Int32,System.Int32)
  id: '#ctor(System.Int64,System.Int64,System.Int64,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Single,System.String,System.Int64,Uri,Uri,Uri,Uri,Uri,Uri,System.String,System.Int64,System.Int32,System.Int32)'
  parent: EventStore.ClientAPI.Projections.ProjectionDetails
  langs:
  - csharp
  - vb
  name: ProjectionDetails(Int64, Int64, Int64, String, Int32, Int32, Int32, String, String, String, String, String, Single, String, Int64, Uri, Uri, Uri, Uri, Uri, Uri, String, Int64, Int32, Int32)
  nameWithType: ProjectionDetails.ProjectionDetails(Int64, Int64, Int64, String, Int32, Int32, Int32, String, String, String, String, String, Single, String, Int64, Uri, Uri, Uri, Uri, Uri, Uri, String, Int64, Int32, Int32)
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.ProjectionDetails(System.Int64, System.Int64, System.Int64, System.String, System.Int32, System.Int32, System.Int32, System.String, System.String, System.String, System.String, System.String, System.Single, System.String, System.Int64, Uri, Uri, Uri, Uri, Uri, Uri, System.String, System.Int64, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/Projections/ProjectionDetails.cs
    startLine: 162
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\ncreate a new <xref href=\"EventStore.ClientAPI.Projections.ProjectionDetails\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ProjectionDetails(long coreProcessingTime, long version, long epoch, string effectiveName, int writesInProgress, int readsInProgress, int partitionsCached, string status, string stateReason, string name, string mode, string position, float progress, string lastCheckpoint, long eventsProcessedAfterRestart, Uri statusUrl, Uri stateUrl, Uri resultUrl, Uri queryUrl, Uri enableCommandUrl, Uri disableCommandUrl, string checkpointStatus, long bufferedEvents, int writePendingEventsBeforeCheckpoint, int writePendingEventsAfterCheckpoint)
    parameters:
    - id: coreProcessingTime
      type: System.Int64
      description: ''
    - id: version
      type: System.Int64
      description: ''
    - id: epoch
      type: System.Int64
      description: ''
    - id: effectiveName
      type: System.String
      description: ''
    - id: writesInProgress
      type: System.Int32
      description: ''
    - id: readsInProgress
      type: System.Int32
      description: ''
    - id: partitionsCached
      type: System.Int32
      description: ''
    - id: status
      type: System.String
      description: ''
    - id: stateReason
      type: System.String
      description: ''
    - id: name
      type: System.String
      description: ''
    - id: mode
      type: System.String
      description: ''
    - id: position
      type: System.String
      description: ''
    - id: progress
      type: System.Single
      description: ''
    - id: lastCheckpoint
      type: System.String
      description: ''
    - id: eventsProcessedAfterRestart
      type: System.Int64
      description: ''
    - id: statusUrl
      type: Uri
      description: ''
    - id: stateUrl
      type: Uri
      description: ''
    - id: resultUrl
      type: Uri
      description: ''
    - id: queryUrl
      type: Uri
      description: ''
    - id: enableCommandUrl
      type: Uri
      description: ''
    - id: disableCommandUrl
      type: Uri
      description: ''
    - id: checkpointStatus
      type: System.String
      description: ''
    - id: bufferedEvents
      type: System.Int64
      description: ''
    - id: writePendingEventsBeforeCheckpoint
      type: System.Int32
      description: ''
    - id: writePendingEventsAfterCheckpoint
      type: System.Int32
      description: ''
    content.vb: Public Sub New(coreProcessingTime As Long, version As Long, epoch As Long, effectiveName As String, writesInProgress As Integer, readsInProgress As Integer, partitionsCached As Integer, status As String, stateReason As String, name As String, mode As String, position As String, progress As Single, lastCheckpoint As String, eventsProcessedAfterRestart As Long, statusUrl As Uri, stateUrl As Uri, resultUrl As Uri, queryUrl As Uri, enableCommandUrl As Uri, disableCommandUrl As Uri, checkpointStatus As String, bufferedEvents As Long, writePendingEventsBeforeCheckpoint As Integer, writePendingEventsAfterCheckpoint As Integer)
  overload: EventStore.ClientAPI.Projections.ProjectionDetails.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI.Projections
  commentId: N:EventStore.ClientAPI.Projections
  isExternal: false
  name: EventStore.ClientAPI.Projections
  nameWithType: EventStore.ClientAPI.Projections
  fullName: EventStore.ClientAPI.Projections
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ProjectionDetails>()
  nameWithType: ProtobufExtensions.Serialize<ProjectionDetails>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.ClientAPI.Projections.ProjectionDetails>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ProjectionDetails)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.ClientAPI.Projections.ProjectionDetails)()
  name.vb: Serialize(Of ProjectionDetails)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ProjectionDetails>
    nameWithType: ProtobufExtensions.Serialize<ProjectionDetails>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.ClientAPI.Projections.ProjectionDetails>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ProjectionDetails)
    nameWithType: ProtobufExtensions.Serialize(Of ProjectionDetails)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.ClientAPI.Projections.ProjectionDetails)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ProjectionDetails>()
  nameWithType: ProtobufExtensions.SerializeToArray<ProjectionDetails>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.ClientAPI.Projections.ProjectionDetails>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ProjectionDetails)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.ClientAPI.Projections.ProjectionDetails)()
  name.vb: SerializeToArray(Of ProjectionDetails)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ProjectionDetails>
    nameWithType: ProtobufExtensions.SerializeToArray<ProjectionDetails>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.ClientAPI.Projections.ProjectionDetails>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ProjectionDetails)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ProjectionDetails)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.ClientAPI.Projections.ProjectionDetails)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: EventStore.ClientAPI.Projections.ProjectionDetails
  commentId: T:EventStore.ClientAPI.Projections.ProjectionDetails
  isExternal: false
  name: ProjectionDetails
  nameWithType: ProjectionDetails
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails
- uid: EventStore.ClientAPI.Projections.ProjectionDetails.#ctor*
  commentId: Overload:EventStore.ClientAPI.Projections.ProjectionDetails.#ctor
  isExternal: false
  name: ProjectionDetails
  nameWithType: ProjectionDetails.ProjectionDetails
  fullName: EventStore.ClientAPI.Projections.ProjectionDetails.ProjectionDetails

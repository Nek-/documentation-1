### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.SystemSettings
  commentId: T:EventStore.ClientAPI.SystemSettings
  id: SystemSettings
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.SystemSettings.#ctor(EventStore.ClientAPI.StreamAcl,EventStore.ClientAPI.StreamAcl)
  - EventStore.ClientAPI.SystemSettings.FromJsonBytes(System.Byte[])
  - EventStore.ClientAPI.SystemSettings.SystemStreamAcl
  - EventStore.ClientAPI.SystemSettings.ToJsonBytes
  - EventStore.ClientAPI.SystemSettings.ToJsonString
  - EventStore.ClientAPI.SystemSettings.ToString
  - EventStore.ClientAPI.SystemSettings.UserStreamAcl
  langs:
  - csharp
  - vb
  name: SystemSettings
  nameWithType: SystemSettings
  fullName: EventStore.ClientAPI.SystemSettings
  type: Class
  source:
    remote:
      path: src/EventStore.ClientAPI/SystemSettings.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SystemSettings
    path: ../EventStore/src/EventStore.ClientAPI/SystemSettings.cs
    startLine: 12
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRepresents global settings for an Event Store server.\n"
  example: []
  syntax:
    content: 'public class SystemSettings : object'
    content.vb: >-
      Public Class SystemSettings

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.ClientAPI.SystemSettings.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.ClientAPI.SystemSettings.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.SystemSettings.UserStreamAcl
  commentId: F:EventStore.ClientAPI.SystemSettings.UserStreamAcl
  id: UserStreamAcl
  parent: EventStore.ClientAPI.SystemSettings
  langs:
  - csharp
  - vb
  name: UserStreamAcl
  nameWithType: SystemSettings.UserStreamAcl
  fullName: EventStore.ClientAPI.SystemSettings.UserStreamAcl
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/SystemSettings.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: UserStreamAcl
    path: ../EventStore/src/EventStore.ClientAPI/SystemSettings.cs
    startLine: 17
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nDefault access control list for new user streams.\n"
  example: []
  syntax:
    content: public readonly StreamAcl UserStreamAcl
    return:
      type: EventStore.ClientAPI.StreamAcl
    content.vb: Public ReadOnly UserStreamAcl As StreamAcl
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.SystemSettings.SystemStreamAcl
  commentId: F:EventStore.ClientAPI.SystemSettings.SystemStreamAcl
  id: SystemStreamAcl
  parent: EventStore.ClientAPI.SystemSettings
  langs:
  - csharp
  - vb
  name: SystemStreamAcl
  nameWithType: SystemSettings.SystemStreamAcl
  fullName: EventStore.ClientAPI.SystemSettings.SystemStreamAcl
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/SystemSettings.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SystemStreamAcl
    path: ../EventStore/src/EventStore.ClientAPI/SystemSettings.cs
    startLine: 21
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nDefault access control list for new system streams.\n"
  example: []
  syntax:
    content: public readonly StreamAcl SystemStreamAcl
    return:
      type: EventStore.ClientAPI.StreamAcl
    content.vb: Public ReadOnly SystemStreamAcl As StreamAcl
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.SystemSettings.#ctor(EventStore.ClientAPI.StreamAcl,EventStore.ClientAPI.StreamAcl)
  commentId: M:EventStore.ClientAPI.SystemSettings.#ctor(EventStore.ClientAPI.StreamAcl,EventStore.ClientAPI.StreamAcl)
  id: '#ctor(EventStore.ClientAPI.StreamAcl,EventStore.ClientAPI.StreamAcl)'
  parent: EventStore.ClientAPI.SystemSettings
  langs:
  - csharp
  - vb
  name: SystemSettings(StreamAcl, StreamAcl)
  nameWithType: SystemSettings.SystemSettings(StreamAcl, StreamAcl)
  fullName: EventStore.ClientAPI.SystemSettings.SystemSettings(EventStore.ClientAPI.StreamAcl, EventStore.ClientAPI.StreamAcl)
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/SystemSettings.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/SystemSettings.cs
    startLine: 28
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nConstructs a new <xref href=\"EventStore.ClientAPI.SystemSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public SystemSettings(StreamAcl userStreamAcl, StreamAcl systemStreamAcl)
    parameters:
    - id: userStreamAcl
      type: EventStore.ClientAPI.StreamAcl
      description: ''
    - id: systemStreamAcl
      type: EventStore.ClientAPI.StreamAcl
      description: ''
    content.vb: Public Sub New(userStreamAcl As StreamAcl, systemStreamAcl As StreamAcl)
  overload: EventStore.ClientAPI.SystemSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.SystemSettings.ToString
  commentId: M:EventStore.ClientAPI.SystemSettings.ToString
  id: ToString
  parent: EventStore.ClientAPI.SystemSettings
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SystemSettings.ToString()
  fullName: EventStore.ClientAPI.SystemSettings.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/SystemSettings.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.ClientAPI/SystemSettings.cs
    startLine: 41
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nReturns a string that represents the current object.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA string that represents the current object.\n"
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.ClientAPI.SystemSettings.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.ClientAPI.SystemSettings.FromJsonBytes(System.Byte[])
  commentId: M:EventStore.ClientAPI.SystemSettings.FromJsonBytes(System.Byte[])
  id: FromJsonBytes(System.Byte[])
  parent: EventStore.ClientAPI.SystemSettings
  langs:
  - csharp
  - vb
  name: FromJsonBytes(Byte[])
  nameWithType: SystemSettings.FromJsonBytes(Byte[])
  fullName: EventStore.ClientAPI.SystemSettings.FromJsonBytes(System.Byte[])
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/SystemSettings.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: FromJsonBytes
    path: ../EventStore/src/EventStore.ClientAPI/SystemSettings.cs
    startLine: 52
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nCreates a <xref href=\"EventStore.ClientAPI.SystemSettings\" data-throw-if-not-resolved=\"false\"></xref> object from a JSON string\nin a byte array.\n"
  example: []
  syntax:
    content: public static SystemSettings FromJsonBytes(byte[] json)
    parameters:
    - id: json
      type: System.Byte[]
      description: Byte array containing a JSON string.
    return:
      type: EventStore.ClientAPI.SystemSettings
      description: A <xref href="EventStore.ClientAPI.SystemSettings" data-throw-if-not-resolved="false"></xref> object.
    content.vb: Public Shared Function FromJsonBytes(json As Byte()) As SystemSettings
  overload: EventStore.ClientAPI.SystemSettings.FromJsonBytes*
  nameWithType.vb: SystemSettings.FromJsonBytes(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.ClientAPI.SystemSettings.FromJsonBytes(System.Byte())
  name.vb: FromJsonBytes(Byte())
- uid: EventStore.ClientAPI.SystemSettings.ToJsonBytes
  commentId: M:EventStore.ClientAPI.SystemSettings.ToJsonBytes
  id: ToJsonBytes
  parent: EventStore.ClientAPI.SystemSettings
  langs:
  - csharp
  - vb
  name: ToJsonBytes()
  nameWithType: SystemSettings.ToJsonBytes()
  fullName: EventStore.ClientAPI.SystemSettings.ToJsonBytes()
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/SystemSettings.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ToJsonBytes
    path: ../EventStore/src/EventStore.ClientAPI/SystemSettings.cs
    startLine: 103
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nCreates a byte array containing a UTF-8 string with no byte order\nmark representing this <xref href=\"EventStore.ClientAPI.SystemSettings\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public byte[] ToJsonBytes()
    return:
      type: System.Byte[]
      description: A byte array containing a UTF-8 string with no byte order mark.
    content.vb: Public Function ToJsonBytes As Byte()
  overload: EventStore.ClientAPI.SystemSettings.ToJsonBytes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.SystemSettings.ToJsonString
  commentId: M:EventStore.ClientAPI.SystemSettings.ToJsonString
  id: ToJsonString
  parent: EventStore.ClientAPI.SystemSettings
  langs:
  - csharp
  - vb
  name: ToJsonString()
  nameWithType: SystemSettings.ToJsonString()
  fullName: EventStore.ClientAPI.SystemSettings.ToJsonString()
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/SystemSettings.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ToJsonString
    path: ../EventStore/src/EventStore.ClientAPI/SystemSettings.cs
    startLine: 120
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nCreates a string containing representing this <xref href=\"EventStore.ClientAPI.SystemSettings\" data-throw-if-not-resolved=\"false\"></xref>\nobject.\n"
  example: []
  syntax:
    content: public string ToJsonString()
    return:
      type: System.String
      description: A string representing this <xref href="EventStore.ClientAPI.SystemSettings" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function ToJsonString As String
  overload: EventStore.ClientAPI.SystemSettings.ToJsonString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  isExternal: false
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.SystemSettings.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<SystemSettings>()
  nameWithType: ProtobufExtensions.Serialize<SystemSettings>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.ClientAPI.SystemSettings>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of SystemSettings)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.ClientAPI.SystemSettings)()
  name.vb: Serialize(Of SystemSettings)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<SystemSettings>
    nameWithType: ProtobufExtensions.Serialize<SystemSettings>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.ClientAPI.SystemSettings>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of SystemSettings)
    nameWithType: ProtobufExtensions.Serialize(Of SystemSettings)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.ClientAPI.SystemSettings)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.SystemSettings.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<SystemSettings>()
  nameWithType: ProtobufExtensions.SerializeToArray<SystemSettings>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.ClientAPI.SystemSettings>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of SystemSettings)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.ClientAPI.SystemSettings)()
  name.vb: SerializeToArray(Of SystemSettings)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<SystemSettings>
    nameWithType: ProtobufExtensions.SerializeToArray<SystemSettings>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.ClientAPI.SystemSettings>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of SystemSettings)
    nameWithType: ProtobufExtensions.SerializeToArray(Of SystemSettings)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.ClientAPI.SystemSettings)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.ClientAPI.StreamAcl
  commentId: T:EventStore.ClientAPI.StreamAcl
  parent: EventStore.ClientAPI
  isExternal: false
  name: StreamAcl
  nameWithType: StreamAcl
  fullName: EventStore.ClientAPI.StreamAcl
- uid: EventStore.ClientAPI.SystemSettings
  commentId: T:EventStore.ClientAPI.SystemSettings
  parent: EventStore.ClientAPI
  isExternal: false
  name: SystemSettings
  nameWithType: SystemSettings
  fullName: EventStore.ClientAPI.SystemSettings
- uid: EventStore.ClientAPI.SystemSettings.#ctor*
  commentId: Overload:EventStore.ClientAPI.SystemSettings.#ctor
  isExternal: false
  name: SystemSettings
  nameWithType: SystemSettings.SystemSettings
  fullName: EventStore.ClientAPI.SystemSettings.SystemSettings
- uid: EventStore.ClientAPI.SystemSettings.ToString*
  commentId: Overload:EventStore.ClientAPI.SystemSettings.ToString
  isExternal: false
  name: ToString
  nameWithType: SystemSettings.ToString
  fullName: EventStore.ClientAPI.SystemSettings.ToString
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.ClientAPI.SystemSettings.FromJsonBytes*
  commentId: Overload:EventStore.ClientAPI.SystemSettings.FromJsonBytes
  isExternal: false
  name: FromJsonBytes
  nameWithType: SystemSettings.FromJsonBytes
  fullName: EventStore.ClientAPI.SystemSettings.FromJsonBytes
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.ClientAPI.SystemSettings.ToJsonBytes*
  commentId: Overload:EventStore.ClientAPI.SystemSettings.ToJsonBytes
  isExternal: false
  name: ToJsonBytes
  nameWithType: SystemSettings.ToJsonBytes
  fullName: EventStore.ClientAPI.SystemSettings.ToJsonBytes
- uid: EventStore.ClientAPI.SystemSettings.ToJsonString*
  commentId: Overload:EventStore.ClientAPI.SystemSettings.ToJsonString
  isExternal: false
  name: ToJsonString
  nameWithType: SystemSettings.ToJsonString
  fullName: EventStore.ClientAPI.SystemSettings.ToJsonString

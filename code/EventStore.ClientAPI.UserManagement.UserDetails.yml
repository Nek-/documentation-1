### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.UserManagement.UserDetails
  commentId: T:EventStore.ClientAPI.UserManagement.UserDetails
  id: UserDetails
  parent: EventStore.ClientAPI.UserManagement
  children:
  - EventStore.ClientAPI.UserManagement.UserDetails.#ctor(System.String,System.String,System.String[],System.Boolean,System.Nullable{DateTimeOffset},EventStore.ClientAPI.UserManagement.RelLink[])
  - EventStore.ClientAPI.UserManagement.UserDetails.DateLastUpdated
  - EventStore.ClientAPI.UserManagement.UserDetails.Disabled
  - EventStore.ClientAPI.UserManagement.UserDetails.FullName
  - EventStore.ClientAPI.UserManagement.UserDetails.GetRelLink(System.String)
  - EventStore.ClientAPI.UserManagement.UserDetails.Groups
  - EventStore.ClientAPI.UserManagement.UserDetails.Links
  - EventStore.ClientAPI.UserManagement.UserDetails.LoginName
  langs:
  - csharp
  - vb
  name: UserDetails
  nameWithType: UserDetails
  fullName: EventStore.ClientAPI.UserManagement.UserDetails
  type: Class
  source:
    remote:
      path: src/EventStore.ClientAPI/UserManagement/UserDetails.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: UserDetails
    path: ../EventStore/src/EventStore.ClientAPI/UserManagement/UserDetails.cs
    startLine: 8
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.UserManagement
  summary: "\nProvides the details for a user.\n"
  example: []
  syntax:
    content: 'public sealed class UserDetails : object'
    content.vb: >-
      Public NotInheritable Class UserDetails
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.ClientAPI.UserManagement.UserDetails.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.ClientAPI.UserManagement.UserDetails.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.ClientAPI.UserManagement.UserDetails.LoginName
  commentId: F:EventStore.ClientAPI.UserManagement.UserDetails.LoginName
  id: LoginName
  parent: EventStore.ClientAPI.UserManagement.UserDetails
  langs:
  - csharp
  - vb
  name: LoginName
  nameWithType: UserDetails.LoginName
  fullName: EventStore.ClientAPI.UserManagement.UserDetails.LoginName
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/UserManagement/UserDetails.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: LoginName
    path: ../EventStore/src/EventStore.ClientAPI/UserManagement/UserDetails.cs
    startLine: 13
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.UserManagement
  summary: "\nThe users login name.\n"
  example: []
  syntax:
    content: public readonly string LoginName
    return:
      type: System.String
    content.vb: Public ReadOnly LoginName As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.UserManagement.UserDetails.FullName
  commentId: F:EventStore.ClientAPI.UserManagement.UserDetails.FullName
  id: FullName
  parent: EventStore.ClientAPI.UserManagement.UserDetails
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: UserDetails.FullName
  fullName: EventStore.ClientAPI.UserManagement.UserDetails.FullName
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/UserManagement/UserDetails.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: FullName
    path: ../EventStore/src/EventStore.ClientAPI/UserManagement/UserDetails.cs
    startLine: 18
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.UserManagement
  summary: "\nThe full name of the user.\n"
  example: []
  syntax:
    content: public readonly string FullName
    return:
      type: System.String
    content.vb: Public ReadOnly FullName As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.UserManagement.UserDetails.Groups
  commentId: F:EventStore.ClientAPI.UserManagement.UserDetails.Groups
  id: Groups
  parent: EventStore.ClientAPI.UserManagement.UserDetails
  langs:
  - csharp
  - vb
  name: Groups
  nameWithType: UserDetails.Groups
  fullName: EventStore.ClientAPI.UserManagement.UserDetails.Groups
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/UserManagement/UserDetails.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Groups
    path: ../EventStore/src/EventStore.ClientAPI/UserManagement/UserDetails.cs
    startLine: 23
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.UserManagement
  summary: "\nThe groups the user is a member of.\n"
  example: []
  syntax:
    content: public readonly string[] Groups
    return:
      type: System.String[]
    content.vb: Public ReadOnly Groups As String()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.UserManagement.UserDetails.DateLastUpdated
  commentId: F:EventStore.ClientAPI.UserManagement.UserDetails.DateLastUpdated
  id: DateLastUpdated
  parent: EventStore.ClientAPI.UserManagement.UserDetails
  langs:
  - csharp
  - vb
  name: DateLastUpdated
  nameWithType: UserDetails.DateLastUpdated
  fullName: EventStore.ClientAPI.UserManagement.UserDetails.DateLastUpdated
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/UserManagement/UserDetails.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: DateLastUpdated
    path: ../EventStore/src/EventStore.ClientAPI/UserManagement/UserDetails.cs
    startLine: 28
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.UserManagement
  summary: "\nThe date/time the user was updated in UTC format.\n"
  example: []
  syntax:
    content: public readonly DateTimeOffset? DateLastUpdated
    return:
      type: System.Nullable{DateTimeOffset}
    content.vb: Public ReadOnly DateLastUpdated As DateTimeOffset?
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.UserManagement.UserDetails.Disabled
  commentId: F:EventStore.ClientAPI.UserManagement.UserDetails.Disabled
  id: Disabled
  parent: EventStore.ClientAPI.UserManagement.UserDetails
  langs:
  - csharp
  - vb
  name: Disabled
  nameWithType: UserDetails.Disabled
  fullName: EventStore.ClientAPI.UserManagement.UserDetails.Disabled
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/UserManagement/UserDetails.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Disabled
    path: ../EventStore/src/EventStore.ClientAPI/UserManagement/UserDetails.cs
    startLine: 33
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.UserManagement
  summary: "\nWhether the user disable or not.\n"
  example: []
  syntax:
    content: public readonly bool Disabled
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Disabled As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.UserManagement.UserDetails.Links
  commentId: F:EventStore.ClientAPI.UserManagement.UserDetails.Links
  id: Links
  parent: EventStore.ClientAPI.UserManagement.UserDetails
  langs:
  - csharp
  - vb
  name: Links
  nameWithType: UserDetails.Links
  fullName: EventStore.ClientAPI.UserManagement.UserDetails.Links
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/UserManagement/UserDetails.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Links
    path: ../EventStore/src/EventStore.ClientAPI/UserManagement/UserDetails.cs
    startLine: 38
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.UserManagement
  summary: "\nList of hypermedia links describing actions allowed on user resource.\n"
  example: []
  syntax:
    content: public readonly RelLink[] Links
    return:
      type: EventStore.ClientAPI.UserManagement.RelLink[]
    content.vb: Public ReadOnly Links As RelLink()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.UserManagement.UserDetails.#ctor(System.String,System.String,System.String[],System.Boolean,System.Nullable{DateTimeOffset},EventStore.ClientAPI.UserManagement.RelLink[])
  commentId: M:EventStore.ClientAPI.UserManagement.UserDetails.#ctor(System.String,System.String,System.String[],System.Boolean,System.Nullable{DateTimeOffset},EventStore.ClientAPI.UserManagement.RelLink[])
  id: '#ctor(System.String,System.String,System.String[],System.Boolean,System.Nullable{DateTimeOffset},EventStore.ClientAPI.UserManagement.RelLink[])'
  parent: EventStore.ClientAPI.UserManagement.UserDetails
  langs:
  - csharp
  - vb
  name: UserDetails(String, String, String[], Boolean, Nullable<DateTimeOffset>, RelLink[])
  nameWithType: UserDetails.UserDetails(String, String, String[], Boolean, Nullable<DateTimeOffset>, RelLink[])
  fullName: EventStore.ClientAPI.UserManagement.UserDetails.UserDetails(System.String, System.String, System.String[], System.Boolean, System.Nullable<DateTimeOffset>, EventStore.ClientAPI.UserManagement.RelLink[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/UserManagement/UserDetails.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/UserManagement/UserDetails.cs
    startLine: 49
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.UserManagement
  summary: "\ncreate a new <xref href=\"EventStore.ClientAPI.UserManagement.UserDetails\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public UserDetails(string loginName, string fullName, string[] groups, bool disabled, DateTimeOffset? dateLastUpdated, RelLink[] links)
    parameters:
    - id: loginName
      type: System.String
      description: The login name of the user.
    - id: fullName
      type: System.String
      description: The users full name.
    - id: groups
      type: System.String[]
      description: The groups this user is a member if.
    - id: disabled
      type: System.Boolean
      description: Is this user disabled or not.
    - id: dateLastUpdated
      type: System.Nullable{DateTimeOffset}
      description: The datt/time this user was last updated in UTC format.
    - id: links
      type: EventStore.ClientAPI.UserManagement.RelLink[]
      description: List of hypermedia links describing actions allowed on user resource.
    content.vb: Public Sub New(loginName As String, fullName As String, groups As String(), disabled As Boolean, dateLastUpdated As DateTimeOffset?, links As RelLink())
  overload: EventStore.ClientAPI.UserManagement.UserDetails.#ctor*
  nameWithType.vb: UserDetails.UserDetails(String, String, String(), Boolean, Nullable(Of DateTimeOffset), RelLink())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.UserManagement.UserDetails.UserDetails(System.String, System.String, System.String(), System.Boolean, System.Nullable(Of DateTimeOffset), EventStore.ClientAPI.UserManagement.RelLink())
  name.vb: UserDetails(String, String, String(), Boolean, Nullable(Of DateTimeOffset), RelLink())
- uid: EventStore.ClientAPI.UserManagement.UserDetails.GetRelLink(System.String)
  commentId: M:EventStore.ClientAPI.UserManagement.UserDetails.GetRelLink(System.String)
  id: GetRelLink(System.String)
  parent: EventStore.ClientAPI.UserManagement.UserDetails
  langs:
  - csharp
  - vb
  name: GetRelLink(String)
  nameWithType: UserDetails.GetRelLink(String)
  fullName: EventStore.ClientAPI.UserManagement.UserDetails.GetRelLink(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/UserManagement/UserDetails.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: GetRelLink
    path: ../EventStore/src/EventStore.ClientAPI/UserManagement/UserDetails.cs
    startLine: 65
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.UserManagement
  summary: "\n\n"
  example: []
  syntax:
    content: public string GetRelLink(string rel)
    parameters:
    - id: rel
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Function GetRelLink(rel As String) As String
  overload: EventStore.ClientAPI.UserManagement.UserDetails.GetRelLink*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI.UserManagement
  commentId: N:EventStore.ClientAPI.UserManagement
  isExternal: false
  name: EventStore.ClientAPI.UserManagement
  nameWithType: EventStore.ClientAPI.UserManagement
  fullName: EventStore.ClientAPI.UserManagement
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.UserManagement.UserDetails.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<UserDetails>()
  nameWithType: ProtobufExtensions.Serialize<UserDetails>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.ClientAPI.UserManagement.UserDetails>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of UserDetails)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.ClientAPI.UserManagement.UserDetails)()
  name.vb: Serialize(Of UserDetails)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<UserDetails>
    nameWithType: ProtobufExtensions.Serialize<UserDetails>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.ClientAPI.UserManagement.UserDetails>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of UserDetails)
    nameWithType: ProtobufExtensions.Serialize(Of UserDetails)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.ClientAPI.UserManagement.UserDetails)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.UserManagement.UserDetails.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<UserDetails>()
  nameWithType: ProtobufExtensions.SerializeToArray<UserDetails>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.ClientAPI.UserManagement.UserDetails>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of UserDetails)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.ClientAPI.UserManagement.UserDetails)()
  name.vb: SerializeToArray(Of UserDetails)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<UserDetails>
    nameWithType: ProtobufExtensions.SerializeToArray<UserDetails>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.ClientAPI.UserManagement.UserDetails>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of UserDetails)
    nameWithType: ProtobufExtensions.SerializeToArray(Of UserDetails)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.ClientAPI.UserManagement.UserDetails)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{DateTimeOffset}
  commentId: '!:System.Nullable{DateTimeOffset}'
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.ClientAPI.UserManagement.RelLink[]
  name: RelLink[]
  nameWithType: RelLink[]
  fullName: EventStore.ClientAPI.UserManagement.RelLink[]
  nameWithType.vb: RelLink()
  fullName.vb: EventStore.ClientAPI.UserManagement.RelLink()
  name.vb: RelLink()
  spec.csharp:
  - uid: EventStore.ClientAPI.UserManagement.RelLink
    name: RelLink
    nameWithType: RelLink
    fullName: EventStore.ClientAPI.UserManagement.RelLink
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.ClientAPI.UserManagement.RelLink
    name: RelLink
    nameWithType: RelLink
    fullName: EventStore.ClientAPI.UserManagement.RelLink
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.ClientAPI.UserManagement.UserDetails
  commentId: T:EventStore.ClientAPI.UserManagement.UserDetails
  isExternal: false
  name: UserDetails
  nameWithType: UserDetails
  fullName: EventStore.ClientAPI.UserManagement.UserDetails
- uid: EventStore.ClientAPI.UserManagement.UserDetails.#ctor*
  commentId: Overload:EventStore.ClientAPI.UserManagement.UserDetails.#ctor
  isExternal: false
  name: UserDetails
  nameWithType: UserDetails.UserDetails
  fullName: EventStore.ClientAPI.UserManagement.UserDetails.UserDetails
- uid: EventStore.ClientAPI.UserManagement.UserDetails.GetRelLink*
  commentId: Overload:EventStore.ClientAPI.UserManagement.UserDetails.GetRelLink
  isExternal: false
  name: GetRelLink
  nameWithType: UserDetails.GetRelLink
  fullName: EventStore.ClientAPI.UserManagement.UserDetails.GetRelLink

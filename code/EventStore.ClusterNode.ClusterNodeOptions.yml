### YamlMime:ManagedReference
items:
- uid: EventStore.ClusterNode.ClusterNodeOptions
  commentId: T:EventStore.ClusterNode.ClusterNodeOptions
  id: ClusterNodeOptions
  parent: EventStore.ClusterNode
  children:
  - EventStore.ClusterNode.ClusterNodeOptions.#ctor
  - EventStore.ClusterNode.ClusterNodeOptions.AddInterfacePrefixes
  - EventStore.ClusterNode.ClusterNodeOptions.AdminOnExt
  - EventStore.ClusterNode.ClusterNodeOptions.AlwaysKeepScavenged
  - EventStore.ClusterNode.ClusterNodeOptions.AuthenticationConfig
  - EventStore.ClusterNode.ClusterNodeOptions.AuthenticationType
  - EventStore.ClusterNode.ClusterNodeOptions.BetterOrdering
  - EventStore.ClusterNode.ClusterNodeOptions.CachedChunks
  - EventStore.ClusterNode.ClusterNodeOptions.CertificateFile
  - EventStore.ClusterNode.ClusterNodeOptions.CertificatePassword
  - EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreLocation
  - EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreName
  - EventStore.ClusterNode.ClusterNodeOptions.CertificateSubjectName
  - EventStore.ClusterNode.ClusterNodeOptions.CertificateThumbprint
  - EventStore.ClusterNode.ClusterNodeOptions.ChunkInitialReaderCount
  - EventStore.ClusterNode.ClusterNodeOptions.ChunksCacheSize
  - EventStore.ClusterNode.ClusterNodeOptions.ClusterDns
  - EventStore.ClusterNode.ClusterNodeOptions.ClusterGossipPort
  - EventStore.ClusterNode.ClusterNodeOptions.ClusterSize
  - EventStore.ClusterNode.ClusterNodeOptions.CommitCount
  - EventStore.ClusterNode.ClusterNodeOptions.CommitTimeoutMs
  - EventStore.ClusterNode.ClusterNodeOptions.Config
  - EventStore.ClusterNode.ClusterNodeOptions.ConnectionPendingSendBytesThreshold
  - EventStore.ClusterNode.ClusterNodeOptions.Db
  - EventStore.ClusterNode.ClusterNodeOptions.Defines
  - EventStore.ClusterNode.ClusterNodeOptions.DisableHTTPCaching
  - EventStore.ClusterNode.ClusterNodeOptions.DisableInsecureTCP
  - EventStore.ClusterNode.ClusterNodeOptions.DisableScavengeMerging
  - EventStore.ClusterNode.ClusterNodeOptions.DiscoverViaDns
  - EventStore.ClusterNode.ClusterNodeOptions.EnableHistograms
  - EventStore.ClusterNode.ClusterNodeOptions.EnableTrustedAuth
  - EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPort
  - EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPortAdvertiseAs
  - EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPrefixes
  - EventStore.ClusterNode.ClusterNodeOptions.ExtIp
  - EventStore.ClusterNode.ClusterNodeOptions.ExtIpAdvertiseAs
  - EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPort
  - EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs
  - EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatInterval
  - EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatTimeout
  - EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPort
  - EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPortAdvertiseAs
  - EventStore.ClusterNode.ClusterNodeOptions.Force
  - EventStore.ClusterNode.ClusterNodeOptions.GossipAllowedDifferenceMs
  - EventStore.ClusterNode.ClusterNodeOptions.GossipIntervalMs
  - EventStore.ClusterNode.ClusterNodeOptions.GossipOnExt
  - EventStore.ClusterNode.ClusterNodeOptions.GossipOnSingleNode
  - EventStore.ClusterNode.ClusterNodeOptions.GossipSeed
  - EventStore.ClusterNode.ClusterNodeOptions.GossipTimeoutMs
  - EventStore.ClusterNode.ClusterNodeOptions.HashCollisionReadLimit
  - EventStore.ClusterNode.ClusterNodeOptions.Help
  - EventStore.ClusterNode.ClusterNodeOptions.Index
  - EventStore.ClusterNode.ClusterNodeOptions.IndexCacheDepth
  - EventStore.ClusterNode.ClusterNodeOptions.IntHttpPort
  - EventStore.ClusterNode.ClusterNodeOptions.IntHttpPortAdvertiseAs
  - EventStore.ClusterNode.ClusterNodeOptions.IntHttpPrefixes
  - EventStore.ClusterNode.ClusterNodeOptions.IntIp
  - EventStore.ClusterNode.ClusterNodeOptions.IntIpAdvertiseAs
  - EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPort
  - EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPortAdvertiseAs
  - EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatInterval
  - EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatTimeout
  - EventStore.ClusterNode.ClusterNodeOptions.IntTcpPort
  - EventStore.ClusterNode.ClusterNodeOptions.IntTcpPortAdvertiseAs
  - EventStore.ClusterNode.ClusterNodeOptions.Log
  - EventStore.ClusterNode.ClusterNodeOptions.LogHttpRequests
  - EventStore.ClusterNode.ClusterNodeOptions.MaxMemTableSize
  - EventStore.ClusterNode.ClusterNodeOptions.MemDb
  - EventStore.ClusterNode.ClusterNodeOptions.MinFlushDelayMs
  - EventStore.ClusterNode.ClusterNodeOptions.MonoMinThreadpoolSize
  - EventStore.ClusterNode.ClusterNodeOptions.NodePriority
  - EventStore.ClusterNode.ClusterNodeOptions.PrepareCount
  - EventStore.ClusterNode.ClusterNodeOptions.PrepareTimeoutMs
  - EventStore.ClusterNode.ClusterNodeOptions.ProjectionsQueryExpiry
  - EventStore.ClusterNode.ClusterNodeOptions.ProjectionThreads
  - EventStore.ClusterNode.ClusterNodeOptions.ReaderThreadsCount
  - EventStore.ClusterNode.ClusterNodeOptions.RunProjections
  - EventStore.ClusterNode.ClusterNodeOptions.ScavengeHistoryMaxAge
  - EventStore.ClusterNode.ClusterNodeOptions.SkipDbVerify
  - EventStore.ClusterNode.ClusterNodeOptions.SkipIndexScanOnReads
  - EventStore.ClusterNode.ClusterNodeOptions.SkipIndexVerify
  - EventStore.ClusterNode.ClusterNodeOptions.SslTargetHost
  - EventStore.ClusterNode.ClusterNodeOptions.SslValidateServer
  - EventStore.ClusterNode.ClusterNodeOptions.StartStandardProjections
  - EventStore.ClusterNode.ClusterNodeOptions.StatsOnExt
  - EventStore.ClusterNode.ClusterNodeOptions.StatsPeriodSec
  - EventStore.ClusterNode.ClusterNodeOptions.Unbuffered
  - EventStore.ClusterNode.ClusterNodeOptions.UnsafeDisableFlushToDisk
  - EventStore.ClusterNode.ClusterNodeOptions.UnsafeIgnoreHardDelete
  - EventStore.ClusterNode.ClusterNodeOptions.UseInternalSsl
  - EventStore.ClusterNode.ClusterNodeOptions.Version
  - EventStore.ClusterNode.ClusterNodeOptions.WhatIf
  - EventStore.ClusterNode.ClusterNodeOptions.WorkerThreads
  - EventStore.ClusterNode.ClusterNodeOptions.WriteThrough
  langs:
  - csharp
  - vb
  name: ClusterNodeOptions
  nameWithType: ClusterNodeOptions
  fullName: EventStore.ClusterNode.ClusterNodeOptions
  type: Class
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ClusterNodeOptions
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 8
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: 'public class ClusterNodeOptions : object, IOptions'
    content.vb: >-
      Public Class ClusterNodeOptions
          Inherits Object
          Implements IOptions
  inheritance:
  - System.Object
  implements:
  - EventStore.Common.Options.IOptions
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.ClusterNode.ClusterNodeOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.ClusterNode.ClusterNodeOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClusterNode.ClusterNodeOptions.Help
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Help
  id: Help
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Help
  nameWithType: ClusterNodeOptions.Help
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Help
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Help
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 10
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool Help { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Help As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.Help*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.Version
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Version
  id: Version
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ClusterNodeOptions.Version
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Version
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Version
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 12
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool Version { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Version As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.Log
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Log
  id: Log
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Log
  nameWithType: ClusterNodeOptions.Log
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Log
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Log
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 14
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public string Log { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Log As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.Log*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.Config
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Config
  id: Config
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: ClusterNodeOptions.Config
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Config
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Config
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 16
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public string Config { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Config As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.Config*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.Defines
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Defines
  id: Defines
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Defines
  nameWithType: ClusterNodeOptions.Defines
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Defines
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Defines
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 18
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public string[] Defines { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property Defines As String()
  overload: EventStore.ClusterNode.ClusterNodeOptions.Defines*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.WhatIf
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.WhatIf
  id: WhatIf
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: WhatIf
  nameWithType: ClusterNodeOptions.WhatIf
  fullName: EventStore.ClusterNode.ClusterNodeOptions.WhatIf
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WhatIf
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 20
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool WhatIf { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property WhatIf As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.WhatIf*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.StartStandardProjections
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.StartStandardProjections
  id: StartStandardProjections
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: StartStandardProjections
  nameWithType: ClusterNodeOptions.StartStandardProjections
  fullName: EventStore.ClusterNode.ClusterNodeOptions.StartStandardProjections
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StartStandardProjections
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 22
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool StartStandardProjections { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property StartStandardProjections As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.StartStandardProjections*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.DisableHTTPCaching
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.DisableHTTPCaching
  id: DisableHTTPCaching
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: DisableHTTPCaching
  nameWithType: ClusterNodeOptions.DisableHTTPCaching
  fullName: EventStore.ClusterNode.ClusterNodeOptions.DisableHTTPCaching
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DisableHTTPCaching
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 24
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool DisableHTTPCaching { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DisableHTTPCaching As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.DisableHTTPCaching*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.MonoMinThreadpoolSize
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.MonoMinThreadpoolSize
  id: MonoMinThreadpoolSize
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: MonoMinThreadpoolSize
  nameWithType: ClusterNodeOptions.MonoMinThreadpoolSize
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MonoMinThreadpoolSize
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MonoMinThreadpoolSize
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 27
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int MonoMinThreadpoolSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MonoMinThreadpoolSize As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.MonoMinThreadpoolSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntIp
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntIp
  id: IntIp
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntIp
  nameWithType: ClusterNodeOptions.IntIp
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntIp
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IntIp
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 30
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public IPAddress IntIp { get; set; }
    parameters: []
    return:
      type: IPAddress
    content.vb: Public Property IntIp As IPAddress
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntIp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtIp
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtIp
  id: ExtIp
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtIp
  nameWithType: ClusterNodeOptions.ExtIp
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtIp
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExtIp
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 32
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public IPAddress ExtIp { get; set; }
    parameters: []
    return:
      type: IPAddress
    content.vb: Public Property ExtIp As IPAddress
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtIp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPort
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntHttpPort
  id: IntHttpPort
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntHttpPort
  nameWithType: ClusterNodeOptions.IntHttpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPort
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IntHttpPort
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 34
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int IntHttpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property IntHttpPort As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPort
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPort
  id: ExtHttpPort
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtHttpPort
  nameWithType: ClusterNodeOptions.ExtHttpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPort
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExtHttpPort
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 36
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int ExtHttpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ExtHttpPort As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPort
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntTcpPort
  id: IntTcpPort
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntTcpPort
  nameWithType: ClusterNodeOptions.IntTcpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPort
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IntTcpPort
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 38
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int IntTcpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property IntTcpPort As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPort
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPort
  id: IntSecureTcpPort
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntSecureTcpPort
  nameWithType: ClusterNodeOptions.IntSecureTcpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPort
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IntSecureTcpPort
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 40
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int IntSecureTcpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property IntSecureTcpPort As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPort
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPort
  id: ExtTcpPort
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtTcpPort
  nameWithType: ClusterNodeOptions.ExtTcpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPort
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExtTcpPort
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 42
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int ExtTcpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ExtTcpPort As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs
  id: ExtSecureTcpPortAdvertiseAs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtSecureTcpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExtSecureTcpPortAdvertiseAs
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 44
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int ExtSecureTcpPortAdvertiseAs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ExtSecureTcpPortAdvertiseAs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPort
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPort
  id: ExtSecureTcpPort
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtSecureTcpPort
  nameWithType: ClusterNodeOptions.ExtSecureTcpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPort
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExtSecureTcpPort
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 46
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int ExtSecureTcpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ExtSecureTcpPort As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtIpAdvertiseAs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtIpAdvertiseAs
  id: ExtIpAdvertiseAs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtIpAdvertiseAs
  nameWithType: ClusterNodeOptions.ExtIpAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtIpAdvertiseAs
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExtIpAdvertiseAs
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 49
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public IPAddress ExtIpAdvertiseAs { get; set; }
    parameters: []
    return:
      type: IPAddress
    content.vb: Public Property ExtIpAdvertiseAs As IPAddress
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtIpAdvertiseAs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPortAdvertiseAs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPortAdvertiseAs
  id: ExtTcpPortAdvertiseAs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtTcpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.ExtTcpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPortAdvertiseAs
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExtTcpPortAdvertiseAs
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 51
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int ExtTcpPortAdvertiseAs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ExtTcpPortAdvertiseAs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPortAdvertiseAs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPortAdvertiseAs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPortAdvertiseAs
  id: ExtHttpPortAdvertiseAs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtHttpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.ExtHttpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPortAdvertiseAs
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExtHttpPortAdvertiseAs
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 53
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int ExtHttpPortAdvertiseAs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ExtHttpPortAdvertiseAs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPortAdvertiseAs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntIpAdvertiseAs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntIpAdvertiseAs
  id: IntIpAdvertiseAs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntIpAdvertiseAs
  nameWithType: ClusterNodeOptions.IntIpAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntIpAdvertiseAs
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IntIpAdvertiseAs
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 56
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public IPAddress IntIpAdvertiseAs { get; set; }
    parameters: []
    return:
      type: IPAddress
    content.vb: Public Property IntIpAdvertiseAs As IPAddress
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntIpAdvertiseAs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPortAdvertiseAs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPortAdvertiseAs
  id: IntSecureTcpPortAdvertiseAs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntSecureTcpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.IntSecureTcpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPortAdvertiseAs
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IntSecureTcpPortAdvertiseAs
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 58
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int IntSecureTcpPortAdvertiseAs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property IntSecureTcpPortAdvertiseAs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPortAdvertiseAs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPortAdvertiseAs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntTcpPortAdvertiseAs
  id: IntTcpPortAdvertiseAs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntTcpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.IntTcpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPortAdvertiseAs
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IntTcpPortAdvertiseAs
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 60
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int IntTcpPortAdvertiseAs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property IntTcpPortAdvertiseAs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPortAdvertiseAs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPortAdvertiseAs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntHttpPortAdvertiseAs
  id: IntHttpPortAdvertiseAs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntHttpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.IntHttpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPortAdvertiseAs
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IntHttpPortAdvertiseAs
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 62
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int IntHttpPortAdvertiseAs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property IntHttpPortAdvertiseAs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPortAdvertiseAs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatTimeout
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatTimeout
  id: IntTcpHeartbeatTimeout
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntTcpHeartbeatTimeout
  nameWithType: ClusterNodeOptions.IntTcpHeartbeatTimeout
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatTimeout
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IntTcpHeartbeatTimeout
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 65
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int IntTcpHeartbeatTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property IntTcpHeartbeatTimeout As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatTimeout
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatTimeout
  id: ExtTcpHeartbeatTimeout
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtTcpHeartbeatTimeout
  nameWithType: ClusterNodeOptions.ExtTcpHeartbeatTimeout
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatTimeout
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExtTcpHeartbeatTimeout
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 67
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int ExtTcpHeartbeatTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ExtTcpHeartbeatTimeout As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatInterval
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatInterval
  id: IntTcpHeartbeatInterval
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntTcpHeartbeatInterval
  nameWithType: ClusterNodeOptions.IntTcpHeartbeatInterval
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatInterval
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IntTcpHeartbeatInterval
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 69
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int IntTcpHeartbeatInterval { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property IntTcpHeartbeatInterval As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatInterval
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatInterval
  id: ExtTcpHeartbeatInterval
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtTcpHeartbeatInterval
  nameWithType: ClusterNodeOptions.ExtTcpHeartbeatInterval
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatInterval
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExtTcpHeartbeatInterval
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 71
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int ExtTcpHeartbeatInterval { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ExtTcpHeartbeatInterval As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipOnSingleNode
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.GossipOnSingleNode
  id: GossipOnSingleNode
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: GossipOnSingleNode
  nameWithType: ClusterNodeOptions.GossipOnSingleNode
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipOnSingleNode
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GossipOnSingleNode
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 73
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool GossipOnSingleNode { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property GossipOnSingleNode As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.GossipOnSingleNode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ConnectionPendingSendBytesThreshold
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ConnectionPendingSendBytesThreshold
  id: ConnectionPendingSendBytesThreshold
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ConnectionPendingSendBytesThreshold
  nameWithType: ClusterNodeOptions.ConnectionPendingSendBytesThreshold
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ConnectionPendingSendBytesThreshold
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ConnectionPendingSendBytesThreshold
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 75
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int ConnectionPendingSendBytesThreshold { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ConnectionPendingSendBytesThreshold As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ConnectionPendingSendBytesThreshold*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.Force
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Force
  id: Force
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Force
  nameWithType: ClusterNodeOptions.Force
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Force
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Force
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 79
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool Force { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Force As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.Force*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ClusterSize
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ClusterSize
  id: ClusterSize
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ClusterSize
  nameWithType: ClusterNodeOptions.ClusterSize
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ClusterSize
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ClusterSize
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 81
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int ClusterSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ClusterSize As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ClusterSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.NodePriority
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.NodePriority
  id: NodePriority
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: NodePriority
  nameWithType: ClusterNodeOptions.NodePriority
  fullName: EventStore.ClusterNode.ClusterNodeOptions.NodePriority
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: NodePriority
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 83
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int NodePriority { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property NodePriority As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.NodePriority*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.MinFlushDelayMs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.MinFlushDelayMs
  id: MinFlushDelayMs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: MinFlushDelayMs
  nameWithType: ClusterNodeOptions.MinFlushDelayMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MinFlushDelayMs
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MinFlushDelayMs
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 85
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public double MinFlushDelayMs { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property MinFlushDelayMs As Double
  overload: EventStore.ClusterNode.ClusterNodeOptions.MinFlushDelayMs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CommitCount
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CommitCount
  id: CommitCount
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CommitCount
  nameWithType: ClusterNodeOptions.CommitCount
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CommitCount
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CommitCount
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 88
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int CommitCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CommitCount As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.CommitCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.PrepareCount
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.PrepareCount
  id: PrepareCount
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: PrepareCount
  nameWithType: ClusterNodeOptions.PrepareCount
  fullName: EventStore.ClusterNode.ClusterNodeOptions.PrepareCount
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PrepareCount
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 90
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int PrepareCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PrepareCount As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.PrepareCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.AdminOnExt
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.AdminOnExt
  id: AdminOnExt
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: AdminOnExt
  nameWithType: ClusterNodeOptions.AdminOnExt
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AdminOnExt
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AdminOnExt
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 93
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool AdminOnExt { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AdminOnExt As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.AdminOnExt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.StatsOnExt
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.StatsOnExt
  id: StatsOnExt
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: StatsOnExt
  nameWithType: ClusterNodeOptions.StatsOnExt
  fullName: EventStore.ClusterNode.ClusterNodeOptions.StatsOnExt
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StatsOnExt
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 95
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool StatsOnExt { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property StatsOnExt As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.StatsOnExt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipOnExt
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.GossipOnExt
  id: GossipOnExt
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: GossipOnExt
  nameWithType: ClusterNodeOptions.GossipOnExt
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipOnExt
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GossipOnExt
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 97
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool GossipOnExt { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property GossipOnExt As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.GossipOnExt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.DisableScavengeMerging
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.DisableScavengeMerging
  id: DisableScavengeMerging
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: DisableScavengeMerging
  nameWithType: ClusterNodeOptions.DisableScavengeMerging
  fullName: EventStore.ClusterNode.ClusterNodeOptions.DisableScavengeMerging
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DisableScavengeMerging
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 99
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool DisableScavengeMerging { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DisableScavengeMerging As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.DisableScavengeMerging*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ScavengeHistoryMaxAge
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ScavengeHistoryMaxAge
  id: ScavengeHistoryMaxAge
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ScavengeHistoryMaxAge
  nameWithType: ClusterNodeOptions.ScavengeHistoryMaxAge
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ScavengeHistoryMaxAge
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ScavengeHistoryMaxAge
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 101
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int ScavengeHistoryMaxAge { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ScavengeHistoryMaxAge As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ScavengeHistoryMaxAge*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.DiscoverViaDns
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.DiscoverViaDns
  id: DiscoverViaDns
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: DiscoverViaDns
  nameWithType: ClusterNodeOptions.DiscoverViaDns
  fullName: EventStore.ClusterNode.ClusterNodeOptions.DiscoverViaDns
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DiscoverViaDns
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 104
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool DiscoverViaDns { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DiscoverViaDns As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.DiscoverViaDns*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ClusterDns
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ClusterDns
  id: ClusterDns
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ClusterDns
  nameWithType: ClusterNodeOptions.ClusterDns
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ClusterDns
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ClusterDns
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 106
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public string ClusterDns { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClusterDns As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.ClusterDns*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ClusterGossipPort
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ClusterGossipPort
  id: ClusterGossipPort
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ClusterGossipPort
  nameWithType: ClusterNodeOptions.ClusterGossipPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ClusterGossipPort
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ClusterGossipPort
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 108
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int ClusterGossipPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ClusterGossipPort As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ClusterGossipPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipSeed
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.GossipSeed
  id: GossipSeed
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: GossipSeed
  nameWithType: ClusterNodeOptions.GossipSeed
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipSeed
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GossipSeed
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 110
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public IPEndPoint[] GossipSeed { get; set; }
    parameters: []
    return:
      type: IPEndPoint[]
    content.vb: Public Property GossipSeed As IPEndPoint()
  overload: EventStore.ClusterNode.ClusterNodeOptions.GossipSeed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.StatsPeriodSec
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.StatsPeriodSec
  id: StatsPeriodSec
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: StatsPeriodSec
  nameWithType: ClusterNodeOptions.StatsPeriodSec
  fullName: EventStore.ClusterNode.ClusterNodeOptions.StatsPeriodSec
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StatsPeriodSec
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 113
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int StatsPeriodSec { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property StatsPeriodSec As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.StatsPeriodSec*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CachedChunks
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CachedChunks
  id: CachedChunks
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CachedChunks
  nameWithType: ClusterNodeOptions.CachedChunks
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CachedChunks
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CachedChunks
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 115
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int CachedChunks { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CachedChunks As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.CachedChunks*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ReaderThreadsCount
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ReaderThreadsCount
  id: ReaderThreadsCount
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ReaderThreadsCount
  nameWithType: ClusterNodeOptions.ReaderThreadsCount
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ReaderThreadsCount
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReaderThreadsCount
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 118
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int ReaderThreadsCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ReaderThreadsCount As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ReaderThreadsCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ChunksCacheSize
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ChunksCacheSize
  id: ChunksCacheSize
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ChunksCacheSize
  nameWithType: ClusterNodeOptions.ChunksCacheSize
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ChunksCacheSize
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ChunksCacheSize
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 120
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public long ChunksCacheSize { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ChunksCacheSize As Long
  overload: EventStore.ClusterNode.ClusterNodeOptions.ChunksCacheSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.MaxMemTableSize
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.MaxMemTableSize
  id: MaxMemTableSize
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: MaxMemTableSize
  nameWithType: ClusterNodeOptions.MaxMemTableSize
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MaxMemTableSize
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MaxMemTableSize
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 122
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int MaxMemTableSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxMemTableSize As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.MaxMemTableSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.HashCollisionReadLimit
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.HashCollisionReadLimit
  id: HashCollisionReadLimit
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: HashCollisionReadLimit
  nameWithType: ClusterNodeOptions.HashCollisionReadLimit
  fullName: EventStore.ClusterNode.ClusterNodeOptions.HashCollisionReadLimit
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HashCollisionReadLimit
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 124
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int HashCollisionReadLimit { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property HashCollisionReadLimit As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.HashCollisionReadLimit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.Db
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Db
  id: Db
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Db
  nameWithType: ClusterNodeOptions.Db
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Db
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Db
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 127
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public string Db { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Db As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.Db*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.Index
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Index
  id: Index
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: ClusterNodeOptions.Index
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Index
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Index
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 129
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public string Index { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Index As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.Index*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.MemDb
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.MemDb
  id: MemDb
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: MemDb
  nameWithType: ClusterNodeOptions.MemDb
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MemDb
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MemDb
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 131
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool MemDb { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property MemDb As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.MemDb*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.SkipDbVerify
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.SkipDbVerify
  id: SkipDbVerify
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: SkipDbVerify
  nameWithType: ClusterNodeOptions.SkipDbVerify
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SkipDbVerify
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SkipDbVerify
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 133
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool SkipDbVerify { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SkipDbVerify As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.SkipDbVerify*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.WriteThrough
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.WriteThrough
  id: WriteThrough
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: WriteThrough
  nameWithType: ClusterNodeOptions.WriteThrough
  fullName: EventStore.ClusterNode.ClusterNodeOptions.WriteThrough
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WriteThrough
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 136
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool WriteThrough { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property WriteThrough As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.WriteThrough*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.Unbuffered
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Unbuffered
  id: Unbuffered
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Unbuffered
  nameWithType: ClusterNodeOptions.Unbuffered
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Unbuffered
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Unbuffered
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 139
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool Unbuffered { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Unbuffered As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.Unbuffered*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ChunkInitialReaderCount
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ChunkInitialReaderCount
  id: ChunkInitialReaderCount
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ChunkInitialReaderCount
  nameWithType: ClusterNodeOptions.ChunkInitialReaderCount
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ChunkInitialReaderCount
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ChunkInitialReaderCount
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 142
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int ChunkInitialReaderCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ChunkInitialReaderCount As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ChunkInitialReaderCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.RunProjections
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.RunProjections
  id: RunProjections
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: RunProjections
  nameWithType: ClusterNodeOptions.RunProjections
  fullName: EventStore.ClusterNode.ClusterNodeOptions.RunProjections
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RunProjections
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 146
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public ProjectionType RunProjections { get; set; }
    parameters: []
    return:
      type: EventStore.Common.Options.ProjectionType
    content.vb: Public Property RunProjections As ProjectionType
  overload: EventStore.ClusterNode.ClusterNodeOptions.RunProjections*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ProjectionThreads
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ProjectionThreads
  id: ProjectionThreads
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ProjectionThreads
  nameWithType: ClusterNodeOptions.ProjectionThreads
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ProjectionThreads
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ProjectionThreads
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 148
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int ProjectionThreads { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ProjectionThreads As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ProjectionThreads*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.WorkerThreads
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.WorkerThreads
  id: WorkerThreads
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: WorkerThreads
  nameWithType: ClusterNodeOptions.WorkerThreads
  fullName: EventStore.ClusterNode.ClusterNodeOptions.WorkerThreads
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WorkerThreads
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 150
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int WorkerThreads { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property WorkerThreads As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.WorkerThreads*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ProjectionsQueryExpiry
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ProjectionsQueryExpiry
  id: ProjectionsQueryExpiry
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ProjectionsQueryExpiry
  nameWithType: ClusterNodeOptions.ProjectionsQueryExpiry
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ProjectionsQueryExpiry
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ProjectionsQueryExpiry
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 152
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int ProjectionsQueryExpiry { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ProjectionsQueryExpiry As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ProjectionsQueryExpiry*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPrefixes
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntHttpPrefixes
  id: IntHttpPrefixes
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntHttpPrefixes
  nameWithType: ClusterNodeOptions.IntHttpPrefixes
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPrefixes
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IntHttpPrefixes
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 155
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public string[] IntHttpPrefixes { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property IntHttpPrefixes As String()
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPrefixes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPrefixes
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPrefixes
  id: ExtHttpPrefixes
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtHttpPrefixes
  nameWithType: ClusterNodeOptions.ExtHttpPrefixes
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPrefixes
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExtHttpPrefixes
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 157
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public string[] ExtHttpPrefixes { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property ExtHttpPrefixes As String()
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPrefixes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.EnableTrustedAuth
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.EnableTrustedAuth
  id: EnableTrustedAuth
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: EnableTrustedAuth
  nameWithType: ClusterNodeOptions.EnableTrustedAuth
  fullName: EventStore.ClusterNode.ClusterNodeOptions.EnableTrustedAuth
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EnableTrustedAuth
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 159
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool EnableTrustedAuth { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EnableTrustedAuth As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.EnableTrustedAuth*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.AddInterfacePrefixes
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.AddInterfacePrefixes
  id: AddInterfacePrefixes
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: AddInterfacePrefixes
  nameWithType: ClusterNodeOptions.AddInterfacePrefixes
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AddInterfacePrefixes
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AddInterfacePrefixes
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 161
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool AddInterfacePrefixes { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AddInterfacePrefixes As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.AddInterfacePrefixes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreLocation
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreLocation
  id: CertificateStoreLocation
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CertificateStoreLocation
  nameWithType: ClusterNodeOptions.CertificateStoreLocation
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreLocation
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CertificateStoreLocation
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 164
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public string CertificateStoreLocation { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CertificateStoreLocation As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreLocation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreName
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreName
  id: CertificateStoreName
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CertificateStoreName
  nameWithType: ClusterNodeOptions.CertificateStoreName
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreName
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CertificateStoreName
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 166
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public string CertificateStoreName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CertificateStoreName As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateSubjectName
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CertificateSubjectName
  id: CertificateSubjectName
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CertificateSubjectName
  nameWithType: ClusterNodeOptions.CertificateSubjectName
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateSubjectName
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CertificateSubjectName
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 168
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public string CertificateSubjectName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CertificateSubjectName As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.CertificateSubjectName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateThumbprint
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CertificateThumbprint
  id: CertificateThumbprint
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CertificateThumbprint
  nameWithType: ClusterNodeOptions.CertificateThumbprint
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateThumbprint
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CertificateThumbprint
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 170
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public string CertificateThumbprint { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CertificateThumbprint As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.CertificateThumbprint*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateFile
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CertificateFile
  id: CertificateFile
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CertificateFile
  nameWithType: ClusterNodeOptions.CertificateFile
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateFile
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CertificateFile
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 173
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public string CertificateFile { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CertificateFile As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.CertificateFile*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificatePassword
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CertificatePassword
  id: CertificatePassword
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CertificatePassword
  nameWithType: ClusterNodeOptions.CertificatePassword
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificatePassword
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CertificatePassword
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 175
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public string CertificatePassword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CertificatePassword As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.CertificatePassword*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.UseInternalSsl
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.UseInternalSsl
  id: UseInternalSsl
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: UseInternalSsl
  nameWithType: ClusterNodeOptions.UseInternalSsl
  fullName: EventStore.ClusterNode.ClusterNodeOptions.UseInternalSsl
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: UseInternalSsl
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 178
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool UseInternalSsl { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseInternalSsl As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.UseInternalSsl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.DisableInsecureTCP
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.DisableInsecureTCP
  id: DisableInsecureTCP
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: DisableInsecureTCP
  nameWithType: ClusterNodeOptions.DisableInsecureTCP
  fullName: EventStore.ClusterNode.ClusterNodeOptions.DisableInsecureTCP
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DisableInsecureTCP
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 180
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool DisableInsecureTCP { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DisableInsecureTCP As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.DisableInsecureTCP*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.SslTargetHost
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.SslTargetHost
  id: SslTargetHost
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: SslTargetHost
  nameWithType: ClusterNodeOptions.SslTargetHost
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SslTargetHost
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SslTargetHost
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 182
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public string SslTargetHost { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SslTargetHost As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.SslTargetHost*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.SslValidateServer
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.SslValidateServer
  id: SslValidateServer
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: SslValidateServer
  nameWithType: ClusterNodeOptions.SslValidateServer
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SslValidateServer
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SslValidateServer
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 184
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool SslValidateServer { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SslValidateServer As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.SslValidateServer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationType
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.AuthenticationType
  id: AuthenticationType
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: AuthenticationType
  nameWithType: ClusterNodeOptions.AuthenticationType
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationType
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AuthenticationType
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 187
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public string AuthenticationType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AuthenticationType As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationConfig
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.AuthenticationConfig
  id: AuthenticationConfig
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: AuthenticationConfig
  nameWithType: ClusterNodeOptions.AuthenticationConfig
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationConfig
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AuthenticationConfig
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 189
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public string AuthenticationConfig { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AuthenticationConfig As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationConfig*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.PrepareTimeoutMs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.PrepareTimeoutMs
  id: PrepareTimeoutMs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: PrepareTimeoutMs
  nameWithType: ClusterNodeOptions.PrepareTimeoutMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.PrepareTimeoutMs
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PrepareTimeoutMs
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 192
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int PrepareTimeoutMs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PrepareTimeoutMs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.PrepareTimeoutMs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CommitTimeoutMs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CommitTimeoutMs
  id: CommitTimeoutMs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CommitTimeoutMs
  nameWithType: ClusterNodeOptions.CommitTimeoutMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CommitTimeoutMs
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CommitTimeoutMs
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 194
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int CommitTimeoutMs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CommitTimeoutMs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.CommitTimeoutMs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.UnsafeDisableFlushToDisk
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.UnsafeDisableFlushToDisk
  id: UnsafeDisableFlushToDisk
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: UnsafeDisableFlushToDisk
  nameWithType: ClusterNodeOptions.UnsafeDisableFlushToDisk
  fullName: EventStore.ClusterNode.ClusterNodeOptions.UnsafeDisableFlushToDisk
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: UnsafeDisableFlushToDisk
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 197
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool UnsafeDisableFlushToDisk { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UnsafeDisableFlushToDisk As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.UnsafeDisableFlushToDisk*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.BetterOrdering
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.BetterOrdering
  id: BetterOrdering
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: BetterOrdering
  nameWithType: ClusterNodeOptions.BetterOrdering
  fullName: EventStore.ClusterNode.ClusterNodeOptions.BetterOrdering
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: BetterOrdering
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 200
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool BetterOrdering { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property BetterOrdering As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.BetterOrdering*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.UnsafeIgnoreHardDelete
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.UnsafeIgnoreHardDelete
  id: UnsafeIgnoreHardDelete
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: UnsafeIgnoreHardDelete
  nameWithType: ClusterNodeOptions.UnsafeIgnoreHardDelete
  fullName: EventStore.ClusterNode.ClusterNodeOptions.UnsafeIgnoreHardDelete
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: UnsafeIgnoreHardDelete
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 203
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool UnsafeIgnoreHardDelete { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UnsafeIgnoreHardDelete As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.UnsafeIgnoreHardDelete*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexVerify
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.SkipIndexVerify
  id: SkipIndexVerify
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: SkipIndexVerify
  nameWithType: ClusterNodeOptions.SkipIndexVerify
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexVerify
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SkipIndexVerify
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 206
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool SkipIndexVerify { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SkipIndexVerify As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexVerify*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IndexCacheDepth
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IndexCacheDepth
  id: IndexCacheDepth
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IndexCacheDepth
  nameWithType: ClusterNodeOptions.IndexCacheDepth
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IndexCacheDepth
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IndexCacheDepth
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 209
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int IndexCacheDepth { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property IndexCacheDepth As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IndexCacheDepth*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipIntervalMs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.GossipIntervalMs
  id: GossipIntervalMs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: GossipIntervalMs
  nameWithType: ClusterNodeOptions.GossipIntervalMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipIntervalMs
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GossipIntervalMs
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 212
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int GossipIntervalMs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property GossipIntervalMs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.GossipIntervalMs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipAllowedDifferenceMs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.GossipAllowedDifferenceMs
  id: GossipAllowedDifferenceMs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: GossipAllowedDifferenceMs
  nameWithType: ClusterNodeOptions.GossipAllowedDifferenceMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipAllowedDifferenceMs
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GossipAllowedDifferenceMs
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 214
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int GossipAllowedDifferenceMs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property GossipAllowedDifferenceMs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.GossipAllowedDifferenceMs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipTimeoutMs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.GossipTimeoutMs
  id: GossipTimeoutMs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: GossipTimeoutMs
  nameWithType: ClusterNodeOptions.GossipTimeoutMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipTimeoutMs
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GossipTimeoutMs
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 216
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public int GossipTimeoutMs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property GossipTimeoutMs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.GossipTimeoutMs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.EnableHistograms
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.EnableHistograms
  id: EnableHistograms
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: EnableHistograms
  nameWithType: ClusterNodeOptions.EnableHistograms
  fullName: EventStore.ClusterNode.ClusterNodeOptions.EnableHistograms
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EnableHistograms
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 219
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool EnableHistograms { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EnableHistograms As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.EnableHistograms*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.LogHttpRequests
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.LogHttpRequests
  id: LogHttpRequests
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: LogHttpRequests
  nameWithType: ClusterNodeOptions.LogHttpRequests
  fullName: EventStore.ClusterNode.ClusterNodeOptions.LogHttpRequests
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: LogHttpRequests
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 222
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool LogHttpRequests { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LogHttpRequests As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.LogHttpRequests*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.AlwaysKeepScavenged
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.AlwaysKeepScavenged
  id: AlwaysKeepScavenged
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: AlwaysKeepScavenged
  nameWithType: ClusterNodeOptions.AlwaysKeepScavenged
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AlwaysKeepScavenged
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AlwaysKeepScavenged
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 225
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool AlwaysKeepScavenged { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AlwaysKeepScavenged As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.AlwaysKeepScavenged*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexScanOnReads
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.SkipIndexScanOnReads
  id: SkipIndexScanOnReads
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: SkipIndexScanOnReads
  nameWithType: ClusterNodeOptions.SkipIndexScanOnReads
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexScanOnReads
  type: Property
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SkipIndexScanOnReads
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 228
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public bool SkipIndexScanOnReads { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SkipIndexScanOnReads As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexScanOnReads*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.#ctor
  commentId: M:EventStore.ClusterNode.ClusterNodeOptions.#ctor
  id: '#ctor'
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ClusterNodeOptions()
  nameWithType: ClusterNodeOptions.ClusterNodeOptions()
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ClusterNodeOptions()
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClusterNode/ClusterNodeOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 231
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public ClusterNodeOptions()
    content.vb: Public Sub New
  overload: EventStore.ClusterNode.ClusterNodeOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClusterNode
  commentId: N:EventStore.ClusterNode
  isExternal: false
  name: EventStore.ClusterNode
  nameWithType: EventStore.ClusterNode
  fullName: EventStore.ClusterNode
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Common.Options.IOptions
  commentId: T:EventStore.Common.Options.IOptions
  parent: EventStore.Common.Options
  isExternal: false
  name: IOptions
  nameWithType: IOptions
  fullName: EventStore.Common.Options.IOptions
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClusterNode.ClusterNodeOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ClusterNodeOptions>()
  nameWithType: ProtobufExtensions.Serialize<ClusterNodeOptions>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.ClusterNode.ClusterNodeOptions>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ClusterNodeOptions)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.ClusterNode.ClusterNodeOptions)()
  name.vb: Serialize(Of ClusterNodeOptions)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ClusterNodeOptions>
    nameWithType: ProtobufExtensions.Serialize<ClusterNodeOptions>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.ClusterNode.ClusterNodeOptions>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ClusterNodeOptions)
    nameWithType: ProtobufExtensions.Serialize(Of ClusterNodeOptions)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.ClusterNode.ClusterNodeOptions)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClusterNode.ClusterNodeOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ClusterNodeOptions>()
  nameWithType: ProtobufExtensions.SerializeToArray<ClusterNodeOptions>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.ClusterNode.ClusterNodeOptions>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ClusterNodeOptions)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.ClusterNode.ClusterNodeOptions)()
  name.vb: SerializeToArray(Of ClusterNodeOptions)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ClusterNodeOptions>
    nameWithType: ProtobufExtensions.SerializeToArray<ClusterNodeOptions>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.ClusterNode.ClusterNodeOptions>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ClusterNodeOptions)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ClusterNodeOptions)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.ClusterNode.ClusterNodeOptions)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Options
  commentId: N:EventStore.Common.Options
  isExternal: false
  name: EventStore.Common.Options
  nameWithType: EventStore.Common.Options
  fullName: EventStore.Common.Options
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.ClusterNode.ClusterNodeOptions.Help*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Help
  isExternal: false
  name: Help
  nameWithType: ClusterNodeOptions.Help
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Help
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.ClusterNode.ClusterNodeOptions.Version*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Version
  isExternal: false
  name: Version
  nameWithType: ClusterNodeOptions.Version
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Version
- uid: EventStore.ClusterNode.ClusterNodeOptions.Log*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Log
  isExternal: false
  name: Log
  nameWithType: ClusterNodeOptions.Log
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Log
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.ClusterNode.ClusterNodeOptions.Config*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Config
  isExternal: false
  name: Config
  nameWithType: ClusterNodeOptions.Config
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Config
- uid: EventStore.ClusterNode.ClusterNodeOptions.Defines*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Defines
  isExternal: false
  name: Defines
  nameWithType: ClusterNodeOptions.Defines
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Defines
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.ClusterNode.ClusterNodeOptions.WhatIf*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.WhatIf
  isExternal: false
  name: WhatIf
  nameWithType: ClusterNodeOptions.WhatIf
  fullName: EventStore.ClusterNode.ClusterNodeOptions.WhatIf
- uid: EventStore.ClusterNode.ClusterNodeOptions.StartStandardProjections*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.StartStandardProjections
  isExternal: false
  name: StartStandardProjections
  nameWithType: ClusterNodeOptions.StartStandardProjections
  fullName: EventStore.ClusterNode.ClusterNodeOptions.StartStandardProjections
- uid: EventStore.ClusterNode.ClusterNodeOptions.DisableHTTPCaching*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.DisableHTTPCaching
  isExternal: false
  name: DisableHTTPCaching
  nameWithType: ClusterNodeOptions.DisableHTTPCaching
  fullName: EventStore.ClusterNode.ClusterNodeOptions.DisableHTTPCaching
- uid: EventStore.ClusterNode.ClusterNodeOptions.MonoMinThreadpoolSize*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.MonoMinThreadpoolSize
  isExternal: false
  name: MonoMinThreadpoolSize
  nameWithType: ClusterNodeOptions.MonoMinThreadpoolSize
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MonoMinThreadpoolSize
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntIp*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntIp
  isExternal: false
  name: IntIp
  nameWithType: ClusterNodeOptions.IntIp
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntIp
- uid: IPAddress
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: IPAddress
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtIp*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtIp
  isExternal: false
  name: ExtIp
  nameWithType: ClusterNodeOptions.ExtIp
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtIp
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPort*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntHttpPort
  isExternal: false
  name: IntHttpPort
  nameWithType: ClusterNodeOptions.IntHttpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPort
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPort*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPort
  isExternal: false
  name: ExtHttpPort
  nameWithType: ClusterNodeOptions.ExtHttpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPort
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPort*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntTcpPort
  isExternal: false
  name: IntTcpPort
  nameWithType: ClusterNodeOptions.IntTcpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPort
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPort*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPort
  isExternal: false
  name: IntSecureTcpPort
  nameWithType: ClusterNodeOptions.IntSecureTcpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPort
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPort*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPort
  isExternal: false
  name: ExtTcpPort
  nameWithType: ClusterNodeOptions.ExtTcpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPort
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs
  isExternal: false
  name: ExtSecureTcpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPort*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPort
  isExternal: false
  name: ExtSecureTcpPort
  nameWithType: ClusterNodeOptions.ExtSecureTcpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPort
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtIpAdvertiseAs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtIpAdvertiseAs
  isExternal: false
  name: ExtIpAdvertiseAs
  nameWithType: ClusterNodeOptions.ExtIpAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtIpAdvertiseAs
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPortAdvertiseAs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPortAdvertiseAs
  isExternal: false
  name: ExtTcpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.ExtTcpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPortAdvertiseAs
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPortAdvertiseAs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPortAdvertiseAs
  isExternal: false
  name: ExtHttpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.ExtHttpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPortAdvertiseAs
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntIpAdvertiseAs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntIpAdvertiseAs
  isExternal: false
  name: IntIpAdvertiseAs
  nameWithType: ClusterNodeOptions.IntIpAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntIpAdvertiseAs
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPortAdvertiseAs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPortAdvertiseAs
  isExternal: false
  name: IntSecureTcpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.IntSecureTcpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPortAdvertiseAs
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPortAdvertiseAs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntTcpPortAdvertiseAs
  isExternal: false
  name: IntTcpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.IntTcpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPortAdvertiseAs
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPortAdvertiseAs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntHttpPortAdvertiseAs
  isExternal: false
  name: IntHttpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.IntHttpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPortAdvertiseAs
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatTimeout*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatTimeout
  isExternal: false
  name: IntTcpHeartbeatTimeout
  nameWithType: ClusterNodeOptions.IntTcpHeartbeatTimeout
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatTimeout
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatTimeout*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatTimeout
  isExternal: false
  name: ExtTcpHeartbeatTimeout
  nameWithType: ClusterNodeOptions.ExtTcpHeartbeatTimeout
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatTimeout
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatInterval*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatInterval
  isExternal: false
  name: IntTcpHeartbeatInterval
  nameWithType: ClusterNodeOptions.IntTcpHeartbeatInterval
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatInterval
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatInterval*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatInterval
  isExternal: false
  name: ExtTcpHeartbeatInterval
  nameWithType: ClusterNodeOptions.ExtTcpHeartbeatInterval
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatInterval
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipOnSingleNode*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.GossipOnSingleNode
  isExternal: false
  name: GossipOnSingleNode
  nameWithType: ClusterNodeOptions.GossipOnSingleNode
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipOnSingleNode
- uid: EventStore.ClusterNode.ClusterNodeOptions.ConnectionPendingSendBytesThreshold*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ConnectionPendingSendBytesThreshold
  isExternal: false
  name: ConnectionPendingSendBytesThreshold
  nameWithType: ClusterNodeOptions.ConnectionPendingSendBytesThreshold
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ConnectionPendingSendBytesThreshold
- uid: EventStore.ClusterNode.ClusterNodeOptions.Force*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Force
  isExternal: false
  name: Force
  nameWithType: ClusterNodeOptions.Force
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Force
- uid: EventStore.ClusterNode.ClusterNodeOptions.ClusterSize*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ClusterSize
  isExternal: false
  name: ClusterSize
  nameWithType: ClusterNodeOptions.ClusterSize
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ClusterSize
- uid: EventStore.ClusterNode.ClusterNodeOptions.NodePriority*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.NodePriority
  isExternal: false
  name: NodePriority
  nameWithType: ClusterNodeOptions.NodePriority
  fullName: EventStore.ClusterNode.ClusterNodeOptions.NodePriority
- uid: EventStore.ClusterNode.ClusterNodeOptions.MinFlushDelayMs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.MinFlushDelayMs
  isExternal: false
  name: MinFlushDelayMs
  nameWithType: ClusterNodeOptions.MinFlushDelayMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MinFlushDelayMs
- uid: System.Double
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: EventStore.ClusterNode.ClusterNodeOptions.CommitCount*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CommitCount
  isExternal: false
  name: CommitCount
  nameWithType: ClusterNodeOptions.CommitCount
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CommitCount
- uid: EventStore.ClusterNode.ClusterNodeOptions.PrepareCount*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.PrepareCount
  isExternal: false
  name: PrepareCount
  nameWithType: ClusterNodeOptions.PrepareCount
  fullName: EventStore.ClusterNode.ClusterNodeOptions.PrepareCount
- uid: EventStore.ClusterNode.ClusterNodeOptions.AdminOnExt*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.AdminOnExt
  isExternal: false
  name: AdminOnExt
  nameWithType: ClusterNodeOptions.AdminOnExt
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AdminOnExt
- uid: EventStore.ClusterNode.ClusterNodeOptions.StatsOnExt*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.StatsOnExt
  isExternal: false
  name: StatsOnExt
  nameWithType: ClusterNodeOptions.StatsOnExt
  fullName: EventStore.ClusterNode.ClusterNodeOptions.StatsOnExt
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipOnExt*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.GossipOnExt
  isExternal: false
  name: GossipOnExt
  nameWithType: ClusterNodeOptions.GossipOnExt
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipOnExt
- uid: EventStore.ClusterNode.ClusterNodeOptions.DisableScavengeMerging*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.DisableScavengeMerging
  isExternal: false
  name: DisableScavengeMerging
  nameWithType: ClusterNodeOptions.DisableScavengeMerging
  fullName: EventStore.ClusterNode.ClusterNodeOptions.DisableScavengeMerging
- uid: EventStore.ClusterNode.ClusterNodeOptions.ScavengeHistoryMaxAge*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ScavengeHistoryMaxAge
  isExternal: false
  name: ScavengeHistoryMaxAge
  nameWithType: ClusterNodeOptions.ScavengeHistoryMaxAge
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ScavengeHistoryMaxAge
- uid: EventStore.ClusterNode.ClusterNodeOptions.DiscoverViaDns*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.DiscoverViaDns
  isExternal: false
  name: DiscoverViaDns
  nameWithType: ClusterNodeOptions.DiscoverViaDns
  fullName: EventStore.ClusterNode.ClusterNodeOptions.DiscoverViaDns
- uid: EventStore.ClusterNode.ClusterNodeOptions.ClusterDns*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ClusterDns
  isExternal: false
  name: ClusterDns
  nameWithType: ClusterNodeOptions.ClusterDns
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ClusterDns
- uid: EventStore.ClusterNode.ClusterNodeOptions.ClusterGossipPort*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ClusterGossipPort
  isExternal: false
  name: ClusterGossipPort
  nameWithType: ClusterNodeOptions.ClusterGossipPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ClusterGossipPort
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipSeed*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.GossipSeed
  isExternal: false
  name: GossipSeed
  nameWithType: ClusterNodeOptions.GossipSeed
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipSeed
- uid: IPEndPoint[]
  name: IPEndPoint[]
  nameWithType: IPEndPoint[]
  fullName: IPEndPoint[]
  nameWithType.vb: IPEndPoint()
  fullName.vb: IPEndPoint()
  name.vb: IPEndPoint()
  spec.csharp:
  - uid: IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: IPEndPoint
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: IPEndPoint
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.ClusterNode.ClusterNodeOptions.StatsPeriodSec*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.StatsPeriodSec
  isExternal: false
  name: StatsPeriodSec
  nameWithType: ClusterNodeOptions.StatsPeriodSec
  fullName: EventStore.ClusterNode.ClusterNodeOptions.StatsPeriodSec
- uid: EventStore.ClusterNode.ClusterNodeOptions.CachedChunks*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CachedChunks
  isExternal: false
  name: CachedChunks
  nameWithType: ClusterNodeOptions.CachedChunks
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CachedChunks
- uid: EventStore.ClusterNode.ClusterNodeOptions.ReaderThreadsCount*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ReaderThreadsCount
  isExternal: false
  name: ReaderThreadsCount
  nameWithType: ClusterNodeOptions.ReaderThreadsCount
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ReaderThreadsCount
- uid: EventStore.ClusterNode.ClusterNodeOptions.ChunksCacheSize*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ChunksCacheSize
  isExternal: false
  name: ChunksCacheSize
  nameWithType: ClusterNodeOptions.ChunksCacheSize
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ChunksCacheSize
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.ClusterNode.ClusterNodeOptions.MaxMemTableSize*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.MaxMemTableSize
  isExternal: false
  name: MaxMemTableSize
  nameWithType: ClusterNodeOptions.MaxMemTableSize
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MaxMemTableSize
- uid: EventStore.ClusterNode.ClusterNodeOptions.HashCollisionReadLimit*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.HashCollisionReadLimit
  isExternal: false
  name: HashCollisionReadLimit
  nameWithType: ClusterNodeOptions.HashCollisionReadLimit
  fullName: EventStore.ClusterNode.ClusterNodeOptions.HashCollisionReadLimit
- uid: EventStore.ClusterNode.ClusterNodeOptions.Db*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Db
  isExternal: false
  name: Db
  nameWithType: ClusterNodeOptions.Db
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Db
- uid: EventStore.ClusterNode.ClusterNodeOptions.Index*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Index
  isExternal: false
  name: Index
  nameWithType: ClusterNodeOptions.Index
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Index
- uid: EventStore.ClusterNode.ClusterNodeOptions.MemDb*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.MemDb
  isExternal: false
  name: MemDb
  nameWithType: ClusterNodeOptions.MemDb
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MemDb
- uid: EventStore.ClusterNode.ClusterNodeOptions.SkipDbVerify*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.SkipDbVerify
  isExternal: false
  name: SkipDbVerify
  nameWithType: ClusterNodeOptions.SkipDbVerify
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SkipDbVerify
- uid: EventStore.ClusterNode.ClusterNodeOptions.WriteThrough*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.WriteThrough
  isExternal: false
  name: WriteThrough
  nameWithType: ClusterNodeOptions.WriteThrough
  fullName: EventStore.ClusterNode.ClusterNodeOptions.WriteThrough
- uid: EventStore.ClusterNode.ClusterNodeOptions.Unbuffered*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Unbuffered
  isExternal: false
  name: Unbuffered
  nameWithType: ClusterNodeOptions.Unbuffered
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Unbuffered
- uid: EventStore.ClusterNode.ClusterNodeOptions.ChunkInitialReaderCount*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ChunkInitialReaderCount
  isExternal: false
  name: ChunkInitialReaderCount
  nameWithType: ClusterNodeOptions.ChunkInitialReaderCount
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ChunkInitialReaderCount
- uid: EventStore.ClusterNode.ClusterNodeOptions.RunProjections*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.RunProjections
  isExternal: false
  name: RunProjections
  nameWithType: ClusterNodeOptions.RunProjections
  fullName: EventStore.ClusterNode.ClusterNodeOptions.RunProjections
- uid: EventStore.Common.Options.ProjectionType
  commentId: T:EventStore.Common.Options.ProjectionType
  parent: EventStore.Common.Options
  isExternal: false
  name: ProjectionType
  nameWithType: ProjectionType
  fullName: EventStore.Common.Options.ProjectionType
- uid: EventStore.ClusterNode.ClusterNodeOptions.ProjectionThreads*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ProjectionThreads
  isExternal: false
  name: ProjectionThreads
  nameWithType: ClusterNodeOptions.ProjectionThreads
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ProjectionThreads
- uid: EventStore.ClusterNode.ClusterNodeOptions.WorkerThreads*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.WorkerThreads
  isExternal: false
  name: WorkerThreads
  nameWithType: ClusterNodeOptions.WorkerThreads
  fullName: EventStore.ClusterNode.ClusterNodeOptions.WorkerThreads
- uid: EventStore.ClusterNode.ClusterNodeOptions.ProjectionsQueryExpiry*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ProjectionsQueryExpiry
  isExternal: false
  name: ProjectionsQueryExpiry
  nameWithType: ClusterNodeOptions.ProjectionsQueryExpiry
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ProjectionsQueryExpiry
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPrefixes*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntHttpPrefixes
  isExternal: false
  name: IntHttpPrefixes
  nameWithType: ClusterNodeOptions.IntHttpPrefixes
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPrefixes
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPrefixes*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPrefixes
  isExternal: false
  name: ExtHttpPrefixes
  nameWithType: ClusterNodeOptions.ExtHttpPrefixes
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPrefixes
- uid: EventStore.ClusterNode.ClusterNodeOptions.EnableTrustedAuth*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.EnableTrustedAuth
  isExternal: false
  name: EnableTrustedAuth
  nameWithType: ClusterNodeOptions.EnableTrustedAuth
  fullName: EventStore.ClusterNode.ClusterNodeOptions.EnableTrustedAuth
- uid: EventStore.ClusterNode.ClusterNodeOptions.AddInterfacePrefixes*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.AddInterfacePrefixes
  isExternal: false
  name: AddInterfacePrefixes
  nameWithType: ClusterNodeOptions.AddInterfacePrefixes
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AddInterfacePrefixes
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreLocation*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreLocation
  isExternal: false
  name: CertificateStoreLocation
  nameWithType: ClusterNodeOptions.CertificateStoreLocation
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreLocation
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreName*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreName
  isExternal: false
  name: CertificateStoreName
  nameWithType: ClusterNodeOptions.CertificateStoreName
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreName
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateSubjectName*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CertificateSubjectName
  isExternal: false
  name: CertificateSubjectName
  nameWithType: ClusterNodeOptions.CertificateSubjectName
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateSubjectName
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateThumbprint*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CertificateThumbprint
  isExternal: false
  name: CertificateThumbprint
  nameWithType: ClusterNodeOptions.CertificateThumbprint
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateThumbprint
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateFile*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CertificateFile
  isExternal: false
  name: CertificateFile
  nameWithType: ClusterNodeOptions.CertificateFile
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateFile
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificatePassword*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CertificatePassword
  isExternal: false
  name: CertificatePassword
  nameWithType: ClusterNodeOptions.CertificatePassword
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificatePassword
- uid: EventStore.ClusterNode.ClusterNodeOptions.UseInternalSsl*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.UseInternalSsl
  isExternal: false
  name: UseInternalSsl
  nameWithType: ClusterNodeOptions.UseInternalSsl
  fullName: EventStore.ClusterNode.ClusterNodeOptions.UseInternalSsl
- uid: EventStore.ClusterNode.ClusterNodeOptions.DisableInsecureTCP*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.DisableInsecureTCP
  isExternal: false
  name: DisableInsecureTCP
  nameWithType: ClusterNodeOptions.DisableInsecureTCP
  fullName: EventStore.ClusterNode.ClusterNodeOptions.DisableInsecureTCP
- uid: EventStore.ClusterNode.ClusterNodeOptions.SslTargetHost*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.SslTargetHost
  isExternal: false
  name: SslTargetHost
  nameWithType: ClusterNodeOptions.SslTargetHost
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SslTargetHost
- uid: EventStore.ClusterNode.ClusterNodeOptions.SslValidateServer*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.SslValidateServer
  isExternal: false
  name: SslValidateServer
  nameWithType: ClusterNodeOptions.SslValidateServer
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SslValidateServer
- uid: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationType*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.AuthenticationType
  isExternal: false
  name: AuthenticationType
  nameWithType: ClusterNodeOptions.AuthenticationType
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationType
- uid: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationConfig*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.AuthenticationConfig
  isExternal: false
  name: AuthenticationConfig
  nameWithType: ClusterNodeOptions.AuthenticationConfig
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationConfig
- uid: EventStore.ClusterNode.ClusterNodeOptions.PrepareTimeoutMs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.PrepareTimeoutMs
  isExternal: false
  name: PrepareTimeoutMs
  nameWithType: ClusterNodeOptions.PrepareTimeoutMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.PrepareTimeoutMs
- uid: EventStore.ClusterNode.ClusterNodeOptions.CommitTimeoutMs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CommitTimeoutMs
  isExternal: false
  name: CommitTimeoutMs
  nameWithType: ClusterNodeOptions.CommitTimeoutMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CommitTimeoutMs
- uid: EventStore.ClusterNode.ClusterNodeOptions.UnsafeDisableFlushToDisk*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.UnsafeDisableFlushToDisk
  isExternal: false
  name: UnsafeDisableFlushToDisk
  nameWithType: ClusterNodeOptions.UnsafeDisableFlushToDisk
  fullName: EventStore.ClusterNode.ClusterNodeOptions.UnsafeDisableFlushToDisk
- uid: EventStore.ClusterNode.ClusterNodeOptions.BetterOrdering*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.BetterOrdering
  isExternal: false
  name: BetterOrdering
  nameWithType: ClusterNodeOptions.BetterOrdering
  fullName: EventStore.ClusterNode.ClusterNodeOptions.BetterOrdering
- uid: EventStore.ClusterNode.ClusterNodeOptions.UnsafeIgnoreHardDelete*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.UnsafeIgnoreHardDelete
  isExternal: false
  name: UnsafeIgnoreHardDelete
  nameWithType: ClusterNodeOptions.UnsafeIgnoreHardDelete
  fullName: EventStore.ClusterNode.ClusterNodeOptions.UnsafeIgnoreHardDelete
- uid: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexVerify*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.SkipIndexVerify
  isExternal: false
  name: SkipIndexVerify
  nameWithType: ClusterNodeOptions.SkipIndexVerify
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexVerify
- uid: EventStore.ClusterNode.ClusterNodeOptions.IndexCacheDepth*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IndexCacheDepth
  isExternal: false
  name: IndexCacheDepth
  nameWithType: ClusterNodeOptions.IndexCacheDepth
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IndexCacheDepth
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipIntervalMs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.GossipIntervalMs
  isExternal: false
  name: GossipIntervalMs
  nameWithType: ClusterNodeOptions.GossipIntervalMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipIntervalMs
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipAllowedDifferenceMs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.GossipAllowedDifferenceMs
  isExternal: false
  name: GossipAllowedDifferenceMs
  nameWithType: ClusterNodeOptions.GossipAllowedDifferenceMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipAllowedDifferenceMs
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipTimeoutMs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.GossipTimeoutMs
  isExternal: false
  name: GossipTimeoutMs
  nameWithType: ClusterNodeOptions.GossipTimeoutMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipTimeoutMs
- uid: EventStore.ClusterNode.ClusterNodeOptions.EnableHistograms*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.EnableHistograms
  isExternal: false
  name: EnableHistograms
  nameWithType: ClusterNodeOptions.EnableHistograms
  fullName: EventStore.ClusterNode.ClusterNodeOptions.EnableHistograms
- uid: EventStore.ClusterNode.ClusterNodeOptions.LogHttpRequests*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.LogHttpRequests
  isExternal: false
  name: LogHttpRequests
  nameWithType: ClusterNodeOptions.LogHttpRequests
  fullName: EventStore.ClusterNode.ClusterNodeOptions.LogHttpRequests
- uid: EventStore.ClusterNode.ClusterNodeOptions.AlwaysKeepScavenged*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.AlwaysKeepScavenged
  isExternal: false
  name: AlwaysKeepScavenged
  nameWithType: ClusterNodeOptions.AlwaysKeepScavenged
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AlwaysKeepScavenged
- uid: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexScanOnReads*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.SkipIndexScanOnReads
  isExternal: false
  name: SkipIndexScanOnReads
  nameWithType: ClusterNodeOptions.SkipIndexScanOnReads
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexScanOnReads
- uid: EventStore.ClusterNode.ClusterNodeOptions.#ctor*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.#ctor
  isExternal: false
  name: ClusterNodeOptions
  nameWithType: ClusterNodeOptions.ClusterNodeOptions
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ClusterNodeOptions

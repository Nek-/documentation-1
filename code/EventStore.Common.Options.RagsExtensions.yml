### YamlMime:ManagedReference
items:
- uid: EventStore.Common.Options.RagsExtensions
  commentId: T:EventStore.Common.Options.RagsExtensions
  id: RagsExtensions
  parent: EventStore.Common.Options
  children:
  - EventStore.Common.Options.RagsExtensions.Cleanup(IEnumerable{OptionSource})
  - EventStore.Common.Options.RagsExtensions.EnsureCorrectType``1(IEnumerable{OptionSource})
  - EventStore.Common.Options.RagsExtensions.EnsureExistence``1(IEnumerable{OptionSource})
  - EventStore.Common.Options.RagsExtensions.FixNames``1(IEnumerable{OptionSource})
  langs:
  - csharp
  - vb
  name: RagsExtensions
  nameWithType: RagsExtensions
  fullName: EventStore.Common.Options.RagsExtensions
  type: Class
  source:
    remote:
      path: src/EventStore.Common/Options/EventStoreOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RagsExtensions
    path: ../EventStore/src/EventStore.Common/Options/EventStoreOptions.cs
    startLine: 116
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: 'public static class RagsExtensions : object'
    content.vb: >-
      Public Module RagsExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Common.Options.RagsExtensions.Cleanup(IEnumerable{OptionSource})
  commentId: M:EventStore.Common.Options.RagsExtensions.Cleanup(IEnumerable{OptionSource})
  id: Cleanup(IEnumerable{OptionSource})
  isExtensionMethod: true
  parent: EventStore.Common.Options.RagsExtensions
  langs:
  - csharp
  - vb
  name: Cleanup(IEnumerable<OptionSource>)
  nameWithType: RagsExtensions.Cleanup(IEnumerable<OptionSource>)
  fullName: EventStore.Common.Options.RagsExtensions.Cleanup(IEnumerable<OptionSource>)
  type: Method
  source:
    remote:
      path: src/EventStore.Common/Options/EventStoreOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Cleanup
    path: ../EventStore/src/EventStore.Common/Options/EventStoreOptions.cs
    startLine: 118
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: public static IEnumerable<OptionSource> Cleanup(this IEnumerable<OptionSource> optionSources)
    parameters:
    - id: optionSources
      type: IEnumerable{OptionSource}
    return:
      type: IEnumerable{OptionSource}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Cleanup(optionSources As IEnumerable(Of OptionSource)) As IEnumerable(Of OptionSource)
  overload: EventStore.Common.Options.RagsExtensions.Cleanup*
  nameWithType.vb: RagsExtensions.Cleanup(IEnumerable(Of OptionSource))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Common.Options.RagsExtensions.Cleanup(IEnumerable(Of OptionSource))
  name.vb: Cleanup(IEnumerable(Of OptionSource))
- uid: EventStore.Common.Options.RagsExtensions.FixNames``1(IEnumerable{OptionSource})
  commentId: M:EventStore.Common.Options.RagsExtensions.FixNames``1(IEnumerable{OptionSource})
  id: FixNames``1(IEnumerable{OptionSource})
  isExtensionMethod: true
  parent: EventStore.Common.Options.RagsExtensions
  langs:
  - csharp
  - vb
  name: FixNames<TOptions>(IEnumerable<OptionSource>)
  nameWithType: RagsExtensions.FixNames<TOptions>(IEnumerable<OptionSource>)
  fullName: EventStore.Common.Options.RagsExtensions.FixNames<TOptions>(IEnumerable<OptionSource>)
  type: Method
  source:
    remote:
      path: src/EventStore.Common/Options/EventStoreOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: FixNames
    path: ../EventStore/src/EventStore.Common/Options/EventStoreOptions.cs
    startLine: 122
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: 'public static IEnumerable<OptionSource> FixNames<TOptions>(this IEnumerable<OptionSource> optionSources)where TOptions : class'
    parameters:
    - id: optionSources
      type: IEnumerable{OptionSource}
    typeParameters:
    - id: TOptions
    return:
      type: IEnumerable{OptionSource}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FixNames(Of TOptions As Class)(optionSources As IEnumerable(Of OptionSource)) As IEnumerable(Of OptionSource)
  overload: EventStore.Common.Options.RagsExtensions.FixNames*
  nameWithType.vb: RagsExtensions.FixNames(Of TOptions)(IEnumerable(Of OptionSource))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Common.Options.RagsExtensions.FixNames(Of TOptions)(IEnumerable(Of OptionSource))
  name.vb: FixNames(Of TOptions)(IEnumerable(Of OptionSource))
- uid: EventStore.Common.Options.RagsExtensions.EnsureExistence``1(IEnumerable{OptionSource})
  commentId: M:EventStore.Common.Options.RagsExtensions.EnsureExistence``1(IEnumerable{OptionSource})
  id: EnsureExistence``1(IEnumerable{OptionSource})
  isExtensionMethod: true
  parent: EventStore.Common.Options.RagsExtensions
  langs:
  - csharp
  - vb
  name: EnsureExistence<TOptions>(IEnumerable<OptionSource>)
  nameWithType: RagsExtensions.EnsureExistence<TOptions>(IEnumerable<OptionSource>)
  fullName: EventStore.Common.Options.RagsExtensions.EnsureExistence<TOptions>(IEnumerable<OptionSource>)
  type: Method
  source:
    remote:
      path: src/EventStore.Common/Options/EventStoreOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EnsureExistence
    path: ../EventStore/src/EventStore.Common/Options/EventStoreOptions.cs
    startLine: 133
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: 'public static IEnumerable<OptionSource> EnsureExistence<TOptions>(this IEnumerable<OptionSource> optionSources)where TOptions : class'
    parameters:
    - id: optionSources
      type: IEnumerable{OptionSource}
    typeParameters:
    - id: TOptions
    return:
      type: IEnumerable{OptionSource}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function EnsureExistence(Of TOptions As Class)(optionSources As IEnumerable(Of OptionSource)) As IEnumerable(Of OptionSource)
  overload: EventStore.Common.Options.RagsExtensions.EnsureExistence*
  nameWithType.vb: RagsExtensions.EnsureExistence(Of TOptions)(IEnumerable(Of OptionSource))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Common.Options.RagsExtensions.EnsureExistence(Of TOptions)(IEnumerable(Of OptionSource))
  name.vb: EnsureExistence(Of TOptions)(IEnumerable(Of OptionSource))
- uid: EventStore.Common.Options.RagsExtensions.EnsureCorrectType``1(IEnumerable{OptionSource})
  commentId: M:EventStore.Common.Options.RagsExtensions.EnsureCorrectType``1(IEnumerable{OptionSource})
  id: EnsureCorrectType``1(IEnumerable{OptionSource})
  isExtensionMethod: true
  parent: EventStore.Common.Options.RagsExtensions
  langs:
  - csharp
  - vb
  name: EnsureCorrectType<TOptions>(IEnumerable<OptionSource>)
  nameWithType: RagsExtensions.EnsureCorrectType<TOptions>(IEnumerable<OptionSource>)
  fullName: EventStore.Common.Options.RagsExtensions.EnsureCorrectType<TOptions>(IEnumerable<OptionSource>)
  type: Method
  source:
    remote:
      path: src/EventStore.Common/Options/EventStoreOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EnsureCorrectType
    path: ../EventStore/src/EventStore.Common/Options/EventStoreOptions.cs
    startLine: 145
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: 'public static IEnumerable<OptionSource> EnsureCorrectType<TOptions>(this IEnumerable<OptionSource> optionSources)where TOptions : class, new ()'
    parameters:
    - id: optionSources
      type: IEnumerable{OptionSource}
    typeParameters:
    - id: TOptions
    return:
      type: IEnumerable{OptionSource}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function EnsureCorrectType(Of TOptions As {Class, New})(optionSources As IEnumerable(Of OptionSource)) As IEnumerable(Of OptionSource)
  overload: EventStore.Common.Options.RagsExtensions.EnsureCorrectType*
  nameWithType.vb: RagsExtensions.EnsureCorrectType(Of TOptions)(IEnumerable(Of OptionSource))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Common.Options.RagsExtensions.EnsureCorrectType(Of TOptions)(IEnumerable(Of OptionSource))
  name.vb: EnsureCorrectType(Of TOptions)(IEnumerable(Of OptionSource))
references:
- uid: EventStore.Common.Options
  commentId: N:EventStore.Common.Options
  isExternal: false
  name: EventStore.Common.Options
  nameWithType: EventStore.Common.Options
  fullName: EventStore.Common.Options
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Common.Options.RagsExtensions.Cleanup*
  commentId: Overload:EventStore.Common.Options.RagsExtensions.Cleanup
  isExternal: false
  name: Cleanup
  nameWithType: RagsExtensions.Cleanup
  fullName: EventStore.Common.Options.RagsExtensions.Cleanup
- uid: IEnumerable{OptionSource}
  commentId: '!:IEnumerable{OptionSource}'
  definition: IEnumerable`1
  name: IEnumerable<OptionSource>
  nameWithType: IEnumerable<OptionSource>
  fullName: IEnumerable<OptionSource>
  nameWithType.vb: IEnumerable(Of OptionSource)
  fullName.vb: IEnumerable(Of OptionSource)
  name.vb: IEnumerable(Of OptionSource)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OptionSource
    name: OptionSource
    nameWithType: OptionSource
    fullName: OptionSource
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OptionSource
    name: OptionSource
    nameWithType: OptionSource
    fullName: OptionSource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Options.RagsExtensions.FixNames*
  commentId: Overload:EventStore.Common.Options.RagsExtensions.FixNames
  isExternal: false
  name: FixNames
  nameWithType: RagsExtensions.FixNames
  fullName: EventStore.Common.Options.RagsExtensions.FixNames
- uid: EventStore.Common.Options.RagsExtensions.EnsureExistence*
  commentId: Overload:EventStore.Common.Options.RagsExtensions.EnsureExistence
  isExternal: false
  name: EnsureExistence
  nameWithType: RagsExtensions.EnsureExistence
  fullName: EventStore.Common.Options.RagsExtensions.EnsureExistence
- uid: EventStore.Common.Options.RagsExtensions.EnsureCorrectType*
  commentId: Overload:EventStore.Common.Options.RagsExtensions.EnsureCorrectType
  isExternal: false
  name: EnsureCorrectType
  nameWithType: RagsExtensions.EnsureCorrectType
  fullName: EventStore.Common.Options.RagsExtensions.EnsureCorrectType

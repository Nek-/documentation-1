### YamlMime:ManagedReference
items:
- uid: EventStore.Common.Utils.Empty
  commentId: T:EventStore.Common.Utils.Empty
  id: Empty
  parent: EventStore.Common.Utils
  children:
  - EventStore.Common.Utils.Empty.Action
  - EventStore.Common.Utils.Empty.ByteArray
  - EventStore.Common.Utils.Empty.Json
  - EventStore.Common.Utils.Empty.ObjectArray
  - EventStore.Common.Utils.Empty.Result
  - EventStore.Common.Utils.Empty.StringArray
  - EventStore.Common.Utils.Empty.Xml
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Empty
  fullName: EventStore.Common.Utils.Empty
  type: Class
  source:
    remote:
      path: src/EventStore.Common/Utils/Empty.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Empty
    path: ../EventStore/src/EventStore.Common/Utils/Empty.cs
    startLine: 4
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: 'public static class Empty : object'
    content.vb: >-
      Public Module Empty
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Common.Utils.Empty.ByteArray
  commentId: F:EventStore.Common.Utils.Empty.ByteArray
  id: ByteArray
  parent: EventStore.Common.Utils.Empty
  langs:
  - csharp
  - vb
  name: ByteArray
  nameWithType: Empty.ByteArray
  fullName: EventStore.Common.Utils.Empty.ByteArray
  type: Field
  source:
    remote:
      path: src/EventStore.Common/Utils/Empty.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ByteArray
    path: ../EventStore/src/EventStore.Common/Utils/Empty.cs
    startLine: 6
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public static readonly byte[] ByteArray
    return:
      type: System.Byte[]
    content.vb: Public Shared ReadOnly ByteArray As Byte()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Common.Utils.Empty.StringArray
  commentId: F:EventStore.Common.Utils.Empty.StringArray
  id: StringArray
  parent: EventStore.Common.Utils.Empty
  langs:
  - csharp
  - vb
  name: StringArray
  nameWithType: Empty.StringArray
  fullName: EventStore.Common.Utils.Empty.StringArray
  type: Field
  source:
    remote:
      path: src/EventStore.Common/Utils/Empty.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: StringArray
    path: ../EventStore/src/EventStore.Common/Utils/Empty.cs
    startLine: 7
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public static readonly string[] StringArray
    return:
      type: System.String[]
    content.vb: Public Shared ReadOnly StringArray As String()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Common.Utils.Empty.ObjectArray
  commentId: F:EventStore.Common.Utils.Empty.ObjectArray
  id: ObjectArray
  parent: EventStore.Common.Utils.Empty
  langs:
  - csharp
  - vb
  name: ObjectArray
  nameWithType: Empty.ObjectArray
  fullName: EventStore.Common.Utils.Empty.ObjectArray
  type: Field
  source:
    remote:
      path: src/EventStore.Common/Utils/Empty.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ObjectArray
    path: ../EventStore/src/EventStore.Common/Utils/Empty.cs
    startLine: 8
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public static readonly object[] ObjectArray
    return:
      type: System.Object[]
    content.vb: Public Shared ReadOnly ObjectArray As Object()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Common.Utils.Empty.Action
  commentId: F:EventStore.Common.Utils.Empty.Action
  id: Action
  parent: EventStore.Common.Utils.Empty
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: Empty.Action
  fullName: EventStore.Common.Utils.Empty.Action
  type: Field
  source:
    remote:
      path: src/EventStore.Common/Utils/Empty.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Action
    path: ../EventStore/src/EventStore.Common/Utils/Empty.cs
    startLine: 10
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public static readonly Action Action
    return:
      type: Action
    content.vb: Public Shared ReadOnly Action As Action
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Common.Utils.Empty.Result
  commentId: F:EventStore.Common.Utils.Empty.Result
  id: Result
  parent: EventStore.Common.Utils.Empty
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: Empty.Result
  fullName: EventStore.Common.Utils.Empty.Result
  type: Field
  source:
    remote:
      path: src/EventStore.Common/Utils/Empty.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Result
    path: ../EventStore/src/EventStore.Common/Utils/Empty.cs
    startLine: 11
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public static readonly object Result
    return:
      type: System.Object
    content.vb: Public Shared ReadOnly Result As Object
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Common.Utils.Empty.Xml
  commentId: F:EventStore.Common.Utils.Empty.Xml
  id: Xml
  parent: EventStore.Common.Utils.Empty
  langs:
  - csharp
  - vb
  name: Xml
  nameWithType: Empty.Xml
  fullName: EventStore.Common.Utils.Empty.Xml
  type: Field
  source:
    remote:
      path: src/EventStore.Common/Utils/Empty.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Xml
    path: ../EventStore/src/EventStore.Common/Utils/Empty.cs
    startLine: 12
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public static readonly string Xml
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Xml As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Common.Utils.Empty.Json
  commentId: F:EventStore.Common.Utils.Empty.Json
  id: Json
  parent: EventStore.Common.Utils.Empty
  langs:
  - csharp
  - vb
  name: Json
  nameWithType: Empty.Json
  fullName: EventStore.Common.Utils.Empty.Json
  type: Field
  source:
    remote:
      path: src/EventStore.Common/Utils/Empty.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Json
    path: ../EventStore/src/EventStore.Common/Utils/Empty.cs
    startLine: 13
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public static readonly string Json
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Json As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Action
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: Action
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

### YamlMime:ManagedReference
items:
- uid: EventStore.Common.Utils.IPEndPointConverter
  commentId: T:EventStore.Common.Utils.IPEndPointConverter
  id: IPEndPointConverter
  parent: EventStore.Common.Utils
  children:
  - EventStore.Common.Utils.IPEndPointConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  - EventStore.Common.Utils.IPEndPointConverter.ConvertFrom(ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  langs:
  - csharp
  - vb
  name: IPEndPointConverter
  nameWithType: IPEndPointConverter
  fullName: EventStore.Common.Utils.IPEndPointConverter
  type: Class
  source:
    remote:
      path: src/EventStore.Common/Utils/IPEndpointConverter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IPEndPointConverter
    path: ../EventStore/src/EventStore.Common/Utils/IPEndpointConverter.cs
    startLine: 9
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: 'public class IPEndPointConverter : TypeConverter'
    content.vb: >-
      Public Class IPEndPointConverter
          Inherits TypeConverter
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Common.Utils.IPEndPointConverter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Common.Utils.IPEndPointConverter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Common.Utils.IPEndPointConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  commentId: M:EventStore.Common.Utils.IPEndPointConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  id: CanConvertFrom(ITypeDescriptorContext,Type)
  parent: EventStore.Common.Utils.IPEndPointConverter
  langs:
  - csharp
  - vb
  name: CanConvertFrom(ITypeDescriptorContext, Type)
  nameWithType: IPEndPointConverter.CanConvertFrom(ITypeDescriptorContext, Type)
  fullName: EventStore.Common.Utils.IPEndPointConverter.CanConvertFrom(ITypeDescriptorContext, Type)
  type: Method
  source:
    remote:
      path: src/EventStore.Common/Utils/IPEndpointConverter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CanConvertFrom
    path: ../EventStore/src/EventStore.Common/Utils/IPEndpointConverter.cs
    startLine: 11
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
    parameters:
    - id: context
      type: ITypeDescriptorContext
    - id: sourceType
      type: Type
    return:
      type: System.Boolean
    content.vb: Public Overrides Function CanConvertFrom(context As ITypeDescriptorContext, sourceType As Type) As Boolean
  overload: EventStore.Common.Utils.IPEndPointConverter.CanConvertFrom*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Common.Utils.IPEndPointConverter.ConvertFrom(ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  commentId: M:EventStore.Common.Utils.IPEndPointConverter.ConvertFrom(ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: EventStore.Common.Utils.IPEndPointConverter
  langs:
  - csharp
  - vb
  name: ConvertFrom(ITypeDescriptorContext, Globalization.CultureInfo, Object)
  nameWithType: IPEndPointConverter.ConvertFrom(ITypeDescriptorContext, Globalization.CultureInfo, Object)
  fullName: EventStore.Common.Utils.IPEndPointConverter.ConvertFrom(ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)
  type: Method
  source:
    remote:
      path: src/EventStore.Common/Utils/IPEndpointConverter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ConvertFrom
    path: ../EventStore/src/EventStore.Common/Utils/IPEndpointConverter.cs
    startLine: 15
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public override object ConvertFrom(ITypeDescriptorContext context, Globalization.CultureInfo culture, object value)
    parameters:
    - id: context
      type: ITypeDescriptorContext
    - id: culture
      type: System.Globalization.CultureInfo
    - id: value
      type: System.Object
    return:
      type: System.Object
    content.vb: Public Overrides Function ConvertFrom(context As ITypeDescriptorContext, culture As Globalization.CultureInfo, value As Object) As Object
  overload: EventStore.Common.Utils.IPEndPointConverter.ConvertFrom*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.IPEndPointConverter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IPEndPointConverter>()
  nameWithType: ProtobufExtensions.Serialize<IPEndPointConverter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Common.Utils.IPEndPointConverter>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IPEndPointConverter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Common.Utils.IPEndPointConverter)()
  name.vb: Serialize(Of IPEndPointConverter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IPEndPointConverter>
    nameWithType: ProtobufExtensions.Serialize<IPEndPointConverter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Common.Utils.IPEndPointConverter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IPEndPointConverter)
    nameWithType: ProtobufExtensions.Serialize(Of IPEndPointConverter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Common.Utils.IPEndPointConverter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.IPEndPointConverter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IPEndPointConverter>()
  nameWithType: ProtobufExtensions.SerializeToArray<IPEndPointConverter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Common.Utils.IPEndPointConverter>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IPEndPointConverter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Common.Utils.IPEndPointConverter)()
  name.vb: SerializeToArray(Of IPEndPointConverter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IPEndPointConverter>
    nameWithType: ProtobufExtensions.SerializeToArray<IPEndPointConverter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Common.Utils.IPEndPointConverter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IPEndPointConverter)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IPEndPointConverter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Common.Utils.IPEndPointConverter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Common.Utils.IPEndPointConverter.CanConvertFrom*
  commentId: Overload:EventStore.Common.Utils.IPEndPointConverter.CanConvertFrom
  isExternal: false
  name: CanConvertFrom
  nameWithType: IPEndPointConverter.CanConvertFrom
  fullName: EventStore.Common.Utils.IPEndPointConverter.CanConvertFrom
- uid: ITypeDescriptorContext
  isExternal: true
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: ITypeDescriptorContext
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Common.Utils.IPEndPointConverter.ConvertFrom*
  commentId: Overload:EventStore.Common.Utils.IPEndPointConverter.ConvertFrom
  isExternal: false
  name: ConvertFrom
  nameWithType: IPEndPointConverter.ConvertFrom
  fullName: EventStore.Common.Utils.IPEndPointConverter.ConvertFrom
- uid: System.Globalization.CultureInfo
  isExternal: true
  name: Globalization.CultureInfo
  nameWithType: Globalization.CultureInfo
  fullName: System.Globalization.CultureInfo

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Authentication.AuthenticationRequest
  commentId: T:EventStore.Core.Authentication.AuthenticationRequest
  id: AuthenticationRequest
  parent: EventStore.Core.Authentication
  children:
  - EventStore.Core.Authentication.AuthenticationRequest.#ctor(System.String,System.String)
  - EventStore.Core.Authentication.AuthenticationRequest.Authenticated(IPrincipal)
  - EventStore.Core.Authentication.AuthenticationRequest.Error
  - EventStore.Core.Authentication.AuthenticationRequest.Name
  - EventStore.Core.Authentication.AuthenticationRequest.NotReady
  - EventStore.Core.Authentication.AuthenticationRequest.SuppliedPassword
  - EventStore.Core.Authentication.AuthenticationRequest.Unauthorized
  langs:
  - csharp
  - vb
  name: AuthenticationRequest
  nameWithType: AuthenticationRequest
  fullName: EventStore.Core.Authentication.AuthenticationRequest
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Authentication/AuthenticationRequest.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AuthenticationRequest
    path: ../EventStore/src/EventStore.Core/Authentication/AuthenticationRequest.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: 'public abstract class AuthenticationRequest : object'
    content.vb: >-
      Public MustInherit Class AuthenticationRequest

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Authentication.AuthenticationRequest.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Authentication.AuthenticationRequest.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Core.Authentication.AuthenticationRequest.Name
  commentId: F:EventStore.Core.Authentication.AuthenticationRequest.Name
  id: Name
  parent: EventStore.Core.Authentication.AuthenticationRequest
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AuthenticationRequest.Name
  fullName: EventStore.Core.Authentication.AuthenticationRequest.Name
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Authentication/AuthenticationRequest.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Name
    path: ../EventStore/src/EventStore.Core/Authentication/AuthenticationRequest.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Authentication.AuthenticationRequest.SuppliedPassword
  commentId: F:EventStore.Core.Authentication.AuthenticationRequest.SuppliedPassword
  id: SuppliedPassword
  parent: EventStore.Core.Authentication.AuthenticationRequest
  langs:
  - csharp
  - vb
  name: SuppliedPassword
  nameWithType: AuthenticationRequest.SuppliedPassword
  fullName: EventStore.Core.Authentication.AuthenticationRequest.SuppliedPassword
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Authentication/AuthenticationRequest.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SuppliedPassword
    path: ../EventStore/src/EventStore.Core/Authentication/AuthenticationRequest.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: public readonly string SuppliedPassword
    return:
      type: System.String
    content.vb: Public ReadOnly SuppliedPassword As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Authentication.AuthenticationRequest.#ctor(System.String,System.String)
  commentId: M:EventStore.Core.Authentication.AuthenticationRequest.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: EventStore.Core.Authentication.AuthenticationRequest
  langs:
  - csharp
  - vb
  name: AuthenticationRequest(String, String)
  nameWithType: AuthenticationRequest.AuthenticationRequest(String, String)
  fullName: EventStore.Core.Authentication.AuthenticationRequest.AuthenticationRequest(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Authentication/AuthenticationRequest.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Authentication/AuthenticationRequest.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: protected AuthenticationRequest(string name, string suppliedPassword)
    parameters:
    - id: name
      type: System.String
    - id: suppliedPassword
      type: System.String
    content.vb: Protected Sub New(name As String, suppliedPassword As String)
  overload: EventStore.Core.Authentication.AuthenticationRequest.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Authentication.AuthenticationRequest.Unauthorized
  commentId: M:EventStore.Core.Authentication.AuthenticationRequest.Unauthorized
  id: Unauthorized
  parent: EventStore.Core.Authentication.AuthenticationRequest
  langs:
  - csharp
  - vb
  name: Unauthorized()
  nameWithType: AuthenticationRequest.Unauthorized()
  fullName: EventStore.Core.Authentication.AuthenticationRequest.Unauthorized()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Authentication/AuthenticationRequest.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Unauthorized
    path: ../EventStore/src/EventStore.Core/Authentication/AuthenticationRequest.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: public abstract void Unauthorized()
    content.vb: Public MustOverride Sub Unauthorized
  overload: EventStore.Core.Authentication.AuthenticationRequest.Unauthorized*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: EventStore.Core.Authentication.AuthenticationRequest.Authenticated(IPrincipal)
  commentId: M:EventStore.Core.Authentication.AuthenticationRequest.Authenticated(IPrincipal)
  id: Authenticated(IPrincipal)
  parent: EventStore.Core.Authentication.AuthenticationRequest
  langs:
  - csharp
  - vb
  name: Authenticated(IPrincipal)
  nameWithType: AuthenticationRequest.Authenticated(IPrincipal)
  fullName: EventStore.Core.Authentication.AuthenticationRequest.Authenticated(IPrincipal)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Authentication/AuthenticationRequest.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Authenticated
    path: ../EventStore/src/EventStore.Core/Authentication/AuthenticationRequest.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: public abstract void Authenticated(IPrincipal principal)
    parameters:
    - id: principal
      type: IPrincipal
    content.vb: Public MustOverride Sub Authenticated(principal As IPrincipal)
  overload: EventStore.Core.Authentication.AuthenticationRequest.Authenticated*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: EventStore.Core.Authentication.AuthenticationRequest.Error
  commentId: M:EventStore.Core.Authentication.AuthenticationRequest.Error
  id: Error
  parent: EventStore.Core.Authentication.AuthenticationRequest
  langs:
  - csharp
  - vb
  name: Error()
  nameWithType: AuthenticationRequest.Error()
  fullName: EventStore.Core.Authentication.AuthenticationRequest.Error()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Authentication/AuthenticationRequest.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Error
    path: ../EventStore/src/EventStore.Core/Authentication/AuthenticationRequest.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: public abstract void Error()
    content.vb: Public MustOverride Sub Error
  overload: EventStore.Core.Authentication.AuthenticationRequest.Error*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: EventStore.Core.Authentication.AuthenticationRequest.NotReady
  commentId: M:EventStore.Core.Authentication.AuthenticationRequest.NotReady
  id: NotReady
  parent: EventStore.Core.Authentication.AuthenticationRequest
  langs:
  - csharp
  - vb
  name: NotReady()
  nameWithType: AuthenticationRequest.NotReady()
  fullName: EventStore.Core.Authentication.AuthenticationRequest.NotReady()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Authentication/AuthenticationRequest.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: NotReady
    path: ../EventStore/src/EventStore.Core/Authentication/AuthenticationRequest.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: public abstract void NotReady()
    content.vb: Public MustOverride Sub NotReady
  overload: EventStore.Core.Authentication.AuthenticationRequest.NotReady*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: EventStore.Core.Authentication
  commentId: N:EventStore.Core.Authentication
  isExternal: false
  name: EventStore.Core.Authentication
  nameWithType: EventStore.Core.Authentication
  fullName: EventStore.Core.Authentication
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Authentication.AuthenticationRequest.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<AuthenticationRequest>()
  nameWithType: ProtobufExtensions.Serialize<AuthenticationRequest>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Authentication.AuthenticationRequest>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of AuthenticationRequest)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Authentication.AuthenticationRequest)()
  name.vb: Serialize(Of AuthenticationRequest)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<AuthenticationRequest>
    nameWithType: ProtobufExtensions.Serialize<AuthenticationRequest>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Authentication.AuthenticationRequest>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of AuthenticationRequest)
    nameWithType: ProtobufExtensions.Serialize(Of AuthenticationRequest)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Authentication.AuthenticationRequest)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Authentication.AuthenticationRequest.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<AuthenticationRequest>()
  nameWithType: ProtobufExtensions.SerializeToArray<AuthenticationRequest>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Authentication.AuthenticationRequest>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of AuthenticationRequest)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Authentication.AuthenticationRequest)()
  name.vb: SerializeToArray(Of AuthenticationRequest)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<AuthenticationRequest>
    nameWithType: ProtobufExtensions.SerializeToArray<AuthenticationRequest>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Authentication.AuthenticationRequest>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of AuthenticationRequest)
    nameWithType: ProtobufExtensions.SerializeToArray(Of AuthenticationRequest)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Authentication.AuthenticationRequest)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Authentication.AuthenticationRequest.#ctor*
  commentId: Overload:EventStore.Core.Authentication.AuthenticationRequest.#ctor
  isExternal: false
  name: AuthenticationRequest
  nameWithType: AuthenticationRequest.AuthenticationRequest
  fullName: EventStore.Core.Authentication.AuthenticationRequest.AuthenticationRequest
- uid: EventStore.Core.Authentication.AuthenticationRequest.Unauthorized*
  commentId: Overload:EventStore.Core.Authentication.AuthenticationRequest.Unauthorized
  isExternal: false
  name: Unauthorized
  nameWithType: AuthenticationRequest.Unauthorized
  fullName: EventStore.Core.Authentication.AuthenticationRequest.Unauthorized
- uid: EventStore.Core.Authentication.AuthenticationRequest.Authenticated*
  commentId: Overload:EventStore.Core.Authentication.AuthenticationRequest.Authenticated
  isExternal: false
  name: Authenticated
  nameWithType: AuthenticationRequest.Authenticated
  fullName: EventStore.Core.Authentication.AuthenticationRequest.Authenticated
- uid: IPrincipal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: IPrincipal
- uid: EventStore.Core.Authentication.AuthenticationRequest.Error*
  commentId: Overload:EventStore.Core.Authentication.AuthenticationRequest.Error
  isExternal: false
  name: Error
  nameWithType: AuthenticationRequest.Error
  fullName: EventStore.Core.Authentication.AuthenticationRequest.Error
- uid: EventStore.Core.Authentication.AuthenticationRequest.NotReady*
  commentId: Overload:EventStore.Core.Authentication.AuthenticationRequest.NotReady
  isExternal: false
  name: NotReady
  nameWithType: AuthenticationRequest.NotReady
  fullName: EventStore.Core.Authentication.AuthenticationRequest.NotReady

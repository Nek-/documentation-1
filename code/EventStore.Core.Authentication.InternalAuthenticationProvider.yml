### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Authentication.InternalAuthenticationProvider
  commentId: T:EventStore.Core.Authentication.InternalAuthenticationProvider
  id: InternalAuthenticationProvider
  parent: EventStore.Core.Authentication
  children:
  - EventStore.Core.Authentication.InternalAuthenticationProvider.#ctor(EventStore.Core.Helpers.IODispatcher,EventStore.Core.Authentication.PasswordHashAlgorithm,System.Int32)
  - EventStore.Core.Authentication.InternalAuthenticationProvider.Authenticate(EventStore.Core.Authentication.AuthenticationRequest)
  - EventStore.Core.Authentication.InternalAuthenticationProvider.Handle(EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache)
  langs:
  - csharp
  - vb
  name: InternalAuthenticationProvider
  nameWithType: InternalAuthenticationProvider
  fullName: EventStore.Core.Authentication.InternalAuthenticationProvider
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Authentication/InternalAuthenticationProvider.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InternalAuthenticationProvider
    path: ../EventStore/src/EventStore.Core/Authentication/InternalAuthenticationProvider.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: 'public class InternalAuthenticationProvider : object, IAuthenticationProvider, IHandle<InternalAuthenticationProviderMessages.ResetPasswordCache>'
    content.vb: >-
      Public Class InternalAuthenticationProvider
          Inherits Object
          Implements IAuthenticationProvider, IHandle(Of InternalAuthenticationProviderMessages.ResetPasswordCache)
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Authentication.IAuthenticationProvider
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache}
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Authentication.InternalAuthenticationProvider.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Authentication.InternalAuthenticationProvider.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Authentication.InternalAuthenticationProvider.#ctor(EventStore.Core.Helpers.IODispatcher,EventStore.Core.Authentication.PasswordHashAlgorithm,System.Int32)
  commentId: M:EventStore.Core.Authentication.InternalAuthenticationProvider.#ctor(EventStore.Core.Helpers.IODispatcher,EventStore.Core.Authentication.PasswordHashAlgorithm,System.Int32)
  id: '#ctor(EventStore.Core.Helpers.IODispatcher,EventStore.Core.Authentication.PasswordHashAlgorithm,System.Int32)'
  parent: EventStore.Core.Authentication.InternalAuthenticationProvider
  langs:
  - csharp
  - vb
  name: InternalAuthenticationProvider(IODispatcher, PasswordHashAlgorithm, Int32)
  nameWithType: InternalAuthenticationProvider.InternalAuthenticationProvider(IODispatcher, PasswordHashAlgorithm, Int32)
  fullName: EventStore.Core.Authentication.InternalAuthenticationProvider.InternalAuthenticationProvider(EventStore.Core.Helpers.IODispatcher, EventStore.Core.Authentication.PasswordHashAlgorithm, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Authentication/InternalAuthenticationProvider.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Authentication/InternalAuthenticationProvider.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: public InternalAuthenticationProvider(IODispatcher ioDispatcher, PasswordHashAlgorithm passwordHashAlgorithm, int cacheSize)
    parameters:
    - id: ioDispatcher
      type: EventStore.Core.Helpers.IODispatcher
    - id: passwordHashAlgorithm
      type: EventStore.Core.Authentication.PasswordHashAlgorithm
    - id: cacheSize
      type: System.Int32
    content.vb: Public Sub New(ioDispatcher As IODispatcher, passwordHashAlgorithm As PasswordHashAlgorithm, cacheSize As Integer)
  overload: EventStore.Core.Authentication.InternalAuthenticationProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Authentication.InternalAuthenticationProvider.Authenticate(EventStore.Core.Authentication.AuthenticationRequest)
  commentId: M:EventStore.Core.Authentication.InternalAuthenticationProvider.Authenticate(EventStore.Core.Authentication.AuthenticationRequest)
  id: Authenticate(EventStore.Core.Authentication.AuthenticationRequest)
  parent: EventStore.Core.Authentication.InternalAuthenticationProvider
  langs:
  - csharp
  - vb
  name: Authenticate(AuthenticationRequest)
  nameWithType: InternalAuthenticationProvider.Authenticate(AuthenticationRequest)
  fullName: EventStore.Core.Authentication.InternalAuthenticationProvider.Authenticate(EventStore.Core.Authentication.AuthenticationRequest)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Authentication/InternalAuthenticationProvider.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Authenticate
    path: ../EventStore/src/EventStore.Core/Authentication/InternalAuthenticationProvider.cs
    startLine: 25
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: public void Authenticate(AuthenticationRequest authenticationRequest)
    parameters:
    - id: authenticationRequest
      type: EventStore.Core.Authentication.AuthenticationRequest
    content.vb: Public Sub Authenticate(authenticationRequest As AuthenticationRequest)
  overload: EventStore.Core.Authentication.InternalAuthenticationProvider.Authenticate*
  implements:
  - EventStore.Core.Authentication.IAuthenticationProvider.Authenticate(EventStore.Core.Authentication.AuthenticationRequest)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Authentication.InternalAuthenticationProvider.Handle(EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache)
  commentId: M:EventStore.Core.Authentication.InternalAuthenticationProvider.Handle(EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache)
  id: Handle(EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache)
  parent: EventStore.Core.Authentication.InternalAuthenticationProvider
  langs:
  - csharp
  - vb
  name: Handle(InternalAuthenticationProviderMessages.ResetPasswordCache)
  nameWithType: InternalAuthenticationProvider.Handle(InternalAuthenticationProviderMessages.ResetPasswordCache)
  fullName: EventStore.Core.Authentication.InternalAuthenticationProvider.Handle(EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Authentication/InternalAuthenticationProvider.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Core/Authentication/InternalAuthenticationProvider.cs
    startLine: 112
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: public void Handle(InternalAuthenticationProviderMessages.ResetPasswordCache message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache
    content.vb: Public Sub Handle(message As InternalAuthenticationProviderMessages.ResetPasswordCache)
  overload: EventStore.Core.Authentication.InternalAuthenticationProvider.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache}.Handle(EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Authentication
  commentId: N:EventStore.Core.Authentication
  isExternal: false
  name: EventStore.Core.Authentication
  nameWithType: EventStore.Core.Authentication
  fullName: EventStore.Core.Authentication
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Authentication.IAuthenticationProvider
  commentId: T:EventStore.Core.Authentication.IAuthenticationProvider
  parent: EventStore.Core.Authentication
  isExternal: false
  name: IAuthenticationProvider
  nameWithType: IAuthenticationProvider
  fullName: EventStore.Core.Authentication.IAuthenticationProvider
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<InternalAuthenticationProviderMessages.ResetPasswordCache>
  nameWithType: IHandle<InternalAuthenticationProviderMessages.ResetPasswordCache>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache>
  nameWithType.vb: IHandle(Of InternalAuthenticationProviderMessages.ResetPasswordCache)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache)
  name.vb: IHandle(Of InternalAuthenticationProviderMessages.ResetPasswordCache)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache
    name: InternalAuthenticationProviderMessages.ResetPasswordCache
    nameWithType: InternalAuthenticationProviderMessages.ResetPasswordCache
    fullName: EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache
    name: InternalAuthenticationProviderMessages.ResetPasswordCache
    nameWithType: InternalAuthenticationProviderMessages.ResetPasswordCache
    fullName: EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Authentication.InternalAuthenticationProvider.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<InternalAuthenticationProvider>()
  nameWithType: ProtobufExtensions.Serialize<InternalAuthenticationProvider>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Authentication.InternalAuthenticationProvider>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of InternalAuthenticationProvider)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Authentication.InternalAuthenticationProvider)()
  name.vb: Serialize(Of InternalAuthenticationProvider)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<InternalAuthenticationProvider>
    nameWithType: ProtobufExtensions.Serialize<InternalAuthenticationProvider>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Authentication.InternalAuthenticationProvider>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of InternalAuthenticationProvider)
    nameWithType: ProtobufExtensions.Serialize(Of InternalAuthenticationProvider)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Authentication.InternalAuthenticationProvider)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Authentication.InternalAuthenticationProvider.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<InternalAuthenticationProvider>()
  nameWithType: ProtobufExtensions.SerializeToArray<InternalAuthenticationProvider>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Authentication.InternalAuthenticationProvider>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of InternalAuthenticationProvider)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Authentication.InternalAuthenticationProvider)()
  name.vb: SerializeToArray(Of InternalAuthenticationProvider)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<InternalAuthenticationProvider>
    nameWithType: ProtobufExtensions.SerializeToArray<InternalAuthenticationProvider>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Authentication.InternalAuthenticationProvider>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of InternalAuthenticationProvider)
    nameWithType: ProtobufExtensions.SerializeToArray(Of InternalAuthenticationProvider)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Authentication.InternalAuthenticationProvider)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  isExternal: false
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Authentication.InternalAuthenticationProvider.#ctor*
  commentId: Overload:EventStore.Core.Authentication.InternalAuthenticationProvider.#ctor
  isExternal: false
  name: InternalAuthenticationProvider
  nameWithType: InternalAuthenticationProvider.InternalAuthenticationProvider
  fullName: EventStore.Core.Authentication.InternalAuthenticationProvider.InternalAuthenticationProvider
- uid: EventStore.Core.Helpers.IODispatcher
  commentId: T:EventStore.Core.Helpers.IODispatcher
  parent: EventStore.Core.Helpers
  isExternal: false
  name: IODispatcher
  nameWithType: IODispatcher
  fullName: EventStore.Core.Helpers.IODispatcher
- uid: EventStore.Core.Authentication.PasswordHashAlgorithm
  commentId: T:EventStore.Core.Authentication.PasswordHashAlgorithm
  parent: EventStore.Core.Authentication
  isExternal: false
  name: PasswordHashAlgorithm
  nameWithType: PasswordHashAlgorithm
  fullName: EventStore.Core.Authentication.PasswordHashAlgorithm
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Helpers
  commentId: N:EventStore.Core.Helpers
  isExternal: false
  name: EventStore.Core.Helpers
  nameWithType: EventStore.Core.Helpers
  fullName: EventStore.Core.Helpers
- uid: EventStore.Core.Authentication.InternalAuthenticationProvider.Authenticate*
  commentId: Overload:EventStore.Core.Authentication.InternalAuthenticationProvider.Authenticate
  isExternal: false
  name: Authenticate
  nameWithType: InternalAuthenticationProvider.Authenticate
  fullName: EventStore.Core.Authentication.InternalAuthenticationProvider.Authenticate
- uid: EventStore.Core.Authentication.IAuthenticationProvider.Authenticate(EventStore.Core.Authentication.AuthenticationRequest)
  commentId: M:EventStore.Core.Authentication.IAuthenticationProvider.Authenticate(EventStore.Core.Authentication.AuthenticationRequest)
  parent: EventStore.Core.Authentication.IAuthenticationProvider
  isExternal: false
  name: Authenticate(AuthenticationRequest)
  nameWithType: IAuthenticationProvider.Authenticate(AuthenticationRequest)
  fullName: EventStore.Core.Authentication.IAuthenticationProvider.Authenticate(EventStore.Core.Authentication.AuthenticationRequest)
  spec.csharp:
  - uid: EventStore.Core.Authentication.IAuthenticationProvider.Authenticate(EventStore.Core.Authentication.AuthenticationRequest)
    name: Authenticate
    nameWithType: IAuthenticationProvider.Authenticate
    fullName: EventStore.Core.Authentication.IAuthenticationProvider.Authenticate
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Authentication.AuthenticationRequest
    name: AuthenticationRequest
    nameWithType: AuthenticationRequest
    fullName: EventStore.Core.Authentication.AuthenticationRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Authentication.IAuthenticationProvider.Authenticate(EventStore.Core.Authentication.AuthenticationRequest)
    name: Authenticate
    nameWithType: IAuthenticationProvider.Authenticate
    fullName: EventStore.Core.Authentication.IAuthenticationProvider.Authenticate
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Authentication.AuthenticationRequest
    name: AuthenticationRequest
    nameWithType: AuthenticationRequest
    fullName: EventStore.Core.Authentication.AuthenticationRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Authentication.AuthenticationRequest
  commentId: T:EventStore.Core.Authentication.AuthenticationRequest
  parent: EventStore.Core.Authentication
  isExternal: false
  name: AuthenticationRequest
  nameWithType: AuthenticationRequest
  fullName: EventStore.Core.Authentication.AuthenticationRequest
- uid: EventStore.Core.Authentication.InternalAuthenticationProvider.Handle*
  commentId: Overload:EventStore.Core.Authentication.InternalAuthenticationProvider.Handle
  isExternal: false
  name: Handle
  nameWithType: InternalAuthenticationProvider.Handle
  fullName: EventStore.Core.Authentication.InternalAuthenticationProvider.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache}.Handle(EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache}.Handle(EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(InternalAuthenticationProviderMessages.ResetPasswordCache)
  nameWithType: IHandle<InternalAuthenticationProviderMessages.ResetPasswordCache>.Handle(InternalAuthenticationProviderMessages.ResetPasswordCache)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache>.Handle(EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache)
  nameWithType.vb: IHandle(Of InternalAuthenticationProviderMessages.ResetPasswordCache).Handle(InternalAuthenticationProviderMessages.ResetPasswordCache)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache).Handle(EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<InternalAuthenticationProviderMessages.ResetPasswordCache>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache
    name: InternalAuthenticationProviderMessages.ResetPasswordCache
    nameWithType: InternalAuthenticationProviderMessages.ResetPasswordCache
    fullName: EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of InternalAuthenticationProviderMessages.ResetPasswordCache).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache
    name: InternalAuthenticationProviderMessages.ResetPasswordCache
    nameWithType: InternalAuthenticationProviderMessages.ResetPasswordCache
    fullName: EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache
  commentId: T:EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache
  parent: EventStore.Core.Messages
  isExternal: false
  name: InternalAuthenticationProviderMessages.ResetPasswordCache
  nameWithType: InternalAuthenticationProviderMessages.ResetPasswordCache
  fullName: EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  isExternal: false
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages

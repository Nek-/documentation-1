### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Authentication.OpenGenericPrincipal
  commentId: T:EventStore.Core.Authentication.OpenGenericPrincipal
  id: OpenGenericPrincipal
  parent: EventStore.Core.Authentication
  children:
  - EventStore.Core.Authentication.OpenGenericPrincipal.#ctor(IIdentity,System.String[])
  - EventStore.Core.Authentication.OpenGenericPrincipal.#ctor(System.String,System.String[])
  - EventStore.Core.Authentication.OpenGenericPrincipal.Identity
  - EventStore.Core.Authentication.OpenGenericPrincipal.IsInRole(System.String)
  - EventStore.Core.Authentication.OpenGenericPrincipal.Roles
  langs:
  - csharp
  - vb
  name: OpenGenericPrincipal
  nameWithType: OpenGenericPrincipal
  fullName: EventStore.Core.Authentication.OpenGenericPrincipal
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Authentication/OpenGenericPrincipal.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: OpenGenericPrincipal
    path: ../EventStore/src/EventStore.Core/Authentication/OpenGenericPrincipal.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: 'public class OpenGenericPrincipal : IPrincipal'
    content.vb: >-
      Public Class OpenGenericPrincipal
          Inherits IPrincipal
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Authentication.OpenGenericPrincipal.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Authentication.OpenGenericPrincipal.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Authentication.OpenGenericPrincipal.#ctor(IIdentity,System.String[])
  commentId: M:EventStore.Core.Authentication.OpenGenericPrincipal.#ctor(IIdentity,System.String[])
  id: '#ctor(IIdentity,System.String[])'
  parent: EventStore.Core.Authentication.OpenGenericPrincipal
  langs:
  - csharp
  - vb
  name: OpenGenericPrincipal(IIdentity, String[])
  nameWithType: OpenGenericPrincipal.OpenGenericPrincipal(IIdentity, String[])
  fullName: EventStore.Core.Authentication.OpenGenericPrincipal.OpenGenericPrincipal(IIdentity, System.String[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Authentication/OpenGenericPrincipal.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Authentication/OpenGenericPrincipal.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: public OpenGenericPrincipal(IIdentity identity, string[] roles)
    parameters:
    - id: identity
      type: IIdentity
    - id: roles
      type: System.String[]
    content.vb: Public Sub New(identity As IIdentity, roles As String())
  overload: EventStore.Core.Authentication.OpenGenericPrincipal.#ctor*
  nameWithType.vb: OpenGenericPrincipal.OpenGenericPrincipal(IIdentity, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Authentication.OpenGenericPrincipal.OpenGenericPrincipal(IIdentity, System.String())
  name.vb: OpenGenericPrincipal(IIdentity, String())
- uid: EventStore.Core.Authentication.OpenGenericPrincipal.#ctor(System.String,System.String[])
  commentId: M:EventStore.Core.Authentication.OpenGenericPrincipal.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: EventStore.Core.Authentication.OpenGenericPrincipal
  langs:
  - csharp
  - vb
  name: OpenGenericPrincipal(String, String[])
  nameWithType: OpenGenericPrincipal.OpenGenericPrincipal(String, String[])
  fullName: EventStore.Core.Authentication.OpenGenericPrincipal.OpenGenericPrincipal(System.String, System.String[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Authentication/OpenGenericPrincipal.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Authentication/OpenGenericPrincipal.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: public OpenGenericPrincipal(string identity, params string[] roles)
    parameters:
    - id: identity
      type: System.String
    - id: roles
      type: System.String[]
    content.vb: Public Sub New(identity As String, ParamArray roles As String())
  overload: EventStore.Core.Authentication.OpenGenericPrincipal.#ctor*
  nameWithType.vb: OpenGenericPrincipal.OpenGenericPrincipal(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Authentication.OpenGenericPrincipal.OpenGenericPrincipal(System.String, System.String())
  name.vb: OpenGenericPrincipal(String, String())
- uid: EventStore.Core.Authentication.OpenGenericPrincipal.IsInRole(System.String)
  commentId: M:EventStore.Core.Authentication.OpenGenericPrincipal.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: EventStore.Core.Authentication.OpenGenericPrincipal
  langs:
  - csharp
  - vb
  name: IsInRole(String)
  nameWithType: OpenGenericPrincipal.IsInRole(String)
  fullName: EventStore.Core.Authentication.OpenGenericPrincipal.IsInRole(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Authentication/OpenGenericPrincipal.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: IsInRole
    path: ../EventStore/src/EventStore.Core/Authentication/OpenGenericPrincipal.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: public bool IsInRole(string role)
    parameters:
    - id: role
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function IsInRole(role As String) As Boolean
  overload: EventStore.Core.Authentication.OpenGenericPrincipal.IsInRole*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Authentication.OpenGenericPrincipal.Identity
  commentId: P:EventStore.Core.Authentication.OpenGenericPrincipal.Identity
  id: Identity
  parent: EventStore.Core.Authentication.OpenGenericPrincipal
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: OpenGenericPrincipal.Identity
  fullName: EventStore.Core.Authentication.OpenGenericPrincipal.Identity
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Authentication/OpenGenericPrincipal.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Identity
    path: ../EventStore/src/EventStore.Core/Authentication/OpenGenericPrincipal.cs
    startLine: 26
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: public IIdentity Identity { get; }
    parameters: []
    return:
      type: IIdentity
    content.vb: Public ReadOnly Property Identity As IIdentity
  overload: EventStore.Core.Authentication.OpenGenericPrincipal.Identity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Authentication.OpenGenericPrincipal.Roles
  commentId: P:EventStore.Core.Authentication.OpenGenericPrincipal.Roles
  id: Roles
  parent: EventStore.Core.Authentication.OpenGenericPrincipal
  langs:
  - csharp
  - vb
  name: Roles
  nameWithType: OpenGenericPrincipal.Roles
  fullName: EventStore.Core.Authentication.OpenGenericPrincipal.Roles
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Authentication/OpenGenericPrincipal.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Roles
    path: ../EventStore/src/EventStore.Core/Authentication/OpenGenericPrincipal.cs
    startLine: 31
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Authentication
  syntax:
    content: public string[] Roles { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property Roles As String()
  overload: EventStore.Core.Authentication.OpenGenericPrincipal.Roles*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.Core.Authentication
  commentId: N:EventStore.Core.Authentication
  isExternal: false
  name: EventStore.Core.Authentication
  nameWithType: EventStore.Core.Authentication
  fullName: EventStore.Core.Authentication
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Authentication.OpenGenericPrincipal.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<OpenGenericPrincipal>()
  nameWithType: ProtobufExtensions.Serialize<OpenGenericPrincipal>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Authentication.OpenGenericPrincipal>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of OpenGenericPrincipal)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Authentication.OpenGenericPrincipal)()
  name.vb: Serialize(Of OpenGenericPrincipal)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<OpenGenericPrincipal>
    nameWithType: ProtobufExtensions.Serialize<OpenGenericPrincipal>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Authentication.OpenGenericPrincipal>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of OpenGenericPrincipal)
    nameWithType: ProtobufExtensions.Serialize(Of OpenGenericPrincipal)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Authentication.OpenGenericPrincipal)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Authentication.OpenGenericPrincipal.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<OpenGenericPrincipal>()
  nameWithType: ProtobufExtensions.SerializeToArray<OpenGenericPrincipal>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Authentication.OpenGenericPrincipal>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of OpenGenericPrincipal)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Authentication.OpenGenericPrincipal)()
  name.vb: SerializeToArray(Of OpenGenericPrincipal)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<OpenGenericPrincipal>
    nameWithType: ProtobufExtensions.SerializeToArray<OpenGenericPrincipal>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Authentication.OpenGenericPrincipal>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of OpenGenericPrincipal)
    nameWithType: ProtobufExtensions.SerializeToArray(Of OpenGenericPrincipal)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Authentication.OpenGenericPrincipal)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Authentication.OpenGenericPrincipal.#ctor*
  commentId: Overload:EventStore.Core.Authentication.OpenGenericPrincipal.#ctor
  isExternal: false
  name: OpenGenericPrincipal
  nameWithType: OpenGenericPrincipal.OpenGenericPrincipal
  fullName: EventStore.Core.Authentication.OpenGenericPrincipal.OpenGenericPrincipal
- uid: IIdentity
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: IIdentity
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Authentication.OpenGenericPrincipal.IsInRole*
  commentId: Overload:EventStore.Core.Authentication.OpenGenericPrincipal.IsInRole
  isExternal: false
  name: IsInRole
  nameWithType: OpenGenericPrincipal.IsInRole
  fullName: EventStore.Core.Authentication.OpenGenericPrincipal.IsInRole
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Authentication.OpenGenericPrincipal.Identity*
  commentId: Overload:EventStore.Core.Authentication.OpenGenericPrincipal.Identity
  isExternal: false
  name: Identity
  nameWithType: OpenGenericPrincipal.Identity
  fullName: EventStore.Core.Authentication.OpenGenericPrincipal.Identity
- uid: EventStore.Core.Authentication.OpenGenericPrincipal.Roles*
  commentId: Overload:EventStore.Core.Authentication.OpenGenericPrincipal.Roles
  isExternal: false
  name: Roles
  nameWithType: OpenGenericPrincipal.Roles
  fullName: EventStore.Core.Authentication.OpenGenericPrincipal.Roles

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Bus.ISingleConsumerMessageQueue
  commentId: T:EventStore.Core.Bus.ISingleConsumerMessageQueue
  id: ISingleConsumerMessageQueue
  parent: EventStore.Core.Bus
  children:
  - EventStore.Core.Bus.ISingleConsumerMessageQueue.Enqueue(EventStore.Core.Messaging.Message)
  - EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[],EventStore.Core.Bus.QueueBatchDequeueResult@)
  langs:
  - csharp
  - vb
  name: ISingleConsumerMessageQueue
  nameWithType: ISingleConsumerMessageQueue
  fullName: EventStore.Core.Bus.ISingleConsumerMessageQueue
  type: Interface
  source:
    remote:
      path: src/EventStore.Core/Bus/ISingleConsumerMessageQueue.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ISingleConsumerMessageQueue
    path: ../EventStore/src/EventStore.Core/Bus/ISingleConsumerMessageQueue.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  summary: "\nA common interface for single consumer queues (**SC).\n"
  example: []
  syntax:
    content: public interface ISingleConsumerMessageQueue
    content.vb: Public Interface ISingleConsumerMessageQueue
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Bus.ISingleConsumerMessageQueue.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Bus.ISingleConsumerMessageQueue.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Core.Bus.ISingleConsumerMessageQueue.Enqueue(EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Bus.ISingleConsumerMessageQueue.Enqueue(EventStore.Core.Messaging.Message)
  id: Enqueue(EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Bus.ISingleConsumerMessageQueue
  langs:
  - csharp
  - vb
  name: Enqueue(Message)
  nameWithType: ISingleConsumerMessageQueue.Enqueue(Message)
  fullName: EventStore.Core.Bus.ISingleConsumerMessageQueue.Enqueue(EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/ISingleConsumerMessageQueue.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Enqueue
    path: ../EventStore/src/EventStore.Core/Bus/ISingleConsumerMessageQueue.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: void Enqueue(Message item)
    parameters:
    - id: item
      type: EventStore.Core.Messaging.Message
    content.vb: Sub Enqueue(item As Message)
  overload: EventStore.Core.Bus.ISingleConsumerMessageQueue.Enqueue*
- uid: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[],EventStore.Core.Bus.QueueBatchDequeueResult@)
  commentId: M:EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[],EventStore.Core.Bus.QueueBatchDequeueResult@)
  id: TryDequeue(EventStore.Core.Messaging.Message[],EventStore.Core.Bus.QueueBatchDequeueResult@)
  parent: EventStore.Core.Bus.ISingleConsumerMessageQueue
  langs:
  - csharp
  - vb
  name: TryDequeue(Message[], out QueueBatchDequeueResult)
  nameWithType: ISingleConsumerMessageQueue.TryDequeue(Message[], out QueueBatchDequeueResult)
  fullName: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[], out EventStore.Core.Bus.QueueBatchDequeueResult)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/ISingleConsumerMessageQueue.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TryDequeue
    path: ../EventStore/src/EventStore.Core/Bus/ISingleConsumerMessageQueue.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: bool TryDequeue(Message[] segment, out QueueBatchDequeueResult result)
    parameters:
    - id: segment
      type: EventStore.Core.Messaging.Message[]
    - id: result
      type: EventStore.Core.Bus.QueueBatchDequeueResult
    return:
      type: System.Boolean
    content.vb: Function TryDequeue(segment As Message(), ByRef result As QueueBatchDequeueResult) As Boolean
  overload: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue*
  nameWithType.vb: ISingleConsumerMessageQueue.TryDequeue(Message(), ByRef QueueBatchDequeueResult)
  fullName.vb: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message(), ByRef EventStore.Core.Bus.QueueBatchDequeueResult)
  name.vb: TryDequeue(Message(), ByRef QueueBatchDequeueResult)
references:
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.ISingleConsumerMessageQueue.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ISingleConsumerMessageQueue>()
  nameWithType: ProtobufExtensions.Serialize<ISingleConsumerMessageQueue>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Bus.ISingleConsumerMessageQueue>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ISingleConsumerMessageQueue)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Bus.ISingleConsumerMessageQueue)()
  name.vb: Serialize(Of ISingleConsumerMessageQueue)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ISingleConsumerMessageQueue>
    nameWithType: ProtobufExtensions.Serialize<ISingleConsumerMessageQueue>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Bus.ISingleConsumerMessageQueue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ISingleConsumerMessageQueue)
    nameWithType: ProtobufExtensions.Serialize(Of ISingleConsumerMessageQueue)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Bus.ISingleConsumerMessageQueue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.ISingleConsumerMessageQueue.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ISingleConsumerMessageQueue>()
  nameWithType: ProtobufExtensions.SerializeToArray<ISingleConsumerMessageQueue>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Bus.ISingleConsumerMessageQueue>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ISingleConsumerMessageQueue)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Bus.ISingleConsumerMessageQueue)()
  name.vb: SerializeToArray(Of ISingleConsumerMessageQueue)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ISingleConsumerMessageQueue>
    nameWithType: ProtobufExtensions.SerializeToArray<ISingleConsumerMessageQueue>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Bus.ISingleConsumerMessageQueue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ISingleConsumerMessageQueue)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ISingleConsumerMessageQueue)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Bus.ISingleConsumerMessageQueue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Bus.ISingleConsumerMessageQueue.Enqueue*
  commentId: Overload:EventStore.Core.Bus.ISingleConsumerMessageQueue.Enqueue
  isExternal: false
  name: Enqueue
  nameWithType: ISingleConsumerMessageQueue.Enqueue
  fullName: EventStore.Core.Bus.ISingleConsumerMessageQueue.Enqueue
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue*
  commentId: Overload:EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue
  isExternal: false
  name: TryDequeue
  nameWithType: ISingleConsumerMessageQueue.TryDequeue
  fullName: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue
- uid: EventStore.Core.Messaging.Message[]
  name: Message[]
  nameWithType: Message[]
  fullName: EventStore.Core.Messaging.Message[]
  nameWithType.vb: Message()
  fullName.vb: EventStore.Core.Messaging.Message()
  name.vb: Message()
  spec.csharp:
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Bus.QueueBatchDequeueResult
  commentId: T:EventStore.Core.Bus.QueueBatchDequeueResult
  parent: EventStore.Core.Bus
  isExternal: false
  name: QueueBatchDequeueResult
  nameWithType: QueueBatchDequeueResult
  fullName: EventStore.Core.Bus.QueueBatchDequeueResult
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean

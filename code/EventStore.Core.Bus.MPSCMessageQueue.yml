### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Bus.MPSCMessageQueue
  commentId: T:EventStore.Core.Bus.MPSCMessageQueue
  id: MPSCMessageQueue
  parent: EventStore.Core.Bus
  children:
  - EventStore.Core.Bus.MPSCMessageQueue.#ctor(System.Int32)
  - EventStore.Core.Bus.MPSCMessageQueue.Enqueue(EventStore.Core.Messaging.Message)
  - EventStore.Core.Bus.MPSCMessageQueue.EstimageCurrentQueueCount
  - EventStore.Core.Bus.MPSCMessageQueue.padding
  - EventStore.Core.Bus.MPSCMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[],EventStore.Core.Bus.QueueBatchDequeueResult@)
  langs:
  - csharp
  - vb
  name: MPSCMessageQueue
  nameWithType: MPSCMessageQueue
  fullName: EventStore.Core.Bus.MPSCMessageQueue
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Bus/MPSCMessageQueue.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MPSCMessageQueue
    path: ../EventStore/src/EventStore.Core/Bus/MPSCMessageQueue.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  summary: "\nA much better concurrent queue than <see cref=\"!:System.Collections.Concurrent.ConcurrentQueue&lt;T>\"></see> for multi producer single consumer scenarios.\n"
  example: []
  syntax:
    content: 'public sealed class MPSCMessageQueue : object, ISingleConsumerMessageQueue'
    content.vb: >-
      Public NotInheritable Class MPSCMessageQueue
          Inherits Object
          Implements ISingleConsumerMessageQueue
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Bus.ISingleConsumerMessageQueue
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Bus.MPSCMessageQueue.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Bus.MPSCMessageQueue.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.Core.Bus.MPSCMessageQueue.padding
  commentId: F:EventStore.Core.Bus.MPSCMessageQueue.padding
  id: padding
  parent: EventStore.Core.Bus.MPSCMessageQueue
  langs:
  - csharp
  - vb
  name: padding
  nameWithType: MPSCMessageQueue.padding
  fullName: EventStore.Core.Bus.MPSCMessageQueue.padding
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Bus/MPSCMessageQueue.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: padding
    path: ../EventStore/src/EventStore.Core/Bus/MPSCMessageQueue.cs
    startLine: 38
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public long padding
    return:
      type: System.Int64
    content.vb: Public padding As Long
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.MPSCMessageQueue.#ctor(System.Int32)
  commentId: M:EventStore.Core.Bus.MPSCMessageQueue.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: EventStore.Core.Bus.MPSCMessageQueue
  langs:
  - csharp
  - vb
  name: MPSCMessageQueue(Int32)
  nameWithType: MPSCMessageQueue.MPSCMessageQueue(Int32)
  fullName: EventStore.Core.Bus.MPSCMessageQueue.MPSCMessageQueue(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Bus/MPSCMessageQueue.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Bus/MPSCMessageQueue.cs
    startLine: 40
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public MPSCMessageQueue(int size)
    parameters:
    - id: size
      type: System.Int32
    content.vb: Public Sub New(size As Integer)
  overload: EventStore.Core.Bus.MPSCMessageQueue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.MPSCMessageQueue.Enqueue(EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Bus.MPSCMessageQueue.Enqueue(EventStore.Core.Messaging.Message)
  id: Enqueue(EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Bus.MPSCMessageQueue
  langs:
  - csharp
  - vb
  name: Enqueue(Message)
  nameWithType: MPSCMessageQueue.Enqueue(Message)
  fullName: EventStore.Core.Bus.MPSCMessageQueue.Enqueue(EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/MPSCMessageQueue.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Enqueue
    path: ../EventStore/src/EventStore.Core/Bus/MPSCMessageQueue.cs
    startLine: 65
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void Enqueue(Message item)
    parameters:
    - id: item
      type: EventStore.Core.Messaging.Message
    content.vb: Public Sub Enqueue(item As Message)
  overload: EventStore.Core.Bus.MPSCMessageQueue.Enqueue*
  implements:
  - EventStore.Core.Bus.ISingleConsumerMessageQueue.Enqueue(EventStore.Core.Messaging.Message)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.MPSCMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[],EventStore.Core.Bus.QueueBatchDequeueResult@)
  commentId: M:EventStore.Core.Bus.MPSCMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[],EventStore.Core.Bus.QueueBatchDequeueResult@)
  id: TryDequeue(EventStore.Core.Messaging.Message[],EventStore.Core.Bus.QueueBatchDequeueResult@)
  parent: EventStore.Core.Bus.MPSCMessageQueue
  langs:
  - csharp
  - vb
  name: TryDequeue(Message[], out QueueBatchDequeueResult)
  nameWithType: MPSCMessageQueue.TryDequeue(Message[], out QueueBatchDequeueResult)
  fullName: EventStore.Core.Bus.MPSCMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[], out EventStore.Core.Bus.QueueBatchDequeueResult)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/MPSCMessageQueue.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TryDequeue
    path: ../EventStore/src/EventStore.Core/Bus/MPSCMessageQueue.cs
    startLine: 98
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public bool TryDequeue(Message[] segment, out QueueBatchDequeueResult result)
    parameters:
    - id: segment
      type: EventStore.Core.Messaging.Message[]
    - id: result
      type: EventStore.Core.Bus.QueueBatchDequeueResult
    return:
      type: System.Boolean
    content.vb: Public Function TryDequeue(segment As Message(), ByRef result As QueueBatchDequeueResult) As Boolean
  overload: EventStore.Core.Bus.MPSCMessageQueue.TryDequeue*
  implements:
  - EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[],EventStore.Core.Bus.QueueBatchDequeueResult@)
  nameWithType.vb: MPSCMessageQueue.TryDequeue(Message(), ByRef QueueBatchDequeueResult)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Bus.MPSCMessageQueue.TryDequeue(EventStore.Core.Messaging.Message(), ByRef EventStore.Core.Bus.QueueBatchDequeueResult)
  name.vb: TryDequeue(Message(), ByRef QueueBatchDequeueResult)
- uid: EventStore.Core.Bus.MPSCMessageQueue.EstimageCurrentQueueCount
  commentId: M:EventStore.Core.Bus.MPSCMessageQueue.EstimageCurrentQueueCount
  id: EstimageCurrentQueueCount
  parent: EventStore.Core.Bus.MPSCMessageQueue
  langs:
  - csharp
  - vb
  name: EstimageCurrentQueueCount()
  nameWithType: MPSCMessageQueue.EstimageCurrentQueueCount()
  fullName: EventStore.Core.Bus.MPSCMessageQueue.EstimageCurrentQueueCount()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/MPSCMessageQueue.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EstimageCurrentQueueCount
    path: ../EventStore/src/EventStore.Core/Bus/MPSCMessageQueue.cs
    startLine: 150
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public int EstimageCurrentQueueCount()
    return:
      type: System.Int32
    content.vb: Public Function EstimageCurrentQueueCount As Integer
  overload: EventStore.Core.Bus.MPSCMessageQueue.EstimageCurrentQueueCount*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Bus.ISingleConsumerMessageQueue
  commentId: T:EventStore.Core.Bus.ISingleConsumerMessageQueue
  parent: EventStore.Core.Bus
  isExternal: false
  name: ISingleConsumerMessageQueue
  nameWithType: ISingleConsumerMessageQueue
  fullName: EventStore.Core.Bus.ISingleConsumerMessageQueue
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.MPSCMessageQueue.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<MPSCMessageQueue>()
  nameWithType: ProtobufExtensions.Serialize<MPSCMessageQueue>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Bus.MPSCMessageQueue>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of MPSCMessageQueue)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Bus.MPSCMessageQueue)()
  name.vb: Serialize(Of MPSCMessageQueue)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<MPSCMessageQueue>
    nameWithType: ProtobufExtensions.Serialize<MPSCMessageQueue>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Bus.MPSCMessageQueue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of MPSCMessageQueue)
    nameWithType: ProtobufExtensions.Serialize(Of MPSCMessageQueue)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Bus.MPSCMessageQueue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.MPSCMessageQueue.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<MPSCMessageQueue>()
  nameWithType: ProtobufExtensions.SerializeToArray<MPSCMessageQueue>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Bus.MPSCMessageQueue>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of MPSCMessageQueue)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Bus.MPSCMessageQueue)()
  name.vb: SerializeToArray(Of MPSCMessageQueue)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<MPSCMessageQueue>
    nameWithType: ProtobufExtensions.SerializeToArray<MPSCMessageQueue>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Bus.MPSCMessageQueue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of MPSCMessageQueue)
    nameWithType: ProtobufExtensions.SerializeToArray(Of MPSCMessageQueue)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Bus.MPSCMessageQueue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Bus.MPSCMessageQueue.#ctor*
  commentId: Overload:EventStore.Core.Bus.MPSCMessageQueue.#ctor
  isExternal: false
  name: MPSCMessageQueue
  nameWithType: MPSCMessageQueue.MPSCMessageQueue
  fullName: EventStore.Core.Bus.MPSCMessageQueue.MPSCMessageQueue
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Bus.MPSCMessageQueue.Enqueue*
  commentId: Overload:EventStore.Core.Bus.MPSCMessageQueue.Enqueue
  isExternal: false
  name: Enqueue
  nameWithType: MPSCMessageQueue.Enqueue
  fullName: EventStore.Core.Bus.MPSCMessageQueue.Enqueue
- uid: EventStore.Core.Bus.ISingleConsumerMessageQueue.Enqueue(EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Bus.ISingleConsumerMessageQueue.Enqueue(EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Bus.ISingleConsumerMessageQueue
  isExternal: false
  name: Enqueue(Message)
  nameWithType: ISingleConsumerMessageQueue.Enqueue(Message)
  fullName: EventStore.Core.Bus.ISingleConsumerMessageQueue.Enqueue(EventStore.Core.Messaging.Message)
  spec.csharp:
  - uid: EventStore.Core.Bus.ISingleConsumerMessageQueue.Enqueue(EventStore.Core.Messaging.Message)
    name: Enqueue
    nameWithType: ISingleConsumerMessageQueue.Enqueue
    fullName: EventStore.Core.Bus.ISingleConsumerMessageQueue.Enqueue
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.ISingleConsumerMessageQueue.Enqueue(EventStore.Core.Messaging.Message)
    name: Enqueue
    nameWithType: ISingleConsumerMessageQueue.Enqueue
    fullName: EventStore.Core.Bus.ISingleConsumerMessageQueue.Enqueue
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Core.Bus.MPSCMessageQueue.TryDequeue*
  commentId: Overload:EventStore.Core.Bus.MPSCMessageQueue.TryDequeue
  isExternal: false
  name: TryDequeue
  nameWithType: MPSCMessageQueue.TryDequeue
  fullName: EventStore.Core.Bus.MPSCMessageQueue.TryDequeue
- uid: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[],EventStore.Core.Bus.QueueBatchDequeueResult@)
  commentId: M:EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[],EventStore.Core.Bus.QueueBatchDequeueResult@)
  parent: EventStore.Core.Bus.ISingleConsumerMessageQueue
  isExternal: false
  name: TryDequeue(Message[], QueueBatchDequeueResult)
  nameWithType: ISingleConsumerMessageQueue.TryDequeue(Message[], QueueBatchDequeueResult)
  fullName: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[], EventStore.Core.Bus.QueueBatchDequeueResult)
  nameWithType.vb: ISingleConsumerMessageQueue.TryDequeue(Message(), QueueBatchDequeueResult)
  fullName.vb: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message(), EventStore.Core.Bus.QueueBatchDequeueResult)
  name.vb: TryDequeue(Message(), QueueBatchDequeueResult)
  spec.csharp:
  - uid: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[],EventStore.Core.Bus.QueueBatchDequeueResult@)
    name: TryDequeue
    nameWithType: ISingleConsumerMessageQueue.TryDequeue
    fullName: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Bus.QueueBatchDequeueResult
    name: QueueBatchDequeueResult
    nameWithType: QueueBatchDequeueResult
    fullName: EventStore.Core.Bus.QueueBatchDequeueResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[],EventStore.Core.Bus.QueueBatchDequeueResult@)
    name: TryDequeue
    nameWithType: ISingleConsumerMessageQueue.TryDequeue
    fullName: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Bus.QueueBatchDequeueResult
    name: QueueBatchDequeueResult
    nameWithType: QueueBatchDequeueResult
    fullName: EventStore.Core.Bus.QueueBatchDequeueResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging.Message[]
  name: Message[]
  nameWithType: Message[]
  fullName: EventStore.Core.Messaging.Message[]
  nameWithType.vb: Message()
  fullName.vb: EventStore.Core.Messaging.Message()
  name.vb: Message()
  spec.csharp:
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Bus.QueueBatchDequeueResult
  commentId: T:EventStore.Core.Bus.QueueBatchDequeueResult
  parent: EventStore.Core.Bus
  isExternal: false
  name: QueueBatchDequeueResult
  nameWithType: QueueBatchDequeueResult
  fullName: EventStore.Core.Bus.QueueBatchDequeueResult
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Bus.MPSCMessageQueue.EstimageCurrentQueueCount*
  commentId: Overload:EventStore.Core.Bus.MPSCMessageQueue.EstimageCurrentQueueCount
  isExternal: false
  name: EstimageCurrentQueueCount
  nameWithType: MPSCMessageQueue.EstimageCurrentQueueCount
  fullName: EventStore.Core.Bus.MPSCMessageQueue.EstimageCurrentQueueCount

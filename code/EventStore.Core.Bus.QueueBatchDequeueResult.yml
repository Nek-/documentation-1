### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Bus.QueueBatchDequeueResult
  commentId: T:EventStore.Core.Bus.QueueBatchDequeueResult
  id: QueueBatchDequeueResult
  parent: EventStore.Core.Bus
  children:
  - EventStore.Core.Bus.QueueBatchDequeueResult.DequeueCount
  - EventStore.Core.Bus.QueueBatchDequeueResult.EstimateCurrentQueueCount
  langs:
  - csharp
  - vb
  name: QueueBatchDequeueResult
  nameWithType: QueueBatchDequeueResult
  fullName: EventStore.Core.Bus.QueueBatchDequeueResult
  type: Struct
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueBatchDequeueResult.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: QueueBatchDequeueResult
    path: ../EventStore/src/EventStore.Core/Bus/QueueBatchDequeueResult.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  summary: "\nA struct providing information for <xref href=\"EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message%5b%5d%2cEventStore.Core.Bus.QueueBatchDequeueResult%40)\" data-throw-if-not-resolved=\"false\"></xref> result.\n"
  example: []
  syntax:
    content: public struct QueueBatchDequeueResult
    content.vb: Public Structure QueueBatchDequeueResult
  extensionMethods:
  - EventStore.Core.Bus.QueueBatchDequeueResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Bus.QueueBatchDequeueResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Bus.QueueBatchDequeueResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.Core.Bus.QueueBatchDequeueResult.DequeueCount
  commentId: F:EventStore.Core.Bus.QueueBatchDequeueResult.DequeueCount
  id: DequeueCount
  parent: EventStore.Core.Bus.QueueBatchDequeueResult
  langs:
  - csharp
  - vb
  name: DequeueCount
  nameWithType: QueueBatchDequeueResult.DequeueCount
  fullName: EventStore.Core.Bus.QueueBatchDequeueResult.DequeueCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueBatchDequeueResult.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DequeueCount
    path: ../EventStore/src/EventStore.Core/Bus/QueueBatchDequeueResult.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public int DequeueCount
    return:
      type: System.Int32
    content.vb: Public DequeueCount As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.QueueBatchDequeueResult.EstimateCurrentQueueCount
  commentId: F:EventStore.Core.Bus.QueueBatchDequeueResult.EstimateCurrentQueueCount
  id: EstimateCurrentQueueCount
  parent: EventStore.Core.Bus.QueueBatchDequeueResult
  langs:
  - csharp
  - vb
  name: EstimateCurrentQueueCount
  nameWithType: QueueBatchDequeueResult.EstimateCurrentQueueCount
  fullName: EventStore.Core.Bus.QueueBatchDequeueResult.EstimateCurrentQueueCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueBatchDequeueResult.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EstimateCurrentQueueCount
    path: ../EventStore/src/EventStore.Core/Bus/QueueBatchDequeueResult.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public int EstimateCurrentQueueCount
    return:
      type: System.Int32
    content.vb: Public EstimateCurrentQueueCount As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[],EventStore.Core.Bus.QueueBatchDequeueResult@)
  commentId: M:EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[],EventStore.Core.Bus.QueueBatchDequeueResult@)
  parent: EventStore.Core.Bus.ISingleConsumerMessageQueue
  isExternal: false
  name: TryDequeue(Message[], QueueBatchDequeueResult)
  nameWithType: ISingleConsumerMessageQueue.TryDequeue(Message[], QueueBatchDequeueResult)
  fullName: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[], EventStore.Core.Bus.QueueBatchDequeueResult)
  nameWithType.vb: ISingleConsumerMessageQueue.TryDequeue(Message(), QueueBatchDequeueResult)
  fullName.vb: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message(), EventStore.Core.Bus.QueueBatchDequeueResult)
  name.vb: TryDequeue(Message(), QueueBatchDequeueResult)
  spec.csharp:
  - uid: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[],EventStore.Core.Bus.QueueBatchDequeueResult@)
    name: TryDequeue
    nameWithType: ISingleConsumerMessageQueue.TryDequeue
    fullName: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Bus.QueueBatchDequeueResult
    name: QueueBatchDequeueResult
    nameWithType: QueueBatchDequeueResult
    fullName: EventStore.Core.Bus.QueueBatchDequeueResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue(EventStore.Core.Messaging.Message[],EventStore.Core.Bus.QueueBatchDequeueResult@)
    name: TryDequeue
    nameWithType: ISingleConsumerMessageQueue.TryDequeue
    fullName: EventStore.Core.Bus.ISingleConsumerMessageQueue.TryDequeue
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Bus.QueueBatchDequeueResult
    name: QueueBatchDequeueResult
    nameWithType: QueueBatchDequeueResult
    fullName: EventStore.Core.Bus.QueueBatchDequeueResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Core.Bus.QueueBatchDequeueResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<QueueBatchDequeueResult>()
  nameWithType: EnumExtensions.EnumValueName<QueueBatchDequeueResult>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Bus.QueueBatchDequeueResult>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of QueueBatchDequeueResult)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Bus.QueueBatchDequeueResult)()
  name.vb: EnumValueName(Of QueueBatchDequeueResult)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<QueueBatchDequeueResult>
    nameWithType: EnumExtensions.EnumValueName<QueueBatchDequeueResult>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Bus.QueueBatchDequeueResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of QueueBatchDequeueResult)
    nameWithType: EnumExtensions.EnumValueName(Of QueueBatchDequeueResult)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Bus.QueueBatchDequeueResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.QueueBatchDequeueResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<QueueBatchDequeueResult>()
  nameWithType: ProtobufExtensions.Serialize<QueueBatchDequeueResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Bus.QueueBatchDequeueResult>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of QueueBatchDequeueResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Bus.QueueBatchDequeueResult)()
  name.vb: Serialize(Of QueueBatchDequeueResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<QueueBatchDequeueResult>
    nameWithType: ProtobufExtensions.Serialize<QueueBatchDequeueResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Bus.QueueBatchDequeueResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of QueueBatchDequeueResult)
    nameWithType: ProtobufExtensions.Serialize(Of QueueBatchDequeueResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Bus.QueueBatchDequeueResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.QueueBatchDequeueResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<QueueBatchDequeueResult>()
  nameWithType: ProtobufExtensions.SerializeToArray<QueueBatchDequeueResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Bus.QueueBatchDequeueResult>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of QueueBatchDequeueResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Bus.QueueBatchDequeueResult)()
  name.vb: SerializeToArray(Of QueueBatchDequeueResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<QueueBatchDequeueResult>
    nameWithType: ProtobufExtensions.SerializeToArray<QueueBatchDequeueResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Bus.QueueBatchDequeueResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of QueueBatchDequeueResult)
    nameWithType: ProtobufExtensions.SerializeToArray(Of QueueBatchDequeueResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Bus.QueueBatchDequeueResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.ISingleConsumerMessageQueue
  commentId: T:EventStore.Core.Bus.ISingleConsumerMessageQueue
  parent: EventStore.Core.Bus
  isExternal: false
  name: ISingleConsumerMessageQueue
  nameWithType: ISingleConsumerMessageQueue
  fullName: EventStore.Core.Bus.ISingleConsumerMessageQueue
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  isExternal: false
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  isExternal: false
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  isExternal: false
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Bus.QueueStatsCollector
  commentId: T:EventStore.Core.Bus.QueueStatsCollector
  id: QueueStatsCollector
  parent: EventStore.Core.Bus
  children:
  - EventStore.Core.Bus.QueueStatsCollector.#ctor(System.String,System.String)
  - EventStore.Core.Bus.QueueStatsCollector.Dequeued(EventStore.Core.Messaging.Message)
  - EventStore.Core.Bus.QueueStatsCollector.Enqueued
  - EventStore.Core.Bus.QueueStatsCollector.EnterBusy
  - EventStore.Core.Bus.QueueStatsCollector.EnterIdle
  - EventStore.Core.Bus.QueueStatsCollector.GetStatistics(System.Int32)
  - EventStore.Core.Bus.QueueStatsCollector.GroupName
  - EventStore.Core.Bus.QueueStatsCollector.InProgressMessage
  - EventStore.Core.Bus.QueueStatsCollector.Name
  - EventStore.Core.Bus.QueueStatsCollector.ProcessingEnded(System.Int32)
  - EventStore.Core.Bus.QueueStatsCollector.ProcessingStarted(Type,System.Int32)
  - EventStore.Core.Bus.QueueStatsCollector.ProcessingStarted``1(System.Int32)
  - EventStore.Core.Bus.QueueStatsCollector.Start
  - EventStore.Core.Bus.QueueStatsCollector.Stop
  - EventStore.Core.Bus.QueueStatsCollector.WaitIdle(System.Boolean,System.Int32)
  langs:
  - csharp
  - vb
  name: QueueStatsCollector
  nameWithType: QueueStatsCollector
  fullName: EventStore.Core.Bus.QueueStatsCollector
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueStatsCollector.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: QueueStatsCollector
    path: ../EventStore/src/EventStore.Core/Bus/QueueStatsCollector.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: 'public class QueueStatsCollector : object'
    content.vb: >-
      Public Class QueueStatsCollector
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Bus.QueueStatsCollector.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Bus.QueueStatsCollector.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Bus.QueueStatsCollector.Name
  commentId: F:EventStore.Core.Bus.QueueStatsCollector.Name
  id: Name
  parent: EventStore.Core.Bus.QueueStatsCollector
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: QueueStatsCollector.Name
  fullName: EventStore.Core.Bus.QueueStatsCollector.Name
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueStatsCollector.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Name
    path: ../EventStore/src/EventStore.Core/Bus/QueueStatsCollector.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Bus.QueueStatsCollector.GroupName
  commentId: F:EventStore.Core.Bus.QueueStatsCollector.GroupName
  id: GroupName
  parent: EventStore.Core.Bus.QueueStatsCollector
  langs:
  - csharp
  - vb
  name: GroupName
  nameWithType: QueueStatsCollector.GroupName
  fullName: EventStore.Core.Bus.QueueStatsCollector.GroupName
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueStatsCollector.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: GroupName
    path: ../EventStore/src/EventStore.Core/Bus/QueueStatsCollector.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public readonly string GroupName
    return:
      type: System.String
    content.vb: Public ReadOnly GroupName As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Bus.QueueStatsCollector.InProgressMessage
  commentId: P:EventStore.Core.Bus.QueueStatsCollector.InProgressMessage
  id: InProgressMessage
  parent: EventStore.Core.Bus.QueueStatsCollector
  langs:
  - csharp
  - vb
  name: InProgressMessage
  nameWithType: QueueStatsCollector.InProgressMessage
  fullName: EventStore.Core.Bus.QueueStatsCollector.InProgressMessage
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueStatsCollector.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: InProgressMessage
    path: ../EventStore/src/EventStore.Core/Bus/QueueStatsCollector.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public Type InProgressMessage { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public ReadOnly Property InProgressMessage As Type
  overload: EventStore.Core.Bus.QueueStatsCollector.InProgressMessage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Bus.QueueStatsCollector.#ctor(System.String,System.String)
  commentId: M:EventStore.Core.Bus.QueueStatsCollector.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: EventStore.Core.Bus.QueueStatsCollector
  langs:
  - csharp
  - vb
  name: QueueStatsCollector(String, String)
  nameWithType: QueueStatsCollector.QueueStatsCollector(String, String)
  fullName: EventStore.Core.Bus.QueueStatsCollector.QueueStatsCollector(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueStatsCollector.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Bus/QueueStatsCollector.cs
    startLine: 46
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public QueueStatsCollector(string name, string groupName = null)
    parameters:
    - id: name
      type: System.String
    - id: groupName
      type: System.String
    content.vb: Public Sub New(name As String, groupName As String = Nothing)
  overload: EventStore.Core.Bus.QueueStatsCollector.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.QueueStatsCollector.Start
  commentId: M:EventStore.Core.Bus.QueueStatsCollector.Start
  id: Start
  parent: EventStore.Core.Bus.QueueStatsCollector
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: QueueStatsCollector.Start()
  fullName: EventStore.Core.Bus.QueueStatsCollector.Start()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueStatsCollector.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Start
    path: ../EventStore/src/EventStore.Core/Bus/QueueStatsCollector.cs
    startLine: 54
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: EventStore.Core.Bus.QueueStatsCollector.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.QueueStatsCollector.Stop
  commentId: M:EventStore.Core.Bus.QueueStatsCollector.Stop
  id: Stop
  parent: EventStore.Core.Bus.QueueStatsCollector
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: QueueStatsCollector.Stop()
  fullName: EventStore.Core.Bus.QueueStatsCollector.Stop()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueStatsCollector.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Stop
    path: ../EventStore/src/EventStore.Core/Bus/QueueStatsCollector.cs
    startLine: 69
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  overload: EventStore.Core.Bus.QueueStatsCollector.Stop*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.QueueStatsCollector.ProcessingStarted``1(System.Int32)
  commentId: M:EventStore.Core.Bus.QueueStatsCollector.ProcessingStarted``1(System.Int32)
  id: ProcessingStarted``1(System.Int32)
  parent: EventStore.Core.Bus.QueueStatsCollector
  langs:
  - csharp
  - vb
  name: ProcessingStarted<T>(Int32)
  nameWithType: QueueStatsCollector.ProcessingStarted<T>(Int32)
  fullName: EventStore.Core.Bus.QueueStatsCollector.ProcessingStarted<T>(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueStatsCollector.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ProcessingStarted
    path: ../EventStore/src/EventStore.Core/Bus/QueueStatsCollector.cs
    startLine: 75
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void ProcessingStarted<T>(int queueLength)
    parameters:
    - id: queueLength
      type: System.Int32
    typeParameters:
    - id: T
    content.vb: Public Sub ProcessingStarted(Of T)(queueLength As Integer)
  overload: EventStore.Core.Bus.QueueStatsCollector.ProcessingStarted*
  nameWithType.vb: QueueStatsCollector.ProcessingStarted(Of T)(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Bus.QueueStatsCollector.ProcessingStarted(Of T)(System.Int32)
  name.vb: ProcessingStarted(Of T)(Int32)
- uid: EventStore.Core.Bus.QueueStatsCollector.ProcessingStarted(Type,System.Int32)
  commentId: M:EventStore.Core.Bus.QueueStatsCollector.ProcessingStarted(Type,System.Int32)
  id: ProcessingStarted(Type,System.Int32)
  parent: EventStore.Core.Bus.QueueStatsCollector
  langs:
  - csharp
  - vb
  name: ProcessingStarted(Type, Int32)
  nameWithType: QueueStatsCollector.ProcessingStarted(Type, Int32)
  fullName: EventStore.Core.Bus.QueueStatsCollector.ProcessingStarted(Type, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueStatsCollector.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ProcessingStarted
    path: ../EventStore/src/EventStore.Core/Bus/QueueStatsCollector.cs
    startLine: 80
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void ProcessingStarted(Type msgType, int queueLength)
    parameters:
    - id: msgType
      type: Type
    - id: queueLength
      type: System.Int32
    content.vb: Public Sub ProcessingStarted(msgType As Type, queueLength As Integer)
  overload: EventStore.Core.Bus.QueueStatsCollector.ProcessingStarted*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.QueueStatsCollector.ProcessingEnded(System.Int32)
  commentId: M:EventStore.Core.Bus.QueueStatsCollector.ProcessingEnded(System.Int32)
  id: ProcessingEnded(System.Int32)
  parent: EventStore.Core.Bus.QueueStatsCollector
  langs:
  - csharp
  - vb
  name: ProcessingEnded(Int32)
  nameWithType: QueueStatsCollector.ProcessingEnded(Int32)
  fullName: EventStore.Core.Bus.QueueStatsCollector.ProcessingEnded(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueStatsCollector.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ProcessingEnded
    path: ../EventStore/src/EventStore.Core/Bus/QueueStatsCollector.cs
    startLine: 88
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void ProcessingEnded(int itemsProcessed)
    parameters:
    - id: itemsProcessed
      type: System.Int32
    content.vb: Public Sub ProcessingEnded(itemsProcessed As Integer)
  overload: EventStore.Core.Bus.QueueStatsCollector.ProcessingEnded*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.QueueStatsCollector.EnterIdle
  commentId: M:EventStore.Core.Bus.QueueStatsCollector.EnterIdle
  id: EnterIdle
  parent: EventStore.Core.Bus.QueueStatsCollector
  langs:
  - csharp
  - vb
  name: EnterIdle()
  nameWithType: QueueStatsCollector.EnterIdle()
  fullName: EventStore.Core.Bus.QueueStatsCollector.EnterIdle()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueStatsCollector.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: EnterIdle
    path: ../EventStore/src/EventStore.Core/Bus/QueueStatsCollector.cs
    startLine: 95
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void EnterIdle()
    content.vb: Public Sub EnterIdle
  overload: EventStore.Core.Bus.QueueStatsCollector.EnterIdle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.QueueStatsCollector.EnterBusy
  commentId: M:EventStore.Core.Bus.QueueStatsCollector.EnterBusy
  id: EnterBusy
  parent: EventStore.Core.Bus.QueueStatsCollector
  langs:
  - csharp
  - vb
  name: EnterBusy()
  nameWithType: QueueStatsCollector.EnterBusy()
  fullName: EventStore.Core.Bus.QueueStatsCollector.EnterBusy()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueStatsCollector.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: EnterBusy
    path: ../EventStore/src/EventStore.Core/Bus/QueueStatsCollector.cs
    startLine: 126
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void EnterBusy()
    content.vb: Public Sub EnterBusy
  overload: EventStore.Core.Bus.QueueStatsCollector.EnterBusy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.QueueStatsCollector.GetStatistics(System.Int32)
  commentId: M:EventStore.Core.Bus.QueueStatsCollector.GetStatistics(System.Int32)
  id: GetStatistics(System.Int32)
  parent: EventStore.Core.Bus.QueueStatsCollector
  langs:
  - csharp
  - vb
  name: GetStatistics(Int32)
  nameWithType: QueueStatsCollector.GetStatistics(Int32)
  fullName: EventStore.Core.Bus.QueueStatsCollector.GetStatistics(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueStatsCollector.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: GetStatistics
    path: ../EventStore/src/EventStore.Core/Bus/QueueStatsCollector.cs
    startLine: 152
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public QueueStats GetStatistics(int currentQueueLength)
    parameters:
    - id: currentQueueLength
      type: System.Int32
    return:
      type: EventStore.Core.Services.Monitoring.Stats.QueueStats
    content.vb: Public Function GetStatistics(currentQueueLength As Integer) As QueueStats
  overload: EventStore.Core.Bus.QueueStatsCollector.GetStatistics*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.QueueStatsCollector.WaitIdle(System.Boolean,System.Int32)
  commentId: M:EventStore.Core.Bus.QueueStatsCollector.WaitIdle(System.Boolean,System.Int32)
  id: WaitIdle(System.Boolean,System.Int32)
  parent: EventStore.Core.Bus.QueueStatsCollector
  langs:
  - csharp
  - vb
  name: WaitIdle(Boolean, Int32)
  nameWithType: QueueStatsCollector.WaitIdle(Boolean, Int32)
  fullName: EventStore.Core.Bus.QueueStatsCollector.WaitIdle(System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueStatsCollector.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: WaitIdle
    path: ../EventStore/src/EventStore.Core/Bus/QueueStatsCollector.cs
    startLine: 221
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public static void WaitIdle(bool waitForNonEmptyTf = false, int multiplier = 1)
    parameters:
    - id: waitForNonEmptyTf
      type: System.Boolean
    - id: multiplier
      type: System.Int32
    content.vb: Public Shared Sub WaitIdle(waitForNonEmptyTf As Boolean = False, multiplier As Integer = 1)
  overload: EventStore.Core.Bus.QueueStatsCollector.WaitIdle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Bus.QueueStatsCollector.Enqueued
  commentId: M:EventStore.Core.Bus.QueueStatsCollector.Enqueued
  id: Enqueued
  parent: EventStore.Core.Bus.QueueStatsCollector
  langs:
  - csharp
  - vb
  name: Enqueued()
  nameWithType: QueueStatsCollector.Enqueued()
  fullName: EventStore.Core.Bus.QueueStatsCollector.Enqueued()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueStatsCollector.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Enqueued
    path: ../EventStore/src/EventStore.Core/Bus/QueueStatsCollector.cs
    startLine: 279
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void Enqueued()
    content.vb: Public Sub Enqueued
  overload: EventStore.Core.Bus.QueueStatsCollector.Enqueued*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.QueueStatsCollector.Dequeued(EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Bus.QueueStatsCollector.Dequeued(EventStore.Core.Messaging.Message)
  id: Dequeued(EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Bus.QueueStatsCollector
  langs:
  - csharp
  - vb
  name: Dequeued(Message)
  nameWithType: QueueStatsCollector.Dequeued(Message)
  fullName: EventStore.Core.Bus.QueueStatsCollector.Dequeued(EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueStatsCollector.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Dequeued
    path: ../EventStore/src/EventStore.Core/Bus/QueueStatsCollector.cs
    startLine: 287
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void Dequeued(Message msg)
    parameters:
    - id: msg
      type: EventStore.Core.Messaging.Message
    content.vb: Public Sub Dequeued(msg As Message)
  overload: EventStore.Core.Bus.QueueStatsCollector.Dequeued*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.QueueStatsCollector.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<QueueStatsCollector>()
  nameWithType: ProtobufExtensions.Serialize<QueueStatsCollector>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Bus.QueueStatsCollector>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of QueueStatsCollector)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Bus.QueueStatsCollector)()
  name.vb: Serialize(Of QueueStatsCollector)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<QueueStatsCollector>
    nameWithType: ProtobufExtensions.Serialize<QueueStatsCollector>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Bus.QueueStatsCollector>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of QueueStatsCollector)
    nameWithType: ProtobufExtensions.Serialize(Of QueueStatsCollector)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Bus.QueueStatsCollector)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.QueueStatsCollector.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<QueueStatsCollector>()
  nameWithType: ProtobufExtensions.SerializeToArray<QueueStatsCollector>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Bus.QueueStatsCollector>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of QueueStatsCollector)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Bus.QueueStatsCollector)()
  name.vb: SerializeToArray(Of QueueStatsCollector)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<QueueStatsCollector>
    nameWithType: ProtobufExtensions.SerializeToArray<QueueStatsCollector>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Bus.QueueStatsCollector>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of QueueStatsCollector)
    nameWithType: ProtobufExtensions.SerializeToArray(Of QueueStatsCollector)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Bus.QueueStatsCollector)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Bus.QueueStatsCollector.InProgressMessage*
  commentId: Overload:EventStore.Core.Bus.QueueStatsCollector.InProgressMessage
  name: InProgressMessage
  nameWithType: QueueStatsCollector.InProgressMessage
  fullName: EventStore.Core.Bus.QueueStatsCollector.InProgressMessage
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: EventStore.Core.Bus.QueueStatsCollector.#ctor*
  commentId: Overload:EventStore.Core.Bus.QueueStatsCollector.#ctor
  name: QueueStatsCollector
  nameWithType: QueueStatsCollector.QueueStatsCollector
  fullName: EventStore.Core.Bus.QueueStatsCollector.QueueStatsCollector
- uid: EventStore.Core.Bus.QueueStatsCollector.Start*
  commentId: Overload:EventStore.Core.Bus.QueueStatsCollector.Start
  name: Start
  nameWithType: QueueStatsCollector.Start
  fullName: EventStore.Core.Bus.QueueStatsCollector.Start
- uid: EventStore.Core.Bus.QueueStatsCollector.Stop*
  commentId: Overload:EventStore.Core.Bus.QueueStatsCollector.Stop
  name: Stop
  nameWithType: QueueStatsCollector.Stop
  fullName: EventStore.Core.Bus.QueueStatsCollector.Stop
- uid: EventStore.Core.Bus.QueueStatsCollector.ProcessingStarted*
  commentId: Overload:EventStore.Core.Bus.QueueStatsCollector.ProcessingStarted
  name: ProcessingStarted
  nameWithType: QueueStatsCollector.ProcessingStarted
  fullName: EventStore.Core.Bus.QueueStatsCollector.ProcessingStarted
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Bus.QueueStatsCollector.ProcessingEnded*
  commentId: Overload:EventStore.Core.Bus.QueueStatsCollector.ProcessingEnded
  name: ProcessingEnded
  nameWithType: QueueStatsCollector.ProcessingEnded
  fullName: EventStore.Core.Bus.QueueStatsCollector.ProcessingEnded
- uid: EventStore.Core.Bus.QueueStatsCollector.EnterIdle*
  commentId: Overload:EventStore.Core.Bus.QueueStatsCollector.EnterIdle
  name: EnterIdle
  nameWithType: QueueStatsCollector.EnterIdle
  fullName: EventStore.Core.Bus.QueueStatsCollector.EnterIdle
- uid: EventStore.Core.Bus.QueueStatsCollector.EnterBusy*
  commentId: Overload:EventStore.Core.Bus.QueueStatsCollector.EnterBusy
  name: EnterBusy
  nameWithType: QueueStatsCollector.EnterBusy
  fullName: EventStore.Core.Bus.QueueStatsCollector.EnterBusy
- uid: EventStore.Core.Bus.QueueStatsCollector.GetStatistics*
  commentId: Overload:EventStore.Core.Bus.QueueStatsCollector.GetStatistics
  name: GetStatistics
  nameWithType: QueueStatsCollector.GetStatistics
  fullName: EventStore.Core.Bus.QueueStatsCollector.GetStatistics
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats
  commentId: T:EventStore.Core.Services.Monitoring.Stats.QueueStats
  parent: EventStore.Core.Services.Monitoring.Stats
  name: QueueStats
  nameWithType: QueueStats
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats
- uid: EventStore.Core.Services.Monitoring.Stats
  commentId: N:EventStore.Core.Services.Monitoring.Stats
  name: EventStore.Core.Services.Monitoring.Stats
  nameWithType: EventStore.Core.Services.Monitoring.Stats
  fullName: EventStore.Core.Services.Monitoring.Stats
- uid: EventStore.Core.Bus.QueueStatsCollector.WaitIdle*
  commentId: Overload:EventStore.Core.Bus.QueueStatsCollector.WaitIdle
  name: WaitIdle
  nameWithType: QueueStatsCollector.WaitIdle
  fullName: EventStore.Core.Bus.QueueStatsCollector.WaitIdle
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Bus.QueueStatsCollector.Enqueued*
  commentId: Overload:EventStore.Core.Bus.QueueStatsCollector.Enqueued
  name: Enqueued
  nameWithType: QueueStatsCollector.Enqueued
  fullName: EventStore.Core.Bus.QueueStatsCollector.Enqueued
- uid: EventStore.Core.Bus.QueueStatsCollector.Dequeued*
  commentId: Overload:EventStore.Core.Bus.QueueStatsCollector.Dequeued
  name: Dequeued
  nameWithType: QueueStatsCollector.Dequeued
  fullName: EventStore.Core.Bus.QueueStatsCollector.Dequeued
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging

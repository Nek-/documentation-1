### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  id: EventStore.Core.Bus
  children:
  - EventStore.Core.Bus.AdHocHandler`1
  - EventStore.Core.Bus.HandleExtensions
  - EventStore.Core.Bus.IBus
  - EventStore.Core.Bus.IHandle`1
  - EventStore.Core.Bus.IMonitoredQueue
  - EventStore.Core.Bus.InMemoryBus
  - EventStore.Core.Bus.InMemoryBus2
  - EventStore.Core.Bus.InMemoryBusUnoptimized
  - EventStore.Core.Bus.IPublisher
  - EventStore.Core.Bus.IQueuedHandler
  - EventStore.Core.Bus.ISingleConsumerMessageQueue
  - EventStore.Core.Bus.ISubscriber
  - EventStore.Core.Bus.IThreadSafePublisher
  - EventStore.Core.Bus.MPSCMessageQueue
  - EventStore.Core.Bus.MultiQueuedHandler
  - EventStore.Core.Bus.NarrowingHandler`2
  - EventStore.Core.Bus.QueueBatchDequeueResult
  - EventStore.Core.Bus.QueuedHandler
  - EventStore.Core.Bus.QueuedHandlerAutoReset
  - EventStore.Core.Bus.QueuedHandlerAutoResetWithMpsc
  - EventStore.Core.Bus.QueuedHandlerMRES
  - EventStore.Core.Bus.QueuedHandlerMresWithMpsc
  - EventStore.Core.Bus.QueuedHandlerPulse
  - EventStore.Core.Bus.QueuedHandlerSleep
  - EventStore.Core.Bus.QueuedHandlerThreadPool
  - EventStore.Core.Bus.QueueMonitor
  - EventStore.Core.Bus.QueueStatsCollector
  - EventStore.Core.Bus.SPSCMessageQueue
  - EventStore.Core.Bus.WideningHandler`2
  langs:
  - csharp
  - vb
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
  type: Namespace
  assemblies:
  - EventStore.Core
references:
- uid: EventStore.Core.Bus.AdHocHandler`1
  commentId: T:EventStore.Core.Bus.AdHocHandler`1
  name: AdHocHandler<T>
  nameWithType: AdHocHandler<T>
  fullName: EventStore.Core.Bus.AdHocHandler<T>
  nameWithType.vb: AdHocHandler(Of T)
  fullName.vb: EventStore.Core.Bus.AdHocHandler(Of T)
  name.vb: AdHocHandler(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.AdHocHandler`1
    name: AdHocHandler
    nameWithType: AdHocHandler
    fullName: EventStore.Core.Bus.AdHocHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.AdHocHandler`1
    name: AdHocHandler
    nameWithType: AdHocHandler
    fullName: EventStore.Core.Bus.AdHocHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.ISingleConsumerMessageQueue
  commentId: T:EventStore.Core.Bus.ISingleConsumerMessageQueue
  parent: EventStore.Core.Bus
  name: ISingleConsumerMessageQueue
  nameWithType: ISingleConsumerMessageQueue
  fullName: EventStore.Core.Bus.ISingleConsumerMessageQueue
- uid: EventStore.Core.Bus.MPSCMessageQueue
  commentId: T:EventStore.Core.Bus.MPSCMessageQueue
  name: MPSCMessageQueue
  nameWithType: MPSCMessageQueue
  fullName: EventStore.Core.Bus.MPSCMessageQueue
- uid: EventStore.Core.Bus.QueueBatchDequeueResult
  commentId: T:EventStore.Core.Bus.QueueBatchDequeueResult
  parent: EventStore.Core.Bus
  name: QueueBatchDequeueResult
  nameWithType: QueueBatchDequeueResult
  fullName: EventStore.Core.Bus.QueueBatchDequeueResult
- uid: EventStore.Core.Bus.QueuedHandlerAutoReset
  commentId: T:EventStore.Core.Bus.QueuedHandlerAutoReset
  name: QueuedHandlerAutoReset
  nameWithType: QueuedHandlerAutoReset
  fullName: EventStore.Core.Bus.QueuedHandlerAutoReset
- uid: EventStore.Core.Bus.QueuedHandlerMRES
  commentId: T:EventStore.Core.Bus.QueuedHandlerMRES
  parent: EventStore.Core.Bus
  name: QueuedHandlerMRES
  nameWithType: QueuedHandlerMRES
  fullName: EventStore.Core.Bus.QueuedHandlerMRES
- uid: EventStore.Core.Bus.QueueStatsCollector
  commentId: T:EventStore.Core.Bus.QueueStatsCollector
  name: QueueStatsCollector
  nameWithType: QueueStatsCollector
  fullName: EventStore.Core.Bus.QueueStatsCollector
- uid: EventStore.Core.Bus.IQueuedHandler
  commentId: T:EventStore.Core.Bus.IQueuedHandler
  parent: EventStore.Core.Bus
  name: IQueuedHandler
  nameWithType: IQueuedHandler
  fullName: EventStore.Core.Bus.IQueuedHandler
- uid: EventStore.Core.Bus.QueuedHandlerThreadPool
  commentId: T:EventStore.Core.Bus.QueuedHandlerThreadPool
  name: QueuedHandlerThreadPool
  nameWithType: QueuedHandlerThreadPool
  fullName: EventStore.Core.Bus.QueuedHandlerThreadPool
- uid: EventStore.Core.Bus.MultiQueuedHandler
  commentId: T:EventStore.Core.Bus.MultiQueuedHandler
  parent: EventStore.Core.Bus
  name: MultiQueuedHandler
  nameWithType: MultiQueuedHandler
  fullName: EventStore.Core.Bus.MultiQueuedHandler
- uid: EventStore.Core.Bus.QueuedHandlerSleep
  commentId: T:EventStore.Core.Bus.QueuedHandlerSleep
  name: QueuedHandlerSleep
  nameWithType: QueuedHandlerSleep
  fullName: EventStore.Core.Bus.QueuedHandlerSleep
- uid: EventStore.Core.Bus.QueuedHandlerMresWithMpsc
  commentId: T:EventStore.Core.Bus.QueuedHandlerMresWithMpsc
  name: QueuedHandlerMresWithMpsc
  nameWithType: QueuedHandlerMresWithMpsc
  fullName: EventStore.Core.Bus.QueuedHandlerMresWithMpsc
- uid: EventStore.Core.Bus.QueuedHandler
  commentId: T:EventStore.Core.Bus.QueuedHandler
  name: QueuedHandler
  nameWithType: QueuedHandler
  fullName: EventStore.Core.Bus.QueuedHandler
- uid: EventStore.Core.Bus.QueuedHandlerPulse
  commentId: T:EventStore.Core.Bus.QueuedHandlerPulse
  name: QueuedHandlerPulse
  nameWithType: QueuedHandlerPulse
  fullName: EventStore.Core.Bus.QueuedHandlerPulse
- uid: EventStore.Core.Bus.NarrowingHandler`2
  commentId: T:EventStore.Core.Bus.NarrowingHandler`2
  name: NarrowingHandler<TInput, TOutput>
  nameWithType: NarrowingHandler<TInput, TOutput>
  fullName: EventStore.Core.Bus.NarrowingHandler<TInput, TOutput>
  nameWithType.vb: NarrowingHandler(Of TInput, TOutput)
  fullName.vb: EventStore.Core.Bus.NarrowingHandler(Of TInput, TOutput)
  name.vb: NarrowingHandler(Of TInput, TOutput)
  spec.csharp:
  - uid: EventStore.Core.Bus.NarrowingHandler`2
    name: NarrowingHandler
    nameWithType: NarrowingHandler
    fullName: EventStore.Core.Bus.NarrowingHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.NarrowingHandler`2
    name: NarrowingHandler
    nameWithType: NarrowingHandler
    fullName: EventStore.Core.Bus.NarrowingHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.SPSCMessageQueue
  commentId: T:EventStore.Core.Bus.SPSCMessageQueue
  name: SPSCMessageQueue
  nameWithType: SPSCMessageQueue
  fullName: EventStore.Core.Bus.SPSCMessageQueue
- uid: EventStore.Core.Bus.WideningHandler`2
  commentId: T:EventStore.Core.Bus.WideningHandler`2
  name: WideningHandler<TInput, TOutput>
  nameWithType: WideningHandler<TInput, TOutput>
  fullName: EventStore.Core.Bus.WideningHandler<TInput, TOutput>
  nameWithType.vb: WideningHandler(Of TInput, TOutput)
  fullName.vb: EventStore.Core.Bus.WideningHandler(Of TInput, TOutput)
  name.vb: WideningHandler(Of TInput, TOutput)
  spec.csharp:
  - uid: EventStore.Core.Bus.WideningHandler`2
    name: WideningHandler
    nameWithType: WideningHandler
    fullName: EventStore.Core.Bus.WideningHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.WideningHandler`2
    name: WideningHandler
    nameWithType: WideningHandler
    fullName: EventStore.Core.Bus.WideningHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.HandleExtensions
  commentId: T:EventStore.Core.Bus.HandleExtensions
  parent: EventStore.Core.Bus
  name: HandleExtensions
  nameWithType: HandleExtensions
  fullName: EventStore.Core.Bus.HandleExtensions
- uid: EventStore.Core.Bus.IBus
  commentId: T:EventStore.Core.Bus.IBus
  parent: EventStore.Core.Bus
  name: IBus
  nameWithType: IBus
  fullName: EventStore.Core.Bus.IBus
- uid: EventStore.Core.Bus.IMonitoredQueue
  commentId: T:EventStore.Core.Bus.IMonitoredQueue
  parent: EventStore.Core.Bus
  name: IMonitoredQueue
  nameWithType: IMonitoredQueue
  fullName: EventStore.Core.Bus.IMonitoredQueue
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized
  commentId: T:EventStore.Core.Bus.InMemoryBusUnoptimized
  parent: EventStore.Core.Bus
  name: InMemoryBusUnoptimized
  nameWithType: InMemoryBusUnoptimized
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized
- uid: EventStore.Core.Bus.InMemoryBus2
  commentId: T:EventStore.Core.Bus.InMemoryBus2
  parent: EventStore.Core.Bus
  name: InMemoryBus2
  nameWithType: InMemoryBus2
  fullName: EventStore.Core.Bus.InMemoryBus2
- uid: EventStore.Core.Bus.InMemoryBus
  commentId: T:EventStore.Core.Bus.InMemoryBus
  parent: EventStore.Core.Bus
  name: InMemoryBus
  nameWithType: InMemoryBus
  fullName: EventStore.Core.Bus.InMemoryBus
- uid: EventStore.Core.Bus.ISubscriber
  commentId: T:EventStore.Core.Bus.ISubscriber
  parent: EventStore.Core.Bus
  name: ISubscriber
  nameWithType: ISubscriber
  fullName: EventStore.Core.Bus.ISubscriber
- uid: EventStore.Core.Bus.QueuedHandlerAutoResetWithMpsc
  commentId: T:EventStore.Core.Bus.QueuedHandlerAutoResetWithMpsc
  name: QueuedHandlerAutoResetWithMpsc
  nameWithType: QueuedHandlerAutoResetWithMpsc
  fullName: EventStore.Core.Bus.QueuedHandlerAutoResetWithMpsc
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.Bus.IThreadSafePublisher
  commentId: T:EventStore.Core.Bus.IThreadSafePublisher
  parent: EventStore.Core.Bus
  name: IThreadSafePublisher
  nameWithType: IThreadSafePublisher
  fullName: EventStore.Core.Bus.IThreadSafePublisher
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.QueueMonitor
  commentId: T:EventStore.Core.Bus.QueueMonitor
  parent: EventStore.Core.Bus
  name: QueueMonitor
  nameWithType: QueueMonitor
  fullName: EventStore.Core.Bus.QueueMonitor
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus

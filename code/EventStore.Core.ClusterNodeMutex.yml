### YamlMime:ManagedReference
items:
- uid: EventStore.Core.ClusterNodeMutex
  commentId: T:EventStore.Core.ClusterNodeMutex
  id: ClusterNodeMutex
  parent: EventStore.Core
  children:
  - EventStore.Core.ClusterNodeMutex.#ctor
  - EventStore.Core.ClusterNodeMutex.Acquire
  - EventStore.Core.ClusterNodeMutex.IsAcquired
  - EventStore.Core.ClusterNodeMutex.IsPresent(System.Int32)
  - EventStore.Core.ClusterNodeMutex.MutexName
  - EventStore.Core.ClusterNodeMutex.Release
  langs:
  - csharp
  - vb
  name: ClusterNodeMutex
  nameWithType: ClusterNodeMutex
  fullName: EventStore.Core.ClusterNodeMutex
  type: Class
  source:
    remote:
      path: src/EventStore.Core/ClusterNodeMutex.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ClusterNodeMutex
    path: ../EventStore/src/EventStore.Core/ClusterNodeMutex.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: 'public class ClusterNodeMutex : object'
    content.vb: >-
      Public Class ClusterNodeMutex

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.ClusterNodeMutex.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.ClusterNodeMutex.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.ClusterNodeMutex.MutexName
  commentId: F:EventStore.Core.ClusterNodeMutex.MutexName
  id: MutexName
  parent: EventStore.Core.ClusterNodeMutex
  langs:
  - csharp
  - vb
  name: MutexName
  nameWithType: ClusterNodeMutex.MutexName
  fullName: EventStore.Core.ClusterNodeMutex.MutexName
  type: Field
  source:
    remote:
      path: src/EventStore.Core/ClusterNodeMutex.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MutexName
    path: ../EventStore/src/EventStore.Core/ClusterNodeMutex.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public readonly string MutexName
    return:
      type: System.String
    content.vb: Public ReadOnly MutexName As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.ClusterNodeMutex.IsAcquired
  commentId: P:EventStore.Core.ClusterNodeMutex.IsAcquired
  id: IsAcquired
  parent: EventStore.Core.ClusterNodeMutex
  langs:
  - csharp
  - vb
  name: IsAcquired
  nameWithType: ClusterNodeMutex.IsAcquired
  fullName: EventStore.Core.ClusterNodeMutex.IsAcquired
  type: Property
  source:
    remote:
      path: src/EventStore.Core/ClusterNodeMutex.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IsAcquired
    path: ../EventStore/src/EventStore.Core/ClusterNodeMutex.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public bool IsAcquired { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAcquired As Boolean
  overload: EventStore.Core.ClusterNodeMutex.IsAcquired*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.ClusterNodeMutex.#ctor
  commentId: M:EventStore.Core.ClusterNodeMutex.#ctor
  id: '#ctor'
  parent: EventStore.Core.ClusterNodeMutex
  langs:
  - csharp
  - vb
  name: ClusterNodeMutex()
  nameWithType: ClusterNodeMutex.ClusterNodeMutex()
  fullName: EventStore.Core.ClusterNodeMutex.ClusterNodeMutex()
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/ClusterNodeMutex.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/ClusterNodeMutex.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public ClusterNodeMutex()
    content.vb: Public Sub New
  overload: EventStore.Core.ClusterNodeMutex.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.ClusterNodeMutex.Acquire
  commentId: M:EventStore.Core.ClusterNodeMutex.Acquire
  id: Acquire
  parent: EventStore.Core.ClusterNodeMutex
  langs:
  - csharp
  - vb
  name: Acquire()
  nameWithType: ClusterNodeMutex.Acquire()
  fullName: EventStore.Core.ClusterNodeMutex.Acquire()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/ClusterNodeMutex.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Acquire
    path: ../EventStore/src/EventStore.Core/ClusterNodeMutex.cs
    startLine: 23
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public bool Acquire()
    return:
      type: System.Boolean
    content.vb: Public Function Acquire As Boolean
  overload: EventStore.Core.ClusterNodeMutex.Acquire*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.ClusterNodeMutex.Release
  commentId: M:EventStore.Core.ClusterNodeMutex.Release
  id: Release
  parent: EventStore.Core.ClusterNodeMutex
  langs:
  - csharp
  - vb
  name: Release()
  nameWithType: ClusterNodeMutex.Release()
  fullName: EventStore.Core.ClusterNodeMutex.Release()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/ClusterNodeMutex.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Release
    path: ../EventStore/src/EventStore.Core/ClusterNodeMutex.cs
    startLine: 42
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public void Release()
    content.vb: Public Sub Release
  overload: EventStore.Core.ClusterNodeMutex.Release*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.ClusterNodeMutex.IsPresent(System.Int32)
  commentId: M:EventStore.Core.ClusterNodeMutex.IsPresent(System.Int32)
  id: IsPresent(System.Int32)
  parent: EventStore.Core.ClusterNodeMutex
  langs:
  - csharp
  - vb
  name: IsPresent(Int32)
  nameWithType: ClusterNodeMutex.IsPresent(Int32)
  fullName: EventStore.Core.ClusterNodeMutex.IsPresent(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/ClusterNodeMutex.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IsPresent
    path: ../EventStore/src/EventStore.Core/ClusterNodeMutex.cs
    startLine: 48
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public static bool IsPresent(int pid)
    parameters:
    - id: pid
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsPresent(pid As Integer) As Boolean
  overload: EventStore.Core.ClusterNodeMutex.IsPresent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Core
  commentId: N:EventStore.Core
  isExternal: false
  name: EventStore.Core
  nameWithType: EventStore.Core
  fullName: EventStore.Core
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.ClusterNodeMutex.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ClusterNodeMutex>()
  nameWithType: ProtobufExtensions.Serialize<ClusterNodeMutex>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.ClusterNodeMutex>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ClusterNodeMutex)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.ClusterNodeMutex)()
  name.vb: Serialize(Of ClusterNodeMutex)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ClusterNodeMutex>
    nameWithType: ProtobufExtensions.Serialize<ClusterNodeMutex>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.ClusterNodeMutex>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ClusterNodeMutex)
    nameWithType: ProtobufExtensions.Serialize(Of ClusterNodeMutex)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.ClusterNodeMutex)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.ClusterNodeMutex.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ClusterNodeMutex>()
  nameWithType: ProtobufExtensions.SerializeToArray<ClusterNodeMutex>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.ClusterNodeMutex>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ClusterNodeMutex)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.ClusterNodeMutex)()
  name.vb: SerializeToArray(Of ClusterNodeMutex)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ClusterNodeMutex>
    nameWithType: ProtobufExtensions.SerializeToArray<ClusterNodeMutex>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.ClusterNodeMutex>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ClusterNodeMutex)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ClusterNodeMutex)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.ClusterNodeMutex)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.ClusterNodeMutex.IsAcquired*
  commentId: Overload:EventStore.Core.ClusterNodeMutex.IsAcquired
  isExternal: false
  name: IsAcquired
  nameWithType: ClusterNodeMutex.IsAcquired
  fullName: EventStore.Core.ClusterNodeMutex.IsAcquired
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.ClusterNodeMutex.#ctor*
  commentId: Overload:EventStore.Core.ClusterNodeMutex.#ctor
  isExternal: false
  name: ClusterNodeMutex
  nameWithType: ClusterNodeMutex.ClusterNodeMutex
  fullName: EventStore.Core.ClusterNodeMutex.ClusterNodeMutex
- uid: EventStore.Core.ClusterNodeMutex.Acquire*
  commentId: Overload:EventStore.Core.ClusterNodeMutex.Acquire
  isExternal: false
  name: Acquire
  nameWithType: ClusterNodeMutex.Acquire
  fullName: EventStore.Core.ClusterNodeMutex.Acquire
- uid: EventStore.Core.ClusterNodeMutex.Release*
  commentId: Overload:EventStore.Core.ClusterNodeMutex.Release
  isExternal: false
  name: Release
  nameWithType: ClusterNodeMutex.Release
  fullName: EventStore.Core.ClusterNodeMutex.Release
- uid: EventStore.Core.ClusterNodeMutex.IsPresent*
  commentId: Overload:EventStore.Core.ClusterNodeMutex.IsPresent
  isExternal: false
  name: IsPresent
  nameWithType: ClusterNodeMutex.IsPresent
  fullName: EventStore.Core.ClusterNodeMutex.IsPresent
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32

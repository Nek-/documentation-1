### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Data.StreamAcl
  commentId: T:EventStore.Core.Data.StreamAcl
  id: StreamAcl
  parent: EventStore.Core.Data
  children:
  - EventStore.Core.Data.StreamAcl.#ctor(System.String,System.String,System.String,System.String,System.String)
  - EventStore.Core.Data.StreamAcl.#ctor(System.String[],System.String[],System.String[],System.String[],System.String[])
  - EventStore.Core.Data.StreamAcl.DeleteRoles
  - EventStore.Core.Data.StreamAcl.MetaReadRoles
  - EventStore.Core.Data.StreamAcl.MetaWriteRoles
  - EventStore.Core.Data.StreamAcl.ReadRoles
  - EventStore.Core.Data.StreamAcl.ToString
  - EventStore.Core.Data.StreamAcl.WriteRoles
  langs:
  - csharp
  - vb
  name: StreamAcl
  nameWithType: StreamAcl
  fullName: EventStore.Core.Data.StreamAcl
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Data/StreamAcl.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: StreamAcl
    path: ../EventStore/src/EventStore.Core/Data/StreamAcl.cs
    startLine: 2
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: 'public class StreamAcl : object'
    content.vb: >-
      Public Class StreamAcl
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Data.StreamAcl.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Data.StreamAcl.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Data.StreamAcl.ReadRoles
  commentId: F:EventStore.Core.Data.StreamAcl.ReadRoles
  id: ReadRoles
  parent: EventStore.Core.Data.StreamAcl
  langs:
  - csharp
  - vb
  name: ReadRoles
  nameWithType: StreamAcl.ReadRoles
  fullName: EventStore.Core.Data.StreamAcl.ReadRoles
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/StreamAcl.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReadRoles
    path: ../EventStore/src/EventStore.Core/Data/StreamAcl.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly string[] ReadRoles
    return:
      type: System.String[]
    content.vb: Public ReadOnly ReadRoles As String()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.StreamAcl.WriteRoles
  commentId: F:EventStore.Core.Data.StreamAcl.WriteRoles
  id: WriteRoles
  parent: EventStore.Core.Data.StreamAcl
  langs:
  - csharp
  - vb
  name: WriteRoles
  nameWithType: StreamAcl.WriteRoles
  fullName: EventStore.Core.Data.StreamAcl.WriteRoles
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/StreamAcl.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: WriteRoles
    path: ../EventStore/src/EventStore.Core/Data/StreamAcl.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly string[] WriteRoles
    return:
      type: System.String[]
    content.vb: Public ReadOnly WriteRoles As String()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.StreamAcl.DeleteRoles
  commentId: F:EventStore.Core.Data.StreamAcl.DeleteRoles
  id: DeleteRoles
  parent: EventStore.Core.Data.StreamAcl
  langs:
  - csharp
  - vb
  name: DeleteRoles
  nameWithType: StreamAcl.DeleteRoles
  fullName: EventStore.Core.Data.StreamAcl.DeleteRoles
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/StreamAcl.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: DeleteRoles
    path: ../EventStore/src/EventStore.Core/Data/StreamAcl.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly string[] DeleteRoles
    return:
      type: System.String[]
    content.vb: Public ReadOnly DeleteRoles As String()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.StreamAcl.MetaReadRoles
  commentId: F:EventStore.Core.Data.StreamAcl.MetaReadRoles
  id: MetaReadRoles
  parent: EventStore.Core.Data.StreamAcl
  langs:
  - csharp
  - vb
  name: MetaReadRoles
  nameWithType: StreamAcl.MetaReadRoles
  fullName: EventStore.Core.Data.StreamAcl.MetaReadRoles
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/StreamAcl.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MetaReadRoles
    path: ../EventStore/src/EventStore.Core/Data/StreamAcl.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly string[] MetaReadRoles
    return:
      type: System.String[]
    content.vb: Public ReadOnly MetaReadRoles As String()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.StreamAcl.MetaWriteRoles
  commentId: F:EventStore.Core.Data.StreamAcl.MetaWriteRoles
  id: MetaWriteRoles
  parent: EventStore.Core.Data.StreamAcl
  langs:
  - csharp
  - vb
  name: MetaWriteRoles
  nameWithType: StreamAcl.MetaWriteRoles
  fullName: EventStore.Core.Data.StreamAcl.MetaWriteRoles
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/StreamAcl.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MetaWriteRoles
    path: ../EventStore/src/EventStore.Core/Data/StreamAcl.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly string[] MetaWriteRoles
    return:
      type: System.String[]
    content.vb: Public ReadOnly MetaWriteRoles As String()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.StreamAcl.#ctor(System.String,System.String,System.String,System.String,System.String)
  commentId: M:EventStore.Core.Data.StreamAcl.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: EventStore.Core.Data.StreamAcl
  langs:
  - csharp
  - vb
  name: StreamAcl(String, String, String, String, String)
  nameWithType: StreamAcl.StreamAcl(String, String, String, String, String)
  fullName: EventStore.Core.Data.StreamAcl.StreamAcl(System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Data/StreamAcl.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Data/StreamAcl.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public StreamAcl(string readRole, string writeRole, string deleteRole, string metaReadRole, string metaWriteRole)
    parameters:
    - id: readRole
      type: System.String
    - id: writeRole
      type: System.String
    - id: deleteRole
      type: System.String
    - id: metaReadRole
      type: System.String
    - id: metaWriteRole
      type: System.String
    content.vb: Public Sub New(readRole As String, writeRole As String, deleteRole As String, metaReadRole As String, metaWriteRole As String)
  overload: EventStore.Core.Data.StreamAcl.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Data.StreamAcl.#ctor(System.String[],System.String[],System.String[],System.String[],System.String[])
  commentId: M:EventStore.Core.Data.StreamAcl.#ctor(System.String[],System.String[],System.String[],System.String[],System.String[])
  id: '#ctor(System.String[],System.String[],System.String[],System.String[],System.String[])'
  parent: EventStore.Core.Data.StreamAcl
  langs:
  - csharp
  - vb
  name: StreamAcl(String[], String[], String[], String[], String[])
  nameWithType: StreamAcl.StreamAcl(String[], String[], String[], String[], String[])
  fullName: EventStore.Core.Data.StreamAcl.StreamAcl(System.String[], System.String[], System.String[], System.String[], System.String[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Data/StreamAcl.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Data/StreamAcl.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public StreamAcl(string[] readRoles, string[] writeRoles, string[] deleteRoles, string[] metaReadRoles, string[] metaWriteRoles)
    parameters:
    - id: readRoles
      type: System.String[]
    - id: writeRoles
      type: System.String[]
    - id: deleteRoles
      type: System.String[]
    - id: metaReadRoles
      type: System.String[]
    - id: metaWriteRoles
      type: System.String[]
    content.vb: Public Sub New(readRoles As String(), writeRoles As String(), deleteRoles As String(), metaReadRoles As String(), metaWriteRoles As String())
  overload: EventStore.Core.Data.StreamAcl.#ctor*
  nameWithType.vb: StreamAcl.StreamAcl(String(), String(), String(), String(), String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Data.StreamAcl.StreamAcl(System.String(), System.String(), System.String(), System.String(), System.String())
  name.vb: StreamAcl(String(), String(), String(), String(), String())
- uid: EventStore.Core.Data.StreamAcl.ToString
  commentId: M:EventStore.Core.Data.StreamAcl.ToString
  id: ToString
  parent: EventStore.Core.Data.StreamAcl
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: StreamAcl.ToString()
  fullName: EventStore.Core.Data.StreamAcl.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Data/StreamAcl.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.Core/Data/StreamAcl.cs
    startLine: 28
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.Core.Data.StreamAcl.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  isExternal: false
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.StreamAcl.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<StreamAcl>()
  nameWithType: ProtobufExtensions.Serialize<StreamAcl>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Data.StreamAcl>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of StreamAcl)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Data.StreamAcl)()
  name.vb: Serialize(Of StreamAcl)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<StreamAcl>
    nameWithType: ProtobufExtensions.Serialize<StreamAcl>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Data.StreamAcl>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of StreamAcl)
    nameWithType: ProtobufExtensions.Serialize(Of StreamAcl)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Data.StreamAcl)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.StreamAcl.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<StreamAcl>()
  nameWithType: ProtobufExtensions.SerializeToArray<StreamAcl>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Data.StreamAcl>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of StreamAcl)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Data.StreamAcl)()
  name.vb: SerializeToArray(Of StreamAcl)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<StreamAcl>
    nameWithType: ProtobufExtensions.SerializeToArray<StreamAcl>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Data.StreamAcl>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of StreamAcl)
    nameWithType: ProtobufExtensions.SerializeToArray(Of StreamAcl)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Data.StreamAcl)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Data.StreamAcl.#ctor*
  commentId: Overload:EventStore.Core.Data.StreamAcl.#ctor
  isExternal: false
  name: StreamAcl
  nameWithType: StreamAcl.StreamAcl
  fullName: EventStore.Core.Data.StreamAcl.StreamAcl
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Data.StreamAcl.ToString*
  commentId: Overload:EventStore.Core.Data.StreamAcl.ToString
  isExternal: false
  name: ToString
  nameWithType: StreamAcl.ToString
  fullName: EventStore.Core.Data.StreamAcl.ToString

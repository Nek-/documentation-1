### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Data.VNodeInfo
  commentId: T:EventStore.Core.Data.VNodeInfo
  id: VNodeInfo
  parent: EventStore.Core.Data
  children:
  - EventStore.Core.Data.VNodeInfo.#ctor(Guid,System.Int32,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint)
  - EventStore.Core.Data.VNodeInfo.DebugIndex
  - EventStore.Core.Data.VNodeInfo.ExternalHttp
  - EventStore.Core.Data.VNodeInfo.ExternalSecureTcp
  - EventStore.Core.Data.VNodeInfo.ExternalTcp
  - EventStore.Core.Data.VNodeInfo.InstanceId
  - EventStore.Core.Data.VNodeInfo.InternalHttp
  - EventStore.Core.Data.VNodeInfo.InternalSecureTcp
  - EventStore.Core.Data.VNodeInfo.InternalTcp
  - EventStore.Core.Data.VNodeInfo.Is(IPEndPoint)
  - EventStore.Core.Data.VNodeInfo.ToString
  langs:
  - csharp
  - vb
  name: VNodeInfo
  nameWithType: VNodeInfo
  fullName: EventStore.Core.Data.VNodeInfo
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Data/VNodeInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: VNodeInfo
    path: ../EventStore/src/EventStore.Core/Data/VNodeInfo.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: 'public class VNodeInfo : object'
    content.vb: >-
      Public Class VNodeInfo

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Data.VNodeInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Data.VNodeInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Data.VNodeInfo.InstanceId
  commentId: F:EventStore.Core.Data.VNodeInfo.InstanceId
  id: InstanceId
  parent: EventStore.Core.Data.VNodeInfo
  langs:
  - csharp
  - vb
  name: InstanceId
  nameWithType: VNodeInfo.InstanceId
  fullName: EventStore.Core.Data.VNodeInfo.InstanceId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/VNodeInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InstanceId
    path: ../EventStore/src/EventStore.Core/Data/VNodeInfo.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly Guid InstanceId
    return:
      type: Guid
    content.vb: Public ReadOnly InstanceId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.VNodeInfo.DebugIndex
  commentId: F:EventStore.Core.Data.VNodeInfo.DebugIndex
  id: DebugIndex
  parent: EventStore.Core.Data.VNodeInfo
  langs:
  - csharp
  - vb
  name: DebugIndex
  nameWithType: VNodeInfo.DebugIndex
  fullName: EventStore.Core.Data.VNodeInfo.DebugIndex
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/VNodeInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DebugIndex
    path: ../EventStore/src/EventStore.Core/Data/VNodeInfo.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly int DebugIndex
    return:
      type: System.Int32
    content.vb: Public ReadOnly DebugIndex As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.VNodeInfo.InternalTcp
  commentId: F:EventStore.Core.Data.VNodeInfo.InternalTcp
  id: InternalTcp
  parent: EventStore.Core.Data.VNodeInfo
  langs:
  - csharp
  - vb
  name: InternalTcp
  nameWithType: VNodeInfo.InternalTcp
  fullName: EventStore.Core.Data.VNodeInfo.InternalTcp
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/VNodeInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InternalTcp
    path: ../EventStore/src/EventStore.Core/Data/VNodeInfo.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly IPEndPoint InternalTcp
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly InternalTcp As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.VNodeInfo.InternalSecureTcp
  commentId: F:EventStore.Core.Data.VNodeInfo.InternalSecureTcp
  id: InternalSecureTcp
  parent: EventStore.Core.Data.VNodeInfo
  langs:
  - csharp
  - vb
  name: InternalSecureTcp
  nameWithType: VNodeInfo.InternalSecureTcp
  fullName: EventStore.Core.Data.VNodeInfo.InternalSecureTcp
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/VNodeInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InternalSecureTcp
    path: ../EventStore/src/EventStore.Core/Data/VNodeInfo.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly IPEndPoint InternalSecureTcp
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly InternalSecureTcp As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.VNodeInfo.ExternalTcp
  commentId: F:EventStore.Core.Data.VNodeInfo.ExternalTcp
  id: ExternalTcp
  parent: EventStore.Core.Data.VNodeInfo
  langs:
  - csharp
  - vb
  name: ExternalTcp
  nameWithType: VNodeInfo.ExternalTcp
  fullName: EventStore.Core.Data.VNodeInfo.ExternalTcp
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/VNodeInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExternalTcp
    path: ../EventStore/src/EventStore.Core/Data/VNodeInfo.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly IPEndPoint ExternalTcp
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly ExternalTcp As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.VNodeInfo.ExternalSecureTcp
  commentId: F:EventStore.Core.Data.VNodeInfo.ExternalSecureTcp
  id: ExternalSecureTcp
  parent: EventStore.Core.Data.VNodeInfo
  langs:
  - csharp
  - vb
  name: ExternalSecureTcp
  nameWithType: VNodeInfo.ExternalSecureTcp
  fullName: EventStore.Core.Data.VNodeInfo.ExternalSecureTcp
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/VNodeInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExternalSecureTcp
    path: ../EventStore/src/EventStore.Core/Data/VNodeInfo.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly IPEndPoint ExternalSecureTcp
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly ExternalSecureTcp As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.VNodeInfo.InternalHttp
  commentId: F:EventStore.Core.Data.VNodeInfo.InternalHttp
  id: InternalHttp
  parent: EventStore.Core.Data.VNodeInfo
  langs:
  - csharp
  - vb
  name: InternalHttp
  nameWithType: VNodeInfo.InternalHttp
  fullName: EventStore.Core.Data.VNodeInfo.InternalHttp
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/VNodeInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InternalHttp
    path: ../EventStore/src/EventStore.Core/Data/VNodeInfo.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly IPEndPoint InternalHttp
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly InternalHttp As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.VNodeInfo.ExternalHttp
  commentId: F:EventStore.Core.Data.VNodeInfo.ExternalHttp
  id: ExternalHttp
  parent: EventStore.Core.Data.VNodeInfo
  langs:
  - csharp
  - vb
  name: ExternalHttp
  nameWithType: VNodeInfo.ExternalHttp
  fullName: EventStore.Core.Data.VNodeInfo.ExternalHttp
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/VNodeInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExternalHttp
    path: ../EventStore/src/EventStore.Core/Data/VNodeInfo.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly IPEndPoint ExternalHttp
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly ExternalHttp As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.VNodeInfo.#ctor(Guid,System.Int32,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint)
  commentId: M:EventStore.Core.Data.VNodeInfo.#ctor(Guid,System.Int32,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint)
  id: '#ctor(Guid,System.Int32,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint)'
  parent: EventStore.Core.Data.VNodeInfo
  langs:
  - csharp
  - vb
  name: VNodeInfo(Guid, Int32, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint)
  nameWithType: VNodeInfo.VNodeInfo(Guid, Int32, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint)
  fullName: EventStore.Core.Data.VNodeInfo.VNodeInfo(Guid, System.Int32, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Data/VNodeInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Data/VNodeInfo.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public VNodeInfo(Guid instanceId, int debugIndex, IPEndPoint internalTcp, IPEndPoint internalSecureTcp, IPEndPoint externalTcp, IPEndPoint externalSecureTcp, IPEndPoint internalHttp, IPEndPoint externalHttp)
    parameters:
    - id: instanceId
      type: Guid
    - id: debugIndex
      type: System.Int32
    - id: internalTcp
      type: IPEndPoint
    - id: internalSecureTcp
      type: IPEndPoint
    - id: externalTcp
      type: IPEndPoint
    - id: externalSecureTcp
      type: IPEndPoint
    - id: internalHttp
      type: IPEndPoint
    - id: externalHttp
      type: IPEndPoint
    content.vb: Public Sub New(instanceId As Guid, debugIndex As Integer, internalTcp As IPEndPoint, internalSecureTcp As IPEndPoint, externalTcp As IPEndPoint, externalSecureTcp As IPEndPoint, internalHttp As IPEndPoint, externalHttp As IPEndPoint)
  overload: EventStore.Core.Data.VNodeInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Data.VNodeInfo.Is(IPEndPoint)
  commentId: M:EventStore.Core.Data.VNodeInfo.Is(IPEndPoint)
  id: Is(IPEndPoint)
  parent: EventStore.Core.Data.VNodeInfo
  langs:
  - csharp
  - vb
  name: Is(IPEndPoint)
  nameWithType: VNodeInfo.Is(IPEndPoint)
  fullName: EventStore.Core.Data.VNodeInfo.Is(IPEndPoint)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Data/VNodeInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Is
    path: ../EventStore/src/EventStore.Core/Data/VNodeInfo.cs
    startLine: 38
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public bool Is(IPEndPoint endPoint)
    parameters:
    - id: endPoint
      type: IPEndPoint
    return:
      type: System.Boolean
    content.vb: Public Function Is(endPoint As IPEndPoint) As Boolean
  overload: EventStore.Core.Data.VNodeInfo.Is*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Data.VNodeInfo.ToString
  commentId: M:EventStore.Core.Data.VNodeInfo.ToString
  id: ToString
  parent: EventStore.Core.Data.VNodeInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: VNodeInfo.ToString()
  fullName: EventStore.Core.Data.VNodeInfo.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Data/VNodeInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.Core/Data/VNodeInfo.cs
    startLine: 49
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.Core.Data.VNodeInfo.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  isExternal: false
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.VNodeInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<VNodeInfo>()
  nameWithType: ProtobufExtensions.Serialize<VNodeInfo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Data.VNodeInfo>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of VNodeInfo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Data.VNodeInfo)()
  name.vb: Serialize(Of VNodeInfo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<VNodeInfo>
    nameWithType: ProtobufExtensions.Serialize<VNodeInfo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Data.VNodeInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of VNodeInfo)
    nameWithType: ProtobufExtensions.Serialize(Of VNodeInfo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Data.VNodeInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.VNodeInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<VNodeInfo>()
  nameWithType: ProtobufExtensions.SerializeToArray<VNodeInfo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Data.VNodeInfo>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of VNodeInfo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Data.VNodeInfo)()
  name.vb: SerializeToArray(Of VNodeInfo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<VNodeInfo>
    nameWithType: ProtobufExtensions.SerializeToArray<VNodeInfo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Data.VNodeInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of VNodeInfo)
    nameWithType: ProtobufExtensions.SerializeToArray(Of VNodeInfo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Data.VNodeInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: IPEndPoint
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: IPEndPoint
- uid: EventStore.Core.Data.VNodeInfo.#ctor*
  commentId: Overload:EventStore.Core.Data.VNodeInfo.#ctor
  isExternal: false
  name: VNodeInfo
  nameWithType: VNodeInfo.VNodeInfo
  fullName: EventStore.Core.Data.VNodeInfo.VNodeInfo
- uid: EventStore.Core.Data.VNodeInfo.Is*
  commentId: Overload:EventStore.Core.Data.VNodeInfo.Is
  isExternal: false
  name: Is
  nameWithType: VNodeInfo.Is
  fullName: EventStore.Core.Data.VNodeInfo.Is
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Data.VNodeInfo.ToString*
  commentId: Overload:EventStore.Core.Data.VNodeInfo.ToString
  isExternal: false
  name: ToString
  nameWithType: VNodeInfo.ToString
  fullName: EventStore.Core.Data.VNodeInfo.ToString
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

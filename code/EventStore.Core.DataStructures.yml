### YamlMime:ManagedReference
items:
- uid: EventStore.Core.DataStructures
  commentId: N:EventStore.Core.DataStructures
  id: EventStore.Core.DataStructures
  children:
  - EventStore.Core.DataStructures.BoundedQueue`1
  - EventStore.Core.DataStructures.ILRUCache`2
  - EventStore.Core.DataStructures.IStickyLRUCache`2
  - EventStore.Core.DataStructures.LRUCache`2
  - EventStore.Core.DataStructures.NoLRUCache`2
  - EventStore.Core.DataStructures.ObjectPool`1
  - EventStore.Core.DataStructures.ObjectPoolDisposingException
  - EventStore.Core.DataStructures.ObjectPoolMaxLimitReachedException
  - EventStore.Core.DataStructures.PairingHeap`1
  - EventStore.Core.DataStructures.StickyLRUCache`2
  langs:
  - csharp
  - vb
  name: EventStore.Core.DataStructures
  nameWithType: EventStore.Core.DataStructures
  fullName: EventStore.Core.DataStructures
  type: Namespace
  assemblies:
  - EventStore.Core
references:
- uid: EventStore.Core.DataStructures.BoundedQueue`1
  commentId: T:EventStore.Core.DataStructures.BoundedQueue`1
  isExternal: false
  name: BoundedQueue<T>
  nameWithType: BoundedQueue<T>
  fullName: EventStore.Core.DataStructures.BoundedQueue<T>
  nameWithType.vb: BoundedQueue(Of T)
  fullName.vb: EventStore.Core.DataStructures.BoundedQueue(Of T)
  name.vb: BoundedQueue(Of T)
  spec.csharp:
  - uid: EventStore.Core.DataStructures.BoundedQueue`1
    name: BoundedQueue
    nameWithType: BoundedQueue
    fullName: EventStore.Core.DataStructures.BoundedQueue
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.DataStructures.BoundedQueue`1
    name: BoundedQueue
    nameWithType: BoundedQueue
    fullName: EventStore.Core.DataStructures.BoundedQueue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.DataStructures.StickyLRUCache`2
  commentId: T:EventStore.Core.DataStructures.StickyLRUCache`2
  isExternal: false
  name: StickyLRUCache<TKey, TValue>
  nameWithType: StickyLRUCache<TKey, TValue>
  fullName: EventStore.Core.DataStructures.StickyLRUCache<TKey, TValue>
  nameWithType.vb: StickyLRUCache(Of TKey, TValue)
  fullName.vb: EventStore.Core.DataStructures.StickyLRUCache(Of TKey, TValue)
  name.vb: StickyLRUCache(Of TKey, TValue)
  spec.csharp:
  - uid: EventStore.Core.DataStructures.StickyLRUCache`2
    name: StickyLRUCache
    nameWithType: StickyLRUCache
    fullName: EventStore.Core.DataStructures.StickyLRUCache
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.DataStructures.StickyLRUCache`2
    name: StickyLRUCache
    nameWithType: StickyLRUCache
    fullName: EventStore.Core.DataStructures.StickyLRUCache
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.DataStructures.ILRUCache`2
  commentId: T:EventStore.Core.DataStructures.ILRUCache`2
  isExternal: false
  name: ILRUCache<TKey, TValue>
  nameWithType: ILRUCache<TKey, TValue>
  fullName: EventStore.Core.DataStructures.ILRUCache<TKey, TValue>
  nameWithType.vb: ILRUCache(Of TKey, TValue)
  fullName.vb: EventStore.Core.DataStructures.ILRUCache(Of TKey, TValue)
  name.vb: ILRUCache(Of TKey, TValue)
  spec.csharp:
  - uid: EventStore.Core.DataStructures.ILRUCache`2
    name: ILRUCache
    nameWithType: ILRUCache
    fullName: EventStore.Core.DataStructures.ILRUCache
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.DataStructures.ILRUCache`2
    name: ILRUCache
    nameWithType: ILRUCache
    fullName: EventStore.Core.DataStructures.ILRUCache
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.DataStructures.IStickyLRUCache`2
  commentId: T:EventStore.Core.DataStructures.IStickyLRUCache`2
  isExternal: false
  name: IStickyLRUCache<TKey, TValue>
  nameWithType: IStickyLRUCache<TKey, TValue>
  fullName: EventStore.Core.DataStructures.IStickyLRUCache<TKey, TValue>
  nameWithType.vb: IStickyLRUCache(Of TKey, TValue)
  fullName.vb: EventStore.Core.DataStructures.IStickyLRUCache(Of TKey, TValue)
  name.vb: IStickyLRUCache(Of TKey, TValue)
  spec.csharp:
  - uid: EventStore.Core.DataStructures.IStickyLRUCache`2
    name: IStickyLRUCache
    nameWithType: IStickyLRUCache
    fullName: EventStore.Core.DataStructures.IStickyLRUCache
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.DataStructures.IStickyLRUCache`2
    name: IStickyLRUCache
    nameWithType: IStickyLRUCache
    fullName: EventStore.Core.DataStructures.IStickyLRUCache
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.DataStructures.LRUCache`2
  commentId: T:EventStore.Core.DataStructures.LRUCache`2
  isExternal: false
  name: LRUCache<TKey, TValue>
  nameWithType: LRUCache<TKey, TValue>
  fullName: EventStore.Core.DataStructures.LRUCache<TKey, TValue>
  nameWithType.vb: LRUCache(Of TKey, TValue)
  fullName.vb: EventStore.Core.DataStructures.LRUCache(Of TKey, TValue)
  name.vb: LRUCache(Of TKey, TValue)
  spec.csharp:
  - uid: EventStore.Core.DataStructures.LRUCache`2
    name: LRUCache
    nameWithType: LRUCache
    fullName: EventStore.Core.DataStructures.LRUCache
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.DataStructures.LRUCache`2
    name: LRUCache
    nameWithType: LRUCache
    fullName: EventStore.Core.DataStructures.LRUCache
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.DataStructures.NoLRUCache`2
  commentId: T:EventStore.Core.DataStructures.NoLRUCache`2
  isExternal: false
  name: NoLRUCache<TKey, TValue>
  nameWithType: NoLRUCache<TKey, TValue>
  fullName: EventStore.Core.DataStructures.NoLRUCache<TKey, TValue>
  nameWithType.vb: NoLRUCache(Of TKey, TValue)
  fullName.vb: EventStore.Core.DataStructures.NoLRUCache(Of TKey, TValue)
  name.vb: NoLRUCache(Of TKey, TValue)
  spec.csharp:
  - uid: EventStore.Core.DataStructures.NoLRUCache`2
    name: NoLRUCache
    nameWithType: NoLRUCache
    fullName: EventStore.Core.DataStructures.NoLRUCache
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.DataStructures.NoLRUCache`2
    name: NoLRUCache
    nameWithType: NoLRUCache
    fullName: EventStore.Core.DataStructures.NoLRUCache
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.DataStructures.ObjectPoolDisposingException
  commentId: T:EventStore.Core.DataStructures.ObjectPoolDisposingException
  isExternal: false
  name: ObjectPoolDisposingException
  nameWithType: ObjectPoolDisposingException
  fullName: EventStore.Core.DataStructures.ObjectPoolDisposingException
- uid: EventStore.Core.DataStructures.ObjectPoolMaxLimitReachedException
  commentId: T:EventStore.Core.DataStructures.ObjectPoolMaxLimitReachedException
  isExternal: false
  name: ObjectPoolMaxLimitReachedException
  nameWithType: ObjectPoolMaxLimitReachedException
  fullName: EventStore.Core.DataStructures.ObjectPoolMaxLimitReachedException
- uid: EventStore.Core.DataStructures.ObjectPool`1
  commentId: T:EventStore.Core.DataStructures.ObjectPool`1
  isExternal: false
  name: ObjectPool<T>
  nameWithType: ObjectPool<T>
  fullName: EventStore.Core.DataStructures.ObjectPool<T>
  nameWithType.vb: ObjectPool(Of T)
  fullName.vb: EventStore.Core.DataStructures.ObjectPool(Of T)
  name.vb: ObjectPool(Of T)
  spec.csharp:
  - uid: EventStore.Core.DataStructures.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: EventStore.Core.DataStructures.ObjectPool
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.DataStructures.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: EventStore.Core.DataStructures.ObjectPool
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.DataStructures.PairingHeap`1
  commentId: T:EventStore.Core.DataStructures.PairingHeap`1
  isExternal: false
  name: PairingHeap<T>
  nameWithType: PairingHeap<T>
  fullName: EventStore.Core.DataStructures.PairingHeap<T>
  nameWithType.vb: PairingHeap(Of T)
  fullName.vb: EventStore.Core.DataStructures.PairingHeap(Of T)
  name.vb: PairingHeap(Of T)
  spec.csharp:
  - uid: EventStore.Core.DataStructures.PairingHeap`1
    name: PairingHeap
    nameWithType: PairingHeap
    fullName: EventStore.Core.DataStructures.PairingHeap
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.DataStructures.PairingHeap`1
    name: PairingHeap
    nameWithType: PairingHeap
    fullName: EventStore.Core.DataStructures.PairingHeap
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

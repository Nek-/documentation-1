### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope
  commentId: T:EventStore.Core.Helpers.IODispatcherAsync.CancellationScope
  id: IODispatcherAsync.CancellationScope
  parent: EventStore.Core.Helpers
  children:
  - EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Cancel
  - EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Cancelled(Guid)
  - EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Register(Guid)
  langs:
  - csharp
  - vb
  name: IODispatcherAsync.CancellationScope
  nameWithType: IODispatcherAsync.CancellationScope
  fullName: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Helpers/IODispatcherAsync.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CancellationScope
    path: ../EventStore/src/EventStore.Core/Helpers/IODispatcherAsync.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Helpers
  syntax:
    content: 'public class CancellationScope : object'
    content.vb: >-
      Public Class CancellationScope
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Register(Guid)
  commentId: M:EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Register(Guid)
  id: Register(Guid)
  parent: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope
  langs:
  - csharp
  - vb
  name: Register(Guid)
  nameWithType: IODispatcherAsync.CancellationScope.Register(Guid)
  fullName: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Register(Guid)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Helpers/IODispatcherAsync.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Register
    path: ../EventStore/src/EventStore.Core/Helpers/IODispatcherAsync.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Helpers
  syntax:
    content: public Guid Register(Guid id)
    parameters:
    - id: id
      type: Guid
    return:
      type: Guid
    content.vb: Public Function Register(id As Guid) As Guid
  overload: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Register*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Cancelled(Guid)
  commentId: M:EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Cancelled(Guid)
  id: Cancelled(Guid)
  parent: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope
  langs:
  - csharp
  - vb
  name: Cancelled(Guid)
  nameWithType: IODispatcherAsync.CancellationScope.Cancelled(Guid)
  fullName: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Cancelled(Guid)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Helpers/IODispatcherAsync.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Cancelled
    path: ../EventStore/src/EventStore.Core/Helpers/IODispatcherAsync.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Helpers
  syntax:
    content: public bool Cancelled(Guid id)
    parameters:
    - id: id
      type: Guid
    return:
      type: System.Boolean
    content.vb: Public Function Cancelled(id As Guid) As Boolean
  overload: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Cancelled*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Cancel
  commentId: M:EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Cancel
  id: Cancel
  parent: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope
  langs:
  - csharp
  - vb
  name: Cancel()
  nameWithType: IODispatcherAsync.CancellationScope.Cancel()
  fullName: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Cancel()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Helpers/IODispatcherAsync.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Cancel
    path: ../EventStore/src/EventStore.Core/Helpers/IODispatcherAsync.cs
    startLine: 28
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Helpers
  syntax:
    content: public void Cancel()
    content.vb: Public Sub Cancel
  overload: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Cancel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Helpers
  commentId: N:EventStore.Core.Helpers
  isExternal: false
  name: EventStore.Core.Helpers
  nameWithType: EventStore.Core.Helpers
  fullName: EventStore.Core.Helpers
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IODispatcherAsync.CancellationScope>()
  nameWithType: ProtobufExtensions.Serialize<IODispatcherAsync.CancellationScope>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Helpers.IODispatcherAsync.CancellationScope>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IODispatcherAsync.CancellationScope)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Helpers.IODispatcherAsync.CancellationScope)()
  name.vb: Serialize(Of IODispatcherAsync.CancellationScope)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IODispatcherAsync.CancellationScope>
    nameWithType: ProtobufExtensions.Serialize<IODispatcherAsync.CancellationScope>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Helpers.IODispatcherAsync.CancellationScope>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IODispatcherAsync.CancellationScope)
    nameWithType: ProtobufExtensions.Serialize(Of IODispatcherAsync.CancellationScope)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Helpers.IODispatcherAsync.CancellationScope)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IODispatcherAsync.CancellationScope>()
  nameWithType: ProtobufExtensions.SerializeToArray<IODispatcherAsync.CancellationScope>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Helpers.IODispatcherAsync.CancellationScope>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IODispatcherAsync.CancellationScope)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Helpers.IODispatcherAsync.CancellationScope)()
  name.vb: SerializeToArray(Of IODispatcherAsync.CancellationScope)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IODispatcherAsync.CancellationScope>
    nameWithType: ProtobufExtensions.SerializeToArray<IODispatcherAsync.CancellationScope>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Helpers.IODispatcherAsync.CancellationScope>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IODispatcherAsync.CancellationScope)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IODispatcherAsync.CancellationScope)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Helpers.IODispatcherAsync.CancellationScope)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Register*
  commentId: Overload:EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Register
  isExternal: false
  name: Register
  nameWithType: IODispatcherAsync.CancellationScope.Register
  fullName: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Register
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Cancelled*
  commentId: Overload:EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Cancelled
  isExternal: false
  name: Cancelled
  nameWithType: IODispatcherAsync.CancellationScope.Cancelled
  fullName: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Cancelled
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Cancel*
  commentId: Overload:EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Cancel
  isExternal: false
  name: Cancel
  nameWithType: IODispatcherAsync.CancellationScope.Cancel
  fullName: EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.Cancel

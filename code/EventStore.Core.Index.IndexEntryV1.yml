### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Index.IndexEntryV1
  commentId: T:EventStore.Core.Index.IndexEntryV1
  id: IndexEntryV1
  parent: EventStore.Core.Index
  children:
  - EventStore.Core.Index.IndexEntryV1.#ctor(System.UInt32,System.Int32,System.Int64)
  - EventStore.Core.Index.IndexEntryV1.#ctor(System.UInt64,System.Int64)
  - EventStore.Core.Index.IndexEntryV1.Bytes
  - EventStore.Core.Index.IndexEntryV1.CompareTo(EventStore.Core.Index.IndexEntryV1)
  - EventStore.Core.Index.IndexEntryV1.Equals(EventStore.Core.Index.IndexEntryV1)
  - EventStore.Core.Index.IndexEntryV1.Key
  - EventStore.Core.Index.IndexEntryV1.Position
  - EventStore.Core.Index.IndexEntryV1.Stream
  - EventStore.Core.Index.IndexEntryV1.ToString
  - EventStore.Core.Index.IndexEntryV1.Version
  langs:
  - csharp
  - vb
  name: IndexEntryV1
  nameWithType: IndexEntryV1
  fullName: EventStore.Core.Index.IndexEntryV1
  type: Struct
  source:
    remote:
      path: src/EventStore.Core/Index/IndexEntryV1.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IndexEntryV1
    path: ../EventStore/src/EventStore.Core/Index/IndexEntryV1.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: 'public struct IndexEntryV1 : IComparable<IndexEntryV1>, IEquatable<IndexEntryV1>'
    content.vb: >-
      Public Structure IndexEntryV1

          Implements IComparable(Of IndexEntryV1), IEquatable(Of IndexEntryV1)
  implements:
  - IComparable{EventStore.Core.Index.IndexEntryV1}
  - IEquatable{EventStore.Core.Index.IndexEntryV1}
  extensionMethods:
  - EventStore.Core.Index.IndexEntryV1.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Index.IndexEntryV1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Index.IndexEntryV1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.Core.Index.IndexEntryV1.Key
  commentId: F:EventStore.Core.Index.IndexEntryV1.Key
  id: Key
  parent: EventStore.Core.Index.IndexEntryV1
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: IndexEntryV1.Key
  fullName: EventStore.Core.Index.IndexEntryV1.Key
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Index/IndexEntryV1.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Key
    path: ../EventStore/src/EventStore.Core/Index/IndexEntryV1.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public UInt64 Key
    return:
      type: UInt64
    content.vb: Public Key As UInt64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Index.IndexEntryV1.Bytes
  commentId: F:EventStore.Core.Index.IndexEntryV1.Bytes
  id: Bytes
  parent: EventStore.Core.Index.IndexEntryV1
  langs:
  - csharp
  - vb
  name: Bytes
  nameWithType: IndexEntryV1.Bytes
  fullName: EventStore.Core.Index.IndexEntryV1.Bytes
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Index/IndexEntryV1.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Bytes
    path: ../EventStore/src/EventStore.Core/Index/IndexEntryV1.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public byte *Bytes
    return:
      type: System.Byte*
    content.vb: Public Bytes As Byte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Index.IndexEntryV1.Version
  commentId: F:EventStore.Core.Index.IndexEntryV1.Version
  id: Version
  parent: EventStore.Core.Index.IndexEntryV1
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: IndexEntryV1.Version
  fullName: EventStore.Core.Index.IndexEntryV1.Version
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Index/IndexEntryV1.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Version
    path: ../EventStore/src/EventStore.Core/Index/IndexEntryV1.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public Int32 Version
    return:
      type: Int32
    content.vb: Public Version As Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Index.IndexEntryV1.Stream
  commentId: F:EventStore.Core.Index.IndexEntryV1.Stream
  id: Stream
  parent: EventStore.Core.Index.IndexEntryV1
  langs:
  - csharp
  - vb
  name: Stream
  nameWithType: IndexEntryV1.Stream
  fullName: EventStore.Core.Index.IndexEntryV1.Stream
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Index/IndexEntryV1.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Stream
    path: ../EventStore/src/EventStore.Core/Index/IndexEntryV1.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public UInt32 Stream
    return:
      type: UInt32
    content.vb: Public Stream As UInt32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Index.IndexEntryV1.Position
  commentId: F:EventStore.Core.Index.IndexEntryV1.Position
  id: Position
  parent: EventStore.Core.Index.IndexEntryV1
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: IndexEntryV1.Position
  fullName: EventStore.Core.Index.IndexEntryV1.Position
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Index/IndexEntryV1.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Position
    path: ../EventStore/src/EventStore.Core/Index/IndexEntryV1.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public Int64 Position
    return:
      type: Int64
    content.vb: Public Position As Int64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Index.IndexEntryV1.#ctor(System.UInt64,System.Int64)
  commentId: M:EventStore.Core.Index.IndexEntryV1.#ctor(System.UInt64,System.Int64)
  id: '#ctor(System.UInt64,System.Int64)'
  parent: EventStore.Core.Index.IndexEntryV1
  langs:
  - csharp
  - vb
  name: IndexEntryV1(UInt64, Int64)
  nameWithType: IndexEntryV1.IndexEntryV1(UInt64, Int64)
  fullName: EventStore.Core.Index.IndexEntryV1.IndexEntryV1(System.UInt64, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Index/IndexEntryV1.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Index/IndexEntryV1.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public IndexEntryV1(ulong key, long position)
    parameters:
    - id: key
      type: System.UInt64
    - id: position
      type: System.Int64
    content.vb: Public Sub New(key As ULong, position As Long)
  overload: EventStore.Core.Index.IndexEntryV1.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Index.IndexEntryV1.#ctor(System.UInt32,System.Int32,System.Int64)
  commentId: M:EventStore.Core.Index.IndexEntryV1.#ctor(System.UInt32,System.Int32,System.Int64)
  id: '#ctor(System.UInt32,System.Int32,System.Int64)'
  parent: EventStore.Core.Index.IndexEntryV1
  langs:
  - csharp
  - vb
  name: IndexEntryV1(UInt32, Int32, Int64)
  nameWithType: IndexEntryV1.IndexEntryV1(UInt32, Int32, Int64)
  fullName: EventStore.Core.Index.IndexEntryV1.IndexEntryV1(System.UInt32, System.Int32, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Index/IndexEntryV1.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Index/IndexEntryV1.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public IndexEntryV1(uint stream, int version, long position)
    parameters:
    - id: stream
      type: System.UInt32
    - id: version
      type: System.Int32
    - id: position
      type: System.Int64
    content.vb: Public Sub New(stream As UInteger, version As Integer, position As Long)
  overload: EventStore.Core.Index.IndexEntryV1.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Index.IndexEntryV1.CompareTo(EventStore.Core.Index.IndexEntryV1)
  commentId: M:EventStore.Core.Index.IndexEntryV1.CompareTo(EventStore.Core.Index.IndexEntryV1)
  id: CompareTo(EventStore.Core.Index.IndexEntryV1)
  parent: EventStore.Core.Index.IndexEntryV1
  langs:
  - csharp
  - vb
  name: CompareTo(IndexEntryV1)
  nameWithType: IndexEntryV1.CompareTo(IndexEntryV1)
  fullName: EventStore.Core.Index.IndexEntryV1.CompareTo(EventStore.Core.Index.IndexEntryV1)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Index/IndexEntryV1.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CompareTo
    path: ../EventStore/src/EventStore.Core/Index/IndexEntryV1.cs
    startLine: 26
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public int CompareTo(IndexEntryV1 other)
    parameters:
    - id: other
      type: EventStore.Core.Index.IndexEntryV1
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As IndexEntryV1) As Integer
  overload: EventStore.Core.Index.IndexEntryV1.CompareTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Index.IndexEntryV1.Equals(EventStore.Core.Index.IndexEntryV1)
  commentId: M:EventStore.Core.Index.IndexEntryV1.Equals(EventStore.Core.Index.IndexEntryV1)
  id: Equals(EventStore.Core.Index.IndexEntryV1)
  parent: EventStore.Core.Index.IndexEntryV1
  langs:
  - csharp
  - vb
  name: Equals(IndexEntryV1)
  nameWithType: IndexEntryV1.Equals(IndexEntryV1)
  fullName: EventStore.Core.Index.IndexEntryV1.Equals(EventStore.Core.Index.IndexEntryV1)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Index/IndexEntryV1.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Equals
    path: ../EventStore/src/EventStore.Core/Index/IndexEntryV1.cs
    startLine: 34
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public bool Equals(IndexEntryV1 other)
    parameters:
    - id: other
      type: EventStore.Core.Index.IndexEntryV1
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As IndexEntryV1) As Boolean
  overload: EventStore.Core.Index.IndexEntryV1.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Index.IndexEntryV1.ToString
  commentId: M:EventStore.Core.Index.IndexEntryV1.ToString
  id: ToString
  parent: EventStore.Core.Index.IndexEntryV1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: IndexEntryV1.ToString()
  fullName: EventStore.Core.Index.IndexEntryV1.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Index/IndexEntryV1.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.Core/Index/IndexEntryV1.cs
    startLine: 39
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.Core.Index.IndexEntryV1.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.Index
  commentId: N:EventStore.Core.Index
  isExternal: false
  name: EventStore.Core.Index
  nameWithType: EventStore.Core.Index
  fullName: EventStore.Core.Index
- uid: IComparable{EventStore.Core.Index.IndexEntryV1}
  commentId: '!:IComparable{EventStore.Core.Index.IndexEntryV1}'
  definition: IComparable`1
  name: IComparable<IndexEntryV1>
  nameWithType: IComparable<IndexEntryV1>
  fullName: IComparable<EventStore.Core.Index.IndexEntryV1>
  nameWithType.vb: IComparable(Of IndexEntryV1)
  fullName.vb: IComparable(Of EventStore.Core.Index.IndexEntryV1)
  name.vb: IComparable(Of IndexEntryV1)
  spec.csharp:
  - uid: IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Index.IndexEntryV1
    name: IndexEntryV1
    nameWithType: IndexEntryV1
    fullName: EventStore.Core.Index.IndexEntryV1
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Index.IndexEntryV1
    name: IndexEntryV1
    nameWithType: IndexEntryV1
    fullName: EventStore.Core.Index.IndexEntryV1
  - name: )
    nameWithType: )
    fullName: )
- uid: IEquatable{EventStore.Core.Index.IndexEntryV1}
  commentId: '!:IEquatable{EventStore.Core.Index.IndexEntryV1}'
  definition: IEquatable`1
  name: IEquatable<IndexEntryV1>
  nameWithType: IEquatable<IndexEntryV1>
  fullName: IEquatable<EventStore.Core.Index.IndexEntryV1>
  nameWithType.vb: IEquatable(Of IndexEntryV1)
  fullName.vb: IEquatable(Of EventStore.Core.Index.IndexEntryV1)
  name.vb: IEquatable(Of IndexEntryV1)
  spec.csharp:
  - uid: IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Index.IndexEntryV1
    name: IndexEntryV1
    nameWithType: IndexEntryV1
    fullName: EventStore.Core.Index.IndexEntryV1
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Index.IndexEntryV1
    name: IndexEntryV1
    nameWithType: IndexEntryV1
    fullName: EventStore.Core.Index.IndexEntryV1
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Index.IndexEntryV1.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<IndexEntryV1>()
  nameWithType: EnumExtensions.EnumValueName<IndexEntryV1>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Index.IndexEntryV1>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of IndexEntryV1)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Index.IndexEntryV1)()
  name.vb: EnumValueName(Of IndexEntryV1)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<IndexEntryV1>
    nameWithType: EnumExtensions.EnumValueName<IndexEntryV1>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Index.IndexEntryV1>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of IndexEntryV1)
    nameWithType: EnumExtensions.EnumValueName(Of IndexEntryV1)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Index.IndexEntryV1)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Index.IndexEntryV1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IndexEntryV1>()
  nameWithType: ProtobufExtensions.Serialize<IndexEntryV1>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Index.IndexEntryV1>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IndexEntryV1)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Index.IndexEntryV1)()
  name.vb: Serialize(Of IndexEntryV1)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IndexEntryV1>
    nameWithType: ProtobufExtensions.Serialize<IndexEntryV1>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Index.IndexEntryV1>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IndexEntryV1)
    nameWithType: ProtobufExtensions.Serialize(Of IndexEntryV1)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Index.IndexEntryV1)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Index.IndexEntryV1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IndexEntryV1>()
  nameWithType: ProtobufExtensions.SerializeToArray<IndexEntryV1>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Index.IndexEntryV1>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IndexEntryV1)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Index.IndexEntryV1)()
  name.vb: SerializeToArray(Of IndexEntryV1)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IndexEntryV1>
    nameWithType: ProtobufExtensions.SerializeToArray<IndexEntryV1>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Index.IndexEntryV1>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IndexEntryV1)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IndexEntryV1)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Index.IndexEntryV1)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: IComparable`1
  isExternal: true
  name: IComparable<>
  nameWithType: IComparable<>
  fullName: IComparable<>
  nameWithType.vb: IComparable(Of )
  fullName.vb: IComparable(Of )
  name.vb: IComparable(Of )
  spec.csharp:
  - uid: IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: IEquatable`1
  isExternal: true
  name: IEquatable<>
  nameWithType: IEquatable<>
  fullName: IEquatable<>
  nameWithType.vb: IEquatable(Of )
  fullName.vb: IEquatable(Of )
  name.vb: IEquatable(Of )
  spec.csharp:
  - uid: IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  isExternal: false
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  isExternal: false
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  isExternal: false
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: UInt64
- uid: System.Byte*
  name: Byte*
  nameWithType: Byte*
  fullName: System.Byte*
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
- uid: Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: Int32
- uid: UInt32
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: UInt32
- uid: Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: Int64
- uid: EventStore.Core.Index.IndexEntryV1.#ctor*
  commentId: Overload:EventStore.Core.Index.IndexEntryV1.#ctor
  isExternal: false
  name: IndexEntryV1
  nameWithType: IndexEntryV1.IndexEntryV1
  fullName: EventStore.Core.Index.IndexEntryV1.IndexEntryV1
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.UInt32
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Index.IndexEntryV1.CompareTo*
  commentId: Overload:EventStore.Core.Index.IndexEntryV1.CompareTo
  isExternal: false
  name: CompareTo
  nameWithType: IndexEntryV1.CompareTo
  fullName: EventStore.Core.Index.IndexEntryV1.CompareTo
- uid: EventStore.Core.Index.IndexEntryV1
  commentId: T:EventStore.Core.Index.IndexEntryV1
  parent: EventStore.Core.Index
  isExternal: false
  name: IndexEntryV1
  nameWithType: IndexEntryV1
  fullName: EventStore.Core.Index.IndexEntryV1
- uid: EventStore.Core.Index.IndexEntryV1.Equals*
  commentId: Overload:EventStore.Core.Index.IndexEntryV1.Equals
  isExternal: false
  name: Equals
  nameWithType: IndexEntryV1.Equals
  fullName: EventStore.Core.Index.IndexEntryV1.Equals
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Index.IndexEntryV1.ToString*
  commentId: Overload:EventStore.Core.Index.IndexEntryV1.ToString
  isExternal: false
  name: ToString
  nameWithType: IndexEntryV1.ToString
  fullName: EventStore.Core.Index.IndexEntryV1.ToString
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

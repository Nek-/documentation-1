### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  commentId: T:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  id: ClientMessage.CreatePersistentSubscription
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.#ctor(Guid,Guid,EventStore.Core.Messaging.IEnvelope,System.String,System.String,System.Boolean,System.Int64,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,IPrincipal,System.String,System.String)
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.BufferSize
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.CheckPointAfterMilliseconds
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.EventStreamId
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.GroupName
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.LiveBufferSize
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MaxCheckPointCount
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MaxRetryCount
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MaxSubscriberCount
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MessageTimeoutMilliseconds
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MinCheckPointCount
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MsgTypeId
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.NamedConsumerStrategy
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.ReadBatchSize
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.RecordStatistics
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.ResolveLinkTos
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.StartFrom
  langs:
  - csharp
  - vb
  name: ClientMessage.CreatePersistentSubscription
  nameWithType: ClientMessage.CreatePersistentSubscription
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreatePersistentSubscription
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 874
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class CreatePersistentSubscription : ClientMessage.ReadRequestMessage'
    content.vb: >-
      Public Class CreatePersistentSubscription
          Inherits ClientMessage.ReadRequestMessage
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  inheritedMembers:
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage.InternalCorrId
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage.CorrelationId
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Envelope
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage.User
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Expires
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MsgTypeId
  commentId: P:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: ClientMessage.CreatePersistentSubscription.MsgTypeId
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 877
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.MsgTypeId
  overload: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.StartFrom
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.StartFrom
  id: StartFrom
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: StartFrom
  nameWithType: ClientMessage.CreatePersistentSubscription.StartFrom
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.StartFrom
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StartFrom
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 879
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly long StartFrom
    return:
      type: System.Int64
    content.vb: Public ReadOnly StartFrom As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MessageTimeoutMilliseconds
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MessageTimeoutMilliseconds
  id: MessageTimeoutMilliseconds
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: MessageTimeoutMilliseconds
  nameWithType: ClientMessage.CreatePersistentSubscription.MessageTimeoutMilliseconds
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MessageTimeoutMilliseconds
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MessageTimeoutMilliseconds
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 880
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int MessageTimeoutMilliseconds
    return:
      type: System.Int32
    content.vb: Public ReadOnly MessageTimeoutMilliseconds As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.RecordStatistics
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.RecordStatistics
  id: RecordStatistics
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: RecordStatistics
  nameWithType: ClientMessage.CreatePersistentSubscription.RecordStatistics
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.RecordStatistics
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RecordStatistics
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 881
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly bool RecordStatistics
    return:
      type: System.Boolean
    content.vb: Public ReadOnly RecordStatistics As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.ResolveLinkTos
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.ResolveLinkTos
  id: ResolveLinkTos
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: ResolveLinkTos
  nameWithType: ClientMessage.CreatePersistentSubscription.ResolveLinkTos
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.ResolveLinkTos
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ResolveLinkTos
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 883
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly bool ResolveLinkTos
    return:
      type: System.Boolean
    content.vb: Public ReadOnly ResolveLinkTos As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MaxRetryCount
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MaxRetryCount
  id: MaxRetryCount
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: MaxRetryCount
  nameWithType: ClientMessage.CreatePersistentSubscription.MaxRetryCount
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MaxRetryCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MaxRetryCount
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 884
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int MaxRetryCount
    return:
      type: System.Int32
    content.vb: Public ReadOnly MaxRetryCount As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.BufferSize
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.BufferSize
  id: BufferSize
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: BufferSize
  nameWithType: ClientMessage.CreatePersistentSubscription.BufferSize
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.BufferSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: BufferSize
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 885
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int BufferSize
    return:
      type: System.Int32
    content.vb: Public ReadOnly BufferSize As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.LiveBufferSize
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.LiveBufferSize
  id: LiveBufferSize
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: LiveBufferSize
  nameWithType: ClientMessage.CreatePersistentSubscription.LiveBufferSize
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.LiveBufferSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: LiveBufferSize
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 886
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int LiveBufferSize
    return:
      type: System.Int32
    content.vb: Public ReadOnly LiveBufferSize As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.ReadBatchSize
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.ReadBatchSize
  id: ReadBatchSize
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: ReadBatchSize
  nameWithType: ClientMessage.CreatePersistentSubscription.ReadBatchSize
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.ReadBatchSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadBatchSize
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 887
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int ReadBatchSize
    return:
      type: System.Int32
    content.vb: Public ReadOnly ReadBatchSize As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.GroupName
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.GroupName
  id: GroupName
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: GroupName
  nameWithType: ClientMessage.CreatePersistentSubscription.GroupName
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.GroupName
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GroupName
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 889
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string GroupName
    return:
      type: System.String
    content.vb: Public ReadOnly GroupName As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.EventStreamId
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.EventStreamId
  id: EventStreamId
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: EventStreamId
  nameWithType: ClientMessage.CreatePersistentSubscription.EventStreamId
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.EventStreamId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EventStreamId
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 890
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string EventStreamId
    return:
      type: System.String
    content.vb: Public ReadOnly EventStreamId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MaxSubscriberCount
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MaxSubscriberCount
  id: MaxSubscriberCount
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: MaxSubscriberCount
  nameWithType: ClientMessage.CreatePersistentSubscription.MaxSubscriberCount
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MaxSubscriberCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MaxSubscriberCount
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 891
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int MaxSubscriberCount
    return:
      type: System.Int32
    content.vb: Public MaxSubscriberCount As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.NamedConsumerStrategy
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.NamedConsumerStrategy
  id: NamedConsumerStrategy
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: NamedConsumerStrategy
  nameWithType: ClientMessage.CreatePersistentSubscription.NamedConsumerStrategy
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.NamedConsumerStrategy
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: NamedConsumerStrategy
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 892
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string NamedConsumerStrategy
    return:
      type: System.String
    content.vb: Public NamedConsumerStrategy As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MaxCheckPointCount
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MaxCheckPointCount
  id: MaxCheckPointCount
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: MaxCheckPointCount
  nameWithType: ClientMessage.CreatePersistentSubscription.MaxCheckPointCount
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MaxCheckPointCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MaxCheckPointCount
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 893
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int MaxCheckPointCount
    return:
      type: System.Int32
    content.vb: Public MaxCheckPointCount As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MinCheckPointCount
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MinCheckPointCount
  id: MinCheckPointCount
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: MinCheckPointCount
  nameWithType: ClientMessage.CreatePersistentSubscription.MinCheckPointCount
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MinCheckPointCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MinCheckPointCount
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 894
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int MinCheckPointCount
    return:
      type: System.Int32
    content.vb: Public MinCheckPointCount As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.CheckPointAfterMilliseconds
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.CheckPointAfterMilliseconds
  id: CheckPointAfterMilliseconds
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: CheckPointAfterMilliseconds
  nameWithType: ClientMessage.CreatePersistentSubscription.CheckPointAfterMilliseconds
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.CheckPointAfterMilliseconds
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CheckPointAfterMilliseconds
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 895
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int CheckPointAfterMilliseconds
    return:
      type: System.Int32
    content.vb: Public CheckPointAfterMilliseconds As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.#ctor(Guid,Guid,EventStore.Core.Messaging.IEnvelope,System.String,System.String,System.Boolean,System.Int64,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,IPrincipal,System.String,System.String)
  commentId: M:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.#ctor(Guid,Guid,EventStore.Core.Messaging.IEnvelope,System.String,System.String,System.Boolean,System.Int64,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,IPrincipal,System.String,System.String)
  id: '#ctor(Guid,Guid,EventStore.Core.Messaging.IEnvelope,System.String,System.String,System.Boolean,System.Int64,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,IPrincipal,System.String,System.String)'
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: CreatePersistentSubscription(Guid, Guid, IEnvelope, String, String, Boolean, Int64, Int32, Boolean, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, String, IPrincipal, String, String)
  nameWithType: ClientMessage.CreatePersistentSubscription.CreatePersistentSubscription(Guid, Guid, IEnvelope, String, String, Boolean, Int64, Int32, Boolean, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, String, IPrincipal, String, String)
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.CreatePersistentSubscription(Guid, Guid, EventStore.Core.Messaging.IEnvelope, System.String, System.String, System.Boolean, System.Int64, System.Int32, System.Boolean, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.String, IPrincipal, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 897
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public CreatePersistentSubscription(Guid internalCorrId, Guid correlationId, IEnvelope envelope, string eventStreamId, string groupName, bool resolveLinkTos, long startFrom, int messageTimeoutMilliseconds, bool recordStatistics, int maxRetryCount, int bufferSize, int liveBufferSize, int readbatchSize, int checkPointAfterMilliseconds, int minCheckPointCount, int maxCheckPointCount, int maxSubscriberCount, string namedConsumerStrategy, IPrincipal user, string username, string password)
    parameters:
    - id: internalCorrId
      type: Guid
    - id: correlationId
      type: Guid
    - id: envelope
      type: EventStore.Core.Messaging.IEnvelope
    - id: eventStreamId
      type: System.String
    - id: groupName
      type: System.String
    - id: resolveLinkTos
      type: System.Boolean
    - id: startFrom
      type: System.Int64
    - id: messageTimeoutMilliseconds
      type: System.Int32
    - id: recordStatistics
      type: System.Boolean
    - id: maxRetryCount
      type: System.Int32
    - id: bufferSize
      type: System.Int32
    - id: liveBufferSize
      type: System.Int32
    - id: readbatchSize
      type: System.Int32
    - id: checkPointAfterMilliseconds
      type: System.Int32
    - id: minCheckPointCount
      type: System.Int32
    - id: maxCheckPointCount
      type: System.Int32
    - id: maxSubscriberCount
      type: System.Int32
    - id: namedConsumerStrategy
      type: System.String
    - id: user
      type: IPrincipal
    - id: username
      type: System.String
    - id: password
      type: System.String
    content.vb: Public Sub New(internalCorrId As Guid, correlationId As Guid, envelope As IEnvelope, eventStreamId As String, groupName As String, resolveLinkTos As Boolean, startFrom As Long, messageTimeoutMilliseconds As Integer, recordStatistics As Boolean, maxRetryCount As Integer, bufferSize As Integer, liveBufferSize As Integer, readbatchSize As Integer, checkPointAfterMilliseconds As Integer, minCheckPointCount As Integer, maxCheckPointCount As Integer, maxSubscriberCount As Integer, namedConsumerStrategy As String, user As IPrincipal, username As String, password As String)
  overload: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  commentId: T:EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  parent: EventStore.Core.Messages
  isExternal: false
  name: ClientMessage.ReadRequestMessage
  nameWithType: ClientMessage.ReadRequestMessage
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.InternalCorrId
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.InternalCorrId
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  isExternal: false
  name: InternalCorrId
  nameWithType: ClientMessage.ReadRequestMessage.InternalCorrId
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.InternalCorrId
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.CorrelationId
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.CorrelationId
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  isExternal: false
  name: CorrelationId
  nameWithType: ClientMessage.ReadRequestMessage.CorrelationId
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.CorrelationId
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Envelope
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Envelope
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  isExternal: false
  name: Envelope
  nameWithType: ClientMessage.ReadRequestMessage.Envelope
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Envelope
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.User
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.User
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  isExternal: false
  name: User
  nameWithType: ClientMessage.ReadRequestMessage.User
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.User
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Expires
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Expires
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  isExternal: false
  name: Expires
  nameWithType: ClientMessage.ReadRequestMessage.Expires
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Expires
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ClientMessage.CreatePersistentSubscription>()
  nameWithType: ProtobufExtensions.Serialize<ClientMessage.CreatePersistentSubscription>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ClientMessage.CreatePersistentSubscription)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription)()
  name.vb: Serialize(Of ClientMessage.CreatePersistentSubscription)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ClientMessage.CreatePersistentSubscription>
    nameWithType: ProtobufExtensions.Serialize<ClientMessage.CreatePersistentSubscription>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ClientMessage.CreatePersistentSubscription)
    nameWithType: ProtobufExtensions.Serialize(Of ClientMessage.CreatePersistentSubscription)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ClientMessage.CreatePersistentSubscription>()
  nameWithType: ProtobufExtensions.SerializeToArray<ClientMessage.CreatePersistentSubscription>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ClientMessage.CreatePersistentSubscription)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription)()
  name.vb: SerializeToArray(Of ClientMessage.CreatePersistentSubscription)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ClientMessage.CreatePersistentSubscription>
    nameWithType: ProtobufExtensions.SerializeToArray<ClientMessage.CreatePersistentSubscription>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ClientMessage.CreatePersistentSubscription)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ClientMessage.CreatePersistentSubscription)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.MsgTypeId
  commentId: P:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.MsgTypeId
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  isExternal: false
  name: MsgTypeId
  nameWithType: ClientMessage.ReadRequestMessage.MsgTypeId
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.MsgTypeId
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MsgTypeId*
  commentId: Overload:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MsgTypeId
  isExternal: false
  name: MsgTypeId
  nameWithType: ClientMessage.CreatePersistentSubscription.MsgTypeId
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.MsgTypeId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.#ctor*
  commentId: Overload:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.#ctor
  isExternal: false
  name: CreatePersistentSubscription
  nameWithType: ClientMessage.CreatePersistentSubscription.CreatePersistentSubscription
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.CreatePersistentSubscription
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Core.Messaging.IEnvelope
  commentId: T:EventStore.Core.Messaging.IEnvelope
  parent: EventStore.Core.Messaging
  isExternal: false
  name: IEnvelope
  nameWithType: IEnvelope
  fullName: EventStore.Core.Messaging.IEnvelope
- uid: IPrincipal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: IPrincipal

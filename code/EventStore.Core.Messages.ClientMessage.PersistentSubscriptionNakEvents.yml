### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents
  commentId: T:EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents
  id: ClientMessage.PersistentSubscriptionNakEvents
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.#ctor(Guid,Guid,EventStore.Core.Messaging.IEnvelope,System.String,Guid[],IPrincipal)
  - EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.MsgTypeId
  - EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.ProcessedEventIds
  - EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.SubscriptionId
  langs:
  - csharp
  - vb
  name: ClientMessage.PersistentSubscriptionNakEvents
  nameWithType: ClientMessage.PersistentSubscriptionNakEvents
  fullName: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PersistentSubscriptionNakEvents
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1171
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class PersistentSubscriptionNakEvents : ClientMessage.ReadRequestMessage'
    content.vb: >-
      Public Class PersistentSubscriptionNakEvents

          Inherits ClientMessage.ReadRequestMessage
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  inheritedMembers:
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage.InternalCorrId
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage.CorrelationId
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Envelope
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage.User
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Expires
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.MsgTypeId
  commentId: P:EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: ClientMessage.PersistentSubscriptionNakEvents.MsgTypeId
  fullName: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1174
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.MsgTypeId
  overload: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.SubscriptionId
  commentId: F:EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.SubscriptionId
  id: SubscriptionId
  parent: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: ClientMessage.PersistentSubscriptionNakEvents.SubscriptionId
  fullName: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.SubscriptionId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SubscriptionId
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1176
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string SubscriptionId
    return:
      type: System.String
    content.vb: Public ReadOnly SubscriptionId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.ProcessedEventIds
  commentId: F:EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.ProcessedEventIds
  id: ProcessedEventIds
  parent: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents
  langs:
  - csharp
  - vb
  name: ProcessedEventIds
  nameWithType: ClientMessage.PersistentSubscriptionNakEvents.ProcessedEventIds
  fullName: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.ProcessedEventIds
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ProcessedEventIds
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1177
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Guid[] ProcessedEventIds
    return:
      type: Guid[]
    content.vb: Public ReadOnly ProcessedEventIds As Guid()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.#ctor(Guid,Guid,EventStore.Core.Messaging.IEnvelope,System.String,Guid[],IPrincipal)
  commentId: M:EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.#ctor(Guid,Guid,EventStore.Core.Messaging.IEnvelope,System.String,Guid[],IPrincipal)
  id: '#ctor(Guid,Guid,EventStore.Core.Messaging.IEnvelope,System.String,Guid[],IPrincipal)'
  parent: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionNakEvents(Guid, Guid, IEnvelope, String, Guid[], IPrincipal)
  nameWithType: ClientMessage.PersistentSubscriptionNakEvents.PersistentSubscriptionNakEvents(Guid, Guid, IEnvelope, String, Guid[], IPrincipal)
  fullName: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.PersistentSubscriptionNakEvents(Guid, Guid, EventStore.Core.Messaging.IEnvelope, System.String, Guid[], IPrincipal)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1179
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public PersistentSubscriptionNakEvents(Guid internalCorrId, Guid correlationId, IEnvelope envelope, string subscriptionId, Guid[] processedEventIds, IPrincipal user)
    parameters:
    - id: internalCorrId
      type: Guid
    - id: correlationId
      type: Guid
    - id: envelope
      type: EventStore.Core.Messaging.IEnvelope
    - id: subscriptionId
      type: System.String
    - id: processedEventIds
      type: Guid[]
    - id: user
      type: IPrincipal
    content.vb: Public Sub New(internalCorrId As Guid, correlationId As Guid, envelope As IEnvelope, subscriptionId As String, processedEventIds As Guid(), user As IPrincipal)
  overload: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.#ctor*
  nameWithType.vb: ClientMessage.PersistentSubscriptionNakEvents.PersistentSubscriptionNakEvents(Guid, Guid, IEnvelope, String, Guid(), IPrincipal)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.PersistentSubscriptionNakEvents(Guid, Guid, EventStore.Core.Messaging.IEnvelope, System.String, Guid(), IPrincipal)
  name.vb: PersistentSubscriptionNakEvents(Guid, Guid, IEnvelope, String, Guid(), IPrincipal)
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  commentId: T:EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  parent: EventStore.Core.Messages
  isExternal: false
  name: ClientMessage.ReadRequestMessage
  nameWithType: ClientMessage.ReadRequestMessage
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.InternalCorrId
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.InternalCorrId
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  isExternal: false
  name: InternalCorrId
  nameWithType: ClientMessage.ReadRequestMessage.InternalCorrId
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.InternalCorrId
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.CorrelationId
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.CorrelationId
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  isExternal: false
  name: CorrelationId
  nameWithType: ClientMessage.ReadRequestMessage.CorrelationId
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.CorrelationId
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Envelope
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Envelope
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  isExternal: false
  name: Envelope
  nameWithType: ClientMessage.ReadRequestMessage.Envelope
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Envelope
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.User
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.User
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  isExternal: false
  name: User
  nameWithType: ClientMessage.ReadRequestMessage.User
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.User
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Expires
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Expires
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  isExternal: false
  name: Expires
  nameWithType: ClientMessage.ReadRequestMessage.Expires
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Expires
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ClientMessage.PersistentSubscriptionNakEvents>()
  nameWithType: ProtobufExtensions.Serialize<ClientMessage.PersistentSubscriptionNakEvents>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ClientMessage.PersistentSubscriptionNakEvents)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents)()
  name.vb: Serialize(Of ClientMessage.PersistentSubscriptionNakEvents)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ClientMessage.PersistentSubscriptionNakEvents>
    nameWithType: ProtobufExtensions.Serialize<ClientMessage.PersistentSubscriptionNakEvents>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ClientMessage.PersistentSubscriptionNakEvents)
    nameWithType: ProtobufExtensions.Serialize(Of ClientMessage.PersistentSubscriptionNakEvents)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ClientMessage.PersistentSubscriptionNakEvents>()
  nameWithType: ProtobufExtensions.SerializeToArray<ClientMessage.PersistentSubscriptionNakEvents>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ClientMessage.PersistentSubscriptionNakEvents)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents)()
  name.vb: SerializeToArray(Of ClientMessage.PersistentSubscriptionNakEvents)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ClientMessage.PersistentSubscriptionNakEvents>
    nameWithType: ProtobufExtensions.SerializeToArray<ClientMessage.PersistentSubscriptionNakEvents>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ClientMessage.PersistentSubscriptionNakEvents)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ClientMessage.PersistentSubscriptionNakEvents)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.MsgTypeId
  commentId: P:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.MsgTypeId
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  isExternal: false
  name: MsgTypeId
  nameWithType: ClientMessage.ReadRequestMessage.MsgTypeId
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.MsgTypeId
- uid: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.MsgTypeId*
  commentId: Overload:EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.MsgTypeId
  isExternal: false
  name: MsgTypeId
  nameWithType: ClientMessage.PersistentSubscriptionNakEvents.MsgTypeId
  fullName: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.MsgTypeId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Guid[]
  name: Guid[]
  nameWithType: Guid[]
  fullName: Guid[]
  nameWithType.vb: Guid()
  fullName.vb: Guid()
  name.vb: Guid()
  spec.csharp:
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.#ctor*
  commentId: Overload:EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.#ctor
  isExternal: false
  name: PersistentSubscriptionNakEvents
  nameWithType: ClientMessage.PersistentSubscriptionNakEvents.PersistentSubscriptionNakEvents
  fullName: EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.PersistentSubscriptionNakEvents
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Core.Messaging.IEnvelope
  commentId: T:EventStore.Core.Messaging.IEnvelope
  parent: EventStore.Core.Messaging
  isExternal: false
  name: IEnvelope
  nameWithType: IEnvelope
  fullName: EventStore.Core.Messaging.IEnvelope
- uid: IPrincipal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: IPrincipal

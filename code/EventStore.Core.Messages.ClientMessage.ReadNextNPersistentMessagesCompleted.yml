### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted
  commentId: T:EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted
  id: ClientMessage.ReadNextNPersistentMessagesCompleted
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.#ctor(Guid,EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult,System.String,EventStore.Core.Data.ResolvedEvent[])
  - EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.CorrelationId
  - EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.Events
  - EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.MsgTypeId
  - EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.Reason
  - EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.Result
  langs:
  - csharp
  - vb
  name: ClientMessage.ReadNextNPersistentMessagesCompleted
  nameWithType: ClientMessage.ReadNextNPersistentMessagesCompleted
  fullName: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadNextNPersistentMessagesCompleted
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1046
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class ReadNextNPersistentMessagesCompleted : ClientMessage.ReadResponseMessage'
    content.vb: >-
      Public Class ReadNextNPersistentMessagesCompleted
          Inherits ClientMessage.ReadResponseMessage
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  - EventStore.Core.Messages.ClientMessage.ReadResponseMessage
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.MsgTypeId
  commentId: P:EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: ClientMessage.ReadNextNPersistentMessagesCompleted.MsgTypeId
  fullName: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1049
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messages.ClientMessage.ReadResponseMessage.MsgTypeId
  overload: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.CorrelationId
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.CorrelationId
  id: CorrelationId
  parent: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: ClientMessage.ReadNextNPersistentMessagesCompleted.CorrelationId
  fullName: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.CorrelationId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CorrelationId
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1050
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Guid CorrelationId
    return:
      type: Guid
    content.vb: Public ReadOnly CorrelationId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.Reason
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.Reason
  id: Reason
  parent: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: ClientMessage.ReadNextNPersistentMessagesCompleted.Reason
  fullName: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.Reason
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Reason
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1051
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string Reason
    return:
      type: System.String
    content.vb: Public ReadOnly Reason As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.Result
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.Result
  id: Result
  parent: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: ClientMessage.ReadNextNPersistentMessagesCompleted.Result
  fullName: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.Result
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Result
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1052
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult Result
    return:
      type: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult
    content.vb: Public ReadOnly Result As ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.Events
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.Events
  id: Events
  parent: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: ClientMessage.ReadNextNPersistentMessagesCompleted.Events
  fullName: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.Events
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Events
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1053
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly ResolvedEvent[] Events
    return:
      type: EventStore.Core.Data.ResolvedEvent[]
    content.vb: Public ReadOnly Events As ResolvedEvent()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.#ctor(Guid,EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult,System.String,EventStore.Core.Data.ResolvedEvent[])
  commentId: M:EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.#ctor(Guid,EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult,System.String,EventStore.Core.Data.ResolvedEvent[])
  id: '#ctor(Guid,EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult,System.String,EventStore.Core.Data.ResolvedEvent[])'
  parent: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted
  langs:
  - csharp
  - vb
  name: ReadNextNPersistentMessagesCompleted(Guid, ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult, String, ResolvedEvent[])
  nameWithType: ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesCompleted(Guid, ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult, String, ResolvedEvent[])
  fullName: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesCompleted(Guid, EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult, System.String, EventStore.Core.Data.ResolvedEvent[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1055
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public ReadNextNPersistentMessagesCompleted(Guid correlationId, ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult result, string reason, ResolvedEvent[] events)
    parameters:
    - id: correlationId
      type: Guid
    - id: result
      type: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult
    - id: reason
      type: System.String
    - id: events
      type: EventStore.Core.Data.ResolvedEvent[]
    content.vb: Public Sub New(correlationId As Guid, result As ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult, reason As String, events As ResolvedEvent())
  overload: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.#ctor*
  nameWithType.vb: ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesCompleted(Guid, ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult, String, ResolvedEvent())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesCompleted(Guid, EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult, System.String, EventStore.Core.Data.ResolvedEvent())
  name.vb: ReadNextNPersistentMessagesCompleted(Guid, ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult, String, ResolvedEvent())
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messages.ClientMessage.ReadResponseMessage
  commentId: T:EventStore.Core.Messages.ClientMessage.ReadResponseMessage
  parent: EventStore.Core.Messages
  isExternal: false
  name: ClientMessage.ReadResponseMessage
  nameWithType: ClientMessage.ReadResponseMessage
  fullName: EventStore.Core.Messages.ClientMessage.ReadResponseMessage
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ClientMessage.ReadNextNPersistentMessagesCompleted>()
  nameWithType: ProtobufExtensions.Serialize<ClientMessage.ReadNextNPersistentMessagesCompleted>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ClientMessage.ReadNextNPersistentMessagesCompleted)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted)()
  name.vb: Serialize(Of ClientMessage.ReadNextNPersistentMessagesCompleted)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ClientMessage.ReadNextNPersistentMessagesCompleted>
    nameWithType: ProtobufExtensions.Serialize<ClientMessage.ReadNextNPersistentMessagesCompleted>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ClientMessage.ReadNextNPersistentMessagesCompleted)
    nameWithType: ProtobufExtensions.Serialize(Of ClientMessage.ReadNextNPersistentMessagesCompleted)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ClientMessage.ReadNextNPersistentMessagesCompleted>()
  nameWithType: ProtobufExtensions.SerializeToArray<ClientMessage.ReadNextNPersistentMessagesCompleted>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ClientMessage.ReadNextNPersistentMessagesCompleted)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted)()
  name.vb: SerializeToArray(Of ClientMessage.ReadNextNPersistentMessagesCompleted)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ClientMessage.ReadNextNPersistentMessagesCompleted>
    nameWithType: ProtobufExtensions.SerializeToArray<ClientMessage.ReadNextNPersistentMessagesCompleted>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ClientMessage.ReadNextNPersistentMessagesCompleted)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ClientMessage.ReadNextNPersistentMessagesCompleted)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.ClientMessage.ReadResponseMessage.MsgTypeId
  commentId: P:EventStore.Core.Messages.ClientMessage.ReadResponseMessage.MsgTypeId
  parent: EventStore.Core.Messages.ClientMessage.ReadResponseMessage
  isExternal: false
  name: MsgTypeId
  nameWithType: ClientMessage.ReadResponseMessage.MsgTypeId
  fullName: EventStore.Core.Messages.ClientMessage.ReadResponseMessage.MsgTypeId
- uid: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.MsgTypeId*
  commentId: Overload:EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.MsgTypeId
  isExternal: false
  name: MsgTypeId
  nameWithType: ClientMessage.ReadNextNPersistentMessagesCompleted.MsgTypeId
  fullName: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.MsgTypeId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult
  commentId: T:EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult
  parent: EventStore.Core.Messages
  isExternal: false
  name: ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult
  nameWithType: ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult
  fullName: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult
- uid: EventStore.Core.Data.ResolvedEvent[]
  name: ResolvedEvent[]
  nameWithType: ResolvedEvent[]
  fullName: EventStore.Core.Data.ResolvedEvent[]
  nameWithType.vb: ResolvedEvent()
  fullName.vb: EventStore.Core.Data.ResolvedEvent()
  name.vb: ResolvedEvent()
  spec.csharp:
  - uid: EventStore.Core.Data.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Core.Data.ResolvedEvent
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Data.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Core.Data.ResolvedEvent
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.#ctor*
  commentId: Overload:EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.#ctor
  isExternal: false
  name: ReadNextNPersistentMessagesCompleted
  nameWithType: ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesCompleted
  fullName: EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesCompleted

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted
  commentId: T:EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted
  id: ClientMessage.TransactionWriteCompleted
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.#ctor(Guid,System.Int64,EventStore.Core.Messages.OperationResult,System.String)
  - EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.CorrelationId
  - EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.Message
  - EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.MsgTypeId
  - EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.Result
  - EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.TransactionId
  - EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.WithCorrelationId(Guid)
  langs:
  - csharp
  - vb
  name: ClientMessage.TransactionWriteCompleted
  nameWithType: ClientMessage.TransactionWriteCompleted
  fullName: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TransactionWriteCompleted
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 313
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class TransactionWriteCompleted : Message'
    content.vb: >-
      Public Class TransactionWriteCompleted
          Inherits Message
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.MsgTypeId
  commentId: P:EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: ClientMessage.TransactionWriteCompleted.MsgTypeId
  fullName: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 316
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messaging.Message.MsgTypeId
  overload: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.CorrelationId
  commentId: F:EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.CorrelationId
  id: CorrelationId
  parent: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: ClientMessage.TransactionWriteCompleted.CorrelationId
  fullName: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.CorrelationId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CorrelationId
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 318
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Guid CorrelationId
    return:
      type: Guid
    content.vb: Public ReadOnly CorrelationId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.TransactionId
  commentId: F:EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.TransactionId
  id: TransactionId
  parent: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted
  langs:
  - csharp
  - vb
  name: TransactionId
  nameWithType: ClientMessage.TransactionWriteCompleted.TransactionId
  fullName: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.TransactionId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TransactionId
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 319
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly long TransactionId
    return:
      type: System.Int64
    content.vb: Public ReadOnly TransactionId As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.Result
  commentId: F:EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.Result
  id: Result
  parent: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: ClientMessage.TransactionWriteCompleted.Result
  fullName: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.Result
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Result
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 320
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly OperationResult Result
    return:
      type: EventStore.Core.Messages.OperationResult
    content.vb: Public ReadOnly Result As OperationResult
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.Message
  commentId: F:EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.Message
  id: Message
  parent: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ClientMessage.TransactionWriteCompleted.Message
  fullName: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.Message
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Message
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 321
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string Message
    return:
      type: System.String
    content.vb: Public ReadOnly Message As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.#ctor(Guid,System.Int64,EventStore.Core.Messages.OperationResult,System.String)
  commentId: M:EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.#ctor(Guid,System.Int64,EventStore.Core.Messages.OperationResult,System.String)
  id: '#ctor(Guid,System.Int64,EventStore.Core.Messages.OperationResult,System.String)'
  parent: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted
  langs:
  - csharp
  - vb
  name: TransactionWriteCompleted(Guid, Int64, OperationResult, String)
  nameWithType: ClientMessage.TransactionWriteCompleted.TransactionWriteCompleted(Guid, Int64, OperationResult, String)
  fullName: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.TransactionWriteCompleted(Guid, System.Int64, EventStore.Core.Messages.OperationResult, System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 323
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public TransactionWriteCompleted(Guid correlationId, long transactionId, OperationResult result, string message)
    parameters:
    - id: correlationId
      type: Guid
    - id: transactionId
      type: System.Int64
    - id: result
      type: EventStore.Core.Messages.OperationResult
    - id: message
      type: System.String
    content.vb: Public Sub New(correlationId As Guid, transactionId As Long, result As OperationResult, message As String)
  overload: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.WithCorrelationId(Guid)
  commentId: M:EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.WithCorrelationId(Guid)
  id: WithCorrelationId(Guid)
  parent: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted
  langs:
  - csharp
  - vb
  name: WithCorrelationId(Guid)
  nameWithType: ClientMessage.TransactionWriteCompleted.WithCorrelationId(Guid)
  fullName: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.WithCorrelationId(Guid)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithCorrelationId
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 331
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public ClientMessage.TransactionWriteCompleted WithCorrelationId(Guid newCorrId)
    parameters:
    - id: newCorrId
      type: Guid
    return:
      type: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted
    content.vb: Public Function WithCorrelationId(newCorrId As Guid) As ClientMessage.TransactionWriteCompleted
  overload: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.WithCorrelationId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ClientMessage.TransactionWriteCompleted>()
  nameWithType: ProtobufExtensions.Serialize<ClientMessage.TransactionWriteCompleted>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ClientMessage.TransactionWriteCompleted)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted)()
  name.vb: Serialize(Of ClientMessage.TransactionWriteCompleted)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ClientMessage.TransactionWriteCompleted>
    nameWithType: ProtobufExtensions.Serialize<ClientMessage.TransactionWriteCompleted>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ClientMessage.TransactionWriteCompleted)
    nameWithType: ProtobufExtensions.Serialize(Of ClientMessage.TransactionWriteCompleted)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ClientMessage.TransactionWriteCompleted>()
  nameWithType: ProtobufExtensions.SerializeToArray<ClientMessage.TransactionWriteCompleted>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ClientMessage.TransactionWriteCompleted)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted)()
  name.vb: SerializeToArray(Of ClientMessage.TransactionWriteCompleted)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ClientMessage.TransactionWriteCompleted>
    nameWithType: ProtobufExtensions.SerializeToArray<ClientMessage.TransactionWriteCompleted>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ClientMessage.TransactionWriteCompleted)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ClientMessage.TransactionWriteCompleted)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messaging.Message.MsgTypeId
  commentId: P:EventStore.Core.Messaging.Message.MsgTypeId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId
- uid: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.MsgTypeId*
  commentId: Overload:EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.MsgTypeId
  isExternal: false
  name: MsgTypeId
  nameWithType: ClientMessage.TransactionWriteCompleted.MsgTypeId
  fullName: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.MsgTypeId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Messages.OperationResult
  commentId: T:EventStore.Core.Messages.OperationResult
  parent: EventStore.Core.Messages
  isExternal: false
  name: OperationResult
  nameWithType: OperationResult
  fullName: EventStore.Core.Messages.OperationResult
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.#ctor*
  commentId: Overload:EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.#ctor
  isExternal: false
  name: TransactionWriteCompleted
  nameWithType: ClientMessage.TransactionWriteCompleted.TransactionWriteCompleted
  fullName: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.TransactionWriteCompleted
- uid: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.WithCorrelationId*
  commentId: Overload:EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.WithCorrelationId
  isExternal: false
  name: WithCorrelationId
  nameWithType: ClientMessage.TransactionWriteCompleted.WithCorrelationId
  fullName: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.WithCorrelationId
- uid: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted
  commentId: T:EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted
  parent: EventStore.Core.Messages
  isExternal: false
  name: ClientMessage.TransactionWriteCompleted
  nameWithType: ClientMessage.TransactionWriteCompleted
  fullName: EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted

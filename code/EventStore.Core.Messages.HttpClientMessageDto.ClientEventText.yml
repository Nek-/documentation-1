### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText
  commentId: T:EventStore.Core.Messages.HttpClientMessageDto.ClientEventText
  id: HttpClientMessageDto.ClientEventText
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.#ctor
  - EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.#ctor(Guid,System.String,System.Byte[],System.Byte[])
  - EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.#ctor(Guid,System.String,System.String,System.String)
  - EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.data
  - EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.eventId
  - EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.eventType
  - EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.metadata
  langs:
  - csharp
  - vb
  name: HttpClientMessageDto.ClientEventText
  nameWithType: HttpClientMessageDto.ClientEventText
  fullName: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ClientEventText
    path: ../EventStore/src/EventStore.Core/Messages/HttpClientMessageDto.cs
    startLine: 34
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class ClientEventText : object'
    content.vb: >-
      Public Class ClientEventText
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.eventId
  commentId: P:EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.eventId
  id: eventId
  parent: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText
  langs:
  - csharp
  - vb
  name: eventId
  nameWithType: HttpClientMessageDto.ClientEventText.eventId
  fullName: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.eventId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: eventId
    path: ../EventStore/src/EventStore.Core/Messages/HttpClientMessageDto.cs
    startLine: 37
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public Guid eventId { get; set; }
    parameters: []
    return:
      type: Guid
    content.vb: Public Property eventId As Guid
  overload: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.eventId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.eventType
  commentId: P:EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.eventType
  id: eventType
  parent: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText
  langs:
  - csharp
  - vb
  name: eventType
  nameWithType: HttpClientMessageDto.ClientEventText.eventType
  fullName: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.eventType
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: eventType
    path: ../EventStore/src/EventStore.Core/Messages/HttpClientMessageDto.cs
    startLine: 38
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string eventType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property eventType As String
  overload: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.eventType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.data
  commentId: P:EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.data
  id: data
  parent: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText
  langs:
  - csharp
  - vb
  name: data
  nameWithType: HttpClientMessageDto.ClientEventText.data
  fullName: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.data
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: data
    path: ../EventStore/src/EventStore.Core/Messages/HttpClientMessageDto.cs
    startLine: 40
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string data { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property data As String
  overload: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.data*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.metadata
  commentId: P:EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.metadata
  id: metadata
  parent: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText
  langs:
  - csharp
  - vb
  name: metadata
  nameWithType: HttpClientMessageDto.ClientEventText.metadata
  fullName: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.metadata
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: metadata
    path: ../EventStore/src/EventStore.Core/Messages/HttpClientMessageDto.cs
    startLine: 41
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string metadata { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property metadata As String
  overload: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.metadata*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.#ctor
  commentId: M:EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.#ctor
  id: '#ctor'
  parent: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText
  langs:
  - csharp
  - vb
  name: ClientEventText()
  nameWithType: HttpClientMessageDto.ClientEventText.ClientEventText()
  fullName: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.ClientEventText()
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/HttpClientMessageDto.cs
    startLine: 43
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public ClientEventText()
    content.vb: Public Sub New
  overload: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.#ctor(Guid,System.String,System.String,System.String)
  commentId: M:EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.#ctor(Guid,System.String,System.String,System.String)
  id: '#ctor(Guid,System.String,System.String,System.String)'
  parent: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText
  langs:
  - csharp
  - vb
  name: ClientEventText(Guid, String, String, String)
  nameWithType: HttpClientMessageDto.ClientEventText.ClientEventText(Guid, String, String, String)
  fullName: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.ClientEventText(Guid, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/HttpClientMessageDto.cs
    startLine: 47
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public ClientEventText(Guid eventId, string eventType, string data, string metadata)
    parameters:
    - id: eventId
      type: Guid
    - id: eventType
      type: System.String
    - id: data
      type: System.String
    - id: metadata
      type: System.String
    content.vb: Public Sub New(eventId As Guid, eventType As String, data As String, metadata As String)
  overload: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.#ctor(Guid,System.String,System.Byte[],System.Byte[])
  commentId: M:EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.#ctor(Guid,System.String,System.Byte[],System.Byte[])
  id: '#ctor(Guid,System.String,System.Byte[],System.Byte[])'
  parent: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText
  langs:
  - csharp
  - vb
  name: ClientEventText(Guid, String, Byte[], Byte[])
  nameWithType: HttpClientMessageDto.ClientEventText.ClientEventText(Guid, String, Byte[], Byte[])
  fullName: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.ClientEventText(Guid, System.String, System.Byte[], System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/HttpClientMessageDto.cs
    startLine: 59
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public ClientEventText(Guid eventId, string eventType, byte[] data, byte[] metadata)
    parameters:
    - id: eventId
      type: Guid
    - id: eventType
      type: System.String
    - id: data
      type: System.Byte[]
    - id: metadata
      type: System.Byte[]
    content.vb: Public Sub New(eventId As Guid, eventType As String, data As Byte(), metadata As Byte())
  overload: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.#ctor*
  nameWithType.vb: HttpClientMessageDto.ClientEventText.ClientEventText(Guid, String, Byte(), Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.ClientEventText(Guid, System.String, System.Byte(), System.Byte())
  name.vb: ClientEventText(Guid, String, Byte(), Byte())
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<HttpClientMessageDto.ClientEventText>()
  nameWithType: ProtobufExtensions.Serialize<HttpClientMessageDto.ClientEventText>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.HttpClientMessageDto.ClientEventText>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of HttpClientMessageDto.ClientEventText)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.HttpClientMessageDto.ClientEventText)()
  name.vb: Serialize(Of HttpClientMessageDto.ClientEventText)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<HttpClientMessageDto.ClientEventText>
    nameWithType: ProtobufExtensions.Serialize<HttpClientMessageDto.ClientEventText>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.HttpClientMessageDto.ClientEventText>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of HttpClientMessageDto.ClientEventText)
    nameWithType: ProtobufExtensions.Serialize(Of HttpClientMessageDto.ClientEventText)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.HttpClientMessageDto.ClientEventText)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<HttpClientMessageDto.ClientEventText>()
  nameWithType: ProtobufExtensions.SerializeToArray<HttpClientMessageDto.ClientEventText>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.HttpClientMessageDto.ClientEventText>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of HttpClientMessageDto.ClientEventText)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.HttpClientMessageDto.ClientEventText)()
  name.vb: SerializeToArray(Of HttpClientMessageDto.ClientEventText)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<HttpClientMessageDto.ClientEventText>
    nameWithType: ProtobufExtensions.SerializeToArray<HttpClientMessageDto.ClientEventText>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.HttpClientMessageDto.ClientEventText>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of HttpClientMessageDto.ClientEventText)
    nameWithType: ProtobufExtensions.SerializeToArray(Of HttpClientMessageDto.ClientEventText)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.HttpClientMessageDto.ClientEventText)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.eventId*
  commentId: Overload:EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.eventId
  isExternal: false
  name: eventId
  nameWithType: HttpClientMessageDto.ClientEventText.eventId
  fullName: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.eventId
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.eventType*
  commentId: Overload:EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.eventType
  isExternal: false
  name: eventType
  nameWithType: HttpClientMessageDto.ClientEventText.eventType
  fullName: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.eventType
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.data*
  commentId: Overload:EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.data
  isExternal: false
  name: data
  nameWithType: HttpClientMessageDto.ClientEventText.data
  fullName: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.data
- uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.metadata*
  commentId: Overload:EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.metadata
  isExternal: false
  name: metadata
  nameWithType: HttpClientMessageDto.ClientEventText.metadata
  fullName: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.metadata
- uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.#ctor*
  commentId: Overload:EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.#ctor
  isExternal: false
  name: ClientEventText
  nameWithType: HttpClientMessageDto.ClientEventText.ClientEventText
  fullName: EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.ClientEventText
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()

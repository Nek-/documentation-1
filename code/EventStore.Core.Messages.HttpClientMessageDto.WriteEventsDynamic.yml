### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic
  commentId: T:EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic
  id: HttpClientMessageDto.WriteEventsDynamic
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.#ctor
  - EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.#ctor(EventStore.Core.Messages.HttpClientMessageDto.ClientEventDynamic[])
  - EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.events
  langs:
  - csharp
  - vb
  name: HttpClientMessageDto.WriteEventsDynamic
  nameWithType: HttpClientMessageDto.WriteEventsDynamic
  fullName: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpClientMessageDto.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: WriteEventsDynamic
    path: ../EventStore/src/EventStore.Core/Messages/HttpClientMessageDto.cs
    startLine: 20
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class WriteEventsDynamic : object'
    content.vb: >-
      Public Class WriteEventsDynamic
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.events
  commentId: P:EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.events
  id: events
  parent: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic
  langs:
  - csharp
  - vb
  name: events
  nameWithType: HttpClientMessageDto.WriteEventsDynamic.events
  fullName: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.events
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpClientMessageDto.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: events
    path: ../EventStore/src/EventStore.Core/Messages/HttpClientMessageDto.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public HttpClientMessageDto.ClientEventDynamic[] events { get; set; }
    parameters: []
    return:
      type: EventStore.Core.Messages.HttpClientMessageDto.ClientEventDynamic[]
    content.vb: Public Property events As HttpClientMessageDto.ClientEventDynamic()
  overload: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.events*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.#ctor
  commentId: M:EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.#ctor
  id: '#ctor'
  parent: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic
  langs:
  - csharp
  - vb
  name: WriteEventsDynamic()
  nameWithType: HttpClientMessageDto.WriteEventsDynamic.WriteEventsDynamic()
  fullName: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.WriteEventsDynamic()
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpClientMessageDto.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/HttpClientMessageDto.cs
    startLine: 24
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public WriteEventsDynamic()
    content.vb: Public Sub New
  overload: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.#ctor(EventStore.Core.Messages.HttpClientMessageDto.ClientEventDynamic[])
  commentId: M:EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.#ctor(EventStore.Core.Messages.HttpClientMessageDto.ClientEventDynamic[])
  id: '#ctor(EventStore.Core.Messages.HttpClientMessageDto.ClientEventDynamic[])'
  parent: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic
  langs:
  - csharp
  - vb
  name: WriteEventsDynamic(HttpClientMessageDto.ClientEventDynamic[])
  nameWithType: HttpClientMessageDto.WriteEventsDynamic.WriteEventsDynamic(HttpClientMessageDto.ClientEventDynamic[])
  fullName: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.WriteEventsDynamic(EventStore.Core.Messages.HttpClientMessageDto.ClientEventDynamic[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpClientMessageDto.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/HttpClientMessageDto.cs
    startLine: 28
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public WriteEventsDynamic(HttpClientMessageDto.ClientEventDynamic[] events)
    parameters:
    - id: events
      type: EventStore.Core.Messages.HttpClientMessageDto.ClientEventDynamic[]
    content.vb: Public Sub New(events As HttpClientMessageDto.ClientEventDynamic())
  overload: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.#ctor*
  nameWithType.vb: HttpClientMessageDto.WriteEventsDynamic.WriteEventsDynamic(HttpClientMessageDto.ClientEventDynamic())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.WriteEventsDynamic(EventStore.Core.Messages.HttpClientMessageDto.ClientEventDynamic())
  name.vb: WriteEventsDynamic(HttpClientMessageDto.ClientEventDynamic())
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<HttpClientMessageDto.WriteEventsDynamic>()
  nameWithType: ProtobufExtensions.Serialize<HttpClientMessageDto.WriteEventsDynamic>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of HttpClientMessageDto.WriteEventsDynamic)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic)()
  name.vb: Serialize(Of HttpClientMessageDto.WriteEventsDynamic)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<HttpClientMessageDto.WriteEventsDynamic>
    nameWithType: ProtobufExtensions.Serialize<HttpClientMessageDto.WriteEventsDynamic>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of HttpClientMessageDto.WriteEventsDynamic)
    nameWithType: ProtobufExtensions.Serialize(Of HttpClientMessageDto.WriteEventsDynamic)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<HttpClientMessageDto.WriteEventsDynamic>()
  nameWithType: ProtobufExtensions.SerializeToArray<HttpClientMessageDto.WriteEventsDynamic>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of HttpClientMessageDto.WriteEventsDynamic)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic)()
  name.vb: SerializeToArray(Of HttpClientMessageDto.WriteEventsDynamic)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<HttpClientMessageDto.WriteEventsDynamic>
    nameWithType: ProtobufExtensions.SerializeToArray<HttpClientMessageDto.WriteEventsDynamic>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of HttpClientMessageDto.WriteEventsDynamic)
    nameWithType: ProtobufExtensions.SerializeToArray(Of HttpClientMessageDto.WriteEventsDynamic)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.events*
  commentId: Overload:EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.events
  name: events
  nameWithType: HttpClientMessageDto.WriteEventsDynamic.events
  fullName: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.events
- uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventDynamic[]
  isExternal: true
  name: HttpClientMessageDto.ClientEventDynamic[]
  nameWithType: HttpClientMessageDto.ClientEventDynamic[]
  fullName: EventStore.Core.Messages.HttpClientMessageDto.ClientEventDynamic[]
  nameWithType.vb: HttpClientMessageDto.ClientEventDynamic()
  fullName.vb: EventStore.Core.Messages.HttpClientMessageDto.ClientEventDynamic()
  name.vb: HttpClientMessageDto.ClientEventDynamic()
  spec.csharp:
  - uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventDynamic
    name: HttpClientMessageDto.ClientEventDynamic
    nameWithType: HttpClientMessageDto.ClientEventDynamic
    fullName: EventStore.Core.Messages.HttpClientMessageDto.ClientEventDynamic
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Messages.HttpClientMessageDto.ClientEventDynamic
    name: HttpClientMessageDto.ClientEventDynamic
    nameWithType: HttpClientMessageDto.ClientEventDynamic
    fullName: EventStore.Core.Messages.HttpClientMessageDto.ClientEventDynamic
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.#ctor*
  commentId: Overload:EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.#ctor
  name: WriteEventsDynamic
  nameWithType: HttpClientMessageDto.WriteEventsDynamic.WriteEventsDynamic
  fullName: EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.WriteEventsDynamic

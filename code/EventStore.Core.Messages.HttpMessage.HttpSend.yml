### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.HttpMessage.HttpSend
  commentId: T:EventStore.Core.Messages.HttpMessage.HttpSend
  id: HttpMessage.HttpSend
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.HttpMessage.HttpSend.#ctor(EventStore.Transport.Http.EntityManagement.HttpEntityManager,EventStore.Core.Services.Transport.Http.ResponseConfiguration,System.Object,EventStore.Core.Messaging.Message)
  - EventStore.Core.Messages.HttpMessage.HttpSend.Configuration
  - EventStore.Core.Messages.HttpMessage.HttpSend.Data
  - EventStore.Core.Messages.HttpMessage.HttpSend.Message
  - EventStore.Core.Messages.HttpMessage.HttpSend.MsgTypeId
  langs:
  - csharp
  - vb
  name: HttpMessage.HttpSend
  nameWithType: HttpMessage.HttpSend
  fullName: EventStore.Core.Messages.HttpMessage.HttpSend
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HttpSend
    path: ../EventStore/src/EventStore.Core/Messages/HttpMessage.cs
    startLine: 38
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class HttpSend : HttpMessage.HttpSendMessage, IQueueAffineMessage'
    content.vb: >-
      Public Class HttpSend
          Inherits HttpMessage.HttpSendMessage
          Implements IQueueAffineMessage
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  - EventStore.Core.Messages.HttpMessage.HttpSendMessage
  implements:
  - EventStore.Core.Messages.IQueueAffineMessage
  inheritedMembers:
  - EventStore.Core.Messages.HttpMessage.HttpSendMessage.QueueId
  - EventStore.Core.Messages.HttpMessage.HttpSendMessage.Envelope
  - EventStore.Core.Messages.HttpMessage.HttpSendMessage.CorrelationId
  - EventStore.Core.Messages.HttpMessage.HttpSendMessage.HttpEntityManager
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.HttpMessage.HttpSend.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.HttpMessage.HttpSend.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.HttpMessage.HttpSend.MsgTypeId
  commentId: P:EventStore.Core.Messages.HttpMessage.HttpSend.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Messages.HttpMessage.HttpSend
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: HttpMessage.HttpSend.MsgTypeId
  fullName: EventStore.Core.Messages.HttpMessage.HttpSend.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Core/Messages/HttpMessage.cs
    startLine: 41
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messages.HttpMessage.HttpSendMessage.MsgTypeId
  overload: EventStore.Core.Messages.HttpMessage.HttpSend.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.Messages.HttpMessage.HttpSend.Data
  commentId: F:EventStore.Core.Messages.HttpMessage.HttpSend.Data
  id: Data
  parent: EventStore.Core.Messages.HttpMessage.HttpSend
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: HttpMessage.HttpSend.Data
  fullName: EventStore.Core.Messages.HttpMessage.HttpSend.Data
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Data
    path: ../EventStore/src/EventStore.Core/Messages/HttpMessage.cs
    startLine: 43
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly object Data
    return:
      type: System.Object
    content.vb: Public ReadOnly Data As Object
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.HttpMessage.HttpSend.Configuration
  commentId: F:EventStore.Core.Messages.HttpMessage.HttpSend.Configuration
  id: Configuration
  parent: EventStore.Core.Messages.HttpMessage.HttpSend
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: HttpMessage.HttpSend.Configuration
  fullName: EventStore.Core.Messages.HttpMessage.HttpSend.Configuration
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Configuration
    path: ../EventStore/src/EventStore.Core/Messages/HttpMessage.cs
    startLine: 44
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly ResponseConfiguration Configuration
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public ReadOnly Configuration As ResponseConfiguration
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.HttpMessage.HttpSend.Message
  commentId: F:EventStore.Core.Messages.HttpMessage.HttpSend.Message
  id: Message
  parent: EventStore.Core.Messages.HttpMessage.HttpSend
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: HttpMessage.HttpSend.Message
  fullName: EventStore.Core.Messages.HttpMessage.HttpSend.Message
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Message
    path: ../EventStore/src/EventStore.Core/Messages/HttpMessage.cs
    startLine: 45
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Message Message
    return:
      type: EventStore.Core.Messaging.Message
    content.vb: Public ReadOnly Message As Message
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.HttpMessage.HttpSend.#ctor(EventStore.Transport.Http.EntityManagement.HttpEntityManager,EventStore.Core.Services.Transport.Http.ResponseConfiguration,System.Object,EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Messages.HttpMessage.HttpSend.#ctor(EventStore.Transport.Http.EntityManagement.HttpEntityManager,EventStore.Core.Services.Transport.Http.ResponseConfiguration,System.Object,EventStore.Core.Messaging.Message)
  id: '#ctor(EventStore.Transport.Http.EntityManagement.HttpEntityManager,EventStore.Core.Services.Transport.Http.ResponseConfiguration,System.Object,EventStore.Core.Messaging.Message)'
  parent: EventStore.Core.Messages.HttpMessage.HttpSend
  langs:
  - csharp
  - vb
  name: HttpSend(HttpEntityManager, ResponseConfiguration, Object, Message)
  nameWithType: HttpMessage.HttpSend.HttpSend(HttpEntityManager, ResponseConfiguration, Object, Message)
  fullName: EventStore.Core.Messages.HttpMessage.HttpSend.HttpSend(EventStore.Transport.Http.EntityManagement.HttpEntityManager, EventStore.Core.Services.Transport.Http.ResponseConfiguration, System.Object, EventStore.Core.Messaging.Message)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/HttpMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/HttpMessage.cs
    startLine: 47
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public HttpSend(HttpEntityManager httpEntityManager, ResponseConfiguration configuration, object data, Message message)
    parameters:
    - id: httpEntityManager
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    - id: configuration
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    - id: data
      type: System.Object
    - id: message
      type: EventStore.Core.Messaging.Message
    content.vb: Public Sub New(httpEntityManager As HttpEntityManager, configuration As ResponseConfiguration, data As Object, message As Message)
  overload: EventStore.Core.Messages.HttpMessage.HttpSend.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messages.HttpMessage.HttpSendMessage
  commentId: T:EventStore.Core.Messages.HttpMessage.HttpSendMessage
  parent: EventStore.Core.Messages
  isExternal: false
  name: HttpMessage.HttpSendMessage
  nameWithType: HttpMessage.HttpSendMessage
  fullName: EventStore.Core.Messages.HttpMessage.HttpSendMessage
- uid: EventStore.Core.Messages.IQueueAffineMessage
  commentId: T:EventStore.Core.Messages.IQueueAffineMessage
  parent: EventStore.Core.Messages
  isExternal: false
  name: IQueueAffineMessage
  nameWithType: IQueueAffineMessage
  fullName: EventStore.Core.Messages.IQueueAffineMessage
- uid: EventStore.Core.Messages.HttpMessage.HttpSendMessage.QueueId
  commentId: P:EventStore.Core.Messages.HttpMessage.HttpSendMessage.QueueId
  parent: EventStore.Core.Messages.HttpMessage.HttpSendMessage
  isExternal: false
  name: QueueId
  nameWithType: HttpMessage.HttpSendMessage.QueueId
  fullName: EventStore.Core.Messages.HttpMessage.HttpSendMessage.QueueId
- uid: EventStore.Core.Messages.HttpMessage.HttpSendMessage.Envelope
  commentId: F:EventStore.Core.Messages.HttpMessage.HttpSendMessage.Envelope
  parent: EventStore.Core.Messages.HttpMessage.HttpSendMessage
  isExternal: false
  name: Envelope
  nameWithType: HttpMessage.HttpSendMessage.Envelope
  fullName: EventStore.Core.Messages.HttpMessage.HttpSendMessage.Envelope
- uid: EventStore.Core.Messages.HttpMessage.HttpSendMessage.CorrelationId
  commentId: F:EventStore.Core.Messages.HttpMessage.HttpSendMessage.CorrelationId
  parent: EventStore.Core.Messages.HttpMessage.HttpSendMessage
  isExternal: false
  name: CorrelationId
  nameWithType: HttpMessage.HttpSendMessage.CorrelationId
  fullName: EventStore.Core.Messages.HttpMessage.HttpSendMessage.CorrelationId
- uid: EventStore.Core.Messages.HttpMessage.HttpSendMessage.HttpEntityManager
  commentId: F:EventStore.Core.Messages.HttpMessage.HttpSendMessage.HttpEntityManager
  parent: EventStore.Core.Messages.HttpMessage.HttpSendMessage
  isExternal: false
  name: HttpEntityManager
  nameWithType: HttpMessage.HttpSendMessage.HttpEntityManager
  fullName: EventStore.Core.Messages.HttpMessage.HttpSendMessage.HttpEntityManager
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.HttpMessage.HttpSend.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<HttpMessage.HttpSend>()
  nameWithType: ProtobufExtensions.Serialize<HttpMessage.HttpSend>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.HttpMessage.HttpSend>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of HttpMessage.HttpSend)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.HttpMessage.HttpSend)()
  name.vb: Serialize(Of HttpMessage.HttpSend)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<HttpMessage.HttpSend>
    nameWithType: ProtobufExtensions.Serialize<HttpMessage.HttpSend>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.HttpMessage.HttpSend>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of HttpMessage.HttpSend)
    nameWithType: ProtobufExtensions.Serialize(Of HttpMessage.HttpSend)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.HttpMessage.HttpSend)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.HttpMessage.HttpSend.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<HttpMessage.HttpSend>()
  nameWithType: ProtobufExtensions.SerializeToArray<HttpMessage.HttpSend>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.HttpMessage.HttpSend>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of HttpMessage.HttpSend)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.HttpMessage.HttpSend)()
  name.vb: SerializeToArray(Of HttpMessage.HttpSend)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<HttpMessage.HttpSend>
    nameWithType: ProtobufExtensions.SerializeToArray<HttpMessage.HttpSend>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.HttpMessage.HttpSend>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of HttpMessage.HttpSend)
    nameWithType: ProtobufExtensions.SerializeToArray(Of HttpMessage.HttpSend)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.HttpMessage.HttpSend)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.HttpMessage.HttpSendMessage.MsgTypeId
  commentId: P:EventStore.Core.Messages.HttpMessage.HttpSendMessage.MsgTypeId
  parent: EventStore.Core.Messages.HttpMessage.HttpSendMessage
  isExternal: false
  name: MsgTypeId
  nameWithType: HttpMessage.HttpSendMessage.MsgTypeId
  fullName: EventStore.Core.Messages.HttpMessage.HttpSendMessage.MsgTypeId
- uid: EventStore.Core.Messages.HttpMessage.HttpSend.MsgTypeId*
  commentId: Overload:EventStore.Core.Messages.HttpMessage.HttpSend.MsgTypeId
  isExternal: false
  name: MsgTypeId
  nameWithType: HttpMessage.HttpSend.MsgTypeId
  fullName: EventStore.Core.Messages.HttpMessage.HttpSend.MsgTypeId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Services.Transport.Http.ResponseConfiguration
  commentId: T:EventStore.Core.Services.Transport.Http.ResponseConfiguration
  parent: EventStore.Core.Services.Transport.Http
  isExternal: false
  name: ResponseConfiguration
  nameWithType: ResponseConfiguration
  fullName: EventStore.Core.Services.Transport.Http.ResponseConfiguration
- uid: EventStore.Core.Services.Transport.Http
  commentId: N:EventStore.Core.Services.Transport.Http
  isExternal: false
  name: EventStore.Core.Services.Transport.Http
  nameWithType: EventStore.Core.Services.Transport.Http
  fullName: EventStore.Core.Services.Transport.Http
- uid: EventStore.Core.Messages.HttpMessage.HttpSend.#ctor*
  commentId: Overload:EventStore.Core.Messages.HttpMessage.HttpSend.#ctor
  isExternal: false
  name: HttpSend
  nameWithType: HttpMessage.HttpSend.HttpSend
  fullName: EventStore.Core.Messages.HttpMessage.HttpSend.HttpSend
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  commentId: T:EventStore.Transport.Http.EntityManagement.HttpEntityManager
  parent: EventStore.Transport.Http.EntityManagement
  isExternal: false
  name: HttpEntityManager
  nameWithType: HttpEntityManager
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
- uid: EventStore.Transport.Http.EntityManagement
  commentId: N:EventStore.Transport.Http.EntityManagement
  isExternal: false
  name: EventStore.Transport.Http.EntityManagement
  nameWithType: EventStore.Transport.Http.EntityManagement
  fullName: EventStore.Transport.Http.EntityManagement

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.MemberInfoDto
  commentId: T:EventStore.Core.Messages.MemberInfoDto
  id: MemberInfoDto
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.MemberInfoDto.#ctor
  - EventStore.Core.Messages.MemberInfoDto.#ctor(EventStore.Core.Cluster.MemberInfo)
  - EventStore.Core.Messages.MemberInfoDto.ChaserCheckpoint
  - EventStore.Core.Messages.MemberInfoDto.EpochId
  - EventStore.Core.Messages.MemberInfoDto.EpochNumber
  - EventStore.Core.Messages.MemberInfoDto.EpochPosition
  - EventStore.Core.Messages.MemberInfoDto.ExternalHttpIp
  - EventStore.Core.Messages.MemberInfoDto.ExternalHttpPort
  - EventStore.Core.Messages.MemberInfoDto.ExternalSecureTcpPort
  - EventStore.Core.Messages.MemberInfoDto.ExternalTcpIp
  - EventStore.Core.Messages.MemberInfoDto.ExternalTcpPort
  - EventStore.Core.Messages.MemberInfoDto.InstanceId
  - EventStore.Core.Messages.MemberInfoDto.InternalHttpIp
  - EventStore.Core.Messages.MemberInfoDto.InternalHttpPort
  - EventStore.Core.Messages.MemberInfoDto.InternalSecureTcpPort
  - EventStore.Core.Messages.MemberInfoDto.InternalTcpIp
  - EventStore.Core.Messages.MemberInfoDto.InternalTcpPort
  - EventStore.Core.Messages.MemberInfoDto.IsAlive
  - EventStore.Core.Messages.MemberInfoDto.LastCommitPosition
  - EventStore.Core.Messages.MemberInfoDto.NodePriority
  - EventStore.Core.Messages.MemberInfoDto.State
  - EventStore.Core.Messages.MemberInfoDto.TimeStamp
  - EventStore.Core.Messages.MemberInfoDto.ToString
  - EventStore.Core.Messages.MemberInfoDto.WriterCheckpoint
  langs:
  - csharp
  - vb
  name: MemberInfoDto
  nameWithType: MemberInfoDto
  fullName: EventStore.Core.Messages.MemberInfoDto
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MemberInfoDto
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class MemberInfoDto : object'
    content.vb: >-
      Public Class MemberInfoDto

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Messages.MemberInfoDto.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.MemberInfoDto.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.MemberInfoDto.InstanceId
  commentId: P:EventStore.Core.Messages.MemberInfoDto.InstanceId
  id: InstanceId
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: InstanceId
  nameWithType: MemberInfoDto.InstanceId
  fullName: EventStore.Core.Messages.MemberInfoDto.InstanceId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InstanceId
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public Guid InstanceId { get; set; }
    parameters: []
    return:
      type: Guid
    content.vb: Public Property InstanceId As Guid
  overload: EventStore.Core.Messages.MemberInfoDto.InstanceId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.TimeStamp
  commentId: P:EventStore.Core.Messages.MemberInfoDto.TimeStamp
  id: TimeStamp
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: TimeStamp
  nameWithType: MemberInfoDto.TimeStamp
  fullName: EventStore.Core.Messages.MemberInfoDto.TimeStamp
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TimeStamp
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public DateTime TimeStamp { get; set; }
    parameters: []
    return:
      type: DateTime
    content.vb: Public Property TimeStamp As DateTime
  overload: EventStore.Core.Messages.MemberInfoDto.TimeStamp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.State
  commentId: P:EventStore.Core.Messages.MemberInfoDto.State
  id: State
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: State
  nameWithType: MemberInfoDto.State
  fullName: EventStore.Core.Messages.MemberInfoDto.State
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: State
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public VNodeState State { get; set; }
    parameters: []
    return:
      type: EventStore.Core.Data.VNodeState
    content.vb: Public Property State As VNodeState
  overload: EventStore.Core.Messages.MemberInfoDto.State*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.IsAlive
  commentId: P:EventStore.Core.Messages.MemberInfoDto.IsAlive
  id: IsAlive
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: IsAlive
  nameWithType: MemberInfoDto.IsAlive
  fullName: EventStore.Core.Messages.MemberInfoDto.IsAlive
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IsAlive
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public bool IsAlive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsAlive As Boolean
  overload: EventStore.Core.Messages.MemberInfoDto.IsAlive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.InternalTcpIp
  commentId: P:EventStore.Core.Messages.MemberInfoDto.InternalTcpIp
  id: InternalTcpIp
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: InternalTcpIp
  nameWithType: MemberInfoDto.InternalTcpIp
  fullName: EventStore.Core.Messages.MemberInfoDto.InternalTcpIp
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InternalTcpIp
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string InternalTcpIp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InternalTcpIp As String
  overload: EventStore.Core.Messages.MemberInfoDto.InternalTcpIp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.InternalTcpPort
  commentId: P:EventStore.Core.Messages.MemberInfoDto.InternalTcpPort
  id: InternalTcpPort
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: InternalTcpPort
  nameWithType: MemberInfoDto.InternalTcpPort
  fullName: EventStore.Core.Messages.MemberInfoDto.InternalTcpPort
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InternalTcpPort
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int InternalTcpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property InternalTcpPort As Integer
  overload: EventStore.Core.Messages.MemberInfoDto.InternalTcpPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.InternalSecureTcpPort
  commentId: P:EventStore.Core.Messages.MemberInfoDto.InternalSecureTcpPort
  id: InternalSecureTcpPort
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: InternalSecureTcpPort
  nameWithType: MemberInfoDto.InternalSecureTcpPort
  fullName: EventStore.Core.Messages.MemberInfoDto.InternalSecureTcpPort
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InternalSecureTcpPort
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int InternalSecureTcpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property InternalSecureTcpPort As Integer
  overload: EventStore.Core.Messages.MemberInfoDto.InternalSecureTcpPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.ExternalTcpIp
  commentId: P:EventStore.Core.Messages.MemberInfoDto.ExternalTcpIp
  id: ExternalTcpIp
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: ExternalTcpIp
  nameWithType: MemberInfoDto.ExternalTcpIp
  fullName: EventStore.Core.Messages.MemberInfoDto.ExternalTcpIp
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExternalTcpIp
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string ExternalTcpIp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ExternalTcpIp As String
  overload: EventStore.Core.Messages.MemberInfoDto.ExternalTcpIp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.ExternalTcpPort
  commentId: P:EventStore.Core.Messages.MemberInfoDto.ExternalTcpPort
  id: ExternalTcpPort
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: ExternalTcpPort
  nameWithType: MemberInfoDto.ExternalTcpPort
  fullName: EventStore.Core.Messages.MemberInfoDto.ExternalTcpPort
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExternalTcpPort
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int ExternalTcpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ExternalTcpPort As Integer
  overload: EventStore.Core.Messages.MemberInfoDto.ExternalTcpPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.ExternalSecureTcpPort
  commentId: P:EventStore.Core.Messages.MemberInfoDto.ExternalSecureTcpPort
  id: ExternalSecureTcpPort
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: ExternalSecureTcpPort
  nameWithType: MemberInfoDto.ExternalSecureTcpPort
  fullName: EventStore.Core.Messages.MemberInfoDto.ExternalSecureTcpPort
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExternalSecureTcpPort
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 20
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int ExternalSecureTcpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ExternalSecureTcpPort As Integer
  overload: EventStore.Core.Messages.MemberInfoDto.ExternalSecureTcpPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.InternalHttpIp
  commentId: P:EventStore.Core.Messages.MemberInfoDto.InternalHttpIp
  id: InternalHttpIp
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: InternalHttpIp
  nameWithType: MemberInfoDto.InternalHttpIp
  fullName: EventStore.Core.Messages.MemberInfoDto.InternalHttpIp
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InternalHttpIp
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string InternalHttpIp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InternalHttpIp As String
  overload: EventStore.Core.Messages.MemberInfoDto.InternalHttpIp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.InternalHttpPort
  commentId: P:EventStore.Core.Messages.MemberInfoDto.InternalHttpPort
  id: InternalHttpPort
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: InternalHttpPort
  nameWithType: MemberInfoDto.InternalHttpPort
  fullName: EventStore.Core.Messages.MemberInfoDto.InternalHttpPort
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InternalHttpPort
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 23
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int InternalHttpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property InternalHttpPort As Integer
  overload: EventStore.Core.Messages.MemberInfoDto.InternalHttpPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.ExternalHttpIp
  commentId: P:EventStore.Core.Messages.MemberInfoDto.ExternalHttpIp
  id: ExternalHttpIp
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: ExternalHttpIp
  nameWithType: MemberInfoDto.ExternalHttpIp
  fullName: EventStore.Core.Messages.MemberInfoDto.ExternalHttpIp
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExternalHttpIp
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 25
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string ExternalHttpIp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ExternalHttpIp As String
  overload: EventStore.Core.Messages.MemberInfoDto.ExternalHttpIp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.ExternalHttpPort
  commentId: P:EventStore.Core.Messages.MemberInfoDto.ExternalHttpPort
  id: ExternalHttpPort
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: ExternalHttpPort
  nameWithType: MemberInfoDto.ExternalHttpPort
  fullName: EventStore.Core.Messages.MemberInfoDto.ExternalHttpPort
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExternalHttpPort
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 26
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int ExternalHttpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ExternalHttpPort As Integer
  overload: EventStore.Core.Messages.MemberInfoDto.ExternalHttpPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.LastCommitPosition
  commentId: P:EventStore.Core.Messages.MemberInfoDto.LastCommitPosition
  id: LastCommitPosition
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: LastCommitPosition
  nameWithType: MemberInfoDto.LastCommitPosition
  fullName: EventStore.Core.Messages.MemberInfoDto.LastCommitPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: LastCommitPosition
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 28
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long LastCommitPosition { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property LastCommitPosition As Long
  overload: EventStore.Core.Messages.MemberInfoDto.LastCommitPosition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.WriterCheckpoint
  commentId: P:EventStore.Core.Messages.MemberInfoDto.WriterCheckpoint
  id: WriterCheckpoint
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: WriterCheckpoint
  nameWithType: MemberInfoDto.WriterCheckpoint
  fullName: EventStore.Core.Messages.MemberInfoDto.WriterCheckpoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WriterCheckpoint
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 29
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long WriterCheckpoint { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property WriterCheckpoint As Long
  overload: EventStore.Core.Messages.MemberInfoDto.WriterCheckpoint*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.ChaserCheckpoint
  commentId: P:EventStore.Core.Messages.MemberInfoDto.ChaserCheckpoint
  id: ChaserCheckpoint
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: ChaserCheckpoint
  nameWithType: MemberInfoDto.ChaserCheckpoint
  fullName: EventStore.Core.Messages.MemberInfoDto.ChaserCheckpoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ChaserCheckpoint
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 30
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long ChaserCheckpoint { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ChaserCheckpoint As Long
  overload: EventStore.Core.Messages.MemberInfoDto.ChaserCheckpoint*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.EpochPosition
  commentId: P:EventStore.Core.Messages.MemberInfoDto.EpochPosition
  id: EpochPosition
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: EpochPosition
  nameWithType: MemberInfoDto.EpochPosition
  fullName: EventStore.Core.Messages.MemberInfoDto.EpochPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EpochPosition
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 32
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long EpochPosition { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property EpochPosition As Long
  overload: EventStore.Core.Messages.MemberInfoDto.EpochPosition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.EpochNumber
  commentId: P:EventStore.Core.Messages.MemberInfoDto.EpochNumber
  id: EpochNumber
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: EpochNumber
  nameWithType: MemberInfoDto.EpochNumber
  fullName: EventStore.Core.Messages.MemberInfoDto.EpochNumber
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EpochNumber
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 33
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int EpochNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property EpochNumber As Integer
  overload: EventStore.Core.Messages.MemberInfoDto.EpochNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.EpochId
  commentId: P:EventStore.Core.Messages.MemberInfoDto.EpochId
  id: EpochId
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: EpochId
  nameWithType: MemberInfoDto.EpochId
  fullName: EventStore.Core.Messages.MemberInfoDto.EpochId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EpochId
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 34
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public Guid EpochId { get; set; }
    parameters: []
    return:
      type: Guid
    content.vb: Public Property EpochId As Guid
  overload: EventStore.Core.Messages.MemberInfoDto.EpochId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.NodePriority
  commentId: P:EventStore.Core.Messages.MemberInfoDto.NodePriority
  id: NodePriority
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: NodePriority
  nameWithType: MemberInfoDto.NodePriority
  fullName: EventStore.Core.Messages.MemberInfoDto.NodePriority
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: NodePriority
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 36
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int NodePriority { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property NodePriority As Integer
  overload: EventStore.Core.Messages.MemberInfoDto.NodePriority*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.#ctor
  commentId: M:EventStore.Core.Messages.MemberInfoDto.#ctor
  id: '#ctor'
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: MemberInfoDto()
  nameWithType: MemberInfoDto.MemberInfoDto()
  fullName: EventStore.Core.Messages.MemberInfoDto.MemberInfoDto()
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 38
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public MemberInfoDto()
    content.vb: Public Sub New
  overload: EventStore.Core.Messages.MemberInfoDto.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.#ctor(EventStore.Core.Cluster.MemberInfo)
  commentId: M:EventStore.Core.Messages.MemberInfoDto.#ctor(EventStore.Core.Cluster.MemberInfo)
  id: '#ctor(EventStore.Core.Cluster.MemberInfo)'
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: MemberInfoDto(MemberInfo)
  nameWithType: MemberInfoDto.MemberInfoDto(MemberInfo)
  fullName: EventStore.Core.Messages.MemberInfoDto.MemberInfoDto(EventStore.Core.Cluster.MemberInfo)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 42
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public MemberInfoDto(MemberInfo member)
    parameters:
    - id: member
      type: EventStore.Core.Cluster.MemberInfo
    content.vb: Public Sub New(member As MemberInfo)
  overload: EventStore.Core.Messages.MemberInfoDto.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MemberInfoDto.ToString
  commentId: M:EventStore.Core.Messages.MemberInfoDto.ToString
  id: ToString
  parent: EventStore.Core.Messages.MemberInfoDto
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MemberInfoDto.ToString()
  fullName: EventStore.Core.Messages.MemberInfoDto.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Messages/MemberInfoDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.Core/Messages/MemberInfoDto.cs
    startLine: 75
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.Core.Messages.MemberInfoDto.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.MemberInfoDto.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<MemberInfoDto>()
  nameWithType: ProtobufExtensions.Serialize<MemberInfoDto>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.MemberInfoDto>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of MemberInfoDto)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.MemberInfoDto)()
  name.vb: Serialize(Of MemberInfoDto)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<MemberInfoDto>
    nameWithType: ProtobufExtensions.Serialize<MemberInfoDto>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.MemberInfoDto>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of MemberInfoDto)
    nameWithType: ProtobufExtensions.Serialize(Of MemberInfoDto)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.MemberInfoDto)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.MemberInfoDto.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<MemberInfoDto>()
  nameWithType: ProtobufExtensions.SerializeToArray<MemberInfoDto>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.MemberInfoDto>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of MemberInfoDto)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.MemberInfoDto)()
  name.vb: SerializeToArray(Of MemberInfoDto)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<MemberInfoDto>
    nameWithType: ProtobufExtensions.SerializeToArray<MemberInfoDto>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.MemberInfoDto>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of MemberInfoDto)
    nameWithType: ProtobufExtensions.SerializeToArray(Of MemberInfoDto)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.MemberInfoDto)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.MemberInfoDto.InstanceId*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.InstanceId
  isExternal: false
  name: InstanceId
  nameWithType: MemberInfoDto.InstanceId
  fullName: EventStore.Core.Messages.MemberInfoDto.InstanceId
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Core.Messages.MemberInfoDto.TimeStamp*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.TimeStamp
  isExternal: false
  name: TimeStamp
  nameWithType: MemberInfoDto.TimeStamp
  fullName: EventStore.Core.Messages.MemberInfoDto.TimeStamp
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: EventStore.Core.Messages.MemberInfoDto.State*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.State
  isExternal: false
  name: State
  nameWithType: MemberInfoDto.State
  fullName: EventStore.Core.Messages.MemberInfoDto.State
- uid: EventStore.Core.Data.VNodeState
  commentId: T:EventStore.Core.Data.VNodeState
  parent: EventStore.Core.Data
  isExternal: false
  name: VNodeState
  nameWithType: VNodeState
  fullName: EventStore.Core.Data.VNodeState
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  isExternal: false
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Messages.MemberInfoDto.IsAlive*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.IsAlive
  isExternal: false
  name: IsAlive
  nameWithType: MemberInfoDto.IsAlive
  fullName: EventStore.Core.Messages.MemberInfoDto.IsAlive
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Messages.MemberInfoDto.InternalTcpIp*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.InternalTcpIp
  isExternal: false
  name: InternalTcpIp
  nameWithType: MemberInfoDto.InternalTcpIp
  fullName: EventStore.Core.Messages.MemberInfoDto.InternalTcpIp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Messages.MemberInfoDto.InternalTcpPort*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.InternalTcpPort
  isExternal: false
  name: InternalTcpPort
  nameWithType: MemberInfoDto.InternalTcpPort
  fullName: EventStore.Core.Messages.MemberInfoDto.InternalTcpPort
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Messages.MemberInfoDto.InternalSecureTcpPort*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.InternalSecureTcpPort
  isExternal: false
  name: InternalSecureTcpPort
  nameWithType: MemberInfoDto.InternalSecureTcpPort
  fullName: EventStore.Core.Messages.MemberInfoDto.InternalSecureTcpPort
- uid: EventStore.Core.Messages.MemberInfoDto.ExternalTcpIp*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.ExternalTcpIp
  isExternal: false
  name: ExternalTcpIp
  nameWithType: MemberInfoDto.ExternalTcpIp
  fullName: EventStore.Core.Messages.MemberInfoDto.ExternalTcpIp
- uid: EventStore.Core.Messages.MemberInfoDto.ExternalTcpPort*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.ExternalTcpPort
  isExternal: false
  name: ExternalTcpPort
  nameWithType: MemberInfoDto.ExternalTcpPort
  fullName: EventStore.Core.Messages.MemberInfoDto.ExternalTcpPort
- uid: EventStore.Core.Messages.MemberInfoDto.ExternalSecureTcpPort*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.ExternalSecureTcpPort
  isExternal: false
  name: ExternalSecureTcpPort
  nameWithType: MemberInfoDto.ExternalSecureTcpPort
  fullName: EventStore.Core.Messages.MemberInfoDto.ExternalSecureTcpPort
- uid: EventStore.Core.Messages.MemberInfoDto.InternalHttpIp*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.InternalHttpIp
  isExternal: false
  name: InternalHttpIp
  nameWithType: MemberInfoDto.InternalHttpIp
  fullName: EventStore.Core.Messages.MemberInfoDto.InternalHttpIp
- uid: EventStore.Core.Messages.MemberInfoDto.InternalHttpPort*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.InternalHttpPort
  isExternal: false
  name: InternalHttpPort
  nameWithType: MemberInfoDto.InternalHttpPort
  fullName: EventStore.Core.Messages.MemberInfoDto.InternalHttpPort
- uid: EventStore.Core.Messages.MemberInfoDto.ExternalHttpIp*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.ExternalHttpIp
  isExternal: false
  name: ExternalHttpIp
  nameWithType: MemberInfoDto.ExternalHttpIp
  fullName: EventStore.Core.Messages.MemberInfoDto.ExternalHttpIp
- uid: EventStore.Core.Messages.MemberInfoDto.ExternalHttpPort*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.ExternalHttpPort
  isExternal: false
  name: ExternalHttpPort
  nameWithType: MemberInfoDto.ExternalHttpPort
  fullName: EventStore.Core.Messages.MemberInfoDto.ExternalHttpPort
- uid: EventStore.Core.Messages.MemberInfoDto.LastCommitPosition*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.LastCommitPosition
  isExternal: false
  name: LastCommitPosition
  nameWithType: MemberInfoDto.LastCommitPosition
  fullName: EventStore.Core.Messages.MemberInfoDto.LastCommitPosition
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Messages.MemberInfoDto.WriterCheckpoint*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.WriterCheckpoint
  isExternal: false
  name: WriterCheckpoint
  nameWithType: MemberInfoDto.WriterCheckpoint
  fullName: EventStore.Core.Messages.MemberInfoDto.WriterCheckpoint
- uid: EventStore.Core.Messages.MemberInfoDto.ChaserCheckpoint*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.ChaserCheckpoint
  isExternal: false
  name: ChaserCheckpoint
  nameWithType: MemberInfoDto.ChaserCheckpoint
  fullName: EventStore.Core.Messages.MemberInfoDto.ChaserCheckpoint
- uid: EventStore.Core.Messages.MemberInfoDto.EpochPosition*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.EpochPosition
  isExternal: false
  name: EpochPosition
  nameWithType: MemberInfoDto.EpochPosition
  fullName: EventStore.Core.Messages.MemberInfoDto.EpochPosition
- uid: EventStore.Core.Messages.MemberInfoDto.EpochNumber*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.EpochNumber
  isExternal: false
  name: EpochNumber
  nameWithType: MemberInfoDto.EpochNumber
  fullName: EventStore.Core.Messages.MemberInfoDto.EpochNumber
- uid: EventStore.Core.Messages.MemberInfoDto.EpochId*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.EpochId
  isExternal: false
  name: EpochId
  nameWithType: MemberInfoDto.EpochId
  fullName: EventStore.Core.Messages.MemberInfoDto.EpochId
- uid: EventStore.Core.Messages.MemberInfoDto.NodePriority*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.NodePriority
  isExternal: false
  name: NodePriority
  nameWithType: MemberInfoDto.NodePriority
  fullName: EventStore.Core.Messages.MemberInfoDto.NodePriority
- uid: EventStore.Core.Messages.MemberInfoDto.#ctor*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.#ctor
  isExternal: false
  name: MemberInfoDto
  nameWithType: MemberInfoDto.MemberInfoDto
  fullName: EventStore.Core.Messages.MemberInfoDto.MemberInfoDto
- uid: EventStore.Core.Cluster.MemberInfo
  commentId: T:EventStore.Core.Cluster.MemberInfo
  parent: EventStore.Core.Cluster
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: EventStore.Core.Cluster.MemberInfo
- uid: EventStore.Core.Cluster
  commentId: N:EventStore.Core.Cluster
  isExternal: false
  name: EventStore.Core.Cluster
  nameWithType: EventStore.Core.Cluster
  fullName: EventStore.Core.Cluster
- uid: EventStore.Core.Messages.MemberInfoDto.ToString*
  commentId: Overload:EventStore.Core.Messages.MemberInfoDto.ToString
  isExternal: false
  name: ToString
  nameWithType: MemberInfoDto.ToString
  fullName: EventStore.Core.Messages.MemberInfoDto.ToString

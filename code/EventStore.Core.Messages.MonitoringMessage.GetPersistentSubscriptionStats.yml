### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats
  commentId: T:EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats
  id: MonitoringMessage.GetPersistentSubscriptionStats
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.#ctor(EventStore.Core.Messaging.IEnvelope,System.String,System.String)
  - EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.Envelope
  - EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.EventStreamId
  - EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.GroupName
  - EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.MsgTypeId
  langs:
  - csharp
  - vb
  name: MonitoringMessage.GetPersistentSubscriptionStats
  nameWithType: MonitoringMessage.GetPersistentSubscriptionStats
  fullName: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: GetPersistentSubscriptionStats
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 24
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class GetPersistentSubscriptionStats : Message'
    content.vb: >-
      Public Class GetPersistentSubscriptionStats
          Inherits Message
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.MsgTypeId
  commentId: P:EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: MonitoringMessage.GetPersistentSubscriptionStats.MsgTypeId
  fullName: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 27
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messaging.Message.MsgTypeId
  overload: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.EventStreamId
  commentId: P:EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.EventStreamId
  id: EventStreamId
  parent: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats
  langs:
  - csharp
  - vb
  name: EventStreamId
  nameWithType: MonitoringMessage.GetPersistentSubscriptionStats.EventStreamId
  fullName: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.EventStreamId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: EventStreamId
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 29
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string EventStreamId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property EventStreamId As String
  overload: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.EventStreamId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.GroupName
  commentId: P:EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.GroupName
  id: GroupName
  parent: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats
  langs:
  - csharp
  - vb
  name: GroupName
  nameWithType: MonitoringMessage.GetPersistentSubscriptionStats.GroupName
  fullName: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.GroupName
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: GroupName
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 30
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string GroupName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property GroupName As String
  overload: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.GroupName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.Envelope
  commentId: F:EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.Envelope
  id: Envelope
  parent: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats
  langs:
  - csharp
  - vb
  name: Envelope
  nameWithType: MonitoringMessage.GetPersistentSubscriptionStats.Envelope
  fullName: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.Envelope
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Envelope
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 32
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly IEnvelope Envelope
    return:
      type: EventStore.Core.Messaging.IEnvelope
    content.vb: Public ReadOnly Envelope As IEnvelope
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.#ctor(EventStore.Core.Messaging.IEnvelope,System.String,System.String)
  commentId: M:EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.#ctor(EventStore.Core.Messaging.IEnvelope,System.String,System.String)
  id: '#ctor(EventStore.Core.Messaging.IEnvelope,System.String,System.String)'
  parent: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats
  langs:
  - csharp
  - vb
  name: GetPersistentSubscriptionStats(IEnvelope, String, String)
  nameWithType: MonitoringMessage.GetPersistentSubscriptionStats.GetPersistentSubscriptionStats(IEnvelope, String, String)
  fullName: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.GetPersistentSubscriptionStats(EventStore.Core.Messaging.IEnvelope, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 36
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public GetPersistentSubscriptionStats(IEnvelope envelope, string eventStreamId, string groupName)
    parameters:
    - id: envelope
      type: EventStore.Core.Messaging.IEnvelope
    - id: eventStreamId
      type: System.String
    - id: groupName
      type: System.String
    content.vb: Public Sub New(envelope As IEnvelope, eventStreamId As String, groupName As String)
  overload: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<MonitoringMessage.GetPersistentSubscriptionStats>()
  nameWithType: ProtobufExtensions.Serialize<MonitoringMessage.GetPersistentSubscriptionStats>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of MonitoringMessage.GetPersistentSubscriptionStats)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats)()
  name.vb: Serialize(Of MonitoringMessage.GetPersistentSubscriptionStats)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<MonitoringMessage.GetPersistentSubscriptionStats>
    nameWithType: ProtobufExtensions.Serialize<MonitoringMessage.GetPersistentSubscriptionStats>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of MonitoringMessage.GetPersistentSubscriptionStats)
    nameWithType: ProtobufExtensions.Serialize(Of MonitoringMessage.GetPersistentSubscriptionStats)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<MonitoringMessage.GetPersistentSubscriptionStats>()
  nameWithType: ProtobufExtensions.SerializeToArray<MonitoringMessage.GetPersistentSubscriptionStats>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of MonitoringMessage.GetPersistentSubscriptionStats)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats)()
  name.vb: SerializeToArray(Of MonitoringMessage.GetPersistentSubscriptionStats)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<MonitoringMessage.GetPersistentSubscriptionStats>
    nameWithType: ProtobufExtensions.SerializeToArray<MonitoringMessage.GetPersistentSubscriptionStats>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of MonitoringMessage.GetPersistentSubscriptionStats)
    nameWithType: ProtobufExtensions.SerializeToArray(Of MonitoringMessage.GetPersistentSubscriptionStats)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messaging.Message.MsgTypeId
  commentId: P:EventStore.Core.Messaging.Message.MsgTypeId
  parent: EventStore.Core.Messaging.Message
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId
- uid: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.MsgTypeId*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.MsgTypeId
  name: MsgTypeId
  nameWithType: MonitoringMessage.GetPersistentSubscriptionStats.MsgTypeId
  fullName: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.MsgTypeId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.EventStreamId*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.EventStreamId
  name: EventStreamId
  nameWithType: MonitoringMessage.GetPersistentSubscriptionStats.EventStreamId
  fullName: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.EventStreamId
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.GroupName*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.GroupName
  name: GroupName
  nameWithType: MonitoringMessage.GetPersistentSubscriptionStats.GroupName
  fullName: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.GroupName
- uid: EventStore.Core.Messaging.IEnvelope
  commentId: T:EventStore.Core.Messaging.IEnvelope
  parent: EventStore.Core.Messaging
  name: IEnvelope
  nameWithType: IEnvelope
  fullName: EventStore.Core.Messaging.IEnvelope
- uid: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.#ctor*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.#ctor
  name: GetPersistentSubscriptionStats
  nameWithType: MonitoringMessage.GetPersistentSubscriptionStats.GetPersistentSubscriptionStats
  fullName: EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.GetPersistentSubscriptionStats

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  commentId: T:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  id: MonitoringMessage.SubscriptionInfo
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.AveragePerSecond
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.BufferSize
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.CheckPointAfterMilliseconds
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.Connections
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.CountSinceLastMeasurement
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.EventStreamId
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ExtraStatistics
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.GroupName
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LastKnownMessage
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LastProcessedEventNumber
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LiveBufferCount
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LiveBufferSize
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxCheckPointCount
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxRetryCount
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxSubscriberCount
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MessageTimeoutMilliseconds
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MinCheckPointCount
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.NamedConsumerStrategy
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ReadBatchSize
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ReadBufferCount
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ResolveLinktos
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.RetryBufferCount
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.StartFrom
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.Status
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.TotalInFlightMessages
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.TotalItems
  langs:
  - csharp
  - vb
  name: MonitoringMessage.SubscriptionInfo
  nameWithType: MonitoringMessage.SubscriptionInfo
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: SubscriptionInfo
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 88
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class SubscriptionInfo : object'
    content.vb: >-
      Public Class SubscriptionInfo
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.EventStreamId
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.EventStreamId
  id: EventStreamId
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: EventStreamId
  nameWithType: MonitoringMessage.SubscriptionInfo.EventStreamId
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.EventStreamId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EventStreamId
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 90
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string EventStreamId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EventStreamId As String
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.EventStreamId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.GroupName
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.GroupName
  id: GroupName
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: GroupName
  nameWithType: MonitoringMessage.SubscriptionInfo.GroupName
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.GroupName
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: GroupName
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 91
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string GroupName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GroupName As String
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.GroupName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.Status
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.Status
  id: Status
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: MonitoringMessage.SubscriptionInfo.Status
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.Status
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Status
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 92
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string Status { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Status As String
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.Connections
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.Connections
  id: Connections
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: Connections
  nameWithType: MonitoringMessage.SubscriptionInfo.Connections
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.Connections
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Connections
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 93
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public List<MonitoringMessage.ConnectionInfo> Connections { get; set; }
    parameters: []
    return:
      type: List{EventStore.Core.Messages.MonitoringMessage.ConnectionInfo}
    content.vb: Public Property Connections As List(Of MonitoringMessage.ConnectionInfo)
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.Connections*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.AveragePerSecond
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.AveragePerSecond
  id: AveragePerSecond
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: AveragePerSecond
  nameWithType: MonitoringMessage.SubscriptionInfo.AveragePerSecond
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.AveragePerSecond
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: AveragePerSecond
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 94
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int AveragePerSecond { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AveragePerSecond As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.AveragePerSecond*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.TotalItems
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.TotalItems
  id: TotalItems
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: TotalItems
  nameWithType: MonitoringMessage.SubscriptionInfo.TotalItems
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.TotalItems
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TotalItems
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 95
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long TotalItems { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property TotalItems As Long
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.TotalItems*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.CountSinceLastMeasurement
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.CountSinceLastMeasurement
  id: CountSinceLastMeasurement
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: CountSinceLastMeasurement
  nameWithType: MonitoringMessage.SubscriptionInfo.CountSinceLastMeasurement
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.CountSinceLastMeasurement
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CountSinceLastMeasurement
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 96
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long CountSinceLastMeasurement { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property CountSinceLastMeasurement As Long
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.CountSinceLastMeasurement*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LastProcessedEventNumber
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LastProcessedEventNumber
  id: LastProcessedEventNumber
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: LastProcessedEventNumber
  nameWithType: MonitoringMessage.SubscriptionInfo.LastProcessedEventNumber
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LastProcessedEventNumber
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: LastProcessedEventNumber
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 97
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long LastProcessedEventNumber { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property LastProcessedEventNumber As Long
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LastProcessedEventNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LastKnownMessage
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LastKnownMessage
  id: LastKnownMessage
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: LastKnownMessage
  nameWithType: MonitoringMessage.SubscriptionInfo.LastKnownMessage
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LastKnownMessage
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: LastKnownMessage
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 98
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long LastKnownMessage { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property LastKnownMessage As Long
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LastKnownMessage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ResolveLinktos
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ResolveLinktos
  id: ResolveLinktos
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: ResolveLinktos
  nameWithType: MonitoringMessage.SubscriptionInfo.ResolveLinktos
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ResolveLinktos
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ResolveLinktos
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 99
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public bool ResolveLinktos { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ResolveLinktos As Boolean
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ResolveLinktos*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.StartFrom
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.StartFrom
  id: StartFrom
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: StartFrom
  nameWithType: MonitoringMessage.SubscriptionInfo.StartFrom
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.StartFrom
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: StartFrom
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 100
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long StartFrom { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property StartFrom As Long
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.StartFrom*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MessageTimeoutMilliseconds
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MessageTimeoutMilliseconds
  id: MessageTimeoutMilliseconds
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: MessageTimeoutMilliseconds
  nameWithType: MonitoringMessage.SubscriptionInfo.MessageTimeoutMilliseconds
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MessageTimeoutMilliseconds
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MessageTimeoutMilliseconds
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 101
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int MessageTimeoutMilliseconds { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MessageTimeoutMilliseconds As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MessageTimeoutMilliseconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ExtraStatistics
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ExtraStatistics
  id: ExtraStatistics
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: ExtraStatistics
  nameWithType: MonitoringMessage.SubscriptionInfo.ExtraStatistics
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ExtraStatistics
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ExtraStatistics
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 102
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public bool ExtraStatistics { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ExtraStatistics As Boolean
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ExtraStatistics*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxRetryCount
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxRetryCount
  id: MaxRetryCount
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: MaxRetryCount
  nameWithType: MonitoringMessage.SubscriptionInfo.MaxRetryCount
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxRetryCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MaxRetryCount
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 103
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int MaxRetryCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxRetryCount As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxRetryCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LiveBufferSize
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LiveBufferSize
  id: LiveBufferSize
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: LiveBufferSize
  nameWithType: MonitoringMessage.SubscriptionInfo.LiveBufferSize
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LiveBufferSize
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: LiveBufferSize
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 104
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int LiveBufferSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property LiveBufferSize As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LiveBufferSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.BufferSize
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.BufferSize
  id: BufferSize
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: BufferSize
  nameWithType: MonitoringMessage.SubscriptionInfo.BufferSize
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.BufferSize
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: BufferSize
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 105
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int BufferSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property BufferSize As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.BufferSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ReadBatchSize
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ReadBatchSize
  id: ReadBatchSize
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: ReadBatchSize
  nameWithType: MonitoringMessage.SubscriptionInfo.ReadBatchSize
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ReadBatchSize
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReadBatchSize
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 106
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int ReadBatchSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ReadBatchSize As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ReadBatchSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.CheckPointAfterMilliseconds
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.CheckPointAfterMilliseconds
  id: CheckPointAfterMilliseconds
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: CheckPointAfterMilliseconds
  nameWithType: MonitoringMessage.SubscriptionInfo.CheckPointAfterMilliseconds
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.CheckPointAfterMilliseconds
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CheckPointAfterMilliseconds
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 107
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int CheckPointAfterMilliseconds { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CheckPointAfterMilliseconds As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.CheckPointAfterMilliseconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MinCheckPointCount
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MinCheckPointCount
  id: MinCheckPointCount
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: MinCheckPointCount
  nameWithType: MonitoringMessage.SubscriptionInfo.MinCheckPointCount
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MinCheckPointCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MinCheckPointCount
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 108
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int MinCheckPointCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MinCheckPointCount As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MinCheckPointCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxCheckPointCount
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxCheckPointCount
  id: MaxCheckPointCount
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: MaxCheckPointCount
  nameWithType: MonitoringMessage.SubscriptionInfo.MaxCheckPointCount
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxCheckPointCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MaxCheckPointCount
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 109
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int MaxCheckPointCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxCheckPointCount As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxCheckPointCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ReadBufferCount
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ReadBufferCount
  id: ReadBufferCount
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: ReadBufferCount
  nameWithType: MonitoringMessage.SubscriptionInfo.ReadBufferCount
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ReadBufferCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReadBufferCount
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 110
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int ReadBufferCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ReadBufferCount As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ReadBufferCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LiveBufferCount
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LiveBufferCount
  id: LiveBufferCount
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: LiveBufferCount
  nameWithType: MonitoringMessage.SubscriptionInfo.LiveBufferCount
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LiveBufferCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: LiveBufferCount
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 111
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long LiveBufferCount { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property LiveBufferCount As Long
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LiveBufferCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.RetryBufferCount
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.RetryBufferCount
  id: RetryBufferCount
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: RetryBufferCount
  nameWithType: MonitoringMessage.SubscriptionInfo.RetryBufferCount
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.RetryBufferCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: RetryBufferCount
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 112
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int RetryBufferCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RetryBufferCount As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.RetryBufferCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.TotalInFlightMessages
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.TotalInFlightMessages
  id: TotalInFlightMessages
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: TotalInFlightMessages
  nameWithType: MonitoringMessage.SubscriptionInfo.TotalInFlightMessages
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.TotalInFlightMessages
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TotalInFlightMessages
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 113
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int TotalInFlightMessages { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TotalInFlightMessages As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.TotalInFlightMessages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.NamedConsumerStrategy
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.NamedConsumerStrategy
  id: NamedConsumerStrategy
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: NamedConsumerStrategy
  nameWithType: MonitoringMessage.SubscriptionInfo.NamedConsumerStrategy
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.NamedConsumerStrategy
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: NamedConsumerStrategy
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 114
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string NamedConsumerStrategy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NamedConsumerStrategy As String
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.NamedConsumerStrategy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxSubscriberCount
  commentId: P:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxSubscriberCount
  id: MaxSubscriberCount
  parent: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: MaxSubscriberCount
  nameWithType: MonitoringMessage.SubscriptionInfo.MaxSubscriberCount
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxSubscriberCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MaxSubscriberCount
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 115
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int MaxSubscriberCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxSubscriberCount As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxSubscriberCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<MonitoringMessage.SubscriptionInfo>()
  nameWithType: ProtobufExtensions.Serialize<MonitoringMessage.SubscriptionInfo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of MonitoringMessage.SubscriptionInfo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo)()
  name.vb: Serialize(Of MonitoringMessage.SubscriptionInfo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<MonitoringMessage.SubscriptionInfo>
    nameWithType: ProtobufExtensions.Serialize<MonitoringMessage.SubscriptionInfo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of MonitoringMessage.SubscriptionInfo)
    nameWithType: ProtobufExtensions.Serialize(Of MonitoringMessage.SubscriptionInfo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<MonitoringMessage.SubscriptionInfo>()
  nameWithType: ProtobufExtensions.SerializeToArray<MonitoringMessage.SubscriptionInfo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of MonitoringMessage.SubscriptionInfo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo)()
  name.vb: SerializeToArray(Of MonitoringMessage.SubscriptionInfo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<MonitoringMessage.SubscriptionInfo>
    nameWithType: ProtobufExtensions.SerializeToArray<MonitoringMessage.SubscriptionInfo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of MonitoringMessage.SubscriptionInfo)
    nameWithType: ProtobufExtensions.SerializeToArray(Of MonitoringMessage.SubscriptionInfo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.EventStreamId*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.EventStreamId
  isExternal: false
  name: EventStreamId
  nameWithType: MonitoringMessage.SubscriptionInfo.EventStreamId
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.EventStreamId
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.GroupName*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.GroupName
  isExternal: false
  name: GroupName
  nameWithType: MonitoringMessage.SubscriptionInfo.GroupName
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.GroupName
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.Status*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.Status
  isExternal: false
  name: Status
  nameWithType: MonitoringMessage.SubscriptionInfo.Status
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.Status
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.Connections*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.Connections
  isExternal: false
  name: Connections
  nameWithType: MonitoringMessage.SubscriptionInfo.Connections
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.Connections
- uid: List{EventStore.Core.Messages.MonitoringMessage.ConnectionInfo}
  commentId: '!:List{EventStore.Core.Messages.MonitoringMessage.ConnectionInfo}'
  definition: List`1
  name: List<MonitoringMessage.ConnectionInfo>
  nameWithType: List<MonitoringMessage.ConnectionInfo>
  fullName: List<EventStore.Core.Messages.MonitoringMessage.ConnectionInfo>
  nameWithType.vb: List(Of MonitoringMessage.ConnectionInfo)
  fullName.vb: List(Of EventStore.Core.Messages.MonitoringMessage.ConnectionInfo)
  name.vb: List(Of MonitoringMessage.ConnectionInfo)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo
    name: MonitoringMessage.ConnectionInfo
    nameWithType: MonitoringMessage.ConnectionInfo
    fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo
    name: MonitoringMessage.ConnectionInfo
    nameWithType: MonitoringMessage.ConnectionInfo
    fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.AveragePerSecond*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.AveragePerSecond
  isExternal: false
  name: AveragePerSecond
  nameWithType: MonitoringMessage.SubscriptionInfo.AveragePerSecond
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.AveragePerSecond
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.TotalItems*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.TotalItems
  isExternal: false
  name: TotalItems
  nameWithType: MonitoringMessage.SubscriptionInfo.TotalItems
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.TotalItems
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.CountSinceLastMeasurement*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.CountSinceLastMeasurement
  isExternal: false
  name: CountSinceLastMeasurement
  nameWithType: MonitoringMessage.SubscriptionInfo.CountSinceLastMeasurement
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.CountSinceLastMeasurement
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LastProcessedEventNumber*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LastProcessedEventNumber
  isExternal: false
  name: LastProcessedEventNumber
  nameWithType: MonitoringMessage.SubscriptionInfo.LastProcessedEventNumber
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LastProcessedEventNumber
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LastKnownMessage*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LastKnownMessage
  isExternal: false
  name: LastKnownMessage
  nameWithType: MonitoringMessage.SubscriptionInfo.LastKnownMessage
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LastKnownMessage
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ResolveLinktos*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ResolveLinktos
  isExternal: false
  name: ResolveLinktos
  nameWithType: MonitoringMessage.SubscriptionInfo.ResolveLinktos
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ResolveLinktos
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.StartFrom*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.StartFrom
  isExternal: false
  name: StartFrom
  nameWithType: MonitoringMessage.SubscriptionInfo.StartFrom
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.StartFrom
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MessageTimeoutMilliseconds*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MessageTimeoutMilliseconds
  isExternal: false
  name: MessageTimeoutMilliseconds
  nameWithType: MonitoringMessage.SubscriptionInfo.MessageTimeoutMilliseconds
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MessageTimeoutMilliseconds
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ExtraStatistics*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ExtraStatistics
  isExternal: false
  name: ExtraStatistics
  nameWithType: MonitoringMessage.SubscriptionInfo.ExtraStatistics
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ExtraStatistics
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxRetryCount*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxRetryCount
  isExternal: false
  name: MaxRetryCount
  nameWithType: MonitoringMessage.SubscriptionInfo.MaxRetryCount
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxRetryCount
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LiveBufferSize*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LiveBufferSize
  isExternal: false
  name: LiveBufferSize
  nameWithType: MonitoringMessage.SubscriptionInfo.LiveBufferSize
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LiveBufferSize
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.BufferSize*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.BufferSize
  isExternal: false
  name: BufferSize
  nameWithType: MonitoringMessage.SubscriptionInfo.BufferSize
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.BufferSize
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ReadBatchSize*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ReadBatchSize
  isExternal: false
  name: ReadBatchSize
  nameWithType: MonitoringMessage.SubscriptionInfo.ReadBatchSize
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ReadBatchSize
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.CheckPointAfterMilliseconds*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.CheckPointAfterMilliseconds
  isExternal: false
  name: CheckPointAfterMilliseconds
  nameWithType: MonitoringMessage.SubscriptionInfo.CheckPointAfterMilliseconds
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.CheckPointAfterMilliseconds
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MinCheckPointCount*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MinCheckPointCount
  isExternal: false
  name: MinCheckPointCount
  nameWithType: MonitoringMessage.SubscriptionInfo.MinCheckPointCount
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MinCheckPointCount
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxCheckPointCount*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxCheckPointCount
  isExternal: false
  name: MaxCheckPointCount
  nameWithType: MonitoringMessage.SubscriptionInfo.MaxCheckPointCount
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxCheckPointCount
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ReadBufferCount*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ReadBufferCount
  isExternal: false
  name: ReadBufferCount
  nameWithType: MonitoringMessage.SubscriptionInfo.ReadBufferCount
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.ReadBufferCount
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LiveBufferCount*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LiveBufferCount
  isExternal: false
  name: LiveBufferCount
  nameWithType: MonitoringMessage.SubscriptionInfo.LiveBufferCount
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.LiveBufferCount
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.RetryBufferCount*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.RetryBufferCount
  isExternal: false
  name: RetryBufferCount
  nameWithType: MonitoringMessage.SubscriptionInfo.RetryBufferCount
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.RetryBufferCount
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.TotalInFlightMessages*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.TotalInFlightMessages
  isExternal: false
  name: TotalInFlightMessages
  nameWithType: MonitoringMessage.SubscriptionInfo.TotalInFlightMessages
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.TotalInFlightMessages
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.NamedConsumerStrategy*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.NamedConsumerStrategy
  isExternal: false
  name: NamedConsumerStrategy
  nameWithType: MonitoringMessage.SubscriptionInfo.NamedConsumerStrategy
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.NamedConsumerStrategy
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxSubscriberCount*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxSubscriberCount
  isExternal: false
  name: MaxSubscriberCount
  nameWithType: MonitoringMessage.SubscriptionInfo.MaxSubscriberCount
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.MaxSubscriberCount

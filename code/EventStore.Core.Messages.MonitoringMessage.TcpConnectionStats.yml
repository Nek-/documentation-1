### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats
  commentId: T:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats
  id: MonitoringMessage.TcpConnectionStats
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.ClientConnectionName
  - EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.ConnectionId
  - EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.IsExternalConnection
  - EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.IsSslConnection
  - EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.LocalEndPoint
  - EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.PendingReceivedBytes
  - EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.PendingSendBytes
  - EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.RemoteEndPoint
  - EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.TotalBytesReceived
  - EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.TotalBytesSent
  langs:
  - csharp
  - vb
  name: MonitoringMessage.TcpConnectionStats
  nameWithType: MonitoringMessage.TcpConnectionStats
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: TcpConnectionStats
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 198
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class TcpConnectionStats : object'
    content.vb: >-
      Public Class TcpConnectionStats
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.RemoteEndPoint
  commentId: P:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.RemoteEndPoint
  id: RemoteEndPoint
  parent: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats
  langs:
  - csharp
  - vb
  name: RemoteEndPoint
  nameWithType: MonitoringMessage.TcpConnectionStats.RemoteEndPoint
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.RemoteEndPoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: RemoteEndPoint
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 200
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string RemoteEndPoint { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RemoteEndPoint As String
  overload: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.RemoteEndPoint*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.LocalEndPoint
  commentId: P:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.LocalEndPoint
  id: LocalEndPoint
  parent: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats
  langs:
  - csharp
  - vb
  name: LocalEndPoint
  nameWithType: MonitoringMessage.TcpConnectionStats.LocalEndPoint
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.LocalEndPoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: LocalEndPoint
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 201
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string LocalEndPoint { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LocalEndPoint As String
  overload: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.LocalEndPoint*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.ClientConnectionName
  commentId: P:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.ClientConnectionName
  id: ClientConnectionName
  parent: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats
  langs:
  - csharp
  - vb
  name: ClientConnectionName
  nameWithType: MonitoringMessage.TcpConnectionStats.ClientConnectionName
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.ClientConnectionName
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ClientConnectionName
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 202
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string ClientConnectionName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClientConnectionName As String
  overload: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.ClientConnectionName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.ConnectionId
  commentId: P:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.ConnectionId
  id: ConnectionId
  parent: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats
  langs:
  - csharp
  - vb
  name: ConnectionId
  nameWithType: MonitoringMessage.TcpConnectionStats.ConnectionId
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.ConnectionId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ConnectionId
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 203
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public Guid ConnectionId { get; set; }
    parameters: []
    return:
      type: Guid
    content.vb: Public Property ConnectionId As Guid
  overload: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.ConnectionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.TotalBytesSent
  commentId: P:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.TotalBytesSent
  id: TotalBytesSent
  parent: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats
  langs:
  - csharp
  - vb
  name: TotalBytesSent
  nameWithType: MonitoringMessage.TcpConnectionStats.TotalBytesSent
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.TotalBytesSent
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: TotalBytesSent
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 204
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long TotalBytesSent { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property TotalBytesSent As Long
  overload: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.TotalBytesSent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.TotalBytesReceived
  commentId: P:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.TotalBytesReceived
  id: TotalBytesReceived
  parent: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats
  langs:
  - csharp
  - vb
  name: TotalBytesReceived
  nameWithType: MonitoringMessage.TcpConnectionStats.TotalBytesReceived
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.TotalBytesReceived
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: TotalBytesReceived
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 205
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long TotalBytesReceived { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property TotalBytesReceived As Long
  overload: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.TotalBytesReceived*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.PendingSendBytes
  commentId: P:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.PendingSendBytes
  id: PendingSendBytes
  parent: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats
  langs:
  - csharp
  - vb
  name: PendingSendBytes
  nameWithType: MonitoringMessage.TcpConnectionStats.PendingSendBytes
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.PendingSendBytes
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: PendingSendBytes
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 206
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int PendingSendBytes { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PendingSendBytes As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.PendingSendBytes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.PendingReceivedBytes
  commentId: P:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.PendingReceivedBytes
  id: PendingReceivedBytes
  parent: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats
  langs:
  - csharp
  - vb
  name: PendingReceivedBytes
  nameWithType: MonitoringMessage.TcpConnectionStats.PendingReceivedBytes
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.PendingReceivedBytes
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: PendingReceivedBytes
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 207
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int PendingReceivedBytes { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PendingReceivedBytes As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.PendingReceivedBytes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.IsExternalConnection
  commentId: P:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.IsExternalConnection
  id: IsExternalConnection
  parent: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats
  langs:
  - csharp
  - vb
  name: IsExternalConnection
  nameWithType: MonitoringMessage.TcpConnectionStats.IsExternalConnection
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.IsExternalConnection
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: IsExternalConnection
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 208
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public bool IsExternalConnection { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsExternalConnection As Boolean
  overload: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.IsExternalConnection*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.IsSslConnection
  commentId: P:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.IsSslConnection
  id: IsSslConnection
  parent: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats
  langs:
  - csharp
  - vb
  name: IsSslConnection
  nameWithType: MonitoringMessage.TcpConnectionStats.IsSslConnection
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.IsSslConnection
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: IsSslConnection
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 209
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public bool IsSslConnection { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSslConnection As Boolean
  overload: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.IsSslConnection*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<MonitoringMessage.TcpConnectionStats>()
  nameWithType: ProtobufExtensions.Serialize<MonitoringMessage.TcpConnectionStats>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of MonitoringMessage.TcpConnectionStats)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats)()
  name.vb: Serialize(Of MonitoringMessage.TcpConnectionStats)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<MonitoringMessage.TcpConnectionStats>
    nameWithType: ProtobufExtensions.Serialize<MonitoringMessage.TcpConnectionStats>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of MonitoringMessage.TcpConnectionStats)
    nameWithType: ProtobufExtensions.Serialize(Of MonitoringMessage.TcpConnectionStats)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<MonitoringMessage.TcpConnectionStats>()
  nameWithType: ProtobufExtensions.SerializeToArray<MonitoringMessage.TcpConnectionStats>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of MonitoringMessage.TcpConnectionStats)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats)()
  name.vb: SerializeToArray(Of MonitoringMessage.TcpConnectionStats)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<MonitoringMessage.TcpConnectionStats>
    nameWithType: ProtobufExtensions.SerializeToArray<MonitoringMessage.TcpConnectionStats>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of MonitoringMessage.TcpConnectionStats)
    nameWithType: ProtobufExtensions.SerializeToArray(Of MonitoringMessage.TcpConnectionStats)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.RemoteEndPoint*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.RemoteEndPoint
  name: RemoteEndPoint
  nameWithType: MonitoringMessage.TcpConnectionStats.RemoteEndPoint
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.RemoteEndPoint
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.LocalEndPoint*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.LocalEndPoint
  name: LocalEndPoint
  nameWithType: MonitoringMessage.TcpConnectionStats.LocalEndPoint
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.LocalEndPoint
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.ClientConnectionName*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.ClientConnectionName
  name: ClientConnectionName
  nameWithType: MonitoringMessage.TcpConnectionStats.ClientConnectionName
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.ClientConnectionName
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.ConnectionId*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.ConnectionId
  name: ConnectionId
  nameWithType: MonitoringMessage.TcpConnectionStats.ConnectionId
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.ConnectionId
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.TotalBytesSent*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.TotalBytesSent
  name: TotalBytesSent
  nameWithType: MonitoringMessage.TcpConnectionStats.TotalBytesSent
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.TotalBytesSent
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.TotalBytesReceived*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.TotalBytesReceived
  name: TotalBytesReceived
  nameWithType: MonitoringMessage.TcpConnectionStats.TotalBytesReceived
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.TotalBytesReceived
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.PendingSendBytes*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.PendingSendBytes
  name: PendingSendBytes
  nameWithType: MonitoringMessage.TcpConnectionStats.PendingSendBytes
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.PendingSendBytes
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.PendingReceivedBytes*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.PendingReceivedBytes
  name: PendingReceivedBytes
  nameWithType: MonitoringMessage.TcpConnectionStats.PendingReceivedBytes
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.PendingReceivedBytes
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.IsExternalConnection*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.IsExternalConnection
  name: IsExternalConnection
  nameWithType: MonitoringMessage.TcpConnectionStats.IsExternalConnection
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.IsExternalConnection
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.IsSslConnection*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.IsSslConnection
  name: IsSslConnection
  nameWithType: MonitoringMessage.TcpConnectionStats.IsSslConnection
  fullName: EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.IsSslConnection

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk
  commentId: T:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk
  id: ReplicationMessage.RawChunkBulk
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.#ctor(Guid,Guid,System.Int32,System.Int32,System.Int32,System.Byte[],System.Boolean)
  - EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.ChunkEndNumber
  - EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.ChunkStartNumber
  - EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.CompleteChunk
  - EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId
  - EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId
  - EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.MasterId
  - EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.MsgTypeId
  - EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.RawBytes
  - EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.RawPosition
  - EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.SubscriptionId
  - EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.ToString
  langs:
  - csharp
  - vb
  name: ReplicationMessage.RawChunkBulk
  nameWithType: ReplicationMessage.RawChunkBulk
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RawChunkBulk
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 310
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class RawChunkBulk : Message, ReplicationMessage.IReplicationMessage'
    content.vb: >-
      Public Class RawChunkBulk
          Inherits Message
          Implements ReplicationMessage.IReplicationMessage
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  implements:
  - EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.MsgTypeId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: ReplicationMessage.RawChunkBulk.MsgTypeId
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 313
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messaging.Message.MsgTypeId
  overload: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId
  id: EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId
  isEii: true
  parent: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk
  langs:
  - csharp
  - vb
  name: ReplicationMessage.IReplicationMessage.MasterId
  nameWithType: ReplicationMessage.RawChunkBulk.ReplicationMessage.IReplicationMessage.MasterId
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 315
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: Guid ReplicationMessage.IReplicationMessage.MasterId { get; }
    parameters: []
    return:
      type: Guid
    content.vb: ReadOnly WriteOnly Property EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId As Guid Implements ReplicationMessage.IReplicationMessage.MasterId
  overload: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId*
  implements:
  - EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  nameWithType.vb: ReplicationMessage.RawChunkBulk.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId
  id: EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId
  isEii: true
  parent: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk
  langs:
  - csharp
  - vb
  name: ReplicationMessage.IReplicationMessage.SubscriptionId
  nameWithType: ReplicationMessage.RawChunkBulk.ReplicationMessage.IReplicationMessage.SubscriptionId
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 316
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: Guid ReplicationMessage.IReplicationMessage.SubscriptionId { get; }
    parameters: []
    return:
      type: Guid
    content.vb: ReadOnly WriteOnly Property EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId As Guid Implements ReplicationMessage.IReplicationMessage.SubscriptionId
  overload: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId*
  implements:
  - EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  nameWithType.vb: ReplicationMessage.RawChunkBulk.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.MasterId
  commentId: F:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.MasterId
  id: MasterId
  parent: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk
  langs:
  - csharp
  - vb
  name: MasterId
  nameWithType: ReplicationMessage.RawChunkBulk.MasterId
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.MasterId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MasterId
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 318
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Guid MasterId
    return:
      type: Guid
    content.vb: Public ReadOnly MasterId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.SubscriptionId
  commentId: F:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.SubscriptionId
  id: SubscriptionId
  parent: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: ReplicationMessage.RawChunkBulk.SubscriptionId
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.SubscriptionId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SubscriptionId
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 319
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Guid SubscriptionId
    return:
      type: Guid
    content.vb: Public ReadOnly SubscriptionId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.ChunkStartNumber
  commentId: F:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.ChunkStartNumber
  id: ChunkStartNumber
  parent: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk
  langs:
  - csharp
  - vb
  name: ChunkStartNumber
  nameWithType: ReplicationMessage.RawChunkBulk.ChunkStartNumber
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.ChunkStartNumber
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ChunkStartNumber
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 321
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int ChunkStartNumber
    return:
      type: System.Int32
    content.vb: Public ReadOnly ChunkStartNumber As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.ChunkEndNumber
  commentId: F:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.ChunkEndNumber
  id: ChunkEndNumber
  parent: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk
  langs:
  - csharp
  - vb
  name: ChunkEndNumber
  nameWithType: ReplicationMessage.RawChunkBulk.ChunkEndNumber
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.ChunkEndNumber
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ChunkEndNumber
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 322
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int ChunkEndNumber
    return:
      type: System.Int32
    content.vb: Public ReadOnly ChunkEndNumber As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.RawPosition
  commentId: F:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.RawPosition
  id: RawPosition
  parent: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk
  langs:
  - csharp
  - vb
  name: RawPosition
  nameWithType: ReplicationMessage.RawChunkBulk.RawPosition
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.RawPosition
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RawPosition
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 323
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int RawPosition
    return:
      type: System.Int32
    content.vb: Public ReadOnly RawPosition As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.RawBytes
  commentId: F:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.RawBytes
  id: RawBytes
  parent: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk
  langs:
  - csharp
  - vb
  name: RawBytes
  nameWithType: ReplicationMessage.RawChunkBulk.RawBytes
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.RawBytes
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RawBytes
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 324
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly byte[] RawBytes
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly RawBytes As Byte()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.CompleteChunk
  commentId: F:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.CompleteChunk
  id: CompleteChunk
  parent: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk
  langs:
  - csharp
  - vb
  name: CompleteChunk
  nameWithType: ReplicationMessage.RawChunkBulk.CompleteChunk
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.CompleteChunk
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CompleteChunk
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 325
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly bool CompleteChunk
    return:
      type: System.Boolean
    content.vb: Public ReadOnly CompleteChunk As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.#ctor(Guid,Guid,System.Int32,System.Int32,System.Int32,System.Byte[],System.Boolean)
  commentId: M:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.#ctor(Guid,Guid,System.Int32,System.Int32,System.Int32,System.Byte[],System.Boolean)
  id: '#ctor(Guid,Guid,System.Int32,System.Int32,System.Int32,System.Byte[],System.Boolean)'
  parent: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk
  langs:
  - csharp
  - vb
  name: RawChunkBulk(Guid, Guid, Int32, Int32, Int32, Byte[], Boolean)
  nameWithType: ReplicationMessage.RawChunkBulk.RawChunkBulk(Guid, Guid, Int32, Int32, Int32, Byte[], Boolean)
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.RawChunkBulk(Guid, Guid, System.Int32, System.Int32, System.Int32, System.Byte[], System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 327
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public RawChunkBulk(Guid masterId, Guid subscriptionId, int chunkStartNumber, int chunkEndNumber, int rawPosition, byte[] rawBytes, bool completeChunk)
    parameters:
    - id: masterId
      type: Guid
    - id: subscriptionId
      type: Guid
    - id: chunkStartNumber
      type: System.Int32
    - id: chunkEndNumber
      type: System.Int32
    - id: rawPosition
      type: System.Int32
    - id: rawBytes
      type: System.Byte[]
    - id: completeChunk
      type: System.Boolean
    content.vb: Public Sub New(masterId As Guid, subscriptionId As Guid, chunkStartNumber As Integer, chunkEndNumber As Integer, rawPosition As Integer, rawBytes As Byte(), completeChunk As Boolean)
  overload: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.#ctor*
  nameWithType.vb: ReplicationMessage.RawChunkBulk.RawChunkBulk(Guid, Guid, Int32, Int32, Int32, Byte(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.RawChunkBulk(Guid, Guid, System.Int32, System.Int32, System.Int32, System.Byte(), System.Boolean)
  name.vb: RawChunkBulk(Guid, Guid, Int32, Int32, Int32, Byte(), Boolean)
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.ToString
  commentId: M:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.ToString
  id: ToString
  parent: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ReplicationMessage.RawChunkBulk.ToString()
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 347
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
  commentId: T:EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
  parent: EventStore.Core.Messages
  isExternal: false
  name: ReplicationMessage.IReplicationMessage
  nameWithType: ReplicationMessage.IReplicationMessage
  fullName: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ReplicationMessage.RawChunkBulk>()
  nameWithType: ProtobufExtensions.Serialize<ReplicationMessage.RawChunkBulk>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ReplicationMessage.RawChunkBulk>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ReplicationMessage.RawChunkBulk)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ReplicationMessage.RawChunkBulk)()
  name.vb: Serialize(Of ReplicationMessage.RawChunkBulk)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ReplicationMessage.RawChunkBulk>
    nameWithType: ProtobufExtensions.Serialize<ReplicationMessage.RawChunkBulk>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ReplicationMessage.RawChunkBulk>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ReplicationMessage.RawChunkBulk)
    nameWithType: ProtobufExtensions.Serialize(Of ReplicationMessage.RawChunkBulk)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ReplicationMessage.RawChunkBulk)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ReplicationMessage.RawChunkBulk>()
  nameWithType: ProtobufExtensions.SerializeToArray<ReplicationMessage.RawChunkBulk>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ReplicationMessage.RawChunkBulk>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ReplicationMessage.RawChunkBulk)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ReplicationMessage.RawChunkBulk)()
  name.vb: SerializeToArray(Of ReplicationMessage.RawChunkBulk)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ReplicationMessage.RawChunkBulk>
    nameWithType: ProtobufExtensions.SerializeToArray<ReplicationMessage.RawChunkBulk>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ReplicationMessage.RawChunkBulk>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ReplicationMessage.RawChunkBulk)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ReplicationMessage.RawChunkBulk)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ReplicationMessage.RawChunkBulk)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messaging.Message.MsgTypeId
  commentId: P:EventStore.Core.Messaging.Message.MsgTypeId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.MsgTypeId*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.MsgTypeId
  isExternal: false
  name: MsgTypeId
  nameWithType: ReplicationMessage.RawChunkBulk.MsgTypeId
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.MsgTypeId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId
  isExternal: false
  name: ReplicationMessage.IReplicationMessage.MasterId
  nameWithType: ReplicationMessage.RawChunkBulk.ReplicationMessage.IReplicationMessage.MasterId
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  nameWithType.vb: ReplicationMessage.RawChunkBulk.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  name.vb: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
- uid: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  parent: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
  isExternal: false
  name: MasterId
  nameWithType: ReplicationMessage.IReplicationMessage.MasterId
  fullName: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId
  isExternal: false
  name: ReplicationMessage.IReplicationMessage.SubscriptionId
  nameWithType: ReplicationMessage.RawChunkBulk.ReplicationMessage.IReplicationMessage.SubscriptionId
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  nameWithType.vb: ReplicationMessage.RawChunkBulk.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  name.vb: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
- uid: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  parent: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
  isExternal: false
  name: SubscriptionId
  nameWithType: ReplicationMessage.IReplicationMessage.SubscriptionId
  fullName: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.#ctor*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.#ctor
  isExternal: false
  name: RawChunkBulk
  nameWithType: ReplicationMessage.RawChunkBulk.RawChunkBulk
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.RawChunkBulk
- uid: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.ToString*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.ToString
  isExternal: false
  name: ToString
  nameWithType: ReplicationMessage.RawChunkBulk.ToString
  fullName: EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.ToString
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

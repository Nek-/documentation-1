### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster
  commentId: T:EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster
  id: ReplicationMessage.SubscribeToMaster
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.#ctor(Guid,Guid,Guid)
  - EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId
  - EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId
  - EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.MasterId
  - EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.MsgTypeId
  - EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.StateCorrelationId
  - EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.SubscriptionId
  langs:
  - csharp
  - vb
  name: ReplicationMessage.SubscribeToMaster
  nameWithType: ReplicationMessage.SubscribeToMaster
  fullName: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SubscribeToMaster
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 152
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class SubscribeToMaster : Message, ReplicationMessage.IReplicationMessage'
    content.vb: >-
      Public Class SubscribeToMaster
          Inherits Message
          Implements ReplicationMessage.IReplicationMessage
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  implements:
  - EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.MsgTypeId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: ReplicationMessage.SubscribeToMaster.MsgTypeId
  fullName: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 155
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messaging.Message.MsgTypeId
  overload: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId
  id: EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId
  isEii: true
  parent: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster
  langs:
  - csharp
  - vb
  name: ReplicationMessage.IReplicationMessage.MasterId
  nameWithType: ReplicationMessage.SubscribeToMaster.ReplicationMessage.IReplicationMessage.MasterId
  fullName: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 157
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: Guid ReplicationMessage.IReplicationMessage.MasterId { get; }
    parameters: []
    return:
      type: Guid
    content.vb: ReadOnly WriteOnly Property EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId As Guid Implements ReplicationMessage.IReplicationMessage.MasterId
  overload: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId*
  implements:
  - EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  nameWithType.vb: ReplicationMessage.SubscribeToMaster.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
- uid: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId
  id: EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId
  isEii: true
  parent: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster
  langs:
  - csharp
  - vb
  name: ReplicationMessage.IReplicationMessage.SubscriptionId
  nameWithType: ReplicationMessage.SubscribeToMaster.ReplicationMessage.IReplicationMessage.SubscriptionId
  fullName: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 158
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: Guid ReplicationMessage.IReplicationMessage.SubscriptionId { get; }
    parameters: []
    return:
      type: Guid
    content.vb: ReadOnly WriteOnly Property EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId As Guid Implements ReplicationMessage.IReplicationMessage.SubscriptionId
  overload: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId*
  implements:
  - EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  nameWithType.vb: ReplicationMessage.SubscribeToMaster.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
- uid: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.StateCorrelationId
  commentId: F:EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.StateCorrelationId
  id: StateCorrelationId
  parent: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster
  langs:
  - csharp
  - vb
  name: StateCorrelationId
  nameWithType: ReplicationMessage.SubscribeToMaster.StateCorrelationId
  fullName: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.StateCorrelationId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StateCorrelationId
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 160
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Guid StateCorrelationId
    return:
      type: Guid
    content.vb: Public ReadOnly StateCorrelationId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.MasterId
  commentId: F:EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.MasterId
  id: MasterId
  parent: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster
  langs:
  - csharp
  - vb
  name: MasterId
  nameWithType: ReplicationMessage.SubscribeToMaster.MasterId
  fullName: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.MasterId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MasterId
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 161
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Guid MasterId
    return:
      type: Guid
    content.vb: Public ReadOnly MasterId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.SubscriptionId
  commentId: F:EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.SubscriptionId
  id: SubscriptionId
  parent: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: ReplicationMessage.SubscribeToMaster.SubscriptionId
  fullName: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.SubscriptionId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SubscriptionId
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 162
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Guid SubscriptionId
    return:
      type: Guid
    content.vb: Public ReadOnly SubscriptionId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.#ctor(Guid,Guid,Guid)
  commentId: M:EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.#ctor(Guid,Guid,Guid)
  id: '#ctor(Guid,Guid,Guid)'
  parent: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster
  langs:
  - csharp
  - vb
  name: SubscribeToMaster(Guid, Guid, Guid)
  nameWithType: ReplicationMessage.SubscribeToMaster.SubscribeToMaster(Guid, Guid, Guid)
  fullName: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.SubscribeToMaster(Guid, Guid, Guid)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 164
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public SubscribeToMaster(Guid stateCorrelationId, Guid masterId, Guid subscriptionId)
    parameters:
    - id: stateCorrelationId
      type: Guid
    - id: masterId
      type: Guid
    - id: subscriptionId
      type: Guid
    content.vb: Public Sub New(stateCorrelationId As Guid, masterId As Guid, subscriptionId As Guid)
  overload: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
  commentId: T:EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
  parent: EventStore.Core.Messages
  isExternal: false
  name: ReplicationMessage.IReplicationMessage
  nameWithType: ReplicationMessage.IReplicationMessage
  fullName: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ReplicationMessage.SubscribeToMaster>()
  nameWithType: ProtobufExtensions.Serialize<ReplicationMessage.SubscribeToMaster>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ReplicationMessage.SubscribeToMaster)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster)()
  name.vb: Serialize(Of ReplicationMessage.SubscribeToMaster)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ReplicationMessage.SubscribeToMaster>
    nameWithType: ProtobufExtensions.Serialize<ReplicationMessage.SubscribeToMaster>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ReplicationMessage.SubscribeToMaster)
    nameWithType: ProtobufExtensions.Serialize(Of ReplicationMessage.SubscribeToMaster)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ReplicationMessage.SubscribeToMaster>()
  nameWithType: ProtobufExtensions.SerializeToArray<ReplicationMessage.SubscribeToMaster>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ReplicationMessage.SubscribeToMaster)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster)()
  name.vb: SerializeToArray(Of ReplicationMessage.SubscribeToMaster)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ReplicationMessage.SubscribeToMaster>
    nameWithType: ProtobufExtensions.SerializeToArray<ReplicationMessage.SubscribeToMaster>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ReplicationMessage.SubscribeToMaster)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ReplicationMessage.SubscribeToMaster)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messaging.Message.MsgTypeId
  commentId: P:EventStore.Core.Messaging.Message.MsgTypeId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId
- uid: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.MsgTypeId*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.MsgTypeId
  isExternal: false
  name: MsgTypeId
  nameWithType: ReplicationMessage.SubscribeToMaster.MsgTypeId
  fullName: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.MsgTypeId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId
  isExternal: false
  name: ReplicationMessage.IReplicationMessage.MasterId
  nameWithType: ReplicationMessage.SubscribeToMaster.ReplicationMessage.IReplicationMessage.MasterId
  fullName: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  nameWithType.vb: ReplicationMessage.SubscribeToMaster.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  name.vb: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
- uid: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  parent: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
  isExternal: false
  name: MasterId
  nameWithType: ReplicationMessage.IReplicationMessage.MasterId
  fullName: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId
  isExternal: false
  name: ReplicationMessage.IReplicationMessage.SubscriptionId
  nameWithType: ReplicationMessage.SubscribeToMaster.ReplicationMessage.IReplicationMessage.SubscriptionId
  fullName: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  nameWithType.vb: ReplicationMessage.SubscribeToMaster.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  name.vb: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
- uid: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  parent: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
  isExternal: false
  name: SubscriptionId
  nameWithType: ReplicationMessage.IReplicationMessage.SubscriptionId
  fullName: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
- uid: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.#ctor*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.#ctor
  isExternal: false
  name: SubscribeToMaster
  nameWithType: ReplicationMessage.SubscribeToMaster.SubscribeToMaster
  fullName: EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.SubscribeToMaster

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk
  commentId: T:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk
  id: ReplicationMessageDto.RawChunkBulk
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.#ctor
  - EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.#ctor(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Int32,System.Byte[],System.Boolean)
  - EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.ChunkEndNumber
  - EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.ChunkStartNumber
  - EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.CompleteChunk
  - EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.MasterId
  - EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawBytes
  - EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawPosition
  - EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.SubscriptionId
  langs:
  - csharp
  - vb
  name: ReplicationMessageDto.RawChunkBulk
  nameWithType: ReplicationMessageDto.RawChunkBulk
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RawChunkBulk
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 232
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class RawChunkBulk : object'
    content.vb: >-
      Public Class RawChunkBulk

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.MasterId
  commentId: P:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.MasterId
  id: MasterId
  parent: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk
  langs:
  - csharp
  - vb
  name: MasterId
  nameWithType: ReplicationMessageDto.RawChunkBulk.MasterId
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.MasterId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MasterId
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 235
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public byte[] MasterId { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property MasterId As Byte()
  overload: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.MasterId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.SubscriptionId
  commentId: P:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.SubscriptionId
  id: SubscriptionId
  parent: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: ReplicationMessageDto.RawChunkBulk.SubscriptionId
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.SubscriptionId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SubscriptionId
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 238
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public byte[] SubscriptionId { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property SubscriptionId As Byte()
  overload: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.SubscriptionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.ChunkStartNumber
  commentId: P:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.ChunkStartNumber
  id: ChunkStartNumber
  parent: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk
  langs:
  - csharp
  - vb
  name: ChunkStartNumber
  nameWithType: ReplicationMessageDto.RawChunkBulk.ChunkStartNumber
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.ChunkStartNumber
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ChunkStartNumber
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 241
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int ChunkStartNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ChunkStartNumber As Integer
  overload: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.ChunkStartNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.ChunkEndNumber
  commentId: P:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.ChunkEndNumber
  id: ChunkEndNumber
  parent: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk
  langs:
  - csharp
  - vb
  name: ChunkEndNumber
  nameWithType: ReplicationMessageDto.RawChunkBulk.ChunkEndNumber
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.ChunkEndNumber
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ChunkEndNumber
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 244
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int ChunkEndNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ChunkEndNumber As Integer
  overload: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.ChunkEndNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawPosition
  commentId: P:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawPosition
  id: RawPosition
  parent: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk
  langs:
  - csharp
  - vb
  name: RawPosition
  nameWithType: ReplicationMessageDto.RawChunkBulk.RawPosition
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RawPosition
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 247
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int RawPosition { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RawPosition As Integer
  overload: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawPosition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawBytes
  commentId: P:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawBytes
  id: RawBytes
  parent: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk
  langs:
  - csharp
  - vb
  name: RawBytes
  nameWithType: ReplicationMessageDto.RawChunkBulk.RawBytes
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawBytes
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RawBytes
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 250
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public byte[] RawBytes { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property RawBytes As Byte()
  overload: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawBytes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.CompleteChunk
  commentId: P:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.CompleteChunk
  id: CompleteChunk
  parent: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk
  langs:
  - csharp
  - vb
  name: CompleteChunk
  nameWithType: ReplicationMessageDto.RawChunkBulk.CompleteChunk
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.CompleteChunk
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CompleteChunk
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 253
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public bool CompleteChunk { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CompleteChunk As Boolean
  overload: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.CompleteChunk*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.#ctor
  commentId: M:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.#ctor
  id: '#ctor'
  parent: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk
  langs:
  - csharp
  - vb
  name: RawChunkBulk()
  nameWithType: ReplicationMessageDto.RawChunkBulk.RawChunkBulk()
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawChunkBulk()
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 256
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public RawChunkBulk()
    content.vb: Public Sub New
  overload: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.#ctor(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Int32,System.Byte[],System.Boolean)
  commentId: M:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.#ctor(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Int32,System.Byte[],System.Boolean)
  id: '#ctor(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Int32,System.Byte[],System.Boolean)'
  parent: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk
  langs:
  - csharp
  - vb
  name: RawChunkBulk(Byte[], Byte[], Int32, Int32, Int32, Byte[], Boolean)
  nameWithType: ReplicationMessageDto.RawChunkBulk.RawChunkBulk(Byte[], Byte[], Int32, Int32, Int32, Byte[], Boolean)
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawChunkBulk(System.Byte[], System.Byte[], System.Int32, System.Int32, System.Int32, System.Byte[], System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 260
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public RawChunkBulk(byte[] masterId, byte[] subscriptionId, int chunkStartNumber, int chunkEndNumber, int rawPosition, byte[] rawBytes, bool completeChunk)
    parameters:
    - id: masterId
      type: System.Byte[]
    - id: subscriptionId
      type: System.Byte[]
    - id: chunkStartNumber
      type: System.Int32
    - id: chunkEndNumber
      type: System.Int32
    - id: rawPosition
      type: System.Int32
    - id: rawBytes
      type: System.Byte[]
    - id: completeChunk
      type: System.Boolean
    content.vb: Public Sub New(masterId As Byte(), subscriptionId As Byte(), chunkStartNumber As Integer, chunkEndNumber As Integer, rawPosition As Integer, rawBytes As Byte(), completeChunk As Boolean)
  overload: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.#ctor*
  nameWithType.vb: ReplicationMessageDto.RawChunkBulk.RawChunkBulk(Byte(), Byte(), Int32, Int32, Int32, Byte(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawChunkBulk(System.Byte(), System.Byte(), System.Int32, System.Int32, System.Int32, System.Byte(), System.Boolean)
  name.vb: RawChunkBulk(Byte(), Byte(), Int32, Int32, Int32, Byte(), Boolean)
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ReplicationMessageDto.RawChunkBulk>()
  nameWithType: ProtobufExtensions.Serialize<ReplicationMessageDto.RawChunkBulk>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ReplicationMessageDto.RawChunkBulk)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk)()
  name.vb: Serialize(Of ReplicationMessageDto.RawChunkBulk)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ReplicationMessageDto.RawChunkBulk>
    nameWithType: ProtobufExtensions.Serialize<ReplicationMessageDto.RawChunkBulk>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ReplicationMessageDto.RawChunkBulk)
    nameWithType: ProtobufExtensions.Serialize(Of ReplicationMessageDto.RawChunkBulk)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ReplicationMessageDto.RawChunkBulk>()
  nameWithType: ProtobufExtensions.SerializeToArray<ReplicationMessageDto.RawChunkBulk>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ReplicationMessageDto.RawChunkBulk)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk)()
  name.vb: SerializeToArray(Of ReplicationMessageDto.RawChunkBulk)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ReplicationMessageDto.RawChunkBulk>
    nameWithType: ProtobufExtensions.SerializeToArray<ReplicationMessageDto.RawChunkBulk>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ReplicationMessageDto.RawChunkBulk)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ReplicationMessageDto.RawChunkBulk)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.MasterId*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.MasterId
  isExternal: false
  name: MasterId
  nameWithType: ReplicationMessageDto.RawChunkBulk.MasterId
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.MasterId
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.SubscriptionId*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.SubscriptionId
  isExternal: false
  name: SubscriptionId
  nameWithType: ReplicationMessageDto.RawChunkBulk.SubscriptionId
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.SubscriptionId
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.ChunkStartNumber*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.ChunkStartNumber
  isExternal: false
  name: ChunkStartNumber
  nameWithType: ReplicationMessageDto.RawChunkBulk.ChunkStartNumber
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.ChunkStartNumber
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.ChunkEndNumber*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.ChunkEndNumber
  isExternal: false
  name: ChunkEndNumber
  nameWithType: ReplicationMessageDto.RawChunkBulk.ChunkEndNumber
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.ChunkEndNumber
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawPosition*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawPosition
  isExternal: false
  name: RawPosition
  nameWithType: ReplicationMessageDto.RawChunkBulk.RawPosition
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawPosition
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawBytes*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawBytes
  isExternal: false
  name: RawBytes
  nameWithType: ReplicationMessageDto.RawChunkBulk.RawBytes
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawBytes
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.CompleteChunk*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.CompleteChunk
  isExternal: false
  name: CompleteChunk
  nameWithType: ReplicationMessageDto.RawChunkBulk.CompleteChunk
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.CompleteChunk
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.#ctor*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.#ctor
  isExternal: false
  name: RawChunkBulk
  nameWithType: ReplicationMessageDto.RawChunkBulk.RawChunkBulk
  fullName: EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.RawChunkBulk

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted
  commentId: T:EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted
  id: StorageMessage.CheckStreamAccessCompleted
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.#ctor(Guid,System.String,System.Nullable{System.Int64},EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType,EventStore.Core.Services.Storage.ReaderIndex.StreamAccess)
  - EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.AccessResult
  - EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.AccessType
  - EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.CorrelationId
  - EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.EventStreamId
  - EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.MsgTypeId
  - EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.TransactionId
  langs:
  - csharp
  - vb
  name: StorageMessage.CheckStreamAccessCompleted
  nameWithType: StorageMessage.CheckStreamAccessCompleted
  fullName: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/StorageMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CheckStreamAccessCompleted
    path: ../EventStore/src/EventStore.Core/Messages/StorageMessage.cs
    startLine: 413
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class CheckStreamAccessCompleted : ClientMessage.ReadResponseMessage'
    content.vb: >-
      Public Class CheckStreamAccessCompleted
          Inherits ClientMessage.ReadResponseMessage
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  - EventStore.Core.Messages.ClientMessage.ReadResponseMessage
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.MsgTypeId
  commentId: P:EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: StorageMessage.CheckStreamAccessCompleted.MsgTypeId
  fullName: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/StorageMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Core/Messages/StorageMessage.cs
    startLine: 416
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messages.ClientMessage.ReadResponseMessage.MsgTypeId
  overload: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.CorrelationId
  commentId: F:EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.CorrelationId
  id: CorrelationId
  parent: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: StorageMessage.CheckStreamAccessCompleted.CorrelationId
  fullName: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.CorrelationId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/StorageMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CorrelationId
    path: ../EventStore/src/EventStore.Core/Messages/StorageMessage.cs
    startLine: 418
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Guid CorrelationId
    return:
      type: Guid
    content.vb: Public ReadOnly CorrelationId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.EventStreamId
  commentId: F:EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.EventStreamId
  id: EventStreamId
  parent: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted
  langs:
  - csharp
  - vb
  name: EventStreamId
  nameWithType: StorageMessage.CheckStreamAccessCompleted.EventStreamId
  fullName: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.EventStreamId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/StorageMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EventStreamId
    path: ../EventStore/src/EventStore.Core/Messages/StorageMessage.cs
    startLine: 419
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string EventStreamId
    return:
      type: System.String
    content.vb: Public ReadOnly EventStreamId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.TransactionId
  commentId: F:EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.TransactionId
  id: TransactionId
  parent: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted
  langs:
  - csharp
  - vb
  name: TransactionId
  nameWithType: StorageMessage.CheckStreamAccessCompleted.TransactionId
  fullName: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.TransactionId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/StorageMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TransactionId
    path: ../EventStore/src/EventStore.Core/Messages/StorageMessage.cs
    startLine: 420
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly long ? TransactionId
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public ReadOnly TransactionId As Long?
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.AccessType
  commentId: F:EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.AccessType
  id: AccessType
  parent: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted
  langs:
  - csharp
  - vb
  name: AccessType
  nameWithType: StorageMessage.CheckStreamAccessCompleted.AccessType
  fullName: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.AccessType
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/StorageMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AccessType
    path: ../EventStore/src/EventStore.Core/Messages/StorageMessage.cs
    startLine: 421
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly StreamAccessType AccessType
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType
    content.vb: Public ReadOnly AccessType As StreamAccessType
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.AccessResult
  commentId: F:EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.AccessResult
  id: AccessResult
  parent: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted
  langs:
  - csharp
  - vb
  name: AccessResult
  nameWithType: StorageMessage.CheckStreamAccessCompleted.AccessResult
  fullName: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.AccessResult
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/StorageMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AccessResult
    path: ../EventStore/src/EventStore.Core/Messages/StorageMessage.cs
    startLine: 422
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly StreamAccess AccessResult
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
    content.vb: Public ReadOnly AccessResult As StreamAccess
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.#ctor(Guid,System.String,System.Nullable{System.Int64},EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType,EventStore.Core.Services.Storage.ReaderIndex.StreamAccess)
  commentId: M:EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.#ctor(Guid,System.String,System.Nullable{System.Int64},EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType,EventStore.Core.Services.Storage.ReaderIndex.StreamAccess)
  id: '#ctor(Guid,System.String,System.Nullable{System.Int64},EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType,EventStore.Core.Services.Storage.ReaderIndex.StreamAccess)'
  parent: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted
  langs:
  - csharp
  - vb
  name: CheckStreamAccessCompleted(Guid, String, Nullable<Int64>, StreamAccessType, StreamAccess)
  nameWithType: StorageMessage.CheckStreamAccessCompleted.CheckStreamAccessCompleted(Guid, String, Nullable<Int64>, StreamAccessType, StreamAccess)
  fullName: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.CheckStreamAccessCompleted(Guid, System.String, System.Nullable<System.Int64>, EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType, EventStore.Core.Services.Storage.ReaderIndex.StreamAccess)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/StorageMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/StorageMessage.cs
    startLine: 424
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public CheckStreamAccessCompleted(Guid correlationId, string eventStreamId, long ? transactionId, StreamAccessType accessType, StreamAccess accessResult)
    parameters:
    - id: correlationId
      type: Guid
    - id: eventStreamId
      type: System.String
    - id: transactionId
      type: System.Nullable{System.Int64}
    - id: accessType
      type: EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType
    - id: accessResult
      type: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
    content.vb: Public Sub New(correlationId As Guid, eventStreamId As String, transactionId As Long?, accessType As StreamAccessType, accessResult As StreamAccess)
  overload: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.#ctor*
  nameWithType.vb: StorageMessage.CheckStreamAccessCompleted.CheckStreamAccessCompleted(Guid, String, Nullable(Of Int64), StreamAccessType, StreamAccess)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.CheckStreamAccessCompleted(Guid, System.String, System.Nullable(Of System.Int64), EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType, EventStore.Core.Services.Storage.ReaderIndex.StreamAccess)
  name.vb: CheckStreamAccessCompleted(Guid, String, Nullable(Of Int64), StreamAccessType, StreamAccess)
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messages.ClientMessage.ReadResponseMessage
  commentId: T:EventStore.Core.Messages.ClientMessage.ReadResponseMessage
  parent: EventStore.Core.Messages
  isExternal: false
  name: ClientMessage.ReadResponseMessage
  nameWithType: ClientMessage.ReadResponseMessage
  fullName: EventStore.Core.Messages.ClientMessage.ReadResponseMessage
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<StorageMessage.CheckStreamAccessCompleted>()
  nameWithType: ProtobufExtensions.Serialize<StorageMessage.CheckStreamAccessCompleted>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of StorageMessage.CheckStreamAccessCompleted)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted)()
  name.vb: Serialize(Of StorageMessage.CheckStreamAccessCompleted)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<StorageMessage.CheckStreamAccessCompleted>
    nameWithType: ProtobufExtensions.Serialize<StorageMessage.CheckStreamAccessCompleted>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of StorageMessage.CheckStreamAccessCompleted)
    nameWithType: ProtobufExtensions.Serialize(Of StorageMessage.CheckStreamAccessCompleted)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<StorageMessage.CheckStreamAccessCompleted>()
  nameWithType: ProtobufExtensions.SerializeToArray<StorageMessage.CheckStreamAccessCompleted>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of StorageMessage.CheckStreamAccessCompleted)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted)()
  name.vb: SerializeToArray(Of StorageMessage.CheckStreamAccessCompleted)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<StorageMessage.CheckStreamAccessCompleted>
    nameWithType: ProtobufExtensions.SerializeToArray<StorageMessage.CheckStreamAccessCompleted>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of StorageMessage.CheckStreamAccessCompleted)
    nameWithType: ProtobufExtensions.SerializeToArray(Of StorageMessage.CheckStreamAccessCompleted)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.ClientMessage.ReadResponseMessage.MsgTypeId
  commentId: P:EventStore.Core.Messages.ClientMessage.ReadResponseMessage.MsgTypeId
  parent: EventStore.Core.Messages.ClientMessage.ReadResponseMessage
  isExternal: false
  name: MsgTypeId
  nameWithType: ClientMessage.ReadResponseMessage.MsgTypeId
  fullName: EventStore.Core.Messages.ClientMessage.ReadResponseMessage.MsgTypeId
- uid: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.MsgTypeId*
  commentId: Overload:EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.MsgTypeId
  isExternal: false
  name: MsgTypeId
  nameWithType: StorageMessage.CheckStreamAccessCompleted.MsgTypeId
  fullName: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.MsgTypeId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType
  parent: EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: StreamAccessType
  nameWithType: StreamAccessType
  fullName: EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
  parent: EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: StreamAccess
  nameWithType: StreamAccess
  fullName: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
- uid: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.#ctor*
  commentId: Overload:EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.#ctor
  isExternal: false
  name: CheckStreamAccessCompleted
  nameWithType: StorageMessage.CheckStreamAccessCompleted.CheckStreamAccessCompleted
  fullName: EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.CheckStreamAccessCompleted

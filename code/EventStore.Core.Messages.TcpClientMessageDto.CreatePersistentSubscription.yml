### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  id: TcpClientMessageDto.CreatePersistentSubscription
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.#ctor(System.String,System.String,System.Boolean,System.Int64,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.BufferSize
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.CheckpointAfterTime
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.CheckpointMaxCount
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.CheckpointMinCount
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.EventStreamId
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.LiveBufferSize
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.MaxRetryCount
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.MessageTimeoutMilliseconds
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.NamedConsumerStrategy
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.PreferRoundRobin
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.ReadBatchSize
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.RecordStatistics
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.ResolveLinkTos
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.StartFrom
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.SubscriberMaxCount
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.SubscriptionGroupName
  langs:
  - csharp
  - vb
  name: TcpClientMessageDto.CreatePersistentSubscription
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreatePersistentSubscription
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 654
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class CreatePersistentSubscription : object'
    content.vb: >-
      Public Class CreatePersistentSubscription

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.SubscriptionGroupName
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.SubscriptionGroupName
  id: SubscriptionGroupName
  parent: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: SubscriptionGroupName
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.SubscriptionGroupName
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.SubscriptionGroupName
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SubscriptionGroupName
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 658
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string SubscriptionGroupName
    return:
      type: System.String
    content.vb: Public ReadOnly SubscriptionGroupName As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.EventStreamId
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.EventStreamId
  id: EventStreamId
  parent: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: EventStreamId
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.EventStreamId
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.EventStreamId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EventStreamId
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 661
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string EventStreamId
    return:
      type: System.String
    content.vb: Public ReadOnly EventStreamId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.ResolveLinkTos
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.ResolveLinkTos
  id: ResolveLinkTos
  parent: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: ResolveLinkTos
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.ResolveLinkTos
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.ResolveLinkTos
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ResolveLinkTos
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 664
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly bool ResolveLinkTos
    return:
      type: System.Boolean
    content.vb: Public ReadOnly ResolveLinkTos As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.StartFrom
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.StartFrom
  id: StartFrom
  parent: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: StartFrom
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.StartFrom
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.StartFrom
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StartFrom
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 667
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly long StartFrom
    return:
      type: System.Int64
    content.vb: Public ReadOnly StartFrom As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.MessageTimeoutMilliseconds
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.MessageTimeoutMilliseconds
  id: MessageTimeoutMilliseconds
  parent: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: MessageTimeoutMilliseconds
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.MessageTimeoutMilliseconds
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.MessageTimeoutMilliseconds
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MessageTimeoutMilliseconds
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 670
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int MessageTimeoutMilliseconds
    return:
      type: System.Int32
    content.vb: Public ReadOnly MessageTimeoutMilliseconds As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.RecordStatistics
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.RecordStatistics
  id: RecordStatistics
  parent: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: RecordStatistics
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.RecordStatistics
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.RecordStatistics
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RecordStatistics
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 673
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly bool RecordStatistics
    return:
      type: System.Boolean
    content.vb: Public ReadOnly RecordStatistics As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.LiveBufferSize
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.LiveBufferSize
  id: LiveBufferSize
  parent: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: LiveBufferSize
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.LiveBufferSize
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.LiveBufferSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: LiveBufferSize
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 676
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int LiveBufferSize
    return:
      type: System.Int32
    content.vb: Public ReadOnly LiveBufferSize As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.ReadBatchSize
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.ReadBatchSize
  id: ReadBatchSize
  parent: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: ReadBatchSize
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.ReadBatchSize
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.ReadBatchSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadBatchSize
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 679
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int ReadBatchSize
    return:
      type: System.Int32
    content.vb: Public ReadOnly ReadBatchSize As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.BufferSize
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.BufferSize
  id: BufferSize
  parent: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: BufferSize
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.BufferSize
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.BufferSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: BufferSize
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 682
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int BufferSize
    return:
      type: System.Int32
    content.vb: Public ReadOnly BufferSize As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.MaxRetryCount
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.MaxRetryCount
  id: MaxRetryCount
  parent: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: MaxRetryCount
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.MaxRetryCount
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.MaxRetryCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MaxRetryCount
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 685
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int MaxRetryCount
    return:
      type: System.Int32
    content.vb: Public ReadOnly MaxRetryCount As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.PreferRoundRobin
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.PreferRoundRobin
  id: PreferRoundRobin
  parent: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: PreferRoundRobin
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.PreferRoundRobin
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.PreferRoundRobin
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PreferRoundRobin
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 688
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly bool PreferRoundRobin
    return:
      type: System.Boolean
    content.vb: Public ReadOnly PreferRoundRobin As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.CheckpointAfterTime
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.CheckpointAfterTime
  id: CheckpointAfterTime
  parent: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: CheckpointAfterTime
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.CheckpointAfterTime
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.CheckpointAfterTime
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CheckpointAfterTime
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 691
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int CheckpointAfterTime
    return:
      type: System.Int32
    content.vb: Public ReadOnly CheckpointAfterTime As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.CheckpointMaxCount
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.CheckpointMaxCount
  id: CheckpointMaxCount
  parent: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: CheckpointMaxCount
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.CheckpointMaxCount
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.CheckpointMaxCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CheckpointMaxCount
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 694
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int CheckpointMaxCount
    return:
      type: System.Int32
    content.vb: Public ReadOnly CheckpointMaxCount As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.CheckpointMinCount
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.CheckpointMinCount
  id: CheckpointMinCount
  parent: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: CheckpointMinCount
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.CheckpointMinCount
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.CheckpointMinCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CheckpointMinCount
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 697
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int CheckpointMinCount
    return:
      type: System.Int32
    content.vb: Public ReadOnly CheckpointMinCount As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.SubscriberMaxCount
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.SubscriberMaxCount
  id: SubscriberMaxCount
  parent: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: SubscriberMaxCount
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.SubscriberMaxCount
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.SubscriberMaxCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SubscriberMaxCount
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 700
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int SubscriberMaxCount
    return:
      type: System.Int32
    content.vb: Public ReadOnly SubscriberMaxCount As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.NamedConsumerStrategy
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.NamedConsumerStrategy
  id: NamedConsumerStrategy
  parent: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: NamedConsumerStrategy
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.NamedConsumerStrategy
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.NamedConsumerStrategy
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: NamedConsumerStrategy
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 703
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string NamedConsumerStrategy
    return:
      type: System.String
    content.vb: Public ReadOnly NamedConsumerStrategy As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.#ctor(System.String,System.String,System.Boolean,System.Int64,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  commentId: M:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.#ctor(System.String,System.String,System.Boolean,System.Int64,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  id: '#ctor(System.String,System.String,System.Boolean,System.Int64,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.String)'
  parent: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription
  langs:
  - csharp
  - vb
  name: CreatePersistentSubscription(String, String, Boolean, Int64, Int32, Boolean, Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Int32, String)
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.CreatePersistentSubscription(String, String, Boolean, Int64, Int32, Boolean, Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Int32, String)
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.CreatePersistentSubscription(System.String, System.String, System.Boolean, System.Int64, System.Int32, System.Boolean, System.Int32, System.Int32, System.Int32, System.Int32, System.Boolean, System.Int32, System.Int32, System.Int32, System.Int32, System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 707
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public CreatePersistentSubscription(string subscriptionGroupName, string eventStreamId, bool resolveLinkTos, long startFrom, int messageTimeoutMilliseconds, bool recordStatistics, int liveBufferSize, int readBatchSize, int bufferSize, int maxRetryCount, bool preferRoundRobin, int checkpointAfterTime, int checkpointMaxCount, int checkpointMinCount, int subscriberMaxCount, string namedConsumerStrategy)
    parameters:
    - id: subscriptionGroupName
      type: System.String
    - id: eventStreamId
      type: System.String
    - id: resolveLinkTos
      type: System.Boolean
    - id: startFrom
      type: System.Int64
    - id: messageTimeoutMilliseconds
      type: System.Int32
    - id: recordStatistics
      type: System.Boolean
    - id: liveBufferSize
      type: System.Int32
    - id: readBatchSize
      type: System.Int32
    - id: bufferSize
      type: System.Int32
    - id: maxRetryCount
      type: System.Int32
    - id: preferRoundRobin
      type: System.Boolean
    - id: checkpointAfterTime
      type: System.Int32
    - id: checkpointMaxCount
      type: System.Int32
    - id: checkpointMinCount
      type: System.Int32
    - id: subscriberMaxCount
      type: System.Int32
    - id: namedConsumerStrategy
      type: System.String
    content.vb: Public Sub New(subscriptionGroupName As String, eventStreamId As String, resolveLinkTos As Boolean, startFrom As Long, messageTimeoutMilliseconds As Integer, recordStatistics As Boolean, liveBufferSize As Integer, readBatchSize As Integer, bufferSize As Integer, maxRetryCount As Integer, preferRoundRobin As Boolean, checkpointAfterTime As Integer, checkpointMaxCount As Integer, checkpointMinCount As Integer, subscriberMaxCount As Integer, namedConsumerStrategy As String)
  overload: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TcpClientMessageDto.CreatePersistentSubscription>()
  nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.CreatePersistentSubscription>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TcpClientMessageDto.CreatePersistentSubscription)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription)()
  name.vb: Serialize(Of TcpClientMessageDto.CreatePersistentSubscription)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TcpClientMessageDto.CreatePersistentSubscription>
    nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.CreatePersistentSubscription>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TcpClientMessageDto.CreatePersistentSubscription)
    nameWithType: ProtobufExtensions.Serialize(Of TcpClientMessageDto.CreatePersistentSubscription)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TcpClientMessageDto.CreatePersistentSubscription>()
  nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.CreatePersistentSubscription>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.CreatePersistentSubscription)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription)()
  name.vb: SerializeToArray(Of TcpClientMessageDto.CreatePersistentSubscription)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TcpClientMessageDto.CreatePersistentSubscription>
    nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.CreatePersistentSubscription>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TcpClientMessageDto.CreatePersistentSubscription)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.CreatePersistentSubscription)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.#ctor*
  commentId: Overload:EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.#ctor
  isExternal: false
  name: CreatePersistentSubscription
  nameWithType: TcpClientMessageDto.CreatePersistentSubscription.CreatePersistentSubscription
  fullName: EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.CreatePersistentSubscription

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted
  id: TcpClientMessageDto.DeleteStreamCompleted
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.#ctor(EventStore.Core.Messages.TcpClientMessageDto.OperationResult,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})
  - EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.CommitPosition
  - EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.Message
  - EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.PreparePosition
  - EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.Result
  langs:
  - csharp
  - vb
  name: TcpClientMessageDto.DeleteStreamCompleted
  nameWithType: TcpClientMessageDto.DeleteStreamCompleted
  fullName: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: DeleteStreamCompleted
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 237
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class DeleteStreamCompleted : object'
    content.vb: >-
      Public Class DeleteStreamCompleted
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.Result
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.Result
  id: Result
  parent: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: TcpClientMessageDto.DeleteStreamCompleted.Result
  fullName: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.Result
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Result
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 241
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly TcpClientMessageDto.OperationResult Result
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.OperationResult
    content.vb: Public ReadOnly Result As TcpClientMessageDto.OperationResult
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.Message
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.Message
  id: Message
  parent: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: TcpClientMessageDto.DeleteStreamCompleted.Message
  fullName: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.Message
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Message
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 244
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string Message
    return:
      type: System.String
    content.vb: Public ReadOnly Message As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.PreparePosition
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.PreparePosition
  id: PreparePosition
  parent: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted
  langs:
  - csharp
  - vb
  name: PreparePosition
  nameWithType: TcpClientMessageDto.DeleteStreamCompleted.PreparePosition
  fullName: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.PreparePosition
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: PreparePosition
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 247
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly long? PreparePosition
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public ReadOnly PreparePosition As Long?
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.CommitPosition
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.CommitPosition
  id: CommitPosition
  parent: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted
  langs:
  - csharp
  - vb
  name: CommitPosition
  nameWithType: TcpClientMessageDto.DeleteStreamCompleted.CommitPosition
  fullName: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.CommitPosition
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CommitPosition
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 250
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly long? CommitPosition
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public ReadOnly CommitPosition As Long?
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.#ctor(EventStore.Core.Messages.TcpClientMessageDto.OperationResult,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})
  commentId: M:EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.#ctor(EventStore.Core.Messages.TcpClientMessageDto.OperationResult,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})
  id: '#ctor(EventStore.Core.Messages.TcpClientMessageDto.OperationResult,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})'
  parent: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted
  langs:
  - csharp
  - vb
  name: DeleteStreamCompleted(TcpClientMessageDto.OperationResult, String, Nullable<Int64>, Nullable<Int64>)
  nameWithType: TcpClientMessageDto.DeleteStreamCompleted.DeleteStreamCompleted(TcpClientMessageDto.OperationResult, String, Nullable<Int64>, Nullable<Int64>)
  fullName: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.DeleteStreamCompleted(EventStore.Core.Messages.TcpClientMessageDto.OperationResult, System.String, System.Nullable<System.Int64>, System.Nullable<System.Int64>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 254
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public DeleteStreamCompleted(TcpClientMessageDto.OperationResult result, string message, long? preparePosition, long? commitPosition)
    parameters:
    - id: result
      type: EventStore.Core.Messages.TcpClientMessageDto.OperationResult
    - id: message
      type: System.String
    - id: preparePosition
      type: System.Nullable{System.Int64}
    - id: commitPosition
      type: System.Nullable{System.Int64}
    content.vb: Public Sub New(result As TcpClientMessageDto.OperationResult, message As String, preparePosition As Long?, commitPosition As Long?)
  overload: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.#ctor*
  nameWithType.vb: TcpClientMessageDto.DeleteStreamCompleted.DeleteStreamCompleted(TcpClientMessageDto.OperationResult, String, Nullable(Of Int64), Nullable(Of Int64))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.DeleteStreamCompleted(EventStore.Core.Messages.TcpClientMessageDto.OperationResult, System.String, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64))
  name.vb: DeleteStreamCompleted(TcpClientMessageDto.OperationResult, String, Nullable(Of Int64), Nullable(Of Int64))
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TcpClientMessageDto.DeleteStreamCompleted>()
  nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.DeleteStreamCompleted>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TcpClientMessageDto.DeleteStreamCompleted)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted)()
  name.vb: Serialize(Of TcpClientMessageDto.DeleteStreamCompleted)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TcpClientMessageDto.DeleteStreamCompleted>
    nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.DeleteStreamCompleted>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TcpClientMessageDto.DeleteStreamCompleted)
    nameWithType: ProtobufExtensions.Serialize(Of TcpClientMessageDto.DeleteStreamCompleted)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TcpClientMessageDto.DeleteStreamCompleted>()
  nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.DeleteStreamCompleted>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.DeleteStreamCompleted)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted)()
  name.vb: SerializeToArray(Of TcpClientMessageDto.DeleteStreamCompleted)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TcpClientMessageDto.DeleteStreamCompleted>
    nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.DeleteStreamCompleted>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TcpClientMessageDto.DeleteStreamCompleted)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.DeleteStreamCompleted)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.TcpClientMessageDto.OperationResult
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.OperationResult
  parent: EventStore.Core.Messages
  isExternal: false
  name: TcpClientMessageDto.OperationResult
  nameWithType: TcpClientMessageDto.OperationResult
  fullName: EventStore.Core.Messages.TcpClientMessageDto.OperationResult
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.#ctor*
  commentId: Overload:EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.#ctor
  isExternal: false
  name: DeleteStreamCompleted
  nameWithType: TcpClientMessageDto.DeleteStreamCompleted.DeleteStreamCompleted
  fullName: EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.DeleteStreamCompleted

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents
  id: TcpClientMessageDto.PersistentSubscriptionAckEvents
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.#ctor(System.String,System.Byte[][])
  - EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.ProcessedEventIds
  - EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.SubscriptionId
  langs:
  - csharp
  - vb
  name: TcpClientMessageDto.PersistentSubscriptionAckEvents
  nameWithType: TcpClientMessageDto.PersistentSubscriptionAckEvents
  fullName: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PersistentSubscriptionAckEvents
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 947
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class PersistentSubscriptionAckEvents : object'
    content.vb: >-
      Public Class PersistentSubscriptionAckEvents

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.SubscriptionId
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.SubscriptionId
  id: SubscriptionId
  parent: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: TcpClientMessageDto.PersistentSubscriptionAckEvents.SubscriptionId
  fullName: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.SubscriptionId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SubscriptionId
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 951
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string SubscriptionId
    return:
      type: System.String
    content.vb: Public ReadOnly SubscriptionId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.ProcessedEventIds
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.ProcessedEventIds
  id: ProcessedEventIds
  parent: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents
  langs:
  - csharp
  - vb
  name: ProcessedEventIds
  nameWithType: TcpClientMessageDto.PersistentSubscriptionAckEvents.ProcessedEventIds
  fullName: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.ProcessedEventIds
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ProcessedEventIds
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 954
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly byte[][] ProcessedEventIds
    return:
      type: System.Byte[][]
    content.vb: Public ReadOnly ProcessedEventIds As Byte()()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.#ctor(System.String,System.Byte[][])
  commentId: M:EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.#ctor(System.String,System.Byte[][])
  id: '#ctor(System.String,System.Byte[][])'
  parent: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionAckEvents(String, Byte[][])
  nameWithType: TcpClientMessageDto.PersistentSubscriptionAckEvents.PersistentSubscriptionAckEvents(String, Byte[][])
  fullName: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.PersistentSubscriptionAckEvents(System.String, System.Byte[][])
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 958
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public PersistentSubscriptionAckEvents(string subscriptionId, byte[][] processedEventIds)
    parameters:
    - id: subscriptionId
      type: System.String
    - id: processedEventIds
      type: System.Byte[][]
    content.vb: Public Sub New(subscriptionId As String, processedEventIds As Byte()())
  overload: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.#ctor*
  nameWithType.vb: TcpClientMessageDto.PersistentSubscriptionAckEvents.PersistentSubscriptionAckEvents(String, Byte()())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.PersistentSubscriptionAckEvents(System.String, System.Byte()())
  name.vb: PersistentSubscriptionAckEvents(String, Byte()())
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TcpClientMessageDto.PersistentSubscriptionAckEvents>()
  nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.PersistentSubscriptionAckEvents>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TcpClientMessageDto.PersistentSubscriptionAckEvents)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents)()
  name.vb: Serialize(Of TcpClientMessageDto.PersistentSubscriptionAckEvents)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TcpClientMessageDto.PersistentSubscriptionAckEvents>
    nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.PersistentSubscriptionAckEvents>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TcpClientMessageDto.PersistentSubscriptionAckEvents)
    nameWithType: ProtobufExtensions.Serialize(Of TcpClientMessageDto.PersistentSubscriptionAckEvents)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TcpClientMessageDto.PersistentSubscriptionAckEvents>()
  nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.PersistentSubscriptionAckEvents>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.PersistentSubscriptionAckEvents)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents)()
  name.vb: SerializeToArray(Of TcpClientMessageDto.PersistentSubscriptionAckEvents)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TcpClientMessageDto.PersistentSubscriptionAckEvents>
    nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.PersistentSubscriptionAckEvents>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TcpClientMessageDto.PersistentSubscriptionAckEvents)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.PersistentSubscriptionAckEvents)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[][]
  name: Byte[][]
  nameWithType: Byte[][]
  fullName: System.Byte[][]
  nameWithType.vb: Byte()()
  fullName.vb: System.Byte()()
  name.vb: Byte()()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.#ctor*
  commentId: Overload:EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.#ctor
  isExternal: false
  name: PersistentSubscriptionAckEvents
  nameWithType: TcpClientMessageDto.PersistentSubscriptionAckEvents.PersistentSubscriptionAckEvents
  fullName: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.PersistentSubscriptionAckEvents

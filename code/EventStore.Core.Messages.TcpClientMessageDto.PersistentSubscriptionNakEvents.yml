### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents
  id: TcpClientMessageDto.PersistentSubscriptionNakEvents
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.#ctor(System.String,System.Byte[][],System.String,EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction)
  - EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.Action
  - EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.Message
  - EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.ProcessedEventIds
  - EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.SubscriptionId
  langs:
  - csharp
  - vb
  name: TcpClientMessageDto.PersistentSubscriptionNakEvents
  nameWithType: TcpClientMessageDto.PersistentSubscriptionNakEvents
  fullName: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PersistentSubscriptionNakEvents
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 965
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class PersistentSubscriptionNakEvents : object'
    content.vb: >-
      Public Class PersistentSubscriptionNakEvents
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.SubscriptionId
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.SubscriptionId
  id: SubscriptionId
  parent: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: TcpClientMessageDto.PersistentSubscriptionNakEvents.SubscriptionId
  fullName: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.SubscriptionId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SubscriptionId
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 969
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string SubscriptionId
    return:
      type: System.String
    content.vb: Public ReadOnly SubscriptionId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.ProcessedEventIds
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.ProcessedEventIds
  id: ProcessedEventIds
  parent: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents
  langs:
  - csharp
  - vb
  name: ProcessedEventIds
  nameWithType: TcpClientMessageDto.PersistentSubscriptionNakEvents.ProcessedEventIds
  fullName: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.ProcessedEventIds
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ProcessedEventIds
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 972
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly byte[][] ProcessedEventIds
    return:
      type: System.Byte[][]
    content.vb: Public ReadOnly ProcessedEventIds As Byte()()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.Message
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.Message
  id: Message
  parent: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: TcpClientMessageDto.PersistentSubscriptionNakEvents.Message
  fullName: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.Message
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Message
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 975
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string Message
    return:
      type: System.String
    content.vb: Public ReadOnly Message As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.Action
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.Action
  id: Action
  parent: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: TcpClientMessageDto.PersistentSubscriptionNakEvents.Action
  fullName: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.Action
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Action
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 978
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction Action
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction
    content.vb: Public ReadOnly Action As TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.#ctor(System.String,System.Byte[][],System.String,EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction)
  commentId: M:EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.#ctor(System.String,System.Byte[][],System.String,EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction)
  id: '#ctor(System.String,System.Byte[][],System.String,EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction)'
  parent: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionNakEvents(String, Byte[][], String, TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction)
  nameWithType: TcpClientMessageDto.PersistentSubscriptionNakEvents.PersistentSubscriptionNakEvents(String, Byte[][], String, TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction)
  fullName: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.PersistentSubscriptionNakEvents(System.String, System.Byte[][], System.String, EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 1002
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public PersistentSubscriptionNakEvents(string subscriptionId, byte[][] processedEventIds, string message, TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction action)
    parameters:
    - id: subscriptionId
      type: System.String
    - id: processedEventIds
      type: System.Byte[][]
    - id: message
      type: System.String
    - id: action
      type: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction
    content.vb: Public Sub New(subscriptionId As String, processedEventIds As Byte()(), message As String, action As TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction)
  overload: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.#ctor*
  nameWithType.vb: TcpClientMessageDto.PersistentSubscriptionNakEvents.PersistentSubscriptionNakEvents(String, Byte()(), String, TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.PersistentSubscriptionNakEvents(System.String, System.Byte()(), System.String, EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction)
  name.vb: PersistentSubscriptionNakEvents(String, Byte()(), String, TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction)
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TcpClientMessageDto.PersistentSubscriptionNakEvents>()
  nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.PersistentSubscriptionNakEvents>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TcpClientMessageDto.PersistentSubscriptionNakEvents)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents)()
  name.vb: Serialize(Of TcpClientMessageDto.PersistentSubscriptionNakEvents)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TcpClientMessageDto.PersistentSubscriptionNakEvents>
    nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.PersistentSubscriptionNakEvents>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TcpClientMessageDto.PersistentSubscriptionNakEvents)
    nameWithType: ProtobufExtensions.Serialize(Of TcpClientMessageDto.PersistentSubscriptionNakEvents)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TcpClientMessageDto.PersistentSubscriptionNakEvents>()
  nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.PersistentSubscriptionNakEvents>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.PersistentSubscriptionNakEvents)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents)()
  name.vb: SerializeToArray(Of TcpClientMessageDto.PersistentSubscriptionNakEvents)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TcpClientMessageDto.PersistentSubscriptionNakEvents>
    nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.PersistentSubscriptionNakEvents>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TcpClientMessageDto.PersistentSubscriptionNakEvents)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.PersistentSubscriptionNakEvents)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[][]
  name: Byte[][]
  nameWithType: Byte[][]
  fullName: System.Byte[][]
  nameWithType.vb: Byte()()
  fullName.vb: System.Byte()()
  name.vb: Byte()()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction
  parent: EventStore.Core.Messages
  isExternal: false
  name: TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction
  nameWithType: TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction
  fullName: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction
- uid: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.#ctor*
  commentId: Overload:EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.#ctor
  isExternal: false
  name: PersistentSubscriptionNakEvents
  nameWithType: TcpClientMessageDto.PersistentSubscriptionNakEvents.PersistentSubscriptionNakEvents
  fullName: EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.PersistentSubscriptionNakEvents

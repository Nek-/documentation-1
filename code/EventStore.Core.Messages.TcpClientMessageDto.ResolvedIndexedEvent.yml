### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent
  id: TcpClientMessageDto.ResolvedIndexedEvent
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.#ctor(EventStore.Core.Data.EventRecord,EventStore.Core.Data.EventRecord)
  - EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.#ctor(EventStore.Core.Messages.TcpClientMessageDto.EventRecord,EventStore.Core.Messages.TcpClientMessageDto.EventRecord)
  - EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.Event
  - EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.Link
  langs:
  - csharp
  - vb
  name: TcpClientMessageDto.ResolvedIndexedEvent
  nameWithType: TcpClientMessageDto.ResolvedIndexedEvent
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ResolvedIndexedEvent
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 103
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class ResolvedIndexedEvent : object'
    content.vb: >-
      Public Class ResolvedIndexedEvent
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.#ctor(EventStore.Core.Data.EventRecord,EventStore.Core.Data.EventRecord)
  commentId: M:EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.#ctor(EventStore.Core.Data.EventRecord,EventStore.Core.Data.EventRecord)
  id: '#ctor(EventStore.Core.Data.EventRecord,EventStore.Core.Data.EventRecord)'
  parent: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent
  langs:
  - csharp
  - vb
  name: ResolvedIndexedEvent(EventRecord, EventRecord)
  nameWithType: TcpClientMessageDto.ResolvedIndexedEvent.ResolvedIndexedEvent(EventRecord, EventRecord)
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.ResolvedIndexedEvent(EventStore.Core.Data.EventRecord, EventStore.Core.Data.EventRecord)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDtoExtensions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDtoExtensions.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public ResolvedIndexedEvent(EventRecord eventRecord, EventRecord linkRecord)
    parameters:
    - id: eventRecord
      type: EventStore.Core.Data.EventRecord
    - id: linkRecord
      type: EventStore.Core.Data.EventRecord
    content.vb: Public Sub New(eventRecord As EventRecord, linkRecord As EventRecord)
  overload: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.Event
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.Event
  id: Event
  parent: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent
  langs:
  - csharp
  - vb
  name: Event
  nameWithType: TcpClientMessageDto.ResolvedIndexedEvent.Event
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.Event
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Event
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 107
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly TcpClientMessageDto.EventRecord Event
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
    content.vb: Public ReadOnly Event As TcpClientMessageDto.EventRecord
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.Link
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.Link
  id: Link
  parent: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent
  langs:
  - csharp
  - vb
  name: Link
  nameWithType: TcpClientMessageDto.ResolvedIndexedEvent.Link
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.Link
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Link
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 110
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly TcpClientMessageDto.EventRecord Link
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
    content.vb: Public ReadOnly Link As TcpClientMessageDto.EventRecord
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.#ctor(EventStore.Core.Messages.TcpClientMessageDto.EventRecord,EventStore.Core.Messages.TcpClientMessageDto.EventRecord)
  commentId: M:EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.#ctor(EventStore.Core.Messages.TcpClientMessageDto.EventRecord,EventStore.Core.Messages.TcpClientMessageDto.EventRecord)
  id: '#ctor(EventStore.Core.Messages.TcpClientMessageDto.EventRecord,EventStore.Core.Messages.TcpClientMessageDto.EventRecord)'
  parent: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent
  langs:
  - csharp
  - vb
  name: ResolvedIndexedEvent(TcpClientMessageDto.EventRecord, TcpClientMessageDto.EventRecord)
  nameWithType: TcpClientMessageDto.ResolvedIndexedEvent.ResolvedIndexedEvent(TcpClientMessageDto.EventRecord, TcpClientMessageDto.EventRecord)
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.ResolvedIndexedEvent(EventStore.Core.Messages.TcpClientMessageDto.EventRecord, EventStore.Core.Messages.TcpClientMessageDto.EventRecord)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 114
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public ResolvedIndexedEvent(TcpClientMessageDto.EventRecord event, TcpClientMessageDto.EventRecord link)
    parameters:
    - id: event
      type: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
    - id: link
      type: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
    content.vb: Public Sub New(event As TcpClientMessageDto.EventRecord, link As TcpClientMessageDto.EventRecord)
  overload: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TcpClientMessageDto.ResolvedIndexedEvent>()
  nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.ResolvedIndexedEvent>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TcpClientMessageDto.ResolvedIndexedEvent)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent)()
  name.vb: Serialize(Of TcpClientMessageDto.ResolvedIndexedEvent)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TcpClientMessageDto.ResolvedIndexedEvent>
    nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.ResolvedIndexedEvent>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TcpClientMessageDto.ResolvedIndexedEvent)
    nameWithType: ProtobufExtensions.Serialize(Of TcpClientMessageDto.ResolvedIndexedEvent)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TcpClientMessageDto.ResolvedIndexedEvent>()
  nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.ResolvedIndexedEvent>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.ResolvedIndexedEvent)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent)()
  name.vb: SerializeToArray(Of TcpClientMessageDto.ResolvedIndexedEvent)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TcpClientMessageDto.ResolvedIndexedEvent>
    nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.ResolvedIndexedEvent>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TcpClientMessageDto.ResolvedIndexedEvent)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.ResolvedIndexedEvent)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.#ctor*
  commentId: Overload:EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.#ctor
  isExternal: false
  name: ResolvedIndexedEvent
  nameWithType: TcpClientMessageDto.ResolvedIndexedEvent.ResolvedIndexedEvent
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.ResolvedIndexedEvent
- uid: EventStore.Core.Data.EventRecord
  commentId: T:EventStore.Core.Data.EventRecord
  parent: EventStore.Core.Data
  isExternal: false
  name: EventRecord
  nameWithType: EventRecord
  fullName: EventStore.Core.Data.EventRecord
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  isExternal: false
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  parent: EventStore.Core.Messages
  isExternal: false
  name: TcpClientMessageDto.EventRecord
  nameWithType: TcpClientMessageDto.EventRecord
  fullName: EventStore.Core.Messages.TcpClientMessageDto.EventRecord

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted
  commentId: T:EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted
  id: UserManagementMessage.AllUserDetailsResultHttpFormatted
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.#ctor(EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResult,Func{System.String,System.String})
  - EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.Data
  - EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.MsgTypeId
  langs:
  - csharp
  - vb
  name: UserManagementMessage.AllUserDetailsResultHttpFormatted
  nameWithType: UserManagementMessage.AllUserDetailsResultHttpFormatted
  fullName: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: AllUserDetailsResultHttpFormatted
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 277
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class AllUserDetailsResultHttpFormatted : UserManagementMessage.ResponseMessage'
    content.vb: >-
      Public Class AllUserDetailsResultHttpFormatted
          Inherits UserManagementMessage.ResponseMessage
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  - EventStore.Core.Messages.UserManagementMessage.ResponseMessage
  inheritedMembers:
  - EventStore.Core.Messages.UserManagementMessage.ResponseMessage.Success
  - EventStore.Core.Messages.UserManagementMessage.ResponseMessage.Error
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.Data
  commentId: F:EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.Data
  id: Data
  parent: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: UserManagementMessage.AllUserDetailsResultHttpFormatted.Data
  fullName: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.Data
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Data
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 280
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly UserManagementMessage.UserDataHttpFormated[] Data
    return:
      type: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated[]
    content.vb: Public ReadOnly Data As UserManagementMessage.UserDataHttpFormated()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.MsgTypeId
  commentId: P:EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: UserManagementMessage.AllUserDetailsResultHttpFormatted.MsgTypeId
  fullName: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 281
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.MsgTypeId
  overload: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.#ctor(EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResult,Func{System.String,System.String})
  commentId: M:EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.#ctor(EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResult,Func{System.String,System.String})
  id: '#ctor(EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResult,Func{System.String,System.String})'
  parent: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted
  langs:
  - csharp
  - vb
  name: AllUserDetailsResultHttpFormatted(UserManagementMessage.AllUserDetailsResult, Func<String, String>)
  nameWithType: UserManagementMessage.AllUserDetailsResultHttpFormatted.AllUserDetailsResultHttpFormatted(UserManagementMessage.AllUserDetailsResult, Func<String, String>)
  fullName: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.AllUserDetailsResultHttpFormatted(EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResult, Func<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 283
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public AllUserDetailsResultHttpFormatted(UserManagementMessage.AllUserDetailsResult msg, Func<string, string> makeAbsoluteUrl)
    parameters:
    - id: msg
      type: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResult
    - id: makeAbsoluteUrl
      type: Func{System.String,System.String}
    content.vb: Public Sub New(msg As UserManagementMessage.AllUserDetailsResult, makeAbsoluteUrl As Func(Of String, String))
  overload: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.#ctor*
  nameWithType.vb: UserManagementMessage.AllUserDetailsResultHttpFormatted.AllUserDetailsResultHttpFormatted(UserManagementMessage.AllUserDetailsResult, Func(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.AllUserDetailsResultHttpFormatted(EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResult, Func(Of System.String, System.String))
  name.vb: AllUserDetailsResultHttpFormatted(UserManagementMessage.AllUserDetailsResult, Func(Of String, String))
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messages.UserManagementMessage.ResponseMessage
  commentId: T:EventStore.Core.Messages.UserManagementMessage.ResponseMessage
  parent: EventStore.Core.Messages
  isExternal: false
  name: UserManagementMessage.ResponseMessage
  nameWithType: UserManagementMessage.ResponseMessage
  fullName: EventStore.Core.Messages.UserManagementMessage.ResponseMessage
- uid: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.Success
  commentId: F:EventStore.Core.Messages.UserManagementMessage.ResponseMessage.Success
  parent: EventStore.Core.Messages.UserManagementMessage.ResponseMessage
  isExternal: false
  name: Success
  nameWithType: UserManagementMessage.ResponseMessage.Success
  fullName: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.Success
- uid: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.Error
  commentId: F:EventStore.Core.Messages.UserManagementMessage.ResponseMessage.Error
  parent: EventStore.Core.Messages.UserManagementMessage.ResponseMessage
  isExternal: false
  name: Error
  nameWithType: UserManagementMessage.ResponseMessage.Error
  fullName: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.Error
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<UserManagementMessage.AllUserDetailsResultHttpFormatted>()
  nameWithType: ProtobufExtensions.Serialize<UserManagementMessage.AllUserDetailsResultHttpFormatted>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of UserManagementMessage.AllUserDetailsResultHttpFormatted)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted)()
  name.vb: Serialize(Of UserManagementMessage.AllUserDetailsResultHttpFormatted)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<UserManagementMessage.AllUserDetailsResultHttpFormatted>
    nameWithType: ProtobufExtensions.Serialize<UserManagementMessage.AllUserDetailsResultHttpFormatted>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of UserManagementMessage.AllUserDetailsResultHttpFormatted)
    nameWithType: ProtobufExtensions.Serialize(Of UserManagementMessage.AllUserDetailsResultHttpFormatted)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<UserManagementMessage.AllUserDetailsResultHttpFormatted>()
  nameWithType: ProtobufExtensions.SerializeToArray<UserManagementMessage.AllUserDetailsResultHttpFormatted>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of UserManagementMessage.AllUserDetailsResultHttpFormatted)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted)()
  name.vb: SerializeToArray(Of UserManagementMessage.AllUserDetailsResultHttpFormatted)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<UserManagementMessage.AllUserDetailsResultHttpFormatted>
    nameWithType: ProtobufExtensions.SerializeToArray<UserManagementMessage.AllUserDetailsResultHttpFormatted>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of UserManagementMessage.AllUserDetailsResultHttpFormatted)
    nameWithType: ProtobufExtensions.SerializeToArray(Of UserManagementMessage.AllUserDetailsResultHttpFormatted)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated[]
  name: UserManagementMessage.UserDataHttpFormated[]
  nameWithType: UserManagementMessage.UserDataHttpFormated[]
  fullName: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated[]
  nameWithType.vb: UserManagementMessage.UserDataHttpFormated()
  fullName.vb: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated()
  name.vb: UserManagementMessage.UserDataHttpFormated()
  spec.csharp:
  - uid: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated
    name: UserManagementMessage.UserDataHttpFormated
    nameWithType: UserManagementMessage.UserDataHttpFormated
    fullName: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated
    name: UserManagementMessage.UserDataHttpFormated
    nameWithType: UserManagementMessage.UserDataHttpFormated
    fullName: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.MsgTypeId
  commentId: P:EventStore.Core.Messages.UserManagementMessage.ResponseMessage.MsgTypeId
  parent: EventStore.Core.Messages.UserManagementMessage.ResponseMessage
  isExternal: false
  name: MsgTypeId
  nameWithType: UserManagementMessage.ResponseMessage.MsgTypeId
  fullName: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.MsgTypeId
- uid: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.MsgTypeId*
  commentId: Overload:EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.MsgTypeId
  isExternal: false
  name: MsgTypeId
  nameWithType: UserManagementMessage.AllUserDetailsResultHttpFormatted.MsgTypeId
  fullName: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.MsgTypeId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.#ctor*
  commentId: Overload:EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.#ctor
  isExternal: false
  name: AllUserDetailsResultHttpFormatted
  nameWithType: UserManagementMessage.AllUserDetailsResultHttpFormatted.AllUserDetailsResultHttpFormatted
  fullName: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.AllUserDetailsResultHttpFormatted
- uid: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResult
  commentId: T:EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResult
  parent: EventStore.Core.Messages
  isExternal: false
  name: UserManagementMessage.AllUserDetailsResult
  nameWithType: UserManagementMessage.AllUserDetailsResult
  fullName: EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResult
- uid: Func{System.String,System.String}
  commentId: '!:Func{System.String,System.String}'
  definition: Func`2
  name: Func<String, String>
  nameWithType: Func<String, String>
  fullName: Func<System.String, System.String>
  nameWithType.vb: Func(Of String, String)
  fullName.vb: Func(Of System.String, System.String)
  name.vb: Func(Of String, String)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )

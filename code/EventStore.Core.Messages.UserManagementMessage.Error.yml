### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.UserManagementMessage.Error
  commentId: T:EventStore.Core.Messages.UserManagementMessage.Error
  id: UserManagementMessage.Error
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.UserManagementMessage.Error.Conflict
  - EventStore.Core.Messages.UserManagementMessage.Error.Error
  - EventStore.Core.Messages.UserManagementMessage.Error.NotFound
  - EventStore.Core.Messages.UserManagementMessage.Error.Success
  - EventStore.Core.Messages.UserManagementMessage.Error.TryAgain
  - EventStore.Core.Messages.UserManagementMessage.Error.Unauthorized
  langs:
  - csharp
  - vb
  name: UserManagementMessage.Error
  nameWithType: UserManagementMessage.Error
  fullName: EventStore.Core.Messages.UserManagementMessage.Error
  type: Enum
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Error
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 177
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public enum Error : int'
    content.vb: Public Enum Error As Integer
  extensionMethods:
  - EventStore.Core.Messages.UserManagementMessage.Error.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Messages.UserManagementMessage.Error.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.UserManagementMessage.Error.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.Core.Messages.UserManagementMessage.Error.Success
  commentId: F:EventStore.Core.Messages.UserManagementMessage.Error.Success
  id: Success
  parent: EventStore.Core.Messages.UserManagementMessage.Error
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: UserManagementMessage.Error.Success
  fullName: EventStore.Core.Messages.UserManagementMessage.Error.Success
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Success
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 179
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: Success = 0
    return:
      type: EventStore.Core.Messages.UserManagementMessage.Error
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Messages.UserManagementMessage.Error.NotFound
  commentId: F:EventStore.Core.Messages.UserManagementMessage.Error.NotFound
  id: NotFound
  parent: EventStore.Core.Messages.UserManagementMessage.Error
  langs:
  - csharp
  - vb
  name: NotFound
  nameWithType: UserManagementMessage.Error.NotFound
  fullName: EventStore.Core.Messages.UserManagementMessage.Error.NotFound
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: NotFound
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 180
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: NotFound = 1
    return:
      type: EventStore.Core.Messages.UserManagementMessage.Error
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Messages.UserManagementMessage.Error.Conflict
  commentId: F:EventStore.Core.Messages.UserManagementMessage.Error.Conflict
  id: Conflict
  parent: EventStore.Core.Messages.UserManagementMessage.Error
  langs:
  - csharp
  - vb
  name: Conflict
  nameWithType: UserManagementMessage.Error.Conflict
  fullName: EventStore.Core.Messages.UserManagementMessage.Error.Conflict
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Conflict
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 181
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: Conflict = 2
    return:
      type: EventStore.Core.Messages.UserManagementMessage.Error
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Messages.UserManagementMessage.Error.Error
  commentId: F:EventStore.Core.Messages.UserManagementMessage.Error.Error
  id: Error
  parent: EventStore.Core.Messages.UserManagementMessage.Error
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: UserManagementMessage.Error.Error
  fullName: EventStore.Core.Messages.UserManagementMessage.Error.Error
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Error
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 182
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: Error = 3
    return:
      type: EventStore.Core.Messages.UserManagementMessage.Error
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Messages.UserManagementMessage.Error.TryAgain
  commentId: F:EventStore.Core.Messages.UserManagementMessage.Error.TryAgain
  id: TryAgain
  parent: EventStore.Core.Messages.UserManagementMessage.Error
  langs:
  - csharp
  - vb
  name: TryAgain
  nameWithType: UserManagementMessage.Error.TryAgain
  fullName: EventStore.Core.Messages.UserManagementMessage.Error.TryAgain
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: TryAgain
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 183
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: TryAgain = 4
    return:
      type: EventStore.Core.Messages.UserManagementMessage.Error
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Messages.UserManagementMessage.Error.Unauthorized
  commentId: F:EventStore.Core.Messages.UserManagementMessage.Error.Unauthorized
  id: Unauthorized
  parent: EventStore.Core.Messages.UserManagementMessage.Error
  langs:
  - csharp
  - vb
  name: Unauthorized
  nameWithType: UserManagementMessage.Error.Unauthorized
  fullName: EventStore.Core.Messages.UserManagementMessage.Error.Unauthorized
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Unauthorized
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 184
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: Unauthorized = 5
    return:
      type: EventStore.Core.Messages.UserManagementMessage.Error
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: EventStore.Core.Messages.UserManagementMessage.Error.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<UserManagementMessage.Error>()
  nameWithType: EnumExtensions.EnumValueName<UserManagementMessage.Error>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Messages.UserManagementMessage.Error>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of UserManagementMessage.Error)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Messages.UserManagementMessage.Error)()
  name.vb: EnumValueName(Of UserManagementMessage.Error)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<UserManagementMessage.Error>
    nameWithType: EnumExtensions.EnumValueName<UserManagementMessage.Error>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Messages.UserManagementMessage.Error>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of UserManagementMessage.Error)
    nameWithType: EnumExtensions.EnumValueName(Of UserManagementMessage.Error)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Messages.UserManagementMessage.Error)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.UserManagementMessage.Error.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<UserManagementMessage.Error>()
  nameWithType: ProtobufExtensions.Serialize<UserManagementMessage.Error>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.UserManagementMessage.Error>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of UserManagementMessage.Error)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.UserManagementMessage.Error)()
  name.vb: Serialize(Of UserManagementMessage.Error)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<UserManagementMessage.Error>
    nameWithType: ProtobufExtensions.Serialize<UserManagementMessage.Error>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.UserManagementMessage.Error>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of UserManagementMessage.Error)
    nameWithType: ProtobufExtensions.Serialize(Of UserManagementMessage.Error)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.UserManagementMessage.Error)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.UserManagementMessage.Error.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<UserManagementMessage.Error>()
  nameWithType: ProtobufExtensions.SerializeToArray<UserManagementMessage.Error>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.UserManagementMessage.Error>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of UserManagementMessage.Error)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.UserManagementMessage.Error)()
  name.vb: SerializeToArray(Of UserManagementMessage.Error)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<UserManagementMessage.Error>
    nameWithType: ProtobufExtensions.SerializeToArray<UserManagementMessage.Error>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.UserManagementMessage.Error>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of UserManagementMessage.Error)
    nameWithType: ProtobufExtensions.SerializeToArray(Of UserManagementMessage.Error)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.UserManagementMessage.Error)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.UserManagementMessage.Error
  commentId: T:EventStore.Core.Messages.UserManagementMessage.Error
  parent: EventStore.Core.Messages
  name: UserManagementMessage.Error
  nameWithType: UserManagementMessage.Error
  fullName: EventStore.Core.Messages.UserManagementMessage.Error

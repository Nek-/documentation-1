### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated
  commentId: T:EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated
  id: UserManagementMessage.UserDataHttpFormated
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.#ctor(EventStore.Core.Messages.UserManagementMessage.UserData,Func{System.String,System.String})
  - EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.DateLastUpdated
  - EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.Disabled
  - EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.FullName
  - EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.Groups
  - EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.Links
  - EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.LoginName
  langs:
  - csharp
  - vb
  name: UserManagementMessage.UserDataHttpFormated
  nameWithType: UserManagementMessage.UserDataHttpFormated
  fullName: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: UserDataHttpFormated
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 232
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class UserDataHttpFormated : object'
    content.vb: >-
      Public Class UserDataHttpFormated
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.LoginName
  commentId: F:EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.LoginName
  id: LoginName
  parent: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated
  langs:
  - csharp
  - vb
  name: LoginName
  nameWithType: UserManagementMessage.UserDataHttpFormated.LoginName
  fullName: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.LoginName
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: LoginName
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 234
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string LoginName
    return:
      type: System.String
    content.vb: Public ReadOnly LoginName As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.FullName
  commentId: F:EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.FullName
  id: FullName
  parent: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: UserManagementMessage.UserDataHttpFormated.FullName
  fullName: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.FullName
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: FullName
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 235
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string FullName
    return:
      type: System.String
    content.vb: Public ReadOnly FullName As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.Groups
  commentId: F:EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.Groups
  id: Groups
  parent: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated
  langs:
  - csharp
  - vb
  name: Groups
  nameWithType: UserManagementMessage.UserDataHttpFormated.Groups
  fullName: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.Groups
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Groups
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 236
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string[] Groups
    return:
      type: System.String[]
    content.vb: Public ReadOnly Groups As String()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.DateLastUpdated
  commentId: F:EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.DateLastUpdated
  id: DateLastUpdated
  parent: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated
  langs:
  - csharp
  - vb
  name: DateLastUpdated
  nameWithType: UserManagementMessage.UserDataHttpFormated.DateLastUpdated
  fullName: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.DateLastUpdated
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DateLastUpdated
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 237
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly DateTimeOffset? DateLastUpdated
    return:
      type: System.Nullable{DateTimeOffset}
    content.vb: Public ReadOnly DateLastUpdated As DateTimeOffset?
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.Disabled
  commentId: F:EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.Disabled
  id: Disabled
  parent: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated
  langs:
  - csharp
  - vb
  name: Disabled
  nameWithType: UserManagementMessage.UserDataHttpFormated.Disabled
  fullName: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.Disabled
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Disabled
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 238
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly bool Disabled
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Disabled As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.Links
  commentId: F:EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.Links
  id: Links
  parent: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated
  langs:
  - csharp
  - vb
  name: Links
  nameWithType: UserManagementMessage.UserDataHttpFormated.Links
  fullName: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.Links
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Links
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 239
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly List<RelLink> Links
    return:
      type: List{EventStore.Core.Services.Transport.Http.Controllers.RelLink}
    content.vb: Public ReadOnly Links As List(Of RelLink)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.#ctor(EventStore.Core.Messages.UserManagementMessage.UserData,Func{System.String,System.String})
  commentId: M:EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.#ctor(EventStore.Core.Messages.UserManagementMessage.UserData,Func{System.String,System.String})
  id: '#ctor(EventStore.Core.Messages.UserManagementMessage.UserData,Func{System.String,System.String})'
  parent: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated
  langs:
  - csharp
  - vb
  name: UserDataHttpFormated(UserManagementMessage.UserData, Func<String, String>)
  nameWithType: UserManagementMessage.UserDataHttpFormated.UserDataHttpFormated(UserManagementMessage.UserData, Func<String, String>)
  fullName: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.UserDataHttpFormated(EventStore.Core.Messages.UserManagementMessage.UserData, Func<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 241
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public UserDataHttpFormated(UserManagementMessage.UserData userData, Func<string, string> makeAbsoluteUrl)
    parameters:
    - id: userData
      type: EventStore.Core.Messages.UserManagementMessage.UserData
    - id: makeAbsoluteUrl
      type: Func{System.String,System.String}
    content.vb: Public Sub New(userData As UserManagementMessage.UserData, makeAbsoluteUrl As Func(Of String, String))
  overload: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.#ctor*
  nameWithType.vb: UserManagementMessage.UserDataHttpFormated.UserDataHttpFormated(UserManagementMessage.UserData, Func(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.UserDataHttpFormated(EventStore.Core.Messages.UserManagementMessage.UserData, Func(Of System.String, System.String))
  name.vb: UserDataHttpFormated(UserManagementMessage.UserData, Func(Of String, String))
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<UserManagementMessage.UserDataHttpFormated>()
  nameWithType: ProtobufExtensions.Serialize<UserManagementMessage.UserDataHttpFormated>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of UserManagementMessage.UserDataHttpFormated)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated)()
  name.vb: Serialize(Of UserManagementMessage.UserDataHttpFormated)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<UserManagementMessage.UserDataHttpFormated>
    nameWithType: ProtobufExtensions.Serialize<UserManagementMessage.UserDataHttpFormated>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of UserManagementMessage.UserDataHttpFormated)
    nameWithType: ProtobufExtensions.Serialize(Of UserManagementMessage.UserDataHttpFormated)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<UserManagementMessage.UserDataHttpFormated>()
  nameWithType: ProtobufExtensions.SerializeToArray<UserManagementMessage.UserDataHttpFormated>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of UserManagementMessage.UserDataHttpFormated)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated)()
  name.vb: SerializeToArray(Of UserManagementMessage.UserDataHttpFormated)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<UserManagementMessage.UserDataHttpFormated>
    nameWithType: ProtobufExtensions.SerializeToArray<UserManagementMessage.UserDataHttpFormated>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of UserManagementMessage.UserDataHttpFormated)
    nameWithType: ProtobufExtensions.SerializeToArray(Of UserManagementMessage.UserDataHttpFormated)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{DateTimeOffset}
  commentId: '!:System.Nullable{DateTimeOffset}'
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: List{EventStore.Core.Services.Transport.Http.Controllers.RelLink}
  commentId: '!:List{EventStore.Core.Services.Transport.Http.Controllers.RelLink}'
  definition: List`1
  name: List<RelLink>
  nameWithType: List<RelLink>
  fullName: List<EventStore.Core.Services.Transport.Http.Controllers.RelLink>
  nameWithType.vb: List(Of RelLink)
  fullName.vb: List(Of EventStore.Core.Services.Transport.Http.Controllers.RelLink)
  name.vb: List(Of RelLink)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.Transport.Http.Controllers.RelLink
    name: RelLink
    nameWithType: RelLink
    fullName: EventStore.Core.Services.Transport.Http.Controllers.RelLink
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.Transport.Http.Controllers.RelLink
    name: RelLink
    nameWithType: RelLink
    fullName: EventStore.Core.Services.Transport.Http.Controllers.RelLink
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.#ctor*
  commentId: Overload:EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.#ctor
  isExternal: false
  name: UserDataHttpFormated
  nameWithType: UserManagementMessage.UserDataHttpFormated.UserDataHttpFormated
  fullName: EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.UserDataHttpFormated
- uid: EventStore.Core.Messages.UserManagementMessage.UserData
  commentId: T:EventStore.Core.Messages.UserManagementMessage.UserData
  parent: EventStore.Core.Messages
  isExternal: false
  name: UserManagementMessage.UserData
  nameWithType: UserManagementMessage.UserData
  fullName: EventStore.Core.Messages.UserManagementMessage.UserData
- uid: Func{System.String,System.String}
  commentId: '!:Func{System.String,System.String}'
  definition: Func`2
  name: Func<String, String>
  nameWithType: Func<String, String>
  fullName: Func<System.String, System.String>
  nameWithType.vb: Func(Of String, String)
  fullName.vb: Func(Of System.String, System.String)
  name.vb: Func(Of String, String)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )

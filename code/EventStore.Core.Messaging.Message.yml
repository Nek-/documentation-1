### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  id: Message
  parent: EventStore.Core.Messaging
  children:
  - EventStore.Core.Messaging.Message.MsgTypeId
  - EventStore.Core.Messaging.Message.NextMsgId
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messaging/Message.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Message
    path: ../EventStore/src/EventStore.Core/Messaging/Message.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messaging
  syntax:
    content: 'public abstract class Message : object'
    content.vb: >-
      Public MustInherit Class Message
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - EventStore.Core.Helpers.IODispatcherDelayedMessage
  - EventStore.Core.Messages.ClientMessage.ClientIdentified
  - EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted
  - EventStore.Core.Messages.ClientMessage.IdentifyClient
  - EventStore.Core.Messages.ClientMessage.NotHandled
  - EventStore.Core.Messages.ClientMessage.PersistentSubscriptionConfirmation
  - EventStore.Core.Messages.ClientMessage.PersistentSubscriptionStreamEventAppeared
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  - EventStore.Core.Messages.ClientMessage.ReadResponseMessage
  - EventStore.Core.Messages.ClientMessage.RequestShutdown
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabase
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabaseCompleted
  - EventStore.Core.Messages.ClientMessage.StreamEventAppeared
  - EventStore.Core.Messages.ClientMessage.SubscriptionConfirmation
  - EventStore.Core.Messages.ClientMessage.SubscriptionDropped
  - EventStore.Core.Messages.ClientMessage.TcpForwardMessage
  - EventStore.Core.Messages.ClientMessage.TransactionCommitCompleted
  - EventStore.Core.Messages.ClientMessage.TransactionStartCompleted
  - EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted
  - EventStore.Core.Messages.ClientMessage.WriteEventsCompleted
  - EventStore.Core.Messages.ClientMessage.WriteRequestMessage
  - EventStore.Core.Messages.ElectionMessage.Accept
  - EventStore.Core.Messages.ElectionMessage.ElectionsDone
  - EventStore.Core.Messages.ElectionMessage.ElectionsTimedOut
  - EventStore.Core.Messages.ElectionMessage.Prepare
  - EventStore.Core.Messages.ElectionMessage.PrepareOk
  - EventStore.Core.Messages.ElectionMessage.Proposal
  - EventStore.Core.Messages.ElectionMessage.SendViewChangeProof
  - EventStore.Core.Messages.ElectionMessage.StartElections
  - EventStore.Core.Messages.ElectionMessage.ViewChange
  - EventStore.Core.Messages.ElectionMessage.ViewChangeProof
  - EventStore.Core.Messages.GossipMessage.Gossip
  - EventStore.Core.Messages.GossipMessage.GossipReceived
  - EventStore.Core.Messages.GossipMessage.GossipSendFailed
  - EventStore.Core.Messages.GossipMessage.GossipUpdated
  - EventStore.Core.Messages.GossipMessage.GotGossipSeedSources
  - EventStore.Core.Messages.GossipMessage.RetrieveGossipSeedSources
  - EventStore.Core.Messages.GossipMessage.SendGossip
  - EventStore.Core.Messages.HttpMessage.DeniedToHandle
  - EventStore.Core.Messages.HttpMessage.HttpCompleted
  - EventStore.Core.Messages.HttpMessage.HttpSendMessage
  - EventStore.Core.Messages.HttpMessage.PurgeTimedOutRequests
  - EventStore.Core.Messages.HttpMessage.SendOverHttp
  - EventStore.Core.Messages.HttpMessage.TextMessage
  - EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache
  - EventStore.Core.Messages.MonitoringMessage.GetAllPersistentSubscriptionStats
  - EventStore.Core.Messages.MonitoringMessage.GetFreshStats
  - EventStore.Core.Messages.MonitoringMessage.GetFreshStatsCompleted
  - EventStore.Core.Messages.MonitoringMessage.GetFreshTcpConnectionStats
  - EventStore.Core.Messages.MonitoringMessage.GetFreshTcpConnectionStatsCompleted
  - EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats
  - EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStatsCompleted
  - EventStore.Core.Messages.MonitoringMessage.GetStreamPersistentSubscriptionStats
  - EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest
  - EventStore.Core.Messages.MonitoringMessage.InternalStatsRequestResponse
  - EventStore.Core.Messages.ReplicationMessage.AckLogPosition
  - EventStore.Core.Messages.ReplicationMessage.CloneAssignment
  - EventStore.Core.Messages.ReplicationMessage.CreateChunk
  - EventStore.Core.Messages.ReplicationMessage.DataChunkBulk
  - EventStore.Core.Messages.ReplicationMessage.GetReplicationStats
  - EventStore.Core.Messages.ReplicationMessage.GetReplicationStatsCompleted
  - EventStore.Core.Messages.ReplicationMessage.RawChunkBulk
  - EventStore.Core.Messages.ReplicationMessage.ReconnectToMaster
  - EventStore.Core.Messages.ReplicationMessage.ReplicaLogPositionAck
  - EventStore.Core.Messages.ReplicationMessage.ReplicaSubscribed
  - EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest
  - EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRetry
  - EventStore.Core.Messages.ReplicationMessage.SlaveAssignment
  - EventStore.Core.Messages.ReplicationMessage.SubscribeReplica
  - EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster
  - EventStore.Core.Messages.StorageMessage.AlreadyCommitted
  - EventStore.Core.Messages.StorageMessage.CommitAck
  - EventStore.Core.Messages.StorageMessage.CommitReplicated
  - EventStore.Core.Messages.StorageMessage.EventCommitted
  - EventStore.Core.Messages.StorageMessage.InvalidTransaction
  - EventStore.Core.Messages.StorageMessage.PrepareAck
  - EventStore.Core.Messages.StorageMessage.RequestCompleted
  - EventStore.Core.Messages.StorageMessage.RequestManagerTimerTick
  - EventStore.Core.Messages.StorageMessage.StreamDeleted
  - EventStore.Core.Messages.StorageMessage.TfEofAtNonCommitRecord
  - EventStore.Core.Messages.StorageMessage.WriteCommit
  - EventStore.Core.Messages.StorageMessage.WriteDelete
  - EventStore.Core.Messages.StorageMessage.WritePrepares
  - EventStore.Core.Messages.StorageMessage.WriteTransactionData
  - EventStore.Core.Messages.StorageMessage.WriteTransactionPrepare
  - EventStore.Core.Messages.StorageMessage.WriteTransactionStart
  - EventStore.Core.Messages.StorageMessage.WrongExpectedVersion
  - EventStore.Core.Messages.SubscriptionMessage.CheckPollTimeout
  - EventStore.Core.Messages.SubscriptionMessage.PersistentSubscriptionTimerTick
  - EventStore.Core.Messages.SubscriptionMessage.PollStream
  - EventStore.Core.Messages.SystemMessage.ChaserCaughtUp
  - EventStore.Core.Messages.SystemMessage.EpochWritten
  - EventStore.Core.Messages.SystemMessage.NoQuorumMessage
  - EventStore.Core.Messages.SystemMessage.RequestForwardingTimerTick
  - EventStore.Core.Messages.SystemMessage.ServiceInitialized
  - EventStore.Core.Messages.SystemMessage.ServiceShutdown
  - EventStore.Core.Messages.SystemMessage.ShutdownTimeout
  - EventStore.Core.Messages.SystemMessage.StateChangeMessage
  - EventStore.Core.Messages.SystemMessage.SubSystemInitialized
  - EventStore.Core.Messages.SystemMessage.SystemCoreReady
  - EventStore.Core.Messages.SystemMessage.SystemInit
  - EventStore.Core.Messages.SystemMessage.SystemReady
  - EventStore.Core.Messages.SystemMessage.SystemStart
  - EventStore.Core.Messages.SystemMessage.VNodeConnectionEstablished
  - EventStore.Core.Messages.SystemMessage.VNodeConnectionLost
  - EventStore.Core.Messages.SystemMessage.WaitForChaserToCatchUp
  - EventStore.Core.Messages.SystemMessage.WriteEpoch
  - EventStore.Core.Messages.TcpMessage.Authenticated
  - EventStore.Core.Messages.TcpMessage.ConnectionClosed
  - EventStore.Core.Messages.TcpMessage.ConnectionEstablished
  - EventStore.Core.Messages.TcpMessage.Heartbeat
  - EventStore.Core.Messages.TcpMessage.HeartbeatTimeout
  - EventStore.Core.Messages.TcpMessage.NotAuthenticated
  - EventStore.Core.Messages.TcpMessage.NotReady
  - EventStore.Core.Messages.TcpMessage.PongMessage
  - EventStore.Core.Messages.TcpMessage.TcpSend
  - EventStore.Core.Messages.UserManagementMessage.RequestMessage
  - EventStore.Core.Messages.UserManagementMessage.ResponseMessage
  - EventStore.Core.Messages.UserManagementMessage.UserManagementServiceInitialized
  - EventStore.Core.Services.AwakeReaderService.AwakeServiceMessage.SubscribeAwake
  - EventStore.Core.Services.AwakeReaderService.AwakeServiceMessage.UnsubscribeAwake
  - EventStore.Core.Services.TimerService.TimerMessage.Schedule
  - EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage
  - EventStore.Projections.Core.Messages.CoreProjectionCheckpointWriterMessage.CheckpointWritten
  - EventStore.Projections.Core.Messages.CoreProjectionCheckpointWriterMessage.RestartRequested
  - EventStore.Projections.Core.Messages.CoreProjectionManagementMessageBase
  - EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted
  - EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedReaderMessageBase
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  - EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase
  - EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultOutputBase
  - EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.Connected
  - EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick
  - EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.StartCore
  - EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.StopCore
  - EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted
  - EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.OperationFailed
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionConfig
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.RequestSystemProjections
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Statistics
  - EventStore.Projections.Core.Messages.ProjectionManagementMessage.Updated
  - EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick
  - EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.StartReader
  - EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.StopReader
  - EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.CompleteSpooledStreamReading
  - EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage
  - EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  - EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReadingCore
  - EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.SubscriptionMessage
  - EventStore.Projections.Core.Messaging.UnwrapEnvelopeMessage
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messaging.Message.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messaging.Message.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  id: NextMsgId
  parent: EventStore.Core.Messaging.Message
  langs:
  - csharp
  - vb
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messaging/Message.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: NextMsgId
    path: ../EventStore/src/EventStore.Core/Messaging/Message.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messaging
  syntax:
    content: protected static int NextMsgId
    return:
      type: System.Int32
    content.vb: Protected Shared NextMsgId As Integer
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: EventStore.Core.Messaging.Message.MsgTypeId
  commentId: P:EventStore.Core.Messaging.Message.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Messaging.Message
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messaging/Message.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Core/Messaging/Message.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messaging
  syntax:
    content: public virtual int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property MsgTypeId As Integer
  overload: EventStore.Core.Messaging.Message.MsgTypeId*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging.Message.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<Message>()
  nameWithType: ProtobufExtensions.Serialize<Message>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messaging.Message>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of Message)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messaging.Message)()
  name.vb: Serialize(Of Message)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<Message>
    nameWithType: ProtobufExtensions.Serialize<Message>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messaging.Message>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of Message)
    nameWithType: ProtobufExtensions.Serialize(Of Message)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messaging.Message)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging.Message.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<Message>()
  nameWithType: ProtobufExtensions.SerializeToArray<Message>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messaging.Message>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of Message)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messaging.Message)()
  name.vb: SerializeToArray(Of Message)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<Message>
    nameWithType: ProtobufExtensions.SerializeToArray<Message>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messaging.Message>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of Message)
    nameWithType: ProtobufExtensions.SerializeToArray(Of Message)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messaging.Message)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Messaging.Message.MsgTypeId*
  commentId: Overload:EventStore.Core.Messaging.Message.MsgTypeId
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId

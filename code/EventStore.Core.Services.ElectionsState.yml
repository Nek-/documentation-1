### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.ElectionsState
  commentId: T:EventStore.Core.Services.ElectionsState
  id: ElectionsState
  parent: EventStore.Core.Services
  children:
  - EventStore.Core.Services.ElectionsState.ElectingLeader
  - EventStore.Core.Services.ElectionsState.Idle
  - EventStore.Core.Services.ElectionsState.Leader
  - EventStore.Core.Services.ElectionsState.NonLeader
  - EventStore.Core.Services.ElectionsState.Shutdown
  langs:
  - csharp
  - vb
  name: ElectionsState
  nameWithType: ElectionsState
  fullName: EventStore.Core.Services.ElectionsState
  type: Enum
  source:
    remote:
      path: src/EventStore.Core/Services/ElectionsService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ElectionsState
    path: ../EventStore/src/EventStore.Core/Services/ElectionsService.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: 'public enum ElectionsState : int'
    content.vb: Public Enum ElectionsState As Integer
  extensionMethods:
  - EventStore.Core.Services.ElectionsState.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Services.ElectionsState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.ElectionsState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.Core.Services.ElectionsState.Idle
  commentId: F:EventStore.Core.Services.ElectionsState.Idle
  id: Idle
  parent: EventStore.Core.Services.ElectionsState
  langs:
  - csharp
  - vb
  name: Idle
  nameWithType: ElectionsState.Idle
  fullName: EventStore.Core.Services.ElectionsState.Idle
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/ElectionsService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Idle
    path: ../EventStore/src/EventStore.Core/Services/ElectionsService.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: Idle = 0
    return:
      type: EventStore.Core.Services.ElectionsState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.ElectionsState.ElectingLeader
  commentId: F:EventStore.Core.Services.ElectionsState.ElectingLeader
  id: ElectingLeader
  parent: EventStore.Core.Services.ElectionsState
  langs:
  - csharp
  - vb
  name: ElectingLeader
  nameWithType: ElectionsState.ElectingLeader
  fullName: EventStore.Core.Services.ElectionsState.ElectingLeader
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/ElectionsService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ElectingLeader
    path: ../EventStore/src/EventStore.Core/Services/ElectionsService.cs
    startLine: 20
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: ElectingLeader = 1
    return:
      type: EventStore.Core.Services.ElectionsState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.ElectionsState.Leader
  commentId: F:EventStore.Core.Services.ElectionsState.Leader
  id: Leader
  parent: EventStore.Core.Services.ElectionsState
  langs:
  - csharp
  - vb
  name: Leader
  nameWithType: ElectionsState.Leader
  fullName: EventStore.Core.Services.ElectionsState.Leader
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/ElectionsService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Leader
    path: ../EventStore/src/EventStore.Core/Services/ElectionsService.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: Leader = 2
    return:
      type: EventStore.Core.Services.ElectionsState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.ElectionsState.NonLeader
  commentId: F:EventStore.Core.Services.ElectionsState.NonLeader
  id: NonLeader
  parent: EventStore.Core.Services.ElectionsState
  langs:
  - csharp
  - vb
  name: NonLeader
  nameWithType: ElectionsState.NonLeader
  fullName: EventStore.Core.Services.ElectionsState.NonLeader
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/ElectionsService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: NonLeader
    path: ../EventStore/src/EventStore.Core/Services/ElectionsService.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: NonLeader = 3
    return:
      type: EventStore.Core.Services.ElectionsState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.ElectionsState.Shutdown
  commentId: F:EventStore.Core.Services.ElectionsState.Shutdown
  id: Shutdown
  parent: EventStore.Core.Services.ElectionsState
  langs:
  - csharp
  - vb
  name: Shutdown
  nameWithType: ElectionsState.Shutdown
  fullName: EventStore.Core.Services.ElectionsState.Shutdown
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/ElectionsService.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Shutdown
    path: ../EventStore/src/EventStore.Core/Services/ElectionsService.cs
    startLine: 23
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: Shutdown = 4
    return:
      type: EventStore.Core.Services.ElectionsState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Core.Services
  commentId: N:EventStore.Core.Services
  name: EventStore.Core.Services
  nameWithType: EventStore.Core.Services
  fullName: EventStore.Core.Services
- uid: EventStore.Core.Services.ElectionsState.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<ElectionsState>()
  nameWithType: EnumExtensions.EnumValueName<ElectionsState>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.ElectionsState>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of ElectionsState)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.ElectionsState)()
  name.vb: EnumValueName(Of ElectionsState)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<ElectionsState>
    nameWithType: EnumExtensions.EnumValueName<ElectionsState>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.ElectionsState>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of ElectionsState)
    nameWithType: EnumExtensions.EnumValueName(Of ElectionsState)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.ElectionsState)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.ElectionsState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ElectionsState>()
  nameWithType: ProtobufExtensions.Serialize<ElectionsState>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.ElectionsState>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ElectionsState)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.ElectionsState)()
  name.vb: Serialize(Of ElectionsState)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ElectionsState>
    nameWithType: ProtobufExtensions.Serialize<ElectionsState>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.ElectionsState>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ElectionsState)
    nameWithType: ProtobufExtensions.Serialize(Of ElectionsState)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.ElectionsState)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.ElectionsState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ElectionsState>()
  nameWithType: ProtobufExtensions.SerializeToArray<ElectionsState>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.ElectionsState>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ElectionsState)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.ElectionsState)()
  name.vb: SerializeToArray(Of ElectionsState)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ElectionsState>
    nameWithType: ProtobufExtensions.SerializeToArray<ElectionsState>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.ElectionsState>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ElectionsState)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ElectionsState)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.ElectionsState)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.ElectionsState
  commentId: T:EventStore.Core.Services.ElectionsState
  parent: EventStore.Core.Services
  name: ElectionsState
  nameWithType: ElectionsState
  fullName: EventStore.Core.Services.ElectionsState

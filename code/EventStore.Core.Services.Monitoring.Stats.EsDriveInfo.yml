### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo
  commentId: T:EventStore.Core.Services.Monitoring.Stats.EsDriveInfo
  id: EsDriveInfo
  parent: EventStore.Core.Services.Monitoring.Stats
  children:
  - EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.AvailableBytes
  - EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.DiskName
  - EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.FromDirectory(System.String,EventStore.Common.Log.ILogger)
  - EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.TotalBytes
  - EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.Usage
  - EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.UsedBytes
  langs:
  - csharp
  - vb
  name: EsDriveInfo
  nameWithType: EsDriveInfo
  fullName: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/EsDriveInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EsDriveInfo
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/EsDriveInfo.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: 'public class EsDriveInfo : object'
    content.vb: >-
      Public Class EsDriveInfo
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.DiskName
  commentId: F:EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.DiskName
  id: DiskName
  parent: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo
  langs:
  - csharp
  - vb
  name: DiskName
  nameWithType: EsDriveInfo.DiskName
  fullName: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.DiskName
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/EsDriveInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DiskName
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/EsDriveInfo.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly string DiskName
    return:
      type: System.String
    content.vb: Public ReadOnly DiskName As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.TotalBytes
  commentId: F:EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.TotalBytes
  id: TotalBytes
  parent: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo
  langs:
  - csharp
  - vb
  name: TotalBytes
  nameWithType: EsDriveInfo.TotalBytes
  fullName: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.TotalBytes
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/EsDriveInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TotalBytes
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/EsDriveInfo.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly long TotalBytes
    return:
      type: System.Int64
    content.vb: Public ReadOnly TotalBytes As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.AvailableBytes
  commentId: F:EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.AvailableBytes
  id: AvailableBytes
  parent: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo
  langs:
  - csharp
  - vb
  name: AvailableBytes
  nameWithType: EsDriveInfo.AvailableBytes
  fullName: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.AvailableBytes
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/EsDriveInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AvailableBytes
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/EsDriveInfo.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly long AvailableBytes
    return:
      type: System.Int64
    content.vb: Public ReadOnly AvailableBytes As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.UsedBytes
  commentId: F:EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.UsedBytes
  id: UsedBytes
  parent: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo
  langs:
  - csharp
  - vb
  name: UsedBytes
  nameWithType: EsDriveInfo.UsedBytes
  fullName: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.UsedBytes
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/EsDriveInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: UsedBytes
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/EsDriveInfo.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly long UsedBytes
    return:
      type: System.Int64
    content.vb: Public ReadOnly UsedBytes As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.Usage
  commentId: F:EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.Usage
  id: Usage
  parent: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo
  langs:
  - csharp
  - vb
  name: Usage
  nameWithType: EsDriveInfo.Usage
  fullName: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.Usage
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/EsDriveInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Usage
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/EsDriveInfo.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly string Usage
    return:
      type: System.String
    content.vb: Public ReadOnly Usage As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.FromDirectory(System.String,EventStore.Common.Log.ILogger)
  commentId: M:EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.FromDirectory(System.String,EventStore.Common.Log.ILogger)
  id: FromDirectory(System.String,EventStore.Common.Log.ILogger)
  parent: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo
  langs:
  - csharp
  - vb
  name: FromDirectory(String, ILogger)
  nameWithType: EsDriveInfo.FromDirectory(String, ILogger)
  fullName: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.FromDirectory(System.String, EventStore.Common.Log.ILogger)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/EsDriveInfo.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: FromDirectory
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/EsDriveInfo.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public static EsDriveInfo FromDirectory(string path, ILogger log)
    parameters:
    - id: path
      type: System.String
    - id: log
      type: EventStore.Common.Log.ILogger
    return:
      type: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo
    content.vb: Public Shared Function FromDirectory(path As String, log As ILogger) As EsDriveInfo
  overload: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.FromDirectory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Core.Services.Monitoring.Stats
  commentId: N:EventStore.Core.Services.Monitoring.Stats
  isExternal: false
  name: EventStore.Core.Services.Monitoring.Stats
  nameWithType: EventStore.Core.Services.Monitoring.Stats
  fullName: EventStore.Core.Services.Monitoring.Stats
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<EsDriveInfo>()
  nameWithType: ProtobufExtensions.Serialize<EsDriveInfo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Monitoring.Stats.EsDriveInfo>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of EsDriveInfo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Monitoring.Stats.EsDriveInfo)()
  name.vb: Serialize(Of EsDriveInfo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<EsDriveInfo>
    nameWithType: ProtobufExtensions.Serialize<EsDriveInfo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Monitoring.Stats.EsDriveInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of EsDriveInfo)
    nameWithType: ProtobufExtensions.Serialize(Of EsDriveInfo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Monitoring.Stats.EsDriveInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<EsDriveInfo>()
  nameWithType: ProtobufExtensions.SerializeToArray<EsDriveInfo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Monitoring.Stats.EsDriveInfo>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of EsDriveInfo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Monitoring.Stats.EsDriveInfo)()
  name.vb: SerializeToArray(Of EsDriveInfo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<EsDriveInfo>
    nameWithType: ProtobufExtensions.SerializeToArray<EsDriveInfo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Monitoring.Stats.EsDriveInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of EsDriveInfo)
    nameWithType: ProtobufExtensions.SerializeToArray(Of EsDriveInfo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Monitoring.Stats.EsDriveInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.FromDirectory*
  commentId: Overload:EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.FromDirectory
  isExternal: false
  name: FromDirectory
  nameWithType: EsDriveInfo.FromDirectory
  fullName: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.FromDirectory
- uid: EventStore.Common.Log.ILogger
  commentId: T:EventStore.Common.Log.ILogger
  parent: EventStore.Common.Log
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: EventStore.Common.Log.ILogger
- uid: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo
  commentId: T:EventStore.Core.Services.Monitoring.Stats.EsDriveInfo
  parent: EventStore.Core.Services.Monitoring.Stats
  isExternal: false
  name: EsDriveInfo
  nameWithType: EsDriveInfo
  fullName: EventStore.Core.Services.Monitoring.Stats.EsDriveInfo
- uid: EventStore.Common.Log
  commentId: N:EventStore.Common.Log
  isExternal: false
  name: EventStore.Common.Log
  nameWithType: EventStore.Common.Log
  fullName: EventStore.Common.Log

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats
  commentId: T:EventStore.Core.Services.Monitoring.Stats.QueueStats
  id: QueueStats
  parent: EventStore.Core.Services.Monitoring.Stats
  children:
  - EventStore.Core.Services.Monitoring.Stats.QueueStats.#ctor(System.String,System.String,System.Int32,System.Int32,System.Double,System.Double,System.Nullable{TimeSpan},System.Nullable{TimeSpan},System.Int64,System.Int64,System.Int64,Type,Type)
  - EventStore.Core.Services.Monitoring.Stats.QueueStats.AvgItemsPerSecond
  - EventStore.Core.Services.Monitoring.Stats.QueueStats.AvgProcessingTime
  - EventStore.Core.Services.Monitoring.Stats.QueueStats.CurrentIdleTime
  - EventStore.Core.Services.Monitoring.Stats.QueueStats.CurrentItemProcessingTime
  - EventStore.Core.Services.Monitoring.Stats.QueueStats.GroupName
  - EventStore.Core.Services.Monitoring.Stats.QueueStats.IdleTimePercent
  - EventStore.Core.Services.Monitoring.Stats.QueueStats.InProgressMessageType
  - EventStore.Core.Services.Monitoring.Stats.QueueStats.LastProcessedMessageType
  - EventStore.Core.Services.Monitoring.Stats.QueueStats.Length
  - EventStore.Core.Services.Monitoring.Stats.QueueStats.LengthCurrentTryPeak
  - EventStore.Core.Services.Monitoring.Stats.QueueStats.LengthLifetimePeak
  - EventStore.Core.Services.Monitoring.Stats.QueueStats.Name
  - EventStore.Core.Services.Monitoring.Stats.QueueStats.ToString
  - EventStore.Core.Services.Monitoring.Stats.QueueStats.TotalItemsProcessed
  langs:
  - csharp
  - vb
  name: QueueStats
  nameWithType: QueueStats
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: QueueStats
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: 'public class QueueStats : object'
    content.vb: >-
      Public Class QueueStats
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Monitoring.Stats.QueueStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Monitoring.Stats.QueueStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.Name
  commentId: F:EventStore.Core.Services.Monitoring.Stats.QueueStats.Name
  id: Name
  parent: EventStore.Core.Services.Monitoring.Stats.QueueStats
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: QueueStats.Name
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats.Name
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Name
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.GroupName
  commentId: F:EventStore.Core.Services.Monitoring.Stats.QueueStats.GroupName
  id: GroupName
  parent: EventStore.Core.Services.Monitoring.Stats.QueueStats
  langs:
  - csharp
  - vb
  name: GroupName
  nameWithType: QueueStats.GroupName
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats.GroupName
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: GroupName
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly string GroupName
    return:
      type: System.String
    content.vb: Public ReadOnly GroupName As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.Length
  commentId: F:EventStore.Core.Services.Monitoring.Stats.QueueStats.Length
  id: Length
  parent: EventStore.Core.Services.Monitoring.Stats.QueueStats
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: QueueStats.Length
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats.Length
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Length
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly int Length
    return:
      type: System.Int32
    content.vb: Public ReadOnly Length As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.LengthLifetimePeak
  commentId: F:EventStore.Core.Services.Monitoring.Stats.QueueStats.LengthLifetimePeak
  id: LengthLifetimePeak
  parent: EventStore.Core.Services.Monitoring.Stats.QueueStats
  langs:
  - csharp
  - vb
  name: LengthLifetimePeak
  nameWithType: QueueStats.LengthLifetimePeak
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats.LengthLifetimePeak
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: LengthLifetimePeak
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly long LengthLifetimePeak
    return:
      type: System.Int64
    content.vb: Public ReadOnly LengthLifetimePeak As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.LengthCurrentTryPeak
  commentId: F:EventStore.Core.Services.Monitoring.Stats.QueueStats.LengthCurrentTryPeak
  id: LengthCurrentTryPeak
  parent: EventStore.Core.Services.Monitoring.Stats.QueueStats
  langs:
  - csharp
  - vb
  name: LengthCurrentTryPeak
  nameWithType: QueueStats.LengthCurrentTryPeak
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats.LengthCurrentTryPeak
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: LengthCurrentTryPeak
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly long LengthCurrentTryPeak
    return:
      type: System.Int64
    content.vb: Public ReadOnly LengthCurrentTryPeak As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.CurrentItemProcessingTime
  commentId: F:EventStore.Core.Services.Monitoring.Stats.QueueStats.CurrentItemProcessingTime
  id: CurrentItemProcessingTime
  parent: EventStore.Core.Services.Monitoring.Stats.QueueStats
  langs:
  - csharp
  - vb
  name: CurrentItemProcessingTime
  nameWithType: QueueStats.CurrentItemProcessingTime
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats.CurrentItemProcessingTime
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: CurrentItemProcessingTime
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly TimeSpan? CurrentItemProcessingTime
    return:
      type: System.Nullable{TimeSpan}
    content.vb: Public ReadOnly CurrentItemProcessingTime As TimeSpan?
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.CurrentIdleTime
  commentId: F:EventStore.Core.Services.Monitoring.Stats.QueueStats.CurrentIdleTime
  id: CurrentIdleTime
  parent: EventStore.Core.Services.Monitoring.Stats.QueueStats
  langs:
  - csharp
  - vb
  name: CurrentIdleTime
  nameWithType: QueueStats.CurrentIdleTime
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats.CurrentIdleTime
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: CurrentIdleTime
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly TimeSpan? CurrentIdleTime
    return:
      type: System.Nullable{TimeSpan}
    content.vb: Public ReadOnly CurrentIdleTime As TimeSpan?
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.TotalItemsProcessed
  commentId: F:EventStore.Core.Services.Monitoring.Stats.QueueStats.TotalItemsProcessed
  id: TotalItemsProcessed
  parent: EventStore.Core.Services.Monitoring.Stats.QueueStats
  langs:
  - csharp
  - vb
  name: TotalItemsProcessed
  nameWithType: QueueStats.TotalItemsProcessed
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats.TotalItemsProcessed
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: TotalItemsProcessed
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly long TotalItemsProcessed
    return:
      type: System.Int64
    content.vb: Public ReadOnly TotalItemsProcessed As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.AvgItemsPerSecond
  commentId: F:EventStore.Core.Services.Monitoring.Stats.QueueStats.AvgItemsPerSecond
  id: AvgItemsPerSecond
  parent: EventStore.Core.Services.Monitoring.Stats.QueueStats
  langs:
  - csharp
  - vb
  name: AvgItemsPerSecond
  nameWithType: QueueStats.AvgItemsPerSecond
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats.AvgItemsPerSecond
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: AvgItemsPerSecond
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly int AvgItemsPerSecond
    return:
      type: System.Int32
    content.vb: Public ReadOnly AvgItemsPerSecond As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.AvgProcessingTime
  commentId: F:EventStore.Core.Services.Monitoring.Stats.QueueStats.AvgProcessingTime
  id: AvgProcessingTime
  parent: EventStore.Core.Services.Monitoring.Stats.QueueStats
  langs:
  - csharp
  - vb
  name: AvgProcessingTime
  nameWithType: QueueStats.AvgProcessingTime
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats.AvgProcessingTime
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: AvgProcessingTime
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly double AvgProcessingTime
    return:
      type: System.Double
    content.vb: Public ReadOnly AvgProcessingTime As Double
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.IdleTimePercent
  commentId: F:EventStore.Core.Services.Monitoring.Stats.QueueStats.IdleTimePercent
  id: IdleTimePercent
  parent: EventStore.Core.Services.Monitoring.Stats.QueueStats
  langs:
  - csharp
  - vb
  name: IdleTimePercent
  nameWithType: QueueStats.IdleTimePercent
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats.IdleTimePercent
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: IdleTimePercent
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly double IdleTimePercent
    return:
      type: System.Double
    content.vb: Public ReadOnly IdleTimePercent As Double
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.LastProcessedMessageType
  commentId: F:EventStore.Core.Services.Monitoring.Stats.QueueStats.LastProcessedMessageType
  id: LastProcessedMessageType
  parent: EventStore.Core.Services.Monitoring.Stats.QueueStats
  langs:
  - csharp
  - vb
  name: LastProcessedMessageType
  nameWithType: QueueStats.LastProcessedMessageType
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats.LastProcessedMessageType
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: LastProcessedMessageType
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly Type LastProcessedMessageType
    return:
      type: Type
    content.vb: Public ReadOnly LastProcessedMessageType As Type
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.InProgressMessageType
  commentId: F:EventStore.Core.Services.Monitoring.Stats.QueueStats.InProgressMessageType
  id: InProgressMessageType
  parent: EventStore.Core.Services.Monitoring.Stats.QueueStats
  langs:
  - csharp
  - vb
  name: InProgressMessageType
  nameWithType: QueueStats.InProgressMessageType
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats.InProgressMessageType
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: InProgressMessageType
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public readonly Type InProgressMessageType
    return:
      type: Type
    content.vb: Public ReadOnly InProgressMessageType As Type
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.#ctor(System.String,System.String,System.Int32,System.Int32,System.Double,System.Double,System.Nullable{TimeSpan},System.Nullable{TimeSpan},System.Int64,System.Int64,System.Int64,Type,Type)
  commentId: M:EventStore.Core.Services.Monitoring.Stats.QueueStats.#ctor(System.String,System.String,System.Int32,System.Int32,System.Double,System.Double,System.Nullable{TimeSpan},System.Nullable{TimeSpan},System.Int64,System.Int64,System.Int64,Type,Type)
  id: '#ctor(System.String,System.String,System.Int32,System.Int32,System.Double,System.Double,System.Nullable{TimeSpan},System.Nullable{TimeSpan},System.Int64,System.Int64,System.Int64,Type,Type)'
  parent: EventStore.Core.Services.Monitoring.Stats.QueueStats
  langs:
  - csharp
  - vb
  name: QueueStats(String, String, Int32, Int32, Double, Double, Nullable<TimeSpan>, Nullable<TimeSpan>, Int64, Int64, Int64, Type, Type)
  nameWithType: QueueStats.QueueStats(String, String, Int32, Int32, Double, Double, Nullable<TimeSpan>, Nullable<TimeSpan>, Int64, Int64, Int64, Type, Type)
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats.QueueStats(System.String, System.String, System.Int32, System.Int32, System.Double, System.Double, System.Nullable<TimeSpan>, System.Nullable<TimeSpan>, System.Int64, System.Int64, System.Int64, Type, Type)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public QueueStats(string name, string groupName, int length, int avgItemsPerSecond, double avgProcessingTime, double idleTimePercent, TimeSpan? currentItemProcessingTime, TimeSpan? currentIdleTime, long totalItemsProcessed, long lengthCurrentTryPeak, long lengthLifetimePeak, Type lastProcessedMessageType, Type inProgressMessageType)
    parameters:
    - id: name
      type: System.String
    - id: groupName
      type: System.String
    - id: length
      type: System.Int32
    - id: avgItemsPerSecond
      type: System.Int32
    - id: avgProcessingTime
      type: System.Double
    - id: idleTimePercent
      type: System.Double
    - id: currentItemProcessingTime
      type: System.Nullable{TimeSpan}
    - id: currentIdleTime
      type: System.Nullable{TimeSpan}
    - id: totalItemsProcessed
      type: System.Int64
    - id: lengthCurrentTryPeak
      type: System.Int64
    - id: lengthLifetimePeak
      type: System.Int64
    - id: lastProcessedMessageType
      type: Type
    - id: inProgressMessageType
      type: Type
    content.vb: Public Sub New(name As String, groupName As String, length As Integer, avgItemsPerSecond As Integer, avgProcessingTime As Double, idleTimePercent As Double, currentItemProcessingTime As TimeSpan?, currentIdleTime As TimeSpan?, totalItemsProcessed As Long, lengthCurrentTryPeak As Long, lengthLifetimePeak As Long, lastProcessedMessageType As Type, inProgressMessageType As Type)
  overload: EventStore.Core.Services.Monitoring.Stats.QueueStats.#ctor*
  nameWithType.vb: QueueStats.QueueStats(String, String, Int32, Int32, Double, Double, Nullable(Of TimeSpan), Nullable(Of TimeSpan), Int64, Int64, Int64, Type, Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Monitoring.Stats.QueueStats.QueueStats(System.String, System.String, System.Int32, System.Int32, System.Double, System.Double, System.Nullable(Of TimeSpan), System.Nullable(Of TimeSpan), System.Int64, System.Int64, System.Int64, Type, Type)
  name.vb: QueueStats(String, String, Int32, Int32, Double, Double, Nullable(Of TimeSpan), Nullable(Of TimeSpan), Int64, Int64, Int64, Type, Type)
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.ToString
  commentId: M:EventStore.Core.Services.Monitoring.Stats.QueueStats.ToString
  id: ToString
  parent: EventStore.Core.Services.Monitoring.Stats.QueueStats
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: QueueStats.ToString()
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/QueueStats.cs
    startLine: 52
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.Core.Services.Monitoring.Stats.QueueStats.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.Services.Monitoring.Stats
  commentId: N:EventStore.Core.Services.Monitoring.Stats
  name: EventStore.Core.Services.Monitoring.Stats
  nameWithType: EventStore.Core.Services.Monitoring.Stats
  fullName: EventStore.Core.Services.Monitoring.Stats
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<QueueStats>()
  nameWithType: ProtobufExtensions.Serialize<QueueStats>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Monitoring.Stats.QueueStats>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of QueueStats)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Monitoring.Stats.QueueStats)()
  name.vb: Serialize(Of QueueStats)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<QueueStats>
    nameWithType: ProtobufExtensions.Serialize<QueueStats>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Monitoring.Stats.QueueStats>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of QueueStats)
    nameWithType: ProtobufExtensions.Serialize(Of QueueStats)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Monitoring.Stats.QueueStats)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<QueueStats>()
  nameWithType: ProtobufExtensions.SerializeToArray<QueueStats>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Monitoring.Stats.QueueStats>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of QueueStats)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Monitoring.Stats.QueueStats)()
  name.vb: SerializeToArray(Of QueueStats)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<QueueStats>
    nameWithType: ProtobufExtensions.SerializeToArray<QueueStats>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Monitoring.Stats.QueueStats>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of QueueStats)
    nameWithType: ProtobufExtensions.SerializeToArray(Of QueueStats)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Monitoring.Stats.QueueStats)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Nullable{TimeSpan}
  commentId: '!:System.Nullable{TimeSpan}'
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.#ctor*
  commentId: Overload:EventStore.Core.Services.Monitoring.Stats.QueueStats.#ctor
  name: QueueStats
  nameWithType: QueueStats.QueueStats
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats.QueueStats
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats.ToString*
  commentId: Overload:EventStore.Core.Services.Monitoring.Stats.QueueStats.ToString
  name: ToString
  nameWithType: QueueStats.ToString
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats.ToString

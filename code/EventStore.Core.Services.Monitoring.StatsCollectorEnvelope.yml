### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Monitoring.StatsCollectorEnvelope
  commentId: T:EventStore.Core.Services.Monitoring.StatsCollectorEnvelope
  id: StatsCollectorEnvelope
  parent: EventStore.Core.Services.Monitoring
  children:
  - EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.#ctor(EventStore.Core.Services.Monitoring.Stats.StatsContainer)
  - EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.ReplyWith``1(``0)
  langs:
  - csharp
  - vb
  name: StatsCollectorEnvelope
  nameWithType: StatsCollectorEnvelope
  fullName: EventStore.Core.Services.Monitoring.StatsCollectorEnvelope
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/StatsCollectorEnvelope.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StatsCollectorEnvelope
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/StatsCollectorEnvelope.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring
  syntax:
    content: 'public class StatsCollectorEnvelope : object, IEnvelope'
    content.vb: >-
      Public Class StatsCollectorEnvelope
          Inherits Object
          Implements IEnvelope
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Messaging.IEnvelope
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.#ctor(EventStore.Core.Services.Monitoring.Stats.StatsContainer)
  commentId: M:EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.#ctor(EventStore.Core.Services.Monitoring.Stats.StatsContainer)
  id: '#ctor(EventStore.Core.Services.Monitoring.Stats.StatsContainer)'
  parent: EventStore.Core.Services.Monitoring.StatsCollectorEnvelope
  langs:
  - csharp
  - vb
  name: StatsCollectorEnvelope(StatsContainer)
  nameWithType: StatsCollectorEnvelope.StatsCollectorEnvelope(StatsContainer)
  fullName: EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.StatsCollectorEnvelope(EventStore.Core.Services.Monitoring.Stats.StatsContainer)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/StatsCollectorEnvelope.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/StatsCollectorEnvelope.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring
  syntax:
    content: public StatsCollectorEnvelope(StatsContainer statsContainer)
    parameters:
    - id: statsContainer
      type: EventStore.Core.Services.Monitoring.Stats.StatsContainer
    content.vb: Public Sub New(statsContainer As StatsContainer)
  overload: EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.ReplyWith``1(``0)
  commentId: M:EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.ReplyWith``1(``0)
  id: ReplyWith``1(``0)
  parent: EventStore.Core.Services.Monitoring.StatsCollectorEnvelope
  langs:
  - csharp
  - vb
  name: ReplyWith<T>(T)
  nameWithType: StatsCollectorEnvelope.ReplyWith<T>(T)
  fullName: EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.ReplyWith<T>(T)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/StatsCollectorEnvelope.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReplyWith
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/StatsCollectorEnvelope.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring
  syntax:
    content: 'public void ReplyWith<T>(T message)where T : Message'
    parameters:
    - id: message
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Sub ReplyWith(Of T As Message)(message As T)
  overload: EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.ReplyWith*
  implements:
  - EventStore.Core.Messaging.IEnvelope.ReplyWith``1({T})
  nameWithType.vb: StatsCollectorEnvelope.ReplyWith(Of T)(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.ReplyWith(Of T)(T)
  name.vb: ReplyWith(Of T)(T)
references:
- uid: EventStore.Core.Services.Monitoring
  commentId: N:EventStore.Core.Services.Monitoring
  isExternal: false
  name: EventStore.Core.Services.Monitoring
  nameWithType: EventStore.Core.Services.Monitoring
  fullName: EventStore.Core.Services.Monitoring
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.IEnvelope
  commentId: T:EventStore.Core.Messaging.IEnvelope
  parent: EventStore.Core.Messaging
  isExternal: false
  name: IEnvelope
  nameWithType: IEnvelope
  fullName: EventStore.Core.Messaging.IEnvelope
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<StatsCollectorEnvelope>()
  nameWithType: ProtobufExtensions.Serialize<StatsCollectorEnvelope>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Monitoring.StatsCollectorEnvelope>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of StatsCollectorEnvelope)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Monitoring.StatsCollectorEnvelope)()
  name.vb: Serialize(Of StatsCollectorEnvelope)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<StatsCollectorEnvelope>
    nameWithType: ProtobufExtensions.Serialize<StatsCollectorEnvelope>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Monitoring.StatsCollectorEnvelope>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of StatsCollectorEnvelope)
    nameWithType: ProtobufExtensions.Serialize(Of StatsCollectorEnvelope)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Monitoring.StatsCollectorEnvelope)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<StatsCollectorEnvelope>()
  nameWithType: ProtobufExtensions.SerializeToArray<StatsCollectorEnvelope>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Monitoring.StatsCollectorEnvelope>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of StatsCollectorEnvelope)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Monitoring.StatsCollectorEnvelope)()
  name.vb: SerializeToArray(Of StatsCollectorEnvelope)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<StatsCollectorEnvelope>
    nameWithType: ProtobufExtensions.SerializeToArray<StatsCollectorEnvelope>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Monitoring.StatsCollectorEnvelope>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of StatsCollectorEnvelope)
    nameWithType: ProtobufExtensions.SerializeToArray(Of StatsCollectorEnvelope)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Monitoring.StatsCollectorEnvelope)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.#ctor*
  commentId: Overload:EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.#ctor
  isExternal: false
  name: StatsCollectorEnvelope
  nameWithType: StatsCollectorEnvelope.StatsCollectorEnvelope
  fullName: EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.StatsCollectorEnvelope
- uid: EventStore.Core.Services.Monitoring.Stats.StatsContainer
  commentId: T:EventStore.Core.Services.Monitoring.Stats.StatsContainer
  parent: EventStore.Core.Services.Monitoring.Stats
  isExternal: false
  name: StatsContainer
  nameWithType: StatsContainer
  fullName: EventStore.Core.Services.Monitoring.Stats.StatsContainer
- uid: EventStore.Core.Services.Monitoring.Stats
  commentId: N:EventStore.Core.Services.Monitoring.Stats
  isExternal: false
  name: EventStore.Core.Services.Monitoring.Stats
  nameWithType: EventStore.Core.Services.Monitoring.Stats
  fullName: EventStore.Core.Services.Monitoring.Stats
- uid: EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.ReplyWith*
  commentId: Overload:EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.ReplyWith
  isExternal: false
  name: ReplyWith
  nameWithType: StatsCollectorEnvelope.ReplyWith
  fullName: EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.ReplyWith
- uid: EventStore.Core.Messaging.IEnvelope.ReplyWith``1({T})
  commentId: M:EventStore.Core.Messaging.IEnvelope.ReplyWith``1(``0)
  parent: EventStore.Core.Messaging.IEnvelope
  definition: EventStore.Core.Messaging.IEnvelope.ReplyWith``1(``0)
  name: ReplyWith<T>(T)
  nameWithType: IEnvelope.ReplyWith<T>(T)
  fullName: EventStore.Core.Messaging.IEnvelope.ReplyWith<T>(T)
  nameWithType.vb: IEnvelope.ReplyWith(Of T)(T)
  fullName.vb: EventStore.Core.Messaging.IEnvelope.ReplyWith(Of T)(T)
  name.vb: ReplyWith(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Messaging.IEnvelope.ReplyWith``1(``0)
    name: ReplyWith<T>
    nameWithType: IEnvelope.ReplyWith<T>
    fullName: EventStore.Core.Messaging.IEnvelope.ReplyWith<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Messaging.IEnvelope.ReplyWith``1(``0)
    name: ReplyWith(Of T)
    nameWithType: IEnvelope.ReplyWith(Of T)
    fullName: EventStore.Core.Messaging.IEnvelope.ReplyWith(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: EventStore.Core.Messaging.IEnvelope.ReplyWith``1(``0)
  commentId: M:EventStore.Core.Messaging.IEnvelope.ReplyWith``1(``0)
  isExternal: false
  name: ReplyWith<T>(T)
  nameWithType: IEnvelope.ReplyWith<T>(T)
  fullName: EventStore.Core.Messaging.IEnvelope.ReplyWith<T>(T)
  nameWithType.vb: IEnvelope.ReplyWith(Of T)(T)
  fullName.vb: EventStore.Core.Messaging.IEnvelope.ReplyWith(Of T)(T)
  name.vb: ReplyWith(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Messaging.IEnvelope.ReplyWith``1(``0)
    name: ReplyWith<T>
    nameWithType: IEnvelope.ReplyWith<T>
    fullName: EventStore.Core.Messaging.IEnvelope.ReplyWith<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Messaging.IEnvelope.ReplyWith``1(``0)
    name: ReplyWith(Of T)
    nameWithType: IEnvelope.ReplyWith(Of T)
    fullName: EventStore.Core.Messaging.IEnvelope.ReplyWith(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T

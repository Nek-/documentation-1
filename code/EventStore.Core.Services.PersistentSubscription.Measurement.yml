### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.PersistentSubscription.Measurement
  commentId: T:EventStore.Core.Services.PersistentSubscription.Measurement
  id: Measurement
  parent: EventStore.Core.Services.PersistentSubscription
  children:
  - EventStore.Core.Services.PersistentSubscription.Measurement.#ctor(System.String,System.Int32)
  - EventStore.Core.Services.PersistentSubscription.Measurement.From(System.String,System.Int32)
  - EventStore.Core.Services.PersistentSubscription.Measurement.Key
  - EventStore.Core.Services.PersistentSubscription.Measurement.Value
  langs:
  - csharp
  - vb
  name: Measurement
  nameWithType: Measurement
  fullName: EventStore.Core.Services.PersistentSubscription.Measurement
  type: Struct
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/RequestStatistics.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Measurement
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/RequestStatistics.cs
    startLine: 90
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public struct Measurement
    content.vb: Public Structure Measurement
  extensionMethods:
  - EventStore.Core.Services.PersistentSubscription.Measurement.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Services.PersistentSubscription.Measurement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.PersistentSubscription.Measurement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.Core.Services.PersistentSubscription.Measurement.Key
  commentId: F:EventStore.Core.Services.PersistentSubscription.Measurement.Key
  id: Key
  parent: EventStore.Core.Services.PersistentSubscription.Measurement
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: Measurement.Key
  fullName: EventStore.Core.Services.PersistentSubscription.Measurement.Key
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/RequestStatistics.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Key
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/RequestStatistics.cs
    startLine: 92
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public string Key
    return:
      type: System.String
    content.vb: Public Key As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.Measurement.Value
  commentId: F:EventStore.Core.Services.PersistentSubscription.Measurement.Value
  id: Value
  parent: EventStore.Core.Services.PersistentSubscription.Measurement
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Measurement.Value
  fullName: EventStore.Core.Services.PersistentSubscription.Measurement.Value
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/RequestStatistics.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Value
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/RequestStatistics.cs
    startLine: 93
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int Value
    return:
      type: System.Int32
    content.vb: Public Value As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.Measurement.#ctor(System.String,System.Int32)
  commentId: M:EventStore.Core.Services.PersistentSubscription.Measurement.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: EventStore.Core.Services.PersistentSubscription.Measurement
  langs:
  - csharp
  - vb
  name: Measurement(String, Int32)
  nameWithType: Measurement.Measurement(String, Int32)
  fullName: EventStore.Core.Services.PersistentSubscription.Measurement.Measurement(System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/RequestStatistics.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/RequestStatistics.cs
    startLine: 94
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public Measurement(string key, int value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Int32
    content.vb: Public Sub New(key As String, value As Integer)
  overload: EventStore.Core.Services.PersistentSubscription.Measurement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.Measurement.From(System.String,System.Int32)
  commentId: M:EventStore.Core.Services.PersistentSubscription.Measurement.From(System.String,System.Int32)
  id: From(System.String,System.Int32)
  parent: EventStore.Core.Services.PersistentSubscription.Measurement
  langs:
  - csharp
  - vb
  name: From(String, Int32)
  nameWithType: Measurement.From(String, Int32)
  fullName: EventStore.Core.Services.PersistentSubscription.Measurement.From(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/RequestStatistics.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: From
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/RequestStatistics.cs
    startLine: 99
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public static Measurement From(string key, int value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Int32
    return:
      type: EventStore.Core.Services.PersistentSubscription.Measurement
    content.vb: Public Shared Function From(key As String, value As Integer) As Measurement
  overload: EventStore.Core.Services.PersistentSubscription.Measurement.From*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Core.Services.PersistentSubscription
  commentId: N:EventStore.Core.Services.PersistentSubscription
  isExternal: false
  name: EventStore.Core.Services.PersistentSubscription
  nameWithType: EventStore.Core.Services.PersistentSubscription
  fullName: EventStore.Core.Services.PersistentSubscription
- uid: EventStore.Core.Services.PersistentSubscription.Measurement.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<Measurement>()
  nameWithType: EnumExtensions.EnumValueName<Measurement>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.PersistentSubscription.Measurement>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of Measurement)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.PersistentSubscription.Measurement)()
  name.vb: EnumValueName(Of Measurement)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<Measurement>
    nameWithType: EnumExtensions.EnumValueName<Measurement>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.PersistentSubscription.Measurement>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of Measurement)
    nameWithType: EnumExtensions.EnumValueName(Of Measurement)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.PersistentSubscription.Measurement)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.Measurement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<Measurement>()
  nameWithType: ProtobufExtensions.Serialize<Measurement>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.Measurement>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of Measurement)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.Measurement)()
  name.vb: Serialize(Of Measurement)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<Measurement>
    nameWithType: ProtobufExtensions.Serialize<Measurement>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.Measurement>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of Measurement)
    nameWithType: ProtobufExtensions.Serialize(Of Measurement)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.Measurement)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.Measurement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<Measurement>()
  nameWithType: ProtobufExtensions.SerializeToArray<Measurement>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.Measurement>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of Measurement)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.Measurement)()
  name.vb: SerializeToArray(Of Measurement)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<Measurement>
    nameWithType: ProtobufExtensions.SerializeToArray<Measurement>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.Measurement>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of Measurement)
    nameWithType: ProtobufExtensions.SerializeToArray(Of Measurement)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.Measurement)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  isExternal: false
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  isExternal: false
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  isExternal: false
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Services.PersistentSubscription.Measurement.#ctor*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.Measurement.#ctor
  isExternal: false
  name: Measurement
  nameWithType: Measurement.Measurement
  fullName: EventStore.Core.Services.PersistentSubscription.Measurement.Measurement
- uid: EventStore.Core.Services.PersistentSubscription.Measurement.From*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.Measurement.From
  isExternal: false
  name: From
  nameWithType: Measurement.From
  fullName: EventStore.Core.Services.PersistentSubscription.Measurement.From
- uid: EventStore.Core.Services.PersistentSubscription.Measurement
  commentId: T:EventStore.Core.Services.PersistentSubscription.Measurement
  parent: EventStore.Core.Services.PersistentSubscription
  isExternal: false
  name: Measurement
  nameWithType: Measurement
  fullName: EventStore.Core.Services.PersistentSubscription.Measurement

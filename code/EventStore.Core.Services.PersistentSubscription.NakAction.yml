### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.PersistentSubscription.NakAction
  commentId: T:EventStore.Core.Services.PersistentSubscription.NakAction
  id: NakAction
  parent: EventStore.Core.Services.PersistentSubscription
  children:
  - EventStore.Core.Services.PersistentSubscription.NakAction.Park
  - EventStore.Core.Services.PersistentSubscription.NakAction.Retry
  - EventStore.Core.Services.PersistentSubscription.NakAction.Skip
  - EventStore.Core.Services.PersistentSubscription.NakAction.Stop
  - EventStore.Core.Services.PersistentSubscription.NakAction.Unknown
  langs:
  - csharp
  - vb
  name: NakAction
  nameWithType: NakAction
  fullName: EventStore.Core.Services.PersistentSubscription.NakAction
  type: Enum
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/NakAction.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: NakAction
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/NakAction.cs
    startLine: 2
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: 'public enum NakAction : int'
    content.vb: Public Enum NakAction As Integer
  extensionMethods:
  - EventStore.Core.Services.PersistentSubscription.NakAction.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Services.PersistentSubscription.NakAction.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.PersistentSubscription.NakAction.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.Core.Services.PersistentSubscription.NakAction.Unknown
  commentId: F:EventStore.Core.Services.PersistentSubscription.NakAction.Unknown
  id: Unknown
  parent: EventStore.Core.Services.PersistentSubscription.NakAction
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: NakAction.Unknown
  fullName: EventStore.Core.Services.PersistentSubscription.NakAction.Unknown
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/NakAction.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Unknown
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/NakAction.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: Unknown = null
    return:
      type: EventStore.Core.Services.PersistentSubscription.NakAction
    content.vb: Unknown = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.PersistentSubscription.NakAction.Park
  commentId: F:EventStore.Core.Services.PersistentSubscription.NakAction.Park
  id: Park
  parent: EventStore.Core.Services.PersistentSubscription.NakAction
  langs:
  - csharp
  - vb
  name: Park
  nameWithType: NakAction.Park
  fullName: EventStore.Core.Services.PersistentSubscription.NakAction.Park
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/NakAction.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Park
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/NakAction.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: Park = null
    return:
      type: EventStore.Core.Services.PersistentSubscription.NakAction
    content.vb: Park = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.PersistentSubscription.NakAction.Retry
  commentId: F:EventStore.Core.Services.PersistentSubscription.NakAction.Retry
  id: Retry
  parent: EventStore.Core.Services.PersistentSubscription.NakAction
  langs:
  - csharp
  - vb
  name: Retry
  nameWithType: NakAction.Retry
  fullName: EventStore.Core.Services.PersistentSubscription.NakAction.Retry
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/NakAction.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Retry
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/NakAction.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: Retry = null
    return:
      type: EventStore.Core.Services.PersistentSubscription.NakAction
    content.vb: Retry = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.PersistentSubscription.NakAction.Skip
  commentId: F:EventStore.Core.Services.PersistentSubscription.NakAction.Skip
  id: Skip
  parent: EventStore.Core.Services.PersistentSubscription.NakAction
  langs:
  - csharp
  - vb
  name: Skip
  nameWithType: NakAction.Skip
  fullName: EventStore.Core.Services.PersistentSubscription.NakAction.Skip
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/NakAction.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Skip
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/NakAction.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: Skip = null
    return:
      type: EventStore.Core.Services.PersistentSubscription.NakAction
    content.vb: Skip = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Services.PersistentSubscription.NakAction.Stop
  commentId: F:EventStore.Core.Services.PersistentSubscription.NakAction.Stop
  id: Stop
  parent: EventStore.Core.Services.PersistentSubscription.NakAction
  langs:
  - csharp
  - vb
  name: Stop
  nameWithType: NakAction.Stop
  fullName: EventStore.Core.Services.PersistentSubscription.NakAction.Stop
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/NakAction.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Stop
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/NakAction.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: Stop = null
    return:
      type: EventStore.Core.Services.PersistentSubscription.NakAction
    content.vb: Stop = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Core.Services.PersistentSubscription
  commentId: N:EventStore.Core.Services.PersistentSubscription
  isExternal: false
  name: EventStore.Core.Services.PersistentSubscription
  nameWithType: EventStore.Core.Services.PersistentSubscription
  fullName: EventStore.Core.Services.PersistentSubscription
- uid: EventStore.Core.Services.PersistentSubscription.NakAction.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<NakAction>()
  nameWithType: EnumExtensions.EnumValueName<NakAction>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.PersistentSubscription.NakAction>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of NakAction)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.PersistentSubscription.NakAction)()
  name.vb: EnumValueName(Of NakAction)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<NakAction>
    nameWithType: EnumExtensions.EnumValueName<NakAction>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.PersistentSubscription.NakAction>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of NakAction)
    nameWithType: EnumExtensions.EnumValueName(Of NakAction)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.PersistentSubscription.NakAction)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.NakAction.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<NakAction>()
  nameWithType: ProtobufExtensions.Serialize<NakAction>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.NakAction>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of NakAction)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.NakAction)()
  name.vb: Serialize(Of NakAction)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<NakAction>
    nameWithType: ProtobufExtensions.Serialize<NakAction>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.NakAction>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of NakAction)
    nameWithType: ProtobufExtensions.Serialize(Of NakAction)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.NakAction)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.NakAction.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<NakAction>()
  nameWithType: ProtobufExtensions.SerializeToArray<NakAction>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.NakAction>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of NakAction)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.NakAction)()
  name.vb: SerializeToArray(Of NakAction)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<NakAction>
    nameWithType: ProtobufExtensions.SerializeToArray<NakAction>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.NakAction>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of NakAction)
    nameWithType: ProtobufExtensions.SerializeToArray(Of NakAction)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.NakAction)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  isExternal: false
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  isExternal: false
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  isExternal: false
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.PersistentSubscription.NakAction
  commentId: T:EventStore.Core.Services.PersistentSubscription.NakAction
  parent: EventStore.Core.Services.PersistentSubscription
  isExternal: false
  name: NakAction
  nameWithType: NakAction
  fullName: EventStore.Core.Services.PersistentSubscription.NakAction

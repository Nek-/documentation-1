### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  commentId: T:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  id: PersistentSubscriptionEntry
  parent: EventStore.Core.Services.PersistentSubscription
  children:
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.CheckPointAfter
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.ExtraStatistics
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.Group
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.HistoryBufferSize
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.LiveBufferSize
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxCheckPointCount
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxRetryCount
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxSubscriberCount
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MessageTimeout
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MinCheckPointCount
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.NamedConsumerStrategy
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.PreferRoundRobin
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.ReadBatchSize
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.ResolveLinkTos
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.StartFrom
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.Stream
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionEntry
  nameWithType: PersistentSubscriptionEntry
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: PersistentSubscriptionEntry
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
    startLine: 64
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: 'public class PersistentSubscriptionEntry : object'
    content.vb: >-
      Public Class PersistentSubscriptionEntry
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.Stream
  commentId: F:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.Stream
  id: Stream
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  langs:
  - csharp
  - vb
  name: Stream
  nameWithType: PersistentSubscriptionEntry.Stream
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.Stream
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Stream
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
    startLine: 66
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public string Stream
    return:
      type: System.String
    content.vb: Public Stream As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.Group
  commentId: F:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.Group
  id: Group
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: PersistentSubscriptionEntry.Group
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.Group
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Group
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
    startLine: 67
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public string Group
    return:
      type: System.String
    content.vb: Public Group As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.ResolveLinkTos
  commentId: F:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.ResolveLinkTos
  id: ResolveLinkTos
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  langs:
  - csharp
  - vb
  name: ResolveLinkTos
  nameWithType: PersistentSubscriptionEntry.ResolveLinkTos
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.ResolveLinkTos
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ResolveLinkTos
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
    startLine: 68
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public bool ResolveLinkTos
    return:
      type: System.Boolean
    content.vb: Public ResolveLinkTos As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.ExtraStatistics
  commentId: F:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.ExtraStatistics
  id: ExtraStatistics
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  langs:
  - csharp
  - vb
  name: ExtraStatistics
  nameWithType: PersistentSubscriptionEntry.ExtraStatistics
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.ExtraStatistics
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ExtraStatistics
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
    startLine: 69
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public bool ExtraStatistics
    return:
      type: System.Boolean
    content.vb: Public ExtraStatistics As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MessageTimeout
  commentId: F:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MessageTimeout
  id: MessageTimeout
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  langs:
  - csharp
  - vb
  name: MessageTimeout
  nameWithType: PersistentSubscriptionEntry.MessageTimeout
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MessageTimeout
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MessageTimeout
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
    startLine: 70
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int MessageTimeout
    return:
      type: System.Int32
    content.vb: Public MessageTimeout As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.StartFrom
  commentId: F:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.StartFrom
  id: StartFrom
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  langs:
  - csharp
  - vb
  name: StartFrom
  nameWithType: PersistentSubscriptionEntry.StartFrom
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.StartFrom
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: StartFrom
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
    startLine: 71
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public long StartFrom
    return:
      type: System.Int64
    content.vb: Public StartFrom As Long
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.LiveBufferSize
  commentId: F:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.LiveBufferSize
  id: LiveBufferSize
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  langs:
  - csharp
  - vb
  name: LiveBufferSize
  nameWithType: PersistentSubscriptionEntry.LiveBufferSize
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.LiveBufferSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: LiveBufferSize
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
    startLine: 72
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int LiveBufferSize
    return:
      type: System.Int32
    content.vb: Public LiveBufferSize As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.HistoryBufferSize
  commentId: F:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.HistoryBufferSize
  id: HistoryBufferSize
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  langs:
  - csharp
  - vb
  name: HistoryBufferSize
  nameWithType: PersistentSubscriptionEntry.HistoryBufferSize
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.HistoryBufferSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: HistoryBufferSize
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
    startLine: 73
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int HistoryBufferSize
    return:
      type: System.Int32
    content.vb: Public HistoryBufferSize As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxRetryCount
  commentId: F:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxRetryCount
  id: MaxRetryCount
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  langs:
  - csharp
  - vb
  name: MaxRetryCount
  nameWithType: PersistentSubscriptionEntry.MaxRetryCount
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxRetryCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MaxRetryCount
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
    startLine: 74
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int MaxRetryCount
    return:
      type: System.Int32
    content.vb: Public MaxRetryCount As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.ReadBatchSize
  commentId: F:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.ReadBatchSize
  id: ReadBatchSize
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  langs:
  - csharp
  - vb
  name: ReadBatchSize
  nameWithType: PersistentSubscriptionEntry.ReadBatchSize
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.ReadBatchSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReadBatchSize
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
    startLine: 75
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int ReadBatchSize
    return:
      type: System.Int32
    content.vb: Public ReadBatchSize As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.PreferRoundRobin
  commentId: F:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.PreferRoundRobin
  id: PreferRoundRobin
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  langs:
  - csharp
  - vb
  name: PreferRoundRobin
  nameWithType: PersistentSubscriptionEntry.PreferRoundRobin
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.PreferRoundRobin
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: PreferRoundRobin
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
    startLine: 76
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public bool PreferRoundRobin
    return:
      type: System.Boolean
    content.vb: Public PreferRoundRobin As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.CheckPointAfter
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.CheckPointAfter
  id: CheckPointAfter
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  langs:
  - csharp
  - vb
  name: CheckPointAfter
  nameWithType: PersistentSubscriptionEntry.CheckPointAfter
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.CheckPointAfter
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CheckPointAfter
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
    startLine: 77
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int CheckPointAfter { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CheckPointAfter As Integer
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.CheckPointAfter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MinCheckPointCount
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MinCheckPointCount
  id: MinCheckPointCount
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  langs:
  - csharp
  - vb
  name: MinCheckPointCount
  nameWithType: PersistentSubscriptionEntry.MinCheckPointCount
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MinCheckPointCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MinCheckPointCount
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
    startLine: 78
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int MinCheckPointCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MinCheckPointCount As Integer
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MinCheckPointCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxCheckPointCount
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxCheckPointCount
  id: MaxCheckPointCount
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  langs:
  - csharp
  - vb
  name: MaxCheckPointCount
  nameWithType: PersistentSubscriptionEntry.MaxCheckPointCount
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxCheckPointCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MaxCheckPointCount
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
    startLine: 79
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int MaxCheckPointCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxCheckPointCount As Integer
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxCheckPointCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxSubscriberCount
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxSubscriberCount
  id: MaxSubscriberCount
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  langs:
  - csharp
  - vb
  name: MaxSubscriberCount
  nameWithType: PersistentSubscriptionEntry.MaxSubscriberCount
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxSubscriberCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MaxSubscriberCount
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
    startLine: 80
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int MaxSubscriberCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxSubscriberCount As Integer
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxSubscriberCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.NamedConsumerStrategy
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.NamedConsumerStrategy
  id: NamedConsumerStrategy
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry
  langs:
  - csharp
  - vb
  name: NamedConsumerStrategy
  nameWithType: PersistentSubscriptionEntry.NamedConsumerStrategy
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.NamedConsumerStrategy
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: NamedConsumerStrategy
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionConfig.cs
    startLine: 81
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public string NamedConsumerStrategy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NamedConsumerStrategy As String
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.NamedConsumerStrategy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.PersistentSubscription
  commentId: N:EventStore.Core.Services.PersistentSubscription
  isExternal: false
  name: EventStore.Core.Services.PersistentSubscription
  nameWithType: EventStore.Core.Services.PersistentSubscription
  fullName: EventStore.Core.Services.PersistentSubscription
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PersistentSubscriptionEntry>()
  nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionEntry>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PersistentSubscriptionEntry)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry)()
  name.vb: Serialize(Of PersistentSubscriptionEntry)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PersistentSubscriptionEntry>
    nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionEntry>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PersistentSubscriptionEntry)
    nameWithType: ProtobufExtensions.Serialize(Of PersistentSubscriptionEntry)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PersistentSubscriptionEntry>()
  nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionEntry>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionEntry)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry)()
  name.vb: SerializeToArray(Of PersistentSubscriptionEntry)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PersistentSubscriptionEntry>
    nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionEntry>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PersistentSubscriptionEntry)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionEntry)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.CheckPointAfter*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.CheckPointAfter
  isExternal: false
  name: CheckPointAfter
  nameWithType: PersistentSubscriptionEntry.CheckPointAfter
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.CheckPointAfter
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MinCheckPointCount*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MinCheckPointCount
  isExternal: false
  name: MinCheckPointCount
  nameWithType: PersistentSubscriptionEntry.MinCheckPointCount
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MinCheckPointCount
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxCheckPointCount*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxCheckPointCount
  isExternal: false
  name: MaxCheckPointCount
  nameWithType: PersistentSubscriptionEntry.MaxCheckPointCount
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxCheckPointCount
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxSubscriberCount*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxSubscriberCount
  isExternal: false
  name: MaxSubscriberCount
  nameWithType: PersistentSubscriptionEntry.MaxSubscriberCount
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.MaxSubscriberCount
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.NamedConsumerStrategy*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.NamedConsumerStrategy
  isExternal: false
  name: NamedConsumerStrategy
  nameWithType: PersistentSubscriptionEntry.NamedConsumerStrategy
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.NamedConsumerStrategy

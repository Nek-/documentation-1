### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  commentId: T:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  id: PersistentSubscriptionParams
  parent: EventStore.Core.Services.PersistentSubscription
  children:
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.#ctor(System.Boolean,System.String,System.String,System.String,System.Int64,System.Boolean,TimeSpan,System.Int32,System.Int32,System.Int32,System.Int32,TimeSpan,System.Int32,System.Int32,System.Int32,EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy,EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader,EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader,EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter,EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.BufferSize
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckPointAfter
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckpointReader
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckpointWriter
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ConsumerStrategy
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.EventStreamId
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ExtraStatistics
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.GroupName
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.LiveBufferSize
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxCheckPointCount
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxRetryCount
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxSubscriberCount
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MessageParker
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MessageTimeout
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MinCheckPointCount
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ParkedMessageStream
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ReadBatchSize
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ResolveLinkTos
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.StartFrom
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.StreamReader
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.SubscriptionId
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionParams
  nameWithType: PersistentSubscriptionParams
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: PersistentSubscriptionParams
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: 'public class PersistentSubscriptionParams : object'
    content.vb: >-
      Public Class PersistentSubscriptionParams
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.#ctor(System.Boolean,System.String,System.String,System.String,System.Int64,System.Boolean,TimeSpan,System.Int32,System.Int32,System.Int32,System.Int32,TimeSpan,System.Int32,System.Int32,System.Int32,EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy,EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader,EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader,EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter,EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.#ctor(System.Boolean,System.String,System.String,System.String,System.Int64,System.Boolean,TimeSpan,System.Int32,System.Int32,System.Int32,System.Int32,TimeSpan,System.Int32,System.Int32,System.Int32,EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy,EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader,EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader,EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter,EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker)
  id: '#ctor(System.Boolean,System.String,System.String,System.String,System.Int64,System.Boolean,TimeSpan,System.Int32,System.Int32,System.Int32,System.Int32,TimeSpan,System.Int32,System.Int32,System.Int32,EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy,EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader,EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader,EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter,EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker)'
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionParams(Boolean, String, String, String, Int64, Boolean, TimeSpan, Int32, Int32, Int32, Int32, TimeSpan, Int32, Int32, Int32, IPersistentSubscriptionConsumerStrategy, IPersistentSubscriptionStreamReader, IPersistentSubscriptionCheckpointReader, IPersistentSubscriptionCheckpointWriter, IPersistentSubscriptionMessageParker)
  nameWithType: PersistentSubscriptionParams.PersistentSubscriptionParams(Boolean, String, String, String, Int64, Boolean, TimeSpan, Int32, Int32, Int32, Int32, TimeSpan, Int32, Int32, Int32, IPersistentSubscriptionConsumerStrategy, IPersistentSubscriptionStreamReader, IPersistentSubscriptionCheckpointReader, IPersistentSubscriptionCheckpointWriter, IPersistentSubscriptionMessageParker)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.PersistentSubscriptionParams(System.Boolean, System.String, System.String, System.String, System.Int64, System.Boolean, TimeSpan, System.Int32, System.Int32, System.Int32, System.Int32, TimeSpan, System.Int32, System.Int32, System.Int32, EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy, EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader, EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader, EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter, EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 29
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public PersistentSubscriptionParams(bool resolveLinkTos, string subscriptionId, string eventStreamId, string groupName, long startFrom, bool extraStatistics, TimeSpan messageTimeout, int maxRetryCount, int liveBufferSize, int bufferSize, int readBatchSize, TimeSpan checkPointAfter, int minCheckPointCount, int maxCheckPointCount, int maxSubscriberCount, IPersistentSubscriptionConsumerStrategy consumerStrategy, IPersistentSubscriptionStreamReader streamReader, IPersistentSubscriptionCheckpointReader checkpointReader, IPersistentSubscriptionCheckpointWriter checkpointWriter, IPersistentSubscriptionMessageParker messageParker)
    parameters:
    - id: resolveLinkTos
      type: System.Boolean
    - id: subscriptionId
      type: System.String
    - id: eventStreamId
      type: System.String
    - id: groupName
      type: System.String
    - id: startFrom
      type: System.Int64
    - id: extraStatistics
      type: System.Boolean
    - id: messageTimeout
      type: TimeSpan
    - id: maxRetryCount
      type: System.Int32
    - id: liveBufferSize
      type: System.Int32
    - id: bufferSize
      type: System.Int32
    - id: readBatchSize
      type: System.Int32
    - id: checkPointAfter
      type: TimeSpan
    - id: minCheckPointCount
      type: System.Int32
    - id: maxCheckPointCount
      type: System.Int32
    - id: maxSubscriberCount
      type: System.Int32
    - id: consumerStrategy
      type: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy
    - id: streamReader
      type: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader
    - id: checkpointReader
      type: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader
    - id: checkpointWriter
      type: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
    - id: messageParker
      type: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker
    content.vb: Public Sub New(resolveLinkTos As Boolean, subscriptionId As String, eventStreamId As String, groupName As String, startFrom As Long, extraStatistics As Boolean, messageTimeout As TimeSpan, maxRetryCount As Integer, liveBufferSize As Integer, bufferSize As Integer, readBatchSize As Integer, checkPointAfter As TimeSpan, minCheckPointCount As Integer, maxCheckPointCount As Integer, maxSubscriberCount As Integer, consumerStrategy As IPersistentSubscriptionConsumerStrategy, streamReader As IPersistentSubscriptionStreamReader, checkpointReader As IPersistentSubscriptionCheckpointReader, checkpointWriter As IPersistentSubscriptionCheckpointWriter, messageParker As IPersistentSubscriptionMessageParker)
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ResolveLinkTos
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ResolveLinkTos
  id: ResolveLinkTos
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: ResolveLinkTos
  nameWithType: PersistentSubscriptionParams.ResolveLinkTos
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ResolveLinkTos
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ResolveLinkTos
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 62
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public bool ResolveLinkTos { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ResolveLinkTos As Boolean
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ResolveLinkTos*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.SubscriptionId
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.SubscriptionId
  id: SubscriptionId
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: PersistentSubscriptionParams.SubscriptionId
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.SubscriptionId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: SubscriptionId
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 67
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public string SubscriptionId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SubscriptionId As String
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.SubscriptionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.EventStreamId
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.EventStreamId
  id: EventStreamId
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: EventStreamId
  nameWithType: PersistentSubscriptionParams.EventStreamId
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.EventStreamId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EventStreamId
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 72
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public string EventStreamId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property EventStreamId As String
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.EventStreamId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.GroupName
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.GroupName
  id: GroupName
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: GroupName
  nameWithType: PersistentSubscriptionParams.GroupName
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.GroupName
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: GroupName
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 77
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public string GroupName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property GroupName As String
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.GroupName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.StartFrom
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.StartFrom
  id: StartFrom
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: StartFrom
  nameWithType: PersistentSubscriptionParams.StartFrom
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.StartFrom
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: StartFrom
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 82
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public long StartFrom { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property StartFrom As Long
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.StartFrom*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ExtraStatistics
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ExtraStatistics
  id: ExtraStatistics
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: ExtraStatistics
  nameWithType: PersistentSubscriptionParams.ExtraStatistics
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ExtraStatistics
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ExtraStatistics
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 87
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public bool ExtraStatistics { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ExtraStatistics As Boolean
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ExtraStatistics*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MessageTimeout
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MessageTimeout
  id: MessageTimeout
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: MessageTimeout
  nameWithType: PersistentSubscriptionParams.MessageTimeout
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MessageTimeout
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MessageTimeout
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 92
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public TimeSpan MessageTimeout { get; }
    parameters: []
    return:
      type: TimeSpan
    content.vb: Public ReadOnly Property MessageTimeout As TimeSpan
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MessageTimeout*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.StreamReader
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.StreamReader
  id: StreamReader
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: StreamReader
  nameWithType: PersistentSubscriptionParams.StreamReader
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.StreamReader
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: StreamReader
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 97
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public IPersistentSubscriptionStreamReader StreamReader { get; }
    parameters: []
    return:
      type: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader
    content.vb: Public ReadOnly Property StreamReader As IPersistentSubscriptionStreamReader
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.StreamReader*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckpointReader
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckpointReader
  id: CheckpointReader
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: CheckpointReader
  nameWithType: PersistentSubscriptionParams.CheckpointReader
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckpointReader
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CheckpointReader
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 102
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public IPersistentSubscriptionCheckpointReader CheckpointReader { get; }
    parameters: []
    return:
      type: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader
    content.vb: Public ReadOnly Property CheckpointReader As IPersistentSubscriptionCheckpointReader
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckpointReader*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckpointWriter
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckpointWriter
  id: CheckpointWriter
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: CheckpointWriter
  nameWithType: PersistentSubscriptionParams.CheckpointWriter
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckpointWriter
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CheckpointWriter
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 107
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public IPersistentSubscriptionCheckpointWriter CheckpointWriter { get; }
    parameters: []
    return:
      type: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
    content.vb: Public ReadOnly Property CheckpointWriter As IPersistentSubscriptionCheckpointWriter
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckpointWriter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MessageParker
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MessageParker
  id: MessageParker
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: MessageParker
  nameWithType: PersistentSubscriptionParams.MessageParker
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MessageParker
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MessageParker
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 112
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public IPersistentSubscriptionMessageParker MessageParker { get; }
    parameters: []
    return:
      type: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker
    content.vb: Public ReadOnly Property MessageParker As IPersistentSubscriptionMessageParker
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MessageParker*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxRetryCount
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxRetryCount
  id: MaxRetryCount
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: MaxRetryCount
  nameWithType: PersistentSubscriptionParams.MaxRetryCount
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxRetryCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MaxRetryCount
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 117
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int MaxRetryCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaxRetryCount As Integer
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxRetryCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.LiveBufferSize
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.LiveBufferSize
  id: LiveBufferSize
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: LiveBufferSize
  nameWithType: PersistentSubscriptionParams.LiveBufferSize
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.LiveBufferSize
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: LiveBufferSize
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 122
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int LiveBufferSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property LiveBufferSize As Integer
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.LiveBufferSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.BufferSize
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.BufferSize
  id: BufferSize
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: BufferSize
  nameWithType: PersistentSubscriptionParams.BufferSize
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.BufferSize
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: BufferSize
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 127
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int BufferSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BufferSize As Integer
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.BufferSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ReadBatchSize
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ReadBatchSize
  id: ReadBatchSize
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: ReadBatchSize
  nameWithType: PersistentSubscriptionParams.ReadBatchSize
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ReadBatchSize
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReadBatchSize
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 132
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int ReadBatchSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ReadBatchSize As Integer
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ReadBatchSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckPointAfter
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckPointAfter
  id: CheckPointAfter
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: CheckPointAfter
  nameWithType: PersistentSubscriptionParams.CheckPointAfter
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckPointAfter
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CheckPointAfter
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 137
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public TimeSpan CheckPointAfter { get; }
    parameters: []
    return:
      type: TimeSpan
    content.vb: Public ReadOnly Property CheckPointAfter As TimeSpan
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckPointAfter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MinCheckPointCount
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MinCheckPointCount
  id: MinCheckPointCount
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: MinCheckPointCount
  nameWithType: PersistentSubscriptionParams.MinCheckPointCount
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MinCheckPointCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MinCheckPointCount
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 142
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int MinCheckPointCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MinCheckPointCount As Integer
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MinCheckPointCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxCheckPointCount
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxCheckPointCount
  id: MaxCheckPointCount
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: MaxCheckPointCount
  nameWithType: PersistentSubscriptionParams.MaxCheckPointCount
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxCheckPointCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MaxCheckPointCount
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 147
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int MaxCheckPointCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaxCheckPointCount As Integer
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxCheckPointCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxSubscriberCount
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxSubscriberCount
  id: MaxSubscriberCount
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: MaxSubscriberCount
  nameWithType: PersistentSubscriptionParams.MaxSubscriberCount
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxSubscriberCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MaxSubscriberCount
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 152
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public int MaxSubscriberCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaxSubscriberCount As Integer
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxSubscriberCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ConsumerStrategy
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ConsumerStrategy
  id: ConsumerStrategy
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: ConsumerStrategy
  nameWithType: PersistentSubscriptionParams.ConsumerStrategy
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ConsumerStrategy
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ConsumerStrategy
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 157
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public IPersistentSubscriptionConsumerStrategy ConsumerStrategy { get; }
    parameters: []
    return:
      type: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy
    content.vb: Public ReadOnly Property ConsumerStrategy As IPersistentSubscriptionConsumerStrategy
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ConsumerStrategy*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ParkedMessageStream
  commentId: P:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ParkedMessageStream
  id: ParkedMessageStream
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  langs:
  - csharp
  - vb
  name: ParkedMessageStream
  nameWithType: PersistentSubscriptionParams.ParkedMessageStream
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ParkedMessageStream
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ParkedMessageStream
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionParams.cs
    startLine: 162
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public string ParkedMessageStream { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ParkedMessageStream As String
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ParkedMessageStream*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.Core.Services.PersistentSubscription
  commentId: N:EventStore.Core.Services.PersistentSubscription
  isExternal: false
  name: EventStore.Core.Services.PersistentSubscription
  nameWithType: EventStore.Core.Services.PersistentSubscription
  fullName: EventStore.Core.Services.PersistentSubscription
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PersistentSubscriptionParams>()
  nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionParams>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PersistentSubscriptionParams)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams)()
  name.vb: Serialize(Of PersistentSubscriptionParams)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PersistentSubscriptionParams>
    nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionParams>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PersistentSubscriptionParams)
    nameWithType: ProtobufExtensions.Serialize(Of PersistentSubscriptionParams)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PersistentSubscriptionParams>()
  nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionParams>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionParams)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams)()
  name.vb: SerializeToArray(Of PersistentSubscriptionParams)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PersistentSubscriptionParams>
    nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionParams>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PersistentSubscriptionParams)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionParams)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.#ctor*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.#ctor
  isExternal: false
  name: PersistentSubscriptionParams
  nameWithType: PersistentSubscriptionParams.PersistentSubscriptionParams
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.PersistentSubscriptionParams
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy
  commentId: T:EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy
  parent: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  isExternal: false
  name: IPersistentSubscriptionConsumerStrategy
  nameWithType: IPersistentSubscriptionConsumerStrategy
  fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy
- uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader
  commentId: T:EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader
  parent: EventStore.Core.Services.PersistentSubscription
  isExternal: false
  name: IPersistentSubscriptionStreamReader
  nameWithType: IPersistentSubscriptionStreamReader
  fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader
- uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader
  commentId: T:EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader
  parent: EventStore.Core.Services.PersistentSubscription
  isExternal: false
  name: IPersistentSubscriptionCheckpointReader
  nameWithType: IPersistentSubscriptionCheckpointReader
  fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader
- uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
  commentId: T:EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
  parent: EventStore.Core.Services.PersistentSubscription
  isExternal: false
  name: IPersistentSubscriptionCheckpointWriter
  nameWithType: IPersistentSubscriptionCheckpointWriter
  fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter
- uid: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker
  commentId: T:EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker
  parent: EventStore.Core.Services.PersistentSubscription
  isExternal: false
  name: IPersistentSubscriptionMessageParker
  nameWithType: IPersistentSubscriptionMessageParker
  fullName: EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  commentId: N:EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  isExternal: false
  name: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  nameWithType: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ResolveLinkTos*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ResolveLinkTos
  isExternal: false
  name: ResolveLinkTos
  nameWithType: PersistentSubscriptionParams.ResolveLinkTos
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ResolveLinkTos
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.SubscriptionId*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.SubscriptionId
  isExternal: false
  name: SubscriptionId
  nameWithType: PersistentSubscriptionParams.SubscriptionId
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.SubscriptionId
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.EventStreamId*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.EventStreamId
  isExternal: false
  name: EventStreamId
  nameWithType: PersistentSubscriptionParams.EventStreamId
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.EventStreamId
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.GroupName*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.GroupName
  isExternal: false
  name: GroupName
  nameWithType: PersistentSubscriptionParams.GroupName
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.GroupName
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.StartFrom*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.StartFrom
  isExternal: false
  name: StartFrom
  nameWithType: PersistentSubscriptionParams.StartFrom
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.StartFrom
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ExtraStatistics*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ExtraStatistics
  isExternal: false
  name: ExtraStatistics
  nameWithType: PersistentSubscriptionParams.ExtraStatistics
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ExtraStatistics
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MessageTimeout*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MessageTimeout
  isExternal: false
  name: MessageTimeout
  nameWithType: PersistentSubscriptionParams.MessageTimeout
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MessageTimeout
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.StreamReader*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.StreamReader
  isExternal: false
  name: StreamReader
  nameWithType: PersistentSubscriptionParams.StreamReader
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.StreamReader
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckpointReader*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckpointReader
  isExternal: false
  name: CheckpointReader
  nameWithType: PersistentSubscriptionParams.CheckpointReader
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckpointReader
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckpointWriter*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckpointWriter
  isExternal: false
  name: CheckpointWriter
  nameWithType: PersistentSubscriptionParams.CheckpointWriter
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckpointWriter
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MessageParker*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MessageParker
  isExternal: false
  name: MessageParker
  nameWithType: PersistentSubscriptionParams.MessageParker
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MessageParker
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxRetryCount*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxRetryCount
  isExternal: false
  name: MaxRetryCount
  nameWithType: PersistentSubscriptionParams.MaxRetryCount
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxRetryCount
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.LiveBufferSize*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.LiveBufferSize
  isExternal: false
  name: LiveBufferSize
  nameWithType: PersistentSubscriptionParams.LiveBufferSize
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.LiveBufferSize
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.BufferSize*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.BufferSize
  isExternal: false
  name: BufferSize
  nameWithType: PersistentSubscriptionParams.BufferSize
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.BufferSize
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ReadBatchSize*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ReadBatchSize
  isExternal: false
  name: ReadBatchSize
  nameWithType: PersistentSubscriptionParams.ReadBatchSize
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ReadBatchSize
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckPointAfter*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckPointAfter
  isExternal: false
  name: CheckPointAfter
  nameWithType: PersistentSubscriptionParams.CheckPointAfter
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.CheckPointAfter
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MinCheckPointCount*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MinCheckPointCount
  isExternal: false
  name: MinCheckPointCount
  nameWithType: PersistentSubscriptionParams.MinCheckPointCount
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MinCheckPointCount
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxCheckPointCount*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxCheckPointCount
  isExternal: false
  name: MaxCheckPointCount
  nameWithType: PersistentSubscriptionParams.MaxCheckPointCount
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxCheckPointCount
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxSubscriberCount*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxSubscriberCount
  isExternal: false
  name: MaxSubscriberCount
  nameWithType: PersistentSubscriptionParams.MaxSubscriberCount
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.MaxSubscriberCount
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ConsumerStrategy*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ConsumerStrategy
  isExternal: false
  name: ConsumerStrategy
  nameWithType: PersistentSubscriptionParams.ConsumerStrategy
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ConsumerStrategy
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ParkedMessageStream*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ParkedMessageStream
  isExternal: false
  name: ParkedMessageStream
  nameWithType: PersistentSubscriptionParams.ParkedMessageStream
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.ParkedMessageStream

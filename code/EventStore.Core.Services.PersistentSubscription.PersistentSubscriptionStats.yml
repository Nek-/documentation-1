### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats
  commentId: T:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats
  id: PersistentSubscriptionStats
  parent: EventStore.Core.Services.PersistentSubscription
  children:
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.#ctor(EventStore.Core.Services.PersistentSubscription.PersistentSubscription,EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams,Stopwatch)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.GetStatistics
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.IncrementProcessed
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.SetLastCheckPoint(System.Int64)
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.SetLastKnownEventNumber(System.Int64)
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionStats
  nameWithType: PersistentSubscriptionStats
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: PersistentSubscriptionStats
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionStats.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: 'public class PersistentSubscriptionStats : object'
    content.vb: >-
      Public Class PersistentSubscriptionStats
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.#ctor(EventStore.Core.Services.PersistentSubscription.PersistentSubscription,EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams,Stopwatch)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.#ctor(EventStore.Core.Services.PersistentSubscription.PersistentSubscription,EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams,Stopwatch)
  id: '#ctor(EventStore.Core.Services.PersistentSubscription.PersistentSubscription,EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams,Stopwatch)'
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionStats(PersistentSubscription, PersistentSubscriptionParams, Stopwatch)
  nameWithType: PersistentSubscriptionStats.PersistentSubscriptionStats(PersistentSubscription, PersistentSubscriptionParams, Stopwatch)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.PersistentSubscriptionStats(EventStore.Core.Services.PersistentSubscription.PersistentSubscription, EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams, Stopwatch)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionStats.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public PersistentSubscriptionStats(PersistentSubscription parent, PersistentSubscriptionParams settings, Stopwatch totalTimeWatch)
    parameters:
    - id: parent
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscription
    - id: settings
      type: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
    - id: totalTimeWatch
      type: Stopwatch
    content.vb: Public Sub New(parent As PersistentSubscription, settings As PersistentSubscriptionParams, totalTimeWatch As Stopwatch)
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.IncrementProcessed
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.IncrementProcessed
  id: IncrementProcessed
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats
  langs:
  - csharp
  - vb
  name: IncrementProcessed()
  nameWithType: PersistentSubscriptionStats.IncrementProcessed()
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.IncrementProcessed()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: IncrementProcessed
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionStats.cs
    startLine: 26
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public void IncrementProcessed()
    content.vb: Public Sub IncrementProcessed
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.IncrementProcessed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.SetLastCheckPoint(System.Int64)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.SetLastCheckPoint(System.Int64)
  id: SetLastCheckPoint(System.Int64)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats
  langs:
  - csharp
  - vb
  name: SetLastCheckPoint(Int64)
  nameWithType: PersistentSubscriptionStats.SetLastCheckPoint(Int64)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.SetLastCheckPoint(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SetLastCheckPoint
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionStats.cs
    startLine: 31
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public void SetLastCheckPoint(long lastEventNumber)
    parameters:
    - id: lastEventNumber
      type: System.Int64
    content.vb: Public Sub SetLastCheckPoint(lastEventNumber As Long)
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.SetLastCheckPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.SetLastKnownEventNumber(System.Int64)
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.SetLastKnownEventNumber(System.Int64)
  id: SetLastKnownEventNumber(System.Int64)
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats
  langs:
  - csharp
  - vb
  name: SetLastKnownEventNumber(Int64)
  nameWithType: PersistentSubscriptionStats.SetLastKnownEventNumber(Int64)
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.SetLastKnownEventNumber(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SetLastKnownEventNumber
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionStats.cs
    startLine: 36
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public void SetLastKnownEventNumber(long knownEventNumber)
    parameters:
    - id: knownEventNumber
      type: System.Int64
    content.vb: Public Sub SetLastKnownEventNumber(knownEventNumber As Long)
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.SetLastKnownEventNumber*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.GetStatistics
  commentId: M:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.GetStatistics
  id: GetStatistics
  parent: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats
  langs:
  - csharp
  - vb
  name: GetStatistics()
  nameWithType: PersistentSubscriptionStats.GetStatistics()
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.GetStatistics()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionStats.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: GetStatistics
    path: ../EventStore/src/EventStore.Core/Services/PersistentSubscription/PersistentSubscriptionStats.cs
    startLine: 42
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.PersistentSubscription
  syntax:
    content: public MonitoringMessage.SubscriptionInfo GetStatistics()
    return:
      type: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
    content.vb: Public Function GetStatistics As MonitoringMessage.SubscriptionInfo
  overload: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.GetStatistics*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.PersistentSubscription
  commentId: N:EventStore.Core.Services.PersistentSubscription
  name: EventStore.Core.Services.PersistentSubscription
  nameWithType: EventStore.Core.Services.PersistentSubscription
  fullName: EventStore.Core.Services.PersistentSubscription
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PersistentSubscriptionStats>()
  nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionStats>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PersistentSubscriptionStats)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats)()
  name.vb: Serialize(Of PersistentSubscriptionStats)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PersistentSubscriptionStats>
    nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionStats>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PersistentSubscriptionStats)
    nameWithType: ProtobufExtensions.Serialize(Of PersistentSubscriptionStats)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PersistentSubscriptionStats>()
  nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionStats>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionStats)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats)()
  name.vb: SerializeToArray(Of PersistentSubscriptionStats)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PersistentSubscriptionStats>
    nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionStats>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PersistentSubscriptionStats)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionStats)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.#ctor*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.#ctor
  name: PersistentSubscriptionStats
  nameWithType: PersistentSubscriptionStats.PersistentSubscriptionStats
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.PersistentSubscriptionStats
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscription
  commentId: T:EventStore.Core.Services.PersistentSubscription.PersistentSubscription
  parent: EventStore.Core.Services.PersistentSubscription
  name: PersistentSubscription
  nameWithType: PersistentSubscription
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscription
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  commentId: T:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
  parent: EventStore.Core.Services.PersistentSubscription
  name: PersistentSubscriptionParams
  nameWithType: PersistentSubscriptionParams
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams
- uid: Stopwatch
  isExternal: true
  name: Stopwatch
  nameWithType: Stopwatch
  fullName: Stopwatch
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.IncrementProcessed*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.IncrementProcessed
  name: IncrementProcessed
  nameWithType: PersistentSubscriptionStats.IncrementProcessed
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.IncrementProcessed
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.SetLastCheckPoint*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.SetLastCheckPoint
  name: SetLastCheckPoint
  nameWithType: PersistentSubscriptionStats.SetLastCheckPoint
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.SetLastCheckPoint
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.SetLastKnownEventNumber*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.SetLastKnownEventNumber
  name: SetLastKnownEventNumber
  nameWithType: PersistentSubscriptionStats.SetLastKnownEventNumber
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.SetLastKnownEventNumber
- uid: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.GetStatistics*
  commentId: Overload:EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.GetStatistics
  name: GetStatistics
  nameWithType: PersistentSubscriptionStats.GetStatistics
  fullName: EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.GetStatistics
- uid: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  commentId: T:EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
  parent: EventStore.Core.Messages
  name: MonitoringMessage.SubscriptionInfo
  nameWithType: MonitoringMessage.SubscriptionInfo
  fullName: EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Storage.ReaderIndex.AllReader
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.AllReader
  id: AllReader
  parent: EventStore.Core.Services.Storage.ReaderIndex
  children:
  - EventStore.Core.Services.Storage.ReaderIndex.AllReader.#ctor(EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend,EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)
  - EventStore.Core.Services.Storage.ReaderIndex.AllReader.ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
  - EventStore.Core.Services.Storage.ReaderIndex.AllReader.ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
  langs:
  - csharp
  - vb
  name: AllReader
  nameWithType: AllReader
  fullName: EventStore.Core.Services.Storage.ReaderIndex.AllReader
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/AllReader.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AllReader
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/AllReader.cs
    startLine: 25
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: 'public class AllReader : object, IAllReader'
    content.vb: >-
      Public Class AllReader

          Inherits Object

          Implements IAllReader
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IAllReader
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Services.Storage.ReaderIndex.AllReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Storage.ReaderIndex.AllReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Storage.ReaderIndex.AllReader.#ctor(EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend,EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.AllReader.#ctor(EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend,EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)
  id: '#ctor(EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend,EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)'
  parent: EventStore.Core.Services.Storage.ReaderIndex.AllReader
  langs:
  - csharp
  - vb
  name: AllReader(IIndexBackend, IIndexCommitter, ICheckpoint)
  nameWithType: AllReader.AllReader(IIndexBackend, IIndexCommitter, ICheckpoint)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.AllReader.AllReader(EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend, EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter, EventStore.Core.TransactionLog.Checkpoint.ICheckpoint)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/AllReader.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/AllReader.cs
    startLine: 31
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public AllReader(IIndexBackend backend, IIndexCommitter indexCommitter, ICheckpoint replicationCheckpoint)
    parameters:
    - id: backend
      type: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
    - id: indexCommitter
      type: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter
    - id: replicationCheckpoint
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    content.vb: Public Sub New(backend As IIndexBackend, indexCommitter As IIndexCommitter, replicationCheckpoint As ICheckpoint)
  overload: EventStore.Core.Services.Storage.ReaderIndex.AllReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.AllReader.ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.AllReader.ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
  id: ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
  parent: EventStore.Core.Services.Storage.ReaderIndex.AllReader
  langs:
  - csharp
  - vb
  name: ReadAllEventsForward(TFPos, Int32)
  nameWithType: AllReader.ReadAllEventsForward(TFPos, Int32)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.AllReader.ReadAllEventsForward(EventStore.Core.Data.TFPos, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/AllReader.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadAllEventsForward
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/AllReader.cs
    startLine: 41
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public IndexReadAllResult ReadAllEventsForward(TFPos pos, int maxCount)
    parameters:
    - id: pos
      type: EventStore.Core.Data.TFPos
    - id: maxCount
      type: System.Int32
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
    content.vb: Public Function ReadAllEventsForward(pos As TFPos, maxCount As Integer) As IndexReadAllResult
  overload: EventStore.Core.Services.Storage.ReaderIndex.AllReader.ReadAllEventsForward*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IAllReader.ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Storage.ReaderIndex.AllReader.ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.AllReader.ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
  id: ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
  parent: EventStore.Core.Services.Storage.ReaderIndex.AllReader
  langs:
  - csharp
  - vb
  name: ReadAllEventsBackward(TFPos, Int32)
  nameWithType: AllReader.ReadAllEventsBackward(TFPos, Int32)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.AllReader.ReadAllEventsBackward(EventStore.Core.Data.TFPos, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/AllReader.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadAllEventsBackward
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/AllReader.cs
    startLine: 154
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public IndexReadAllResult ReadAllEventsBackward(TFPos pos, int maxCount)
    parameters:
    - id: pos
      type: EventStore.Core.Data.TFPos
    - id: maxCount
      type: System.Int32
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
    content.vb: Public Function ReadAllEventsBackward(pos As TFPos, maxCount As Integer) As IndexReadAllResult
  overload: EventStore.Core.Services.Storage.ReaderIndex.AllReader.ReadAllEventsBackward*
  implements:
  - EventStore.Core.Services.Storage.ReaderIndex.IAllReader.ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Services.Storage.ReaderIndex.IAllReader
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IAllReader
  parent: EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: IAllReader
  nameWithType: IAllReader
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IAllReader
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.AllReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<AllReader>()
  nameWithType: ProtobufExtensions.Serialize<AllReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.AllReader>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of AllReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.AllReader)()
  name.vb: Serialize(Of AllReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<AllReader>
    nameWithType: ProtobufExtensions.Serialize<AllReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.AllReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of AllReader)
    nameWithType: ProtobufExtensions.Serialize(Of AllReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.AllReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.AllReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<AllReader>()
  nameWithType: ProtobufExtensions.SerializeToArray<AllReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.AllReader>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of AllReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.AllReader)()
  name.vb: SerializeToArray(Of AllReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<AllReader>
    nameWithType: ProtobufExtensions.SerializeToArray<AllReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.AllReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of AllReader)
    nameWithType: ProtobufExtensions.SerializeToArray(Of AllReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.AllReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Storage.ReaderIndex.AllReader.#ctor*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.AllReader.#ctor
  isExternal: false
  name: AllReader
  nameWithType: AllReader.AllReader
  fullName: EventStore.Core.Services.Storage.ReaderIndex.AllReader.AllReader
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  parent: EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: IIndexBackend
  nameWithType: IIndexBackend
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter
  parent: EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: IIndexCommitter
  nameWithType: IIndexCommitter
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  commentId: T:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  parent: EventStore.Core.TransactionLog.Checkpoint
  isExternal: false
  name: ICheckpoint
  nameWithType: ICheckpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
- uid: EventStore.Core.TransactionLog.Checkpoint
  commentId: N:EventStore.Core.TransactionLog.Checkpoint
  isExternal: false
  name: EventStore.Core.TransactionLog.Checkpoint
  nameWithType: EventStore.Core.TransactionLog.Checkpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint
- uid: EventStore.Core.Services.Storage.ReaderIndex.AllReader.ReadAllEventsForward*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.AllReader.ReadAllEventsForward
  isExternal: false
  name: ReadAllEventsForward
  nameWithType: AllReader.ReadAllEventsForward
  fullName: EventStore.Core.Services.Storage.ReaderIndex.AllReader.ReadAllEventsForward
- uid: EventStore.Core.Services.Storage.ReaderIndex.IAllReader.ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IAllReader.ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IAllReader
  isExternal: true
  name: ReadAllEventsForward(TFPos, Int32)
  nameWithType: IAllReader.ReadAllEventsForward(TFPos, Int32)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IAllReader.ReadAllEventsForward(EventStore.Core.Data.TFPos, System.Int32)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IAllReader.ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
    name: ReadAllEventsForward
    nameWithType: IAllReader.ReadAllEventsForward
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IAllReader.ReadAllEventsForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Data.TFPos
    name: TFPos
    nameWithType: TFPos
    fullName: EventStore.Core.Data.TFPos
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IAllReader.ReadAllEventsForward(EventStore.Core.Data.TFPos,System.Int32)
    name: ReadAllEventsForward
    nameWithType: IAllReader.ReadAllEventsForward
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IAllReader.ReadAllEventsForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Data.TFPos
    name: TFPos
    nameWithType: TFPos
    fullName: EventStore.Core.Data.TFPos
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.TFPos
  commentId: T:EventStore.Core.Data.TFPos
  parent: EventStore.Core.Data
  isExternal: false
  name: TFPos
  nameWithType: TFPos
  fullName: EventStore.Core.Data.TFPos
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
  parent: EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: IndexReadAllResult
  nameWithType: IndexReadAllResult
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  isExternal: false
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Services.Storage.ReaderIndex.AllReader.ReadAllEventsBackward*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.AllReader.ReadAllEventsBackward
  isExternal: false
  name: ReadAllEventsBackward
  nameWithType: AllReader.ReadAllEventsBackward
  fullName: EventStore.Core.Services.Storage.ReaderIndex.AllReader.ReadAllEventsBackward
- uid: EventStore.Core.Services.Storage.ReaderIndex.IAllReader.ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IAllReader.ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IAllReader
  isExternal: true
  name: ReadAllEventsBackward(TFPos, Int32)
  nameWithType: IAllReader.ReadAllEventsBackward(TFPos, Int32)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IAllReader.ReadAllEventsBackward(EventStore.Core.Data.TFPos, System.Int32)
  spec.csharp:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IAllReader.ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
    name: ReadAllEventsBackward
    nameWithType: IAllReader.ReadAllEventsBackward
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IAllReader.ReadAllEventsBackward
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Data.TFPos
    name: TFPos
    nameWithType: TFPos
    fullName: EventStore.Core.Data.TFPos
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Storage.ReaderIndex.IAllReader.ReadAllEventsBackward(EventStore.Core.Data.TFPos,System.Int32)
    name: ReadAllEventsBackward
    nameWithType: IAllReader.ReadAllEventsBackward
    fullName: EventStore.Core.Services.Storage.ReaderIndex.IAllReader.ReadAllEventsBackward
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Data.TFPos
    name: TFPos
    nameWithType: TFPos
    fullName: EventStore.Core.Data.TFPos
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  id: IIndexBackend
  parent: EventStore.Core.Services.Storage.ReaderIndex
  children:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.BorrowReader
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.GetSystemSettings
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetStreamLastEventNumber(System.String,System.Int64)
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetStreamMetadata(System.String,EventStore.Core.Data.StreamMetadata)
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetSystemSettings(EventStore.Core.Data.SystemSettings)
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.TryGetStreamLastEventNumber(System.String)
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.TryGetStreamMetadata(System.String)
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.UpdateStreamLastEventNumber(System.Int32,System.String,System.Nullable{System.Int64})
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.UpdateStreamMetadata(System.Int32,System.String,EventStore.Core.Data.StreamMetadata)
  langs:
  - csharp
  - vb
  name: IIndexBackend
  nameWithType: IIndexBackend
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  type: Interface
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: IIndexBackend
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public interface IIndexBackend
    content.vb: Public Interface IIndexBackend
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.BorrowReader
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.BorrowReader
  id: BorrowReader
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  langs:
  - csharp
  - vb
  name: BorrowReader()
  nameWithType: IIndexBackend.BorrowReader()
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.BorrowReader()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: BorrowReader
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: TFReaderLease BorrowReader()
    return:
      type: EventStore.Core.TransactionLog.TFReaderLease
    content.vb: Function BorrowReader As TFReaderLease
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.BorrowReader*
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.TryGetStreamLastEventNumber(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.TryGetStreamLastEventNumber(System.String)
  id: TryGetStreamLastEventNumber(System.String)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  langs:
  - csharp
  - vb
  name: TryGetStreamLastEventNumber(String)
  nameWithType: IIndexBackend.TryGetStreamLastEventNumber(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.TryGetStreamLastEventNumber(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: TryGetStreamLastEventNumber
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: IndexBackend.EventNumberCached TryGetStreamLastEventNumber(string streamId)
    parameters:
    - id: streamId
      type: System.String
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached
    content.vb: Function TryGetStreamLastEventNumber(streamId As String) As IndexBackend.EventNumberCached
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.TryGetStreamLastEventNumber*
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.TryGetStreamMetadata(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.TryGetStreamMetadata(System.String)
  id: TryGetStreamMetadata(System.String)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  langs:
  - csharp
  - vb
  name: TryGetStreamMetadata(String)
  nameWithType: IIndexBackend.TryGetStreamMetadata(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.TryGetStreamMetadata(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: TryGetStreamMetadata
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: IndexBackend.MetadataCached TryGetStreamMetadata(string streamId)
    parameters:
    - id: streamId
      type: System.String
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached
    content.vb: Function TryGetStreamMetadata(streamId As String) As IndexBackend.MetadataCached
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.TryGetStreamMetadata*
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.UpdateStreamLastEventNumber(System.Int32,System.String,System.Nullable{System.Int64})
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.UpdateStreamLastEventNumber(System.Int32,System.String,System.Nullable{System.Int64})
  id: UpdateStreamLastEventNumber(System.Int32,System.String,System.Nullable{System.Int64})
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  langs:
  - csharp
  - vb
  name: UpdateStreamLastEventNumber(Int32, String, Nullable<Int64>)
  nameWithType: IIndexBackend.UpdateStreamLastEventNumber(Int32, String, Nullable<Int64>)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.UpdateStreamLastEventNumber(System.Int32, System.String, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: UpdateStreamLastEventNumber
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: long? UpdateStreamLastEventNumber(int cacheVersion, string streamId, long? lastEventNumber)
    parameters:
    - id: cacheVersion
      type: System.Int32
    - id: streamId
      type: System.String
    - id: lastEventNumber
      type: System.Nullable{System.Int64}
    return:
      type: System.Nullable{System.Int64}
    content.vb: Function UpdateStreamLastEventNumber(cacheVersion As Integer, streamId As String, lastEventNumber As Long?) As Long?
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.UpdateStreamLastEventNumber*
  nameWithType.vb: IIndexBackend.UpdateStreamLastEventNumber(Int32, String, Nullable(Of Int64))
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.UpdateStreamLastEventNumber(System.Int32, System.String, System.Nullable(Of System.Int64))
  name.vb: UpdateStreamLastEventNumber(Int32, String, Nullable(Of Int64))
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.UpdateStreamMetadata(System.Int32,System.String,EventStore.Core.Data.StreamMetadata)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.UpdateStreamMetadata(System.Int32,System.String,EventStore.Core.Data.StreamMetadata)
  id: UpdateStreamMetadata(System.Int32,System.String,EventStore.Core.Data.StreamMetadata)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  langs:
  - csharp
  - vb
  name: UpdateStreamMetadata(Int32, String, StreamMetadata)
  nameWithType: IIndexBackend.UpdateStreamMetadata(Int32, String, StreamMetadata)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.UpdateStreamMetadata(System.Int32, System.String, EventStore.Core.Data.StreamMetadata)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: UpdateStreamMetadata
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: StreamMetadata UpdateStreamMetadata(int cacheVersion, string streamId, StreamMetadata metadata)
    parameters:
    - id: cacheVersion
      type: System.Int32
    - id: streamId
      type: System.String
    - id: metadata
      type: EventStore.Core.Data.StreamMetadata
    return:
      type: EventStore.Core.Data.StreamMetadata
    content.vb: Function UpdateStreamMetadata(cacheVersion As Integer, streamId As String, metadata As StreamMetadata) As StreamMetadata
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.UpdateStreamMetadata*
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetStreamLastEventNumber(System.String,System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetStreamLastEventNumber(System.String,System.Int64)
  id: SetStreamLastEventNumber(System.String,System.Int64)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  langs:
  - csharp
  - vb
  name: SetStreamLastEventNumber(String, Int64)
  nameWithType: IIndexBackend.SetStreamLastEventNumber(String, Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetStreamLastEventNumber(System.String, System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SetStreamLastEventNumber
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: long? SetStreamLastEventNumber(string streamId, long lastEventNumber)
    parameters:
    - id: streamId
      type: System.String
    - id: lastEventNumber
      type: System.Int64
    return:
      type: System.Nullable{System.Int64}
    content.vb: Function SetStreamLastEventNumber(streamId As String, lastEventNumber As Long) As Long?
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetStreamLastEventNumber*
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetStreamMetadata(System.String,EventStore.Core.Data.StreamMetadata)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetStreamMetadata(System.String,EventStore.Core.Data.StreamMetadata)
  id: SetStreamMetadata(System.String,EventStore.Core.Data.StreamMetadata)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  langs:
  - csharp
  - vb
  name: SetStreamMetadata(String, StreamMetadata)
  nameWithType: IIndexBackend.SetStreamMetadata(String, StreamMetadata)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetStreamMetadata(System.String, EventStore.Core.Data.StreamMetadata)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SetStreamMetadata
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: StreamMetadata SetStreamMetadata(string streamId, StreamMetadata metadata)
    parameters:
    - id: streamId
      type: System.String
    - id: metadata
      type: EventStore.Core.Data.StreamMetadata
    return:
      type: EventStore.Core.Data.StreamMetadata
    content.vb: Function SetStreamMetadata(streamId As String, metadata As StreamMetadata) As StreamMetadata
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetStreamMetadata*
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetSystemSettings(EventStore.Core.Data.SystemSettings)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetSystemSettings(EventStore.Core.Data.SystemSettings)
  id: SetSystemSettings(EventStore.Core.Data.SystemSettings)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  langs:
  - csharp
  - vb
  name: SetSystemSettings(SystemSettings)
  nameWithType: IIndexBackend.SetSystemSettings(SystemSettings)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetSystemSettings(EventStore.Core.Data.SystemSettings)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SetSystemSettings
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: void SetSystemSettings(SystemSettings systemSettings)
    parameters:
    - id: systemSettings
      type: EventStore.Core.Data.SystemSettings
    content.vb: Sub SetSystemSettings(systemSettings As SystemSettings)
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetSystemSettings*
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.GetSystemSettings
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.GetSystemSettings
  id: GetSystemSettings
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  langs:
  - csharp
  - vb
  name: GetSystemSettings()
  nameWithType: IIndexBackend.GetSystemSettings()
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.GetSystemSettings()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: GetSystemSettings
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: SystemSettings GetSystemSettings()
    return:
      type: EventStore.Core.Data.SystemSettings
    content.vb: Function GetSystemSettings As SystemSettings
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.GetSystemSettings*
references:
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IIndexBackend>()
  nameWithType: ProtobufExtensions.Serialize<IIndexBackend>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IIndexBackend)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend)()
  name.vb: Serialize(Of IIndexBackend)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IIndexBackend>
    nameWithType: ProtobufExtensions.Serialize<IIndexBackend>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IIndexBackend)
    nameWithType: ProtobufExtensions.Serialize(Of IIndexBackend)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IIndexBackend>()
  nameWithType: ProtobufExtensions.SerializeToArray<IIndexBackend>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IIndexBackend)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend)()
  name.vb: SerializeToArray(Of IIndexBackend)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IIndexBackend>
    nameWithType: ProtobufExtensions.SerializeToArray<IIndexBackend>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IIndexBackend)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IIndexBackend)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.BorrowReader*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.BorrowReader
  name: BorrowReader
  nameWithType: IIndexBackend.BorrowReader
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.BorrowReader
- uid: EventStore.Core.TransactionLog.TFReaderLease
  commentId: T:EventStore.Core.TransactionLog.TFReaderLease
  parent: EventStore.Core.TransactionLog
  name: TFReaderLease
  nameWithType: TFReaderLease
  fullName: EventStore.Core.TransactionLog.TFReaderLease
- uid: EventStore.Core.TransactionLog
  commentId: N:EventStore.Core.TransactionLog
  name: EventStore.Core.TransactionLog
  nameWithType: EventStore.Core.TransactionLog
  fullName: EventStore.Core.TransactionLog
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.TryGetStreamLastEventNumber*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.TryGetStreamLastEventNumber
  name: TryGetStreamLastEventNumber
  nameWithType: IIndexBackend.TryGetStreamLastEventNumber
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.TryGetStreamLastEventNumber
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: IndexBackend.EventNumberCached
  nameWithType: IndexBackend.EventNumberCached
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.TryGetStreamMetadata*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.TryGetStreamMetadata
  name: TryGetStreamMetadata
  nameWithType: IIndexBackend.TryGetStreamMetadata
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.TryGetStreamMetadata
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached
  parent: EventStore.Core.Services.Storage.ReaderIndex
  name: IndexBackend.MetadataCached
  nameWithType: IndexBackend.MetadataCached
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.UpdateStreamLastEventNumber*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.UpdateStreamLastEventNumber
  name: UpdateStreamLastEventNumber
  nameWithType: IIndexBackend.UpdateStreamLastEventNumber
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.UpdateStreamLastEventNumber
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.UpdateStreamMetadata*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.UpdateStreamMetadata
  name: UpdateStreamMetadata
  nameWithType: IIndexBackend.UpdateStreamMetadata
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.UpdateStreamMetadata
- uid: EventStore.Core.Data.StreamMetadata
  commentId: T:EventStore.Core.Data.StreamMetadata
  parent: EventStore.Core.Data
  name: StreamMetadata
  nameWithType: StreamMetadata
  fullName: EventStore.Core.Data.StreamMetadata
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetStreamLastEventNumber*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetStreamLastEventNumber
  name: SetStreamLastEventNumber
  nameWithType: IIndexBackend.SetStreamLastEventNumber
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetStreamLastEventNumber
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetStreamMetadata*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetStreamMetadata
  name: SetStreamMetadata
  nameWithType: IIndexBackend.SetStreamMetadata
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetStreamMetadata
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetSystemSettings*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetSystemSettings
  name: SetSystemSettings
  nameWithType: IIndexBackend.SetSystemSettings
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.SetSystemSettings
- uid: EventStore.Core.Data.SystemSettings
  commentId: T:EventStore.Core.Data.SystemSettings
  parent: EventStore.Core.Data
  name: SystemSettings
  nameWithType: SystemSettings
  fullName: EventStore.Core.Data.SystemSettings
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.GetSystemSettings*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.GetSystemSettings
  name: GetSystemSettings
  nameWithType: IIndexBackend.GetSystemSettings
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.GetSystemSettings

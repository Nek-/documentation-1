### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter
  id: IIndexCommitter
  parent: EventStore.Core.Services.Storage.ReaderIndex
  children:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Commit(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord,System.Boolean,System.Boolean)
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Commit(IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord},System.Boolean,System.Boolean)
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Dispose
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.GetCommitLastEventNumber(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Init(System.Int64)
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.LastCommitPosition
  langs:
  - csharp
  - vb
  name: IIndexCommitter
  nameWithType: IIndexCommitter
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter
  type: Interface
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexCommitter.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: IIndexCommitter
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexCommitter.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public interface IIndexCommitter
    content.vb: Public Interface IIndexCommitter
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.LastCommitPosition
  commentId: P:EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.LastCommitPosition
  id: LastCommitPosition
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter
  langs:
  - csharp
  - vb
  name: LastCommitPosition
  nameWithType: IIndexCommitter.LastCommitPosition
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.LastCommitPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexCommitter.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: LastCommitPosition
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexCommitter.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: long LastCommitPosition { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: ReadOnly Property LastCommitPosition As Long
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.LastCommitPosition*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Init(System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Init(System.Int64)
  id: Init(System.Int64)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter
  langs:
  - csharp
  - vb
  name: Init(Int64)
  nameWithType: IIndexCommitter.Init(Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Init(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexCommitter.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Init
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexCommitter.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: void Init(long buildToPosition)
    parameters:
    - id: buildToPosition
      type: System.Int64
    content.vb: Sub Init(buildToPosition As Long)
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Init*
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Dispose
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Dispose
  id: Dispose
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: IIndexCommitter.Dispose()
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Dispose()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexCommitter.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Dispose
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexCommitter.cs
    startLine: 20
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: void Dispose()
    content.vb: Sub Dispose
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Dispose*
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Commit(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord,System.Boolean,System.Boolean)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Commit(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord,System.Boolean,System.Boolean)
  id: Commit(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord,System.Boolean,System.Boolean)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter
  langs:
  - csharp
  - vb
  name: Commit(CommitLogRecord, Boolean, Boolean)
  nameWithType: IIndexCommitter.Commit(CommitLogRecord, Boolean, Boolean)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Commit(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexCommitter.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Commit
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexCommitter.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: long Commit(CommitLogRecord commit, bool isTfEof, bool cacheLastEventNumber)
    parameters:
    - id: commit
      type: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
    - id: isTfEof
      type: System.Boolean
    - id: cacheLastEventNumber
      type: System.Boolean
    return:
      type: System.Int64
    content.vb: Function Commit(commit As CommitLogRecord, isTfEof As Boolean, cacheLastEventNumber As Boolean) As Long
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Commit*
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Commit(IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord},System.Boolean,System.Boolean)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Commit(IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord},System.Boolean,System.Boolean)
  id: Commit(IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord},System.Boolean,System.Boolean)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter
  langs:
  - csharp
  - vb
  name: Commit(IList<PrepareLogRecord>, Boolean, Boolean)
  nameWithType: IIndexCommitter.Commit(IList<PrepareLogRecord>, Boolean, Boolean)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Commit(IList<EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord>, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexCommitter.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Commit
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexCommitter.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: long Commit(IList<PrepareLogRecord> commitedPrepares, bool isTfEof, bool cacheLastEventNumber)
    parameters:
    - id: commitedPrepares
      type: IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord}
    - id: isTfEof
      type: System.Boolean
    - id: cacheLastEventNumber
      type: System.Boolean
    return:
      type: System.Int64
    content.vb: Function Commit(commitedPrepares As IList(Of PrepareLogRecord), isTfEof As Boolean, cacheLastEventNumber As Boolean) As Long
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Commit*
  nameWithType.vb: IIndexCommitter.Commit(IList(Of PrepareLogRecord), Boolean, Boolean)
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Commit(IList(Of EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord), System.Boolean, System.Boolean)
  name.vb: Commit(IList(Of PrepareLogRecord), Boolean, Boolean)
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.GetCommitLastEventNumber(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.GetCommitLastEventNumber(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  id: GetCommitLastEventNumber(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter
  langs:
  - csharp
  - vb
  name: GetCommitLastEventNumber(CommitLogRecord)
  nameWithType: IIndexCommitter.GetCommitLastEventNumber(CommitLogRecord)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.GetCommitLastEventNumber(EventStore.Core.TransactionLog.LogRecords.CommitLogRecord)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexCommitter.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: GetCommitLastEventNumber
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexCommitter.cs
    startLine: 23
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: long GetCommitLastEventNumber(CommitLogRecord commit)
    parameters:
    - id: commit
      type: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
    return:
      type: System.Int64
    content.vb: Function GetCommitLastEventNumber(commit As CommitLogRecord) As Long
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.GetCommitLastEventNumber*
references:
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IIndexCommitter>()
  nameWithType: ProtobufExtensions.Serialize<IIndexCommitter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IIndexCommitter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter)()
  name.vb: Serialize(Of IIndexCommitter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IIndexCommitter>
    nameWithType: ProtobufExtensions.Serialize<IIndexCommitter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IIndexCommitter)
    nameWithType: ProtobufExtensions.Serialize(Of IIndexCommitter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IIndexCommitter>()
  nameWithType: ProtobufExtensions.SerializeToArray<IIndexCommitter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IIndexCommitter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter)()
  name.vb: SerializeToArray(Of IIndexCommitter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IIndexCommitter>
    nameWithType: ProtobufExtensions.SerializeToArray<IIndexCommitter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IIndexCommitter)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IIndexCommitter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.LastCommitPosition*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.LastCommitPosition
  name: LastCommitPosition
  nameWithType: IIndexCommitter.LastCommitPosition
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.LastCommitPosition
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Init*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Init
  name: Init
  nameWithType: IIndexCommitter.Init
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Init
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Dispose*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Dispose
  name: Dispose
  nameWithType: IIndexCommitter.Dispose
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Dispose
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Commit*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Commit
  name: Commit
  nameWithType: IIndexCommitter.Commit
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.Commit
- uid: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  commentId: T:EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
  parent: EventStore.Core.TransactionLog.LogRecords
  name: CommitLogRecord
  nameWithType: CommitLogRecord
  fullName: EventStore.Core.TransactionLog.LogRecords.CommitLogRecord
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.TransactionLog.LogRecords
  commentId: N:EventStore.Core.TransactionLog.LogRecords
  name: EventStore.Core.TransactionLog.LogRecords
  nameWithType: EventStore.Core.TransactionLog.LogRecords
  fullName: EventStore.Core.TransactionLog.LogRecords
- uid: IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord}
  commentId: '!:IList{EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord}'
  definition: IList`1
  name: IList<PrepareLogRecord>
  nameWithType: IList<PrepareLogRecord>
  fullName: IList<EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord>
  nameWithType.vb: IList(Of PrepareLogRecord)
  fullName.vb: IList(Of EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord)
  name.vb: IList(Of PrepareLogRecord)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
    name: PrepareLogRecord
    nameWithType: PrepareLogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
    name: PrepareLogRecord
    nameWithType: PrepareLogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.GetCommitLastEventNumber*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.GetCommitLastEventNumber
  name: GetCommitLastEventNumber
  nameWithType: IIndexCommitter.GetCommitLastEventNumber
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.GetCommitLastEventNumber

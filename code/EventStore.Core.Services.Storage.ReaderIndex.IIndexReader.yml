### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  id: IIndexReader
  parent: EventStore.Core.Services.Storage.ReaderIndex
  children:
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.CachedStreamInfo
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.CheckStreamAccess(System.String,EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType,IPrincipal)
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetEventStreamIdByTransactionId(System.Int64)
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetStreamLastEventNumber(System.String)
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetStreamMetadata(System.String)
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.HashCollisions
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.NotCachedStreamInfo
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadEvent(System.String,System.Int64)
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadPrepare(System.String,System.Int64)
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadStreamEventsBackward(System.String,System.Int64,System.Int32)
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadStreamEventsForward(System.String,System.Int64,System.Int32)
  langs:
  - csharp
  - vb
  name: IIndexReader
  nameWithType: IIndexReader
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  type: Interface
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: IIndexReader
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public interface IIndexReader
    content.vb: Public Interface IIndexReader
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.CachedStreamInfo
  commentId: P:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.CachedStreamInfo
  id: CachedStreamInfo
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  langs:
  - csharp
  - vb
  name: CachedStreamInfo
  nameWithType: IIndexReader.CachedStreamInfo
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.CachedStreamInfo
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CachedStreamInfo
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: long CachedStreamInfo { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: ReadOnly Property CachedStreamInfo As Long
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.CachedStreamInfo*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.NotCachedStreamInfo
  commentId: P:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.NotCachedStreamInfo
  id: NotCachedStreamInfo
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  langs:
  - csharp
  - vb
  name: NotCachedStreamInfo
  nameWithType: IIndexReader.NotCachedStreamInfo
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.NotCachedStreamInfo
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: NotCachedStreamInfo
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: long NotCachedStreamInfo { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: ReadOnly Property NotCachedStreamInfo As Long
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.NotCachedStreamInfo*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.HashCollisions
  commentId: P:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.HashCollisions
  id: HashCollisions
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  langs:
  - csharp
  - vb
  name: HashCollisions
  nameWithType: IIndexReader.HashCollisions
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.HashCollisions
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: HashCollisions
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: long HashCollisions { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: ReadOnly Property HashCollisions As Long
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.HashCollisions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadEvent(System.String,System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadEvent(System.String,System.Int64)
  id: ReadEvent(System.String,System.Int64)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  langs:
  - csharp
  - vb
  name: ReadEvent(String, Int64)
  nameWithType: IIndexReader.ReadEvent(String, Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadEvent(System.String, System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReadEvent
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: IndexReadEventResult ReadEvent(string streamId, long eventNumber)
    parameters:
    - id: streamId
      type: System.String
    - id: eventNumber
      type: System.Int64
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
    content.vb: Function ReadEvent(streamId As String, eventNumber As Long) As IndexReadEventResult
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadEvent*
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadStreamEventsForward(System.String,System.Int64,System.Int32)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadStreamEventsForward(System.String,System.Int64,System.Int32)
  id: ReadStreamEventsForward(System.String,System.Int64,System.Int32)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  langs:
  - csharp
  - vb
  name: ReadStreamEventsForward(String, Int64, Int32)
  nameWithType: IIndexReader.ReadStreamEventsForward(String, Int64, Int32)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadStreamEventsForward(System.String, System.Int64, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReadStreamEventsForward
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
    startLine: 20
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: IndexReadStreamResult ReadStreamEventsForward(string streamId, long fromEventNumber, int maxCount)
    parameters:
    - id: streamId
      type: System.String
    - id: fromEventNumber
      type: System.Int64
    - id: maxCount
      type: System.Int32
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
    content.vb: Function ReadStreamEventsForward(streamId As String, fromEventNumber As Long, maxCount As Integer) As IndexReadStreamResult
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadStreamEventsForward*
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadStreamEventsBackward(System.String,System.Int64,System.Int32)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadStreamEventsBackward(System.String,System.Int64,System.Int32)
  id: ReadStreamEventsBackward(System.String,System.Int64,System.Int32)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  langs:
  - csharp
  - vb
  name: ReadStreamEventsBackward(String, Int64, Int32)
  nameWithType: IIndexReader.ReadStreamEventsBackward(String, Int64, Int32)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadStreamEventsBackward(System.String, System.Int64, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReadStreamEventsBackward
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: IndexReadStreamResult ReadStreamEventsBackward(string streamId, long fromEventNumber, int maxCount)
    parameters:
    - id: streamId
      type: System.String
    - id: fromEventNumber
      type: System.Int64
    - id: maxCount
      type: System.Int32
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
    content.vb: Function ReadStreamEventsBackward(streamId As String, fromEventNumber As Long, maxCount As Integer) As IndexReadStreamResult
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadStreamEventsBackward*
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadPrepare(System.String,System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadPrepare(System.String,System.Int64)
  id: ReadPrepare(System.String,System.Int64)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  langs:
  - csharp
  - vb
  name: ReadPrepare(String, Int64)
  nameWithType: IIndexReader.ReadPrepare(String, Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadPrepare(System.String, System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReadPrepare
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
    startLine: 26
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  summary: "\nDoesn&apos;t filter $maxAge, $maxCount, $tb(truncate before), doesn&apos;t check stream deletion, etc.\n"
  example: []
  syntax:
    content: PrepareLogRecord ReadPrepare(string streamId, long eventNumber)
    parameters:
    - id: streamId
      type: System.String
    - id: eventNumber
      type: System.Int64
    return:
      type: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
    content.vb: Function ReadPrepare(streamId As String, eventNumber As Long) As PrepareLogRecord
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadPrepare*
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetEventStreamIdByTransactionId(System.Int64)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetEventStreamIdByTransactionId(System.Int64)
  id: GetEventStreamIdByTransactionId(System.Int64)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  langs:
  - csharp
  - vb
  name: GetEventStreamIdByTransactionId(Int64)
  nameWithType: IIndexReader.GetEventStreamIdByTransactionId(Int64)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetEventStreamIdByTransactionId(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: GetEventStreamIdByTransactionId
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
    startLine: 28
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: string GetEventStreamIdByTransactionId(long transactionId)
    parameters:
    - id: transactionId
      type: System.Int64
    return:
      type: System.String
    content.vb: Function GetEventStreamIdByTransactionId(transactionId As Long) As String
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetEventStreamIdByTransactionId*
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.CheckStreamAccess(System.String,EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType,IPrincipal)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.CheckStreamAccess(System.String,EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType,IPrincipal)
  id: CheckStreamAccess(System.String,EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType,IPrincipal)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  langs:
  - csharp
  - vb
  name: CheckStreamAccess(String, StreamAccessType, IPrincipal)
  nameWithType: IIndexReader.CheckStreamAccess(String, StreamAccessType, IPrincipal)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.CheckStreamAccess(System.String, EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType, IPrincipal)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CheckStreamAccess
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
    startLine: 29
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: StreamAccess CheckStreamAccess(string streamId, StreamAccessType streamAccessType, IPrincipal user)
    parameters:
    - id: streamId
      type: System.String
    - id: streamAccessType
      type: EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType
    - id: user
      type: IPrincipal
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
    content.vb: Function CheckStreamAccess(streamId As String, streamAccessType As StreamAccessType, user As IPrincipal) As StreamAccess
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.CheckStreamAccess*
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetStreamMetadata(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetStreamMetadata(System.String)
  id: GetStreamMetadata(System.String)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  langs:
  - csharp
  - vb
  name: GetStreamMetadata(String)
  nameWithType: IIndexReader.GetStreamMetadata(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetStreamMetadata(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: GetStreamMetadata
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
    startLine: 31
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: StreamMetadata GetStreamMetadata(string streamId)
    parameters:
    - id: streamId
      type: System.String
    return:
      type: EventStore.Core.Data.StreamMetadata
    content.vb: Function GetStreamMetadata(streamId As String) As StreamMetadata
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetStreamMetadata*
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetStreamLastEventNumber(System.String)
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetStreamLastEventNumber(System.String)
  id: GetStreamLastEventNumber(System.String)
  parent: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  langs:
  - csharp
  - vb
  name: GetStreamLastEventNumber(String)
  nameWithType: IIndexReader.GetStreamLastEventNumber(String)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetStreamLastEventNumber(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: GetStreamLastEventNumber
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexReader.cs
    startLine: 32
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: long GetStreamLastEventNumber(string streamId)
    parameters:
    - id: streamId
      type: System.String
    return:
      type: System.Int64
    content.vb: Function GetStreamLastEventNumber(streamId As String) As Long
  overload: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetStreamLastEventNumber*
references:
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IIndexReader>()
  nameWithType: ProtobufExtensions.Serialize<IIndexReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IIndexReader>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IIndexReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IIndexReader)()
  name.vb: Serialize(Of IIndexReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IIndexReader>
    nameWithType: ProtobufExtensions.Serialize<IIndexReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IIndexReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IIndexReader)
    nameWithType: ProtobufExtensions.Serialize(Of IIndexReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IIndexReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IIndexReader>()
  nameWithType: ProtobufExtensions.SerializeToArray<IIndexReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IIndexReader>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IIndexReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IIndexReader)()
  name.vb: SerializeToArray(Of IIndexReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IIndexReader>
    nameWithType: ProtobufExtensions.SerializeToArray<IIndexReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IIndexReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IIndexReader)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IIndexReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IIndexReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.CachedStreamInfo*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.CachedStreamInfo
  isExternal: false
  name: CachedStreamInfo
  nameWithType: IIndexReader.CachedStreamInfo
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.CachedStreamInfo
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.NotCachedStreamInfo*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.NotCachedStreamInfo
  isExternal: false
  name: NotCachedStreamInfo
  nameWithType: IIndexReader.NotCachedStreamInfo
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.NotCachedStreamInfo
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.HashCollisions*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.HashCollisions
  isExternal: false
  name: HashCollisions
  nameWithType: IIndexReader.HashCollisions
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.HashCollisions
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadEvent*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadEvent
  isExternal: false
  name: ReadEvent
  nameWithType: IIndexReader.ReadEvent
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadEvent
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
  parent: EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: IndexReadEventResult
  nameWithType: IndexReadEventResult
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadStreamEventsForward*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadStreamEventsForward
  isExternal: false
  name: ReadStreamEventsForward
  nameWithType: IIndexReader.ReadStreamEventsForward
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadStreamEventsForward
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
  parent: EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: IndexReadStreamResult
  nameWithType: IndexReadStreamResult
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadStreamEventsBackward*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadStreamEventsBackward
  isExternal: false
  name: ReadStreamEventsBackward
  nameWithType: IIndexReader.ReadStreamEventsBackward
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadStreamEventsBackward
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadPrepare*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadPrepare
  isExternal: false
  name: ReadPrepare
  nameWithType: IIndexReader.ReadPrepare
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.ReadPrepare
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
  commentId: T:EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
  parent: EventStore.Core.TransactionLog.LogRecords
  isExternal: false
  name: PrepareLogRecord
  nameWithType: PrepareLogRecord
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
- uid: EventStore.Core.TransactionLog.LogRecords
  commentId: N:EventStore.Core.TransactionLog.LogRecords
  isExternal: false
  name: EventStore.Core.TransactionLog.LogRecords
  nameWithType: EventStore.Core.TransactionLog.LogRecords
  fullName: EventStore.Core.TransactionLog.LogRecords
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetEventStreamIdByTransactionId*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetEventStreamIdByTransactionId
  isExternal: false
  name: GetEventStreamIdByTransactionId
  nameWithType: IIndexReader.GetEventStreamIdByTransactionId
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetEventStreamIdByTransactionId
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.CheckStreamAccess*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.CheckStreamAccess
  isExternal: false
  name: CheckStreamAccess
  nameWithType: IIndexReader.CheckStreamAccess
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.CheckStreamAccess
- uid: EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType
  parent: EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: StreamAccessType
  nameWithType: StreamAccessType
  fullName: EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType
- uid: IPrincipal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: IPrincipal
- uid: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
  parent: EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: StreamAccess
  nameWithType: StreamAccess
  fullName: EventStore.Core.Services.Storage.ReaderIndex.StreamAccess
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetStreamMetadata*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetStreamMetadata
  isExternal: false
  name: GetStreamMetadata
  nameWithType: IIndexReader.GetStreamMetadata
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetStreamMetadata
- uid: EventStore.Core.Data.StreamMetadata
  commentId: T:EventStore.Core.Data.StreamMetadata
  parent: EventStore.Core.Data
  isExternal: false
  name: StreamMetadata
  nameWithType: StreamMetadata
  fullName: EventStore.Core.Data.StreamMetadata
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  isExternal: false
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetStreamLastEventNumber*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetStreamLastEventNumber
  isExternal: false
  name: GetStreamLastEventNumber
  nameWithType: IIndexReader.GetStreamLastEventNumber
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.GetStreamLastEventNumber

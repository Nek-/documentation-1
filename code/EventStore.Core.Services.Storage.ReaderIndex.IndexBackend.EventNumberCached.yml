### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached
  id: IndexBackend.EventNumberCached
  parent: EventStore.Core.Services.Storage.ReaderIndex
  children:
  - EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.#ctor(System.Int32,System.Nullable{System.Int64})
  - EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.LastEventNumber
  - EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.Version
  langs:
  - csharp
  - vb
  name: IndexBackend.EventNumberCached
  nameWithType: IndexBackend.EventNumberCached
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached
  type: Struct
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EventNumberCached
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 110
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public struct EventNumberCached
    content.vb: Public Structure EventNumberCached
  extensionMethods:
  - EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.Version
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.Version
  id: Version
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: IndexBackend.EventNumberCached.Version
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.Version
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Version
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 112
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly int Version
    return:
      type: System.Int32
    content.vb: Public ReadOnly Version As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.LastEventNumber
  commentId: F:EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.LastEventNumber
  id: LastEventNumber
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached
  langs:
  - csharp
  - vb
  name: LastEventNumber
  nameWithType: IndexBackend.EventNumberCached.LastEventNumber
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.LastEventNumber
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: LastEventNumber
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 113
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public readonly long ? LastEventNumber
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public ReadOnly LastEventNumber As Long?
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.#ctor(System.Int32,System.Nullable{System.Int64})
  commentId: M:EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.#ctor(System.Int32,System.Nullable{System.Int64})
  id: '#ctor(System.Int32,System.Nullable{System.Int64})'
  parent: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached
  langs:
  - csharp
  - vb
  name: EventNumberCached(Int32, Nullable<Int64>)
  nameWithType: IndexBackend.EventNumberCached.EventNumberCached(Int32, Nullable<Int64>)
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.EventNumberCached(System.Int32, System.Nullable<System.Int64>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Storage/ReaderIndex/IndexBackend.cs
    startLine: 115
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Storage.ReaderIndex
  syntax:
    content: public EventNumberCached(int version, long ? lastEventNumber)
    parameters:
    - id: version
      type: System.Int32
    - id: lastEventNumber
      type: System.Nullable{System.Int64}
    content.vb: Public Sub New(version As Integer, lastEventNumber As Long?)
  overload: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.#ctor*
  nameWithType.vb: IndexBackend.EventNumberCached.EventNumberCached(Int32, Nullable(Of Int64))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.EventNumberCached(System.Int32, System.Nullable(Of System.Int64))
  name.vb: EventNumberCached(Int32, Nullable(Of Int64))
references:
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<IndexBackend.EventNumberCached>()
  nameWithType: EnumExtensions.EnumValueName<IndexBackend.EventNumberCached>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of IndexBackend.EventNumberCached)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached)()
  name.vb: EnumValueName(Of IndexBackend.EventNumberCached)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<IndexBackend.EventNumberCached>
    nameWithType: EnumExtensions.EnumValueName<IndexBackend.EventNumberCached>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of IndexBackend.EventNumberCached)
    nameWithType: EnumExtensions.EnumValueName(Of IndexBackend.EventNumberCached)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IndexBackend.EventNumberCached>()
  nameWithType: ProtobufExtensions.Serialize<IndexBackend.EventNumberCached>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IndexBackend.EventNumberCached)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached)()
  name.vb: Serialize(Of IndexBackend.EventNumberCached)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IndexBackend.EventNumberCached>
    nameWithType: ProtobufExtensions.Serialize<IndexBackend.EventNumberCached>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IndexBackend.EventNumberCached)
    nameWithType: ProtobufExtensions.Serialize(Of IndexBackend.EventNumberCached)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IndexBackend.EventNumberCached>()
  nameWithType: ProtobufExtensions.SerializeToArray<IndexBackend.EventNumberCached>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IndexBackend.EventNumberCached)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached)()
  name.vb: SerializeToArray(Of IndexBackend.EventNumberCached)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IndexBackend.EventNumberCached>
    nameWithType: ProtobufExtensions.SerializeToArray<IndexBackend.EventNumberCached>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IndexBackend.EventNumberCached)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IndexBackend.EventNumberCached)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  isExternal: false
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  isExternal: false
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  isExternal: false
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.#ctor*
  commentId: Overload:EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.#ctor
  isExternal: false
  name: EventNumberCached
  nameWithType: IndexBackend.EventNumberCached.EventNumberCached
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.EventNumberCached

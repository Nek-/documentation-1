### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Http.ControllerAction
  commentId: T:EventStore.Core.Services.Transport.Http.ControllerAction
  id: ControllerAction
  parent: EventStore.Core.Services.Transport.Http
  children:
  - EventStore.Core.Services.Transport.Http.ControllerAction.#ctor(System.String,System.String,EventStore.Transport.Http.ICodec[],EventStore.Transport.Http.ICodec[])
  - EventStore.Core.Services.Transport.Http.ControllerAction.DefaultResponseCodec
  - EventStore.Core.Services.Transport.Http.ControllerAction.Equals(EventStore.Core.Services.Transport.Http.ControllerAction)
  - EventStore.Core.Services.Transport.Http.ControllerAction.Equals(System.Object)
  - EventStore.Core.Services.Transport.Http.ControllerAction.GetHashCode
  - EventStore.Core.Services.Transport.Http.ControllerAction.HttpMethod
  - EventStore.Core.Services.Transport.Http.ControllerAction.SupportedRequestCodecs
  - EventStore.Core.Services.Transport.Http.ControllerAction.SupportedResponseCodecs
  - EventStore.Core.Services.Transport.Http.ControllerAction.ToString
  - EventStore.Core.Services.Transport.Http.ControllerAction.UriTemplate
  langs:
  - csharp
  - vb
  name: ControllerAction
  nameWithType: ControllerAction
  fullName: EventStore.Core.Services.Transport.Http.ControllerAction
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ControllerAction
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: 'public class ControllerAction : object'
    content.vb: >-
      Public Class ControllerAction
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Transport.Http.ControllerAction.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Transport.Http.ControllerAction.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Transport.Http.ControllerAction.UriTemplate
  commentId: F:EventStore.Core.Services.Transport.Http.ControllerAction.UriTemplate
  id: UriTemplate
  parent: EventStore.Core.Services.Transport.Http.ControllerAction
  langs:
  - csharp
  - vb
  name: UriTemplate
  nameWithType: ControllerAction.UriTemplate
  fullName: EventStore.Core.Services.Transport.Http.ControllerAction.UriTemplate
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: UriTemplate
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public readonly string UriTemplate
    return:
      type: System.String
    content.vb: Public ReadOnly UriTemplate As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.ControllerAction.HttpMethod
  commentId: F:EventStore.Core.Services.Transport.Http.ControllerAction.HttpMethod
  id: HttpMethod
  parent: EventStore.Core.Services.Transport.Http.ControllerAction
  langs:
  - csharp
  - vb
  name: HttpMethod
  nameWithType: ControllerAction.HttpMethod
  fullName: EventStore.Core.Services.Transport.Http.ControllerAction.HttpMethod
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: HttpMethod
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public readonly string HttpMethod
    return:
      type: System.String
    content.vb: Public ReadOnly HttpMethod As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.ControllerAction.SupportedRequestCodecs
  commentId: F:EventStore.Core.Services.Transport.Http.ControllerAction.SupportedRequestCodecs
  id: SupportedRequestCodecs
  parent: EventStore.Core.Services.Transport.Http.ControllerAction
  langs:
  - csharp
  - vb
  name: SupportedRequestCodecs
  nameWithType: ControllerAction.SupportedRequestCodecs
  fullName: EventStore.Core.Services.Transport.Http.ControllerAction.SupportedRequestCodecs
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SupportedRequestCodecs
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public readonly ICodec[] SupportedRequestCodecs
    return:
      type: EventStore.Transport.Http.ICodec[]
    content.vb: Public ReadOnly SupportedRequestCodecs As ICodec()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.ControllerAction.SupportedResponseCodecs
  commentId: F:EventStore.Core.Services.Transport.Http.ControllerAction.SupportedResponseCodecs
  id: SupportedResponseCodecs
  parent: EventStore.Core.Services.Transport.Http.ControllerAction
  langs:
  - csharp
  - vb
  name: SupportedResponseCodecs
  nameWithType: ControllerAction.SupportedResponseCodecs
  fullName: EventStore.Core.Services.Transport.Http.ControllerAction.SupportedResponseCodecs
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SupportedResponseCodecs
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public readonly ICodec[] SupportedResponseCodecs
    return:
      type: EventStore.Transport.Http.ICodec[]
    content.vb: Public ReadOnly SupportedResponseCodecs As ICodec()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.ControllerAction.DefaultResponseCodec
  commentId: F:EventStore.Core.Services.Transport.Http.ControllerAction.DefaultResponseCodec
  id: DefaultResponseCodec
  parent: EventStore.Core.Services.Transport.Http.ControllerAction
  langs:
  - csharp
  - vb
  name: DefaultResponseCodec
  nameWithType: ControllerAction.DefaultResponseCodec
  fullName: EventStore.Core.Services.Transport.Http.ControllerAction.DefaultResponseCodec
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: DefaultResponseCodec
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public readonly ICodec DefaultResponseCodec
    return:
      type: EventStore.Transport.Http.ICodec
    content.vb: Public ReadOnly DefaultResponseCodec As ICodec
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.ControllerAction.#ctor(System.String,System.String,EventStore.Transport.Http.ICodec[],EventStore.Transport.Http.ICodec[])
  commentId: M:EventStore.Core.Services.Transport.Http.ControllerAction.#ctor(System.String,System.String,EventStore.Transport.Http.ICodec[],EventStore.Transport.Http.ICodec[])
  id: '#ctor(System.String,System.String,EventStore.Transport.Http.ICodec[],EventStore.Transport.Http.ICodec[])'
  parent: EventStore.Core.Services.Transport.Http.ControllerAction
  langs:
  - csharp
  - vb
  name: ControllerAction(String, String, ICodec[], ICodec[])
  nameWithType: ControllerAction.ControllerAction(String, String, ICodec[], ICodec[])
  fullName: EventStore.Core.Services.Transport.Http.ControllerAction.ControllerAction(System.String, System.String, EventStore.Transport.Http.ICodec[], EventStore.Transport.Http.ICodec[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public ControllerAction(string uriTemplate, string httpMethod, ICodec[] requestCodecs, ICodec[] responseCodecs)
    parameters:
    - id: uriTemplate
      type: System.String
    - id: httpMethod
      type: System.String
    - id: requestCodecs
      type: EventStore.Transport.Http.ICodec[]
    - id: responseCodecs
      type: EventStore.Transport.Http.ICodec[]
    content.vb: Public Sub New(uriTemplate As String, httpMethod As String, requestCodecs As ICodec(), responseCodecs As ICodec())
  overload: EventStore.Core.Services.Transport.Http.ControllerAction.#ctor*
  nameWithType.vb: ControllerAction.ControllerAction(String, String, ICodec(), ICodec())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Transport.Http.ControllerAction.ControllerAction(System.String, System.String, EventStore.Transport.Http.ICodec(), EventStore.Transport.Http.ICodec())
  name.vb: ControllerAction(String, String, ICodec(), ICodec())
- uid: EventStore.Core.Services.Transport.Http.ControllerAction.Equals(EventStore.Core.Services.Transport.Http.ControllerAction)
  commentId: M:EventStore.Core.Services.Transport.Http.ControllerAction.Equals(EventStore.Core.Services.Transport.Http.ControllerAction)
  id: Equals(EventStore.Core.Services.Transport.Http.ControllerAction)
  parent: EventStore.Core.Services.Transport.Http.ControllerAction
  langs:
  - csharp
  - vb
  name: Equals(ControllerAction)
  nameWithType: ControllerAction.Equals(ControllerAction)
  fullName: EventStore.Core.Services.Transport.Http.ControllerAction.Equals(EventStore.Core.Services.Transport.Http.ControllerAction)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Equals
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
    startLine: 33
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public bool Equals(ControllerAction other)
    parameters:
    - id: other
      type: EventStore.Core.Services.Transport.Http.ControllerAction
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ControllerAction) As Boolean
  overload: EventStore.Core.Services.Transport.Http.ControllerAction.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.ControllerAction.Equals(System.Object)
  commentId: M:EventStore.Core.Services.Transport.Http.ControllerAction.Equals(System.Object)
  id: Equals(System.Object)
  parent: EventStore.Core.Services.Transport.Http.ControllerAction
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ControllerAction.Equals(Object)
  fullName: EventStore.Core.Services.Transport.Http.ControllerAction.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Equals
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
    startLine: 40
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overload: EventStore.Core.Services.Transport.Http.ControllerAction.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Services.Transport.Http.ControllerAction.GetHashCode
  commentId: M:EventStore.Core.Services.Transport.Http.ControllerAction.GetHashCode
  id: GetHashCode
  parent: EventStore.Core.Services.Transport.Http.ControllerAction
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ControllerAction.GetHashCode()
  fullName: EventStore.Core.Services.Transport.Http.ControllerAction.GetHashCode()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: GetHashCode
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
    startLine: 48
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: EventStore.Core.Services.Transport.Http.ControllerAction.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Services.Transport.Http.ControllerAction.ToString
  commentId: M:EventStore.Core.Services.Transport.Http.ControllerAction.ToString
  id: ToString
  parent: EventStore.Core.Services.Transport.Http.ControllerAction
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ControllerAction.ToString()
  fullName: EventStore.Core.Services.Transport.Http.ControllerAction.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ControllerAction.cs
    startLine: 56
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.Core.Services.Transport.Http.ControllerAction.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.Services.Transport.Http
  commentId: N:EventStore.Core.Services.Transport.Http
  name: EventStore.Core.Services.Transport.Http
  nameWithType: EventStore.Core.Services.Transport.Http
  fullName: EventStore.Core.Services.Transport.Http
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.ControllerAction.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ControllerAction>()
  nameWithType: ProtobufExtensions.Serialize<ControllerAction>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.ControllerAction>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ControllerAction)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.ControllerAction)()
  name.vb: Serialize(Of ControllerAction)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ControllerAction>
    nameWithType: ProtobufExtensions.Serialize<ControllerAction>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.ControllerAction>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ControllerAction)
    nameWithType: ProtobufExtensions.Serialize(Of ControllerAction)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.ControllerAction)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.ControllerAction.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ControllerAction>()
  nameWithType: ProtobufExtensions.SerializeToArray<ControllerAction>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.ControllerAction>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ControllerAction)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.ControllerAction)()
  name.vb: SerializeToArray(Of ControllerAction)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ControllerAction>
    nameWithType: ProtobufExtensions.SerializeToArray<ControllerAction>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.ControllerAction>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ControllerAction)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ControllerAction)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.ControllerAction)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Transport.Http.ICodec[]
  isExternal: true
  name: ICodec[]
  nameWithType: ICodec[]
  fullName: EventStore.Transport.Http.ICodec[]
  nameWithType.vb: ICodec()
  fullName.vb: EventStore.Transport.Http.ICodec()
  name.vb: ICodec()
  spec.csharp:
  - uid: EventStore.Transport.Http.ICodec
    name: ICodec
    nameWithType: ICodec
    fullName: EventStore.Transport.Http.ICodec
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Transport.Http.ICodec
    name: ICodec
    nameWithType: ICodec
    fullName: EventStore.Transport.Http.ICodec
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Transport.Http.ICodec
  commentId: T:EventStore.Transport.Http.ICodec
  parent: EventStore.Transport.Http
  name: ICodec
  nameWithType: ICodec
  fullName: EventStore.Transport.Http.ICodec
- uid: EventStore.Transport.Http
  commentId: N:EventStore.Transport.Http
  name: EventStore.Transport.Http
  nameWithType: EventStore.Transport.Http
  fullName: EventStore.Transport.Http
- uid: EventStore.Core.Services.Transport.Http.ControllerAction.#ctor*
  commentId: Overload:EventStore.Core.Services.Transport.Http.ControllerAction.#ctor
  name: ControllerAction
  nameWithType: ControllerAction.ControllerAction
  fullName: EventStore.Core.Services.Transport.Http.ControllerAction.ControllerAction
- uid: EventStore.Core.Services.Transport.Http.ControllerAction.Equals*
  commentId: Overload:EventStore.Core.Services.Transport.Http.ControllerAction.Equals
  name: Equals
  nameWithType: ControllerAction.Equals
  fullName: EventStore.Core.Services.Transport.Http.ControllerAction.Equals
- uid: EventStore.Core.Services.Transport.Http.ControllerAction
  commentId: T:EventStore.Core.Services.Transport.Http.ControllerAction
  parent: EventStore.Core.Services.Transport.Http
  name: ControllerAction
  nameWithType: ControllerAction
  fullName: EventStore.Core.Services.Transport.Http.ControllerAction
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Services.Transport.Http.ControllerAction.GetHashCode*
  commentId: Overload:EventStore.Core.Services.Transport.Http.ControllerAction.GetHashCode
  name: GetHashCode
  nameWithType: ControllerAction.GetHashCode
  fullName: EventStore.Core.Services.Transport.Http.ControllerAction.GetHashCode
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Services.Transport.Http.ControllerAction.ToString*
  commentId: Overload:EventStore.Core.Services.Transport.Http.ControllerAction.ToString
  name: ToString
  nameWithType: ControllerAction.ToString
  fullName: EventStore.Core.Services.Transport.Http.ControllerAction.ToString

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure
  commentId: T:EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure
  id: InfoController.OptionStructure
  parent: EventStore.Core.Services.Transport.Http.Controllers
  children:
  - EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Description
  - EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Group
  - EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Name
  - EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.PossibleValues
  - EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Value
  langs:
  - csharp
  - vb
  name: InfoController.OptionStructure
  nameWithType: InfoController.OptionStructure
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: OptionStructure
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
    startLine: 82
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: 'public class OptionStructure : object'
    content.vb: >-
      Public Class OptionStructure

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Name
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Name
  id: Name
  parent: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: InfoController.OptionStructure.Name
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Name
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Name
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
    startLine: 84
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Description
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Description
  id: Description
  parent: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: InfoController.OptionStructure.Description
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Description
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Description
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
    startLine: 85
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Group
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Group
  id: Group
  parent: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: InfoController.OptionStructure.Group
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Group
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Group
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
    startLine: 86
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public string Group { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Group As String
  overload: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Group*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Value
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Value
  id: Value
  parent: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: InfoController.OptionStructure.Value
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Value
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Value
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
    startLine: 87
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.PossibleValues
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.PossibleValues
  id: PossibleValues
  parent: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure
  langs:
  - csharp
  - vb
  name: PossibleValues
  nameWithType: InfoController.OptionStructure.PossibleValues
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.PossibleValues
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PossibleValues
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
    startLine: 88
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public string[] PossibleValues { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property PossibleValues As String()
  overload: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.PossibleValues*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.Transport.Http.Controllers
  commentId: N:EventStore.Core.Services.Transport.Http.Controllers
  isExternal: false
  name: EventStore.Core.Services.Transport.Http.Controllers
  nameWithType: EventStore.Core.Services.Transport.Http.Controllers
  fullName: EventStore.Core.Services.Transport.Http.Controllers
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<InfoController.OptionStructure>()
  nameWithType: ProtobufExtensions.Serialize<InfoController.OptionStructure>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of InfoController.OptionStructure)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure)()
  name.vb: Serialize(Of InfoController.OptionStructure)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<InfoController.OptionStructure>
    nameWithType: ProtobufExtensions.Serialize<InfoController.OptionStructure>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of InfoController.OptionStructure)
    nameWithType: ProtobufExtensions.Serialize(Of InfoController.OptionStructure)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<InfoController.OptionStructure>()
  nameWithType: ProtobufExtensions.SerializeToArray<InfoController.OptionStructure>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of InfoController.OptionStructure)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure)()
  name.vb: SerializeToArray(Of InfoController.OptionStructure)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<InfoController.OptionStructure>
    nameWithType: ProtobufExtensions.SerializeToArray<InfoController.OptionStructure>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of InfoController.OptionStructure)
    nameWithType: ProtobufExtensions.SerializeToArray(Of InfoController.OptionStructure)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Name*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Name
  isExternal: false
  name: Name
  nameWithType: InfoController.OptionStructure.Name
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Description*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Description
  isExternal: false
  name: Description
  nameWithType: InfoController.OptionStructure.Description
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Description
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Group*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Group
  isExternal: false
  name: Group
  nameWithType: InfoController.OptionStructure.Group
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Group
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Value*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Value
  isExternal: false
  name: Value
  nameWithType: InfoController.OptionStructure.Value
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.Value
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.PossibleValues*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.PossibleValues
  isExternal: false
  name: PossibleValues
  nameWithType: InfoController.OptionStructure.PossibleValues
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.PossibleValues
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController
  commentId: T:EventStore.Core.Services.Transport.Http.Controllers.InfoController
  id: InfoController
  parent: EventStore.Core.Services.Transport.Http.Controllers
  children:
  - EventStore.Core.Services.Transport.Http.Controllers.InfoController.#ctor(EventStore.Common.Options.IOptions,EventStore.Common.Options.ProjectionType)
  - EventStore.Core.Services.Transport.Http.Controllers.InfoController.Filter(EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure[],System.String[])
  - EventStore.Core.Services.Transport.Http.Controllers.InfoController.GetOptionsInfo(EventStore.Common.Options.IOptions)
  - EventStore.Core.Services.Transport.Http.Controllers.InfoController.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  - EventStore.Core.Services.Transport.Http.Controllers.InfoController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  langs:
  - csharp
  - vb
  name: InfoController
  nameWithType: InfoController
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InfoController
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: 'public class InfoController : object, IHttpController, IHandle<SystemMessage.StateChangeMessage>'
    content.vb: >-
      Public Class InfoController
          Inherits Object
          Implements IHttpController, IHandle(Of SystemMessage.StateChangeMessage)
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Services.Transport.Http.IHttpController
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Transport.Http.Controllers.InfoController.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Transport.Http.Controllers.InfoController.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.#ctor(EventStore.Common.Options.IOptions,EventStore.Common.Options.ProjectionType)
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.InfoController.#ctor(EventStore.Common.Options.IOptions,EventStore.Common.Options.ProjectionType)
  id: '#ctor(EventStore.Common.Options.IOptions,EventStore.Common.Options.ProjectionType)'
  parent: EventStore.Core.Services.Transport.Http.Controllers.InfoController
  langs:
  - csharp
  - vb
  name: InfoController(IOptions, ProjectionType)
  nameWithType: InfoController.InfoController(IOptions, ProjectionType)
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.InfoController(EventStore.Common.Options.IOptions, EventStore.Common.Options.ProjectionType)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
    startLine: 26
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public InfoController(IOptions options, ProjectionType projectionType)
    parameters:
    - id: options
      type: EventStore.Common.Options.IOptions
    - id: projectionType
      type: EventStore.Common.Options.ProjectionType
    content.vb: Public Sub New(options As IOptions, projectionType As ProjectionType)
  overload: EventStore.Core.Services.Transport.Http.Controllers.InfoController.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.InfoController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  id: Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  parent: EventStore.Core.Services.Transport.Http.Controllers.InfoController
  langs:
  - csharp
  - vb
  name: Subscribe(IHttpService)
  nameWithType: InfoController.Subscribe(IHttpService)
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Subscribe
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
    startLine: 32
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public void Subscribe(IHttpService service)
    parameters:
    - id: service
      type: EventStore.Core.Services.Transport.Http.IHttpService
    content.vb: Public Sub Subscribe(service As IHttpService)
  overload: EventStore.Core.Services.Transport.Http.Controllers.InfoController.Subscribe*
  implements:
  - EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.InfoController.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  id: Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  parent: EventStore.Core.Services.Transport.Http.Controllers.InfoController
  langs:
  - csharp
  - vb
  name: Handle(SystemMessage.StateChangeMessage)
  nameWithType: InfoController.Handle(SystemMessage.StateChangeMessage)
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
    startLine: 40
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public void Handle(SystemMessage.StateChangeMessage message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    content.vb: Public Sub Handle(message As SystemMessage.StateChangeMessage)
  overload: EventStore.Core.Services.Transport.Http.Controllers.InfoController.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.GetOptionsInfo(EventStore.Common.Options.IOptions)
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.InfoController.GetOptionsInfo(EventStore.Common.Options.IOptions)
  id: GetOptionsInfo(EventStore.Common.Options.IOptions)
  parent: EventStore.Core.Services.Transport.Http.Controllers.InfoController
  langs:
  - csharp
  - vb
  name: GetOptionsInfo(IOptions)
  nameWithType: InfoController.GetOptionsInfo(IOptions)
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.GetOptionsInfo(EventStore.Common.Options.IOptions)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetOptionsInfo
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
    startLine: 91
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public InfoController.OptionStructure[] GetOptionsInfo(IOptions options)
    parameters:
    - id: options
      type: EventStore.Common.Options.IOptions
    return:
      type: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure[]
    content.vb: Public Function GetOptionsInfo(options As IOptions) As InfoController.OptionStructure()
  overload: EventStore.Core.Services.Transport.Http.Controllers.InfoController.GetOptionsInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.Filter(EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure[],System.String[])
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.InfoController.Filter(EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure[],System.String[])
  id: Filter(EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure[],System.String[])
  parent: EventStore.Core.Services.Transport.Http.Controllers.InfoController
  langs:
  - csharp
  - vb
  name: Filter(InfoController.OptionStructure[], String[])
  nameWithType: InfoController.Filter(InfoController.OptionStructure[], String[])
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.Filter(EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure[], System.String[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Filter
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/InfoController.cs
    startLine: 126
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public InfoController.OptionStructure[] Filter(InfoController.OptionStructure[] optionsToBeFiltered, params string[] namesOfValuesToExclude)
    parameters:
    - id: optionsToBeFiltered
      type: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure[]
    - id: namesOfValuesToExclude
      type: System.String[]
    return:
      type: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure[]
    content.vb: Public Function Filter(optionsToBeFiltered As InfoController.OptionStructure(), ParamArray namesOfValuesToExclude As String()) As InfoController.OptionStructure()
  overload: EventStore.Core.Services.Transport.Http.Controllers.InfoController.Filter*
  nameWithType.vb: InfoController.Filter(InfoController.OptionStructure(), String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Transport.Http.Controllers.InfoController.Filter(EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure(), System.String())
  name.vb: Filter(InfoController.OptionStructure(), String())
references:
- uid: EventStore.Core.Services.Transport.Http.Controllers
  commentId: N:EventStore.Core.Services.Transport.Http.Controllers
  isExternal: false
  name: EventStore.Core.Services.Transport.Http.Controllers
  nameWithType: EventStore.Core.Services.Transport.Http.Controllers
  fullName: EventStore.Core.Services.Transport.Http.Controllers
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Services.Transport.Http.IHttpController
  commentId: T:EventStore.Core.Services.Transport.Http.IHttpController
  parent: EventStore.Core.Services.Transport.Http
  isExternal: false
  name: IHttpController
  nameWithType: IHttpController
  fullName: EventStore.Core.Services.Transport.Http.IHttpController
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<SystemMessage.StateChangeMessage>
  nameWithType: IHandle<SystemMessage.StateChangeMessage>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.StateChangeMessage>
  nameWithType.vb: IHandle(Of SystemMessage.StateChangeMessage)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  name.vb: IHandle(Of SystemMessage.StateChangeMessage)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    name: SystemMessage.StateChangeMessage
    nameWithType: SystemMessage.StateChangeMessage
    fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    name: SystemMessage.StateChangeMessage
    nameWithType: SystemMessage.StateChangeMessage
    fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<InfoController>()
  nameWithType: ProtobufExtensions.Serialize<InfoController>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.Controllers.InfoController>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of InfoController)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.Controllers.InfoController)()
  name.vb: Serialize(Of InfoController)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<InfoController>
    nameWithType: ProtobufExtensions.Serialize<InfoController>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.Controllers.InfoController>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of InfoController)
    nameWithType: ProtobufExtensions.Serialize(Of InfoController)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.Controllers.InfoController)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<InfoController>()
  nameWithType: ProtobufExtensions.SerializeToArray<InfoController>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.Controllers.InfoController>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of InfoController)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.Controllers.InfoController)()
  name.vb: SerializeToArray(Of InfoController)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<InfoController>
    nameWithType: ProtobufExtensions.SerializeToArray<InfoController>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.Controllers.InfoController>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of InfoController)
    nameWithType: ProtobufExtensions.SerializeToArray(Of InfoController)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.Controllers.InfoController)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http
  commentId: N:EventStore.Core.Services.Transport.Http
  isExternal: false
  name: EventStore.Core.Services.Transport.Http
  nameWithType: EventStore.Core.Services.Transport.Http
  fullName: EventStore.Core.Services.Transport.Http
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  isExternal: false
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.#ctor*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.InfoController.#ctor
  isExternal: false
  name: InfoController
  nameWithType: InfoController.InfoController
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.InfoController
- uid: EventStore.Common.Options.IOptions
  commentId: T:EventStore.Common.Options.IOptions
  parent: EventStore.Common.Options
  isExternal: false
  name: IOptions
  nameWithType: IOptions
  fullName: EventStore.Common.Options.IOptions
- uid: EventStore.Common.Options.ProjectionType
  commentId: T:EventStore.Common.Options.ProjectionType
  parent: EventStore.Common.Options
  isExternal: false
  name: ProjectionType
  nameWithType: ProjectionType
  fullName: EventStore.Common.Options.ProjectionType
- uid: EventStore.Common.Options
  commentId: N:EventStore.Common.Options
  isExternal: false
  name: EventStore.Common.Options
  nameWithType: EventStore.Common.Options
  fullName: EventStore.Common.Options
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.Subscribe*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.InfoController.Subscribe
  isExternal: false
  name: Subscribe
  nameWithType: InfoController.Subscribe
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.Subscribe
- uid: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  commentId: M:EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  parent: EventStore.Core.Services.Transport.Http.IHttpController
  isExternal: false
  name: Subscribe(IHttpService)
  nameWithType: IHttpController.Subscribe(IHttpService)
  fullName: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
    name: Subscribe
    nameWithType: IHttpController.Subscribe
    fullName: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Http.IHttpService
    name: IHttpService
    nameWithType: IHttpService
    fullName: EventStore.Core.Services.Transport.Http.IHttpService
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
    name: Subscribe
    nameWithType: IHttpController.Subscribe
    fullName: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Http.IHttpService
    name: IHttpService
    nameWithType: IHttpService
    fullName: EventStore.Core.Services.Transport.Http.IHttpService
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.IHttpService
  commentId: T:EventStore.Core.Services.Transport.Http.IHttpService
  parent: EventStore.Core.Services.Transport.Http
  isExternal: false
  name: IHttpService
  nameWithType: IHttpService
  fullName: EventStore.Core.Services.Transport.Http.IHttpService
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.Handle*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.InfoController.Handle
  isExternal: false
  name: Handle
  nameWithType: InfoController.Handle
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(SystemMessage.StateChangeMessage)
  nameWithType: IHandle<SystemMessage.StateChangeMessage>.Handle(SystemMessage.StateChangeMessage)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.StateChangeMessage>.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  nameWithType.vb: IHandle(Of SystemMessage.StateChangeMessage).Handle(SystemMessage.StateChangeMessage)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.StateChangeMessage).Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<SystemMessage.StateChangeMessage>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.StateChangeMessage>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    name: SystemMessage.StateChangeMessage
    nameWithType: SystemMessage.StateChangeMessage
    fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of SystemMessage.StateChangeMessage).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.StateChangeMessage).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    name: SystemMessage.StateChangeMessage
    nameWithType: SystemMessage.StateChangeMessage
    fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  commentId: T:EventStore.Core.Messages.SystemMessage.StateChangeMessage
  parent: EventStore.Core.Messages
  isExternal: false
  name: SystemMessage.StateChangeMessage
  nameWithType: SystemMessage.StateChangeMessage
  fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  isExternal: false
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.GetOptionsInfo*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.InfoController.GetOptionsInfo
  isExternal: false
  name: GetOptionsInfo
  nameWithType: InfoController.GetOptionsInfo
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.GetOptionsInfo
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure[]
  name: InfoController.OptionStructure[]
  nameWithType: InfoController.OptionStructure[]
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure[]
  nameWithType.vb: InfoController.OptionStructure()
  fullName.vb: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure()
  name.vb: InfoController.OptionStructure()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure
    name: InfoController.OptionStructure
    nameWithType: InfoController.OptionStructure
    fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure
    name: InfoController.OptionStructure
    nameWithType: InfoController.OptionStructure
    fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Services.Transport.Http.Controllers.InfoController.Filter*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.InfoController.Filter
  isExternal: false
  name: Filter
  nameWithType: InfoController.Filter
  fullName: EventStore.Core.Services.Transport.Http.Controllers.InfoController.Filter
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()

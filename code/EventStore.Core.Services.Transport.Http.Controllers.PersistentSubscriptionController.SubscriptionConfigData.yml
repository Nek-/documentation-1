### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  commentId: T:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  id: PersistentSubscriptionController.SubscriptionConfigData
  parent: EventStore.Core.Services.Transport.Http.Controllers
  children:
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.#ctor
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.BufferSize
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.CheckPointAfterMilliseconds
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ExtraStatistics
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.LiveBufferSize
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxCheckPointCount
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxRetryCount
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxSubscriberCount
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MessageTimeoutMilliseconds
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MinCheckPointCount
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.NamedConsumerStrategy
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.PreferRoundRobin
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ReadBatchSize
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ResolveLinktos
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.StartFrom
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionController.SubscriptionConfigData
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SubscriptionConfigData
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 708
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: 'public class SubscriptionConfigData : object'
    content.vb: >-
      Public Class SubscriptionConfigData

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ResolveLinktos
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ResolveLinktos
  id: ResolveLinktos
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  langs:
  - csharp
  - vb
  name: ResolveLinktos
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.ResolveLinktos
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ResolveLinktos
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ResolveLinktos
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 710
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public bool ResolveLinktos { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ResolveLinktos As Boolean
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ResolveLinktos*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.StartFrom
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.StartFrom
  id: StartFrom
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  langs:
  - csharp
  - vb
  name: StartFrom
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.StartFrom
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.StartFrom
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StartFrom
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 711
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public long StartFrom { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property StartFrom As Long
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.StartFrom*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MessageTimeoutMilliseconds
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MessageTimeoutMilliseconds
  id: MessageTimeoutMilliseconds
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  langs:
  - csharp
  - vb
  name: MessageTimeoutMilliseconds
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.MessageTimeoutMilliseconds
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MessageTimeoutMilliseconds
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MessageTimeoutMilliseconds
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 712
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public int MessageTimeoutMilliseconds { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MessageTimeoutMilliseconds As Integer
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MessageTimeoutMilliseconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ExtraStatistics
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ExtraStatistics
  id: ExtraStatistics
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  langs:
  - csharp
  - vb
  name: ExtraStatistics
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.ExtraStatistics
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ExtraStatistics
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExtraStatistics
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 713
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public bool ExtraStatistics { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ExtraStatistics As Boolean
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ExtraStatistics*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxRetryCount
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxRetryCount
  id: MaxRetryCount
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  langs:
  - csharp
  - vb
  name: MaxRetryCount
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.MaxRetryCount
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxRetryCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MaxRetryCount
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 714
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public int MaxRetryCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxRetryCount As Integer
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxRetryCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.LiveBufferSize
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.LiveBufferSize
  id: LiveBufferSize
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  langs:
  - csharp
  - vb
  name: LiveBufferSize
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.LiveBufferSize
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.LiveBufferSize
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: LiveBufferSize
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 715
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public int LiveBufferSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property LiveBufferSize As Integer
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.LiveBufferSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.BufferSize
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.BufferSize
  id: BufferSize
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  langs:
  - csharp
  - vb
  name: BufferSize
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.BufferSize
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.BufferSize
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: BufferSize
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 716
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public int BufferSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property BufferSize As Integer
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.BufferSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ReadBatchSize
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ReadBatchSize
  id: ReadBatchSize
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  langs:
  - csharp
  - vb
  name: ReadBatchSize
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.ReadBatchSize
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ReadBatchSize
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadBatchSize
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 717
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public int ReadBatchSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ReadBatchSize As Integer
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ReadBatchSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.PreferRoundRobin
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.PreferRoundRobin
  id: PreferRoundRobin
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  langs:
  - csharp
  - vb
  name: PreferRoundRobin
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.PreferRoundRobin
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.PreferRoundRobin
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PreferRoundRobin
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 718
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public bool PreferRoundRobin { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PreferRoundRobin As Boolean
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.PreferRoundRobin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.CheckPointAfterMilliseconds
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.CheckPointAfterMilliseconds
  id: CheckPointAfterMilliseconds
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  langs:
  - csharp
  - vb
  name: CheckPointAfterMilliseconds
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.CheckPointAfterMilliseconds
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.CheckPointAfterMilliseconds
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CheckPointAfterMilliseconds
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 719
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public int CheckPointAfterMilliseconds { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CheckPointAfterMilliseconds As Integer
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.CheckPointAfterMilliseconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MinCheckPointCount
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MinCheckPointCount
  id: MinCheckPointCount
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  langs:
  - csharp
  - vb
  name: MinCheckPointCount
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.MinCheckPointCount
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MinCheckPointCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MinCheckPointCount
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 720
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public int MinCheckPointCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MinCheckPointCount As Integer
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MinCheckPointCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxCheckPointCount
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxCheckPointCount
  id: MaxCheckPointCount
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  langs:
  - csharp
  - vb
  name: MaxCheckPointCount
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.MaxCheckPointCount
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxCheckPointCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MaxCheckPointCount
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 721
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public int MaxCheckPointCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxCheckPointCount As Integer
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxCheckPointCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxSubscriberCount
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxSubscriberCount
  id: MaxSubscriberCount
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  langs:
  - csharp
  - vb
  name: MaxSubscriberCount
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.MaxSubscriberCount
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxSubscriberCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MaxSubscriberCount
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 722
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public int MaxSubscriberCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxSubscriberCount As Integer
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxSubscriberCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.NamedConsumerStrategy
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.NamedConsumerStrategy
  id: NamedConsumerStrategy
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  langs:
  - csharp
  - vb
  name: NamedConsumerStrategy
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.NamedConsumerStrategy
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.NamedConsumerStrategy
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: NamedConsumerStrategy
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 723
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public string NamedConsumerStrategy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NamedConsumerStrategy As String
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.NamedConsumerStrategy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.#ctor
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.#ctor
  id: '#ctor'
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  langs:
  - csharp
  - vb
  name: SubscriptionConfigData()
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.SubscriptionConfigData()
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.SubscriptionConfigData()
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 724
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public SubscriptionConfigData()
    content.vb: Public Sub New
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.Transport.Http.Controllers
  commentId: N:EventStore.Core.Services.Transport.Http.Controllers
  isExternal: false
  name: EventStore.Core.Services.Transport.Http.Controllers
  nameWithType: EventStore.Core.Services.Transport.Http.Controllers
  fullName: EventStore.Core.Services.Transport.Http.Controllers
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PersistentSubscriptionController.SubscriptionConfigData>()
  nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionController.SubscriptionConfigData>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PersistentSubscriptionController.SubscriptionConfigData)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData)()
  name.vb: Serialize(Of PersistentSubscriptionController.SubscriptionConfigData)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PersistentSubscriptionController.SubscriptionConfigData>
    nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionController.SubscriptionConfigData>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PersistentSubscriptionController.SubscriptionConfigData)
    nameWithType: ProtobufExtensions.Serialize(Of PersistentSubscriptionController.SubscriptionConfigData)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PersistentSubscriptionController.SubscriptionConfigData>()
  nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionController.SubscriptionConfigData>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionController.SubscriptionConfigData)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData)()
  name.vb: SerializeToArray(Of PersistentSubscriptionController.SubscriptionConfigData)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PersistentSubscriptionController.SubscriptionConfigData>
    nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionController.SubscriptionConfigData>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PersistentSubscriptionController.SubscriptionConfigData)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionController.SubscriptionConfigData)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ResolveLinktos*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ResolveLinktos
  isExternal: false
  name: ResolveLinktos
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.ResolveLinktos
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ResolveLinktos
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.StartFrom*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.StartFrom
  isExternal: false
  name: StartFrom
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.StartFrom
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.StartFrom
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MessageTimeoutMilliseconds*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MessageTimeoutMilliseconds
  isExternal: false
  name: MessageTimeoutMilliseconds
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.MessageTimeoutMilliseconds
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MessageTimeoutMilliseconds
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ExtraStatistics*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ExtraStatistics
  isExternal: false
  name: ExtraStatistics
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.ExtraStatistics
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ExtraStatistics
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxRetryCount*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxRetryCount
  isExternal: false
  name: MaxRetryCount
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.MaxRetryCount
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxRetryCount
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.LiveBufferSize*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.LiveBufferSize
  isExternal: false
  name: LiveBufferSize
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.LiveBufferSize
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.LiveBufferSize
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.BufferSize*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.BufferSize
  isExternal: false
  name: BufferSize
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.BufferSize
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.BufferSize
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ReadBatchSize*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ReadBatchSize
  isExternal: false
  name: ReadBatchSize
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.ReadBatchSize
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.ReadBatchSize
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.PreferRoundRobin*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.PreferRoundRobin
  isExternal: false
  name: PreferRoundRobin
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.PreferRoundRobin
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.PreferRoundRobin
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.CheckPointAfterMilliseconds*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.CheckPointAfterMilliseconds
  isExternal: false
  name: CheckPointAfterMilliseconds
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.CheckPointAfterMilliseconds
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.CheckPointAfterMilliseconds
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MinCheckPointCount*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MinCheckPointCount
  isExternal: false
  name: MinCheckPointCount
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.MinCheckPointCount
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MinCheckPointCount
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxCheckPointCount*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxCheckPointCount
  isExternal: false
  name: MaxCheckPointCount
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.MaxCheckPointCount
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxCheckPointCount
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxSubscriberCount*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxSubscriberCount
  isExternal: false
  name: MaxSubscriberCount
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.MaxSubscriberCount
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.MaxSubscriberCount
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.NamedConsumerStrategy*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.NamedConsumerStrategy
  isExternal: false
  name: NamedConsumerStrategy
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.NamedConsumerStrategy
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.NamedConsumerStrategy
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.#ctor*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.#ctor
  isExternal: false
  name: SubscriptionConfigData
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData.SubscriptionConfigData
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.SubscriptionConfigData

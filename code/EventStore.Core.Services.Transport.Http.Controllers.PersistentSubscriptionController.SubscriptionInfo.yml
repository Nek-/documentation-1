### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  commentId: T:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  id: PersistentSubscriptionController.SubscriptionInfo
  parent: EventStore.Core.Services.Transport.Http.Controllers
  children:
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.AverageItemsPerSecond
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Config
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Connections
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.CountSinceLastMeasurement
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.EventStreamId
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.GetMessagesUri
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.GroupName
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LastKnownEventNumber
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LastProcessedEventNumber
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Links
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LiveBufferCount
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.ParkedMessageUri
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.ReadBufferCount
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.RetryBufferCount
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Status
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.TotalInFlightMessages
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.TotalItemsProcessed
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionController.SubscriptionInfo
  nameWithType: PersistentSubscriptionController.SubscriptionInfo
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SubscriptionInfo
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 757
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: 'public class SubscriptionInfo : object'
    content.vb: >-
      Public Class SubscriptionInfo
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Links
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Links
  id: Links
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: Links
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.Links
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Links
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Links
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 759
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public List<RelLink> Links { get; set; }
    parameters: []
    return:
      type: List{EventStore.Core.Services.Transport.Http.Controllers.RelLink}
    content.vb: Public Property Links As List(Of RelLink)
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Links*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Config
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Config
  id: Config
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.Config
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Config
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Config
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 760
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public PersistentSubscriptionController.SubscriptionConfigData Config { get; set; }
    parameters: []
    return:
      type: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
    content.vb: Public Property Config As PersistentSubscriptionController.SubscriptionConfigData
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Config*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.EventStreamId
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.EventStreamId
  id: EventStreamId
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: EventStreamId
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.EventStreamId
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.EventStreamId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: EventStreamId
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 761
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public string EventStreamId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EventStreamId As String
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.EventStreamId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.GroupName
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.GroupName
  id: GroupName
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: GroupName
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.GroupName
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.GroupName
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: GroupName
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 762
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public string GroupName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GroupName As String
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.GroupName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Status
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Status
  id: Status
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.Status
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Status
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Status
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 763
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public string Status { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Status As String
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.AverageItemsPerSecond
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.AverageItemsPerSecond
  id: AverageItemsPerSecond
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: AverageItemsPerSecond
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.AverageItemsPerSecond
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.AverageItemsPerSecond
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: AverageItemsPerSecond
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 764
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public decimal AverageItemsPerSecond { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: Public Property AverageItemsPerSecond As Decimal
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.AverageItemsPerSecond*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.ParkedMessageUri
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.ParkedMessageUri
  id: ParkedMessageUri
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: ParkedMessageUri
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.ParkedMessageUri
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.ParkedMessageUri
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ParkedMessageUri
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 765
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public string ParkedMessageUri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ParkedMessageUri As String
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.ParkedMessageUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.GetMessagesUri
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.GetMessagesUri
  id: GetMessagesUri
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: GetMessagesUri
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.GetMessagesUri
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.GetMessagesUri
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: GetMessagesUri
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 766
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public string GetMessagesUri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GetMessagesUri As String
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.GetMessagesUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.TotalItemsProcessed
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.TotalItemsProcessed
  id: TotalItemsProcessed
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: TotalItemsProcessed
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.TotalItemsProcessed
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.TotalItemsProcessed
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: TotalItemsProcessed
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 767
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public long TotalItemsProcessed { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property TotalItemsProcessed As Long
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.TotalItemsProcessed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.CountSinceLastMeasurement
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.CountSinceLastMeasurement
  id: CountSinceLastMeasurement
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: CountSinceLastMeasurement
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.CountSinceLastMeasurement
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.CountSinceLastMeasurement
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: CountSinceLastMeasurement
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 768
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public long CountSinceLastMeasurement { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property CountSinceLastMeasurement As Long
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.CountSinceLastMeasurement*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LastProcessedEventNumber
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LastProcessedEventNumber
  id: LastProcessedEventNumber
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: LastProcessedEventNumber
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.LastProcessedEventNumber
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LastProcessedEventNumber
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: LastProcessedEventNumber
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 769
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public long LastProcessedEventNumber { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property LastProcessedEventNumber As Long
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LastProcessedEventNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LastKnownEventNumber
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LastKnownEventNumber
  id: LastKnownEventNumber
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: LastKnownEventNumber
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.LastKnownEventNumber
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LastKnownEventNumber
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: LastKnownEventNumber
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 770
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public long LastKnownEventNumber { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property LastKnownEventNumber As Long
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LastKnownEventNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.ReadBufferCount
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.ReadBufferCount
  id: ReadBufferCount
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: ReadBufferCount
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.ReadBufferCount
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.ReadBufferCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ReadBufferCount
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 771
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public int ReadBufferCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ReadBufferCount As Integer
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.ReadBufferCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LiveBufferCount
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LiveBufferCount
  id: LiveBufferCount
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: LiveBufferCount
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.LiveBufferCount
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LiveBufferCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: LiveBufferCount
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 772
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public long LiveBufferCount { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property LiveBufferCount As Long
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LiveBufferCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.RetryBufferCount
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.RetryBufferCount
  id: RetryBufferCount
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: RetryBufferCount
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.RetryBufferCount
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.RetryBufferCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: RetryBufferCount
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 773
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public int RetryBufferCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RetryBufferCount As Integer
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.RetryBufferCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.TotalInFlightMessages
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.TotalInFlightMessages
  id: TotalInFlightMessages
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: TotalInFlightMessages
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.TotalInFlightMessages
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.TotalInFlightMessages
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: TotalInFlightMessages
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 774
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public int TotalInFlightMessages { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TotalInFlightMessages As Integer
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.TotalInFlightMessages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Connections
  commentId: P:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Connections
  id: Connections
  parent: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo
  langs:
  - csharp
  - vb
  name: Connections
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.Connections
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Connections
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Connections
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Controllers/PersistentSubscriptionController.cs
    startLine: 775
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Controllers
  syntax:
    content: public List<PersistentSubscriptionController.ConnectionInfo> Connections { get; set; }
    parameters: []
    return:
      type: List{EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.ConnectionInfo}
    content.vb: Public Property Connections As List(Of PersistentSubscriptionController.ConnectionInfo)
  overload: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Connections*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.Transport.Http.Controllers
  commentId: N:EventStore.Core.Services.Transport.Http.Controllers
  name: EventStore.Core.Services.Transport.Http.Controllers
  nameWithType: EventStore.Core.Services.Transport.Http.Controllers
  fullName: EventStore.Core.Services.Transport.Http.Controllers
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PersistentSubscriptionController.SubscriptionInfo>()
  nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionController.SubscriptionInfo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PersistentSubscriptionController.SubscriptionInfo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo)()
  name.vb: Serialize(Of PersistentSubscriptionController.SubscriptionInfo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PersistentSubscriptionController.SubscriptionInfo>
    nameWithType: ProtobufExtensions.Serialize<PersistentSubscriptionController.SubscriptionInfo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PersistentSubscriptionController.SubscriptionInfo)
    nameWithType: ProtobufExtensions.Serialize(Of PersistentSubscriptionController.SubscriptionInfo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PersistentSubscriptionController.SubscriptionInfo>()
  nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionController.SubscriptionInfo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionController.SubscriptionInfo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo)()
  name.vb: SerializeToArray(Of PersistentSubscriptionController.SubscriptionInfo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PersistentSubscriptionController.SubscriptionInfo>
    nameWithType: ProtobufExtensions.SerializeToArray<PersistentSubscriptionController.SubscriptionInfo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PersistentSubscriptionController.SubscriptionInfo)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PersistentSubscriptionController.SubscriptionInfo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Links*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Links
  name: Links
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.Links
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Links
- uid: List{EventStore.Core.Services.Transport.Http.Controllers.RelLink}
  commentId: '!:List{EventStore.Core.Services.Transport.Http.Controllers.RelLink}'
  definition: List`1
  name: List<RelLink>
  nameWithType: List<RelLink>
  fullName: List<EventStore.Core.Services.Transport.Http.Controllers.RelLink>
  nameWithType.vb: List(Of RelLink)
  fullName.vb: List(Of EventStore.Core.Services.Transport.Http.Controllers.RelLink)
  name.vb: List(Of RelLink)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.Transport.Http.Controllers.RelLink
    name: RelLink
    nameWithType: RelLink
    fullName: EventStore.Core.Services.Transport.Http.Controllers.RelLink
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.Transport.Http.Controllers.RelLink
    name: RelLink
    nameWithType: RelLink
    fullName: EventStore.Core.Services.Transport.Http.Controllers.RelLink
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Config*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Config
  name: Config
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.Config
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Config
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  commentId: T:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
  parent: EventStore.Core.Services.Transport.Http.Controllers
  name: PersistentSubscriptionController.SubscriptionConfigData
  nameWithType: PersistentSubscriptionController.SubscriptionConfigData
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.EventStreamId*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.EventStreamId
  name: EventStreamId
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.EventStreamId
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.EventStreamId
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.GroupName*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.GroupName
  name: GroupName
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.GroupName
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.GroupName
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Status*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Status
  name: Status
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.Status
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Status
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.AverageItemsPerSecond*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.AverageItemsPerSecond
  name: AverageItemsPerSecond
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.AverageItemsPerSecond
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.AverageItemsPerSecond
- uid: System.Decimal
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.ParkedMessageUri*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.ParkedMessageUri
  name: ParkedMessageUri
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.ParkedMessageUri
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.ParkedMessageUri
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.GetMessagesUri*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.GetMessagesUri
  name: GetMessagesUri
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.GetMessagesUri
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.GetMessagesUri
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.TotalItemsProcessed*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.TotalItemsProcessed
  name: TotalItemsProcessed
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.TotalItemsProcessed
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.TotalItemsProcessed
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.CountSinceLastMeasurement*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.CountSinceLastMeasurement
  name: CountSinceLastMeasurement
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.CountSinceLastMeasurement
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.CountSinceLastMeasurement
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LastProcessedEventNumber*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LastProcessedEventNumber
  name: LastProcessedEventNumber
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.LastProcessedEventNumber
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LastProcessedEventNumber
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LastKnownEventNumber*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LastKnownEventNumber
  name: LastKnownEventNumber
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.LastKnownEventNumber
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LastKnownEventNumber
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.ReadBufferCount*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.ReadBufferCount
  name: ReadBufferCount
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.ReadBufferCount
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.ReadBufferCount
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LiveBufferCount*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LiveBufferCount
  name: LiveBufferCount
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.LiveBufferCount
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.LiveBufferCount
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.RetryBufferCount*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.RetryBufferCount
  name: RetryBufferCount
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.RetryBufferCount
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.RetryBufferCount
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.TotalInFlightMessages*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.TotalInFlightMessages
  name: TotalInFlightMessages
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.TotalInFlightMessages
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.TotalInFlightMessages
- uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Connections*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Connections
  name: Connections
  nameWithType: PersistentSubscriptionController.SubscriptionInfo.Connections
  fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.Connections
- uid: List{EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.ConnectionInfo}
  commentId: '!:List{EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.ConnectionInfo}'
  definition: List`1
  name: List<PersistentSubscriptionController.ConnectionInfo>
  nameWithType: List<PersistentSubscriptionController.ConnectionInfo>
  fullName: List<EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.ConnectionInfo>
  nameWithType.vb: List(Of PersistentSubscriptionController.ConnectionInfo)
  fullName.vb: List(Of EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.ConnectionInfo)
  name.vb: List(Of PersistentSubscriptionController.ConnectionInfo)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.ConnectionInfo
    name: PersistentSubscriptionController.ConnectionInfo
    nameWithType: PersistentSubscriptionController.ConnectionInfo
    fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.ConnectionInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.ConnectionInfo
    name: PersistentSubscriptionController.ConnectionInfo
    nameWithType: PersistentSubscriptionController.ConnectionInfo
    fullName: EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.ConnectionInfo
  - name: )
    nameWithType: )
    fullName: )

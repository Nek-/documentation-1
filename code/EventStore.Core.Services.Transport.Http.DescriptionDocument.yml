### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Http.DescriptionDocument
  commentId: T:EventStore.Core.Services.Transport.Http.DescriptionDocument
  id: DescriptionDocument
  parent: EventStore.Core.Services.Transport.Http
  children:
  - EventStore.Core.Services.Transport.Http.DescriptionDocument.AddStreamSubscription(System.String,System.String[])
  - EventStore.Core.Services.Transport.Http.DescriptionDocument.Description
  - EventStore.Core.Services.Transport.Http.DescriptionDocument.Links
  - EventStore.Core.Services.Transport.Http.DescriptionDocument.SetDescription(System.String)
  - EventStore.Core.Services.Transport.Http.DescriptionDocument.SetSelf(System.String,System.String[])
  - EventStore.Core.Services.Transport.Http.DescriptionDocument.SetStream(System.String,System.String[])
  - EventStore.Core.Services.Transport.Http.DescriptionDocument.SetTitle(System.String)
  - EventStore.Core.Services.Transport.Http.DescriptionDocument.Title
  langs:
  - csharp
  - vb
  name: DescriptionDocument
  nameWithType: DescriptionDocument
  fullName: EventStore.Core.Services.Transport.Http.DescriptionDocument
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Convert.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DescriptionDocument
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Convert.cs
    startLine: 382
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: 'public class DescriptionDocument : object'
    content.vb: >-
      Public Class DescriptionDocument

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Services.Transport.Http.DescriptionDocument.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Transport.Http.DescriptionDocument.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Transport.Http.DescriptionDocument.Title
  commentId: F:EventStore.Core.Services.Transport.Http.DescriptionDocument.Title
  id: Title
  parent: EventStore.Core.Services.Transport.Http.DescriptionDocument
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: DescriptionDocument.Title
  fullName: EventStore.Core.Services.Transport.Http.DescriptionDocument.Title
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Convert.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Title
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Convert.cs
    startLine: 384
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public string Title
    return:
      type: System.String
    content.vb: Public Title As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.DescriptionDocument.Description
  commentId: F:EventStore.Core.Services.Transport.Http.DescriptionDocument.Description
  id: Description
  parent: EventStore.Core.Services.Transport.Http.DescriptionDocument
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: DescriptionDocument.Description
  fullName: EventStore.Core.Services.Transport.Http.DescriptionDocument.Description
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Convert.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Description
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Convert.cs
    startLine: 385
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public string Description
    return:
      type: System.String
    content.vb: Public Description As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.DescriptionDocument.Links
  commentId: F:EventStore.Core.Services.Transport.Http.DescriptionDocument.Links
  id: Links
  parent: EventStore.Core.Services.Transport.Http.DescriptionDocument
  langs:
  - csharp
  - vb
  name: Links
  nameWithType: DescriptionDocument.Links
  fullName: EventStore.Core.Services.Transport.Http.DescriptionDocument.Links
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Convert.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Links
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Convert.cs
    startLine: 387
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public Links Links
    return:
      type: EventStore.Core.Services.Transport.Http.Links
    content.vb: Public Links As Links
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetTitle(System.String)
  commentId: M:EventStore.Core.Services.Transport.Http.DescriptionDocument.SetTitle(System.String)
  id: SetTitle(System.String)
  parent: EventStore.Core.Services.Transport.Http.DescriptionDocument
  langs:
  - csharp
  - vb
  name: SetTitle(String)
  nameWithType: DescriptionDocument.SetTitle(String)
  fullName: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetTitle(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Convert.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetTitle
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Convert.cs
    startLine: 388
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public void SetTitle(string title)
    parameters:
    - id: title
      type: System.String
    content.vb: Public Sub SetTitle(title As String)
  overload: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetTitle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetDescription(System.String)
  commentId: M:EventStore.Core.Services.Transport.Http.DescriptionDocument.SetDescription(System.String)
  id: SetDescription(System.String)
  parent: EventStore.Core.Services.Transport.Http.DescriptionDocument
  langs:
  - csharp
  - vb
  name: SetDescription(String)
  nameWithType: DescriptionDocument.SetDescription(String)
  fullName: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetDescription(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Convert.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetDescription
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Convert.cs
    startLine: 392
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public void SetDescription(string description)
    parameters:
    - id: description
      type: System.String
    content.vb: Public Sub SetDescription(description As String)
  overload: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetDescription*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetSelf(System.String,System.String[])
  commentId: M:EventStore.Core.Services.Transport.Http.DescriptionDocument.SetSelf(System.String,System.String[])
  id: SetSelf(System.String,System.String[])
  parent: EventStore.Core.Services.Transport.Http.DescriptionDocument
  langs:
  - csharp
  - vb
  name: SetSelf(String, String[])
  nameWithType: DescriptionDocument.SetSelf(String, String[])
  fullName: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetSelf(System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Convert.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetSelf
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Convert.cs
    startLine: 396
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public void SetSelf(string href, params string[] supportedContentTypes)
    parameters:
    - id: href
      type: System.String
    - id: supportedContentTypes
      type: System.String[]
    content.vb: Public Sub SetSelf(href As String, ParamArray supportedContentTypes As String())
  overload: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetSelf*
  nameWithType.vb: DescriptionDocument.SetSelf(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetSelf(System.String, System.String())
  name.vb: SetSelf(String, String())
- uid: EventStore.Core.Services.Transport.Http.DescriptionDocument.AddStreamSubscription(System.String,System.String[])
  commentId: M:EventStore.Core.Services.Transport.Http.DescriptionDocument.AddStreamSubscription(System.String,System.String[])
  id: AddStreamSubscription(System.String,System.String[])
  parent: EventStore.Core.Services.Transport.Http.DescriptionDocument
  langs:
  - csharp
  - vb
  name: AddStreamSubscription(String, String[])
  nameWithType: DescriptionDocument.AddStreamSubscription(String, String[])
  fullName: EventStore.Core.Services.Transport.Http.DescriptionDocument.AddStreamSubscription(System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Convert.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AddStreamSubscription
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Convert.cs
    startLine: 400
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public void AddStreamSubscription(string href, params string[] supportedContentTypes)
    parameters:
    - id: href
      type: System.String
    - id: supportedContentTypes
      type: System.String[]
    content.vb: Public Sub AddStreamSubscription(href As String, ParamArray supportedContentTypes As String())
  overload: EventStore.Core.Services.Transport.Http.DescriptionDocument.AddStreamSubscription*
  nameWithType.vb: DescriptionDocument.AddStreamSubscription(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Transport.Http.DescriptionDocument.AddStreamSubscription(System.String, System.String())
  name.vb: AddStreamSubscription(String, String())
- uid: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetStream(System.String,System.String[])
  commentId: M:EventStore.Core.Services.Transport.Http.DescriptionDocument.SetStream(System.String,System.String[])
  id: SetStream(System.String,System.String[])
  parent: EventStore.Core.Services.Transport.Http.DescriptionDocument
  langs:
  - csharp
  - vb
  name: SetStream(String, String[])
  nameWithType: DescriptionDocument.SetStream(String, String[])
  fullName: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetStream(System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Convert.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetStream
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Convert.cs
    startLine: 407
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public void SetStream(string href, params string[] supportedContentTypes)
    parameters:
    - id: href
      type: System.String
    - id: supportedContentTypes
      type: System.String[]
    content.vb: Public Sub SetStream(href As String, ParamArray supportedContentTypes As String())
  overload: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetStream*
  nameWithType.vb: DescriptionDocument.SetStream(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetStream(System.String, System.String())
  name.vb: SetStream(String, String())
references:
- uid: EventStore.Core.Services.Transport.Http
  commentId: N:EventStore.Core.Services.Transport.Http
  isExternal: false
  name: EventStore.Core.Services.Transport.Http
  nameWithType: EventStore.Core.Services.Transport.Http
  fullName: EventStore.Core.Services.Transport.Http
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.DescriptionDocument.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<DescriptionDocument>()
  nameWithType: ProtobufExtensions.Serialize<DescriptionDocument>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.DescriptionDocument>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of DescriptionDocument)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.DescriptionDocument)()
  name.vb: Serialize(Of DescriptionDocument)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<DescriptionDocument>
    nameWithType: ProtobufExtensions.Serialize<DescriptionDocument>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.DescriptionDocument>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of DescriptionDocument)
    nameWithType: ProtobufExtensions.Serialize(Of DescriptionDocument)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.DescriptionDocument)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.DescriptionDocument.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<DescriptionDocument>()
  nameWithType: ProtobufExtensions.SerializeToArray<DescriptionDocument>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.DescriptionDocument>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of DescriptionDocument)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.DescriptionDocument)()
  name.vb: SerializeToArray(Of DescriptionDocument)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<DescriptionDocument>
    nameWithType: ProtobufExtensions.SerializeToArray<DescriptionDocument>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.DescriptionDocument>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of DescriptionDocument)
    nameWithType: ProtobufExtensions.SerializeToArray(Of DescriptionDocument)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.DescriptionDocument)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Services.Transport.Http.Links
  commentId: T:EventStore.Core.Services.Transport.Http.Links
  parent: EventStore.Core.Services.Transport.Http
  isExternal: false
  name: Links
  nameWithType: Links
  fullName: EventStore.Core.Services.Transport.Http.Links
- uid: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetTitle*
  commentId: Overload:EventStore.Core.Services.Transport.Http.DescriptionDocument.SetTitle
  isExternal: false
  name: SetTitle
  nameWithType: DescriptionDocument.SetTitle
  fullName: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetTitle
- uid: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetDescription*
  commentId: Overload:EventStore.Core.Services.Transport.Http.DescriptionDocument.SetDescription
  isExternal: false
  name: SetDescription
  nameWithType: DescriptionDocument.SetDescription
  fullName: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetDescription
- uid: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetSelf*
  commentId: Overload:EventStore.Core.Services.Transport.Http.DescriptionDocument.SetSelf
  isExternal: false
  name: SetSelf
  nameWithType: DescriptionDocument.SetSelf
  fullName: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetSelf
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Services.Transport.Http.DescriptionDocument.AddStreamSubscription*
  commentId: Overload:EventStore.Core.Services.Transport.Http.DescriptionDocument.AddStreamSubscription
  isExternal: false
  name: AddStreamSubscription
  nameWithType: DescriptionDocument.AddStreamSubscription
  fullName: EventStore.Core.Services.Transport.Http.DescriptionDocument.AddStreamSubscription
- uid: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetStream*
  commentId: Overload:EventStore.Core.Services.Transport.Http.DescriptionDocument.SetStream
  isExternal: false
  name: SetStream
  nameWithType: DescriptionDocument.SetStream
  fullName: EventStore.Core.Services.Transport.Http.DescriptionDocument.SetStream

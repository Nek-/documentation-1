### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
  commentId: T:EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
  id: HttpResponseFormatterArgs
  parent: EventStore.Core.Services.Transport.Http
  children:
  - EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.#ctor(Uri,EventStore.Transport.Http.ICodec)
  - EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.op_Implicit(EventStore.Transport.Http.EntityManagement.HttpEntityManager)~EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
  - EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.RequestedUrl
  - EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.ResponseCodec
  langs:
  - csharp
  - vb
  name: HttpResponseFormatterArgs
  nameWithType: HttpResponseFormatterArgs
  fullName: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/SendToHttpEnvelope.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HttpResponseFormatterArgs
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/SendToHttpEnvelope.cs
    startLine: 28
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: 'public class HttpResponseFormatterArgs : object'
    content.vb: >-
      Public Class HttpResponseFormatterArgs
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.RequestedUrl
  commentId: F:EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.RequestedUrl
  id: RequestedUrl
  parent: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
  langs:
  - csharp
  - vb
  name: RequestedUrl
  nameWithType: HttpResponseFormatterArgs.RequestedUrl
  fullName: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.RequestedUrl
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/SendToHttpEnvelope.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RequestedUrl
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/SendToHttpEnvelope.cs
    startLine: 30
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public readonly Uri RequestedUrl
    return:
      type: Uri
    content.vb: Public ReadOnly RequestedUrl As Uri
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.ResponseCodec
  commentId: F:EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.ResponseCodec
  id: ResponseCodec
  parent: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
  langs:
  - csharp
  - vb
  name: ResponseCodec
  nameWithType: HttpResponseFormatterArgs.ResponseCodec
  fullName: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.ResponseCodec
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/SendToHttpEnvelope.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ResponseCodec
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/SendToHttpEnvelope.cs
    startLine: 31
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public readonly ICodec ResponseCodec
    return:
      type: EventStore.Transport.Http.ICodec
    content.vb: Public ReadOnly ResponseCodec As ICodec
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.#ctor(Uri,EventStore.Transport.Http.ICodec)
  commentId: M:EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.#ctor(Uri,EventStore.Transport.Http.ICodec)
  id: '#ctor(Uri,EventStore.Transport.Http.ICodec)'
  parent: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
  langs:
  - csharp
  - vb
  name: HttpResponseFormatterArgs(Uri, ICodec)
  nameWithType: HttpResponseFormatterArgs.HttpResponseFormatterArgs(Uri, ICodec)
  fullName: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.HttpResponseFormatterArgs(Uri, EventStore.Transport.Http.ICodec)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/SendToHttpEnvelope.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/SendToHttpEnvelope.cs
    startLine: 33
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public HttpResponseFormatterArgs(Uri requestedUrl, ICodec responseCodec)
    parameters:
    - id: requestedUrl
      type: Uri
    - id: responseCodec
      type: EventStore.Transport.Http.ICodec
    content.vb: Public Sub New(requestedUrl As Uri, responseCodec As ICodec)
  overload: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.op_Implicit(EventStore.Transport.Http.EntityManagement.HttpEntityManager)~EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
  commentId: M:EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.op_Implicit(EventStore.Transport.Http.EntityManagement.HttpEntityManager)~EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
  id: op_Implicit(EventStore.Transport.Http.EntityManagement.HttpEntityManager)~EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
  parent: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
  langs:
  - csharp
  - vb
  name: Implicit(HttpEntityManager to HttpResponseFormatterArgs)
  nameWithType: HttpResponseFormatterArgs.Implicit(HttpEntityManager to HttpResponseFormatterArgs)
  fullName: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.Implicit(EventStore.Transport.Http.EntityManagement.HttpEntityManager to EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs)
  type: Operator
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/SendToHttpEnvelope.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: op_Implicit
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/SendToHttpEnvelope.cs
    startLine: 39
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public static implicit operator HttpResponseFormatterArgs(HttpEntityManager entity)
    parameters:
    - id: entity
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    return:
      type: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
    content.vb: Public Shared Widening Operator CType(entity As HttpEntityManager) As HttpResponseFormatterArgs
  overload: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.op_Implicit*
  nameWithType.vb: HttpResponseFormatterArgs.Widening(HttpEntityManager to HttpResponseFormatterArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.Widening(EventStore.Transport.Http.EntityManagement.HttpEntityManager to EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs)
  name.vb: Widening(HttpEntityManager to HttpResponseFormatterArgs)
references:
- uid: EventStore.Core.Services.Transport.Http
  commentId: N:EventStore.Core.Services.Transport.Http
  isExternal: false
  name: EventStore.Core.Services.Transport.Http
  nameWithType: EventStore.Core.Services.Transport.Http
  fullName: EventStore.Core.Services.Transport.Http
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<HttpResponseFormatterArgs>()
  nameWithType: ProtobufExtensions.Serialize<HttpResponseFormatterArgs>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of HttpResponseFormatterArgs)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs)()
  name.vb: Serialize(Of HttpResponseFormatterArgs)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<HttpResponseFormatterArgs>
    nameWithType: ProtobufExtensions.Serialize<HttpResponseFormatterArgs>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of HttpResponseFormatterArgs)
    nameWithType: ProtobufExtensions.Serialize(Of HttpResponseFormatterArgs)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<HttpResponseFormatterArgs>()
  nameWithType: ProtobufExtensions.SerializeToArray<HttpResponseFormatterArgs>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of HttpResponseFormatterArgs)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs)()
  name.vb: SerializeToArray(Of HttpResponseFormatterArgs)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<HttpResponseFormatterArgs>
    nameWithType: ProtobufExtensions.SerializeToArray<HttpResponseFormatterArgs>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of HttpResponseFormatterArgs)
    nameWithType: ProtobufExtensions.SerializeToArray(Of HttpResponseFormatterArgs)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: EventStore.Transport.Http.ICodec
  commentId: T:EventStore.Transport.Http.ICodec
  parent: EventStore.Transport.Http
  isExternal: false
  name: ICodec
  nameWithType: ICodec
  fullName: EventStore.Transport.Http.ICodec
- uid: EventStore.Transport.Http
  commentId: N:EventStore.Transport.Http
  isExternal: false
  name: EventStore.Transport.Http
  nameWithType: EventStore.Transport.Http
  fullName: EventStore.Transport.Http
- uid: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.#ctor*
  commentId: Overload:EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.#ctor
  isExternal: false
  name: HttpResponseFormatterArgs
  nameWithType: HttpResponseFormatterArgs.HttpResponseFormatterArgs
  fullName: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.HttpResponseFormatterArgs
- uid: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.op_Implicit*
  commentId: Overload:EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.op_Implicit
  isExternal: false
  name: Implicit
  nameWithType: HttpResponseFormatterArgs.Implicit
  fullName: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.Implicit
  nameWithType.vb: HttpResponseFormatterArgs.Widening
  fullName.vb: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.Widening
  name.vb: Widening
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  commentId: T:EventStore.Transport.Http.EntityManagement.HttpEntityManager
  parent: EventStore.Transport.Http.EntityManagement
  isExternal: false
  name: HttpEntityManager
  nameWithType: HttpEntityManager
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
- uid: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
  commentId: T:EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
  parent: EventStore.Core.Services.Transport.Http
  isExternal: false
  name: HttpResponseFormatterArgs
  nameWithType: HttpResponseFormatterArgs
  fullName: EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs
- uid: EventStore.Transport.Http.EntityManagement
  commentId: N:EventStore.Transport.Http.EntityManagement
  isExternal: false
  name: EventStore.Transport.Http.EntityManagement
  nameWithType: EventStore.Transport.Http.EntityManagement
  fullName: EventStore.Transport.Http.EntityManagement

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Http.MessageSender`1
  commentId: T:EventStore.Core.Services.Transport.Http.MessageSender`1
  id: MessageSender`1
  parent: EventStore.Core.Services.Transport.Http
  children:
  - EventStore.Core.Services.Transport.Http.MessageSender`1.#ctor(EventStore.Core.Services.Transport.Http.ISender{`0})
  - EventStore.Core.Services.Transport.Http.MessageSender`1.Send(EventStore.Core.Messaging.Message,IPEndPoint)
  langs:
  - csharp
  - vb
  name: MessageSender<T>
  nameWithType: MessageSender<T>
  fullName: EventStore.Core.Services.Transport.Http.MessageSender<T>
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/HttpMessagePipe.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MessageSender
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/HttpMessagePipe.cs
    startLine: 41
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: 'public class MessageSender<T> : object, IMessageSender where T : Message'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class MessageSender(Of T As Message)
          Inherits Object
          Implements IMessageSender
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Services.Transport.Http.IMessageSender
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Transport.Http.MessageSender`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Transport.Http.MessageSender`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  nameWithType.vb: MessageSender(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: EventStore.Core.Services.Transport.Http.MessageSender(Of T)
  name.vb: MessageSender(Of T)
- uid: EventStore.Core.Services.Transport.Http.MessageSender`1.#ctor(EventStore.Core.Services.Transport.Http.ISender{`0})
  commentId: M:EventStore.Core.Services.Transport.Http.MessageSender`1.#ctor(EventStore.Core.Services.Transport.Http.ISender{`0})
  id: '#ctor(EventStore.Core.Services.Transport.Http.ISender{`0})'
  parent: EventStore.Core.Services.Transport.Http.MessageSender`1
  langs:
  - csharp
  - vb
  name: MessageSender(ISender<T>)
  nameWithType: MessageSender<T>.MessageSender(ISender<T>)
  fullName: EventStore.Core.Services.Transport.Http.MessageSender<T>.MessageSender(EventStore.Core.Services.Transport.Http.ISender<T>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/HttpMessagePipe.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/HttpMessagePipe.cs
    startLine: 46
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public MessageSender(ISender<T> sender)
    parameters:
    - id: sender
      type: EventStore.Core.Services.Transport.Http.ISender{{T}}
    content.vb: Public Sub New(sender As ISender(Of T))
  overload: EventStore.Core.Services.Transport.Http.MessageSender`1.#ctor*
  nameWithType.vb: MessageSender(Of T).MessageSender(ISender(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Transport.Http.MessageSender(Of T).MessageSender(EventStore.Core.Services.Transport.Http.ISender(Of T))
  name.vb: MessageSender(ISender(Of T))
- uid: EventStore.Core.Services.Transport.Http.MessageSender`1.Send(EventStore.Core.Messaging.Message,IPEndPoint)
  commentId: M:EventStore.Core.Services.Transport.Http.MessageSender`1.Send(EventStore.Core.Messaging.Message,IPEndPoint)
  id: Send(EventStore.Core.Messaging.Message,IPEndPoint)
  parent: EventStore.Core.Services.Transport.Http.MessageSender`1
  langs:
  - csharp
  - vb
  name: Send(Message, IPEndPoint)
  nameWithType: MessageSender<T>.Send(Message, IPEndPoint)
  fullName: EventStore.Core.Services.Transport.Http.MessageSender<T>.Send(EventStore.Core.Messaging.Message, IPEndPoint)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/HttpMessagePipe.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Send
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/HttpMessagePipe.cs
    startLine: 52
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public void Send(Message message, IPEndPoint endPoint)
    parameters:
    - id: message
      type: EventStore.Core.Messaging.Message
    - id: endPoint
      type: IPEndPoint
    content.vb: Public Sub Send(message As Message, endPoint As IPEndPoint)
  overload: EventStore.Core.Services.Transport.Http.MessageSender`1.Send*
  implements:
  - EventStore.Core.Services.Transport.Http.IMessageSender.Send(EventStore.Core.Messaging.Message,IPEndPoint)
  nameWithType.vb: MessageSender(Of T).Send(Message, IPEndPoint)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Transport.Http.MessageSender(Of T).Send(EventStore.Core.Messaging.Message, IPEndPoint)
references:
- uid: EventStore.Core.Services.Transport.Http
  commentId: N:EventStore.Core.Services.Transport.Http
  isExternal: false
  name: EventStore.Core.Services.Transport.Http
  nameWithType: EventStore.Core.Services.Transport.Http
  fullName: EventStore.Core.Services.Transport.Http
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Services.Transport.Http.IMessageSender
  commentId: T:EventStore.Core.Services.Transport.Http.IMessageSender
  parent: EventStore.Core.Services.Transport.Http
  isExternal: false
  name: IMessageSender
  nameWithType: IMessageSender
  fullName: EventStore.Core.Services.Transport.Http.IMessageSender
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.MessageSender`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<MessageSender<T>>()
  nameWithType: ProtobufExtensions.Serialize<MessageSender<T>>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.MessageSender<T>>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of MessageSender(Of T))()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.MessageSender(Of T))()
  name.vb: Serialize(Of MessageSender(Of T))()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<MessageSender<T>>
    nameWithType: ProtobufExtensions.Serialize<MessageSender<T>>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.MessageSender<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of MessageSender(Of T))
    nameWithType: ProtobufExtensions.Serialize(Of MessageSender(Of T))
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.MessageSender(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.MessageSender`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<MessageSender<T>>()
  nameWithType: ProtobufExtensions.SerializeToArray<MessageSender<T>>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.MessageSender<T>>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of MessageSender(Of T))()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.MessageSender(Of T))()
  name.vb: SerializeToArray(Of MessageSender(Of T))()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<MessageSender<T>>
    nameWithType: ProtobufExtensions.SerializeToArray<MessageSender<T>>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.MessageSender<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of MessageSender(Of T))
    nameWithType: ProtobufExtensions.SerializeToArray(Of MessageSender(Of T))
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.MessageSender(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Transport.Http.MessageSender`1.#ctor*
  commentId: Overload:EventStore.Core.Services.Transport.Http.MessageSender`1.#ctor
  isExternal: false
  name: MessageSender
  nameWithType: MessageSender<T>.MessageSender
  fullName: EventStore.Core.Services.Transport.Http.MessageSender<T>.MessageSender
  nameWithType.vb: MessageSender(Of T).MessageSender
  fullName.vb: EventStore.Core.Services.Transport.Http.MessageSender(Of T).MessageSender
- uid: EventStore.Core.Services.Transport.Http.ISender{{T}}
  commentId: T:EventStore.Core.Services.Transport.Http.ISender{``0}
  parent: EventStore.Core.Services.Transport.Http
  definition: EventStore.Core.Services.Transport.Http.ISender`1
  name: ISender<T>
  nameWithType: ISender<T>
  fullName: EventStore.Core.Services.Transport.Http.ISender<T>
  nameWithType.vb: ISender(Of T)
  fullName.vb: EventStore.Core.Services.Transport.Http.ISender(Of T)
  name.vb: ISender(Of T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Http.ISender`1
    name: ISender
    nameWithType: ISender
    fullName: EventStore.Core.Services.Transport.Http.ISender
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Http.ISender`1
    name: ISender
    nameWithType: ISender
    fullName: EventStore.Core.Services.Transport.Http.ISender
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.ISender`1
  commentId: T:EventStore.Core.Services.Transport.Http.ISender`1
  isExternal: false
  name: ISender<T>
  nameWithType: ISender<T>
  fullName: EventStore.Core.Services.Transport.Http.ISender<T>
  nameWithType.vb: ISender(Of T)
  fullName.vb: EventStore.Core.Services.Transport.Http.ISender(Of T)
  name.vb: ISender(Of T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Http.ISender`1
    name: ISender
    nameWithType: ISender
    fullName: EventStore.Core.Services.Transport.Http.ISender
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Http.ISender`1
    name: ISender
    nameWithType: ISender
    fullName: EventStore.Core.Services.Transport.Http.ISender
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.MessageSender`1.Send*
  commentId: Overload:EventStore.Core.Services.Transport.Http.MessageSender`1.Send
  isExternal: false
  name: Send
  nameWithType: MessageSender<T>.Send
  fullName: EventStore.Core.Services.Transport.Http.MessageSender<T>.Send
  nameWithType.vb: MessageSender(Of T).Send
  fullName.vb: EventStore.Core.Services.Transport.Http.MessageSender(Of T).Send
- uid: EventStore.Core.Services.Transport.Http.IMessageSender.Send(EventStore.Core.Messaging.Message,IPEndPoint)
  commentId: M:EventStore.Core.Services.Transport.Http.IMessageSender.Send(EventStore.Core.Messaging.Message,IPEndPoint)
  parent: EventStore.Core.Services.Transport.Http.IMessageSender
  isExternal: true
  name: Send(Message, IPEndPoint)
  nameWithType: IMessageSender.Send(Message, IPEndPoint)
  fullName: EventStore.Core.Services.Transport.Http.IMessageSender.Send(EventStore.Core.Messaging.Message, IPEndPoint)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Http.IMessageSender.Send(EventStore.Core.Messaging.Message,IPEndPoint)
    name: Send
    nameWithType: IMessageSender.Send
    fullName: EventStore.Core.Services.Transport.Http.IMessageSender.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: IPEndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Http.IMessageSender.Send(EventStore.Core.Messaging.Message,IPEndPoint)
    name: Send
    nameWithType: IMessageSender.Send
    fullName: EventStore.Core.Services.Transport.Http.IMessageSender.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: IPEndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: IPEndPoint
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: IPEndPoint
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging

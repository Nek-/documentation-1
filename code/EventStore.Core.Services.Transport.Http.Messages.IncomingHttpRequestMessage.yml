### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage
  commentId: T:EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage
  id: IncomingHttpRequestMessage
  parent: EventStore.Core.Services.Transport.Http.Messages
  children:
  - EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.#ctor(EventStore.Core.Services.Transport.Http.HttpService,EventStore.Transport.Http.EntityManagement.HttpEntity,EventStore.Core.Bus.IPublisher)
  - EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.Entity
  - EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.HttpService
  - EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.MsgTypeId
  - EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.NextStagePublisher
  langs:
  - csharp
  - vb
  name: IncomingHttpRequestMessage
  nameWithType: IncomingHttpRequestMessage
  fullName: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Messages/IncomingHttpRequestMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IncomingHttpRequestMessage
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Messages/IncomingHttpRequestMessage.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Messages
  syntax:
    content: 'public class IncomingHttpRequestMessage : Message'
    content.vb: >-
      Public Class IncomingHttpRequestMessage

          Inherits Message
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.MsgTypeId
  commentId: P:EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: IncomingHttpRequestMessage.MsgTypeId
  fullName: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Messages/IncomingHttpRequestMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Messages/IncomingHttpRequestMessage.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messaging.Message.MsgTypeId
  overload: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.NextStagePublisher
  commentId: F:EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.NextStagePublisher
  id: NextStagePublisher
  parent: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage
  langs:
  - csharp
  - vb
  name: NextStagePublisher
  nameWithType: IncomingHttpRequestMessage.NextStagePublisher
  fullName: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.NextStagePublisher
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Messages/IncomingHttpRequestMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: NextStagePublisher
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Messages/IncomingHttpRequestMessage.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Messages
  syntax:
    content: public readonly IPublisher NextStagePublisher
    return:
      type: EventStore.Core.Bus.IPublisher
    content.vb: Public ReadOnly NextStagePublisher As IPublisher
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.HttpService
  commentId: F:EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.HttpService
  id: HttpService
  parent: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage
  langs:
  - csharp
  - vb
  name: HttpService
  nameWithType: IncomingHttpRequestMessage.HttpService
  fullName: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.HttpService
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Messages/IncomingHttpRequestMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HttpService
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Messages/IncomingHttpRequestMessage.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Messages
  syntax:
    content: public readonly HttpService HttpService
    return:
      type: EventStore.Core.Services.Transport.Http.HttpService
    content.vb: Public ReadOnly HttpService As HttpService
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.Entity
  commentId: F:EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.Entity
  id: Entity
  parent: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage
  langs:
  - csharp
  - vb
  name: Entity
  nameWithType: IncomingHttpRequestMessage.Entity
  fullName: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.Entity
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Messages/IncomingHttpRequestMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Entity
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Messages/IncomingHttpRequestMessage.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Messages
  syntax:
    content: public readonly HttpEntity Entity
    return:
      type: EventStore.Transport.Http.EntityManagement.HttpEntity
    content.vb: Public ReadOnly Entity As HttpEntity
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.#ctor(EventStore.Core.Services.Transport.Http.HttpService,EventStore.Transport.Http.EntityManagement.HttpEntity,EventStore.Core.Bus.IPublisher)
  commentId: M:EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.#ctor(EventStore.Core.Services.Transport.Http.HttpService,EventStore.Transport.Http.EntityManagement.HttpEntity,EventStore.Core.Bus.IPublisher)
  id: '#ctor(EventStore.Core.Services.Transport.Http.HttpService,EventStore.Transport.Http.EntityManagement.HttpEntity,EventStore.Core.Bus.IPublisher)'
  parent: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage
  langs:
  - csharp
  - vb
  name: IncomingHttpRequestMessage(HttpService, HttpEntity, IPublisher)
  nameWithType: IncomingHttpRequestMessage.IncomingHttpRequestMessage(HttpService, HttpEntity, IPublisher)
  fullName: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.IncomingHttpRequestMessage(EventStore.Core.Services.Transport.Http.HttpService, EventStore.Transport.Http.EntityManagement.HttpEntity, EventStore.Core.Bus.IPublisher)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/Messages/IncomingHttpRequestMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/Messages/IncomingHttpRequestMessage.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http.Messages
  syntax:
    content: public IncomingHttpRequestMessage(HttpService httpService, HttpEntity entity, IPublisher nextStagePublisher)
    parameters:
    - id: httpService
      type: EventStore.Core.Services.Transport.Http.HttpService
    - id: entity
      type: EventStore.Transport.Http.EntityManagement.HttpEntity
    - id: nextStagePublisher
      type: EventStore.Core.Bus.IPublisher
    content.vb: Public Sub New(httpService As HttpService, entity As HttpEntity, nextStagePublisher As IPublisher)
  overload: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Services.Transport.Http.Messages
  commentId: N:EventStore.Core.Services.Transport.Http.Messages
  isExternal: false
  name: EventStore.Core.Services.Transport.Http.Messages
  nameWithType: EventStore.Core.Services.Transport.Http.Messages
  fullName: EventStore.Core.Services.Transport.Http.Messages
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IncomingHttpRequestMessage>()
  nameWithType: ProtobufExtensions.Serialize<IncomingHttpRequestMessage>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IncomingHttpRequestMessage)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage)()
  name.vb: Serialize(Of IncomingHttpRequestMessage)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IncomingHttpRequestMessage>
    nameWithType: ProtobufExtensions.Serialize<IncomingHttpRequestMessage>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IncomingHttpRequestMessage)
    nameWithType: ProtobufExtensions.Serialize(Of IncomingHttpRequestMessage)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IncomingHttpRequestMessage>()
  nameWithType: ProtobufExtensions.SerializeToArray<IncomingHttpRequestMessage>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IncomingHttpRequestMessage)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage)()
  name.vb: SerializeToArray(Of IncomingHttpRequestMessage)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IncomingHttpRequestMessage>
    nameWithType: ProtobufExtensions.SerializeToArray<IncomingHttpRequestMessage>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IncomingHttpRequestMessage)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IncomingHttpRequestMessage)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messaging.Message.MsgTypeId
  commentId: P:EventStore.Core.Messaging.Message.MsgTypeId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId
- uid: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.MsgTypeId*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.MsgTypeId
  isExternal: false
  name: MsgTypeId
  nameWithType: IncomingHttpRequestMessage.MsgTypeId
  fullName: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.MsgTypeId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  isExternal: false
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Core.Services.Transport.Http.HttpService
  commentId: T:EventStore.Core.Services.Transport.Http.HttpService
  parent: EventStore.Core.Services.Transport.Http
  isExternal: false
  name: HttpService
  nameWithType: HttpService
  fullName: EventStore.Core.Services.Transport.Http.HttpService
- uid: EventStore.Core.Services.Transport.Http
  commentId: N:EventStore.Core.Services.Transport.Http
  isExternal: false
  name: EventStore.Core.Services.Transport.Http
  nameWithType: EventStore.Core.Services.Transport.Http
  fullName: EventStore.Core.Services.Transport.Http
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity
  commentId: T:EventStore.Transport.Http.EntityManagement.HttpEntity
  parent: EventStore.Transport.Http.EntityManagement
  isExternal: false
  name: HttpEntity
  nameWithType: HttpEntity
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity
- uid: EventStore.Transport.Http.EntityManagement
  commentId: N:EventStore.Transport.Http.EntityManagement
  isExternal: false
  name: EventStore.Transport.Http.EntityManagement
  nameWithType: EventStore.Transport.Http.EntityManagement
  fullName: EventStore.Transport.Http.EntityManagement
- uid: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.#ctor*
  commentId: Overload:EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.#ctor
  isExternal: false
  name: IncomingHttpRequestMessage
  nameWithType: IncomingHttpRequestMessage.IncomingHttpRequestMessage
  fullName: EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.IncomingHttpRequestMessage

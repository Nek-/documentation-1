### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Transport.Http.ResponseConfiguration
  commentId: T:EventStore.Core.Services.Transport.Http.ResponseConfiguration
  id: ResponseConfiguration
  parent: EventStore.Core.Services.Transport.Http
  children:
  - EventStore.Core.Services.Transport.Http.ResponseConfiguration.#ctor(System.Int32,System.String,Encoding,KeyValuePair{System.String,System.String}[])
  - EventStore.Core.Services.Transport.Http.ResponseConfiguration.#ctor(System.Int32,System.String,System.String,Encoding,IEnumerable{KeyValuePair{System.String,System.String}})
  - EventStore.Core.Services.Transport.Http.ResponseConfiguration.#ctor(System.Int32,System.String,System.String,Encoding,KeyValuePair{System.String,System.String}[])
  - EventStore.Core.Services.Transport.Http.ResponseConfiguration.Code
  - EventStore.Core.Services.Transport.Http.ResponseConfiguration.ContentType
  - EventStore.Core.Services.Transport.Http.ResponseConfiguration.Description
  - EventStore.Core.Services.Transport.Http.ResponseConfiguration.Encoding
  - EventStore.Core.Services.Transport.Http.ResponseConfiguration.Headers
  - EventStore.Core.Services.Transport.Http.ResponseConfiguration.SetCreated(System.String)
  langs:
  - csharp
  - vb
  name: ResponseConfiguration
  nameWithType: ResponseConfiguration
  fullName: EventStore.Core.Services.Transport.Http.ResponseConfiguration
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ResponseConfiguration
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: 'public class ResponseConfiguration : object'
    content.vb: >-
      Public Class ResponseConfiguration

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Services.Transport.Http.ResponseConfiguration.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Transport.Http.ResponseConfiguration.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Transport.Http.ResponseConfiguration.Code
  commentId: F:EventStore.Core.Services.Transport.Http.ResponseConfiguration.Code
  id: Code
  parent: EventStore.Core.Services.Transport.Http.ResponseConfiguration
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: ResponseConfiguration.Code
  fullName: EventStore.Core.Services.Transport.Http.ResponseConfiguration.Code
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Code
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public readonly int Code
    return:
      type: System.Int32
    content.vb: Public ReadOnly Code As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.ResponseConfiguration.Description
  commentId: F:EventStore.Core.Services.Transport.Http.ResponseConfiguration.Description
  id: Description
  parent: EventStore.Core.Services.Transport.Http.ResponseConfiguration
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ResponseConfiguration.Description
  fullName: EventStore.Core.Services.Transport.Http.ResponseConfiguration.Description
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Description
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public readonly string Description
    return:
      type: System.String
    content.vb: Public ReadOnly Description As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.ResponseConfiguration.ContentType
  commentId: F:EventStore.Core.Services.Transport.Http.ResponseConfiguration.ContentType
  id: ContentType
  parent: EventStore.Core.Services.Transport.Http.ResponseConfiguration
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: ResponseConfiguration.ContentType
  fullName: EventStore.Core.Services.Transport.Http.ResponseConfiguration.ContentType
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ContentType
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public readonly string ContentType
    return:
      type: System.String
    content.vb: Public ReadOnly ContentType As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.ResponseConfiguration.Encoding
  commentId: F:EventStore.Core.Services.Transport.Http.ResponseConfiguration.Encoding
  id: Encoding
  parent: EventStore.Core.Services.Transport.Http.ResponseConfiguration
  langs:
  - csharp
  - vb
  name: Encoding
  nameWithType: ResponseConfiguration.Encoding
  fullName: EventStore.Core.Services.Transport.Http.ResponseConfiguration.Encoding
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Encoding
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public readonly Encoding Encoding
    return:
      type: Encoding
    content.vb: Public ReadOnly Encoding As Encoding
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.ResponseConfiguration.Headers
  commentId: F:EventStore.Core.Services.Transport.Http.ResponseConfiguration.Headers
  id: Headers
  parent: EventStore.Core.Services.Transport.Http.ResponseConfiguration
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: ResponseConfiguration.Headers
  fullName: EventStore.Core.Services.Transport.Http.ResponseConfiguration.Headers
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Headers
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public readonly IEnumerable<KeyValuePair<string, string>> Headers
    return:
      type: IEnumerable{KeyValuePair{System.String,System.String}}
    content.vb: Public ReadOnly Headers As IEnumerable(Of KeyValuePair(Of String, String))
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Transport.Http.ResponseConfiguration.#ctor(System.Int32,System.String,Encoding,KeyValuePair{System.String,System.String}[])
  commentId: M:EventStore.Core.Services.Transport.Http.ResponseConfiguration.#ctor(System.Int32,System.String,Encoding,KeyValuePair{System.String,System.String}[])
  id: '#ctor(System.Int32,System.String,Encoding,KeyValuePair{System.String,System.String}[])'
  parent: EventStore.Core.Services.Transport.Http.ResponseConfiguration
  langs:
  - csharp
  - vb
  name: ResponseConfiguration(Int32, String, Encoding, KeyValuePair<String, String>[])
  nameWithType: ResponseConfiguration.ResponseConfiguration(Int32, String, Encoding, KeyValuePair<String, String>[])
  fullName: EventStore.Core.Services.Transport.Http.ResponseConfiguration.ResponseConfiguration(System.Int32, System.String, Encoding, KeyValuePair<System.String, System.String>[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public ResponseConfiguration(int code, string contentType, Encoding encoding, params KeyValuePair<string, string>[] headers)
    parameters:
    - id: code
      type: System.Int32
    - id: contentType
      type: System.String
    - id: encoding
      type: Encoding
    - id: headers
      type: KeyValuePair{System.String,System.String}[]
    content.vb: Public Sub New(code As Integer, contentType As String, encoding As Encoding, ParamArray headers As KeyValuePair(Of String, String)())
  overload: EventStore.Core.Services.Transport.Http.ResponseConfiguration.#ctor*
  nameWithType.vb: ResponseConfiguration.ResponseConfiguration(Int32, String, Encoding, KeyValuePair(Of String, String)())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Transport.Http.ResponseConfiguration.ResponseConfiguration(System.Int32, System.String, Encoding, KeyValuePair(Of System.String, System.String)())
  name.vb: ResponseConfiguration(Int32, String, Encoding, KeyValuePair(Of String, String)())
- uid: EventStore.Core.Services.Transport.Http.ResponseConfiguration.SetCreated(System.String)
  commentId: M:EventStore.Core.Services.Transport.Http.ResponseConfiguration.SetCreated(System.String)
  id: SetCreated(System.String)
  parent: EventStore.Core.Services.Transport.Http.ResponseConfiguration
  langs:
  - csharp
  - vb
  name: SetCreated(String)
  nameWithType: ResponseConfiguration.SetCreated(String)
  fullName: EventStore.Core.Services.Transport.Http.ResponseConfiguration.SetCreated(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetCreated
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public ResponseConfiguration SetCreated(string location)
    parameters:
    - id: location
      type: System.String
    return:
      type: EventStore.Core.Services.Transport.Http.ResponseConfiguration
    content.vb: Public Function SetCreated(location As String) As ResponseConfiguration
  overload: EventStore.Core.Services.Transport.Http.ResponseConfiguration.SetCreated*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Transport.Http.ResponseConfiguration.#ctor(System.Int32,System.String,System.String,Encoding,KeyValuePair{System.String,System.String}[])
  commentId: M:EventStore.Core.Services.Transport.Http.ResponseConfiguration.#ctor(System.Int32,System.String,System.String,Encoding,KeyValuePair{System.String,System.String}[])
  id: '#ctor(System.Int32,System.String,System.String,Encoding,KeyValuePair{System.String,System.String}[])'
  parent: EventStore.Core.Services.Transport.Http.ResponseConfiguration
  langs:
  - csharp
  - vb
  name: ResponseConfiguration(Int32, String, String, Encoding, KeyValuePair<String, String>[])
  nameWithType: ResponseConfiguration.ResponseConfiguration(Int32, String, String, Encoding, KeyValuePair<String, String>[])
  fullName: EventStore.Core.Services.Transport.Http.ResponseConfiguration.ResponseConfiguration(System.Int32, System.String, System.String, Encoding, KeyValuePair<System.String, System.String>[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
    startLine: 45
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public ResponseConfiguration(int code, string description, string contentType, Encoding encoding, params KeyValuePair<string, string>[] headers)
    parameters:
    - id: code
      type: System.Int32
    - id: description
      type: System.String
    - id: contentType
      type: System.String
    - id: encoding
      type: Encoding
    - id: headers
      type: KeyValuePair{System.String,System.String}[]
    content.vb: Public Sub New(code As Integer, description As String, contentType As String, encoding As Encoding, ParamArray headers As KeyValuePair(Of String, String)())
  overload: EventStore.Core.Services.Transport.Http.ResponseConfiguration.#ctor*
  nameWithType.vb: ResponseConfiguration.ResponseConfiguration(Int32, String, String, Encoding, KeyValuePair(Of String, String)())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Transport.Http.ResponseConfiguration.ResponseConfiguration(System.Int32, System.String, System.String, Encoding, KeyValuePair(Of System.String, System.String)())
  name.vb: ResponseConfiguration(Int32, String, String, Encoding, KeyValuePair(Of String, String)())
- uid: EventStore.Core.Services.Transport.Http.ResponseConfiguration.#ctor(System.Int32,System.String,System.String,Encoding,IEnumerable{KeyValuePair{System.String,System.String}})
  commentId: M:EventStore.Core.Services.Transport.Http.ResponseConfiguration.#ctor(System.Int32,System.String,System.String,Encoding,IEnumerable{KeyValuePair{System.String,System.String}})
  id: '#ctor(System.Int32,System.String,System.String,Encoding,IEnumerable{KeyValuePair{System.String,System.String}})'
  parent: EventStore.Core.Services.Transport.Http.ResponseConfiguration
  langs:
  - csharp
  - vb
  name: ResponseConfiguration(Int32, String, String, Encoding, IEnumerable<KeyValuePair<String, String>>)
  nameWithType: ResponseConfiguration.ResponseConfiguration(Int32, String, String, Encoding, IEnumerable<KeyValuePair<String, String>>)
  fullName: EventStore.Core.Services.Transport.Http.ResponseConfiguration.ResponseConfiguration(System.Int32, System.String, System.String, Encoding, IEnumerable<KeyValuePair<System.String, System.String>>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Transport/Http/ResponseConfiguration.cs
    startLine: 50
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Transport.Http
  syntax:
    content: public ResponseConfiguration(int code, string description, string contentType, Encoding encoding, IEnumerable<KeyValuePair<string, string>> headers)
    parameters:
    - id: code
      type: System.Int32
    - id: description
      type: System.String
    - id: contentType
      type: System.String
    - id: encoding
      type: Encoding
    - id: headers
      type: IEnumerable{KeyValuePair{System.String,System.String}}
    content.vb: Public Sub New(code As Integer, description As String, contentType As String, encoding As Encoding, headers As IEnumerable(Of KeyValuePair(Of String, String)))
  overload: EventStore.Core.Services.Transport.Http.ResponseConfiguration.#ctor*
  nameWithType.vb: ResponseConfiguration.ResponseConfiguration(Int32, String, String, Encoding, IEnumerable(Of KeyValuePair(Of String, String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.Transport.Http.ResponseConfiguration.ResponseConfiguration(System.Int32, System.String, System.String, Encoding, IEnumerable(Of KeyValuePair(Of System.String, System.String)))
  name.vb: ResponseConfiguration(Int32, String, String, Encoding, IEnumerable(Of KeyValuePair(Of String, String)))
references:
- uid: EventStore.Core.Services.Transport.Http
  commentId: N:EventStore.Core.Services.Transport.Http
  isExternal: false
  name: EventStore.Core.Services.Transport.Http
  nameWithType: EventStore.Core.Services.Transport.Http
  fullName: EventStore.Core.Services.Transport.Http
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.ResponseConfiguration.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ResponseConfiguration>()
  nameWithType: ProtobufExtensions.Serialize<ResponseConfiguration>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.ResponseConfiguration>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ResponseConfiguration)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.ResponseConfiguration)()
  name.vb: Serialize(Of ResponseConfiguration)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ResponseConfiguration>
    nameWithType: ProtobufExtensions.Serialize<ResponseConfiguration>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Transport.Http.ResponseConfiguration>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ResponseConfiguration)
    nameWithType: ProtobufExtensions.Serialize(Of ResponseConfiguration)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Transport.Http.ResponseConfiguration)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.ResponseConfiguration.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ResponseConfiguration>()
  nameWithType: ProtobufExtensions.SerializeToArray<ResponseConfiguration>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.ResponseConfiguration>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ResponseConfiguration)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.ResponseConfiguration)()
  name.vb: SerializeToArray(Of ResponseConfiguration)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ResponseConfiguration>
    nameWithType: ProtobufExtensions.SerializeToArray<ResponseConfiguration>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Transport.Http.ResponseConfiguration>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ResponseConfiguration)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ResponseConfiguration)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Transport.Http.ResponseConfiguration)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Encoding
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: Encoding
- uid: IEnumerable{KeyValuePair{System.String,System.String}}
  commentId: '!:IEnumerable{KeyValuePair{System.String,System.String}}'
  definition: IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: IEnumerable<KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: IEnumerable(Of KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.ResponseConfiguration.#ctor*
  commentId: Overload:EventStore.Core.Services.Transport.Http.ResponseConfiguration.#ctor
  isExternal: false
  name: ResponseConfiguration
  nameWithType: ResponseConfiguration.ResponseConfiguration
  fullName: EventStore.Core.Services.Transport.Http.ResponseConfiguration.ResponseConfiguration
- uid: KeyValuePair{System.String,System.String}[]
  name: KeyValuePair<String, String>[]
  nameWithType: KeyValuePair<String, String>[]
  fullName: KeyValuePair<System.String, System.String>[]
  nameWithType.vb: KeyValuePair(Of String, String)()
  fullName.vb: KeyValuePair(Of System.String, System.String)()
  name.vb: KeyValuePair(Of String, String)()
  spec.csharp:
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Services.Transport.Http.ResponseConfiguration.SetCreated*
  commentId: Overload:EventStore.Core.Services.Transport.Http.ResponseConfiguration.SetCreated
  isExternal: false
  name: SetCreated
  nameWithType: ResponseConfiguration.SetCreated
  fullName: EventStore.Core.Services.Transport.Http.ResponseConfiguration.SetCreated
- uid: EventStore.Core.Services.Transport.Http.ResponseConfiguration
  commentId: T:EventStore.Core.Services.Transport.Http.ResponseConfiguration
  parent: EventStore.Core.Services.Transport.Http
  isExternal: false
  name: ResponseConfiguration
  nameWithType: ResponseConfiguration
  fullName: EventStore.Core.Services.Transport.Http.ResponseConfiguration

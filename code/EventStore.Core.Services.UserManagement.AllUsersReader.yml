### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.UserManagement.AllUsersReader
  commentId: T:EventStore.Core.Services.UserManagement.AllUsersReader
  id: AllUsersReader
  parent: EventStore.Core.Services.UserManagement
  children:
  - EventStore.Core.Services.UserManagement.AllUsersReader.#ctor(EventStore.Core.Helpers.IODispatcher)
  - EventStore.Core.Services.UserManagement.AllUsersReader.Run(Action{EventStore.Core.Messages.UserManagementMessage.Error,EventStore.Core.Messages.UserManagementMessage.UserData[]})
  langs:
  - csharp
  - vb
  name: AllUsersReader
  nameWithType: AllUsersReader
  fullName: EventStore.Core.Services.UserManagement.AllUsersReader
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/UserManagement/AllUsersReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: AllUsersReader
    path: ../EventStore/src/EventStore.Core/Services/UserManagement/AllUsersReader.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.UserManagement
  syntax:
    content: 'public class AllUsersReader : object'
    content.vb: >-
      Public Class AllUsersReader
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.UserManagement.AllUsersReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.UserManagement.AllUsersReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.UserManagement.AllUsersReader.#ctor(EventStore.Core.Helpers.IODispatcher)
  commentId: M:EventStore.Core.Services.UserManagement.AllUsersReader.#ctor(EventStore.Core.Helpers.IODispatcher)
  id: '#ctor(EventStore.Core.Helpers.IODispatcher)'
  parent: EventStore.Core.Services.UserManagement.AllUsersReader
  langs:
  - csharp
  - vb
  name: AllUsersReader(IODispatcher)
  nameWithType: AllUsersReader.AllUsersReader(IODispatcher)
  fullName: EventStore.Core.Services.UserManagement.AllUsersReader.AllUsersReader(EventStore.Core.Helpers.IODispatcher)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/UserManagement/AllUsersReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/UserManagement/AllUsersReader.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.UserManagement
  syntax:
    content: public AllUsersReader(IODispatcher ioDispatcher)
    parameters:
    - id: ioDispatcher
      type: EventStore.Core.Helpers.IODispatcher
    content.vb: Public Sub New(ioDispatcher As IODispatcher)
  overload: EventStore.Core.Services.UserManagement.AllUsersReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.UserManagement.AllUsersReader.Run(Action{EventStore.Core.Messages.UserManagementMessage.Error,EventStore.Core.Messages.UserManagementMessage.UserData[]})
  commentId: M:EventStore.Core.Services.UserManagement.AllUsersReader.Run(Action{EventStore.Core.Messages.UserManagementMessage.Error,EventStore.Core.Messages.UserManagementMessage.UserData[]})
  id: Run(Action{EventStore.Core.Messages.UserManagementMessage.Error,EventStore.Core.Messages.UserManagementMessage.UserData[]})
  parent: EventStore.Core.Services.UserManagement.AllUsersReader
  langs:
  - csharp
  - vb
  name: Run(Action<UserManagementMessage.Error, UserManagementMessage.UserData[]>)
  nameWithType: AllUsersReader.Run(Action<UserManagementMessage.Error, UserManagementMessage.UserData[]>)
  fullName: EventStore.Core.Services.UserManagement.AllUsersReader.Run(Action<EventStore.Core.Messages.UserManagementMessage.Error, EventStore.Core.Messages.UserManagementMessage.UserData[]>)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/UserManagement/AllUsersReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Run
    path: ../EventStore/src/EventStore.Core/Services/UserManagement/AllUsersReader.cs
    startLine: 26
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.UserManagement
  syntax:
    content: public void Run(Action<UserManagementMessage.Error, UserManagementMessage.UserData[]> completed)
    parameters:
    - id: completed
      type: Action{EventStore.Core.Messages.UserManagementMessage.Error,EventStore.Core.Messages.UserManagementMessage.UserData[]}
    content.vb: Public Sub Run(completed As Action(Of UserManagementMessage.Error, UserManagementMessage.UserData()))
  overload: EventStore.Core.Services.UserManagement.AllUsersReader.Run*
  nameWithType.vb: AllUsersReader.Run(Action(Of UserManagementMessage.Error, UserManagementMessage.UserData()))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Services.UserManagement.AllUsersReader.Run(Action(Of EventStore.Core.Messages.UserManagementMessage.Error, EventStore.Core.Messages.UserManagementMessage.UserData()))
  name.vb: Run(Action(Of UserManagementMessage.Error, UserManagementMessage.UserData()))
references:
- uid: EventStore.Core.Services.UserManagement
  commentId: N:EventStore.Core.Services.UserManagement
  isExternal: false
  name: EventStore.Core.Services.UserManagement
  nameWithType: EventStore.Core.Services.UserManagement
  fullName: EventStore.Core.Services.UserManagement
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.UserManagement.AllUsersReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<AllUsersReader>()
  nameWithType: ProtobufExtensions.Serialize<AllUsersReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.UserManagement.AllUsersReader>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of AllUsersReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.UserManagement.AllUsersReader)()
  name.vb: Serialize(Of AllUsersReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<AllUsersReader>
    nameWithType: ProtobufExtensions.Serialize<AllUsersReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.UserManagement.AllUsersReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of AllUsersReader)
    nameWithType: ProtobufExtensions.Serialize(Of AllUsersReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.UserManagement.AllUsersReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.UserManagement.AllUsersReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<AllUsersReader>()
  nameWithType: ProtobufExtensions.SerializeToArray<AllUsersReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.UserManagement.AllUsersReader>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of AllUsersReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.UserManagement.AllUsersReader)()
  name.vb: SerializeToArray(Of AllUsersReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<AllUsersReader>
    nameWithType: ProtobufExtensions.SerializeToArray<AllUsersReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.UserManagement.AllUsersReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of AllUsersReader)
    nameWithType: ProtobufExtensions.SerializeToArray(Of AllUsersReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.UserManagement.AllUsersReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.UserManagement.AllUsersReader.#ctor*
  commentId: Overload:EventStore.Core.Services.UserManagement.AllUsersReader.#ctor
  isExternal: false
  name: AllUsersReader
  nameWithType: AllUsersReader.AllUsersReader
  fullName: EventStore.Core.Services.UserManagement.AllUsersReader.AllUsersReader
- uid: EventStore.Core.Helpers.IODispatcher
  commentId: T:EventStore.Core.Helpers.IODispatcher
  parent: EventStore.Core.Helpers
  isExternal: false
  name: IODispatcher
  nameWithType: IODispatcher
  fullName: EventStore.Core.Helpers.IODispatcher
- uid: EventStore.Core.Helpers
  commentId: N:EventStore.Core.Helpers
  isExternal: false
  name: EventStore.Core.Helpers
  nameWithType: EventStore.Core.Helpers
  fullName: EventStore.Core.Helpers
- uid: EventStore.Core.Services.UserManagement.AllUsersReader.Run*
  commentId: Overload:EventStore.Core.Services.UserManagement.AllUsersReader.Run
  isExternal: false
  name: Run
  nameWithType: AllUsersReader.Run
  fullName: EventStore.Core.Services.UserManagement.AllUsersReader.Run
- uid: Action{EventStore.Core.Messages.UserManagementMessage.Error,EventStore.Core.Messages.UserManagementMessage.UserData[]}
  commentId: '!:Action{EventStore.Core.Messages.UserManagementMessage.Error,EventStore.Core.Messages.UserManagementMessage.UserData[]}'
  definition: Action`2
  name: Action<UserManagementMessage.Error, UserManagementMessage.UserData[]>
  nameWithType: Action<UserManagementMessage.Error, UserManagementMessage.UserData[]>
  fullName: Action<EventStore.Core.Messages.UserManagementMessage.Error, EventStore.Core.Messages.UserManagementMessage.UserData[]>
  nameWithType.vb: Action(Of UserManagementMessage.Error, UserManagementMessage.UserData())
  fullName.vb: Action(Of EventStore.Core.Messages.UserManagementMessage.Error, EventStore.Core.Messages.UserManagementMessage.UserData())
  name.vb: Action(Of UserManagementMessage.Error, UserManagementMessage.UserData())
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.UserManagementMessage.Error
    name: UserManagementMessage.Error
    nameWithType: UserManagementMessage.Error
    fullName: EventStore.Core.Messages.UserManagementMessage.Error
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messages.UserManagementMessage.UserData
    name: UserManagementMessage.UserData
    nameWithType: UserManagementMessage.UserData
    fullName: EventStore.Core.Messages.UserManagementMessage.UserData
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.UserManagementMessage.Error
    name: UserManagementMessage.Error
    nameWithType: UserManagementMessage.Error
    fullName: EventStore.Core.Messages.UserManagementMessage.Error
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Messages.UserManagementMessage.UserData
    name: UserManagementMessage.UserData
    nameWithType: UserManagementMessage.UserData
    fullName: EventStore.Core.Messages.UserManagementMessage.UserData
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`2
  isExternal: true
  name: Action<, >
  nameWithType: Action<, >
  fullName: Action<, >
  nameWithType.vb: Action(Of , )
  fullName.vb: Action(Of , )
  name.vb: Action(Of , )
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Settings.SingleVNodeSettings
  commentId: T:EventStore.Core.Settings.SingleVNodeSettings
  id: SingleVNodeSettings
  parent: EventStore.Core.Settings
  children:
  - EventStore.Core.Settings.SingleVNodeSettings.#ctor(IPEndPoint,IPEndPoint,IPEndPoint,System.String[],System.Boolean,X509Certificate2,System.Int32,TimeSpan,TimeSpan,TimeSpan,TimeSpan,TimeSpan,EventStore.Core.Services.Monitoring.StatsStorage,System.Boolean,System.Boolean)
  - EventStore.Core.Settings.SingleVNodeSettings.Certificate
  - EventStore.Core.Settings.SingleVNodeSettings.CommitTimeout
  - EventStore.Core.Settings.SingleVNodeSettings.DisableScavengeMerging
  - EventStore.Core.Settings.SingleVNodeSettings.EnableTrustedAuth
  - EventStore.Core.Settings.SingleVNodeSettings.ExternalHttpEndPoint
  - EventStore.Core.Settings.SingleVNodeSettings.ExternalSecureTcpEndPoint
  - EventStore.Core.Settings.SingleVNodeSettings.ExternalTcpEndPoint
  - EventStore.Core.Settings.SingleVNodeSettings.HttpPrefixes
  - EventStore.Core.Settings.SingleVNodeSettings.MinFlushDelay
  - EventStore.Core.Settings.SingleVNodeSettings.PrepareTimeout
  - EventStore.Core.Settings.SingleVNodeSettings.SkipInitializeStandardUsersCheck
  - EventStore.Core.Settings.SingleVNodeSettings.StatsPeriod
  - EventStore.Core.Settings.SingleVNodeSettings.StatsStorage
  - EventStore.Core.Settings.SingleVNodeSettings.TcpTimeout
  - EventStore.Core.Settings.SingleVNodeSettings.ToString
  - EventStore.Core.Settings.SingleVNodeSettings.WorkerThreads
  langs:
  - csharp
  - vb
  name: SingleVNodeSettings
  nameWithType: SingleVNodeSettings
  fullName: EventStore.Core.Settings.SingleVNodeSettings
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SingleVNodeSettings
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: 'public class SingleVNodeSettings : object'
    content.vb: >-
      Public Class SingleVNodeSettings
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Settings.SingleVNodeSettings.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Settings.SingleVNodeSettings.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Settings.SingleVNodeSettings.ExternalTcpEndPoint
  commentId: F:EventStore.Core.Settings.SingleVNodeSettings.ExternalTcpEndPoint
  id: ExternalTcpEndPoint
  parent: EventStore.Core.Settings.SingleVNodeSettings
  langs:
  - csharp
  - vb
  name: ExternalTcpEndPoint
  nameWithType: SingleVNodeSettings.ExternalTcpEndPoint
  fullName: EventStore.Core.Settings.SingleVNodeSettings.ExternalTcpEndPoint
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ExternalTcpEndPoint
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: public readonly IPEndPoint ExternalTcpEndPoint
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly ExternalTcpEndPoint As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Settings.SingleVNodeSettings.ExternalSecureTcpEndPoint
  commentId: F:EventStore.Core.Settings.SingleVNodeSettings.ExternalSecureTcpEndPoint
  id: ExternalSecureTcpEndPoint
  parent: EventStore.Core.Settings.SingleVNodeSettings
  langs:
  - csharp
  - vb
  name: ExternalSecureTcpEndPoint
  nameWithType: SingleVNodeSettings.ExternalSecureTcpEndPoint
  fullName: EventStore.Core.Settings.SingleVNodeSettings.ExternalSecureTcpEndPoint
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ExternalSecureTcpEndPoint
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: public readonly IPEndPoint ExternalSecureTcpEndPoint
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly ExternalSecureTcpEndPoint As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Settings.SingleVNodeSettings.ExternalHttpEndPoint
  commentId: F:EventStore.Core.Settings.SingleVNodeSettings.ExternalHttpEndPoint
  id: ExternalHttpEndPoint
  parent: EventStore.Core.Settings.SingleVNodeSettings
  langs:
  - csharp
  - vb
  name: ExternalHttpEndPoint
  nameWithType: SingleVNodeSettings.ExternalHttpEndPoint
  fullName: EventStore.Core.Settings.SingleVNodeSettings.ExternalHttpEndPoint
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ExternalHttpEndPoint
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: public readonly IPEndPoint ExternalHttpEndPoint
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly ExternalHttpEndPoint As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Settings.SingleVNodeSettings.HttpPrefixes
  commentId: F:EventStore.Core.Settings.SingleVNodeSettings.HttpPrefixes
  id: HttpPrefixes
  parent: EventStore.Core.Settings.SingleVNodeSettings
  langs:
  - csharp
  - vb
  name: HttpPrefixes
  nameWithType: SingleVNodeSettings.HttpPrefixes
  fullName: EventStore.Core.Settings.SingleVNodeSettings.HttpPrefixes
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: HttpPrefixes
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: public readonly string[] HttpPrefixes
    return:
      type: System.String[]
    content.vb: Public ReadOnly HttpPrefixes As String()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Settings.SingleVNodeSettings.EnableTrustedAuth
  commentId: F:EventStore.Core.Settings.SingleVNodeSettings.EnableTrustedAuth
  id: EnableTrustedAuth
  parent: EventStore.Core.Settings.SingleVNodeSettings
  langs:
  - csharp
  - vb
  name: EnableTrustedAuth
  nameWithType: SingleVNodeSettings.EnableTrustedAuth
  fullName: EventStore.Core.Settings.SingleVNodeSettings.EnableTrustedAuth
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: EnableTrustedAuth
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: public readonly bool EnableTrustedAuth
    return:
      type: System.Boolean
    content.vb: Public ReadOnly EnableTrustedAuth As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Settings.SingleVNodeSettings.Certificate
  commentId: F:EventStore.Core.Settings.SingleVNodeSettings.Certificate
  id: Certificate
  parent: EventStore.Core.Settings.SingleVNodeSettings
  langs:
  - csharp
  - vb
  name: Certificate
  nameWithType: SingleVNodeSettings.Certificate
  fullName: EventStore.Core.Settings.SingleVNodeSettings.Certificate
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Certificate
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: public readonly X509Certificate2 Certificate
    return:
      type: X509Certificate2
    content.vb: Public ReadOnly Certificate As X509Certificate2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Settings.SingleVNodeSettings.WorkerThreads
  commentId: F:EventStore.Core.Settings.SingleVNodeSettings.WorkerThreads
  id: WorkerThreads
  parent: EventStore.Core.Settings.SingleVNodeSettings
  langs:
  - csharp
  - vb
  name: WorkerThreads
  nameWithType: SingleVNodeSettings.WorkerThreads
  fullName: EventStore.Core.Settings.SingleVNodeSettings.WorkerThreads
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: WorkerThreads
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: public readonly int WorkerThreads
    return:
      type: System.Int32
    content.vb: Public ReadOnly WorkerThreads As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Settings.SingleVNodeSettings.MinFlushDelay
  commentId: F:EventStore.Core.Settings.SingleVNodeSettings.MinFlushDelay
  id: MinFlushDelay
  parent: EventStore.Core.Settings.SingleVNodeSettings
  langs:
  - csharp
  - vb
  name: MinFlushDelay
  nameWithType: SingleVNodeSettings.MinFlushDelay
  fullName: EventStore.Core.Settings.SingleVNodeSettings.MinFlushDelay
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: MinFlushDelay
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: public readonly TimeSpan MinFlushDelay
    return:
      type: TimeSpan
    content.vb: Public ReadOnly MinFlushDelay As TimeSpan
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Settings.SingleVNodeSettings.PrepareTimeout
  commentId: F:EventStore.Core.Settings.SingleVNodeSettings.PrepareTimeout
  id: PrepareTimeout
  parent: EventStore.Core.Settings.SingleVNodeSettings
  langs:
  - csharp
  - vb
  name: PrepareTimeout
  nameWithType: SingleVNodeSettings.PrepareTimeout
  fullName: EventStore.Core.Settings.SingleVNodeSettings.PrepareTimeout
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: PrepareTimeout
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: public readonly TimeSpan PrepareTimeout
    return:
      type: TimeSpan
    content.vb: Public ReadOnly PrepareTimeout As TimeSpan
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Settings.SingleVNodeSettings.CommitTimeout
  commentId: F:EventStore.Core.Settings.SingleVNodeSettings.CommitTimeout
  id: CommitTimeout
  parent: EventStore.Core.Settings.SingleVNodeSettings
  langs:
  - csharp
  - vb
  name: CommitTimeout
  nameWithType: SingleVNodeSettings.CommitTimeout
  fullName: EventStore.Core.Settings.SingleVNodeSettings.CommitTimeout
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: CommitTimeout
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 20
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: public readonly TimeSpan CommitTimeout
    return:
      type: TimeSpan
    content.vb: Public ReadOnly CommitTimeout As TimeSpan
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Settings.SingleVNodeSettings.DisableScavengeMerging
  commentId: F:EventStore.Core.Settings.SingleVNodeSettings.DisableScavengeMerging
  id: DisableScavengeMerging
  parent: EventStore.Core.Settings.SingleVNodeSettings
  langs:
  - csharp
  - vb
  name: DisableScavengeMerging
  nameWithType: SingleVNodeSettings.DisableScavengeMerging
  fullName: EventStore.Core.Settings.SingleVNodeSettings.DisableScavengeMerging
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: DisableScavengeMerging
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: public readonly bool DisableScavengeMerging
    return:
      type: System.Boolean
    content.vb: Public ReadOnly DisableScavengeMerging As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Settings.SingleVNodeSettings.StatsPeriod
  commentId: F:EventStore.Core.Settings.SingleVNodeSettings.StatsPeriod
  id: StatsPeriod
  parent: EventStore.Core.Settings.SingleVNodeSettings
  langs:
  - csharp
  - vb
  name: StatsPeriod
  nameWithType: SingleVNodeSettings.StatsPeriod
  fullName: EventStore.Core.Settings.SingleVNodeSettings.StatsPeriod
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: StatsPeriod
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 24
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: public readonly TimeSpan StatsPeriod
    return:
      type: TimeSpan
    content.vb: Public ReadOnly StatsPeriod As TimeSpan
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Settings.SingleVNodeSettings.StatsStorage
  commentId: F:EventStore.Core.Settings.SingleVNodeSettings.StatsStorage
  id: StatsStorage
  parent: EventStore.Core.Settings.SingleVNodeSettings
  langs:
  - csharp
  - vb
  name: StatsStorage
  nameWithType: SingleVNodeSettings.StatsStorage
  fullName: EventStore.Core.Settings.SingleVNodeSettings.StatsStorage
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: StatsStorage
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 25
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: public readonly StatsStorage StatsStorage
    return:
      type: EventStore.Core.Services.Monitoring.StatsStorage
    content.vb: Public ReadOnly StatsStorage As StatsStorage
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Settings.SingleVNodeSettings.SkipInitializeStandardUsersCheck
  commentId: F:EventStore.Core.Settings.SingleVNodeSettings.SkipInitializeStandardUsersCheck
  id: SkipInitializeStandardUsersCheck
  parent: EventStore.Core.Settings.SingleVNodeSettings
  langs:
  - csharp
  - vb
  name: SkipInitializeStandardUsersCheck
  nameWithType: SingleVNodeSettings.SkipInitializeStandardUsersCheck
  fullName: EventStore.Core.Settings.SingleVNodeSettings.SkipInitializeStandardUsersCheck
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SkipInitializeStandardUsersCheck
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 27
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: public readonly bool SkipInitializeStandardUsersCheck
    return:
      type: System.Boolean
    content.vb: Public ReadOnly SkipInitializeStandardUsersCheck As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Settings.SingleVNodeSettings.TcpTimeout
  commentId: F:EventStore.Core.Settings.SingleVNodeSettings.TcpTimeout
  id: TcpTimeout
  parent: EventStore.Core.Settings.SingleVNodeSettings
  langs:
  - csharp
  - vb
  name: TcpTimeout
  nameWithType: SingleVNodeSettings.TcpTimeout
  fullName: EventStore.Core.Settings.SingleVNodeSettings.TcpTimeout
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: TcpTimeout
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 29
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: public readonly TimeSpan TcpTimeout
    return:
      type: TimeSpan
    content.vb: Public ReadOnly TcpTimeout As TimeSpan
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Settings.SingleVNodeSettings.#ctor(IPEndPoint,IPEndPoint,IPEndPoint,System.String[],System.Boolean,X509Certificate2,System.Int32,TimeSpan,TimeSpan,TimeSpan,TimeSpan,TimeSpan,EventStore.Core.Services.Monitoring.StatsStorage,System.Boolean,System.Boolean)
  commentId: M:EventStore.Core.Settings.SingleVNodeSettings.#ctor(IPEndPoint,IPEndPoint,IPEndPoint,System.String[],System.Boolean,X509Certificate2,System.Int32,TimeSpan,TimeSpan,TimeSpan,TimeSpan,TimeSpan,EventStore.Core.Services.Monitoring.StatsStorage,System.Boolean,System.Boolean)
  id: '#ctor(IPEndPoint,IPEndPoint,IPEndPoint,System.String[],System.Boolean,X509Certificate2,System.Int32,TimeSpan,TimeSpan,TimeSpan,TimeSpan,TimeSpan,EventStore.Core.Services.Monitoring.StatsStorage,System.Boolean,System.Boolean)'
  parent: EventStore.Core.Settings.SingleVNodeSettings
  langs:
  - csharp
  - vb
  name: SingleVNodeSettings(IPEndPoint, IPEndPoint, IPEndPoint, String[], Boolean, X509Certificate2, Int32, TimeSpan, TimeSpan, TimeSpan, TimeSpan, TimeSpan, StatsStorage, Boolean, Boolean)
  nameWithType: SingleVNodeSettings.SingleVNodeSettings(IPEndPoint, IPEndPoint, IPEndPoint, String[], Boolean, X509Certificate2, Int32, TimeSpan, TimeSpan, TimeSpan, TimeSpan, TimeSpan, StatsStorage, Boolean, Boolean)
  fullName: EventStore.Core.Settings.SingleVNodeSettings.SingleVNodeSettings(IPEndPoint, IPEndPoint, IPEndPoint, System.String[], System.Boolean, X509Certificate2, System.Int32, TimeSpan, TimeSpan, TimeSpan, TimeSpan, TimeSpan, EventStore.Core.Services.Monitoring.StatsStorage, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 31
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: public SingleVNodeSettings(IPEndPoint externalTcpEndPoint, IPEndPoint externalSecureTcpEndPoint, IPEndPoint externalHttpEndPoint, string[] httpPrefixes, bool enableTrustedAuth, X509Certificate2 certificate, int workerThreads, TimeSpan minFlushDelay, TimeSpan prepareTimeout, TimeSpan commitTimeout, TimeSpan statsPeriod, TimeSpan tcpTimeout, StatsStorage statsStorage = default(StatsStorage), bool skipInitializeStandardUsersCheck = false, bool disableScavengeMerging = false)
    parameters:
    - id: externalTcpEndPoint
      type: IPEndPoint
    - id: externalSecureTcpEndPoint
      type: IPEndPoint
    - id: externalHttpEndPoint
      type: IPEndPoint
    - id: httpPrefixes
      type: System.String[]
    - id: enableTrustedAuth
      type: System.Boolean
    - id: certificate
      type: X509Certificate2
    - id: workerThreads
      type: System.Int32
    - id: minFlushDelay
      type: TimeSpan
    - id: prepareTimeout
      type: TimeSpan
    - id: commitTimeout
      type: TimeSpan
    - id: statsPeriod
      type: TimeSpan
    - id: tcpTimeout
      type: TimeSpan
    - id: statsStorage
      type: EventStore.Core.Services.Monitoring.StatsStorage
    - id: skipInitializeStandardUsersCheck
      type: System.Boolean
    - id: disableScavengeMerging
      type: System.Boolean
    content.vb: Public Sub New(externalTcpEndPoint As IPEndPoint, externalSecureTcpEndPoint As IPEndPoint, externalHttpEndPoint As IPEndPoint, httpPrefixes As String(), enableTrustedAuth As Boolean, certificate As X509Certificate2, workerThreads As Integer, minFlushDelay As TimeSpan, prepareTimeout As TimeSpan, commitTimeout As TimeSpan, statsPeriod As TimeSpan, tcpTimeout As TimeSpan, statsStorage As StatsStorage = Nothing, skipInitializeStandardUsersCheck As Boolean = False, disableScavengeMerging As Boolean = False)
  overload: EventStore.Core.Settings.SingleVNodeSettings.#ctor*
  nameWithType.vb: SingleVNodeSettings.SingleVNodeSettings(IPEndPoint, IPEndPoint, IPEndPoint, String(), Boolean, X509Certificate2, Int32, TimeSpan, TimeSpan, TimeSpan, TimeSpan, TimeSpan, StatsStorage, Boolean, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Settings.SingleVNodeSettings.SingleVNodeSettings(IPEndPoint, IPEndPoint, IPEndPoint, System.String(), System.Boolean, X509Certificate2, System.Int32, TimeSpan, TimeSpan, TimeSpan, TimeSpan, TimeSpan, EventStore.Core.Services.Monitoring.StatsStorage, System.Boolean, System.Boolean)
  name.vb: SingleVNodeSettings(IPEndPoint, IPEndPoint, IPEndPoint, String(), Boolean, X509Certificate2, Int32, TimeSpan, TimeSpan, TimeSpan, TimeSpan, TimeSpan, StatsStorage, Boolean, Boolean)
- uid: EventStore.Core.Settings.SingleVNodeSettings.ToString
  commentId: M:EventStore.Core.Settings.SingleVNodeSettings.ToString
  id: ToString
  parent: EventStore.Core.Settings.SingleVNodeSettings
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SingleVNodeSettings.ToString()
  fullName: EventStore.Core.Settings.SingleVNodeSettings.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Settings/VNodeSettings.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.Core/Settings/VNodeSettings.cs
    startLine: 74
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Settings
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.Core.Settings.SingleVNodeSettings.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.Settings
  commentId: N:EventStore.Core.Settings
  name: EventStore.Core.Settings
  nameWithType: EventStore.Core.Settings
  fullName: EventStore.Core.Settings
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Settings.SingleVNodeSettings.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<SingleVNodeSettings>()
  nameWithType: ProtobufExtensions.Serialize<SingleVNodeSettings>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Settings.SingleVNodeSettings>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of SingleVNodeSettings)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Settings.SingleVNodeSettings)()
  name.vb: Serialize(Of SingleVNodeSettings)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<SingleVNodeSettings>
    nameWithType: ProtobufExtensions.Serialize<SingleVNodeSettings>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Settings.SingleVNodeSettings>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of SingleVNodeSettings)
    nameWithType: ProtobufExtensions.Serialize(Of SingleVNodeSettings)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Settings.SingleVNodeSettings)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Settings.SingleVNodeSettings.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<SingleVNodeSettings>()
  nameWithType: ProtobufExtensions.SerializeToArray<SingleVNodeSettings>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Settings.SingleVNodeSettings>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of SingleVNodeSettings)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Settings.SingleVNodeSettings)()
  name.vb: SerializeToArray(Of SingleVNodeSettings)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<SingleVNodeSettings>
    nameWithType: ProtobufExtensions.SerializeToArray<SingleVNodeSettings>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Settings.SingleVNodeSettings>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of SingleVNodeSettings)
    nameWithType: ProtobufExtensions.SerializeToArray(Of SingleVNodeSettings)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Settings.SingleVNodeSettings)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: IPEndPoint
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: IPEndPoint
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: X509Certificate2
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: X509Certificate2
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan
- uid: EventStore.Core.Services.Monitoring.StatsStorage
  commentId: T:EventStore.Core.Services.Monitoring.StatsStorage
  parent: EventStore.Core.Services.Monitoring
  name: StatsStorage
  nameWithType: StatsStorage
  fullName: EventStore.Core.Services.Monitoring.StatsStorage
- uid: EventStore.Core.Services.Monitoring
  commentId: N:EventStore.Core.Services.Monitoring
  name: EventStore.Core.Services.Monitoring
  nameWithType: EventStore.Core.Services.Monitoring
  fullName: EventStore.Core.Services.Monitoring
- uid: EventStore.Core.Settings.SingleVNodeSettings.#ctor*
  commentId: Overload:EventStore.Core.Settings.SingleVNodeSettings.#ctor
  name: SingleVNodeSettings
  nameWithType: SingleVNodeSettings.SingleVNodeSettings
  fullName: EventStore.Core.Settings.SingleVNodeSettings.SingleVNodeSettings
- uid: EventStore.Core.Settings.SingleVNodeSettings.ToString*
  commentId: Overload:EventStore.Core.Settings.SingleVNodeSettings.ToString
  name: ToString
  nameWithType: SingleVNodeSettings.ToString
  fullName: EventStore.Core.Settings.SingleVNodeSettings.ToString
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

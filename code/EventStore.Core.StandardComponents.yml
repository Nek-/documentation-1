### YamlMime:ManagedReference
items:
- uid: EventStore.Core.StandardComponents
  commentId: T:EventStore.Core.StandardComponents
  id: StandardComponents
  parent: EventStore.Core
  children:
  - EventStore.Core.StandardComponents.#ctor(EventStore.Core.TransactionLog.Chunks.TFChunkDb,EventStore.Core.Bus.IQueuedHandler,EventStore.Core.Bus.ISubscriber,EventStore.Core.Services.TimerService.TimerService,EventStore.Core.Services.TimerService.ITimeProvider,EventStore.Core.Services.Transport.Http.IHttpForwarder,EventStore.Core.Services.Transport.Http.HttpService[],EventStore.Core.Bus.IPublisher)
  - EventStore.Core.StandardComponents.Db
  - EventStore.Core.StandardComponents.HttpForwarder
  - EventStore.Core.StandardComponents.HttpServices
  - EventStore.Core.StandardComponents.MainBus
  - EventStore.Core.StandardComponents.MainQueue
  - EventStore.Core.StandardComponents.NetworkSendService
  - EventStore.Core.StandardComponents.TimeProvider
  - EventStore.Core.StandardComponents.TimerService
  langs:
  - csharp
  - vb
  name: StandardComponents
  nameWithType: StandardComponents
  fullName: EventStore.Core.StandardComponents
  type: Class
  source:
    remote:
      path: src/EventStore.Core/StandardComponents.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StandardComponents
    path: ../EventStore/src/EventStore.Core/StandardComponents.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: 'public class StandardComponents : object'
    content.vb: >-
      Public Class StandardComponents

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.StandardComponents.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.StandardComponents.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.StandardComponents.#ctor(EventStore.Core.TransactionLog.Chunks.TFChunkDb,EventStore.Core.Bus.IQueuedHandler,EventStore.Core.Bus.ISubscriber,EventStore.Core.Services.TimerService.TimerService,EventStore.Core.Services.TimerService.ITimeProvider,EventStore.Core.Services.Transport.Http.IHttpForwarder,EventStore.Core.Services.Transport.Http.HttpService[],EventStore.Core.Bus.IPublisher)
  commentId: M:EventStore.Core.StandardComponents.#ctor(EventStore.Core.TransactionLog.Chunks.TFChunkDb,EventStore.Core.Bus.IQueuedHandler,EventStore.Core.Bus.ISubscriber,EventStore.Core.Services.TimerService.TimerService,EventStore.Core.Services.TimerService.ITimeProvider,EventStore.Core.Services.Transport.Http.IHttpForwarder,EventStore.Core.Services.Transport.Http.HttpService[],EventStore.Core.Bus.IPublisher)
  id: '#ctor(EventStore.Core.TransactionLog.Chunks.TFChunkDb,EventStore.Core.Bus.IQueuedHandler,EventStore.Core.Bus.ISubscriber,EventStore.Core.Services.TimerService.TimerService,EventStore.Core.Services.TimerService.ITimeProvider,EventStore.Core.Services.Transport.Http.IHttpForwarder,EventStore.Core.Services.Transport.Http.HttpService[],EventStore.Core.Bus.IPublisher)'
  parent: EventStore.Core.StandardComponents
  langs:
  - csharp
  - vb
  name: StandardComponents(TFChunkDb, IQueuedHandler, ISubscriber, TimerService, ITimeProvider, IHttpForwarder, HttpService[], IPublisher)
  nameWithType: StandardComponents.StandardComponents(TFChunkDb, IQueuedHandler, ISubscriber, TimerService, ITimeProvider, IHttpForwarder, HttpService[], IPublisher)
  fullName: EventStore.Core.StandardComponents.StandardComponents(EventStore.Core.TransactionLog.Chunks.TFChunkDb, EventStore.Core.Bus.IQueuedHandler, EventStore.Core.Bus.ISubscriber, EventStore.Core.Services.TimerService.TimerService, EventStore.Core.Services.TimerService.ITimeProvider, EventStore.Core.Services.Transport.Http.IHttpForwarder, EventStore.Core.Services.Transport.Http.HttpService[], EventStore.Core.Bus.IPublisher)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/StandardComponents.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/StandardComponents.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public StandardComponents(TFChunkDb db, IQueuedHandler mainQueue, ISubscriber mainBus, TimerService timerService, ITimeProvider timeProvider, IHttpForwarder httpForwarder, HttpService[] httpServices, IPublisher networkSendService)
    parameters:
    - id: db
      type: EventStore.Core.TransactionLog.Chunks.TFChunkDb
    - id: mainQueue
      type: EventStore.Core.Bus.IQueuedHandler
    - id: mainBus
      type: EventStore.Core.Bus.ISubscriber
    - id: timerService
      type: EventStore.Core.Services.TimerService.TimerService
    - id: timeProvider
      type: EventStore.Core.Services.TimerService.ITimeProvider
    - id: httpForwarder
      type: EventStore.Core.Services.Transport.Http.IHttpForwarder
    - id: httpServices
      type: EventStore.Core.Services.Transport.Http.HttpService[]
    - id: networkSendService
      type: EventStore.Core.Bus.IPublisher
    content.vb: Public Sub New(db As TFChunkDb, mainQueue As IQueuedHandler, mainBus As ISubscriber, timerService As TimerService, timeProvider As ITimeProvider, httpForwarder As IHttpForwarder, httpServices As HttpService(), networkSendService As IPublisher)
  overload: EventStore.Core.StandardComponents.#ctor*
  nameWithType.vb: StandardComponents.StandardComponents(TFChunkDb, IQueuedHandler, ISubscriber, TimerService, ITimeProvider, IHttpForwarder, HttpService(), IPublisher)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.StandardComponents.StandardComponents(EventStore.Core.TransactionLog.Chunks.TFChunkDb, EventStore.Core.Bus.IQueuedHandler, EventStore.Core.Bus.ISubscriber, EventStore.Core.Services.TimerService.TimerService, EventStore.Core.Services.TimerService.ITimeProvider, EventStore.Core.Services.Transport.Http.IHttpForwarder, EventStore.Core.Services.Transport.Http.HttpService(), EventStore.Core.Bus.IPublisher)
  name.vb: StandardComponents(TFChunkDb, IQueuedHandler, ISubscriber, TimerService, ITimeProvider, IHttpForwarder, HttpService(), IPublisher)
- uid: EventStore.Core.StandardComponents.Db
  commentId: P:EventStore.Core.StandardComponents.Db
  id: Db
  parent: EventStore.Core.StandardComponents
  langs:
  - csharp
  - vb
  name: Db
  nameWithType: StandardComponents.Db
  fullName: EventStore.Core.StandardComponents.Db
  type: Property
  source:
    remote:
      path: src/EventStore.Core/StandardComponents.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Db
    path: ../EventStore/src/EventStore.Core/StandardComponents.cs
    startLine: 38
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public TFChunkDb Db { get; }
    parameters: []
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunkDb
    content.vb: Public ReadOnly Property Db As TFChunkDb
  overload: EventStore.Core.StandardComponents.Db*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.StandardComponents.MainQueue
  commentId: P:EventStore.Core.StandardComponents.MainQueue
  id: MainQueue
  parent: EventStore.Core.StandardComponents
  langs:
  - csharp
  - vb
  name: MainQueue
  nameWithType: StandardComponents.MainQueue
  fullName: EventStore.Core.StandardComponents.MainQueue
  type: Property
  source:
    remote:
      path: src/EventStore.Core/StandardComponents.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MainQueue
    path: ../EventStore/src/EventStore.Core/StandardComponents.cs
    startLine: 43
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public IQueuedHandler MainQueue { get; }
    parameters: []
    return:
      type: EventStore.Core.Bus.IQueuedHandler
    content.vb: Public ReadOnly Property MainQueue As IQueuedHandler
  overload: EventStore.Core.StandardComponents.MainQueue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.StandardComponents.MainBus
  commentId: P:EventStore.Core.StandardComponents.MainBus
  id: MainBus
  parent: EventStore.Core.StandardComponents
  langs:
  - csharp
  - vb
  name: MainBus
  nameWithType: StandardComponents.MainBus
  fullName: EventStore.Core.StandardComponents.MainBus
  type: Property
  source:
    remote:
      path: src/EventStore.Core/StandardComponents.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MainBus
    path: ../EventStore/src/EventStore.Core/StandardComponents.cs
    startLine: 48
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public ISubscriber MainBus { get; }
    parameters: []
    return:
      type: EventStore.Core.Bus.ISubscriber
    content.vb: Public ReadOnly Property MainBus As ISubscriber
  overload: EventStore.Core.StandardComponents.MainBus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.StandardComponents.TimerService
  commentId: P:EventStore.Core.StandardComponents.TimerService
  id: TimerService
  parent: EventStore.Core.StandardComponents
  langs:
  - csharp
  - vb
  name: TimerService
  nameWithType: StandardComponents.TimerService
  fullName: EventStore.Core.StandardComponents.TimerService
  type: Property
  source:
    remote:
      path: src/EventStore.Core/StandardComponents.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TimerService
    path: ../EventStore/src/EventStore.Core/StandardComponents.cs
    startLine: 53
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public TimerService TimerService { get; }
    parameters: []
    return:
      type: EventStore.Core.Services.TimerService.TimerService
    content.vb: Public ReadOnly Property TimerService As TimerService
  overload: EventStore.Core.StandardComponents.TimerService*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.StandardComponents.TimeProvider
  commentId: P:EventStore.Core.StandardComponents.TimeProvider
  id: TimeProvider
  parent: EventStore.Core.StandardComponents
  langs:
  - csharp
  - vb
  name: TimeProvider
  nameWithType: StandardComponents.TimeProvider
  fullName: EventStore.Core.StandardComponents.TimeProvider
  type: Property
  source:
    remote:
      path: src/EventStore.Core/StandardComponents.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TimeProvider
    path: ../EventStore/src/EventStore.Core/StandardComponents.cs
    startLine: 58
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public ITimeProvider TimeProvider { get; }
    parameters: []
    return:
      type: EventStore.Core.Services.TimerService.ITimeProvider
    content.vb: Public ReadOnly Property TimeProvider As ITimeProvider
  overload: EventStore.Core.StandardComponents.TimeProvider*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.StandardComponents.HttpForwarder
  commentId: P:EventStore.Core.StandardComponents.HttpForwarder
  id: HttpForwarder
  parent: EventStore.Core.StandardComponents
  langs:
  - csharp
  - vb
  name: HttpForwarder
  nameWithType: StandardComponents.HttpForwarder
  fullName: EventStore.Core.StandardComponents.HttpForwarder
  type: Property
  source:
    remote:
      path: src/EventStore.Core/StandardComponents.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HttpForwarder
    path: ../EventStore/src/EventStore.Core/StandardComponents.cs
    startLine: 63
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public IHttpForwarder HttpForwarder { get; }
    parameters: []
    return:
      type: EventStore.Core.Services.Transport.Http.IHttpForwarder
    content.vb: Public ReadOnly Property HttpForwarder As IHttpForwarder
  overload: EventStore.Core.StandardComponents.HttpForwarder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.StandardComponents.HttpServices
  commentId: P:EventStore.Core.StandardComponents.HttpServices
  id: HttpServices
  parent: EventStore.Core.StandardComponents
  langs:
  - csharp
  - vb
  name: HttpServices
  nameWithType: StandardComponents.HttpServices
  fullName: EventStore.Core.StandardComponents.HttpServices
  type: Property
  source:
    remote:
      path: src/EventStore.Core/StandardComponents.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HttpServices
    path: ../EventStore/src/EventStore.Core/StandardComponents.cs
    startLine: 68
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public HttpService[] HttpServices { get; }
    parameters: []
    return:
      type: EventStore.Core.Services.Transport.Http.HttpService[]
    content.vb: Public ReadOnly Property HttpServices As HttpService()
  overload: EventStore.Core.StandardComponents.HttpServices*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.StandardComponents.NetworkSendService
  commentId: P:EventStore.Core.StandardComponents.NetworkSendService
  id: NetworkSendService
  parent: EventStore.Core.StandardComponents
  langs:
  - csharp
  - vb
  name: NetworkSendService
  nameWithType: StandardComponents.NetworkSendService
  fullName: EventStore.Core.StandardComponents.NetworkSendService
  type: Property
  source:
    remote:
      path: src/EventStore.Core/StandardComponents.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: NetworkSendService
    path: ../EventStore/src/EventStore.Core/StandardComponents.cs
    startLine: 73
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public IPublisher NetworkSendService { get; }
    parameters: []
    return:
      type: EventStore.Core.Bus.IPublisher
    content.vb: Public ReadOnly Property NetworkSendService As IPublisher
  overload: EventStore.Core.StandardComponents.NetworkSendService*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.Core
  commentId: N:EventStore.Core
  isExternal: false
  name: EventStore.Core
  nameWithType: EventStore.Core
  fullName: EventStore.Core
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.StandardComponents.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<StandardComponents>()
  nameWithType: ProtobufExtensions.Serialize<StandardComponents>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.StandardComponents>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of StandardComponents)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.StandardComponents)()
  name.vb: Serialize(Of StandardComponents)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<StandardComponents>
    nameWithType: ProtobufExtensions.Serialize<StandardComponents>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.StandardComponents>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of StandardComponents)
    nameWithType: ProtobufExtensions.Serialize(Of StandardComponents)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.StandardComponents)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.StandardComponents.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<StandardComponents>()
  nameWithType: ProtobufExtensions.SerializeToArray<StandardComponents>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.StandardComponents>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of StandardComponents)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.StandardComponents)()
  name.vb: SerializeToArray(Of StandardComponents)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<StandardComponents>
    nameWithType: ProtobufExtensions.SerializeToArray<StandardComponents>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.StandardComponents>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of StandardComponents)
    nameWithType: ProtobufExtensions.SerializeToArray(Of StandardComponents)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.StandardComponents)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.StandardComponents.#ctor*
  commentId: Overload:EventStore.Core.StandardComponents.#ctor
  isExternal: false
  name: StandardComponents
  nameWithType: StandardComponents.StandardComponents
  fullName: EventStore.Core.StandardComponents.StandardComponents
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDb
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkDb
  parent: EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: TFChunkDb
  nameWithType: TFChunkDb
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDb
- uid: EventStore.Core.Bus.IQueuedHandler
  commentId: T:EventStore.Core.Bus.IQueuedHandler
  parent: EventStore.Core.Bus
  isExternal: false
  name: IQueuedHandler
  nameWithType: IQueuedHandler
  fullName: EventStore.Core.Bus.IQueuedHandler
- uid: EventStore.Core.Bus.ISubscriber
  commentId: T:EventStore.Core.Bus.ISubscriber
  parent: EventStore.Core.Bus
  isExternal: false
  name: ISubscriber
  nameWithType: ISubscriber
  fullName: EventStore.Core.Bus.ISubscriber
- uid: EventStore.Core.Services.TimerService.TimerService
  commentId: T:EventStore.Core.Services.TimerService.TimerService
  parent: EventStore.Core.Services.TimerService
  isExternal: false
  name: TimerService
  nameWithType: TimerService
  fullName: EventStore.Core.Services.TimerService.TimerService
- uid: EventStore.Core.Services.TimerService.ITimeProvider
  commentId: T:EventStore.Core.Services.TimerService.ITimeProvider
  parent: EventStore.Core.Services.TimerService
  isExternal: false
  name: ITimeProvider
  nameWithType: ITimeProvider
  fullName: EventStore.Core.Services.TimerService.ITimeProvider
- uid: EventStore.Core.Services.Transport.Http.IHttpForwarder
  commentId: T:EventStore.Core.Services.Transport.Http.IHttpForwarder
  parent: EventStore.Core.Services.Transport.Http
  isExternal: false
  name: IHttpForwarder
  nameWithType: IHttpForwarder
  fullName: EventStore.Core.Services.Transport.Http.IHttpForwarder
- uid: EventStore.Core.Services.Transport.Http.HttpService[]
  name: HttpService[]
  nameWithType: HttpService[]
  fullName: EventStore.Core.Services.Transport.Http.HttpService[]
  nameWithType.vb: HttpService()
  fullName.vb: EventStore.Core.Services.Transport.Http.HttpService()
  name.vb: HttpService()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Http.HttpService
    name: HttpService
    nameWithType: HttpService
    fullName: EventStore.Core.Services.Transport.Http.HttpService
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Http.HttpService
    name: HttpService
    nameWithType: HttpService
    fullName: EventStore.Core.Services.Transport.Http.HttpService
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  isExternal: false
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Core.Services.TimerService
  commentId: N:EventStore.Core.Services.TimerService
  isExternal: false
  name: EventStore.Core.Services.TimerService
  nameWithType: EventStore.Core.Services.TimerService
  fullName: EventStore.Core.Services.TimerService
- uid: EventStore.Core.Services.Transport.Http
  commentId: N:EventStore.Core.Services.Transport.Http
  isExternal: false
  name: EventStore.Core.Services.Transport.Http
  nameWithType: EventStore.Core.Services.Transport.Http
  fullName: EventStore.Core.Services.Transport.Http
- uid: EventStore.Core.StandardComponents.Db*
  commentId: Overload:EventStore.Core.StandardComponents.Db
  isExternal: false
  name: Db
  nameWithType: StandardComponents.Db
  fullName: EventStore.Core.StandardComponents.Db
- uid: EventStore.Core.StandardComponents.MainQueue*
  commentId: Overload:EventStore.Core.StandardComponents.MainQueue
  isExternal: false
  name: MainQueue
  nameWithType: StandardComponents.MainQueue
  fullName: EventStore.Core.StandardComponents.MainQueue
- uid: EventStore.Core.StandardComponents.MainBus*
  commentId: Overload:EventStore.Core.StandardComponents.MainBus
  isExternal: false
  name: MainBus
  nameWithType: StandardComponents.MainBus
  fullName: EventStore.Core.StandardComponents.MainBus
- uid: EventStore.Core.StandardComponents.TimerService*
  commentId: Overload:EventStore.Core.StandardComponents.TimerService
  isExternal: false
  name: TimerService
  nameWithType: StandardComponents.TimerService
  fullName: EventStore.Core.StandardComponents.TimerService
- uid: EventStore.Core.StandardComponents.TimeProvider*
  commentId: Overload:EventStore.Core.StandardComponents.TimeProvider
  isExternal: false
  name: TimeProvider
  nameWithType: StandardComponents.TimeProvider
  fullName: EventStore.Core.StandardComponents.TimeProvider
- uid: EventStore.Core.StandardComponents.HttpForwarder*
  commentId: Overload:EventStore.Core.StandardComponents.HttpForwarder
  isExternal: false
  name: HttpForwarder
  nameWithType: StandardComponents.HttpForwarder
  fullName: EventStore.Core.StandardComponents.HttpForwarder
- uid: EventStore.Core.StandardComponents.HttpServices*
  commentId: Overload:EventStore.Core.StandardComponents.HttpServices
  isExternal: false
  name: HttpServices
  nameWithType: StandardComponents.HttpServices
  fullName: EventStore.Core.StandardComponents.HttpServices
- uid: EventStore.Core.StandardComponents.NetworkSendService*
  commentId: Overload:EventStore.Core.StandardComponents.NetworkSendService
  isExternal: false
  name: NetworkSendService
  nameWithType: StandardComponents.NetworkSendService
  fullName: EventStore.Core.StandardComponents.NetworkSendService

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers
  commentId: T:EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers
  id: when_handling_committed_event_with_subscribers
  parent: EventStore.Core.Tests.AwakeService
  children:
  - EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.awakes_all_subscriber_before_position
  - EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.awakes_stream_subscriber_before_position
  - EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_all_subscriber_after_position
  - EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_another_stream_subscriber_before_position
  - EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_stream_subscriber_after_position
  - EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.it_is_handled
  - EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.SetUp
  langs:
  - csharp
  - vb
  name: when_handling_committed_event_with_subscribers
  nameWithType: when_handling_committed_event_with_subscribers
  fullName: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/AwakeService/when_handling_committed_event_with_subscribers.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: when_handling_committed_event_with_subscribers
    path: ../EventStore/src/EventStore.Core.Tests/AwakeService/when_handling_committed_event_with_subscribers.cs
    startLine: 13
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.AwakeService
  syntax:
    content: 'public class when_handling_committed_event_with_subscribers : object'
    content.vb: >-
      Public Class when_handling_committed_event_with_subscribers

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.SetUp
  commentId: M:EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.SetUp
  id: SetUp
  parent: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers
  langs:
  - csharp
  - vb
  name: SetUp()
  nameWithType: when_handling_committed_event_with_subscribers.SetUp()
  fullName: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.SetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/AwakeService/when_handling_committed_event_with_subscribers.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetUp
    path: ../EventStore/src/EventStore.Core.Tests/AwakeService/when_handling_committed_event_with_subscribers.cs
    startLine: 29
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.AwakeService
  syntax:
    content: public void SetUp()
    content.vb: Public Sub SetUp
  overload: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.SetUp*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.it_is_handled
  commentId: M:EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.it_is_handled
  id: it_is_handled
  parent: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers
  langs:
  - csharp
  - vb
  name: it_is_handled()
  nameWithType: when_handling_committed_event_with_subscribers.it_is_handled()
  fullName: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.it_is_handled()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/AwakeService/when_handling_committed_event_with_subscribers.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: it_is_handled
    path: ../EventStore/src/EventStore.Core.Tests/AwakeService/when_handling_committed_event_with_subscribers.cs
    startLine: 103
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.AwakeService
  syntax:
    content: public void it_is_handled()
    content.vb: Public Sub it_is_handled
  overload: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.it_is_handled*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.awakes_stream_subscriber_before_position
  commentId: M:EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.awakes_stream_subscriber_before_position
  id: awakes_stream_subscriber_before_position
  parent: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers
  langs:
  - csharp
  - vb
  name: awakes_stream_subscriber_before_position()
  nameWithType: when_handling_committed_event_with_subscribers.awakes_stream_subscriber_before_position()
  fullName: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.awakes_stream_subscriber_before_position()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/AwakeService/when_handling_committed_event_with_subscribers.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: awakes_stream_subscriber_before_position
    path: ../EventStore/src/EventStore.Core.Tests/AwakeService/when_handling_committed_event_with_subscribers.cs
    startLine: 109
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.AwakeService
  syntax:
    content: public void awakes_stream_subscriber_before_position()
    content.vb: Public Sub awakes_stream_subscriber_before_position
  overload: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.awakes_stream_subscriber_before_position*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_stream_subscriber_after_position
  commentId: M:EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_stream_subscriber_after_position
  id: does_not_awake_stream_subscriber_after_position
  parent: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers
  langs:
  - csharp
  - vb
  name: does_not_awake_stream_subscriber_after_position()
  nameWithType: when_handling_committed_event_with_subscribers.does_not_awake_stream_subscriber_after_position()
  fullName: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_stream_subscriber_after_position()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/AwakeService/when_handling_committed_event_with_subscribers.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: does_not_awake_stream_subscriber_after_position
    path: ../EventStore/src/EventStore.Core.Tests/AwakeService/when_handling_committed_event_with_subscribers.cs
    startLine: 115
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.AwakeService
  syntax:
    content: public void does_not_awake_stream_subscriber_after_position()
    content.vb: Public Sub does_not_awake_stream_subscriber_after_position
  overload: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_stream_subscriber_after_position*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.awakes_all_subscriber_before_position
  commentId: M:EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.awakes_all_subscriber_before_position
  id: awakes_all_subscriber_before_position
  parent: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers
  langs:
  - csharp
  - vb
  name: awakes_all_subscriber_before_position()
  nameWithType: when_handling_committed_event_with_subscribers.awakes_all_subscriber_before_position()
  fullName: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.awakes_all_subscriber_before_position()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/AwakeService/when_handling_committed_event_with_subscribers.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: awakes_all_subscriber_before_position
    path: ../EventStore/src/EventStore.Core.Tests/AwakeService/when_handling_committed_event_with_subscribers.cs
    startLine: 121
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.AwakeService
  syntax:
    content: public void awakes_all_subscriber_before_position()
    content.vb: Public Sub awakes_all_subscriber_before_position
  overload: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.awakes_all_subscriber_before_position*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_all_subscriber_after_position
  commentId: M:EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_all_subscriber_after_position
  id: does_not_awake_all_subscriber_after_position
  parent: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers
  langs:
  - csharp
  - vb
  name: does_not_awake_all_subscriber_after_position()
  nameWithType: when_handling_committed_event_with_subscribers.does_not_awake_all_subscriber_after_position()
  fullName: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_all_subscriber_after_position()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/AwakeService/when_handling_committed_event_with_subscribers.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: does_not_awake_all_subscriber_after_position
    path: ../EventStore/src/EventStore.Core.Tests/AwakeService/when_handling_committed_event_with_subscribers.cs
    startLine: 127
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.AwakeService
  syntax:
    content: public void does_not_awake_all_subscriber_after_position()
    content.vb: Public Sub does_not_awake_all_subscriber_after_position
  overload: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_all_subscriber_after_position*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_another_stream_subscriber_before_position
  commentId: M:EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_another_stream_subscriber_before_position
  id: does_not_awake_another_stream_subscriber_before_position
  parent: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers
  langs:
  - csharp
  - vb
  name: does_not_awake_another_stream_subscriber_before_position()
  nameWithType: when_handling_committed_event_with_subscribers.does_not_awake_another_stream_subscriber_before_position()
  fullName: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_another_stream_subscriber_before_position()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/AwakeService/when_handling_committed_event_with_subscribers.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: does_not_awake_another_stream_subscriber_before_position
    path: ../EventStore/src/EventStore.Core.Tests/AwakeService/when_handling_committed_event_with_subscribers.cs
    startLine: 133
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.AwakeService
  syntax:
    content: public void does_not_awake_another_stream_subscriber_before_position()
    content.vb: Public Sub does_not_awake_another_stream_subscriber_before_position
  overload: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_another_stream_subscriber_before_position*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.AwakeService
  commentId: N:EventStore.Core.Tests.AwakeService
  isExternal: false
  name: EventStore.Core.Tests.AwakeService
  nameWithType: EventStore.Core.Tests.AwakeService
  fullName: EventStore.Core.Tests.AwakeService
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<when_handling_committed_event_with_subscribers>()
  nameWithType: ProtobufExtensions.Serialize<when_handling_committed_event_with_subscribers>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of when_handling_committed_event_with_subscribers)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers)()
  name.vb: Serialize(Of when_handling_committed_event_with_subscribers)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<when_handling_committed_event_with_subscribers>
    nameWithType: ProtobufExtensions.Serialize<when_handling_committed_event_with_subscribers>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of when_handling_committed_event_with_subscribers)
    nameWithType: ProtobufExtensions.Serialize(Of when_handling_committed_event_with_subscribers)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<when_handling_committed_event_with_subscribers>()
  nameWithType: ProtobufExtensions.SerializeToArray<when_handling_committed_event_with_subscribers>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of when_handling_committed_event_with_subscribers)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers)()
  name.vb: SerializeToArray(Of when_handling_committed_event_with_subscribers)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<when_handling_committed_event_with_subscribers>
    nameWithType: ProtobufExtensions.SerializeToArray<when_handling_committed_event_with_subscribers>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of when_handling_committed_event_with_subscribers)
    nameWithType: ProtobufExtensions.SerializeToArray(Of when_handling_committed_event_with_subscribers)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.SetUp*
  commentId: Overload:EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.SetUp
  isExternal: false
  name: SetUp
  nameWithType: when_handling_committed_event_with_subscribers.SetUp
  fullName: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.SetUp
- uid: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.it_is_handled*
  commentId: Overload:EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.it_is_handled
  isExternal: false
  name: it_is_handled
  nameWithType: when_handling_committed_event_with_subscribers.it_is_handled
  fullName: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.it_is_handled
- uid: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.awakes_stream_subscriber_before_position*
  commentId: Overload:EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.awakes_stream_subscriber_before_position
  isExternal: false
  name: awakes_stream_subscriber_before_position
  nameWithType: when_handling_committed_event_with_subscribers.awakes_stream_subscriber_before_position
  fullName: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.awakes_stream_subscriber_before_position
- uid: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_stream_subscriber_after_position*
  commentId: Overload:EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_stream_subscriber_after_position
  isExternal: false
  name: does_not_awake_stream_subscriber_after_position
  nameWithType: when_handling_committed_event_with_subscribers.does_not_awake_stream_subscriber_after_position
  fullName: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_stream_subscriber_after_position
- uid: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.awakes_all_subscriber_before_position*
  commentId: Overload:EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.awakes_all_subscriber_before_position
  isExternal: false
  name: awakes_all_subscriber_before_position
  nameWithType: when_handling_committed_event_with_subscribers.awakes_all_subscriber_before_position
  fullName: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.awakes_all_subscriber_before_position
- uid: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_all_subscriber_after_position*
  commentId: Overload:EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_all_subscriber_after_position
  isExternal: false
  name: does_not_awake_all_subscriber_after_position
  nameWithType: when_handling_committed_event_with_subscribers.does_not_awake_all_subscriber_after_position
  fullName: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_all_subscriber_after_position
- uid: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_another_stream_subscriber_before_position*
  commentId: Overload:EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_another_stream_subscriber_before_position
  isExternal: false
  name: does_not_awake_another_stream_subscriber_before_position
  nameWithType: when_handling_committed_event_with_subscribers.does_not_awake_another_stream_subscriber_before_position
  fullName: EventStore.Core.Tests.AwakeService.when_handling_committed_event_with_subscribers.does_not_awake_another_stream_subscriber_before_position

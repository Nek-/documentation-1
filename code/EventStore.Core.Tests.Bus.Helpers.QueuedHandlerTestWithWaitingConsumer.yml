### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer
  commentId: T:EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer
  id: QueuedHandlerTestWithWaitingConsumer
  parent: EventStore.Core.Tests.Bus.Helpers
  children:
  - EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.#ctor(Func{EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,TimeSpan,EventStore.Core.Bus.IQueuedHandler})
  - EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.Consumer
  - EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.Queue
  - EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.SetUp
  - EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.TearDown
  langs:
  - csharp
  - vb
  name: QueuedHandlerTestWithWaitingConsumer
  nameWithType: QueuedHandlerTestWithWaitingConsumer
  fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/Helpers/QueuedHandlerTestWithWaitingConsumer.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: QueuedHandlerTestWithWaitingConsumer
    path: ../EventStore/src/EventStore.Core.Tests/Bus/Helpers/QueuedHandlerTestWithWaitingConsumer.cs
    startLine: 8
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus.Helpers
  syntax:
    content: 'public abstract class QueuedHandlerTestWithWaitingConsumer : object'
    content.vb: >-
      Public MustInherit Class QueuedHandlerTestWithWaitingConsumer

          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - EventStore.Core.Tests.Bus.when_consumer_throws
  - EventStore.Core.Tests.Bus.when_publishing_to_queued_handler
  - EventStore.Core.Tests.Bus.when_publishing_to_queued_handler_before_starting
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.Queue
  commentId: F:EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.Queue
  id: Queue
  parent: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer
  langs:
  - csharp
  - vb
  name: Queue
  nameWithType: QueuedHandlerTestWithWaitingConsumer.Queue
  fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.Queue
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/Helpers/QueuedHandlerTestWithWaitingConsumer.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Queue
    path: ../EventStore/src/EventStore.Core.Tests/Bus/Helpers/QueuedHandlerTestWithWaitingConsumer.cs
    startLine: 12
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus.Helpers
  syntax:
    content: protected IQueuedHandler Queue
    return:
      type: EventStore.Core.Bus.IQueuedHandler
    content.vb: Protected Queue As IQueuedHandler
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.Consumer
  commentId: F:EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.Consumer
  id: Consumer
  parent: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer
  langs:
  - csharp
  - vb
  name: Consumer
  nameWithType: QueuedHandlerTestWithWaitingConsumer.Consumer
  fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.Consumer
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/Helpers/QueuedHandlerTestWithWaitingConsumer.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Consumer
    path: ../EventStore/src/EventStore.Core.Tests/Bus/Helpers/QueuedHandlerTestWithWaitingConsumer.cs
    startLine: 13
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus.Helpers
  syntax:
    content: protected WaitingConsumer Consumer
    return:
      type: EventStore.Core.Tests.Bus.Helpers.WaitingConsumer
    content.vb: Protected Consumer As WaitingConsumer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.#ctor(Func{EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,TimeSpan,EventStore.Core.Bus.IQueuedHandler})
  commentId: M:EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.#ctor(Func{EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,TimeSpan,EventStore.Core.Bus.IQueuedHandler})
  id: '#ctor(Func{EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,TimeSpan,EventStore.Core.Bus.IQueuedHandler})'
  parent: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer
  langs:
  - csharp
  - vb
  name: QueuedHandlerTestWithWaitingConsumer(Func<IHandle<Message>, String, TimeSpan, IQueuedHandler>)
  nameWithType: QueuedHandlerTestWithWaitingConsumer.QueuedHandlerTestWithWaitingConsumer(Func<IHandle<Message>, String, TimeSpan, IQueuedHandler>)
  fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.QueuedHandlerTestWithWaitingConsumer(Func<EventStore.Core.Bus.IHandle<EventStore.Core.Messaging.Message>, System.String, TimeSpan, EventStore.Core.Bus.IQueuedHandler>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/Helpers/QueuedHandlerTestWithWaitingConsumer.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Bus/Helpers/QueuedHandlerTestWithWaitingConsumer.cs
    startLine: 15
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus.Helpers
  syntax:
    content: protected QueuedHandlerTestWithWaitingConsumer(Func<IHandle<Message>, string, TimeSpan, IQueuedHandler> queuedHandlerFactory)
    parameters:
    - id: queuedHandlerFactory
      type: Func{EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,TimeSpan,EventStore.Core.Bus.IQueuedHandler}
    content.vb: Protected Sub New(queuedHandlerFactory As Func(Of IHandle(Of Message), String, TimeSpan, IQueuedHandler))
  overload: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.#ctor*
  nameWithType.vb: QueuedHandlerTestWithWaitingConsumer.QueuedHandlerTestWithWaitingConsumer(Func(Of IHandle(Of Message), String, TimeSpan, IQueuedHandler))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.QueuedHandlerTestWithWaitingConsumer(Func(Of EventStore.Core.Bus.IHandle(Of EventStore.Core.Messaging.Message), System.String, TimeSpan, EventStore.Core.Bus.IQueuedHandler))
  name.vb: QueuedHandlerTestWithWaitingConsumer(Func(Of IHandle(Of Message), String, TimeSpan, IQueuedHandler))
- uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.SetUp
  commentId: M:EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.SetUp
  id: SetUp
  parent: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer
  langs:
  - csharp
  - vb
  name: SetUp()
  nameWithType: QueuedHandlerTestWithWaitingConsumer.SetUp()
  fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.SetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/Helpers/QueuedHandlerTestWithWaitingConsumer.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetUp
    path: ../EventStore/src/EventStore.Core.Tests/Bus/Helpers/QueuedHandlerTestWithWaitingConsumer.cs
    startLine: 21
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus.Helpers
  syntax:
    content: public virtual void SetUp()
    content.vb: Public Overridable Sub SetUp
  overload: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.SetUp*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.TearDown
  commentId: M:EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.TearDown
  id: TearDown
  parent: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer
  langs:
  - csharp
  - vb
  name: TearDown()
  nameWithType: QueuedHandlerTestWithWaitingConsumer.TearDown()
  fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.TearDown()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/Helpers/QueuedHandlerTestWithWaitingConsumer.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TearDown
    path: ../EventStore/src/EventStore.Core.Tests/Bus/Helpers/QueuedHandlerTestWithWaitingConsumer.cs
    startLine: 28
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus.Helpers
  syntax:
    content: public virtual void TearDown()
    content.vb: Public Overridable Sub TearDown
  overload: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.TearDown*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: EventStore.Core.Tests.Bus.Helpers
  commentId: N:EventStore.Core.Tests.Bus.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Bus.Helpers
  nameWithType: EventStore.Core.Tests.Bus.Helpers
  fullName: EventStore.Core.Tests.Bus.Helpers
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<QueuedHandlerTestWithWaitingConsumer>()
  nameWithType: ProtobufExtensions.Serialize<QueuedHandlerTestWithWaitingConsumer>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of QueuedHandlerTestWithWaitingConsumer)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer)()
  name.vb: Serialize(Of QueuedHandlerTestWithWaitingConsumer)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<QueuedHandlerTestWithWaitingConsumer>
    nameWithType: ProtobufExtensions.Serialize<QueuedHandlerTestWithWaitingConsumer>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of QueuedHandlerTestWithWaitingConsumer)
    nameWithType: ProtobufExtensions.Serialize(Of QueuedHandlerTestWithWaitingConsumer)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<QueuedHandlerTestWithWaitingConsumer>()
  nameWithType: ProtobufExtensions.SerializeToArray<QueuedHandlerTestWithWaitingConsumer>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of QueuedHandlerTestWithWaitingConsumer)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer)()
  name.vb: SerializeToArray(Of QueuedHandlerTestWithWaitingConsumer)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<QueuedHandlerTestWithWaitingConsumer>
    nameWithType: ProtobufExtensions.SerializeToArray<QueuedHandlerTestWithWaitingConsumer>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of QueuedHandlerTestWithWaitingConsumer)
    nameWithType: ProtobufExtensions.SerializeToArray(Of QueuedHandlerTestWithWaitingConsumer)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Bus.IQueuedHandler
  commentId: T:EventStore.Core.Bus.IQueuedHandler
  parent: EventStore.Core.Bus
  isExternal: false
  name: IQueuedHandler
  nameWithType: IQueuedHandler
  fullName: EventStore.Core.Bus.IQueuedHandler
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Core.Tests.Bus.Helpers.WaitingConsumer
  commentId: T:EventStore.Core.Tests.Bus.Helpers.WaitingConsumer
  parent: EventStore.Core.Tests.Bus.Helpers
  isExternal: false
  name: WaitingConsumer
  nameWithType: WaitingConsumer
  fullName: EventStore.Core.Tests.Bus.Helpers.WaitingConsumer
- uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.#ctor*
  commentId: Overload:EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.#ctor
  isExternal: false
  name: QueuedHandlerTestWithWaitingConsumer
  nameWithType: QueuedHandlerTestWithWaitingConsumer.QueuedHandlerTestWithWaitingConsumer
  fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.QueuedHandlerTestWithWaitingConsumer
- uid: Func{EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,TimeSpan,EventStore.Core.Bus.IQueuedHandler}
  commentId: '!:Func{EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,TimeSpan,EventStore.Core.Bus.IQueuedHandler}'
  definition: Func`4
  name: Func<IHandle<Message>, String, TimeSpan, IQueuedHandler>
  nameWithType: Func<IHandle<Message>, String, TimeSpan, IQueuedHandler>
  fullName: Func<EventStore.Core.Bus.IHandle<EventStore.Core.Messaging.Message>, System.String, TimeSpan, EventStore.Core.Bus.IQueuedHandler>
  nameWithType.vb: Func(Of IHandle(Of Message), String, TimeSpan, IQueuedHandler)
  fullName.vb: Func(Of EventStore.Core.Bus.IHandle(Of EventStore.Core.Messaging.Message), System.String, TimeSpan, EventStore.Core.Bus.IQueuedHandler)
  name.vb: Func(Of IHandle(Of Message), String, TimeSpan, IQueuedHandler)
  spec.csharp:
  - uid: Func`4
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Bus.IQueuedHandler
    name: IQueuedHandler
    nameWithType: IQueuedHandler
    fullName: EventStore.Core.Bus.IQueuedHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`4
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Bus.IQueuedHandler
    name: IQueuedHandler
    nameWithType: IQueuedHandler
    fullName: EventStore.Core.Bus.IQueuedHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`4
  isExternal: true
  name: Func<, , , >
  nameWithType: Func<, , , >
  fullName: Func<, , , >
  nameWithType.vb: Func(Of , , , )
  fullName.vb: Func(Of , , , )
  name.vb: Func(Of , , , )
  spec.csharp:
  - uid: Func`4
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`4
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.SetUp*
  commentId: Overload:EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.SetUp
  isExternal: false
  name: SetUp
  nameWithType: QueuedHandlerTestWithWaitingConsumer.SetUp
  fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.SetUp
- uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.TearDown*
  commentId: Overload:EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.TearDown
  isExternal: false
  name: TearDown
  nameWithType: QueuedHandlerTestWithWaitingConsumer.TearDown
  fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithWaitingConsumer.TearDown

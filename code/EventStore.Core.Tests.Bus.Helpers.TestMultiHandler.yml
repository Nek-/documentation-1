### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler
  commentId: T:EventStore.Core.Tests.Bus.Helpers.TestMultiHandler
  id: TestMultiHandler
  parent: EventStore.Core.Tests.Bus.Helpers
  children:
  - EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage)
  - EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage2)
  - EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage3)
  - EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.HandledMessages
  langs:
  - csharp
  - vb
  name: TestMultiHandler
  nameWithType: TestMultiHandler
  fullName: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/Helpers/TestMultiHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestMultiHandler
    path: ../EventStore/src/EventStore.Core.Tests/Bus/Helpers/TestMultiHandler.cs
    startLine: 6
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus.Helpers
  syntax:
    content: 'public class TestMultiHandler : object, IHandle<TestMessage>, IHandle<TestMessage2>, IHandle<TestMessage3>'
    content.vb: >-
      Public Class TestMultiHandler

          Inherits Object

          Implements IHandle(Of TestMessage), IHandle(Of TestMessage2), IHandle(Of TestMessage3)
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage2}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage3}
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.HandledMessages
  commentId: F:EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.HandledMessages
  id: HandledMessages
  parent: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler
  langs:
  - csharp
  - vb
  name: HandledMessages
  nameWithType: TestMultiHandler.HandledMessages
  fullName: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.HandledMessages
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/Helpers/TestMultiHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HandledMessages
    path: ../EventStore/src/EventStore.Core.Tests/Bus/Helpers/TestMultiHandler.cs
    startLine: 8
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus.Helpers
  syntax:
    content: public readonly List<Message> HandledMessages
    return:
      type: List{EventStore.Core.Messaging.Message}
    content.vb: Public ReadOnly HandledMessages As List(Of Message)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage)
  commentId: M:EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage)
  id: Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage)
  parent: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler
  langs:
  - csharp
  - vb
  name: Handle(TestMessage)
  nameWithType: TestMultiHandler.Handle(TestMessage)
  fullName: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/Helpers/TestMultiHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Core.Tests/Bus/Helpers/TestMultiHandler.cs
    startLine: 10
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus.Helpers
  syntax:
    content: public void Handle(TestMessage message)
    parameters:
    - id: message
      type: EventStore.Core.Tests.Bus.Helpers.TestMessage
    content.vb: Public Sub Handle(message As TestMessage)
  overload: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage}.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage2)
  commentId: M:EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage2)
  id: Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage2)
  parent: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler
  langs:
  - csharp
  - vb
  name: Handle(TestMessage2)
  nameWithType: TestMultiHandler.Handle(TestMessage2)
  fullName: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage2)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/Helpers/TestMultiHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Core.Tests/Bus/Helpers/TestMultiHandler.cs
    startLine: 15
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus.Helpers
  syntax:
    content: public void Handle(TestMessage2 message)
    parameters:
    - id: message
      type: EventStore.Core.Tests.Bus.Helpers.TestMessage2
    content.vb: Public Sub Handle(message As TestMessage2)
  overload: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage2}.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage3)
  commentId: M:EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage3)
  id: Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage3)
  parent: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler
  langs:
  - csharp
  - vb
  name: Handle(TestMessage3)
  nameWithType: TestMultiHandler.Handle(TestMessage3)
  fullName: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage3)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/Helpers/TestMultiHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Core.Tests/Bus/Helpers/TestMultiHandler.cs
    startLine: 20
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus.Helpers
  syntax:
    content: public void Handle(TestMessage3 message)
    parameters:
    - id: message
      type: EventStore.Core.Tests.Bus.Helpers.TestMessage3
    content.vb: Public Sub Handle(message As TestMessage3)
  overload: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage3}.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Bus.Helpers
  commentId: N:EventStore.Core.Tests.Bus.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Bus.Helpers
  nameWithType: EventStore.Core.Tests.Bus.Helpers
  fullName: EventStore.Core.Tests.Bus.Helpers
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<TestMessage>
  nameWithType: IHandle<TestMessage>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Tests.Bus.Helpers.TestMessage>
  nameWithType.vb: IHandle(Of TestMessage)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Tests.Bus.Helpers.TestMessage)
  name.vb: IHandle(Of TestMessage)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Tests.Bus.Helpers.TestMessage
    name: TestMessage
    nameWithType: TestMessage
    fullName: EventStore.Core.Tests.Bus.Helpers.TestMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Tests.Bus.Helpers.TestMessage
    name: TestMessage
    nameWithType: TestMessage
    fullName: EventStore.Core.Tests.Bus.Helpers.TestMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage2}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage2}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<TestMessage2>
  nameWithType: IHandle<TestMessage2>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Tests.Bus.Helpers.TestMessage2>
  nameWithType.vb: IHandle(Of TestMessage2)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Tests.Bus.Helpers.TestMessage2)
  name.vb: IHandle(Of TestMessage2)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Tests.Bus.Helpers.TestMessage2
    name: TestMessage2
    nameWithType: TestMessage2
    fullName: EventStore.Core.Tests.Bus.Helpers.TestMessage2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Tests.Bus.Helpers.TestMessage2
    name: TestMessage2
    nameWithType: TestMessage2
    fullName: EventStore.Core.Tests.Bus.Helpers.TestMessage2
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage3}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage3}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<TestMessage3>
  nameWithType: IHandle<TestMessage3>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Tests.Bus.Helpers.TestMessage3>
  nameWithType.vb: IHandle(Of TestMessage3)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Tests.Bus.Helpers.TestMessage3)
  name.vb: IHandle(Of TestMessage3)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Tests.Bus.Helpers.TestMessage3
    name: TestMessage3
    nameWithType: TestMessage3
    fullName: EventStore.Core.Tests.Bus.Helpers.TestMessage3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Tests.Bus.Helpers.TestMessage3
    name: TestMessage3
    nameWithType: TestMessage3
    fullName: EventStore.Core.Tests.Bus.Helpers.TestMessage3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TestMultiHandler>()
  nameWithType: ProtobufExtensions.Serialize<TestMultiHandler>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Bus.Helpers.TestMultiHandler>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TestMultiHandler)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Bus.Helpers.TestMultiHandler)()
  name.vb: Serialize(Of TestMultiHandler)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TestMultiHandler>
    nameWithType: ProtobufExtensions.Serialize<TestMultiHandler>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Bus.Helpers.TestMultiHandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TestMultiHandler)
    nameWithType: ProtobufExtensions.Serialize(Of TestMultiHandler)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Bus.Helpers.TestMultiHandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TestMultiHandler>()
  nameWithType: ProtobufExtensions.SerializeToArray<TestMultiHandler>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Bus.Helpers.TestMultiHandler>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TestMultiHandler)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Bus.Helpers.TestMultiHandler)()
  name.vb: SerializeToArray(Of TestMultiHandler)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TestMultiHandler>
    nameWithType: ProtobufExtensions.SerializeToArray<TestMultiHandler>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Bus.Helpers.TestMultiHandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TestMultiHandler)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TestMultiHandler)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Bus.Helpers.TestMultiHandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  isExternal: false
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: List{EventStore.Core.Messaging.Message}
  commentId: '!:List{EventStore.Core.Messaging.Message}'
  definition: List`1
  name: List<Message>
  nameWithType: List<Message>
  fullName: List<EventStore.Core.Messaging.Message>
  nameWithType.vb: List(Of Message)
  fullName.vb: List(Of EventStore.Core.Messaging.Message)
  name.vb: List(Of Message)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle*
  commentId: Overload:EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle
  isExternal: false
  name: Handle
  nameWithType: TestMultiHandler.Handle
  fullName: EventStore.Core.Tests.Bus.Helpers.TestMultiHandler.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage}.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage}.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(TestMessage)
  nameWithType: IHandle<TestMessage>.Handle(TestMessage)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Tests.Bus.Helpers.TestMessage>.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage)
  nameWithType.vb: IHandle(Of TestMessage).Handle(TestMessage)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Tests.Bus.Helpers.TestMessage).Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<TestMessage>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Tests.Bus.Helpers.TestMessage>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.Bus.Helpers.TestMessage
    name: TestMessage
    nameWithType: TestMessage
    fullName: EventStore.Core.Tests.Bus.Helpers.TestMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of TestMessage).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Tests.Bus.Helpers.TestMessage).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.Bus.Helpers.TestMessage
    name: TestMessage
    nameWithType: TestMessage
    fullName: EventStore.Core.Tests.Bus.Helpers.TestMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.TestMessage
  commentId: T:EventStore.Core.Tests.Bus.Helpers.TestMessage
  parent: EventStore.Core.Tests.Bus.Helpers
  isExternal: false
  name: TestMessage
  nameWithType: TestMessage
  fullName: EventStore.Core.Tests.Bus.Helpers.TestMessage
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  isExternal: false
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage2}.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage2)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage2}.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage2)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage2}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(TestMessage2)
  nameWithType: IHandle<TestMessage2>.Handle(TestMessage2)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Tests.Bus.Helpers.TestMessage2>.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage2)
  nameWithType.vb: IHandle(Of TestMessage2).Handle(TestMessage2)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Tests.Bus.Helpers.TestMessage2).Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage2)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<TestMessage2>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Tests.Bus.Helpers.TestMessage2>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.Bus.Helpers.TestMessage2
    name: TestMessage2
    nameWithType: TestMessage2
    fullName: EventStore.Core.Tests.Bus.Helpers.TestMessage2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of TestMessage2).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Tests.Bus.Helpers.TestMessage2).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.Bus.Helpers.TestMessage2
    name: TestMessage2
    nameWithType: TestMessage2
    fullName: EventStore.Core.Tests.Bus.Helpers.TestMessage2
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.TestMessage2
  commentId: T:EventStore.Core.Tests.Bus.Helpers.TestMessage2
  parent: EventStore.Core.Tests.Bus.Helpers
  isExternal: false
  name: TestMessage2
  nameWithType: TestMessage2
  fullName: EventStore.Core.Tests.Bus.Helpers.TestMessage2
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage3}.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage3)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage3}.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage3)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Bus.Helpers.TestMessage3}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(TestMessage3)
  nameWithType: IHandle<TestMessage3>.Handle(TestMessage3)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Tests.Bus.Helpers.TestMessage3>.Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage3)
  nameWithType.vb: IHandle(Of TestMessage3).Handle(TestMessage3)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Tests.Bus.Helpers.TestMessage3).Handle(EventStore.Core.Tests.Bus.Helpers.TestMessage3)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<TestMessage3>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Tests.Bus.Helpers.TestMessage3>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.Bus.Helpers.TestMessage3
    name: TestMessage3
    nameWithType: TestMessage3
    fullName: EventStore.Core.Tests.Bus.Helpers.TestMessage3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of TestMessage3).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Tests.Bus.Helpers.TestMessage3).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.Bus.Helpers.TestMessage3
    name: TestMessage3
    nameWithType: TestMessage3
    fullName: EventStore.Core.Tests.Bus.Helpers.TestMessage3
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.TestMessage3
  commentId: T:EventStore.Core.Tests.Bus.Helpers.TestMessage3
  parent: EventStore.Core.Tests.Bus.Helpers
  isExternal: false
  name: TestMessage3
  nameWithType: TestMessage3
  fullName: EventStore.Core.Tests.Bus.Helpers.TestMessage3

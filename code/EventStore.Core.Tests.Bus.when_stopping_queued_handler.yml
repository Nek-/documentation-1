### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Bus.when_stopping_queued_handler
  commentId: T:EventStore.Core.Tests.Bus.when_stopping_queued_handler
  id: when_stopping_queued_handler
  parent: EventStore.Core.Tests.Bus
  children:
  - EventStore.Core.Tests.Bus.when_stopping_queued_handler.#ctor(Func{EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,TimeSpan,EventStore.Core.Bus.IQueuedHandler})
  - EventStore.Core.Tests.Bus.when_stopping_queued_handler.gracefully_and_queue_is_not_busy_should_not_take_much_time
  - EventStore.Core.Tests.Bus.when_stopping_queued_handler.gracefully_should_not_throw
  - EventStore.Core.Tests.Bus.when_stopping_queued_handler.second_time_should_not_take_much_time
  - EventStore.Core.Tests.Bus.when_stopping_queued_handler.second_time_should_not_throw
  - EventStore.Core.Tests.Bus.when_stopping_queued_handler.while_queue_is_busy_should_crash_with_timeout
  langs:
  - csharp
  - vb
  name: when_stopping_queued_handler
  nameWithType: when_stopping_queued_handler
  fullName: EventStore.Core.Tests.Bus.when_stopping_queued_handler
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/when_stopping_queued_handler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: when_stopping_queued_handler
    path: ../EventStore/src/EventStore.Core.Tests/Bus/when_stopping_queued_handler.cs
    startLine: 9
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus
  syntax:
    content: 'public abstract class when_stopping_queued_handler : QueuedHandlerTestWithNoopConsumer'
    content.vb: >-
      Public MustInherit Class when_stopping_queued_handler

          Inherits QueuedHandlerTestWithNoopConsumer
  inheritance:
  - System.Object
  - EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer
  derivedClasses:
  - EventStore.Core.Tests.Bus.when_stopping_queued_handler_autoreset
  - EventStore.Core.Tests.Bus.when_stopping_queued_handler_mres_should
  - EventStore.Core.Tests.Bus.when_stopping_queued_handler_pulse
  - EventStore.Core.Tests.Bus.when_stopping_queued_handler_sleep
  - EventStore.Core.Tests.Bus.when_stopping_queued_handler_threadpool
  inheritedMembers:
  - EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.Queue
  - EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.Consumer
  - EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.SetUp
  - EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.TearDown
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Bus.when_stopping_queued_handler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Bus.when_stopping_queued_handler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Core.Tests.Bus.when_stopping_queued_handler.#ctor(Func{EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,TimeSpan,EventStore.Core.Bus.IQueuedHandler})
  commentId: M:EventStore.Core.Tests.Bus.when_stopping_queued_handler.#ctor(Func{EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,TimeSpan,EventStore.Core.Bus.IQueuedHandler})
  id: '#ctor(Func{EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,TimeSpan,EventStore.Core.Bus.IQueuedHandler})'
  parent: EventStore.Core.Tests.Bus.when_stopping_queued_handler
  langs:
  - csharp
  - vb
  name: when_stopping_queued_handler(Func<IHandle<Message>, String, TimeSpan, IQueuedHandler>)
  nameWithType: when_stopping_queued_handler.when_stopping_queued_handler(Func<IHandle<Message>, String, TimeSpan, IQueuedHandler>)
  fullName: EventStore.Core.Tests.Bus.when_stopping_queued_handler.when_stopping_queued_handler(Func<EventStore.Core.Bus.IHandle<EventStore.Core.Messaging.Message>, System.String, TimeSpan, EventStore.Core.Bus.IQueuedHandler>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/when_stopping_queued_handler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Bus/when_stopping_queued_handler.cs
    startLine: 12
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus
  syntax:
    content: protected when_stopping_queued_handler(Func<IHandle<Message>, string, TimeSpan, IQueuedHandler> queuedHandlerFactory)
    parameters:
    - id: queuedHandlerFactory
      type: Func{EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,TimeSpan,EventStore.Core.Bus.IQueuedHandler}
    content.vb: Protected Sub New(queuedHandlerFactory As Func(Of IHandle(Of Message), String, TimeSpan, IQueuedHandler))
  overload: EventStore.Core.Tests.Bus.when_stopping_queued_handler.#ctor*
  nameWithType.vb: when_stopping_queued_handler.when_stopping_queued_handler(Func(Of IHandle(Of Message), String, TimeSpan, IQueuedHandler))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.Bus.when_stopping_queued_handler.when_stopping_queued_handler(Func(Of EventStore.Core.Bus.IHandle(Of EventStore.Core.Messaging.Message), System.String, TimeSpan, EventStore.Core.Bus.IQueuedHandler))
  name.vb: when_stopping_queued_handler(Func(Of IHandle(Of Message), String, TimeSpan, IQueuedHandler))
- uid: EventStore.Core.Tests.Bus.when_stopping_queued_handler.gracefully_should_not_throw
  commentId: M:EventStore.Core.Tests.Bus.when_stopping_queued_handler.gracefully_should_not_throw
  id: gracefully_should_not_throw
  parent: EventStore.Core.Tests.Bus.when_stopping_queued_handler
  langs:
  - csharp
  - vb
  name: gracefully_should_not_throw()
  nameWithType: when_stopping_queued_handler.gracefully_should_not_throw()
  fullName: EventStore.Core.Tests.Bus.when_stopping_queued_handler.gracefully_should_not_throw()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/when_stopping_queued_handler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: gracefully_should_not_throw
    path: ../EventStore/src/EventStore.Core.Tests/Bus/when_stopping_queued_handler.cs
    startLine: 19
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus
  syntax:
    content: public void gracefully_should_not_throw()
    content.vb: Public Sub gracefully_should_not_throw
  overload: EventStore.Core.Tests.Bus.when_stopping_queued_handler.gracefully_should_not_throw*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Bus.when_stopping_queued_handler.gracefully_and_queue_is_not_busy_should_not_take_much_time
  commentId: M:EventStore.Core.Tests.Bus.when_stopping_queued_handler.gracefully_and_queue_is_not_busy_should_not_take_much_time
  id: gracefully_and_queue_is_not_busy_should_not_take_much_time
  parent: EventStore.Core.Tests.Bus.when_stopping_queued_handler
  langs:
  - csharp
  - vb
  name: gracefully_and_queue_is_not_busy_should_not_take_much_time()
  nameWithType: when_stopping_queued_handler.gracefully_and_queue_is_not_busy_should_not_take_much_time()
  fullName: EventStore.Core.Tests.Bus.when_stopping_queued_handler.gracefully_and_queue_is_not_busy_should_not_take_much_time()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/when_stopping_queued_handler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: gracefully_and_queue_is_not_busy_should_not_take_much_time
    path: ../EventStore/src/EventStore.Core.Tests/Bus/when_stopping_queued_handler.cs
    startLine: 26
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus
  syntax:
    content: public void gracefully_and_queue_is_not_busy_should_not_take_much_time()
    content.vb: Public Sub gracefully_and_queue_is_not_busy_should_not_take_much_time
  overload: EventStore.Core.Tests.Bus.when_stopping_queued_handler.gracefully_and_queue_is_not_busy_should_not_take_much_time*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Bus.when_stopping_queued_handler.second_time_should_not_throw
  commentId: M:EventStore.Core.Tests.Bus.when_stopping_queued_handler.second_time_should_not_throw
  id: second_time_should_not_throw
  parent: EventStore.Core.Tests.Bus.when_stopping_queued_handler
  langs:
  - csharp
  - vb
  name: second_time_should_not_throw()
  nameWithType: when_stopping_queued_handler.second_time_should_not_throw()
  fullName: EventStore.Core.Tests.Bus.when_stopping_queued_handler.second_time_should_not_throw()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/when_stopping_queued_handler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: second_time_should_not_throw
    path: ../EventStore/src/EventStore.Core.Tests/Bus/when_stopping_queued_handler.cs
    startLine: 42
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus
  syntax:
    content: public void second_time_should_not_throw()
    content.vb: Public Sub second_time_should_not_throw
  overload: EventStore.Core.Tests.Bus.when_stopping_queued_handler.second_time_should_not_throw*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Bus.when_stopping_queued_handler.second_time_should_not_take_much_time
  commentId: M:EventStore.Core.Tests.Bus.when_stopping_queued_handler.second_time_should_not_take_much_time
  id: second_time_should_not_take_much_time
  parent: EventStore.Core.Tests.Bus.when_stopping_queued_handler
  langs:
  - csharp
  - vb
  name: second_time_should_not_take_much_time()
  nameWithType: when_stopping_queued_handler.second_time_should_not_take_much_time()
  fullName: EventStore.Core.Tests.Bus.when_stopping_queued_handler.second_time_should_not_take_much_time()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/when_stopping_queued_handler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: second_time_should_not_take_much_time
    path: ../EventStore/src/EventStore.Core.Tests/Bus/when_stopping_queued_handler.cs
    startLine: 50
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus
  syntax:
    content: public void second_time_should_not_take_much_time()
    content.vb: Public Sub second_time_should_not_take_much_time
  overload: EventStore.Core.Tests.Bus.when_stopping_queued_handler.second_time_should_not_take_much_time*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Bus.when_stopping_queued_handler.while_queue_is_busy_should_crash_with_timeout
  commentId: M:EventStore.Core.Tests.Bus.when_stopping_queued_handler.while_queue_is_busy_should_crash_with_timeout
  id: while_queue_is_busy_should_crash_with_timeout
  parent: EventStore.Core.Tests.Bus.when_stopping_queued_handler
  langs:
  - csharp
  - vb
  name: while_queue_is_busy_should_crash_with_timeout()
  nameWithType: when_stopping_queued_handler.while_queue_is_busy_should_crash_with_timeout()
  fullName: EventStore.Core.Tests.Bus.when_stopping_queued_handler.while_queue_is_busy_should_crash_with_timeout()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Bus/when_stopping_queued_handler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: while_queue_is_busy_should_crash_with_timeout
    path: ../EventStore/src/EventStore.Core.Tests/Bus/when_stopping_queued_handler.cs
    startLine: 67
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Bus
  syntax:
    content: public void while_queue_is_busy_should_crash_with_timeout()
    content.vb: Public Sub while_queue_is_busy_should_crash_with_timeout
  overload: EventStore.Core.Tests.Bus.when_stopping_queued_handler.while_queue_is_busy_should_crash_with_timeout*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Bus
  commentId: N:EventStore.Core.Tests.Bus
  isExternal: false
  name: EventStore.Core.Tests.Bus
  nameWithType: EventStore.Core.Tests.Bus
  fullName: EventStore.Core.Tests.Bus
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer
  commentId: T:EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer
  parent: EventStore.Core.Tests.Bus.Helpers
  isExternal: false
  name: QueuedHandlerTestWithNoopConsumer
  nameWithType: QueuedHandlerTestWithNoopConsumer
  fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer
- uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.Queue
  commentId: F:EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.Queue
  parent: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer
  isExternal: false
  name: Queue
  nameWithType: QueuedHandlerTestWithNoopConsumer.Queue
  fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.Queue
- uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.Consumer
  commentId: F:EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.Consumer
  parent: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer
  isExternal: false
  name: Consumer
  nameWithType: QueuedHandlerTestWithNoopConsumer.Consumer
  fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.Consumer
- uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.SetUp
  commentId: M:EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.SetUp
  parent: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer
  isExternal: false
  name: SetUp()
  nameWithType: QueuedHandlerTestWithNoopConsumer.SetUp()
  fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.SetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.SetUp
    name: SetUp
    nameWithType: QueuedHandlerTestWithNoopConsumer.SetUp
    fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.SetUp
    name: SetUp
    nameWithType: QueuedHandlerTestWithNoopConsumer.SetUp
    fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.TearDown
  commentId: M:EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.TearDown
  parent: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer
  isExternal: false
  name: TearDown()
  nameWithType: QueuedHandlerTestWithNoopConsumer.TearDown()
  fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.TearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.TearDown
    name: TearDown
    nameWithType: QueuedHandlerTestWithNoopConsumer.TearDown
    fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.TearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.TearDown
    name: TearDown
    nameWithType: QueuedHandlerTestWithNoopConsumer.TearDown
    fullName: EventStore.Core.Tests.Bus.Helpers.QueuedHandlerTestWithNoopConsumer.TearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.when_stopping_queued_handler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<when_stopping_queued_handler>()
  nameWithType: ProtobufExtensions.Serialize<when_stopping_queued_handler>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Bus.when_stopping_queued_handler>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of when_stopping_queued_handler)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Bus.when_stopping_queued_handler)()
  name.vb: Serialize(Of when_stopping_queued_handler)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<when_stopping_queued_handler>
    nameWithType: ProtobufExtensions.Serialize<when_stopping_queued_handler>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Bus.when_stopping_queued_handler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of when_stopping_queued_handler)
    nameWithType: ProtobufExtensions.Serialize(Of when_stopping_queued_handler)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Bus.when_stopping_queued_handler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.when_stopping_queued_handler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<when_stopping_queued_handler>()
  nameWithType: ProtobufExtensions.SerializeToArray<when_stopping_queued_handler>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Bus.when_stopping_queued_handler>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of when_stopping_queued_handler)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Bus.when_stopping_queued_handler)()
  name.vb: SerializeToArray(Of when_stopping_queued_handler)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<when_stopping_queued_handler>
    nameWithType: ProtobufExtensions.SerializeToArray<when_stopping_queued_handler>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Bus.when_stopping_queued_handler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of when_stopping_queued_handler)
    nameWithType: ProtobufExtensions.SerializeToArray(Of when_stopping_queued_handler)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Bus.when_stopping_queued_handler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers
  commentId: N:EventStore.Core.Tests.Bus.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Bus.Helpers
  nameWithType: EventStore.Core.Tests.Bus.Helpers
  fullName: EventStore.Core.Tests.Bus.Helpers
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Bus.when_stopping_queued_handler.#ctor*
  commentId: Overload:EventStore.Core.Tests.Bus.when_stopping_queued_handler.#ctor
  isExternal: false
  name: when_stopping_queued_handler
  nameWithType: when_stopping_queued_handler.when_stopping_queued_handler
  fullName: EventStore.Core.Tests.Bus.when_stopping_queued_handler.when_stopping_queued_handler
- uid: Func{EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,TimeSpan,EventStore.Core.Bus.IQueuedHandler}
  commentId: '!:Func{EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,TimeSpan,EventStore.Core.Bus.IQueuedHandler}'
  definition: Func`4
  name: Func<IHandle<Message>, String, TimeSpan, IQueuedHandler>
  nameWithType: Func<IHandle<Message>, String, TimeSpan, IQueuedHandler>
  fullName: Func<EventStore.Core.Bus.IHandle<EventStore.Core.Messaging.Message>, System.String, TimeSpan, EventStore.Core.Bus.IQueuedHandler>
  nameWithType.vb: Func(Of IHandle(Of Message), String, TimeSpan, IQueuedHandler)
  fullName.vb: Func(Of EventStore.Core.Bus.IHandle(Of EventStore.Core.Messaging.Message), System.String, TimeSpan, EventStore.Core.Bus.IQueuedHandler)
  name.vb: Func(Of IHandle(Of Message), String, TimeSpan, IQueuedHandler)
  spec.csharp:
  - uid: Func`4
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Bus.IQueuedHandler
    name: IQueuedHandler
    nameWithType: IQueuedHandler
    fullName: EventStore.Core.Bus.IQueuedHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`4
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Bus.IQueuedHandler
    name: IQueuedHandler
    nameWithType: IQueuedHandler
    fullName: EventStore.Core.Bus.IQueuedHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`4
  isExternal: true
  name: Func<, , , >
  nameWithType: Func<, , , >
  fullName: Func<, , , >
  nameWithType.vb: Func(Of , , , )
  fullName.vb: Func(Of , , , )
  name.vb: Func(Of , , , )
  spec.csharp:
  - uid: Func`4
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`4
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.when_stopping_queued_handler.gracefully_should_not_throw*
  commentId: Overload:EventStore.Core.Tests.Bus.when_stopping_queued_handler.gracefully_should_not_throw
  isExternal: false
  name: gracefully_should_not_throw
  nameWithType: when_stopping_queued_handler.gracefully_should_not_throw
  fullName: EventStore.Core.Tests.Bus.when_stopping_queued_handler.gracefully_should_not_throw
- uid: EventStore.Core.Tests.Bus.when_stopping_queued_handler.gracefully_and_queue_is_not_busy_should_not_take_much_time*
  commentId: Overload:EventStore.Core.Tests.Bus.when_stopping_queued_handler.gracefully_and_queue_is_not_busy_should_not_take_much_time
  isExternal: false
  name: gracefully_and_queue_is_not_busy_should_not_take_much_time
  nameWithType: when_stopping_queued_handler.gracefully_and_queue_is_not_busy_should_not_take_much_time
  fullName: EventStore.Core.Tests.Bus.when_stopping_queued_handler.gracefully_and_queue_is_not_busy_should_not_take_much_time
- uid: EventStore.Core.Tests.Bus.when_stopping_queued_handler.second_time_should_not_throw*
  commentId: Overload:EventStore.Core.Tests.Bus.when_stopping_queued_handler.second_time_should_not_throw
  isExternal: false
  name: second_time_should_not_throw
  nameWithType: when_stopping_queued_handler.second_time_should_not_throw
  fullName: EventStore.Core.Tests.Bus.when_stopping_queued_handler.second_time_should_not_throw
- uid: EventStore.Core.Tests.Bus.when_stopping_queued_handler.second_time_should_not_take_much_time*
  commentId: Overload:EventStore.Core.Tests.Bus.when_stopping_queued_handler.second_time_should_not_take_much_time
  isExternal: false
  name: second_time_should_not_take_much_time
  nameWithType: when_stopping_queued_handler.second_time_should_not_take_much_time
  fullName: EventStore.Core.Tests.Bus.when_stopping_queued_handler.second_time_should_not_take_much_time
- uid: EventStore.Core.Tests.Bus.when_stopping_queued_handler.while_queue_is_busy_should_crash_with_timeout*
  commentId: Overload:EventStore.Core.Tests.Bus.when_stopping_queued_handler.while_queue_is_busy_should_crash_with_timeout
  isExternal: false
  name: while_queue_is_busy_should_crash_with_timeout
  nameWithType: when_stopping_queued_handler.while_queue_is_busy_should_crash_with_timeout
  fullName: EventStore.Core.Tests.Bus.when_stopping_queued_handler.while_queue_is_busy_should_crash_with_timeout

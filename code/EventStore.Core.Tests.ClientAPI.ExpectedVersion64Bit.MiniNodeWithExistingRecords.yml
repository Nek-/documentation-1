### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  commentId: T:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  id: MiniNodeWithExistingRecords
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  children:
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords._store
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.BuildConnection(EventStore.Core.Tests.Helpers.MiniNode)
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Bus
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.ChaserCheckpoint
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Db
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Given
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.IndexBitnessVersion
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.IODispatcher
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.MaxEntriesInMemTable
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.MetastreamMaxCount
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Node
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.PerformAdditionalCommitChecks
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.ReadIndex
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TableIndex
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TestFixtureSetUp
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TestFixtureTearDown
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Writer
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriterCheckpoint
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriteSingleEvent(System.String,System.Int64,System.String,System.Nullable{DateTime},Guid,System.String)
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriteTestScenario
  langs:
  - csharp
  - vb
  name: MiniNodeWithExistingRecords
  nameWithType: MiniNodeWithExistingRecords
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MiniNodeWithExistingRecords
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 22
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: 'public abstract class MiniNodeWithExistingRecords : SpecificationWithDirectoryPerTestFixture'
    content.vb: >-
      Public MustInherit Class MiniNodeWithExistingRecords

          Inherits SpecificationWithDirectoryPerTestFixture
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  derivedClasses:
  - EventStore.Core.Tests.ClientAPI.connect_to_persistent_subscription_with_link_to_event_with_event_number_greater_than_int_maxvalue
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.append_to_stream_with_event_numbers_greater_than_2_billion
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.catchup_subscription_to_all_with_event_numbers_greater_than_2_billion
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.persistent_subscription_with_event_numbers_greater_than_2_billion
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.read_stream_with_event_numbers_greater_than_2_billion
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.read_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.subscribe_to_stream_with_link_to_event_with_event_number_greater_than_int_maxvalue
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.subscriptions_on_stream_with_event_numbers_greater_than_2_billion
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.transactions_on_stream_with_event_numbers_greater_than_2_billion
  inheritedMembers:
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Node
  commentId: F:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Node
  id: Node
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: Node
  nameWithType: MiniNodeWithExistingRecords.Node
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Node
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Node
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 25
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: protected MiniNode Node
    return:
      type: EventStore.Core.Tests.Helpers.MiniNode
    content.vb: Protected Node As MiniNode
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.MaxEntriesInMemTable
  commentId: F:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.MaxEntriesInMemTable
  id: MaxEntriesInMemTable
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: MaxEntriesInMemTable
  nameWithType: MiniNodeWithExistingRecords.MaxEntriesInMemTable
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.MaxEntriesInMemTable
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MaxEntriesInMemTable
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 27
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: protected readonly int MaxEntriesInMemTable
    return:
      type: System.Int32
    content.vb: Protected ReadOnly MaxEntriesInMemTable As Integer
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.MetastreamMaxCount
  commentId: F:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.MetastreamMaxCount
  id: MetastreamMaxCount
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: MetastreamMaxCount
  nameWithType: MiniNodeWithExistingRecords.MetastreamMaxCount
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.MetastreamMaxCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MetastreamMaxCount
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 28
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: protected readonly long MetastreamMaxCount
    return:
      type: System.Int64
    content.vb: Protected ReadOnly MetastreamMaxCount As Long
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.PerformAdditionalCommitChecks
  commentId: F:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.PerformAdditionalCommitChecks
  id: PerformAdditionalCommitChecks
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: PerformAdditionalCommitChecks
  nameWithType: MiniNodeWithExistingRecords.PerformAdditionalCommitChecks
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.PerformAdditionalCommitChecks
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PerformAdditionalCommitChecks
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 29
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: protected readonly bool PerformAdditionalCommitChecks
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly PerformAdditionalCommitChecks As Boolean
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.IndexBitnessVersion
  commentId: F:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.IndexBitnessVersion
  id: IndexBitnessVersion
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: IndexBitnessVersion
  nameWithType: MiniNodeWithExistingRecords.IndexBitnessVersion
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.IndexBitnessVersion
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IndexBitnessVersion
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 30
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: protected readonly byte IndexBitnessVersion
    return:
      type: System.Byte
    content.vb: Protected ReadOnly IndexBitnessVersion As Byte
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TableIndex
  commentId: F:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TableIndex
  id: TableIndex
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: TableIndex
  nameWithType: MiniNodeWithExistingRecords.TableIndex
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TableIndex
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TableIndex
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 31
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: protected TableIndex TableIndex
    return:
      type: EventStore.Core.Index.TableIndex
    content.vb: Protected TableIndex As TableIndex
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.ReadIndex
  commentId: F:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.ReadIndex
  id: ReadIndex
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: ReadIndex
  nameWithType: MiniNodeWithExistingRecords.ReadIndex
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.ReadIndex
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadIndex
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 32
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: protected IReadIndex ReadIndex
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
    content.vb: Protected ReadIndex As IReadIndex
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Db
  commentId: F:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Db
  id: Db
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: Db
  nameWithType: MiniNodeWithExistingRecords.Db
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Db
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Db
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 34
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: protected TFChunkDb Db
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunkDb
    content.vb: Protected Db As TFChunkDb
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Writer
  commentId: F:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Writer
  id: Writer
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: Writer
  nameWithType: MiniNodeWithExistingRecords.Writer
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Writer
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Writer
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 35
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: protected TFChunkWriter Writer
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
    content.vb: Protected Writer As TFChunkWriter
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriterCheckpoint
  commentId: F:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriterCheckpoint
  id: WriterCheckpoint
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: WriterCheckpoint
  nameWithType: MiniNodeWithExistingRecords.WriterCheckpoint
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriterCheckpoint
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WriterCheckpoint
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 36
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: protected ICheckpoint WriterCheckpoint
    return:
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    content.vb: Protected WriterCheckpoint As ICheckpoint
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.ChaserCheckpoint
  commentId: F:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.ChaserCheckpoint
  id: ChaserCheckpoint
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: ChaserCheckpoint
  nameWithType: MiniNodeWithExistingRecords.ChaserCheckpoint
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.ChaserCheckpoint
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ChaserCheckpoint
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 37
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: protected ICheckpoint ChaserCheckpoint
    return:
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    content.vb: Protected ChaserCheckpoint As ICheckpoint
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.IODispatcher
  commentId: F:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.IODispatcher
  id: IODispatcher
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: IODispatcher
  nameWithType: MiniNodeWithExistingRecords.IODispatcher
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.IODispatcher
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IODispatcher
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 38
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: protected IODispatcher IODispatcher
    return:
      type: EventStore.Core.Helpers.IODispatcher
    content.vb: Protected IODispatcher As IODispatcher
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Bus
  commentId: F:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Bus
  id: Bus
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: Bus
  nameWithType: MiniNodeWithExistingRecords.Bus
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Bus
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Bus
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 39
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: protected InMemoryBus Bus
    return:
      type: EventStore.Core.Bus.InMemoryBus
    content.vb: Protected Bus As InMemoryBus
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords._store
  commentId: F:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords._store
  id: _store
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: _store
  nameWithType: MiniNodeWithExistingRecords._store
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords._store
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _store
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 41
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: protected IEventStoreConnection _store
    return:
      type: EventStore.ClientAPI.IEventStoreConnection
    content.vb: Protected _store As IEventStoreConnection
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.BuildConnection(EventStore.Core.Tests.Helpers.MiniNode)
  commentId: M:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.BuildConnection(EventStore.Core.Tests.Helpers.MiniNode)
  id: BuildConnection(EventStore.Core.Tests.Helpers.MiniNode)
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: BuildConnection(MiniNode)
  nameWithType: MiniNodeWithExistingRecords.BuildConnection(MiniNode)
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.BuildConnection(EventStore.Core.Tests.Helpers.MiniNode)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: BuildConnection
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 43
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: protected virtual IEventStoreConnection BuildConnection(MiniNode node)
    parameters:
    - id: node
      type: EventStore.Core.Tests.Helpers.MiniNode
    return:
      type: EventStore.ClientAPI.IEventStoreConnection
    content.vb: Protected Overridable Function BuildConnection(node As MiniNode) As IEventStoreConnection
  overload: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.BuildConnection*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TestFixtureSetUp
  id: TestFixtureSetUp
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: TestFixtureSetUp()
  nameWithType: MiniNodeWithExistingRecords.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TestFixtureSetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureSetUp
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 48
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: public override void TestFixtureSetUp()
    content.vb: Public Overrides Sub TestFixtureSetUp
  overridden: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  overload: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TestFixtureSetUp*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TestFixtureTearDown
  id: TestFixtureTearDown
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: TestFixtureTearDown()
  nameWithType: MiniNodeWithExistingRecords.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TestFixtureTearDown()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureTearDown
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 95
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: public override void TestFixtureTearDown()
    content.vb: Public Overrides Sub TestFixtureTearDown
  overridden: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  overload: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TestFixtureTearDown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriteTestScenario
  commentId: M:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriteTestScenario
  id: WriteTestScenario
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: WriteTestScenario()
  nameWithType: MiniNodeWithExistingRecords.WriteTestScenario()
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriteTestScenario()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WriteTestScenario
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 105
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: public abstract void WriteTestScenario()
    content.vb: Public MustOverride Sub WriteTestScenario
  overload: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriteTestScenario*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Given
  commentId: M:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Given
  id: Given
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: Given()
  nameWithType: MiniNodeWithExistingRecords.Given()
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Given()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Given
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 106
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: public abstract void Given()
    content.vb: Public MustOverride Sub Given
  overload: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Given*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriteSingleEvent(System.String,System.Int64,System.String,System.Nullable{DateTime},Guid,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriteSingleEvent(System.String,System.Int64,System.String,System.Nullable{DateTime},Guid,System.String)
  id: WriteSingleEvent(System.String,System.Int64,System.String,System.Nullable{DateTime},Guid,System.String)
  parent: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords
  langs:
  - csharp
  - vb
  name: WriteSingleEvent(String, Int64, String, Nullable<DateTime>, Guid, String)
  nameWithType: MiniNodeWithExistingRecords.WriteSingleEvent(String, Int64, String, Nullable<DateTime>, Guid, String)
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriteSingleEvent(System.String, System.Int64, System.String, System.Nullable<DateTime>, Guid, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WriteSingleEvent
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/ExpectedVersion64Bit/MiniNodeWithExistingRecords.cs
    startLine: 108
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  syntax:
    content: protected EventRecord WriteSingleEvent(string eventStreamId, long eventNumber, string data, DateTime? timestamp = null, Guid eventId = null, string eventType = "some-type")
    parameters:
    - id: eventStreamId
      type: System.String
    - id: eventNumber
      type: System.Int64
    - id: data
      type: System.String
    - id: timestamp
      type: System.Nullable{DateTime}
    - id: eventId
      type: Guid
    - id: eventType
      type: System.String
    return:
      type: EventStore.Core.Data.EventRecord
    content.vb: Protected Function WriteSingleEvent(eventStreamId As String, eventNumber As Long, data As String, timestamp As DateTime? = Nothing, eventId As Guid = Nothing, eventType As String = "some-type") As EventRecord
  overload: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriteSingleEvent*
  nameWithType.vb: MiniNodeWithExistingRecords.WriteSingleEvent(String, Int64, String, Nullable(Of DateTime), Guid, String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriteSingleEvent(System.String, System.Int64, System.String, System.Nullable(Of DateTime), Guid, System.String)
  name.vb: WriteSingleEvent(String, Int64, String, Nullable(Of DateTime), Guid, String)
references:
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  commentId: N:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  isExternal: false
  name: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  nameWithType: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  commentId: T:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithDirectoryPerTestFixture
  nameWithType: SpecificationWithDirectoryPerTestFixture
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  commentId: F:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: PathName
  nameWithType: SpecificationWithDirectoryPerTestFixture.PathName
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: GetTempFilePath()
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: true
  name: GetFilePathFor(String)
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor(String)
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<MiniNodeWithExistingRecords>()
  nameWithType: ProtobufExtensions.Serialize<MiniNodeWithExistingRecords>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of MiniNodeWithExistingRecords)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords)()
  name.vb: Serialize(Of MiniNodeWithExistingRecords)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<MiniNodeWithExistingRecords>
    nameWithType: ProtobufExtensions.Serialize<MiniNodeWithExistingRecords>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of MiniNodeWithExistingRecords)
    nameWithType: ProtobufExtensions.Serialize(Of MiniNodeWithExistingRecords)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<MiniNodeWithExistingRecords>()
  nameWithType: ProtobufExtensions.SerializeToArray<MiniNodeWithExistingRecords>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of MiniNodeWithExistingRecords)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords)()
  name.vb: SerializeToArray(Of MiniNodeWithExistingRecords)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<MiniNodeWithExistingRecords>
    nameWithType: ProtobufExtensions.SerializeToArray<MiniNodeWithExistingRecords>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of MiniNodeWithExistingRecords)
    nameWithType: ProtobufExtensions.SerializeToArray(Of MiniNodeWithExistingRecords)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Helpers.MiniNode
  commentId: T:EventStore.Core.Tests.Helpers.MiniNode
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: MiniNode
  nameWithType: MiniNode
  fullName: EventStore.Core.Tests.Helpers.MiniNode
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: EventStore.Core.Index.TableIndex
  commentId: T:EventStore.Core.Index.TableIndex
  parent: EventStore.Core.Index
  isExternal: false
  name: TableIndex
  nameWithType: TableIndex
  fullName: EventStore.Core.Index.TableIndex
- uid: EventStore.Core.Index
  commentId: N:EventStore.Core.Index
  isExternal: false
  name: EventStore.Core.Index
  nameWithType: EventStore.Core.Index
  fullName: EventStore.Core.Index
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  parent: EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: IReadIndex
  nameWithType: IReadIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDb
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkDb
  parent: EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: TFChunkDb
  nameWithType: TFChunkDb
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDb
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkWriter
  parent: EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: TFChunkWriter
  nameWithType: TFChunkWriter
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  commentId: T:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  parent: EventStore.Core.TransactionLog.Checkpoint
  isExternal: false
  name: ICheckpoint
  nameWithType: ICheckpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
- uid: EventStore.Core.TransactionLog.Checkpoint
  commentId: N:EventStore.Core.TransactionLog.Checkpoint
  isExternal: false
  name: EventStore.Core.TransactionLog.Checkpoint
  nameWithType: EventStore.Core.TransactionLog.Checkpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint
- uid: EventStore.Core.Helpers.IODispatcher
  commentId: T:EventStore.Core.Helpers.IODispatcher
  parent: EventStore.Core.Helpers
  isExternal: false
  name: IODispatcher
  nameWithType: IODispatcher
  fullName: EventStore.Core.Helpers.IODispatcher
- uid: EventStore.Core.Helpers
  commentId: N:EventStore.Core.Helpers
  isExternal: false
  name: EventStore.Core.Helpers
  nameWithType: EventStore.Core.Helpers
  fullName: EventStore.Core.Helpers
- uid: EventStore.Core.Bus.InMemoryBus
  commentId: T:EventStore.Core.Bus.InMemoryBus
  parent: EventStore.Core.Bus
  isExternal: false
  name: InMemoryBus
  nameWithType: InMemoryBus
  fullName: EventStore.Core.Bus.InMemoryBus
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.ClientAPI.IEventStoreConnection
  commentId: T:EventStore.ClientAPI.IEventStoreConnection
  parent: EventStore.ClientAPI
  isExternal: false
  name: IEventStoreConnection
  nameWithType: IEventStoreConnection
  fullName: EventStore.ClientAPI.IEventStoreConnection
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  isExternal: false
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.BuildConnection*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.BuildConnection
  isExternal: false
  name: BuildConnection
  nameWithType: MiniNodeWithExistingRecords.BuildConnection
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.BuildConnection
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureSetUp()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TestFixtureSetUp*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TestFixtureSetUp
  isExternal: false
  name: TestFixtureSetUp
  nameWithType: MiniNodeWithExistingRecords.TestFixtureSetUp
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TestFixtureSetUp
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureTearDown()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TestFixtureTearDown*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TestFixtureTearDown
  isExternal: false
  name: TestFixtureTearDown
  nameWithType: MiniNodeWithExistingRecords.TestFixtureTearDown
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.TestFixtureTearDown
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriteTestScenario*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriteTestScenario
  isExternal: false
  name: WriteTestScenario
  nameWithType: MiniNodeWithExistingRecords.WriteTestScenario
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriteTestScenario
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Given*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Given
  isExternal: false
  name: Given
  nameWithType: MiniNodeWithExistingRecords.Given
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.Given
- uid: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriteSingleEvent*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriteSingleEvent
  isExternal: false
  name: WriteSingleEvent
  nameWithType: MiniNodeWithExistingRecords.WriteSingleEvent
  fullName: EventStore.Core.Tests.ClientAPI.ExpectedVersion64Bit.MiniNodeWithExistingRecords.WriteSingleEvent
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{DateTime}
  commentId: '!:System.Nullable{DateTime}'
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Core.Data.EventRecord
  commentId: T:EventStore.Core.Data.EventRecord
  parent: EventStore.Core.Data
  isExternal: false
  name: EventRecord
  nameWithType: EventRecord
  fullName: EventStore.Core.Data.EventRecord
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  isExternal: false
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data

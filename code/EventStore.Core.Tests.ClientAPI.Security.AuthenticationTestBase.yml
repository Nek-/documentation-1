### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  commentId: T:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  id: AuthenticationTestBase
  parent: EventStore.Core.Tests.ClientAPI.Security
  children:
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.#ctor(EventStore.ClientAPI.SystemData.UserCredentials)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Connection
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateEvents
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateStreamWithMeta(EventStore.ClientAPI.StreamMetadata,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.DeleteStream(System.String,System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect``1(Action)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ExpectNoException(Action)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllBackward(System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllForward(System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadEvent(System.String,System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadMeta(System.String,System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamBackward(System.String,System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamForward(System.String,System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SetupConnection(EventStore.Core.Tests.Helpers.MiniNode)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToAll(System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToStream(System.String,System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureSetUp
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureTearDown
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TransStart(System.String,System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteMeta(System.String,System.String,System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteStream(System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: AuthenticationTestBase
  nameWithType: AuthenticationTestBase
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AuthenticationTestBase
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 15
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: 'public abstract class AuthenticationTestBase : SpecificationWithDirectoryPerTestFixture'
    content.vb: >-
      Public MustInherit Class AuthenticationTestBase

          Inherits SpecificationWithDirectoryPerTestFixture
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  derivedClasses:
  - EventStore.Core.Tests.ClientAPI.Security.all_stream_with_no_acl_security
  - EventStore.Core.Tests.ClientAPI.Security.authorized_default_credentials_security
  - EventStore.Core.Tests.ClientAPI.Security.delete_stream_security
  - EventStore.Core.Tests.ClientAPI.Security.multiple_role_security
  - EventStore.Core.Tests.ClientAPI.Security.overriden_system_stream_security
  - EventStore.Core.Tests.ClientAPI.Security.overriden_system_stream_security_for_all
  - EventStore.Core.Tests.ClientAPI.Security.overriden_user_stream_security
  - EventStore.Core.Tests.ClientAPI.Security.read_all_security
  - EventStore.Core.Tests.ClientAPI.Security.read_stream_meta_security
  - EventStore.Core.Tests.ClientAPI.Security.read_stream_security
  - EventStore.Core.Tests.ClientAPI.Security.stream_security_inheritance
  - EventStore.Core.Tests.ClientAPI.Security.subscribe_to_all_security
  - EventStore.Core.Tests.ClientAPI.Security.subscribe_to_stream_security
  - EventStore.Core.Tests.ClientAPI.Security.system_stream_security
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  - EventStore.Core.Tests.ClientAPI.Security.write_stream_meta_security
  - EventStore.Core.Tests.ClientAPI.Security.write_stream_security
  inheritedMembers:
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Connection
  commentId: F:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Connection
  id: Connection
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: AuthenticationTestBase.Connection
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Connection
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Connection
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 19
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: protected IEventStoreConnection Connection
    return:
      type: EventStore.ClientAPI.IEventStoreConnection
    content.vb: Protected Connection As IEventStoreConnection
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.#ctor(EventStore.ClientAPI.SystemData.UserCredentials)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.#ctor(EventStore.ClientAPI.SystemData.UserCredentials)
  id: '#ctor(EventStore.ClientAPI.SystemData.UserCredentials)'
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: AuthenticationTestBase(UserCredentials)
  nameWithType: AuthenticationTestBase.AuthenticationTestBase(UserCredentials)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.AuthenticationTestBase(EventStore.ClientAPI.SystemData.UserCredentials)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 21
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: protected AuthenticationTestBase(UserCredentials userCredentials = null)
    parameters:
    - id: userCredentials
      type: EventStore.ClientAPI.SystemData.UserCredentials
    content.vb: Protected Sub New(userCredentials As UserCredentials = Nothing)
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SetupConnection(EventStore.Core.Tests.Helpers.MiniNode)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SetupConnection(EventStore.Core.Tests.Helpers.MiniNode)
  id: SetupConnection(EventStore.Core.Tests.Helpers.MiniNode)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: SetupConnection(MiniNode)
  nameWithType: AuthenticationTestBase.SetupConnection(MiniNode)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SetupConnection(EventStore.Core.Tests.Helpers.MiniNode)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetupConnection
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 26
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public virtual IEventStoreConnection SetupConnection(MiniNode node)
    parameters:
    - id: node
      type: EventStore.Core.Tests.Helpers.MiniNode
    return:
      type: EventStore.ClientAPI.IEventStoreConnection
    content.vb: Public Overridable Function SetupConnection(node As MiniNode) As IEventStoreConnection
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SetupConnection*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureSetUp
  id: TestFixtureSetUp
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: TestFixtureSetUp()
  nameWithType: AuthenticationTestBase.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureSetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureSetUp
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 31
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public override void TestFixtureSetUp()
    content.vb: Public Overrides Sub TestFixtureSetUp
  overridden: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureSetUp*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureTearDown
  id: TestFixtureTearDown
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: TestFixtureTearDown()
  nameWithType: AuthenticationTestBase.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureTearDown()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureTearDown
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 177
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public override void TestFixtureTearDown()
    content.vb: Public Overrides Sub TestFixtureTearDown
  overridden: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureTearDown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadEvent(System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadEvent(System.String,System.String,System.String)
  id: ReadEvent(System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: ReadEvent(String, String, String)
  nameWithType: AuthenticationTestBase.ReadEvent(String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadEvent(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadEvent
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 185
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: protected void ReadEvent(string streamId, string login, string password)
    parameters:
    - id: streamId
      type: System.String
    - id: login
      type: System.String
    - id: password
      type: System.String
    content.vb: Protected Sub ReadEvent(streamId As String, login As String, password As String)
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadEvent*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamForward(System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamForward(System.String,System.String,System.String)
  id: ReadStreamForward(System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: ReadStreamForward(String, String, String)
  nameWithType: AuthenticationTestBase.ReadStreamForward(String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamForward(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadStreamForward
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 192
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: protected void ReadStreamForward(string streamId, string login, string password)
    parameters:
    - id: streamId
      type: System.String
    - id: login
      type: System.String
    - id: password
      type: System.String
    content.vb: Protected Sub ReadStreamForward(streamId As String, login As String, password As String)
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamForward*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamBackward(System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamBackward(System.String,System.String,System.String)
  id: ReadStreamBackward(System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: ReadStreamBackward(String, String, String)
  nameWithType: AuthenticationTestBase.ReadStreamBackward(String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamBackward(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadStreamBackward
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 199
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: protected void ReadStreamBackward(string streamId, string login, string password)
    parameters:
    - id: streamId
      type: System.String
    - id: login
      type: System.String
    - id: password
      type: System.String
    content.vb: Protected Sub ReadStreamBackward(streamId As String, login As String, password As String)
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamBackward*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteStream(System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteStream(System.String,System.String,System.String)
  id: WriteStream(System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: WriteStream(String, String, String)
  nameWithType: AuthenticationTestBase.WriteStream(String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteStream(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WriteStream
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 206
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: protected void WriteStream(string streamId, string login, string password)
    parameters:
    - id: streamId
      type: System.String
    - id: login
      type: System.String
    - id: password
      type: System.String
    content.vb: Protected Sub WriteStream(streamId As String, login As String, password As String)
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteStream*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TransStart(System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TransStart(System.String,System.String,System.String)
  id: TransStart(System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: TransStart(String, String, String)
  nameWithType: AuthenticationTestBase.TransStart(String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TransStart(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TransStart
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 213
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: protected EventStoreTransaction TransStart(string streamId, string login, string password)
    parameters:
    - id: streamId
      type: System.String
    - id: login
      type: System.String
    - id: password
      type: System.String
    return:
      type: EventStore.ClientAPI.EventStoreTransaction
    content.vb: Protected Function TransStart(streamId As String, login As String, password As String) As EventStoreTransaction
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TransStart*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllForward(System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllForward(System.String,System.String)
  id: ReadAllForward(System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: ReadAllForward(String, String)
  nameWithType: AuthenticationTestBase.ReadAllForward(String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllForward(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadAllForward
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 220
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: protected void ReadAllForward(string login, string password)
    parameters:
    - id: login
      type: System.String
    - id: password
      type: System.String
    content.vb: Protected Sub ReadAllForward(login As String, password As String)
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllForward*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllBackward(System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllBackward(System.String,System.String)
  id: ReadAllBackward(System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: ReadAllBackward(String, String)
  nameWithType: AuthenticationTestBase.ReadAllBackward(String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllBackward(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadAllBackward
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 227
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: protected void ReadAllBackward(string login, string password)
    parameters:
    - id: login
      type: System.String
    - id: password
      type: System.String
    content.vb: Protected Sub ReadAllBackward(login As String, password As String)
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllBackward*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadMeta(System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadMeta(System.String,System.String,System.String)
  id: ReadMeta(System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: ReadMeta(String, String, String)
  nameWithType: AuthenticationTestBase.ReadMeta(String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadMeta(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadMeta
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 234
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: protected void ReadMeta(string streamId, string login, string password)
    parameters:
    - id: streamId
      type: System.String
    - id: login
      type: System.String
    - id: password
      type: System.String
    content.vb: Protected Sub ReadMeta(streamId As String, login As String, password As String)
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadMeta*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteMeta(System.String,System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteMeta(System.String,System.String,System.String,System.String)
  id: WriteMeta(System.String,System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: WriteMeta(String, String, String, String)
  nameWithType: AuthenticationTestBase.WriteMeta(String, String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteMeta(System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WriteMeta
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 239
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: protected void WriteMeta(string streamId, string login, string password, string metawriteRole)
    parameters:
    - id: streamId
      type: System.String
    - id: login
      type: System.String
    - id: password
      type: System.String
    - id: metawriteRole
      type: System.String
    content.vb: Protected Sub WriteMeta(streamId As String, login As String, password As String, metawriteRole As String)
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteMeta*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToStream(System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToStream(System.String,System.String,System.String)
  id: SubscribeToStream(System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: SubscribeToStream(String, String, String)
  nameWithType: AuthenticationTestBase.SubscribeToStream(String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToStream(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SubscribeToStream
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 252
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: protected void SubscribeToStream(string streamId, string login, string password)
    parameters:
    - id: streamId
      type: System.String
    - id: login
      type: System.String
    - id: password
      type: System.String
    content.vb: Protected Sub SubscribeToStream(streamId As String, login As String, password As String)
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToStream*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToAll(System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToAll(System.String,System.String)
  id: SubscribeToAll(System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: SubscribeToAll(String, String)
  nameWithType: AuthenticationTestBase.SubscribeToAll(String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToAll(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SubscribeToAll
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 260
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: protected void SubscribeToAll(string login, string password)
    parameters:
    - id: login
      type: System.String
    - id: password
      type: System.String
    content.vb: Protected Sub SubscribeToAll(login As String, password As String)
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToAll*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateStreamWithMeta(EventStore.ClientAPI.StreamMetadata,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateStreamWithMeta(EventStore.ClientAPI.StreamMetadata,System.String)
  id: CreateStreamWithMeta(EventStore.ClientAPI.StreamMetadata,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: CreateStreamWithMeta(StreamMetadata, String)
  nameWithType: AuthenticationTestBase.CreateStreamWithMeta(StreamMetadata, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateStreamWithMeta(EventStore.ClientAPI.StreamMetadata, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateStreamWithMeta
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 268
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: protected string CreateStreamWithMeta(StreamMetadata metadata, string streamPrefix = null)
    parameters:
    - id: metadata
      type: EventStore.ClientAPI.StreamMetadata
    - id: streamPrefix
      type: System.String
    return:
      type: System.String
    content.vb: Protected Function CreateStreamWithMeta(metadata As StreamMetadata, streamPrefix As String = Nothing) As String
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateStreamWithMeta*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.DeleteStream(System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.DeleteStream(System.String,System.String,System.String)
  id: DeleteStream(System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: DeleteStream(String, String, String)
  nameWithType: AuthenticationTestBase.DeleteStream(String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.DeleteStream(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DeleteStream
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 276
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: protected void DeleteStream(string streamId, string login, string password)
    parameters:
    - id: streamId
      type: System.String
    - id: login
      type: System.String
    - id: password
      type: System.String
    content.vb: Protected Sub DeleteStream(streamId As String, login As String, password As String)
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.DeleteStream*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect``1(Action)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect``1(Action)
  id: Expect``1(Action)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: Expect<T>(Action)
  nameWithType: AuthenticationTestBase.Expect<T>(Action)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect<T>(Action)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Expect
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 282
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: 'protected void Expect<T>(Action action)where T : Exception'
    parameters:
    - id: action
      type: Action
    typeParameters:
    - id: T
    content.vb: Protected Sub Expect(Of T As Exception)(action As Action)
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect*
  nameWithType.vb: AuthenticationTestBase.Expect(Of T)(Action)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect(Of T)(Action)
  name.vb: Expect(Of T)(Action)
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ExpectNoException(Action)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ExpectNoException(Action)
  id: ExpectNoException(Action)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: ExpectNoException(Action)
  nameWithType: AuthenticationTestBase.ExpectNoException(Action)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ExpectNoException(Action)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExpectNoException
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 287
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: protected void ExpectNoException(Action action)
    parameters:
    - id: action
      type: Action
    content.vb: Protected Sub ExpectNoException(action As Action)
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ExpectNoException*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateEvents
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateEvents
  id: CreateEvents
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  langs:
  - csharp
  - vb
  name: CreateEvents()
  nameWithType: AuthenticationTestBase.CreateEvents()
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateEvents()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateEvents
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/AuthenticationTestBase.cs
    startLine: 292
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: protected EventData[] CreateEvents()
    return:
      type: EventStore.ClientAPI.EventData[]
    content.vb: Protected Function CreateEvents As EventData()
  overload: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateEvents*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: EventStore.Core.Tests.ClientAPI.Security
  commentId: N:EventStore.Core.Tests.ClientAPI.Security
  isExternal: false
  name: EventStore.Core.Tests.ClientAPI.Security
  nameWithType: EventStore.Core.Tests.ClientAPI.Security
  fullName: EventStore.Core.Tests.ClientAPI.Security
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  commentId: T:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithDirectoryPerTestFixture
  nameWithType: SpecificationWithDirectoryPerTestFixture
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  commentId: F:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: PathName
  nameWithType: SpecificationWithDirectoryPerTestFixture.PathName
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: GetTempFilePath()
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: true
  name: GetFilePathFor(String)
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor(String)
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<AuthenticationTestBase>()
  nameWithType: ProtobufExtensions.Serialize<AuthenticationTestBase>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of AuthenticationTestBase)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase)()
  name.vb: Serialize(Of AuthenticationTestBase)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<AuthenticationTestBase>
    nameWithType: ProtobufExtensions.Serialize<AuthenticationTestBase>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of AuthenticationTestBase)
    nameWithType: ProtobufExtensions.Serialize(Of AuthenticationTestBase)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<AuthenticationTestBase>()
  nameWithType: ProtobufExtensions.SerializeToArray<AuthenticationTestBase>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of AuthenticationTestBase)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase)()
  name.vb: SerializeToArray(Of AuthenticationTestBase)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<AuthenticationTestBase>
    nameWithType: ProtobufExtensions.SerializeToArray<AuthenticationTestBase>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of AuthenticationTestBase)
    nameWithType: ProtobufExtensions.SerializeToArray(Of AuthenticationTestBase)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.ClientAPI.IEventStoreConnection
  commentId: T:EventStore.ClientAPI.IEventStoreConnection
  parent: EventStore.ClientAPI
  isExternal: false
  name: IEventStoreConnection
  nameWithType: IEventStoreConnection
  fullName: EventStore.ClientAPI.IEventStoreConnection
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  isExternal: false
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.#ctor*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.#ctor
  isExternal: false
  name: AuthenticationTestBase
  nameWithType: AuthenticationTestBase.AuthenticationTestBase
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.AuthenticationTestBase
- uid: EventStore.ClientAPI.SystemData.UserCredentials
  commentId: T:EventStore.ClientAPI.SystemData.UserCredentials
  parent: EventStore.ClientAPI.SystemData
  isExternal: false
  name: UserCredentials
  nameWithType: UserCredentials
  fullName: EventStore.ClientAPI.SystemData.UserCredentials
- uid: EventStore.ClientAPI.SystemData
  commentId: N:EventStore.ClientAPI.SystemData
  isExternal: false
  name: EventStore.ClientAPI.SystemData
  nameWithType: EventStore.ClientAPI.SystemData
  fullName: EventStore.ClientAPI.SystemData
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SetupConnection*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SetupConnection
  isExternal: false
  name: SetupConnection
  nameWithType: AuthenticationTestBase.SetupConnection
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SetupConnection
- uid: EventStore.Core.Tests.Helpers.MiniNode
  commentId: T:EventStore.Core.Tests.Helpers.MiniNode
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: MiniNode
  nameWithType: MiniNode
  fullName: EventStore.Core.Tests.Helpers.MiniNode
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureSetUp()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureSetUp*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureSetUp
  isExternal: false
  name: TestFixtureSetUp
  nameWithType: AuthenticationTestBase.TestFixtureSetUp
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureSetUp
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureTearDown()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureTearDown*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureTearDown
  isExternal: false
  name: TestFixtureTearDown
  nameWithType: AuthenticationTestBase.TestFixtureTearDown
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureTearDown
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadEvent*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadEvent
  isExternal: false
  name: ReadEvent
  nameWithType: AuthenticationTestBase.ReadEvent
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadEvent
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamForward*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamForward
  isExternal: false
  name: ReadStreamForward
  nameWithType: AuthenticationTestBase.ReadStreamForward
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamForward
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamBackward*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamBackward
  isExternal: false
  name: ReadStreamBackward
  nameWithType: AuthenticationTestBase.ReadStreamBackward
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamBackward
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteStream*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteStream
  isExternal: false
  name: WriteStream
  nameWithType: AuthenticationTestBase.WriteStream
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteStream
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TransStart*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TransStart
  isExternal: false
  name: TransStart
  nameWithType: AuthenticationTestBase.TransStart
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TransStart
- uid: EventStore.ClientAPI.EventStoreTransaction
  commentId: T:EventStore.ClientAPI.EventStoreTransaction
  parent: EventStore.ClientAPI
  isExternal: false
  name: EventStoreTransaction
  nameWithType: EventStoreTransaction
  fullName: EventStore.ClientAPI.EventStoreTransaction
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllForward*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllForward
  isExternal: false
  name: ReadAllForward
  nameWithType: AuthenticationTestBase.ReadAllForward
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllForward
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllBackward*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllBackward
  isExternal: false
  name: ReadAllBackward
  nameWithType: AuthenticationTestBase.ReadAllBackward
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllBackward
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadMeta*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadMeta
  isExternal: false
  name: ReadMeta
  nameWithType: AuthenticationTestBase.ReadMeta
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadMeta
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteMeta*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteMeta
  isExternal: false
  name: WriteMeta
  nameWithType: AuthenticationTestBase.WriteMeta
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteMeta
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToStream*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToStream
  isExternal: false
  name: SubscribeToStream
  nameWithType: AuthenticationTestBase.SubscribeToStream
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToStream
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToAll*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToAll
  isExternal: false
  name: SubscribeToAll
  nameWithType: AuthenticationTestBase.SubscribeToAll
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToAll
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateStreamWithMeta*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateStreamWithMeta
  isExternal: false
  name: CreateStreamWithMeta
  nameWithType: AuthenticationTestBase.CreateStreamWithMeta
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateStreamWithMeta
- uid: EventStore.ClientAPI.StreamMetadata
  commentId: T:EventStore.ClientAPI.StreamMetadata
  parent: EventStore.ClientAPI
  isExternal: false
  name: StreamMetadata
  nameWithType: StreamMetadata
  fullName: EventStore.ClientAPI.StreamMetadata
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.DeleteStream*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.DeleteStream
  isExternal: false
  name: DeleteStream
  nameWithType: AuthenticationTestBase.DeleteStream
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.DeleteStream
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect
  isExternal: false
  name: Expect
  nameWithType: AuthenticationTestBase.Expect
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect
- uid: Action
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: Action
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ExpectNoException*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ExpectNoException
  isExternal: false
  name: ExpectNoException
  nameWithType: AuthenticationTestBase.ExpectNoException
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ExpectNoException
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateEvents*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateEvents
  isExternal: false
  name: CreateEvents
  nameWithType: AuthenticationTestBase.CreateEvents
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateEvents
- uid: EventStore.ClientAPI.EventData[]
  name: EventData[]
  nameWithType: EventData[]
  fullName: EventStore.ClientAPI.EventData[]
  nameWithType.vb: EventData()
  fullName.vb: EventStore.ClientAPI.EventData()
  name.vb: EventData()
  spec.csharp:
  - uid: EventStore.ClientAPI.EventData
    name: EventData
    nameWithType: EventData
    fullName: EventStore.ClientAPI.EventData
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.ClientAPI.EventData
    name: EventData
    nameWithType: EventData
    fullName: EventStore.ClientAPI.EventData
  - name: ()
    nameWithType: ()
    fullName: ()

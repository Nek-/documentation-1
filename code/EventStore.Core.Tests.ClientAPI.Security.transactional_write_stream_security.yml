### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  commentId: T:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  id: transactional_write_stream_security
  parent: EventStore.Core.Tests.ClientAPI.Security
  children:
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_admin_user_credentials_succeeds
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_authorized_user_credentials_succeeds
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_no_credentials_is_denied
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_not_authorized_user_credentials_is_denied
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_with_not_existing_credentials_is_not_authenticated
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_admin_user_credentials_succeeds
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_authorized_user_credentials_succeeds
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_no_credentials_is_denied
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_not_authorized_user_credentials_is_denied
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_with_not_existing_credentials_is_not_authenticated
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_is_not_authenticated_when_not_existing_credentials_are_passed
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_admin_user_credentials_are_passed
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_any_existing_user_credentials_are_passed
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_no_credentials_are_passed
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_is_not_authenticated_when_not_existing_credentials_are_passed
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_admin_user_credentials_are_passed
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_any_existing_user_credentials_are_passed
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_no_credentials_are_passed
  langs:
  - csharp
  - vb
  name: transactional_write_stream_security
  nameWithType: transactional_write_stream_security
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: transactional_write_stream_security
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 6
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: 'public class transactional_write_stream_security : AuthenticationTestBase'
    content.vb: >-
      Public Class transactional_write_stream_security

          Inherits AuthenticationTestBase
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  inheritedMembers:
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Connection
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SetupConnection(EventStore.Core.Tests.Helpers.MiniNode)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureSetUp
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureTearDown
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadEvent(System.String,System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamForward(System.String,System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamBackward(System.String,System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteStream(System.String,System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TransStart(System.String,System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllForward(System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllBackward(System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadMeta(System.String,System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteMeta(System.String,System.String,System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToStream(System.String,System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToAll(System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateStreamWithMeta(EventStore.ClientAPI.StreamMetadata,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.DeleteStream(System.String,System.String,System.String)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect``1(Action)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ExpectNoException(Action)
  - EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateEvents
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_with_not_existing_credentials_is_not_authenticated
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_with_not_existing_credentials_is_not_authenticated
  id: starting_transaction_with_not_existing_credentials_is_not_authenticated
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: starting_transaction_with_not_existing_credentials_is_not_authenticated()
  nameWithType: transactional_write_stream_security.starting_transaction_with_not_existing_credentials_is_not_authenticated()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_with_not_existing_credentials_is_not_authenticated()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: starting_transaction_with_not_existing_credentials_is_not_authenticated
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 9
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void starting_transaction_with_not_existing_credentials_is_not_authenticated()
    content.vb: Public Sub starting_transaction_with_not_existing_credentials_is_not_authenticated
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_with_not_existing_credentials_is_not_authenticated*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_no_credentials_is_denied
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_no_credentials_is_denied
  id: starting_transaction_to_stream_with_no_credentials_is_denied
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: starting_transaction_to_stream_with_no_credentials_is_denied()
  nameWithType: transactional_write_stream_security.starting_transaction_to_stream_with_no_credentials_is_denied()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_no_credentials_is_denied()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: starting_transaction_to_stream_with_no_credentials_is_denied
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 15
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void starting_transaction_to_stream_with_no_credentials_is_denied()
    content.vb: Public Sub starting_transaction_to_stream_with_no_credentials_is_denied
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_no_credentials_is_denied*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_not_authorized_user_credentials_is_denied
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_not_authorized_user_credentials_is_denied
  id: starting_transaction_to_stream_with_not_authorized_user_credentials_is_denied
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: starting_transaction_to_stream_with_not_authorized_user_credentials_is_denied()
  nameWithType: transactional_write_stream_security.starting_transaction_to_stream_with_not_authorized_user_credentials_is_denied()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_not_authorized_user_credentials_is_denied()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: starting_transaction_to_stream_with_not_authorized_user_credentials_is_denied
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 21
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void starting_transaction_to_stream_with_not_authorized_user_credentials_is_denied()
    content.vb: Public Sub starting_transaction_to_stream_with_not_authorized_user_credentials_is_denied
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_not_authorized_user_credentials_is_denied*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_authorized_user_credentials_succeeds
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_authorized_user_credentials_succeeds
  id: starting_transaction_to_stream_with_authorized_user_credentials_succeeds
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: starting_transaction_to_stream_with_authorized_user_credentials_succeeds()
  nameWithType: transactional_write_stream_security.starting_transaction_to_stream_with_authorized_user_credentials_succeeds()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_authorized_user_credentials_succeeds()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: starting_transaction_to_stream_with_authorized_user_credentials_succeeds
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 27
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void starting_transaction_to_stream_with_authorized_user_credentials_succeeds()
    content.vb: Public Sub starting_transaction_to_stream_with_authorized_user_credentials_succeeds
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_authorized_user_credentials_succeeds*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_admin_user_credentials_succeeds
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_admin_user_credentials_succeeds
  id: starting_transaction_to_stream_with_admin_user_credentials_succeeds
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: starting_transaction_to_stream_with_admin_user_credentials_succeeds()
  nameWithType: transactional_write_stream_security.starting_transaction_to_stream_with_admin_user_credentials_succeeds()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_admin_user_credentials_succeeds()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: starting_transaction_to_stream_with_admin_user_credentials_succeeds
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 33
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void starting_transaction_to_stream_with_admin_user_credentials_succeeds()
    content.vb: Public Sub starting_transaction_to_stream_with_admin_user_credentials_succeeds
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_admin_user_credentials_succeeds*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_with_not_existing_credentials_is_not_authenticated
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_with_not_existing_credentials_is_not_authenticated
  id: committing_transaction_with_not_existing_credentials_is_not_authenticated
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: committing_transaction_with_not_existing_credentials_is_not_authenticated()
  nameWithType: transactional_write_stream_security.committing_transaction_with_not_existing_credentials_is_not_authenticated()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_with_not_existing_credentials_is_not_authenticated()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: committing_transaction_with_not_existing_credentials_is_not_authenticated
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 40
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void committing_transaction_with_not_existing_credentials_is_not_authenticated()
    content.vb: Public Sub committing_transaction_with_not_existing_credentials_is_not_authenticated
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_with_not_existing_credentials_is_not_authenticated*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_no_credentials_is_denied
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_no_credentials_is_denied
  id: committing_transaction_to_stream_with_no_credentials_is_denied
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: committing_transaction_to_stream_with_no_credentials_is_denied()
  nameWithType: transactional_write_stream_security.committing_transaction_to_stream_with_no_credentials_is_denied()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_no_credentials_is_denied()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: committing_transaction_to_stream_with_no_credentials_is_denied
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 49
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void committing_transaction_to_stream_with_no_credentials_is_denied()
    content.vb: Public Sub committing_transaction_to_stream_with_no_credentials_is_denied
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_no_credentials_is_denied*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_not_authorized_user_credentials_is_denied
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_not_authorized_user_credentials_is_denied
  id: committing_transaction_to_stream_with_not_authorized_user_credentials_is_denied
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: committing_transaction_to_stream_with_not_authorized_user_credentials_is_denied()
  nameWithType: transactional_write_stream_security.committing_transaction_to_stream_with_not_authorized_user_credentials_is_denied()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_not_authorized_user_credentials_is_denied()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: committing_transaction_to_stream_with_not_authorized_user_credentials_is_denied
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 58
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void committing_transaction_to_stream_with_not_authorized_user_credentials_is_denied()
    content.vb: Public Sub committing_transaction_to_stream_with_not_authorized_user_credentials_is_denied
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_not_authorized_user_credentials_is_denied*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_authorized_user_credentials_succeeds
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_authorized_user_credentials_succeeds
  id: committing_transaction_to_stream_with_authorized_user_credentials_succeeds
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: committing_transaction_to_stream_with_authorized_user_credentials_succeeds()
  nameWithType: transactional_write_stream_security.committing_transaction_to_stream_with_authorized_user_credentials_succeeds()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_authorized_user_credentials_succeeds()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: committing_transaction_to_stream_with_authorized_user_credentials_succeeds
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 67
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void committing_transaction_to_stream_with_authorized_user_credentials_succeeds()
    content.vb: Public Sub committing_transaction_to_stream_with_authorized_user_credentials_succeeds
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_authorized_user_credentials_succeeds*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_admin_user_credentials_succeeds
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_admin_user_credentials_succeeds
  id: committing_transaction_to_stream_with_admin_user_credentials_succeeds
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: committing_transaction_to_stream_with_admin_user_credentials_succeeds()
  nameWithType: transactional_write_stream_security.committing_transaction_to_stream_with_admin_user_credentials_succeeds()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_admin_user_credentials_succeeds()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: committing_transaction_to_stream_with_admin_user_credentials_succeeds
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 76
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void committing_transaction_to_stream_with_admin_user_credentials_succeeds()
    content.vb: Public Sub committing_transaction_to_stream_with_admin_user_credentials_succeeds
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_admin_user_credentials_succeeds*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_no_credentials_are_passed
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_no_credentials_are_passed
  id: transaction_to_no_acl_stream_succeeds_when_no_credentials_are_passed
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: transaction_to_no_acl_stream_succeeds_when_no_credentials_are_passed()
  nameWithType: transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_no_credentials_are_passed()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_no_credentials_are_passed()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: transaction_to_no_acl_stream_succeeds_when_no_credentials_are_passed
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 86
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void transaction_to_no_acl_stream_succeeds_when_no_credentials_are_passed()
    content.vb: Public Sub transaction_to_no_acl_stream_succeeds_when_no_credentials_are_passed
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_no_credentials_are_passed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_is_not_authenticated_when_not_existing_credentials_are_passed
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_is_not_authenticated_when_not_existing_credentials_are_passed
  id: transaction_to_no_acl_stream_is_not_authenticated_when_not_existing_credentials_are_passed
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: transaction_to_no_acl_stream_is_not_authenticated_when_not_existing_credentials_are_passed()
  nameWithType: transactional_write_stream_security.transaction_to_no_acl_stream_is_not_authenticated_when_not_existing_credentials_are_passed()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_is_not_authenticated_when_not_existing_credentials_are_passed()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: transaction_to_no_acl_stream_is_not_authenticated_when_not_existing_credentials_are_passed
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 97
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void transaction_to_no_acl_stream_is_not_authenticated_when_not_existing_credentials_are_passed()
    content.vb: Public Sub transaction_to_no_acl_stream_is_not_authenticated_when_not_existing_credentials_are_passed
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_is_not_authenticated_when_not_existing_credentials_are_passed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_any_existing_user_credentials_are_passed
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_any_existing_user_credentials_are_passed
  id: transaction_to_no_acl_stream_succeeds_when_any_existing_user_credentials_are_passed
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: transaction_to_no_acl_stream_succeeds_when_any_existing_user_credentials_are_passed()
  nameWithType: transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_any_existing_user_credentials_are_passed()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_any_existing_user_credentials_are_passed()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: transaction_to_no_acl_stream_succeeds_when_any_existing_user_credentials_are_passed
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 103
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void transaction_to_no_acl_stream_succeeds_when_any_existing_user_credentials_are_passed()
    content.vb: Public Sub transaction_to_no_acl_stream_succeeds_when_any_existing_user_credentials_are_passed
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_any_existing_user_credentials_are_passed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_admin_user_credentials_are_passed
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_admin_user_credentials_are_passed
  id: transaction_to_no_acl_stream_succeeds_when_admin_user_credentials_are_passed
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: transaction_to_no_acl_stream_succeeds_when_admin_user_credentials_are_passed()
  nameWithType: transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_admin_user_credentials_are_passed()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_admin_user_credentials_are_passed()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: transaction_to_no_acl_stream_succeeds_when_admin_user_credentials_are_passed
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 120
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void transaction_to_no_acl_stream_succeeds_when_admin_user_credentials_are_passed()
    content.vb: Public Sub transaction_to_no_acl_stream_succeeds_when_admin_user_credentials_are_passed
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_admin_user_credentials_are_passed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_no_credentials_are_passed
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_no_credentials_are_passed
  id: transaction_to_all_access_normal_stream_succeeds_when_no_credentials_are_passed
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: transaction_to_all_access_normal_stream_succeeds_when_no_credentials_are_passed()
  nameWithType: transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_no_credentials_are_passed()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_no_credentials_are_passed()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: transaction_to_all_access_normal_stream_succeeds_when_no_credentials_are_passed
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 132
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void transaction_to_all_access_normal_stream_succeeds_when_no_credentials_are_passed()
    content.vb: Public Sub transaction_to_all_access_normal_stream_succeeds_when_no_credentials_are_passed
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_no_credentials_are_passed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_is_not_authenticated_when_not_existing_credentials_are_passed
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_is_not_authenticated_when_not_existing_credentials_are_passed
  id: transaction_to_all_access_normal_stream_is_not_authenticated_when_not_existing_credentials_are_passed
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: transaction_to_all_access_normal_stream_is_not_authenticated_when_not_existing_credentials_are_passed()
  nameWithType: transactional_write_stream_security.transaction_to_all_access_normal_stream_is_not_authenticated_when_not_existing_credentials_are_passed()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_is_not_authenticated_when_not_existing_credentials_are_passed()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: transaction_to_all_access_normal_stream_is_not_authenticated_when_not_existing_credentials_are_passed
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 143
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void transaction_to_all_access_normal_stream_is_not_authenticated_when_not_existing_credentials_are_passed()
    content.vb: Public Sub transaction_to_all_access_normal_stream_is_not_authenticated_when_not_existing_credentials_are_passed
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_is_not_authenticated_when_not_existing_credentials_are_passed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_any_existing_user_credentials_are_passed
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_any_existing_user_credentials_are_passed
  id: transaction_to_all_access_normal_stream_succeeds_when_any_existing_user_credentials_are_passed
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: transaction_to_all_access_normal_stream_succeeds_when_any_existing_user_credentials_are_passed()
  nameWithType: transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_any_existing_user_credentials_are_passed()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_any_existing_user_credentials_are_passed()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: transaction_to_all_access_normal_stream_succeeds_when_any_existing_user_credentials_are_passed
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 149
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void transaction_to_all_access_normal_stream_succeeds_when_any_existing_user_credentials_are_passed()
    content.vb: Public Sub transaction_to_all_access_normal_stream_succeeds_when_any_existing_user_credentials_are_passed
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_any_existing_user_credentials_are_passed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_admin_user_credentials_are_passed
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_admin_user_credentials_are_passed
  id: transaction_to_all_access_normal_stream_succeeds_when_admin_user_credentials_are_passed
  parent: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security
  langs:
  - csharp
  - vb
  name: transaction_to_all_access_normal_stream_succeeds_when_admin_user_credentials_are_passed()
  nameWithType: transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_admin_user_credentials_are_passed()
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_admin_user_credentials_are_passed()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: transaction_to_all_access_normal_stream_succeeds_when_admin_user_credentials_are_passed
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/Security/transactional_write_stream_security.cs
    startLine: 166
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI.Security
  syntax:
    content: public void transaction_to_all_access_normal_stream_succeeds_when_admin_user_credentials_are_passed()
    content.vb: Public Sub transaction_to_all_access_normal_stream_succeeds_when_admin_user_credentials_are_passed
  overload: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_admin_user_credentials_are_passed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.ClientAPI.Security
  commentId: N:EventStore.Core.Tests.ClientAPI.Security
  isExternal: false
  name: EventStore.Core.Tests.ClientAPI.Security
  nameWithType: EventStore.Core.Tests.ClientAPI.Security
  fullName: EventStore.Core.Tests.ClientAPI.Security
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  commentId: T:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithDirectoryPerTestFixture
  nameWithType: SpecificationWithDirectoryPerTestFixture
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  commentId: T:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  parent: EventStore.Core.Tests.ClientAPI.Security
  isExternal: false
  name: AuthenticationTestBase
  nameWithType: AuthenticationTestBase
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Connection
  commentId: F:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Connection
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: false
  name: Connection
  nameWithType: AuthenticationTestBase.Connection
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Connection
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SetupConnection(EventStore.Core.Tests.Helpers.MiniNode)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SetupConnection(EventStore.Core.Tests.Helpers.MiniNode)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: false
  name: SetupConnection(MiniNode)
  nameWithType: AuthenticationTestBase.SetupConnection(MiniNode)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SetupConnection(EventStore.Core.Tests.Helpers.MiniNode)
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SetupConnection(EventStore.Core.Tests.Helpers.MiniNode)
    name: SetupConnection
    nameWithType: AuthenticationTestBase.SetupConnection
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SetupConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.Helpers.MiniNode
    name: MiniNode
    nameWithType: MiniNode
    fullName: EventStore.Core.Tests.Helpers.MiniNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SetupConnection(EventStore.Core.Tests.Helpers.MiniNode)
    name: SetupConnection
    nameWithType: AuthenticationTestBase.SetupConnection
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SetupConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.Helpers.MiniNode
    name: MiniNode
    nameWithType: MiniNode
    fullName: EventStore.Core.Tests.Helpers.MiniNode
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureSetUp
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: false
  name: TestFixtureSetUp()
  nameWithType: AuthenticationTestBase.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureSetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: AuthenticationTestBase.TestFixtureSetUp
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: AuthenticationTestBase.TestFixtureSetUp
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureTearDown
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: false
  name: TestFixtureTearDown()
  nameWithType: AuthenticationTestBase.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureTearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: AuthenticationTestBase.TestFixtureTearDown
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: AuthenticationTestBase.TestFixtureTearDown
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadEvent(System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadEvent(System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: true
  name: ReadEvent(String, String, String)
  nameWithType: AuthenticationTestBase.ReadEvent(String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadEvent(System.String, System.String, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadEvent(System.String,System.String,System.String)
    name: ReadEvent
    nameWithType: AuthenticationTestBase.ReadEvent
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadEvent(System.String,System.String,System.String)
    name: ReadEvent
    nameWithType: AuthenticationTestBase.ReadEvent
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamForward(System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamForward(System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: true
  name: ReadStreamForward(String, String, String)
  nameWithType: AuthenticationTestBase.ReadStreamForward(String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamForward(System.String, System.String, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamForward(System.String,System.String,System.String)
    name: ReadStreamForward
    nameWithType: AuthenticationTestBase.ReadStreamForward
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamForward(System.String,System.String,System.String)
    name: ReadStreamForward
    nameWithType: AuthenticationTestBase.ReadStreamForward
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamBackward(System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamBackward(System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: true
  name: ReadStreamBackward(String, String, String)
  nameWithType: AuthenticationTestBase.ReadStreamBackward(String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamBackward(System.String, System.String, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamBackward(System.String,System.String,System.String)
    name: ReadStreamBackward
    nameWithType: AuthenticationTestBase.ReadStreamBackward
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamBackward
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamBackward(System.String,System.String,System.String)
    name: ReadStreamBackward
    nameWithType: AuthenticationTestBase.ReadStreamBackward
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadStreamBackward
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteStream(System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteStream(System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: true
  name: WriteStream(String, String, String)
  nameWithType: AuthenticationTestBase.WriteStream(String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteStream(System.String, System.String, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteStream(System.String,System.String,System.String)
    name: WriteStream
    nameWithType: AuthenticationTestBase.WriteStream
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteStream(System.String,System.String,System.String)
    name: WriteStream
    nameWithType: AuthenticationTestBase.WriteStream
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TransStart(System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TransStart(System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: true
  name: TransStart(String, String, String)
  nameWithType: AuthenticationTestBase.TransStart(String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TransStart(System.String, System.String, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TransStart(System.String,System.String,System.String)
    name: TransStart
    nameWithType: AuthenticationTestBase.TransStart
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TransStart
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TransStart(System.String,System.String,System.String)
    name: TransStart
    nameWithType: AuthenticationTestBase.TransStart
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.TransStart
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllForward(System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllForward(System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: true
  name: ReadAllForward(String, String)
  nameWithType: AuthenticationTestBase.ReadAllForward(String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllForward(System.String, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllForward(System.String,System.String)
    name: ReadAllForward
    nameWithType: AuthenticationTestBase.ReadAllForward
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllForward(System.String,System.String)
    name: ReadAllForward
    nameWithType: AuthenticationTestBase.ReadAllForward
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllBackward(System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllBackward(System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: true
  name: ReadAllBackward(String, String)
  nameWithType: AuthenticationTestBase.ReadAllBackward(String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllBackward(System.String, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllBackward(System.String,System.String)
    name: ReadAllBackward
    nameWithType: AuthenticationTestBase.ReadAllBackward
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllBackward
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllBackward(System.String,System.String)
    name: ReadAllBackward
    nameWithType: AuthenticationTestBase.ReadAllBackward
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadAllBackward
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadMeta(System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadMeta(System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: true
  name: ReadMeta(String, String, String)
  nameWithType: AuthenticationTestBase.ReadMeta(String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadMeta(System.String, System.String, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadMeta(System.String,System.String,System.String)
    name: ReadMeta
    nameWithType: AuthenticationTestBase.ReadMeta
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadMeta
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadMeta(System.String,System.String,System.String)
    name: ReadMeta
    nameWithType: AuthenticationTestBase.ReadMeta
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ReadMeta
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteMeta(System.String,System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteMeta(System.String,System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: true
  name: WriteMeta(String, String, String, String)
  nameWithType: AuthenticationTestBase.WriteMeta(String, String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteMeta(System.String, System.String, System.String, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteMeta(System.String,System.String,System.String,System.String)
    name: WriteMeta
    nameWithType: AuthenticationTestBase.WriteMeta
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteMeta
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteMeta(System.String,System.String,System.String,System.String)
    name: WriteMeta
    nameWithType: AuthenticationTestBase.WriteMeta
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.WriteMeta
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToStream(System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToStream(System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: true
  name: SubscribeToStream(String, String, String)
  nameWithType: AuthenticationTestBase.SubscribeToStream(String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToStream(System.String, System.String, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToStream(System.String,System.String,System.String)
    name: SubscribeToStream
    nameWithType: AuthenticationTestBase.SubscribeToStream
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToStream(System.String,System.String,System.String)
    name: SubscribeToStream
    nameWithType: AuthenticationTestBase.SubscribeToStream
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToAll(System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToAll(System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: true
  name: SubscribeToAll(String, String)
  nameWithType: AuthenticationTestBase.SubscribeToAll(String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToAll(System.String, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToAll(System.String,System.String)
    name: SubscribeToAll
    nameWithType: AuthenticationTestBase.SubscribeToAll
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToAll(System.String,System.String)
    name: SubscribeToAll
    nameWithType: AuthenticationTestBase.SubscribeToAll
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.SubscribeToAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateStreamWithMeta(EventStore.ClientAPI.StreamMetadata,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateStreamWithMeta(EventStore.ClientAPI.StreamMetadata,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: true
  name: CreateStreamWithMeta(StreamMetadata, String)
  nameWithType: AuthenticationTestBase.CreateStreamWithMeta(StreamMetadata, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateStreamWithMeta(EventStore.ClientAPI.StreamMetadata, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateStreamWithMeta(EventStore.ClientAPI.StreamMetadata,System.String)
    name: CreateStreamWithMeta
    nameWithType: AuthenticationTestBase.CreateStreamWithMeta
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateStreamWithMeta
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.ClientAPI.StreamMetadata
    name: StreamMetadata
    nameWithType: StreamMetadata
    fullName: EventStore.ClientAPI.StreamMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateStreamWithMeta(EventStore.ClientAPI.StreamMetadata,System.String)
    name: CreateStreamWithMeta
    nameWithType: AuthenticationTestBase.CreateStreamWithMeta
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateStreamWithMeta
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.ClientAPI.StreamMetadata
    name: StreamMetadata
    nameWithType: StreamMetadata
    fullName: EventStore.ClientAPI.StreamMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.DeleteStream(System.String,System.String,System.String)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.DeleteStream(System.String,System.String,System.String)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: true
  name: DeleteStream(String, String, String)
  nameWithType: AuthenticationTestBase.DeleteStream(String, String, String)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.DeleteStream(System.String, System.String, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.DeleteStream(System.String,System.String,System.String)
    name: DeleteStream
    nameWithType: AuthenticationTestBase.DeleteStream
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.DeleteStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.DeleteStream(System.String,System.String,System.String)
    name: DeleteStream
    nameWithType: AuthenticationTestBase.DeleteStream
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.DeleteStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect``1(Action)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect``1(Action)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: true
  name: Expect<T>(Action)
  nameWithType: AuthenticationTestBase.Expect<T>(Action)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect<T>(Action)
  nameWithType.vb: AuthenticationTestBase.Expect(Of T)(Action)
  fullName.vb: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect(Of T)(Action)
  name.vb: Expect(Of T)(Action)
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect``1(Action)
    name: Expect<T>
    nameWithType: AuthenticationTestBase.Expect<T>
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect``1(Action)
    name: Expect(Of T)
    nameWithType: AuthenticationTestBase.Expect(Of T)
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.Expect(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ExpectNoException(Action)
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ExpectNoException(Action)
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: true
  name: ExpectNoException(Action)
  nameWithType: AuthenticationTestBase.ExpectNoException(Action)
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ExpectNoException(Action)
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ExpectNoException(Action)
    name: ExpectNoException
    nameWithType: AuthenticationTestBase.ExpectNoException
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ExpectNoException
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ExpectNoException(Action)
    name: ExpectNoException
    nameWithType: AuthenticationTestBase.ExpectNoException
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.ExpectNoException
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateEvents
  commentId: M:EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateEvents
  parent: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase
  isExternal: false
  name: CreateEvents()
  nameWithType: AuthenticationTestBase.CreateEvents()
  fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateEvents()
  spec.csharp:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateEvents
    name: CreateEvents
    nameWithType: AuthenticationTestBase.CreateEvents
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateEvents
    name: CreateEvents
    nameWithType: AuthenticationTestBase.CreateEvents
    fullName: EventStore.Core.Tests.ClientAPI.Security.AuthenticationTestBase.CreateEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  commentId: F:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: PathName
  nameWithType: SpecificationWithDirectoryPerTestFixture.PathName
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: GetTempFilePath()
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: true
  name: GetFilePathFor(String)
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor(String)
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<transactional_write_stream_security>()
  nameWithType: ProtobufExtensions.Serialize<transactional_write_stream_security>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of transactional_write_stream_security)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security)()
  name.vb: Serialize(Of transactional_write_stream_security)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<transactional_write_stream_security>
    nameWithType: ProtobufExtensions.Serialize<transactional_write_stream_security>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of transactional_write_stream_security)
    nameWithType: ProtobufExtensions.Serialize(Of transactional_write_stream_security)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<transactional_write_stream_security>()
  nameWithType: ProtobufExtensions.SerializeToArray<transactional_write_stream_security>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of transactional_write_stream_security)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security)()
  name.vb: SerializeToArray(Of transactional_write_stream_security)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<transactional_write_stream_security>
    nameWithType: ProtobufExtensions.SerializeToArray<transactional_write_stream_security>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of transactional_write_stream_security)
    nameWithType: ProtobufExtensions.SerializeToArray(Of transactional_write_stream_security)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_with_not_existing_credentials_is_not_authenticated*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_with_not_existing_credentials_is_not_authenticated
  isExternal: false
  name: starting_transaction_with_not_existing_credentials_is_not_authenticated
  nameWithType: transactional_write_stream_security.starting_transaction_with_not_existing_credentials_is_not_authenticated
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_with_not_existing_credentials_is_not_authenticated
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_no_credentials_is_denied*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_no_credentials_is_denied
  isExternal: false
  name: starting_transaction_to_stream_with_no_credentials_is_denied
  nameWithType: transactional_write_stream_security.starting_transaction_to_stream_with_no_credentials_is_denied
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_no_credentials_is_denied
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_not_authorized_user_credentials_is_denied*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_not_authorized_user_credentials_is_denied
  isExternal: false
  name: starting_transaction_to_stream_with_not_authorized_user_credentials_is_denied
  nameWithType: transactional_write_stream_security.starting_transaction_to_stream_with_not_authorized_user_credentials_is_denied
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_not_authorized_user_credentials_is_denied
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_authorized_user_credentials_succeeds*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_authorized_user_credentials_succeeds
  isExternal: false
  name: starting_transaction_to_stream_with_authorized_user_credentials_succeeds
  nameWithType: transactional_write_stream_security.starting_transaction_to_stream_with_authorized_user_credentials_succeeds
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_authorized_user_credentials_succeeds
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_admin_user_credentials_succeeds*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_admin_user_credentials_succeeds
  isExternal: false
  name: starting_transaction_to_stream_with_admin_user_credentials_succeeds
  nameWithType: transactional_write_stream_security.starting_transaction_to_stream_with_admin_user_credentials_succeeds
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.starting_transaction_to_stream_with_admin_user_credentials_succeeds
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_with_not_existing_credentials_is_not_authenticated*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_with_not_existing_credentials_is_not_authenticated
  isExternal: false
  name: committing_transaction_with_not_existing_credentials_is_not_authenticated
  nameWithType: transactional_write_stream_security.committing_transaction_with_not_existing_credentials_is_not_authenticated
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_with_not_existing_credentials_is_not_authenticated
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_no_credentials_is_denied*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_no_credentials_is_denied
  isExternal: false
  name: committing_transaction_to_stream_with_no_credentials_is_denied
  nameWithType: transactional_write_stream_security.committing_transaction_to_stream_with_no_credentials_is_denied
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_no_credentials_is_denied
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_not_authorized_user_credentials_is_denied*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_not_authorized_user_credentials_is_denied
  isExternal: false
  name: committing_transaction_to_stream_with_not_authorized_user_credentials_is_denied
  nameWithType: transactional_write_stream_security.committing_transaction_to_stream_with_not_authorized_user_credentials_is_denied
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_not_authorized_user_credentials_is_denied
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_authorized_user_credentials_succeeds*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_authorized_user_credentials_succeeds
  isExternal: false
  name: committing_transaction_to_stream_with_authorized_user_credentials_succeeds
  nameWithType: transactional_write_stream_security.committing_transaction_to_stream_with_authorized_user_credentials_succeeds
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_authorized_user_credentials_succeeds
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_admin_user_credentials_succeeds*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_admin_user_credentials_succeeds
  isExternal: false
  name: committing_transaction_to_stream_with_admin_user_credentials_succeeds
  nameWithType: transactional_write_stream_security.committing_transaction_to_stream_with_admin_user_credentials_succeeds
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.committing_transaction_to_stream_with_admin_user_credentials_succeeds
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_no_credentials_are_passed*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_no_credentials_are_passed
  isExternal: false
  name: transaction_to_no_acl_stream_succeeds_when_no_credentials_are_passed
  nameWithType: transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_no_credentials_are_passed
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_no_credentials_are_passed
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_is_not_authenticated_when_not_existing_credentials_are_passed*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_is_not_authenticated_when_not_existing_credentials_are_passed
  isExternal: false
  name: transaction_to_no_acl_stream_is_not_authenticated_when_not_existing_credentials_are_passed
  nameWithType: transactional_write_stream_security.transaction_to_no_acl_stream_is_not_authenticated_when_not_existing_credentials_are_passed
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_is_not_authenticated_when_not_existing_credentials_are_passed
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_any_existing_user_credentials_are_passed*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_any_existing_user_credentials_are_passed
  isExternal: false
  name: transaction_to_no_acl_stream_succeeds_when_any_existing_user_credentials_are_passed
  nameWithType: transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_any_existing_user_credentials_are_passed
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_any_existing_user_credentials_are_passed
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_admin_user_credentials_are_passed*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_admin_user_credentials_are_passed
  isExternal: false
  name: transaction_to_no_acl_stream_succeeds_when_admin_user_credentials_are_passed
  nameWithType: transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_admin_user_credentials_are_passed
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_no_acl_stream_succeeds_when_admin_user_credentials_are_passed
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_no_credentials_are_passed*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_no_credentials_are_passed
  isExternal: false
  name: transaction_to_all_access_normal_stream_succeeds_when_no_credentials_are_passed
  nameWithType: transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_no_credentials_are_passed
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_no_credentials_are_passed
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_is_not_authenticated_when_not_existing_credentials_are_passed*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_is_not_authenticated_when_not_existing_credentials_are_passed
  isExternal: false
  name: transaction_to_all_access_normal_stream_is_not_authenticated_when_not_existing_credentials_are_passed
  nameWithType: transactional_write_stream_security.transaction_to_all_access_normal_stream_is_not_authenticated_when_not_existing_credentials_are_passed
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_is_not_authenticated_when_not_existing_credentials_are_passed
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_any_existing_user_credentials_are_passed*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_any_existing_user_credentials_are_passed
  isExternal: false
  name: transaction_to_all_access_normal_stream_succeeds_when_any_existing_user_credentials_are_passed
  nameWithType: transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_any_existing_user_credentials_are_passed
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_any_existing_user_credentials_are_passed
- uid: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_admin_user_credentials_are_passed*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_admin_user_credentials_are_passed
  isExternal: false
  name: transaction_to_all_access_normal_stream_succeeds_when_admin_user_credentials_are_passed
  nameWithType: transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_admin_user_credentials_are_passed
  fullName: EventStore.Core.Tests.ClientAPI.Security.transactional_write_stream_security.transaction_to_all_access_normal_stream_succeeds_when_admin_user_credentials_are_passed

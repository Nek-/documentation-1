### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors
  commentId: T:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors
  id: catch_up_subscription_handles_errors
  parent: EventStore.Core.Tests.ClientAPI
  children:
  - EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_asynchronously
  - EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_immediately
  - EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_asynchronously
  - EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_immediately
  - EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.SetUp
  - EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_completes_onces_subscription_is_live
  - EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_async
  - EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_immediate
  - EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_async
  - EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_immediately
  - EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.when_live_processing_and_disconnected_reconnect_keeps_events_ordered
  langs:
  - csharp
  - vb
  name: catch_up_subscription_handles_errors
  nameWithType: catch_up_subscription_handles_errors
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: catch_up_subscription_handles_errors
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
    startLine: 20
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: 'public class catch_up_subscription_handles_errors : object'
    content.vb: >-
      Public Class catch_up_subscription_handles_errors

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.SetUp
  commentId: M:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.SetUp
  id: SetUp
  parent: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors
  langs:
  - csharp
  - vb
  name: SetUp()
  nameWithType: catch_up_subscription_handles_errors.SetUp()
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.SetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetUp
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
    startLine: 35
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void SetUp()
    content.vb: Public Sub SetUp
  overload: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.SetUp*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_immediately
  commentId: M:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_immediately
  id: read_events_til_stops_subscription_when_throws_immediately
  parent: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors
  langs:
  - csharp
  - vb
  name: read_events_til_stops_subscription_when_throws_immediately()
  nameWithType: catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_immediately()
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_immediately()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: read_events_til_stops_subscription_when_throws_immediately
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
    startLine: 69
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void read_events_til_stops_subscription_when_throws_immediately()
    content.vb: Public Sub read_events_til_stops_subscription_when_throws_immediately
  overload: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_immediately*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_asynchronously
  commentId: M:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_asynchronously
  id: read_events_til_stops_subscription_when_throws_asynchronously
  parent: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors
  langs:
  - csharp
  - vb
  name: read_events_til_stops_subscription_when_throws_asynchronously()
  nameWithType: catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_asynchronously()
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_asynchronously()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: read_events_til_stops_subscription_when_throws_asynchronously
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
    startLine: 95
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void read_events_til_stops_subscription_when_throws_asynchronously()
    content.vb: Public Sub read_events_til_stops_subscription_when_throws_asynchronously
  overload: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_asynchronously*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_immediately
  commentId: M:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_immediately
  id: read_events_til_stops_subscription_when_second_read_throws_immediately
  parent: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors
  langs:
  - csharp
  - vb
  name: read_events_til_stops_subscription_when_second_read_throws_immediately()
  nameWithType: catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_immediately()
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_immediately()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: read_events_til_stops_subscription_when_second_read_throws_immediately
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
    startLine: 113
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void read_events_til_stops_subscription_when_second_read_throws_immediately()
    content.vb: Public Sub read_events_til_stops_subscription_when_second_read_throws_immediately
  overload: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_immediately*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_asynchronously
  commentId: M:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_asynchronously
  id: read_events_til_stops_subscription_when_second_read_throws_asynchronously
  parent: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors
  langs:
  - csharp
  - vb
  name: read_events_til_stops_subscription_when_second_read_throws_asynchronously()
  nameWithType: catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_asynchronously()
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_asynchronously()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: read_events_til_stops_subscription_when_second_read_throws_asynchronously
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
    startLine: 144
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void read_events_til_stops_subscription_when_second_read_throws_asynchronously()
    content.vb: Public Sub read_events_til_stops_subscription_when_second_read_throws_asynchronously
  overload: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_asynchronously*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_immediately
  commentId: M:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_immediately
  id: start_stops_subscription_if_subscribe_fails_immediately
  parent: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors
  langs:
  - csharp
  - vb
  name: start_stops_subscription_if_subscribe_fails_immediately()
  nameWithType: catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_immediately()
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_immediately()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: start_stops_subscription_if_subscribe_fails_immediately
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
    startLine: 176
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void start_stops_subscription_if_subscribe_fails_immediately()
    content.vb: Public Sub start_stops_subscription_if_subscribe_fails_immediately
  overload: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_immediately*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_async
  commentId: M:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_async
  id: start_stops_subscription_if_subscribe_fails_async
  parent: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors
  langs:
  - csharp
  - vb
  name: start_stops_subscription_if_subscribe_fails_async()
  nameWithType: catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_async()
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_async()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: start_stops_subscription_if_subscribe_fails_async
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
    startLine: 198
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void start_stops_subscription_if_subscribe_fails_async()
    content.vb: Public Sub start_stops_subscription_if_subscribe_fails_async
  overload: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_async*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_immediate
  commentId: M:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_immediate
  id: start_stops_subscription_if_historical_missed_events_load_fails_immediate
  parent: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors
  langs:
  - csharp
  - vb
  name: start_stops_subscription_if_historical_missed_events_load_fails_immediate()
  nameWithType: catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_immediate()
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_immediate()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: start_stops_subscription_if_historical_missed_events_load_fails_immediate
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
    startLine: 221
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void start_stops_subscription_if_historical_missed_events_load_fails_immediate()
    content.vb: Public Sub start_stops_subscription_if_historical_missed_events_load_fails_immediate
  overload: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_immediate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_async
  commentId: M:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_async
  id: start_stops_subscription_if_historical_missed_events_load_fails_async
  parent: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors
  langs:
  - csharp
  - vb
  name: start_stops_subscription_if_historical_missed_events_load_fails_async()
  nameWithType: catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_async()
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_async()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: start_stops_subscription_if_historical_missed_events_load_fails_async
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
    startLine: 254
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void start_stops_subscription_if_historical_missed_events_load_fails_async()
    content.vb: Public Sub start_stops_subscription_if_historical_missed_events_load_fails_async
  overload: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_async*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_completes_onces_subscription_is_live
  commentId: M:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_completes_onces_subscription_is_live
  id: start_completes_onces_subscription_is_live
  parent: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors
  langs:
  - csharp
  - vb
  name: start_completes_onces_subscription_is_live()
  nameWithType: catch_up_subscription_handles_errors.start_completes_onces_subscription_is_live()
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_completes_onces_subscription_is_live()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: start_completes_onces_subscription_is_live
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
    startLine: 288
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void start_completes_onces_subscription_is_live()
    content.vb: Public Sub start_completes_onces_subscription_is_live
  overload: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_completes_onces_subscription_is_live*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.when_live_processing_and_disconnected_reconnect_keeps_events_ordered
  commentId: M:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.when_live_processing_and_disconnected_reconnect_keeps_events_ordered
  id: when_live_processing_and_disconnected_reconnect_keeps_events_ordered
  parent: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors
  langs:
  - csharp
  - vb
  name: when_live_processing_and_disconnected_reconnect_keeps_events_ordered()
  nameWithType: catch_up_subscription_handles_errors.when_live_processing_and_disconnected_reconnect_keeps_events_ordered()
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.when_live_processing_and_disconnected_reconnect_keeps_events_ordered()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: when_live_processing_and_disconnected_reconnect_keeps_events_ordered
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/catch_up_subscription_handles_errors.cs
    startLine: 324
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void when_live_processing_and_disconnected_reconnect_keeps_events_ordered()
    content.vb: Public Sub when_live_processing_and_disconnected_reconnect_keeps_events_ordered
  overload: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.when_live_processing_and_disconnected_reconnect_keeps_events_ordered*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.ClientAPI
  commentId: N:EventStore.Core.Tests.ClientAPI
  isExternal: false
  name: EventStore.Core.Tests.ClientAPI
  nameWithType: EventStore.Core.Tests.ClientAPI
  fullName: EventStore.Core.Tests.ClientAPI
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<catch_up_subscription_handles_errors>()
  nameWithType: ProtobufExtensions.Serialize<catch_up_subscription_handles_errors>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of catch_up_subscription_handles_errors)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors)()
  name.vb: Serialize(Of catch_up_subscription_handles_errors)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<catch_up_subscription_handles_errors>
    nameWithType: ProtobufExtensions.Serialize<catch_up_subscription_handles_errors>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of catch_up_subscription_handles_errors)
    nameWithType: ProtobufExtensions.Serialize(Of catch_up_subscription_handles_errors)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<catch_up_subscription_handles_errors>()
  nameWithType: ProtobufExtensions.SerializeToArray<catch_up_subscription_handles_errors>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of catch_up_subscription_handles_errors)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors)()
  name.vb: SerializeToArray(Of catch_up_subscription_handles_errors)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<catch_up_subscription_handles_errors>
    nameWithType: ProtobufExtensions.SerializeToArray<catch_up_subscription_handles_errors>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of catch_up_subscription_handles_errors)
    nameWithType: ProtobufExtensions.SerializeToArray(Of catch_up_subscription_handles_errors)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.SetUp*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.SetUp
  isExternal: false
  name: SetUp
  nameWithType: catch_up_subscription_handles_errors.SetUp
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.SetUp
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_immediately*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_immediately
  isExternal: false
  name: read_events_til_stops_subscription_when_throws_immediately
  nameWithType: catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_immediately
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_immediately
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_asynchronously*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_asynchronously
  isExternal: false
  name: read_events_til_stops_subscription_when_throws_asynchronously
  nameWithType: catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_asynchronously
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_throws_asynchronously
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_immediately*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_immediately
  isExternal: false
  name: read_events_til_stops_subscription_when_second_read_throws_immediately
  nameWithType: catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_immediately
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_immediately
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_asynchronously*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_asynchronously
  isExternal: false
  name: read_events_til_stops_subscription_when_second_read_throws_asynchronously
  nameWithType: catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_asynchronously
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.read_events_til_stops_subscription_when_second_read_throws_asynchronously
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_immediately*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_immediately
  isExternal: false
  name: start_stops_subscription_if_subscribe_fails_immediately
  nameWithType: catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_immediately
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_immediately
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_async*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_async
  isExternal: false
  name: start_stops_subscription_if_subscribe_fails_async
  nameWithType: catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_async
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_subscribe_fails_async
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_immediate*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_immediate
  isExternal: false
  name: start_stops_subscription_if_historical_missed_events_load_fails_immediate
  nameWithType: catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_immediate
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_immediate
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_async*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_async
  isExternal: false
  name: start_stops_subscription_if_historical_missed_events_load_fails_async
  nameWithType: catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_async
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_stops_subscription_if_historical_missed_events_load_fails_async
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_completes_onces_subscription_is_live*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_completes_onces_subscription_is_live
  isExternal: false
  name: start_completes_onces_subscription_is_live
  nameWithType: catch_up_subscription_handles_errors.start_completes_onces_subscription_is_live
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.start_completes_onces_subscription_is_live
- uid: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.when_live_processing_and_disconnected_reconnect_keeps_events_ordered*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.when_live_processing_and_disconnected_reconnect_keeps_events_ordered
  isExternal: false
  name: when_live_processing_and_disconnected_reconnect_keeps_events_ordered
  nameWithType: catch_up_subscription_handles_errors.when_live_processing_and_disconnected_reconnect_keeps_events_ordered
  fullName: EventStore.Core.Tests.ClientAPI.catch_up_subscription_handles_errors.when_live_processing_and_disconnected_reconnect_keeps_events_ordered

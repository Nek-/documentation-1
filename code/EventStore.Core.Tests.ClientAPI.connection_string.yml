### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.ClientAPI.connection_string
  commentId: T:EventStore.Core.Tests.ClientAPI.connection_string
  id: connection_string
  parent: EventStore.Core.Tests.ClientAPI
  children:
  - EventStore.Core.Tests.ClientAPI.connection_string.can_set_bool_value_with_string
  - EventStore.Core.Tests.ClientAPI.connection_string.can_set_default_user_credentials
  - EventStore.Core.Tests.ClientAPI.connection_string.can_set_gossip_seeds
  - EventStore.Core.Tests.ClientAPI.connection_string.can_set_int
  - EventStore.Core.Tests.ClientAPI.connection_string.can_set_mixed_case
  - EventStore.Core.Tests.ClientAPI.connection_string.can_set_multiple_values
  - EventStore.Core.Tests.ClientAPI.connection_string.can_set_string_value
  - EventStore.Core.Tests.ClientAPI.connection_string.can_set_timespan
  - EventStore.Core.Tests.ClientAPI.connection_string.can_set_with_spaces
  langs:
  - csharp
  - vb
  name: connection_string
  nameWithType: connection_string
  fullName: EventStore.Core.Tests.ClientAPI.connection_string
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/connection_string.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: connection_string
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/connection_string.cs
    startLine: 5
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: 'public class connection_string : object'
    content.vb: >-
      Public Class connection_string

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.ClientAPI.connection_string.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.ClientAPI.connection_string.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_string_value
  commentId: M:EventStore.Core.Tests.ClientAPI.connection_string.can_set_string_value
  id: can_set_string_value
  parent: EventStore.Core.Tests.ClientAPI.connection_string
  langs:
  - csharp
  - vb
  name: can_set_string_value()
  nameWithType: connection_string.can_set_string_value()
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_string_value()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/connection_string.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: can_set_string_value
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/connection_string.cs
    startLine: 8
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void can_set_string_value()
    content.vb: Public Sub can_set_string_value
  overload: EventStore.Core.Tests.ClientAPI.connection_string.can_set_string_value*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_bool_value_with_string
  commentId: M:EventStore.Core.Tests.ClientAPI.connection_string.can_set_bool_value_with_string
  id: can_set_bool_value_with_string
  parent: EventStore.Core.Tests.ClientAPI.connection_string
  langs:
  - csharp
  - vb
  name: can_set_bool_value_with_string()
  nameWithType: connection_string.can_set_bool_value_with_string()
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_bool_value_with_string()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/connection_string.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: can_set_bool_value_with_string
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/connection_string.cs
    startLine: 15
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void can_set_bool_value_with_string()
    content.vb: Public Sub can_set_bool_value_with_string
  overload: EventStore.Core.Tests.ClientAPI.connection_string.can_set_bool_value_with_string*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_with_spaces
  commentId: M:EventStore.Core.Tests.ClientAPI.connection_string.can_set_with_spaces
  id: can_set_with_spaces
  parent: EventStore.Core.Tests.ClientAPI.connection_string
  langs:
  - csharp
  - vb
  name: can_set_with_spaces()
  nameWithType: connection_string.can_set_with_spaces()
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_with_spaces()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/connection_string.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: can_set_with_spaces
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/connection_string.cs
    startLine: 22
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void can_set_with_spaces()
    content.vb: Public Sub can_set_with_spaces
  overload: EventStore.Core.Tests.ClientAPI.connection_string.can_set_with_spaces*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_int
  commentId: M:EventStore.Core.Tests.ClientAPI.connection_string.can_set_int
  id: can_set_int
  parent: EventStore.Core.Tests.ClientAPI.connection_string
  langs:
  - csharp
  - vb
  name: can_set_int()
  nameWithType: connection_string.can_set_int()
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_int()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/connection_string.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: can_set_int
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/connection_string.cs
    startLine: 30
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void can_set_int()
    content.vb: Public Sub can_set_int
  overload: EventStore.Core.Tests.ClientAPI.connection_string.can_set_int*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_timespan
  commentId: M:EventStore.Core.Tests.ClientAPI.connection_string.can_set_timespan
  id: can_set_timespan
  parent: EventStore.Core.Tests.ClientAPI.connection_string
  langs:
  - csharp
  - vb
  name: can_set_timespan()
  nameWithType: connection_string.can_set_timespan()
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_timespan()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/connection_string.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: can_set_timespan
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/connection_string.cs
    startLine: 37
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void can_set_timespan()
    content.vb: Public Sub can_set_timespan
  overload: EventStore.Core.Tests.ClientAPI.connection_string.can_set_timespan*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_multiple_values
  commentId: M:EventStore.Core.Tests.ClientAPI.connection_string.can_set_multiple_values
  id: can_set_multiple_values
  parent: EventStore.Core.Tests.ClientAPI.connection_string
  langs:
  - csharp
  - vb
  name: can_set_multiple_values()
  nameWithType: connection_string.can_set_multiple_values()
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_multiple_values()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/connection_string.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: can_set_multiple_values
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/connection_string.cs
    startLine: 44
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void can_set_multiple_values()
    content.vb: Public Sub can_set_multiple_values
  overload: EventStore.Core.Tests.ClientAPI.connection_string.can_set_multiple_values*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_mixed_case
  commentId: M:EventStore.Core.Tests.ClientAPI.connection_string.can_set_mixed_case
  id: can_set_mixed_case
  parent: EventStore.Core.Tests.ClientAPI.connection_string
  langs:
  - csharp
  - vb
  name: can_set_mixed_case()
  nameWithType: connection_string.can_set_mixed_case()
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_mixed_case()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/connection_string.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: can_set_mixed_case
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/connection_string.cs
    startLine: 52
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void can_set_mixed_case()
    content.vb: Public Sub can_set_mixed_case
  overload: EventStore.Core.Tests.ClientAPI.connection_string.can_set_mixed_case*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_gossip_seeds
  commentId: M:EventStore.Core.Tests.ClientAPI.connection_string.can_set_gossip_seeds
  id: can_set_gossip_seeds
  parent: EventStore.Core.Tests.ClientAPI.connection_string
  langs:
  - csharp
  - vb
  name: can_set_gossip_seeds()
  nameWithType: connection_string.can_set_gossip_seeds()
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_gossip_seeds()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/connection_string.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: can_set_gossip_seeds
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/connection_string.cs
    startLine: 59
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void can_set_gossip_seeds()
    content.vb: Public Sub can_set_gossip_seeds
  overload: EventStore.Core.Tests.ClientAPI.connection_string.can_set_gossip_seeds*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_default_user_credentials
  commentId: M:EventStore.Core.Tests.ClientAPI.connection_string.can_set_default_user_credentials
  id: can_set_default_user_credentials
  parent: EventStore.Core.Tests.ClientAPI.connection_string
  langs:
  - csharp
  - vb
  name: can_set_default_user_credentials()
  nameWithType: connection_string.can_set_default_user_credentials()
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_default_user_credentials()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/ClientAPI/connection_string.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: can_set_default_user_credentials
    path: ../EventStore/src/EventStore.Core.Tests/ClientAPI/connection_string.cs
    startLine: 66
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.ClientAPI
  syntax:
    content: public void can_set_default_user_credentials()
    content.vb: Public Sub can_set_default_user_credentials
  overload: EventStore.Core.Tests.ClientAPI.connection_string.can_set_default_user_credentials*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.ClientAPI
  commentId: N:EventStore.Core.Tests.ClientAPI
  isExternal: false
  name: EventStore.Core.Tests.ClientAPI
  nameWithType: EventStore.Core.Tests.ClientAPI
  fullName: EventStore.Core.Tests.ClientAPI
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.connection_string.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<connection_string>()
  nameWithType: ProtobufExtensions.Serialize<connection_string>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.ClientAPI.connection_string>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of connection_string)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.ClientAPI.connection_string)()
  name.vb: Serialize(Of connection_string)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<connection_string>
    nameWithType: ProtobufExtensions.Serialize<connection_string>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.ClientAPI.connection_string>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of connection_string)
    nameWithType: ProtobufExtensions.Serialize(Of connection_string)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.ClientAPI.connection_string)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.ClientAPI.connection_string.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<connection_string>()
  nameWithType: ProtobufExtensions.SerializeToArray<connection_string>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.ClientAPI.connection_string>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of connection_string)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.ClientAPI.connection_string)()
  name.vb: SerializeToArray(Of connection_string)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<connection_string>
    nameWithType: ProtobufExtensions.SerializeToArray<connection_string>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.ClientAPI.connection_string>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of connection_string)
    nameWithType: ProtobufExtensions.SerializeToArray(Of connection_string)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.ClientAPI.connection_string)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_string_value*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.connection_string.can_set_string_value
  isExternal: false
  name: can_set_string_value
  nameWithType: connection_string.can_set_string_value
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_string_value
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_bool_value_with_string*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.connection_string.can_set_bool_value_with_string
  isExternal: false
  name: can_set_bool_value_with_string
  nameWithType: connection_string.can_set_bool_value_with_string
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_bool_value_with_string
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_with_spaces*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.connection_string.can_set_with_spaces
  isExternal: false
  name: can_set_with_spaces
  nameWithType: connection_string.can_set_with_spaces
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_with_spaces
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_int*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.connection_string.can_set_int
  isExternal: false
  name: can_set_int
  nameWithType: connection_string.can_set_int
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_int
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_timespan*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.connection_string.can_set_timespan
  isExternal: false
  name: can_set_timespan
  nameWithType: connection_string.can_set_timespan
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_timespan
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_multiple_values*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.connection_string.can_set_multiple_values
  isExternal: false
  name: can_set_multiple_values
  nameWithType: connection_string.can_set_multiple_values
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_multiple_values
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_mixed_case*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.connection_string.can_set_mixed_case
  isExternal: false
  name: can_set_mixed_case
  nameWithType: connection_string.can_set_mixed_case
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_mixed_case
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_gossip_seeds*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.connection_string.can_set_gossip_seeds
  isExternal: false
  name: can_set_gossip_seeds
  nameWithType: connection_string.can_set_gossip_seeds
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_gossip_seeds
- uid: EventStore.Core.Tests.ClientAPI.connection_string.can_set_default_user_credentials*
  commentId: Overload:EventStore.Core.Tests.ClientAPI.connection_string.can_set_default_user_credentials
  isExternal: false
  name: can_set_default_user_credentials
  nameWithType: connection_string.can_set_default_user_credentials
  fullName: EventStore.Core.Tests.ClientAPI.connection_string.can_set_default_user_credentials

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Common.TestArgs
  commentId: T:EventStore.Core.Tests.Common.TestArgs
  id: TestArgs
  parent: EventStore.Core.Tests.Common
  children:
  - EventStore.Core.Tests.Common.TestArgs.#ctor
  - EventStore.Core.Tests.Common.TestArgs.Config
  - EventStore.Core.Tests.Common.TestArgs.Defines
  - EventStore.Core.Tests.Common.TestArgs.Force
  - EventStore.Core.Tests.Common.TestArgs.GossipSeed
  - EventStore.Core.Tests.Common.TestArgs.Help
  - EventStore.Core.Tests.Common.TestArgs.HttpPort
  - EventStore.Core.Tests.Common.TestArgs.Log
  - EventStore.Core.Tests.Common.TestArgs.RunProjections
  - EventStore.Core.Tests.Common.TestArgs.Version
  - EventStore.Core.Tests.Common.TestArgs.WhatIf
  langs:
  - csharp
  - vb
  name: TestArgs
  nameWithType: TestArgs
  fullName: EventStore.Core.Tests.Common.TestArgs
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestArgs
    path: ../EventStore/src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
    startLine: 5
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Common
  syntax:
    content: 'public class TestArgs : object, IOptions'
    content.vb: >-
      Public Class TestArgs

          Inherits Object

          Implements IOptions
  inheritance:
  - System.Object
  implements:
  - EventStore.Common.Options.IOptions
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Common.TestArgs.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Common.TestArgs.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Common.TestArgs.Help
  commentId: P:EventStore.Core.Tests.Common.TestArgs.Help
  id: Help
  parent: EventStore.Core.Tests.Common.TestArgs
  langs:
  - csharp
  - vb
  name: Help
  nameWithType: TestArgs.Help
  fullName: EventStore.Core.Tests.Common.TestArgs.Help
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Help
    path: ../EventStore/src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
    startLine: 7
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Common
  syntax:
    content: public bool Help { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Help As Boolean
  overload: EventStore.Core.Tests.Common.TestArgs.Help*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Common.TestArgs.Version
  commentId: P:EventStore.Core.Tests.Common.TestArgs.Version
  id: Version
  parent: EventStore.Core.Tests.Common.TestArgs
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: TestArgs.Version
  fullName: EventStore.Core.Tests.Common.TestArgs.Version
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Version
    path: ../EventStore/src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
    startLine: 8
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Common
  syntax:
    content: public bool Version { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Version As Boolean
  overload: EventStore.Core.Tests.Common.TestArgs.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Common.TestArgs.Config
  commentId: P:EventStore.Core.Tests.Common.TestArgs.Config
  id: Config
  parent: EventStore.Core.Tests.Common.TestArgs
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: TestArgs.Config
  fullName: EventStore.Core.Tests.Common.TestArgs.Config
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Config
    path: ../EventStore/src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
    startLine: 9
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Common
  syntax:
    content: public string Config { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Config As String
  overload: EventStore.Core.Tests.Common.TestArgs.Config*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Common.TestArgs.Log
  commentId: P:EventStore.Core.Tests.Common.TestArgs.Log
  id: Log
  parent: EventStore.Core.Tests.Common.TestArgs
  langs:
  - csharp
  - vb
  name: Log
  nameWithType: TestArgs.Log
  fullName: EventStore.Core.Tests.Common.TestArgs.Log
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Log
    path: ../EventStore/src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
    startLine: 10
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Common
  syntax:
    content: public string Log { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Log As String
  overload: EventStore.Core.Tests.Common.TestArgs.Log*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Common.TestArgs.Defines
  commentId: P:EventStore.Core.Tests.Common.TestArgs.Defines
  id: Defines
  parent: EventStore.Core.Tests.Common.TestArgs
  langs:
  - csharp
  - vb
  name: Defines
  nameWithType: TestArgs.Defines
  fullName: EventStore.Core.Tests.Common.TestArgs.Defines
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Defines
    path: ../EventStore/src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
    startLine: 11
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Common
  syntax:
    content: public string[] Defines { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property Defines As String()
  overload: EventStore.Core.Tests.Common.TestArgs.Defines*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Common.TestArgs.GossipSeed
  commentId: P:EventStore.Core.Tests.Common.TestArgs.GossipSeed
  id: GossipSeed
  parent: EventStore.Core.Tests.Common.TestArgs
  langs:
  - csharp
  - vb
  name: GossipSeed
  nameWithType: TestArgs.GossipSeed
  fullName: EventStore.Core.Tests.Common.TestArgs.GossipSeed
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GossipSeed
    path: ../EventStore/src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
    startLine: 12
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Common
  syntax:
    content: public IPEndPoint[] GossipSeed { get; set; }
    parameters: []
    return:
      type: IPEndPoint[]
    content.vb: Public Property GossipSeed As IPEndPoint()
  overload: EventStore.Core.Tests.Common.TestArgs.GossipSeed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Common.TestArgs.WhatIf
  commentId: P:EventStore.Core.Tests.Common.TestArgs.WhatIf
  id: WhatIf
  parent: EventStore.Core.Tests.Common.TestArgs
  langs:
  - csharp
  - vb
  name: WhatIf
  nameWithType: TestArgs.WhatIf
  fullName: EventStore.Core.Tests.Common.TestArgs.WhatIf
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WhatIf
    path: ../EventStore/src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
    startLine: 13
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Common
  syntax:
    content: public bool WhatIf { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property WhatIf As Boolean
  overload: EventStore.Core.Tests.Common.TestArgs.WhatIf*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Common.TestArgs.Force
  commentId: P:EventStore.Core.Tests.Common.TestArgs.Force
  id: Force
  parent: EventStore.Core.Tests.Common.TestArgs
  langs:
  - csharp
  - vb
  name: Force
  nameWithType: TestArgs.Force
  fullName: EventStore.Core.Tests.Common.TestArgs.Force
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Force
    path: ../EventStore/src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
    startLine: 14
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Common
  syntax:
    content: public bool Force { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Force As Boolean
  overload: EventStore.Core.Tests.Common.TestArgs.Force*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Common.TestArgs.RunProjections
  commentId: P:EventStore.Core.Tests.Common.TestArgs.RunProjections
  id: RunProjections
  parent: EventStore.Core.Tests.Common.TestArgs
  langs:
  - csharp
  - vb
  name: RunProjections
  nameWithType: TestArgs.RunProjections
  fullName: EventStore.Core.Tests.Common.TestArgs.RunProjections
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RunProjections
    path: ../EventStore/src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
    startLine: 15
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Common
  syntax:
    content: public ProjectionType RunProjections { get; set; }
    parameters: []
    return:
      type: EventStore.Common.Options.ProjectionType
    content.vb: Public Property RunProjections As ProjectionType
  overload: EventStore.Core.Tests.Common.TestArgs.RunProjections*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Common.TestArgs.HttpPort
  commentId: P:EventStore.Core.Tests.Common.TestArgs.HttpPort
  id: HttpPort
  parent: EventStore.Core.Tests.Common.TestArgs
  langs:
  - csharp
  - vb
  name: HttpPort
  nameWithType: TestArgs.HttpPort
  fullName: EventStore.Core.Tests.Common.TestArgs.HttpPort
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HttpPort
    path: ../EventStore/src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
    startLine: 17
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Common
  syntax:
    content: public int HttpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property HttpPort As Integer
  overload: EventStore.Core.Tests.Common.TestArgs.HttpPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Common.TestArgs.#ctor
  commentId: M:EventStore.Core.Tests.Common.TestArgs.#ctor
  id: '#ctor'
  parent: EventStore.Core.Tests.Common.TestArgs
  langs:
  - csharp
  - vb
  name: TestArgs()
  nameWithType: TestArgs.TestArgs()
  fullName: EventStore.Core.Tests.Common.TestArgs.TestArgs()
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Common/EventStoreOptionsTests/TestArgs.cs
    startLine: 18
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Common
  syntax:
    content: public TestArgs()
    content.vb: Public Sub New
  overload: EventStore.Core.Tests.Common.TestArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Common
  commentId: N:EventStore.Core.Tests.Common
  isExternal: false
  name: EventStore.Core.Tests.Common
  nameWithType: EventStore.Core.Tests.Common
  fullName: EventStore.Core.Tests.Common
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Common.Options.IOptions
  commentId: T:EventStore.Common.Options.IOptions
  parent: EventStore.Common.Options
  isExternal: false
  name: IOptions
  nameWithType: IOptions
  fullName: EventStore.Common.Options.IOptions
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Common.TestArgs.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TestArgs>()
  nameWithType: ProtobufExtensions.Serialize<TestArgs>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Common.TestArgs>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TestArgs)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Common.TestArgs)()
  name.vb: Serialize(Of TestArgs)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TestArgs>
    nameWithType: ProtobufExtensions.Serialize<TestArgs>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Common.TestArgs>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TestArgs)
    nameWithType: ProtobufExtensions.Serialize(Of TestArgs)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Common.TestArgs)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Common.TestArgs.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TestArgs>()
  nameWithType: ProtobufExtensions.SerializeToArray<TestArgs>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Common.TestArgs>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TestArgs)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Common.TestArgs)()
  name.vb: SerializeToArray(Of TestArgs)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TestArgs>
    nameWithType: ProtobufExtensions.SerializeToArray<TestArgs>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Common.TestArgs>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TestArgs)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TestArgs)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Common.TestArgs)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Options
  commentId: N:EventStore.Common.Options
  isExternal: false
  name: EventStore.Common.Options
  nameWithType: EventStore.Common.Options
  fullName: EventStore.Common.Options
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Common.TestArgs.Help*
  commentId: Overload:EventStore.Core.Tests.Common.TestArgs.Help
  isExternal: false
  name: Help
  nameWithType: TestArgs.Help
  fullName: EventStore.Core.Tests.Common.TestArgs.Help
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Tests.Common.TestArgs.Version*
  commentId: Overload:EventStore.Core.Tests.Common.TestArgs.Version
  isExternal: false
  name: Version
  nameWithType: TestArgs.Version
  fullName: EventStore.Core.Tests.Common.TestArgs.Version
- uid: EventStore.Core.Tests.Common.TestArgs.Config*
  commentId: Overload:EventStore.Core.Tests.Common.TestArgs.Config
  isExternal: false
  name: Config
  nameWithType: TestArgs.Config
  fullName: EventStore.Core.Tests.Common.TestArgs.Config
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Tests.Common.TestArgs.Log*
  commentId: Overload:EventStore.Core.Tests.Common.TestArgs.Log
  isExternal: false
  name: Log
  nameWithType: TestArgs.Log
  fullName: EventStore.Core.Tests.Common.TestArgs.Log
- uid: EventStore.Core.Tests.Common.TestArgs.Defines*
  commentId: Overload:EventStore.Core.Tests.Common.TestArgs.Defines
  isExternal: false
  name: Defines
  nameWithType: TestArgs.Defines
  fullName: EventStore.Core.Tests.Common.TestArgs.Defines
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Tests.Common.TestArgs.GossipSeed*
  commentId: Overload:EventStore.Core.Tests.Common.TestArgs.GossipSeed
  isExternal: false
  name: GossipSeed
  nameWithType: TestArgs.GossipSeed
  fullName: EventStore.Core.Tests.Common.TestArgs.GossipSeed
- uid: IPEndPoint[]
  name: IPEndPoint[]
  nameWithType: IPEndPoint[]
  fullName: IPEndPoint[]
  nameWithType.vb: IPEndPoint()
  fullName.vb: IPEndPoint()
  name.vb: IPEndPoint()
  spec.csharp:
  - uid: IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: IPEndPoint
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: IPEndPoint
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Tests.Common.TestArgs.WhatIf*
  commentId: Overload:EventStore.Core.Tests.Common.TestArgs.WhatIf
  isExternal: false
  name: WhatIf
  nameWithType: TestArgs.WhatIf
  fullName: EventStore.Core.Tests.Common.TestArgs.WhatIf
- uid: EventStore.Core.Tests.Common.TestArgs.Force*
  commentId: Overload:EventStore.Core.Tests.Common.TestArgs.Force
  isExternal: false
  name: Force
  nameWithType: TestArgs.Force
  fullName: EventStore.Core.Tests.Common.TestArgs.Force
- uid: EventStore.Core.Tests.Common.TestArgs.RunProjections*
  commentId: Overload:EventStore.Core.Tests.Common.TestArgs.RunProjections
  isExternal: false
  name: RunProjections
  nameWithType: TestArgs.RunProjections
  fullName: EventStore.Core.Tests.Common.TestArgs.RunProjections
- uid: EventStore.Common.Options.ProjectionType
  commentId: T:EventStore.Common.Options.ProjectionType
  parent: EventStore.Common.Options
  isExternal: false
  name: ProjectionType
  nameWithType: ProjectionType
  fullName: EventStore.Common.Options.ProjectionType
- uid: EventStore.Core.Tests.Common.TestArgs.HttpPort*
  commentId: Overload:EventStore.Core.Tests.Common.TestArgs.HttpPort
  isExternal: false
  name: HttpPort
  nameWithType: TestArgs.HttpPort
  fullName: EventStore.Core.Tests.Common.TestArgs.HttpPort
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Tests.Common.TestArgs.#ctor*
  commentId: Overload:EventStore.Core.Tests.Common.TestArgs.#ctor
  isExternal: false
  name: TestArgs
  nameWithType: TestArgs.TestArgs
  fullName: EventStore.Core.Tests.Common.TestArgs.TestArgs

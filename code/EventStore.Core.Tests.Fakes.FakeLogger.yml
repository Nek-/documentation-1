### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Fakes.FakeLogger
  commentId: T:EventStore.Core.Tests.Fakes.FakeLogger
  id: FakeLogger
  parent: EventStore.Core.Tests.Fakes
  children:
  - EventStore.Core.Tests.Fakes.FakeLogger.Debug(System.String)
  - EventStore.Core.Tests.Fakes.FakeLogger.Debug(System.String,System.Object[])
  - EventStore.Core.Tests.Fakes.FakeLogger.DebugException(Exception,System.String)
  - EventStore.Core.Tests.Fakes.FakeLogger.DebugException(Exception,System.String,System.Object[])
  - EventStore.Core.Tests.Fakes.FakeLogger.Error(System.String)
  - EventStore.Core.Tests.Fakes.FakeLogger.Error(System.String,System.Object[])
  - EventStore.Core.Tests.Fakes.FakeLogger.ErrorException(Exception,System.String)
  - EventStore.Core.Tests.Fakes.FakeLogger.ErrorException(Exception,System.String,System.Object[])
  - EventStore.Core.Tests.Fakes.FakeLogger.Fatal(System.String)
  - EventStore.Core.Tests.Fakes.FakeLogger.Fatal(System.String,System.Object[])
  - EventStore.Core.Tests.Fakes.FakeLogger.FatalException(Exception,System.String)
  - EventStore.Core.Tests.Fakes.FakeLogger.FatalException(Exception,System.String,System.Object[])
  - EventStore.Core.Tests.Fakes.FakeLogger.Flush(System.Nullable{TimeSpan})
  - EventStore.Core.Tests.Fakes.FakeLogger.Info(System.String)
  - EventStore.Core.Tests.Fakes.FakeLogger.Info(System.String,System.Object[])
  - EventStore.Core.Tests.Fakes.FakeLogger.InfoException(Exception,System.String)
  - EventStore.Core.Tests.Fakes.FakeLogger.InfoException(Exception,System.String,System.Object[])
  - EventStore.Core.Tests.Fakes.FakeLogger.Trace(System.String)
  - EventStore.Core.Tests.Fakes.FakeLogger.Trace(System.String,System.Object[])
  - EventStore.Core.Tests.Fakes.FakeLogger.TraceException(Exception,System.String)
  - EventStore.Core.Tests.Fakes.FakeLogger.TraceException(Exception,System.String,System.Object[])
  - EventStore.Core.Tests.Fakes.FakeLogger.Warn(System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: FakeLogger
  nameWithType: FakeLogger
  fullName: EventStore.Core.Tests.Fakes.FakeLogger
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: FakeLogger
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 5
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: 'public class FakeLogger : object, ILogger'
    content.vb: >-
      Public Class FakeLogger

          Inherits Object

          Implements ILogger
  inheritance:
  - System.Object
  implements:
  - EventStore.Common.Log.ILogger
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Fakes.FakeLogger.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Fakes.FakeLogger.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Flush(System.Nullable{TimeSpan})
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.Flush(System.Nullable{TimeSpan})
  id: Flush(System.Nullable{TimeSpan})
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: Flush(Nullable<TimeSpan>)
  nameWithType: FakeLogger.Flush(Nullable<TimeSpan>)
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Flush(System.Nullable<TimeSpan>)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Flush
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 7
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void Flush(TimeSpan? maxTimeToWait = null)
    parameters:
    - id: maxTimeToWait
      type: System.Nullable{TimeSpan}
    content.vb: Public Sub Flush(maxTimeToWait As TimeSpan? = Nothing)
  overload: EventStore.Core.Tests.Fakes.FakeLogger.Flush*
  nameWithType.vb: FakeLogger.Flush(Nullable(Of TimeSpan))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.Fakes.FakeLogger.Flush(System.Nullable(Of TimeSpan))
  name.vb: Flush(Nullable(Of TimeSpan))
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Fatal(System.String)
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.Fatal(System.String)
  id: Fatal(System.String)
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: Fatal(String)
  nameWithType: FakeLogger.Fatal(String)
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Fatal(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Fatal
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 11
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void Fatal(string text)
    parameters:
    - id: text
      type: System.String
    content.vb: Public Sub Fatal(text As String)
  overload: EventStore.Core.Tests.Fakes.FakeLogger.Fatal*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Error(System.String)
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.Error(System.String)
  id: Error(System.String)
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: Error(String)
  nameWithType: FakeLogger.Error(String)
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Error(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Error
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 15
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void Error(string text)
    parameters:
    - id: text
      type: System.String
    content.vb: Public Sub Error(text As String)
  overload: EventStore.Core.Tests.Fakes.FakeLogger.Error*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Info(System.String)
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.Info(System.String)
  id: Info(System.String)
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: Info(String)
  nameWithType: FakeLogger.Info(String)
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Info(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Info
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 19
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void Info(string text)
    parameters:
    - id: text
      type: System.String
    content.vb: Public Sub Info(text As String)
  overload: EventStore.Core.Tests.Fakes.FakeLogger.Info*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Debug(System.String)
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.Debug(System.String)
  id: Debug(System.String)
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: Debug(String)
  nameWithType: FakeLogger.Debug(String)
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Debug(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Debug
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 23
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void Debug(string text)
    parameters:
    - id: text
      type: System.String
    content.vb: Public Sub Debug(text As String)
  overload: EventStore.Core.Tests.Fakes.FakeLogger.Debug*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Trace(System.String)
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.Trace(System.String)
  id: Trace(System.String)
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: Trace(String)
  nameWithType: FakeLogger.Trace(String)
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Trace(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Trace
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 27
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void Trace(string text)
    parameters:
    - id: text
      type: System.String
    content.vb: Public Sub Trace(text As String)
  overload: EventStore.Core.Tests.Fakes.FakeLogger.Trace*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Fatal(System.String,System.Object[])
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.Fatal(System.String,System.Object[])
  id: Fatal(System.String,System.Object[])
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: Fatal(String, Object[])
  nameWithType: FakeLogger.Fatal(String, Object[])
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Fatal(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Fatal
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 31
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void Fatal(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Sub Fatal(format As String, ParamArray args As Object())
  overload: EventStore.Core.Tests.Fakes.FakeLogger.Fatal*
  nameWithType.vb: FakeLogger.Fatal(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.Fakes.FakeLogger.Fatal(System.String, System.Object())
  name.vb: Fatal(String, Object())
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Error(System.String,System.Object[])
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.Error(System.String,System.Object[])
  id: Error(System.String,System.Object[])
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: Error(String, Object[])
  nameWithType: FakeLogger.Error(String, Object[])
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Error(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Error
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 35
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void Error(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Sub Error(format As String, ParamArray args As Object())
  overload: EventStore.Core.Tests.Fakes.FakeLogger.Error*
  nameWithType.vb: FakeLogger.Error(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.Fakes.FakeLogger.Error(System.String, System.Object())
  name.vb: Error(String, Object())
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Info(System.String,System.Object[])
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.Info(System.String,System.Object[])
  id: Info(System.String,System.Object[])
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: Info(String, Object[])
  nameWithType: FakeLogger.Info(String, Object[])
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Info(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Info
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 39
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void Info(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Sub Info(format As String, ParamArray args As Object())
  overload: EventStore.Core.Tests.Fakes.FakeLogger.Info*
  nameWithType.vb: FakeLogger.Info(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.Fakes.FakeLogger.Info(System.String, System.Object())
  name.vb: Info(String, Object())
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Debug(System.String,System.Object[])
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.Debug(System.String,System.Object[])
  id: Debug(System.String,System.Object[])
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: Debug(String, Object[])
  nameWithType: FakeLogger.Debug(String, Object[])
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Debug(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Debug
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 43
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void Debug(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Sub Debug(format As String, ParamArray args As Object())
  overload: EventStore.Core.Tests.Fakes.FakeLogger.Debug*
  nameWithType.vb: FakeLogger.Debug(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.Fakes.FakeLogger.Debug(System.String, System.Object())
  name.vb: Debug(String, Object())
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Warn(System.String,System.Object[])
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.Warn(System.String,System.Object[])
  id: Warn(System.String,System.Object[])
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: Warn(String, Object[])
  nameWithType: FakeLogger.Warn(String, Object[])
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Warn(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Warn
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 47
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void Warn(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Sub Warn(format As String, ParamArray args As Object())
  overload: EventStore.Core.Tests.Fakes.FakeLogger.Warn*
  nameWithType.vb: FakeLogger.Warn(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.Fakes.FakeLogger.Warn(System.String, System.Object())
  name.vb: Warn(String, Object())
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Trace(System.String,System.Object[])
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.Trace(System.String,System.Object[])
  id: Trace(System.String,System.Object[])
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: Trace(String, Object[])
  nameWithType: FakeLogger.Trace(String, Object[])
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Trace(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Trace
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 51
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void Trace(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Sub Trace(format As String, ParamArray args As Object())
  overload: EventStore.Core.Tests.Fakes.FakeLogger.Trace*
  nameWithType.vb: FakeLogger.Trace(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.Fakes.FakeLogger.Trace(System.String, System.Object())
  name.vb: Trace(String, Object())
- uid: EventStore.Core.Tests.Fakes.FakeLogger.FatalException(Exception,System.String)
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.FatalException(Exception,System.String)
  id: FatalException(Exception,System.String)
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: FatalException(Exception, String)
  nameWithType: FakeLogger.FatalException(Exception, String)
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.FatalException(Exception, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: FatalException
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 55
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void FatalException(Exception exc, string text)
    parameters:
    - id: exc
      type: Exception
    - id: text
      type: System.String
    content.vb: Public Sub FatalException(exc As Exception, text As String)
  overload: EventStore.Core.Tests.Fakes.FakeLogger.FatalException*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Fakes.FakeLogger.ErrorException(Exception,System.String)
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.ErrorException(Exception,System.String)
  id: ErrorException(Exception,System.String)
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: ErrorException(Exception, String)
  nameWithType: FakeLogger.ErrorException(Exception, String)
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.ErrorException(Exception, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ErrorException
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 59
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void ErrorException(Exception exc, string text)
    parameters:
    - id: exc
      type: Exception
    - id: text
      type: System.String
    content.vb: Public Sub ErrorException(exc As Exception, text As String)
  overload: EventStore.Core.Tests.Fakes.FakeLogger.ErrorException*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Fakes.FakeLogger.InfoException(Exception,System.String)
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.InfoException(Exception,System.String)
  id: InfoException(Exception,System.String)
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: InfoException(Exception, String)
  nameWithType: FakeLogger.InfoException(Exception, String)
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.InfoException(Exception, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InfoException
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 63
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void InfoException(Exception exc, string text)
    parameters:
    - id: exc
      type: Exception
    - id: text
      type: System.String
    content.vb: Public Sub InfoException(exc As Exception, text As String)
  overload: EventStore.Core.Tests.Fakes.FakeLogger.InfoException*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Fakes.FakeLogger.DebugException(Exception,System.String)
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.DebugException(Exception,System.String)
  id: DebugException(Exception,System.String)
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: DebugException(Exception, String)
  nameWithType: FakeLogger.DebugException(Exception, String)
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.DebugException(Exception, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DebugException
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 67
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void DebugException(Exception exc, string text)
    parameters:
    - id: exc
      type: Exception
    - id: text
      type: System.String
    content.vb: Public Sub DebugException(exc As Exception, text As String)
  overload: EventStore.Core.Tests.Fakes.FakeLogger.DebugException*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Fakes.FakeLogger.TraceException(Exception,System.String)
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.TraceException(Exception,System.String)
  id: TraceException(Exception,System.String)
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: TraceException(Exception, String)
  nameWithType: FakeLogger.TraceException(Exception, String)
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.TraceException(Exception, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TraceException
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 71
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void TraceException(Exception exc, string text)
    parameters:
    - id: exc
      type: Exception
    - id: text
      type: System.String
    content.vb: Public Sub TraceException(exc As Exception, text As String)
  overload: EventStore.Core.Tests.Fakes.FakeLogger.TraceException*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Fakes.FakeLogger.FatalException(Exception,System.String,System.Object[])
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.FatalException(Exception,System.String,System.Object[])
  id: FatalException(Exception,System.String,System.Object[])
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: FatalException(Exception, String, Object[])
  nameWithType: FakeLogger.FatalException(Exception, String, Object[])
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.FatalException(Exception, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: FatalException
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 75
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void FatalException(Exception exc, string format, params object[] args)
    parameters:
    - id: exc
      type: Exception
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Sub FatalException(exc As Exception, format As String, ParamArray args As Object())
  overload: EventStore.Core.Tests.Fakes.FakeLogger.FatalException*
  nameWithType.vb: FakeLogger.FatalException(Exception, String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.Fakes.FakeLogger.FatalException(Exception, System.String, System.Object())
  name.vb: FatalException(Exception, String, Object())
- uid: EventStore.Core.Tests.Fakes.FakeLogger.ErrorException(Exception,System.String,System.Object[])
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.ErrorException(Exception,System.String,System.Object[])
  id: ErrorException(Exception,System.String,System.Object[])
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: ErrorException(Exception, String, Object[])
  nameWithType: FakeLogger.ErrorException(Exception, String, Object[])
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.ErrorException(Exception, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ErrorException
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 79
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void ErrorException(Exception exc, string format, params object[] args)
    parameters:
    - id: exc
      type: Exception
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Sub ErrorException(exc As Exception, format As String, ParamArray args As Object())
  overload: EventStore.Core.Tests.Fakes.FakeLogger.ErrorException*
  nameWithType.vb: FakeLogger.ErrorException(Exception, String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.Fakes.FakeLogger.ErrorException(Exception, System.String, System.Object())
  name.vb: ErrorException(Exception, String, Object())
- uid: EventStore.Core.Tests.Fakes.FakeLogger.InfoException(Exception,System.String,System.Object[])
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.InfoException(Exception,System.String,System.Object[])
  id: InfoException(Exception,System.String,System.Object[])
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: InfoException(Exception, String, Object[])
  nameWithType: FakeLogger.InfoException(Exception, String, Object[])
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.InfoException(Exception, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InfoException
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 83
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void InfoException(Exception exc, string format, params object[] args)
    parameters:
    - id: exc
      type: Exception
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Sub InfoException(exc As Exception, format As String, ParamArray args As Object())
  overload: EventStore.Core.Tests.Fakes.FakeLogger.InfoException*
  nameWithType.vb: FakeLogger.InfoException(Exception, String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.Fakes.FakeLogger.InfoException(Exception, System.String, System.Object())
  name.vb: InfoException(Exception, String, Object())
- uid: EventStore.Core.Tests.Fakes.FakeLogger.DebugException(Exception,System.String,System.Object[])
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.DebugException(Exception,System.String,System.Object[])
  id: DebugException(Exception,System.String,System.Object[])
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: DebugException(Exception, String, Object[])
  nameWithType: FakeLogger.DebugException(Exception, String, Object[])
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.DebugException(Exception, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DebugException
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 87
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void DebugException(Exception exc, string format, params object[] args)
    parameters:
    - id: exc
      type: Exception
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Sub DebugException(exc As Exception, format As String, ParamArray args As Object())
  overload: EventStore.Core.Tests.Fakes.FakeLogger.DebugException*
  nameWithType.vb: FakeLogger.DebugException(Exception, String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.Fakes.FakeLogger.DebugException(Exception, System.String, System.Object())
  name.vb: DebugException(Exception, String, Object())
- uid: EventStore.Core.Tests.Fakes.FakeLogger.TraceException(Exception,System.String,System.Object[])
  commentId: M:EventStore.Core.Tests.Fakes.FakeLogger.TraceException(Exception,System.String,System.Object[])
  id: TraceException(Exception,System.String,System.Object[])
  parent: EventStore.Core.Tests.Fakes.FakeLogger
  langs:
  - csharp
  - vb
  name: TraceException(Exception, String, Object[])
  nameWithType: FakeLogger.TraceException(Exception, String, Object[])
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.TraceException(Exception, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Fakes/FakeLogger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TraceException
    path: ../EventStore/src/EventStore.Core.Tests/Fakes/FakeLogger.cs
    startLine: 91
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Fakes
  syntax:
    content: public void TraceException(Exception exc, string format, params object[] args)
    parameters:
    - id: exc
      type: Exception
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Sub TraceException(exc As Exception, format As String, ParamArray args As Object())
  overload: EventStore.Core.Tests.Fakes.FakeLogger.TraceException*
  nameWithType.vb: FakeLogger.TraceException(Exception, String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.Fakes.FakeLogger.TraceException(Exception, System.String, System.Object())
  name.vb: TraceException(Exception, String, Object())
references:
- uid: EventStore.Core.Tests.Fakes
  commentId: N:EventStore.Core.Tests.Fakes
  isExternal: false
  name: EventStore.Core.Tests.Fakes
  nameWithType: EventStore.Core.Tests.Fakes
  fullName: EventStore.Core.Tests.Fakes
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Common.Log.ILogger
  commentId: T:EventStore.Common.Log.ILogger
  parent: EventStore.Common.Log
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: EventStore.Common.Log.ILogger
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Fakes.FakeLogger.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<FakeLogger>()
  nameWithType: ProtobufExtensions.Serialize<FakeLogger>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Fakes.FakeLogger>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of FakeLogger)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Fakes.FakeLogger)()
  name.vb: Serialize(Of FakeLogger)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<FakeLogger>
    nameWithType: ProtobufExtensions.Serialize<FakeLogger>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Fakes.FakeLogger>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of FakeLogger)
    nameWithType: ProtobufExtensions.Serialize(Of FakeLogger)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Fakes.FakeLogger)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Fakes.FakeLogger.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<FakeLogger>()
  nameWithType: ProtobufExtensions.SerializeToArray<FakeLogger>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Fakes.FakeLogger>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of FakeLogger)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Fakes.FakeLogger)()
  name.vb: SerializeToArray(Of FakeLogger)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<FakeLogger>
    nameWithType: ProtobufExtensions.SerializeToArray<FakeLogger>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Fakes.FakeLogger>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of FakeLogger)
    nameWithType: ProtobufExtensions.SerializeToArray(Of FakeLogger)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Fakes.FakeLogger)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Log
  commentId: N:EventStore.Common.Log
  isExternal: false
  name: EventStore.Common.Log
  nameWithType: EventStore.Common.Log
  fullName: EventStore.Common.Log
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Flush*
  commentId: Overload:EventStore.Core.Tests.Fakes.FakeLogger.Flush
  isExternal: false
  name: Flush
  nameWithType: FakeLogger.Flush
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Flush
- uid: System.Nullable{TimeSpan}
  commentId: '!:System.Nullable{TimeSpan}'
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Fatal*
  commentId: Overload:EventStore.Core.Tests.Fakes.FakeLogger.Fatal
  isExternal: false
  name: Fatal
  nameWithType: FakeLogger.Fatal
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Fatal
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Error*
  commentId: Overload:EventStore.Core.Tests.Fakes.FakeLogger.Error
  isExternal: false
  name: Error
  nameWithType: FakeLogger.Error
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Error
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Info*
  commentId: Overload:EventStore.Core.Tests.Fakes.FakeLogger.Info
  isExternal: false
  name: Info
  nameWithType: FakeLogger.Info
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Info
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Debug*
  commentId: Overload:EventStore.Core.Tests.Fakes.FakeLogger.Debug
  isExternal: false
  name: Debug
  nameWithType: FakeLogger.Debug
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Debug
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Trace*
  commentId: Overload:EventStore.Core.Tests.Fakes.FakeLogger.Trace
  isExternal: false
  name: Trace
  nameWithType: FakeLogger.Trace
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Trace
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Tests.Fakes.FakeLogger.Warn*
  commentId: Overload:EventStore.Core.Tests.Fakes.FakeLogger.Warn
  isExternal: false
  name: Warn
  nameWithType: FakeLogger.Warn
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.Warn
- uid: EventStore.Core.Tests.Fakes.FakeLogger.FatalException*
  commentId: Overload:EventStore.Core.Tests.Fakes.FakeLogger.FatalException
  isExternal: false
  name: FatalException
  nameWithType: FakeLogger.FatalException
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.FatalException
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: EventStore.Core.Tests.Fakes.FakeLogger.ErrorException*
  commentId: Overload:EventStore.Core.Tests.Fakes.FakeLogger.ErrorException
  isExternal: false
  name: ErrorException
  nameWithType: FakeLogger.ErrorException
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.ErrorException
- uid: EventStore.Core.Tests.Fakes.FakeLogger.InfoException*
  commentId: Overload:EventStore.Core.Tests.Fakes.FakeLogger.InfoException
  isExternal: false
  name: InfoException
  nameWithType: FakeLogger.InfoException
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.InfoException
- uid: EventStore.Core.Tests.Fakes.FakeLogger.DebugException*
  commentId: Overload:EventStore.Core.Tests.Fakes.FakeLogger.DebugException
  isExternal: false
  name: DebugException
  nameWithType: FakeLogger.DebugException
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.DebugException
- uid: EventStore.Core.Tests.Fakes.FakeLogger.TraceException*
  commentId: Overload:EventStore.Core.Tests.Fakes.FakeLogger.TraceException
  isExternal: false
  name: TraceException
  nameWithType: FakeLogger.TraceException
  fullName: EventStore.Core.Tests.Fakes.FakeLogger.TraceException

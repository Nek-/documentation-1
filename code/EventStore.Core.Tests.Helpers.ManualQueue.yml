### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Helpers.ManualQueue
  commentId: T:EventStore.Core.Tests.Helpers.ManualQueue
  id: ManualQueue
  parent: EventStore.Core.Tests.Helpers
  children:
  - EventStore.Core.Tests.Helpers.ManualQueue.#ctor(EventStore.Core.Bus.IBus,EventStore.Core.Services.TimerService.ITimeProvider)
  - EventStore.Core.Tests.Helpers.ManualQueue.DisableTimer
  - EventStore.Core.Tests.Helpers.ManualQueue.EnableTimer(System.Boolean)
  - EventStore.Core.Tests.Helpers.ManualQueue.Handle(EventStore.Core.Services.TimerService.TimerMessage.Schedule)
  - EventStore.Core.Tests.Helpers.ManualQueue.Process
  - EventStore.Core.Tests.Helpers.ManualQueue.ProcessNonTimer
  - EventStore.Core.Tests.Helpers.ManualQueue.ProcessTimer
  - EventStore.Core.Tests.Helpers.ManualQueue.Publish(EventStore.Core.Messaging.Message)
  langs:
  - csharp
  - vb
  name: ManualQueue
  nameWithType: ManualQueue
  fullName: EventStore.Core.Tests.Helpers.ManualQueue
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/ManualQueue.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ManualQueue
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/ManualQueue.cs
    startLine: 9
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: 'public class ManualQueue : object, IPublisher, IHandle<TimerMessage.Schedule>'
    content.vb: >-
      Public Class ManualQueue

          Inherits Object

          Implements IPublisher, IHandle(Of TimerMessage.Schedule)
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Bus.IPublisher
  - EventStore.Core.Bus.IHandle{EventStore.Core.Services.TimerService.TimerMessage.Schedule}
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Helpers.ManualQueue.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Helpers.ManualQueue.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Helpers.ManualQueue.#ctor(EventStore.Core.Bus.IBus,EventStore.Core.Services.TimerService.ITimeProvider)
  commentId: M:EventStore.Core.Tests.Helpers.ManualQueue.#ctor(EventStore.Core.Bus.IBus,EventStore.Core.Services.TimerService.ITimeProvider)
  id: '#ctor(EventStore.Core.Bus.IBus,EventStore.Core.Services.TimerService.ITimeProvider)'
  parent: EventStore.Core.Tests.Helpers.ManualQueue
  langs:
  - csharp
  - vb
  name: ManualQueue(IBus, ITimeProvider)
  nameWithType: ManualQueue.ManualQueue(IBus, ITimeProvider)
  fullName: EventStore.Core.Tests.Helpers.ManualQueue.ManualQueue(EventStore.Core.Bus.IBus, EventStore.Core.Services.TimerService.ITimeProvider)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/ManualQueue.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/ManualQueue.cs
    startLine: 17
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public ManualQueue(IBus bus, ITimeProvider time)
    parameters:
    - id: bus
      type: EventStore.Core.Bus.IBus
    - id: time
      type: EventStore.Core.Services.TimerService.ITimeProvider
    content.vb: Public Sub New(bus As IBus, time As ITimeProvider)
  overload: EventStore.Core.Tests.Helpers.ManualQueue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Helpers.ManualQueue.Publish(EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Tests.Helpers.ManualQueue.Publish(EventStore.Core.Messaging.Message)
  id: Publish(EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Tests.Helpers.ManualQueue
  langs:
  - csharp
  - vb
  name: Publish(Message)
  nameWithType: ManualQueue.Publish(Message)
  fullName: EventStore.Core.Tests.Helpers.ManualQueue.Publish(EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/ManualQueue.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Publish
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/ManualQueue.cs
    startLine: 24
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public void Publish(Message message)
    parameters:
    - id: message
      type: EventStore.Core.Messaging.Message
    content.vb: Public Sub Publish(message As Message)
  overload: EventStore.Core.Tests.Helpers.ManualQueue.Publish*
  implements:
  - EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Helpers.ManualQueue.Process
  commentId: M:EventStore.Core.Tests.Helpers.ManualQueue.Process
  id: Process
  parent: EventStore.Core.Tests.Helpers.ManualQueue
  langs:
  - csharp
  - vb
  name: Process()
  nameWithType: ManualQueue.Process()
  fullName: EventStore.Core.Tests.Helpers.ManualQueue.Process()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/ManualQueue.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Process
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/ManualQueue.cs
    startLine: 29
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public int Process()
    return:
      type: System.Int32
    content.vb: Public Function Process As Integer
  overload: EventStore.Core.Tests.Helpers.ManualQueue.Process*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Helpers.ManualQueue.ProcessNonTimer
  commentId: M:EventStore.Core.Tests.Helpers.ManualQueue.ProcessNonTimer
  id: ProcessNonTimer
  parent: EventStore.Core.Tests.Helpers.ManualQueue
  langs:
  - csharp
  - vb
  name: ProcessNonTimer()
  nameWithType: ManualQueue.ProcessNonTimer()
  fullName: EventStore.Core.Tests.Helpers.ManualQueue.ProcessNonTimer()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/ManualQueue.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ProcessNonTimer
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/ManualQueue.cs
    startLine: 35
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public int ProcessNonTimer()
    return:
      type: System.Int32
    content.vb: Public Function ProcessNonTimer As Integer
  overload: EventStore.Core.Tests.Helpers.ManualQueue.ProcessNonTimer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Helpers.ManualQueue.ProcessTimer
  commentId: M:EventStore.Core.Tests.Helpers.ManualQueue.ProcessTimer
  id: ProcessTimer
  parent: EventStore.Core.Tests.Helpers.ManualQueue
  langs:
  - csharp
  - vb
  name: ProcessTimer()
  nameWithType: ManualQueue.ProcessTimer()
  fullName: EventStore.Core.Tests.Helpers.ManualQueue.ProcessTimer()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/ManualQueue.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ProcessTimer
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/ManualQueue.cs
    startLine: 49
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public void ProcessTimer()
    content.vb: Public Sub ProcessTimer
  overload: EventStore.Core.Tests.Helpers.ManualQueue.ProcessTimer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Helpers.ManualQueue.DisableTimer
  commentId: M:EventStore.Core.Tests.Helpers.ManualQueue.DisableTimer
  id: DisableTimer
  parent: EventStore.Core.Tests.Helpers.ManualQueue
  langs:
  - csharp
  - vb
  name: DisableTimer()
  nameWithType: ManualQueue.DisableTimer()
  fullName: EventStore.Core.Tests.Helpers.ManualQueue.DisableTimer()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/ManualQueue.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DisableTimer
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/ManualQueue.cs
    startLine: 65
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public void DisableTimer()
    content.vb: Public Sub DisableTimer
  overload: EventStore.Core.Tests.Helpers.ManualQueue.DisableTimer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Helpers.ManualQueue.EnableTimer(System.Boolean)
  commentId: M:EventStore.Core.Tests.Helpers.ManualQueue.EnableTimer(System.Boolean)
  id: EnableTimer(System.Boolean)
  parent: EventStore.Core.Tests.Helpers.ManualQueue
  langs:
  - csharp
  - vb
  name: EnableTimer(Boolean)
  nameWithType: ManualQueue.EnableTimer(Boolean)
  fullName: EventStore.Core.Tests.Helpers.ManualQueue.EnableTimer(System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/ManualQueue.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EnableTimer
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/ManualQueue.cs
    startLine: 70
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public void EnableTimer(bool process = true)
    parameters:
    - id: process
      type: System.Boolean
    content.vb: Public Sub EnableTimer(process As Boolean = True)
  overload: EventStore.Core.Tests.Helpers.ManualQueue.EnableTimer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Helpers.ManualQueue.Handle(EventStore.Core.Services.TimerService.TimerMessage.Schedule)
  commentId: M:EventStore.Core.Tests.Helpers.ManualQueue.Handle(EventStore.Core.Services.TimerService.TimerMessage.Schedule)
  id: Handle(EventStore.Core.Services.TimerService.TimerMessage.Schedule)
  parent: EventStore.Core.Tests.Helpers.ManualQueue
  langs:
  - csharp
  - vb
  name: Handle(TimerMessage.Schedule)
  nameWithType: ManualQueue.Handle(TimerMessage.Schedule)
  fullName: EventStore.Core.Tests.Helpers.ManualQueue.Handle(EventStore.Core.Services.TimerService.TimerMessage.Schedule)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/ManualQueue.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/ManualQueue.cs
    startLine: 89
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public void Handle(TimerMessage.Schedule message)
    parameters:
    - id: message
      type: EventStore.Core.Services.TimerService.TimerMessage.Schedule
    content.vb: Public Sub Handle(message As TimerMessage.Schedule)
  overload: EventStore.Core.Tests.Helpers.ManualQueue.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Services.TimerService.TimerMessage.Schedule}.Handle(EventStore.Core.Services.TimerService.TimerMessage.Schedule)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  isExternal: false
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Services.TimerService.TimerMessage.Schedule}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Services.TimerService.TimerMessage.Schedule}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<TimerMessage.Schedule>
  nameWithType: IHandle<TimerMessage.Schedule>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Services.TimerService.TimerMessage.Schedule>
  nameWithType.vb: IHandle(Of TimerMessage.Schedule)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Services.TimerService.TimerMessage.Schedule)
  name.vb: IHandle(Of TimerMessage.Schedule)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.TimerService.TimerMessage.Schedule
    name: TimerMessage.Schedule
    nameWithType: TimerMessage.Schedule
    fullName: EventStore.Core.Services.TimerService.TimerMessage.Schedule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.TimerService.TimerMessage.Schedule
    name: TimerMessage.Schedule
    nameWithType: TimerMessage.Schedule
    fullName: EventStore.Core.Services.TimerService.TimerMessage.Schedule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.ManualQueue.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ManualQueue>()
  nameWithType: ProtobufExtensions.Serialize<ManualQueue>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Helpers.ManualQueue>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ManualQueue)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Helpers.ManualQueue)()
  name.vb: Serialize(Of ManualQueue)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ManualQueue>
    nameWithType: ProtobufExtensions.Serialize<ManualQueue>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Helpers.ManualQueue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ManualQueue)
    nameWithType: ProtobufExtensions.Serialize(Of ManualQueue)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Helpers.ManualQueue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.ManualQueue.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ManualQueue>()
  nameWithType: ProtobufExtensions.SerializeToArray<ManualQueue>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Helpers.ManualQueue>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ManualQueue)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Helpers.ManualQueue)()
  name.vb: SerializeToArray(Of ManualQueue)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ManualQueue>
    nameWithType: ProtobufExtensions.SerializeToArray<ManualQueue>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Helpers.ManualQueue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ManualQueue)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ManualQueue)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Helpers.ManualQueue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  isExternal: false
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Helpers.ManualQueue.#ctor*
  commentId: Overload:EventStore.Core.Tests.Helpers.ManualQueue.#ctor
  isExternal: false
  name: ManualQueue
  nameWithType: ManualQueue.ManualQueue
  fullName: EventStore.Core.Tests.Helpers.ManualQueue.ManualQueue
- uid: EventStore.Core.Bus.IBus
  commentId: T:EventStore.Core.Bus.IBus
  parent: EventStore.Core.Bus
  isExternal: false
  name: IBus
  nameWithType: IBus
  fullName: EventStore.Core.Bus.IBus
- uid: EventStore.Core.Services.TimerService.ITimeProvider
  commentId: T:EventStore.Core.Services.TimerService.ITimeProvider
  parent: EventStore.Core.Services.TimerService
  isExternal: false
  name: ITimeProvider
  nameWithType: ITimeProvider
  fullName: EventStore.Core.Services.TimerService.ITimeProvider
- uid: EventStore.Core.Services.TimerService
  commentId: N:EventStore.Core.Services.TimerService
  isExternal: false
  name: EventStore.Core.Services.TimerService
  nameWithType: EventStore.Core.Services.TimerService
  fullName: EventStore.Core.Services.TimerService
- uid: EventStore.Core.Tests.Helpers.ManualQueue.Publish*
  commentId: Overload:EventStore.Core.Tests.Helpers.ManualQueue.Publish
  isExternal: false
  name: Publish
  nameWithType: ManualQueue.Publish
  fullName: EventStore.Core.Tests.Helpers.ManualQueue.Publish
- uid: EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Bus.IPublisher
  isExternal: false
  name: Publish(Message)
  nameWithType: IPublisher.Publish(Message)
  fullName: EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
  spec.csharp:
  - uid: EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
    name: Publish
    nameWithType: IPublisher.Publish
    fullName: EventStore.Core.Bus.IPublisher.Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
    name: Publish
    nameWithType: IPublisher.Publish
    fullName: EventStore.Core.Bus.IPublisher.Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Core.Tests.Helpers.ManualQueue.Process*
  commentId: Overload:EventStore.Core.Tests.Helpers.ManualQueue.Process
  isExternal: false
  name: Process
  nameWithType: ManualQueue.Process
  fullName: EventStore.Core.Tests.Helpers.ManualQueue.Process
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Tests.Helpers.ManualQueue.ProcessNonTimer*
  commentId: Overload:EventStore.Core.Tests.Helpers.ManualQueue.ProcessNonTimer
  isExternal: false
  name: ProcessNonTimer
  nameWithType: ManualQueue.ProcessNonTimer
  fullName: EventStore.Core.Tests.Helpers.ManualQueue.ProcessNonTimer
- uid: EventStore.Core.Tests.Helpers.ManualQueue.ProcessTimer*
  commentId: Overload:EventStore.Core.Tests.Helpers.ManualQueue.ProcessTimer
  isExternal: false
  name: ProcessTimer
  nameWithType: ManualQueue.ProcessTimer
  fullName: EventStore.Core.Tests.Helpers.ManualQueue.ProcessTimer
- uid: EventStore.Core.Tests.Helpers.ManualQueue.DisableTimer*
  commentId: Overload:EventStore.Core.Tests.Helpers.ManualQueue.DisableTimer
  isExternal: false
  name: DisableTimer
  nameWithType: ManualQueue.DisableTimer
  fullName: EventStore.Core.Tests.Helpers.ManualQueue.DisableTimer
- uid: EventStore.Core.Tests.Helpers.ManualQueue.EnableTimer*
  commentId: Overload:EventStore.Core.Tests.Helpers.ManualQueue.EnableTimer
  isExternal: false
  name: EnableTimer
  nameWithType: ManualQueue.EnableTimer
  fullName: EventStore.Core.Tests.Helpers.ManualQueue.EnableTimer
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Tests.Helpers.ManualQueue.Handle*
  commentId: Overload:EventStore.Core.Tests.Helpers.ManualQueue.Handle
  isExternal: false
  name: Handle
  nameWithType: ManualQueue.Handle
  fullName: EventStore.Core.Tests.Helpers.ManualQueue.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Services.TimerService.TimerMessage.Schedule}.Handle(EventStore.Core.Services.TimerService.TimerMessage.Schedule)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Services.TimerService.TimerMessage.Schedule}.Handle(EventStore.Core.Services.TimerService.TimerMessage.Schedule)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Services.TimerService.TimerMessage.Schedule}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(TimerMessage.Schedule)
  nameWithType: IHandle<TimerMessage.Schedule>.Handle(TimerMessage.Schedule)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Services.TimerService.TimerMessage.Schedule>.Handle(EventStore.Core.Services.TimerService.TimerMessage.Schedule)
  nameWithType.vb: IHandle(Of TimerMessage.Schedule).Handle(TimerMessage.Schedule)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Services.TimerService.TimerMessage.Schedule).Handle(EventStore.Core.Services.TimerService.TimerMessage.Schedule)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<TimerMessage.Schedule>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Services.TimerService.TimerMessage.Schedule>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.TimerService.TimerMessage.Schedule
    name: TimerMessage.Schedule
    nameWithType: TimerMessage.Schedule
    fullName: EventStore.Core.Services.TimerService.TimerMessage.Schedule
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of TimerMessage.Schedule).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Services.TimerService.TimerMessage.Schedule).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.TimerService.TimerMessage.Schedule
    name: TimerMessage.Schedule
    nameWithType: TimerMessage.Schedule
    fullName: EventStore.Core.Services.TimerService.TimerMessage.Schedule
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.TimerService.TimerMessage.Schedule
  commentId: T:EventStore.Core.Services.TimerService.TimerMessage.Schedule
  parent: EventStore.Core.Services.TimerService
  isExternal: false
  name: TimerMessage.Schedule
  nameWithType: TimerMessage.Schedule
  fullName: EventStore.Core.Services.TimerService.TimerMessage.Schedule
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  isExternal: false
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

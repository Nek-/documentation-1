### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode
  commentId: T:EventStore.Core.Tests.Helpers.MiniClusterNode
  id: MiniClusterNode
  parent: EventStore.Core.Tests.Helpers
  children:
  - EventStore.Core.Tests.Helpers.MiniClusterNode.#ctor(System.String,System.Int32,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint[],EventStore.Core.ISubsystem[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean)
  - EventStore.Core.Tests.Helpers.MiniClusterNode.CachedChunkSize
  - EventStore.Core.Tests.Helpers.MiniClusterNode.ChunkSize
  - EventStore.Core.Tests.Helpers.MiniClusterNode.Db
  - EventStore.Core.Tests.Helpers.MiniClusterNode.DebugIndex
  - EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalHttpEndPoint
  - EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalTcpEndPoint
  - EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalTcpSecEndPoint
  - EventStore.Core.Tests.Helpers.MiniClusterNode.InternalHttpEndPoint
  - EventStore.Core.Tests.Helpers.MiniClusterNode.InternalTcpEndPoint
  - EventStore.Core.Tests.Helpers.MiniClusterNode.InternalTcpSecEndPoint
  - EventStore.Core.Tests.Helpers.MiniClusterNode.Node
  - EventStore.Core.Tests.Helpers.MiniClusterNode.NodeState
  - EventStore.Core.Tests.Helpers.MiniClusterNode.RunCount
  - EventStore.Core.Tests.Helpers.MiniClusterNode.RunningTime
  - EventStore.Core.Tests.Helpers.MiniClusterNode.Shutdown(System.Boolean,System.Boolean)
  - EventStore.Core.Tests.Helpers.MiniClusterNode.Start
  - EventStore.Core.Tests.Helpers.MiniClusterNode.StartedEvent
  - EventStore.Core.Tests.Helpers.MiniClusterNode.StartingTime
  - EventStore.Core.Tests.Helpers.MiniClusterNode.StoppingTime
  langs:
  - csharp
  - vb
  name: MiniClusterNode
  nameWithType: MiniClusterNode
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MiniClusterNode
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 28
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: 'public class MiniClusterNode : object'
    content.vb: >-
      Public Class MiniClusterNode

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Helpers.MiniClusterNode.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Helpers.MiniClusterNode.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.RunCount
  commentId: F:EventStore.Core.Tests.Helpers.MiniClusterNode.RunCount
  id: RunCount
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: RunCount
  nameWithType: MiniClusterNode.RunCount
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.RunCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RunCount
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 30
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public static int RunCount
    return:
      type: System.Int32
    content.vb: Public Shared RunCount As Integer
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.RunningTime
  commentId: F:EventStore.Core.Tests.Helpers.MiniClusterNode.RunningTime
  id: RunningTime
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: RunningTime
  nameWithType: MiniClusterNode.RunningTime
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.RunningTime
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RunningTime
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 31
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public static readonly Stopwatch RunningTime
    return:
      type: Stopwatch
    content.vb: Public Shared ReadOnly RunningTime As Stopwatch
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.StartingTime
  commentId: F:EventStore.Core.Tests.Helpers.MiniClusterNode.StartingTime
  id: StartingTime
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: StartingTime
  nameWithType: MiniClusterNode.StartingTime
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.StartingTime
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StartingTime
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 32
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public static readonly Stopwatch StartingTime
    return:
      type: Stopwatch
    content.vb: Public Shared ReadOnly StartingTime As Stopwatch
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.StoppingTime
  commentId: F:EventStore.Core.Tests.Helpers.MiniClusterNode.StoppingTime
  id: StoppingTime
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: StoppingTime
  nameWithType: MiniClusterNode.StoppingTime
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.StoppingTime
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StoppingTime
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 33
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public static readonly Stopwatch StoppingTime
    return:
      type: Stopwatch
    content.vb: Public Shared ReadOnly StoppingTime As Stopwatch
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.ChunkSize
  commentId: F:EventStore.Core.Tests.Helpers.MiniClusterNode.ChunkSize
  id: ChunkSize
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: ChunkSize
  nameWithType: MiniClusterNode.ChunkSize
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.ChunkSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ChunkSize
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 35
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public const int ChunkSize = null
    return:
      type: System.Int32
    content.vb: Public Const ChunkSize As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.CachedChunkSize
  commentId: F:EventStore.Core.Tests.Helpers.MiniClusterNode.CachedChunkSize
  id: CachedChunkSize
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: CachedChunkSize
  nameWithType: MiniClusterNode.CachedChunkSize
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.CachedChunkSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CachedChunkSize
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 36
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public const int CachedChunkSize = null
    return:
      type: System.Int32
    content.vb: Public Const CachedChunkSize As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.InternalTcpEndPoint
  commentId: P:EventStore.Core.Tests.Helpers.MiniClusterNode.InternalTcpEndPoint
  id: InternalTcpEndPoint
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: InternalTcpEndPoint
  nameWithType: MiniClusterNode.InternalTcpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.InternalTcpEndPoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InternalTcpEndPoint
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 40
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public IPEndPoint InternalTcpEndPoint { get; }
    parameters: []
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly Property InternalTcpEndPoint As IPEndPoint
  overload: EventStore.Core.Tests.Helpers.MiniClusterNode.InternalTcpEndPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.InternalTcpSecEndPoint
  commentId: P:EventStore.Core.Tests.Helpers.MiniClusterNode.InternalTcpSecEndPoint
  id: InternalTcpSecEndPoint
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: InternalTcpSecEndPoint
  nameWithType: MiniClusterNode.InternalTcpSecEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.InternalTcpSecEndPoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InternalTcpSecEndPoint
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 41
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public IPEndPoint InternalTcpSecEndPoint { get; }
    parameters: []
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly Property InternalTcpSecEndPoint As IPEndPoint
  overload: EventStore.Core.Tests.Helpers.MiniClusterNode.InternalTcpSecEndPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.InternalHttpEndPoint
  commentId: P:EventStore.Core.Tests.Helpers.MiniClusterNode.InternalHttpEndPoint
  id: InternalHttpEndPoint
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: InternalHttpEndPoint
  nameWithType: MiniClusterNode.InternalHttpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.InternalHttpEndPoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InternalHttpEndPoint
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 42
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public IPEndPoint InternalHttpEndPoint { get; }
    parameters: []
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly Property InternalHttpEndPoint As IPEndPoint
  overload: EventStore.Core.Tests.Helpers.MiniClusterNode.InternalHttpEndPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalTcpEndPoint
  commentId: P:EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalTcpEndPoint
  id: ExternalTcpEndPoint
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: ExternalTcpEndPoint
  nameWithType: MiniClusterNode.ExternalTcpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalTcpEndPoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExternalTcpEndPoint
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 43
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public IPEndPoint ExternalTcpEndPoint { get; }
    parameters: []
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly Property ExternalTcpEndPoint As IPEndPoint
  overload: EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalTcpEndPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalTcpSecEndPoint
  commentId: P:EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalTcpSecEndPoint
  id: ExternalTcpSecEndPoint
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: ExternalTcpSecEndPoint
  nameWithType: MiniClusterNode.ExternalTcpSecEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalTcpSecEndPoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExternalTcpSecEndPoint
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 44
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public IPEndPoint ExternalTcpSecEndPoint { get; }
    parameters: []
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly Property ExternalTcpSecEndPoint As IPEndPoint
  overload: EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalTcpSecEndPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalHttpEndPoint
  commentId: P:EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalHttpEndPoint
  id: ExternalHttpEndPoint
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: ExternalHttpEndPoint
  nameWithType: MiniClusterNode.ExternalHttpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalHttpEndPoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExternalHttpEndPoint
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 45
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public IPEndPoint ExternalHttpEndPoint { get; }
    parameters: []
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly Property ExternalHttpEndPoint As IPEndPoint
  overload: EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalHttpEndPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.DebugIndex
  commentId: F:EventStore.Core.Tests.Helpers.MiniClusterNode.DebugIndex
  id: DebugIndex
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: DebugIndex
  nameWithType: MiniClusterNode.DebugIndex
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.DebugIndex
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DebugIndex
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 47
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public readonly int DebugIndex
    return:
      type: System.Int32
    content.vb: Public ReadOnly DebugIndex As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.Node
  commentId: F:EventStore.Core.Tests.Helpers.MiniClusterNode.Node
  id: Node
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: Node
  nameWithType: MiniClusterNode.Node
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.Node
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Node
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 49
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public readonly ClusterVNode Node
    return:
      type: EventStore.Core.ClusterVNode
    content.vb: Public ReadOnly Node As ClusterVNode
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.Db
  commentId: F:EventStore.Core.Tests.Helpers.MiniClusterNode.Db
  id: Db
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: Db
  nameWithType: MiniClusterNode.Db
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.Db
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Db
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 50
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public readonly TFChunkDb Db
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunkDb
    content.vb: Public ReadOnly Db As TFChunkDb
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.StartedEvent
  commentId: F:EventStore.Core.Tests.Helpers.MiniClusterNode.StartedEvent
  id: StartedEvent
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: StartedEvent
  nameWithType: MiniClusterNode.StartedEvent
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.StartedEvent
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StartedEvent
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 52
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public ManualResetEvent StartedEvent
    return:
      type: ManualResetEvent
    content.vb: Public StartedEvent As ManualResetEvent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.NodeState
  commentId: F:EventStore.Core.Tests.Helpers.MiniClusterNode.NodeState
  id: NodeState
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: NodeState
  nameWithType: MiniClusterNode.NodeState
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.NodeState
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: NodeState
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 54
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public VNodeState NodeState
    return:
      type: EventStore.Core.Data.VNodeState
    content.vb: Public NodeState As VNodeState
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.#ctor(System.String,System.Int32,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint[],EventStore.Core.ISubsystem[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean)
  commentId: M:EventStore.Core.Tests.Helpers.MiniClusterNode.#ctor(System.String,System.Int32,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint[],EventStore.Core.ISubsystem[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean)
  id: '#ctor(System.String,System.Int32,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint,IPEndPoint[],EventStore.Core.ISubsystem[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean)'
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: MiniClusterNode(String, Int32, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint[], ISubsystem[], Nullable<Int32>, Nullable<Int32>, Boolean, Boolean, Int32, Boolean, Boolean)
  nameWithType: MiniClusterNode.MiniClusterNode(String, Int32, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint[], ISubsystem[], Nullable<Int32>, Nullable<Int32>, Boolean, Boolean, Int32, Boolean, Boolean)
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.MiniClusterNode(System.String, System.Int32, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint[], EventStore.Core.ISubsystem[], System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Boolean, System.Boolean, System.Int32, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 56
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public MiniClusterNode(string pathname, int debugIndex, IPEndPoint internalTcp, IPEndPoint internalTcpSec, IPEndPoint internalHttp, IPEndPoint externalTcp, IPEndPoint externalTcpSec, IPEndPoint externalHttp, IPEndPoint[] gossipSeeds, ISubsystem[] subsystems = null, int ? chunkSize = null, int ? cachedChunkSize = null, bool enableTrustedAuth = false, bool skipInitializeStandardUsersCheck = true, int memTableSize = 1000, bool inMemDb = true, bool disableFlushToDisk = false)
    parameters:
    - id: pathname
      type: System.String
    - id: debugIndex
      type: System.Int32
    - id: internalTcp
      type: IPEndPoint
    - id: internalTcpSec
      type: IPEndPoint
    - id: internalHttp
      type: IPEndPoint
    - id: externalTcp
      type: IPEndPoint
    - id: externalTcpSec
      type: IPEndPoint
    - id: externalHttp
      type: IPEndPoint
    - id: gossipSeeds
      type: IPEndPoint[]
    - id: subsystems
      type: EventStore.Core.ISubsystem[]
    - id: chunkSize
      type: System.Nullable{System.Int32}
    - id: cachedChunkSize
      type: System.Nullable{System.Int32}
    - id: enableTrustedAuth
      type: System.Boolean
    - id: skipInitializeStandardUsersCheck
      type: System.Boolean
    - id: memTableSize
      type: System.Int32
    - id: inMemDb
      type: System.Boolean
    - id: disableFlushToDisk
      type: System.Boolean
    content.vb: Public Sub New(pathname As String, debugIndex As Integer, internalTcp As IPEndPoint, internalTcpSec As IPEndPoint, internalHttp As IPEndPoint, externalTcp As IPEndPoint, externalTcpSec As IPEndPoint, externalHttp As IPEndPoint, gossipSeeds As IPEndPoint(), subsystems As ISubsystem() = Nothing, chunkSize As Integer? = Nothing, cachedChunkSize As Integer? = Nothing, enableTrustedAuth As Boolean = False, skipInitializeStandardUsersCheck As Boolean = True, memTableSize As Integer = 1000, inMemDb As Boolean = True, disableFlushToDisk As Boolean = False)
  overload: EventStore.Core.Tests.Helpers.MiniClusterNode.#ctor*
  nameWithType.vb: MiniClusterNode.MiniClusterNode(String, Int32, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint(), ISubsystem(), Nullable(Of Int32), Nullable(Of Int32), Boolean, Boolean, Int32, Boolean, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.Helpers.MiniClusterNode.MiniClusterNode(System.String, System.Int32, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint(), EventStore.Core.ISubsystem(), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Boolean, System.Boolean, System.Int32, System.Boolean, System.Boolean)
  name.vb: MiniClusterNode(String, Int32, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint(), ISubsystem(), Nullable(Of Int32), Nullable(Of Int32), Boolean, Boolean, Int32, Boolean, Boolean)
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.Start
  commentId: M:EventStore.Core.Tests.Helpers.MiniClusterNode.Start
  id: Start
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: MiniClusterNode.Start()
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.Start()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Start
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 122
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: EventStore.Core.Tests.Helpers.MiniClusterNode.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.Shutdown(System.Boolean,System.Boolean)
  commentId: M:EventStore.Core.Tests.Helpers.MiniClusterNode.Shutdown(System.Boolean,System.Boolean)
  id: Shutdown(System.Boolean,System.Boolean)
  parent: EventStore.Core.Tests.Helpers.MiniClusterNode
  langs:
  - csharp
  - vb
  name: Shutdown(Boolean, Boolean)
  nameWithType: MiniClusterNode.Shutdown(Boolean, Boolean)
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.Shutdown(System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Shutdown
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniClusterNode.cs
    startLine: 148
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public void Shutdown(bool keepDb = false, bool keepPorts = false)
    parameters:
    - id: keepDb
      type: System.Boolean
    - id: keepPorts
      type: System.Boolean
    content.vb: Public Sub Shutdown(keepDb As Boolean = False, keepPorts As Boolean = False)
  overload: EventStore.Core.Tests.Helpers.MiniClusterNode.Shutdown*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<MiniClusterNode>()
  nameWithType: ProtobufExtensions.Serialize<MiniClusterNode>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Helpers.MiniClusterNode>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of MiniClusterNode)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Helpers.MiniClusterNode)()
  name.vb: Serialize(Of MiniClusterNode)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<MiniClusterNode>
    nameWithType: ProtobufExtensions.Serialize<MiniClusterNode>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Helpers.MiniClusterNode>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of MiniClusterNode)
    nameWithType: ProtobufExtensions.Serialize(Of MiniClusterNode)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Helpers.MiniClusterNode)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<MiniClusterNode>()
  nameWithType: ProtobufExtensions.SerializeToArray<MiniClusterNode>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Helpers.MiniClusterNode>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of MiniClusterNode)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Helpers.MiniClusterNode)()
  name.vb: SerializeToArray(Of MiniClusterNode)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<MiniClusterNode>
    nameWithType: ProtobufExtensions.SerializeToArray<MiniClusterNode>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Helpers.MiniClusterNode>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of MiniClusterNode)
    nameWithType: ProtobufExtensions.SerializeToArray(Of MiniClusterNode)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Helpers.MiniClusterNode)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Stopwatch
  isExternal: true
  name: Stopwatch
  nameWithType: Stopwatch
  fullName: Stopwatch
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.InternalTcpEndPoint*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniClusterNode.InternalTcpEndPoint
  isExternal: false
  name: InternalTcpEndPoint
  nameWithType: MiniClusterNode.InternalTcpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.InternalTcpEndPoint
- uid: IPEndPoint
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: IPEndPoint
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.InternalTcpSecEndPoint*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniClusterNode.InternalTcpSecEndPoint
  isExternal: false
  name: InternalTcpSecEndPoint
  nameWithType: MiniClusterNode.InternalTcpSecEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.InternalTcpSecEndPoint
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.InternalHttpEndPoint*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniClusterNode.InternalHttpEndPoint
  isExternal: false
  name: InternalHttpEndPoint
  nameWithType: MiniClusterNode.InternalHttpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.InternalHttpEndPoint
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalTcpEndPoint*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalTcpEndPoint
  isExternal: false
  name: ExternalTcpEndPoint
  nameWithType: MiniClusterNode.ExternalTcpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalTcpEndPoint
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalTcpSecEndPoint*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalTcpSecEndPoint
  isExternal: false
  name: ExternalTcpSecEndPoint
  nameWithType: MiniClusterNode.ExternalTcpSecEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalTcpSecEndPoint
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalHttpEndPoint*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalHttpEndPoint
  isExternal: false
  name: ExternalHttpEndPoint
  nameWithType: MiniClusterNode.ExternalHttpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.ExternalHttpEndPoint
- uid: EventStore.Core.ClusterVNode
  commentId: T:EventStore.Core.ClusterVNode
  parent: EventStore.Core
  isExternal: false
  name: ClusterVNode
  nameWithType: ClusterVNode
  fullName: EventStore.Core.ClusterVNode
- uid: EventStore.Core
  commentId: N:EventStore.Core
  isExternal: false
  name: EventStore.Core
  nameWithType: EventStore.Core
  fullName: EventStore.Core
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDb
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkDb
  parent: EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: TFChunkDb
  nameWithType: TFChunkDb
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDb
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: ManualResetEvent
  isExternal: true
  name: ManualResetEvent
  nameWithType: ManualResetEvent
  fullName: ManualResetEvent
- uid: EventStore.Core.Data.VNodeState
  commentId: T:EventStore.Core.Data.VNodeState
  parent: EventStore.Core.Data
  isExternal: false
  name: VNodeState
  nameWithType: VNodeState
  fullName: EventStore.Core.Data.VNodeState
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  isExternal: false
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.#ctor*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniClusterNode.#ctor
  isExternal: false
  name: MiniClusterNode
  nameWithType: MiniClusterNode.MiniClusterNode
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.MiniClusterNode
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: IPEndPoint[]
  name: IPEndPoint[]
  nameWithType: IPEndPoint[]
  fullName: IPEndPoint[]
  nameWithType.vb: IPEndPoint()
  fullName.vb: IPEndPoint()
  name.vb: IPEndPoint()
  spec.csharp:
  - uid: IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: IPEndPoint
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: IPEndPoint
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.ISubsystem[]
  name: ISubsystem[]
  nameWithType: ISubsystem[]
  fullName: EventStore.Core.ISubsystem[]
  nameWithType.vb: ISubsystem()
  fullName.vb: EventStore.Core.ISubsystem()
  name.vb: ISubsystem()
  spec.csharp:
  - uid: EventStore.Core.ISubsystem
    name: ISubsystem
    nameWithType: ISubsystem
    fullName: EventStore.Core.ISubsystem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.ISubsystem
    name: ISubsystem
    nameWithType: ISubsystem
    fullName: EventStore.Core.ISubsystem
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.Start*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniClusterNode.Start
  isExternal: false
  name: Start
  nameWithType: MiniClusterNode.Start
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.Start
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode.Shutdown*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniClusterNode.Shutdown
  isExternal: false
  name: Shutdown
  nameWithType: MiniClusterNode.Shutdown
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode.Shutdown

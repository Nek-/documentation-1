### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Helpers.MiniNode
  commentId: T:EventStore.Core.Tests.Helpers.MiniNode
  id: MiniNode
  parent: EventStore.Core.Tests.Helpers
  children:
  - EventStore.Core.Tests.Helpers.MiniNode.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},EventStore.Core.ISubsystem[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean,IPAddress,System.Int32,System.Int32,System.Byte,System.String)
  - EventStore.Core.Tests.Helpers.MiniNode.CachedChunkSize
  - EventStore.Core.Tests.Helpers.MiniNode.ChunkSize
  - EventStore.Core.Tests.Helpers.MiniNode.Db
  - EventStore.Core.Tests.Helpers.MiniNode.DbPath
  - EventStore.Core.Tests.Helpers.MiniNode.ExtHttpEndPoint
  - EventStore.Core.Tests.Helpers.MiniNode.IntHttpEndPoint
  - EventStore.Core.Tests.Helpers.MiniNode.IntSecTcpEndPoint
  - EventStore.Core.Tests.Helpers.MiniNode.IntTcpEndPoint
  - EventStore.Core.Tests.Helpers.MiniNode.Node
  - EventStore.Core.Tests.Helpers.MiniNode.RunCount
  - EventStore.Core.Tests.Helpers.MiniNode.RunningTime
  - EventStore.Core.Tests.Helpers.MiniNode.Shutdown(System.Boolean,System.Boolean)
  - EventStore.Core.Tests.Helpers.MiniNode.Start
  - EventStore.Core.Tests.Helpers.MiniNode.StartingTime
  - EventStore.Core.Tests.Helpers.MiniNode.StoppingTime
  - EventStore.Core.Tests.Helpers.MiniNode.TcpEndPoint
  - EventStore.Core.Tests.Helpers.MiniNode.TcpSecEndPoint
  langs:
  - csharp
  - vb
  name: MiniNode
  nameWithType: MiniNode
  fullName: EventStore.Core.Tests.Helpers.MiniNode
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MiniNode
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 26
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: 'public class MiniNode : object'
    content.vb: >-
      Public Class MiniNode

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Helpers.MiniNode.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Helpers.MiniNode.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Helpers.MiniNode.RunCount
  commentId: F:EventStore.Core.Tests.Helpers.MiniNode.RunCount
  id: RunCount
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: RunCount
  nameWithType: MiniNode.RunCount
  fullName: EventStore.Core.Tests.Helpers.MiniNode.RunCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RunCount
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 30
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public static int RunCount
    return:
      type: System.Int32
    content.vb: Public Shared RunCount As Integer
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Tests.Helpers.MiniNode.RunningTime
  commentId: F:EventStore.Core.Tests.Helpers.MiniNode.RunningTime
  id: RunningTime
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: RunningTime
  nameWithType: MiniNode.RunningTime
  fullName: EventStore.Core.Tests.Helpers.MiniNode.RunningTime
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RunningTime
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 31
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public static readonly Stopwatch RunningTime
    return:
      type: Stopwatch
    content.vb: Public Shared ReadOnly RunningTime As Stopwatch
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniNode.StartingTime
  commentId: F:EventStore.Core.Tests.Helpers.MiniNode.StartingTime
  id: StartingTime
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: StartingTime
  nameWithType: MiniNode.StartingTime
  fullName: EventStore.Core.Tests.Helpers.MiniNode.StartingTime
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StartingTime
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 32
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public static readonly Stopwatch StartingTime
    return:
      type: Stopwatch
    content.vb: Public Shared ReadOnly StartingTime As Stopwatch
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniNode.StoppingTime
  commentId: F:EventStore.Core.Tests.Helpers.MiniNode.StoppingTime
  id: StoppingTime
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: StoppingTime
  nameWithType: MiniNode.StoppingTime
  fullName: EventStore.Core.Tests.Helpers.MiniNode.StoppingTime
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StoppingTime
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 33
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public static readonly Stopwatch StoppingTime
    return:
      type: Stopwatch
    content.vb: Public Shared ReadOnly StoppingTime As Stopwatch
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniNode.ChunkSize
  commentId: F:EventStore.Core.Tests.Helpers.MiniNode.ChunkSize
  id: ChunkSize
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: ChunkSize
  nameWithType: MiniNode.ChunkSize
  fullName: EventStore.Core.Tests.Helpers.MiniNode.ChunkSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ChunkSize
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 35
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public const int ChunkSize = null
    return:
      type: System.Int32
    content.vb: Public Const ChunkSize As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Tests.Helpers.MiniNode.CachedChunkSize
  commentId: F:EventStore.Core.Tests.Helpers.MiniNode.CachedChunkSize
  id: CachedChunkSize
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: CachedChunkSize
  nameWithType: MiniNode.CachedChunkSize
  fullName: EventStore.Core.Tests.Helpers.MiniNode.CachedChunkSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CachedChunkSize
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 36
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public const int CachedChunkSize = null
    return:
      type: System.Int32
    content.vb: Public Const CachedChunkSize As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Tests.Helpers.MiniNode.TcpEndPoint
  commentId: P:EventStore.Core.Tests.Helpers.MiniNode.TcpEndPoint
  id: TcpEndPoint
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: TcpEndPoint
  nameWithType: MiniNode.TcpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniNode.TcpEndPoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TcpEndPoint
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 40
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public IPEndPoint TcpEndPoint { get; }
    parameters: []
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly Property TcpEndPoint As IPEndPoint
  overload: EventStore.Core.Tests.Helpers.MiniNode.TcpEndPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniNode.TcpSecEndPoint
  commentId: P:EventStore.Core.Tests.Helpers.MiniNode.TcpSecEndPoint
  id: TcpSecEndPoint
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: TcpSecEndPoint
  nameWithType: MiniNode.TcpSecEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniNode.TcpSecEndPoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TcpSecEndPoint
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 41
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public IPEndPoint TcpSecEndPoint { get; }
    parameters: []
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly Property TcpSecEndPoint As IPEndPoint
  overload: EventStore.Core.Tests.Helpers.MiniNode.TcpSecEndPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniNode.IntHttpEndPoint
  commentId: P:EventStore.Core.Tests.Helpers.MiniNode.IntHttpEndPoint
  id: IntHttpEndPoint
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: IntHttpEndPoint
  nameWithType: MiniNode.IntHttpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniNode.IntHttpEndPoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IntHttpEndPoint
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 42
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public IPEndPoint IntHttpEndPoint { get; }
    parameters: []
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly Property IntHttpEndPoint As IPEndPoint
  overload: EventStore.Core.Tests.Helpers.MiniNode.IntHttpEndPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniNode.IntTcpEndPoint
  commentId: P:EventStore.Core.Tests.Helpers.MiniNode.IntTcpEndPoint
  id: IntTcpEndPoint
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: IntTcpEndPoint
  nameWithType: MiniNode.IntTcpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniNode.IntTcpEndPoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IntTcpEndPoint
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 43
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public IPEndPoint IntTcpEndPoint { get; }
    parameters: []
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly Property IntTcpEndPoint As IPEndPoint
  overload: EventStore.Core.Tests.Helpers.MiniNode.IntTcpEndPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniNode.IntSecTcpEndPoint
  commentId: P:EventStore.Core.Tests.Helpers.MiniNode.IntSecTcpEndPoint
  id: IntSecTcpEndPoint
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: IntSecTcpEndPoint
  nameWithType: MiniNode.IntSecTcpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniNode.IntSecTcpEndPoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IntSecTcpEndPoint
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 44
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public IPEndPoint IntSecTcpEndPoint { get; }
    parameters: []
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly Property IntSecTcpEndPoint As IPEndPoint
  overload: EventStore.Core.Tests.Helpers.MiniNode.IntSecTcpEndPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniNode.ExtHttpEndPoint
  commentId: P:EventStore.Core.Tests.Helpers.MiniNode.ExtHttpEndPoint
  id: ExtHttpEndPoint
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: ExtHttpEndPoint
  nameWithType: MiniNode.ExtHttpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniNode.ExtHttpEndPoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExtHttpEndPoint
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 45
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public IPEndPoint ExtHttpEndPoint { get; }
    parameters: []
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly Property ExtHttpEndPoint As IPEndPoint
  overload: EventStore.Core.Tests.Helpers.MiniNode.ExtHttpEndPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniNode.Node
  commentId: F:EventStore.Core.Tests.Helpers.MiniNode.Node
  id: Node
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: Node
  nameWithType: MiniNode.Node
  fullName: EventStore.Core.Tests.Helpers.MiniNode.Node
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Node
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 46
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public readonly ClusterVNode Node
    return:
      type: EventStore.Core.ClusterVNode
    content.vb: Public ReadOnly Node As ClusterVNode
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniNode.Db
  commentId: F:EventStore.Core.Tests.Helpers.MiniNode.Db
  id: Db
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: Db
  nameWithType: MiniNode.Db
  fullName: EventStore.Core.Tests.Helpers.MiniNode.Db
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Db
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 47
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public readonly TFChunkDb Db
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunkDb
    content.vb: Public ReadOnly Db As TFChunkDb
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniNode.DbPath
  commentId: F:EventStore.Core.Tests.Helpers.MiniNode.DbPath
  id: DbPath
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: DbPath
  nameWithType: MiniNode.DbPath
  fullName: EventStore.Core.Tests.Helpers.MiniNode.DbPath
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DbPath
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 48
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public readonly string DbPath
    return:
      type: System.String
    content.vb: Public ReadOnly DbPath As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Helpers.MiniNode.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},EventStore.Core.ISubsystem[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean,IPAddress,System.Int32,System.Int32,System.Byte,System.String)
  commentId: M:EventStore.Core.Tests.Helpers.MiniNode.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},EventStore.Core.ISubsystem[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean,IPAddress,System.Int32,System.Int32,System.Byte,System.String)
  id: '#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},EventStore.Core.ISubsystem[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean,IPAddress,System.Int32,System.Int32,System.Byte,System.String)'
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: MiniNode(String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, ISubsystem[], Nullable<Int32>, Nullable<Int32>, Boolean, Boolean, Int32, Boolean, Boolean, IPAddress, Int32, Int32, Byte, String)
  nameWithType: MiniNode.MiniNode(String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, ISubsystem[], Nullable<Int32>, Nullable<Int32>, Boolean, Boolean, Int32, Boolean, Boolean, IPAddress, Int32, Int32, Byte, String)
  fullName: EventStore.Core.Tests.Helpers.MiniNode.MiniNode(System.String, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<System.Int32>, EventStore.Core.ISubsystem[], System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Boolean, System.Boolean, System.Int32, System.Boolean, System.Boolean, IPAddress, System.Int32, System.Int32, System.Byte, System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 50
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public MiniNode(string pathname, int ? tcpPort = null, int ? tcpSecPort = null, int ? httpPort = null, ISubsystem[] subsystems = null, int ? chunkSize = null, int ? cachedChunkSize = null, bool enableTrustedAuth = false, bool skipInitializeStandardUsersCheck = true, int memTableSize = 1000, bool inMemDb = true, bool disableFlushToDisk = false, IPAddress advertisedExtIPAddress = null, int advertisedExtHttpPort = 0, int hashCollisionReadLimit = null, byte indexBitnessVersion = null, string dbPath = "")
    parameters:
    - id: pathname
      type: System.String
    - id: tcpPort
      type: System.Nullable{System.Int32}
    - id: tcpSecPort
      type: System.Nullable{System.Int32}
    - id: httpPort
      type: System.Nullable{System.Int32}
    - id: subsystems
      type: EventStore.Core.ISubsystem[]
    - id: chunkSize
      type: System.Nullable{System.Int32}
    - id: cachedChunkSize
      type: System.Nullable{System.Int32}
    - id: enableTrustedAuth
      type: System.Boolean
    - id: skipInitializeStandardUsersCheck
      type: System.Boolean
    - id: memTableSize
      type: System.Int32
    - id: inMemDb
      type: System.Boolean
    - id: disableFlushToDisk
      type: System.Boolean
    - id: advertisedExtIPAddress
      type: IPAddress
    - id: advertisedExtHttpPort
      type: System.Int32
    - id: hashCollisionReadLimit
      type: System.Int32
    - id: indexBitnessVersion
      type: System.Byte
    - id: dbPath
      type: System.String
    content.vb: Public Sub New(pathname As String, tcpPort As Integer? = Nothing, tcpSecPort As Integer? = Nothing, httpPort As Integer? = Nothing, subsystems As ISubsystem() = Nothing, chunkSize As Integer? = Nothing, cachedChunkSize As Integer? = Nothing, enableTrustedAuth As Boolean = False, skipInitializeStandardUsersCheck As Boolean = True, memTableSize As Integer = 1000, inMemDb As Boolean = True, disableFlushToDisk As Boolean = False, advertisedExtIPAddress As IPAddress = Nothing, advertisedExtHttpPort As Integer = 0, hashCollisionReadLimit As Integer = Nothing, indexBitnessVersion As Byte = Nothing, dbPath As String = "")
  overload: EventStore.Core.Tests.Helpers.MiniNode.#ctor*
  nameWithType.vb: MiniNode.MiniNode(String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), ISubsystem(), Nullable(Of Int32), Nullable(Of Int32), Boolean, Boolean, Int32, Boolean, Boolean, IPAddress, Int32, Int32, Byte, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.Helpers.MiniNode.MiniNode(System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), EventStore.Core.ISubsystem(), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Boolean, System.Boolean, System.Int32, System.Boolean, System.Boolean, IPAddress, System.Int32, System.Int32, System.Byte, System.String)
  name.vb: MiniNode(String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of Int32), ISubsystem(), Nullable(Of Int32), Nullable(Of Int32), Boolean, Boolean, Int32, Boolean, Boolean, IPAddress, Int32, Int32, Byte, String)
- uid: EventStore.Core.Tests.Helpers.MiniNode.Start
  commentId: M:EventStore.Core.Tests.Helpers.MiniNode.Start
  id: Start
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: MiniNode.Start()
  fullName: EventStore.Core.Tests.Helpers.MiniNode.Start()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Start
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 161
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: EventStore.Core.Tests.Helpers.MiniNode.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Helpers.MiniNode.Shutdown(System.Boolean,System.Boolean)
  commentId: M:EventStore.Core.Tests.Helpers.MiniNode.Shutdown(System.Boolean,System.Boolean)
  id: Shutdown(System.Boolean,System.Boolean)
  parent: EventStore.Core.Tests.Helpers.MiniNode
  langs:
  - csharp
  - vb
  name: Shutdown(Boolean, Boolean)
  nameWithType: MiniNode.Shutdown(Boolean, Boolean)
  fullName: EventStore.Core.Tests.Helpers.MiniNode.Shutdown(System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/MiniNode.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Shutdown
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/MiniNode.cs
    startLine: 171
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public void Shutdown(bool keepDb = false, bool keepPorts = false)
    parameters:
    - id: keepDb
      type: System.Boolean
    - id: keepPorts
      type: System.Boolean
    content.vb: Public Sub Shutdown(keepDb As Boolean = False, keepPorts As Boolean = False)
  overload: EventStore.Core.Tests.Helpers.MiniNode.Shutdown*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.MiniNode.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<MiniNode>()
  nameWithType: ProtobufExtensions.Serialize<MiniNode>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Helpers.MiniNode>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of MiniNode)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Helpers.MiniNode)()
  name.vb: Serialize(Of MiniNode)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<MiniNode>
    nameWithType: ProtobufExtensions.Serialize<MiniNode>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Helpers.MiniNode>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of MiniNode)
    nameWithType: ProtobufExtensions.Serialize(Of MiniNode)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Helpers.MiniNode)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.MiniNode.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<MiniNode>()
  nameWithType: ProtobufExtensions.SerializeToArray<MiniNode>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Helpers.MiniNode>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of MiniNode)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Helpers.MiniNode)()
  name.vb: SerializeToArray(Of MiniNode)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<MiniNode>
    nameWithType: ProtobufExtensions.SerializeToArray<MiniNode>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Helpers.MiniNode>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of MiniNode)
    nameWithType: ProtobufExtensions.SerializeToArray(Of MiniNode)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Helpers.MiniNode)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Stopwatch
  isExternal: true
  name: Stopwatch
  nameWithType: Stopwatch
  fullName: Stopwatch
- uid: EventStore.Core.Tests.Helpers.MiniNode.TcpEndPoint*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniNode.TcpEndPoint
  isExternal: false
  name: TcpEndPoint
  nameWithType: MiniNode.TcpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniNode.TcpEndPoint
- uid: IPEndPoint
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: IPEndPoint
- uid: EventStore.Core.Tests.Helpers.MiniNode.TcpSecEndPoint*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniNode.TcpSecEndPoint
  isExternal: false
  name: TcpSecEndPoint
  nameWithType: MiniNode.TcpSecEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniNode.TcpSecEndPoint
- uid: EventStore.Core.Tests.Helpers.MiniNode.IntHttpEndPoint*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniNode.IntHttpEndPoint
  isExternal: false
  name: IntHttpEndPoint
  nameWithType: MiniNode.IntHttpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniNode.IntHttpEndPoint
- uid: EventStore.Core.Tests.Helpers.MiniNode.IntTcpEndPoint*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniNode.IntTcpEndPoint
  isExternal: false
  name: IntTcpEndPoint
  nameWithType: MiniNode.IntTcpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniNode.IntTcpEndPoint
- uid: EventStore.Core.Tests.Helpers.MiniNode.IntSecTcpEndPoint*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniNode.IntSecTcpEndPoint
  isExternal: false
  name: IntSecTcpEndPoint
  nameWithType: MiniNode.IntSecTcpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniNode.IntSecTcpEndPoint
- uid: EventStore.Core.Tests.Helpers.MiniNode.ExtHttpEndPoint*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniNode.ExtHttpEndPoint
  isExternal: false
  name: ExtHttpEndPoint
  nameWithType: MiniNode.ExtHttpEndPoint
  fullName: EventStore.Core.Tests.Helpers.MiniNode.ExtHttpEndPoint
- uid: EventStore.Core.ClusterVNode
  commentId: T:EventStore.Core.ClusterVNode
  parent: EventStore.Core
  isExternal: false
  name: ClusterVNode
  nameWithType: ClusterVNode
  fullName: EventStore.Core.ClusterVNode
- uid: EventStore.Core
  commentId: N:EventStore.Core
  isExternal: false
  name: EventStore.Core
  nameWithType: EventStore.Core
  fullName: EventStore.Core
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDb
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkDb
  parent: EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: TFChunkDb
  nameWithType: TFChunkDb
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDb
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Tests.Helpers.MiniNode.#ctor*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniNode.#ctor
  isExternal: false
  name: MiniNode
  nameWithType: MiniNode.MiniNode
  fullName: EventStore.Core.Tests.Helpers.MiniNode.MiniNode
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.ISubsystem[]
  name: ISubsystem[]
  nameWithType: ISubsystem[]
  fullName: EventStore.Core.ISubsystem[]
  nameWithType.vb: ISubsystem()
  fullName.vb: EventStore.Core.ISubsystem()
  name.vb: ISubsystem()
  spec.csharp:
  - uid: EventStore.Core.ISubsystem
    name: ISubsystem
    nameWithType: ISubsystem
    fullName: EventStore.Core.ISubsystem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.ISubsystem
    name: ISubsystem
    nameWithType: ISubsystem
    fullName: EventStore.Core.ISubsystem
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: IPAddress
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: IPAddress
- uid: System.Byte
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.MiniNode.Start*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniNode.Start
  isExternal: false
  name: Start
  nameWithType: MiniNode.Start
  fullName: EventStore.Core.Tests.Helpers.MiniNode.Start
- uid: EventStore.Core.Tests.Helpers.MiniNode.Shutdown*
  commentId: Overload:EventStore.Core.Tests.Helpers.MiniNode.Shutdown
  isExternal: false
  name: Shutdown
  nameWithType: MiniNode.Shutdown
  fullName: EventStore.Core.Tests.Helpers.MiniNode.Shutdown

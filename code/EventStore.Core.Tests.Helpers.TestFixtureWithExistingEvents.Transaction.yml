### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction
  commentId: T:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction
  id: TestFixtureWithExistingEvents.Transaction
  parent: EventStore.Core.Tests.Helpers
  children:
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.#ctor(System.Int64,EventStore.Core.Messages.ClientMessage.TransactionStart)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Commit(EventStore.Core.Messages.ClientMessage.TransactionCommit,EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Write(EventStore.Core.Messages.ClientMessage.TransactionWrite,System.Int32@)
  langs:
  - csharp
  - vb
  name: TestFixtureWithExistingEvents.Transaction
  nameWithType: TestFixtureWithExistingEvents.Transaction
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/TestFixtureWithExistingEvents.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Transaction
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/TestFixtureWithExistingEvents.cs
    startLine: 28
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: 'public class Transaction : object'
    content.vb: >-
      Public Class Transaction

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.#ctor(System.Int64,EventStore.Core.Messages.ClientMessage.TransactionStart)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.#ctor(System.Int64,EventStore.Core.Messages.ClientMessage.TransactionStart)
  id: '#ctor(System.Int64,EventStore.Core.Messages.ClientMessage.TransactionStart)'
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction
  langs:
  - csharp
  - vb
  name: Transaction(Int64, ClientMessage.TransactionStart)
  nameWithType: TestFixtureWithExistingEvents.Transaction.Transaction(Int64, ClientMessage.TransactionStart)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Transaction(System.Int64, EventStore.Core.Messages.ClientMessage.TransactionStart)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/TestFixtureWithExistingEvents.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/TestFixtureWithExistingEvents.cs
    startLine: 34
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public Transaction(long position, ClientMessage.TransactionStart startMessage)
    parameters:
    - id: position
      type: System.Int64
    - id: startMessage
      type: EventStore.Core.Messages.ClientMessage.TransactionStart
    content.vb: Public Sub New(position As Long, startMessage As ClientMessage.TransactionStart)
  overload: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Write(EventStore.Core.Messages.ClientMessage.TransactionWrite,System.Int32@)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Write(EventStore.Core.Messages.ClientMessage.TransactionWrite,System.Int32@)
  id: Write(EventStore.Core.Messages.ClientMessage.TransactionWrite,System.Int32@)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction
  langs:
  - csharp
  - vb
  name: Write(ClientMessage.TransactionWrite, ref Int32)
  nameWithType: TestFixtureWithExistingEvents.Transaction.Write(ClientMessage.TransactionWrite, ref Int32)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Write(EventStore.Core.Messages.ClientMessage.TransactionWrite, ref System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/TestFixtureWithExistingEvents.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Write
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/TestFixtureWithExistingEvents.cs
    startLine: 39
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public void Write(ClientMessage.TransactionWrite message, ref int fakePosition)
    parameters:
    - id: message
      type: EventStore.Core.Messages.ClientMessage.TransactionWrite
    - id: fakePosition
      type: System.Int32
    content.vb: Public Sub Write(message As ClientMessage.TransactionWrite, ByRef fakePosition As Integer)
  overload: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Write*
  nameWithType.vb: TestFixtureWithExistingEvents.Transaction.Write(ClientMessage.TransactionWrite, ByRef Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Write(EventStore.Core.Messages.ClientMessage.TransactionWrite, ByRef System.Int32)
  name.vb: Write(ClientMessage.TransactionWrite, ByRef Int32)
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Commit(EventStore.Core.Messages.ClientMessage.TransactionCommit,EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Commit(EventStore.Core.Messages.ClientMessage.TransactionCommit,EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents)
  id: Commit(EventStore.Core.Messages.ClientMessage.TransactionCommit,EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction
  langs:
  - csharp
  - vb
  name: Commit(ClientMessage.TransactionCommit, TestFixtureWithExistingEvents)
  nameWithType: TestFixtureWithExistingEvents.Transaction.Commit(ClientMessage.TransactionCommit, TestFixtureWithExistingEvents)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Commit(EventStore.Core.Messages.ClientMessage.TransactionCommit, EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Helpers/TestFixtureWithExistingEvents.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Commit
    path: ../EventStore/src/EventStore.Core.Tests/Helpers/TestFixtureWithExistingEvents.cs
    startLine: 48
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Helpers
  syntax:
    content: public void Commit(ClientMessage.TransactionCommit message, TestFixtureWithExistingEvents fixture)
    parameters:
    - id: message
      type: EventStore.Core.Messages.ClientMessage.TransactionCommit
    - id: fixture
      type: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
    content.vb: Public Sub Commit(message As ClientMessage.TransactionCommit, fixture As TestFixtureWithExistingEvents)
  overload: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Commit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TestFixtureWithExistingEvents.Transaction>()
  nameWithType: ProtobufExtensions.Serialize<TestFixtureWithExistingEvents.Transaction>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TestFixtureWithExistingEvents.Transaction)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction)()
  name.vb: Serialize(Of TestFixtureWithExistingEvents.Transaction)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TestFixtureWithExistingEvents.Transaction>
    nameWithType: ProtobufExtensions.Serialize<TestFixtureWithExistingEvents.Transaction>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TestFixtureWithExistingEvents.Transaction)
    nameWithType: ProtobufExtensions.Serialize(Of TestFixtureWithExistingEvents.Transaction)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TestFixtureWithExistingEvents.Transaction>()
  nameWithType: ProtobufExtensions.SerializeToArray<TestFixtureWithExistingEvents.Transaction>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TestFixtureWithExistingEvents.Transaction)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction)()
  name.vb: SerializeToArray(Of TestFixtureWithExistingEvents.Transaction)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TestFixtureWithExistingEvents.Transaction>
    nameWithType: ProtobufExtensions.SerializeToArray<TestFixtureWithExistingEvents.Transaction>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TestFixtureWithExistingEvents.Transaction)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TestFixtureWithExistingEvents.Transaction)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.#ctor*
  commentId: Overload:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.#ctor
  isExternal: false
  name: Transaction
  nameWithType: TestFixtureWithExistingEvents.Transaction.Transaction
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Transaction
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Messages.ClientMessage.TransactionStart
  commentId: T:EventStore.Core.Messages.ClientMessage.TransactionStart
  parent: EventStore.Core.Messages
  isExternal: false
  name: ClientMessage.TransactionStart
  nameWithType: ClientMessage.TransactionStart
  fullName: EventStore.Core.Messages.ClientMessage.TransactionStart
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Write*
  commentId: Overload:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Write
  isExternal: false
  name: Write
  nameWithType: TestFixtureWithExistingEvents.Transaction.Write
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Write
- uid: EventStore.Core.Messages.ClientMessage.TransactionWrite
  commentId: T:EventStore.Core.Messages.ClientMessage.TransactionWrite
  parent: EventStore.Core.Messages
  isExternal: false
  name: ClientMessage.TransactionWrite
  nameWithType: ClientMessage.TransactionWrite
  fullName: EventStore.Core.Messages.ClientMessage.TransactionWrite
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Commit*
  commentId: Overload:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Commit
  isExternal: false
  name: Commit
  nameWithType: TestFixtureWithExistingEvents.Transaction.Commit
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Transaction.Commit
- uid: EventStore.Core.Messages.ClientMessage.TransactionCommit
  commentId: T:EventStore.Core.Messages.ClientMessage.TransactionCommit
  parent: EventStore.Core.Messages
  isExternal: false
  name: ClientMessage.TransactionCommit
  nameWithType: ClientMessage.TransactionCommit
  fullName: EventStore.Core.Messages.ClientMessage.TransactionCommit
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  commentId: T:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: TestFixtureWithExistingEvents
  nameWithType: TestFixtureWithExistingEvents
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents

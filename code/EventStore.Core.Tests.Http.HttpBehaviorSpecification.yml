### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  commentId: T:EventStore.Core.Tests.Http.HttpBehaviorSpecification
  id: HttpBehaviorSpecification
  parent: EventStore.Core.Tests.Http
  children:
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification._connection
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification._lastJsonException
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification._lastResponse
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification._lastResponseBody
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification._lastResponseBytes
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification._node
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateEventsJsonPostRequest``1(System.String,System.String,``0,ICredentials)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateMiniNode
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRawJsonPostRequest``1(System.String,System.String,``0,ICredentials)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRequest(System.String,System.String,ICredentials)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRequest(System.String,System.String,System.String,System.String,ICredentials,NameValueCollection)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.Get(System.String,System.String,System.String,ICredentials,System.Boolean,NameValueCollection)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetAtomXml(Uri,ICredentials)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson``1(System.String,System.String,ICredentials,NameValueCollection)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson2``1(System.String,System.String,System.String,ICredentials)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJsonWithoutAcceptHeader``1(System.String)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetRequestResponse(HttpWebRequest)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetXml(Uri,ICredentials)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.Given
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.GivenSkipInitializeStandardUsersCheck
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeArrayEventsPost``1(System.String,``0,ICredentials)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeDelete(System.String,ICredentials)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeEventsJsonPut``1(System.String,``0,ICredentials)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonEventsPostWithJsonResponse``1(System.String,``0,ICredentials)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPost``1(System.String,``0,ICredentials)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPostWithJsonResponse``1(System.String,``0,ICredentials)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPut``1(System.String,``0,ICredentials)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakePost(System.String,ICredentials)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPost``1(System.String,``0,ICredentials)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPut``1(System.String,``0,ICredentials)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeUrl(System.String,System.String)
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.Tag
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestFixtureSetUp
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestFixtureTearDown
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestMetadataStream
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestStream
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestStreamName
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.When
  langs:
  - csharp
  - vb
  name: HttpBehaviorSpecification
  nameWithType: HttpBehaviorSpecification
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HttpBehaviorSpecification
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 25
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: 'public abstract class HttpBehaviorSpecification : SpecificationWithDirectoryPerTestFixture'
    content.vb: >-
      Public MustInherit Class HttpBehaviorSpecification

          Inherits SpecificationWithDirectoryPerTestFixture
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  derivedClasses:
  - EventStore.Core.Tests.Http.BasicAuthentication.basic_authentication.with_admin_user
  - EventStore.Core.Tests.Http.Streams.append_to_stream.ExpectedVersionSpecification
  - EventStore.Core.Tests.Http.Streams.basic.HttpBehaviorSpecificationWithSingleEvent
  - EventStore.Core.Tests.Http.Streams.basic.when_deleting_to_stream_with_slash
  - EventStore.Core.Tests.Http.Streams.basic.when_getting_from_all_stream_with_slash
  - EventStore.Core.Tests.Http.Streams.basic.when_getting_from_encoded_all_stream_with_slash
  - EventStore.Core.Tests.Http.Streams.basic.when_getting_from_metadata_stream_with_slash
  - EventStore.Core.Tests.Http.Streams.basic.when_getting_from_stream_with_slash
  - EventStore.Core.Tests.Http.Streams.basic.when_posting_an_event_as_array
  - EventStore.Core.Tests.Http.Streams.basic.when_posting_an_event_as_array_to_metadata_stream_with_slash
  - EventStore.Core.Tests.Http.Streams.basic.when_posting_an_event_as_array_to_stream_with_slash
  - EventStore.Core.Tests.Http.Streams.basic.when_posting_an_event_as_array_with_no_event_type
  - EventStore.Core.Tests.Http.Streams.basic.when_posting_an_event_as_json_to_idempotent_uri_without_event_type
  - EventStore.Core.Tests.Http.Streams.basic.when_posting_an_event_as_raw_json_without_eventid
  - EventStore.Core.Tests.Http.Streams.basic.when_posting_an_event_as_raw_json_without_eventtype
  - EventStore.Core.Tests.Http.Streams.basic.when_posting_an_event_in_json_to_idempotent_uri_without_event_id
  - EventStore.Core.Tests.Http.Streams.basic.when_posting_an_event_to_idempotent_uri_as_events_array
  - EventStore.Core.Tests.Http.Streams.basic.when_posting_an_event_with_date_time
  - EventStore.Core.Tests.Http.Streams.basic.when_posting_an_event_without_EventId_as_array
  - EventStore.Core.Tests.Http.Streams.basic.when_posting_an_event_without_EventType_as_array
  - EventStore.Core.Tests.Http.Streams.basic.when_posting_an_events_as_array
  - EventStore.Core.Tests.Http.Streams.basic.when_requesting_a_single_raw_event_in_the_stream_as_raw
  - EventStore.Core.Tests.Http.Streams.feed.SpecificationWithLongFeed
  - EventStore.Core.Tests.Http.Streams.feed.when_reading_a_stream_forward_with_linkto_with_at_sign_in_name
  - EventStore.Core.Tests.Http.Streams.HttpSpecificationWithLinkToToDeletedEvents
  - EventStore.Core.Tests.Http.Streams.HttpSpecificationWithLinkToToEvents
  - EventStore.Core.Tests.Http.Streams.SpecificationWithLinkToToMaxCountDeletedEvents
  - EventStore.Core.Tests.Http.Streams.when_getting_a_stream_with_description_document_media_type
  - EventStore.Core.Tests.Http.Streams.when_getting_a_stream_without_accept_header
  - EventStore.Core.Tests.Http.Streams.when_getting_description_document
  - EventStore.Core.Tests.Http.Streams.when_getting_description_document_and_subscription_exists_for_stream
  - EventStore.Core.Tests.Http.Streams.when_posting_metadata_as_json_to_non_existing_stream
  - EventStore.Core.Tests.Http.when_running_the_node_advertising_a_different_ip_as.when_retrieving_feed_head_and_http_advertise_ip_is_set
  inheritedMembers:
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Http.HttpBehaviorSpecification.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification._node
  commentId: F:EventStore.Core.Tests.Http.HttpBehaviorSpecification._node
  id: _node
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: _node
  nameWithType: HttpBehaviorSpecification._node
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification._node
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _node
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 27
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected MiniNode _node
    return:
      type: EventStore.Core.Tests.Helpers.MiniNode
    content.vb: Protected _node As MiniNode
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification._connection
  commentId: F:EventStore.Core.Tests.Http.HttpBehaviorSpecification._connection
  id: _connection
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: _connection
  nameWithType: HttpBehaviorSpecification._connection
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification._connection
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _connection
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 28
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected IEventStoreConnection _connection
    return:
      type: EventStore.ClientAPI.IEventStoreConnection
    content.vb: Protected _connection As IEventStoreConnection
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification._lastResponse
  commentId: F:EventStore.Core.Tests.Http.HttpBehaviorSpecification._lastResponse
  id: _lastResponse
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: _lastResponse
  nameWithType: HttpBehaviorSpecification._lastResponse
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification._lastResponse
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _lastResponse
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 29
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected HttpWebResponse _lastResponse
    return:
      type: HttpWebResponse
    content.vb: Protected _lastResponse As HttpWebResponse
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification._lastResponseBody
  commentId: F:EventStore.Core.Tests.Http.HttpBehaviorSpecification._lastResponseBody
  id: _lastResponseBody
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: _lastResponseBody
  nameWithType: HttpBehaviorSpecification._lastResponseBody
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification._lastResponseBody
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _lastResponseBody
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 30
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected string _lastResponseBody
    return:
      type: System.String
    content.vb: Protected _lastResponseBody As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification._lastResponseBytes
  commentId: F:EventStore.Core.Tests.Http.HttpBehaviorSpecification._lastResponseBytes
  id: _lastResponseBytes
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: _lastResponseBytes
  nameWithType: HttpBehaviorSpecification._lastResponseBytes
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification._lastResponseBytes
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _lastResponseBytes
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 31
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected byte[] _lastResponseBytes
    return:
      type: System.Byte[]
    content.vb: Protected _lastResponseBytes As Byte()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification._lastJsonException
  commentId: F:EventStore.Core.Tests.Http.HttpBehaviorSpecification._lastJsonException
  id: _lastJsonException
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: _lastJsonException
  nameWithType: HttpBehaviorSpecification._lastJsonException
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification._lastJsonException
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _lastJsonException
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 32
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected JsonException _lastJsonException
    return:
      type: JsonException
    content.vb: Protected _lastJsonException As JsonException
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestFixtureSetUp
  id: TestFixtureSetUp
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: TestFixtureSetUp()
  nameWithType: HttpBehaviorSpecification.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestFixtureSetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureSetUp
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 43
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: public override void TestFixtureSetUp()
    content.vb: Public Overrides Sub TestFixtureSetUp
  overridden: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestFixtureSetUp*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestStream
  commentId: P:EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestStream
  id: TestStream
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: TestStream
  nameWithType: HttpBehaviorSpecification.TestStream
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestStream
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestStream
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 105
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: public string TestStream { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TestStream As String
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestStream*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestStreamName
  commentId: P:EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestStreamName
  id: TestStreamName
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: TestStreamName
  nameWithType: HttpBehaviorSpecification.TestStreamName
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestStreamName
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestStreamName
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 109
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: public string TestStreamName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TestStreamName As String
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestStreamName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestMetadataStream
  commentId: P:EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestMetadataStream
  id: TestMetadataStream
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: TestMetadataStream
  nameWithType: HttpBehaviorSpecification.TestMetadataStream
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestMetadataStream
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestMetadataStream
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 113
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: public string TestMetadataStream { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TestMetadataStream As String
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestMetadataStream*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.Tag
  commentId: P:EventStore.Core.Tests.Http.HttpBehaviorSpecification.Tag
  id: Tag
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: HttpBehaviorSpecification.Tag
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.Tag
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Tag
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 117
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: public string Tag { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Tag As String
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.Tag*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateMiniNode
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateMiniNode
  id: CreateMiniNode
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: CreateMiniNode()
  nameWithType: HttpBehaviorSpecification.CreateMiniNode()
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateMiniNode()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateMiniNode
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 122
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected virtual MiniNode CreateMiniNode()
    return:
      type: EventStore.Core.Tests.Helpers.MiniNode
    content.vb: Protected Overridable Function CreateMiniNode As MiniNode
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateMiniNode*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GivenSkipInitializeStandardUsersCheck
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.GivenSkipInitializeStandardUsersCheck
  id: GivenSkipInitializeStandardUsersCheck
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: GivenSkipInitializeStandardUsersCheck()
  nameWithType: HttpBehaviorSpecification.GivenSkipInitializeStandardUsersCheck()
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GivenSkipInitializeStandardUsersCheck()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GivenSkipInitializeStandardUsersCheck
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 127
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected virtual bool GivenSkipInitializeStandardUsersCheck()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function GivenSkipInitializeStandardUsersCheck As Boolean
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GivenSkipInitializeStandardUsersCheck*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestFixtureTearDown
  id: TestFixtureTearDown
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: TestFixtureTearDown()
  nameWithType: HttpBehaviorSpecification.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestFixtureTearDown()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureTearDown
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 132
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: public override void TestFixtureTearDown()
    content.vb: Public Overrides Sub TestFixtureTearDown
  overridden: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestFixtureTearDown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRequest(System.String,System.String,System.String,System.String,ICredentials,NameValueCollection)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRequest(System.String,System.String,System.String,System.String,ICredentials,NameValueCollection)
  id: CreateRequest(System.String,System.String,System.String,System.String,ICredentials,NameValueCollection)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: CreateRequest(String, String, String, String, ICredentials, NameValueCollection)
  nameWithType: HttpBehaviorSpecification.CreateRequest(String, String, String, String, ICredentials, NameValueCollection)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRequest(System.String, System.String, System.String, System.String, ICredentials, NameValueCollection)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateRequest
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 146
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected HttpWebRequest CreateRequest(string path, string extra, string method, string contentType, ICredentials credentials = null, NameValueCollection headers = null)
    parameters:
    - id: path
      type: System.String
    - id: extra
      type: System.String
    - id: method
      type: System.String
    - id: contentType
      type: System.String
    - id: credentials
      type: ICredentials
    - id: headers
      type: NameValueCollection
    return:
      type: HttpWebRequest
    content.vb: Protected Function CreateRequest(path As String, extra As String, method As String, contentType As String, credentials As ICredentials = Nothing, headers As NameValueCollection = Nothing) As HttpWebRequest
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRequest*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRequest(System.String,System.String,ICredentials)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRequest(System.String,System.String,ICredentials)
  id: CreateRequest(System.String,System.String,ICredentials)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: CreateRequest(String, String, ICredentials)
  nameWithType: HttpBehaviorSpecification.CreateRequest(String, String, ICredentials)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRequest(System.String, System.String, ICredentials)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateRequest
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 167
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected HttpWebRequest CreateRequest(string path, string method, ICredentials credentials = null)
    parameters:
    - id: path
      type: System.String
    - id: method
      type: System.String
    - id: credentials
      type: ICredentials
    return:
      type: HttpWebRequest
    content.vb: Protected Function CreateRequest(path As String, method As String, credentials As ICredentials = Nothing) As HttpWebRequest
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRequest*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeUrl(System.String,System.String)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeUrl(System.String,System.String)
  id: MakeUrl(System.String,System.String)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: MakeUrl(String, String)
  nameWithType: HttpBehaviorSpecification.MakeUrl(String, String)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeUrl(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MakeUrl
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 180
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected Uri MakeUrl(string path, string extra = "")
    parameters:
    - id: path
      type: System.String
    - id: extra
      type: System.String
    return:
      type: Uri
    content.vb: Protected Function MakeUrl(path As String, extra As String = "") As Uri
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeUrl*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPut``1(System.String,``0,ICredentials)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPut``1(System.String,``0,ICredentials)
  id: MakeJsonPut``1(System.String,``0,ICredentials)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: MakeJsonPut<T>(String, T, ICredentials)
  nameWithType: HttpBehaviorSpecification.MakeJsonPut<T>(String, T, ICredentials)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPut<T>(System.String, T, ICredentials)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MakeJsonPut
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 196
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected HttpWebResponse MakeJsonPut<T>(string path, T body, ICredentials credentials = null)
    parameters:
    - id: path
      type: System.String
    - id: body
      type: '{T}'
    - id: credentials
      type: ICredentials
    typeParameters:
    - id: T
    return:
      type: HttpWebResponse
    content.vb: Protected Function MakeJsonPut(Of T)(path As String, body As T, credentials As ICredentials = Nothing) As HttpWebResponse
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPut*
  nameWithType.vb: HttpBehaviorSpecification.MakeJsonPut(Of T)(String, T, ICredentials)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPut(Of T)(System.String, T, ICredentials)
  name.vb: MakeJsonPut(Of T)(String, T, ICredentials)
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPost``1(System.String,``0,ICredentials)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPost``1(System.String,``0,ICredentials)
  id: MakeJsonPost``1(System.String,``0,ICredentials)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: MakeJsonPost<T>(String, T, ICredentials)
  nameWithType: HttpBehaviorSpecification.MakeJsonPost<T>(String, T, ICredentials)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPost<T>(System.String, T, ICredentials)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MakeJsonPost
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 204
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected HttpWebResponse MakeJsonPost<T>(string path, T body, ICredentials credentials = null)
    parameters:
    - id: path
      type: System.String
    - id: body
      type: '{T}'
    - id: credentials
      type: ICredentials
    typeParameters:
    - id: T
    return:
      type: HttpWebResponse
    content.vb: Protected Function MakeJsonPost(Of T)(path As String, body As T, credentials As ICredentials = Nothing) As HttpWebResponse
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPost*
  nameWithType.vb: HttpBehaviorSpecification.MakeJsonPost(Of T)(String, T, ICredentials)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPost(Of T)(System.String, T, ICredentials)
  name.vb: MakeJsonPost(Of T)(String, T, ICredentials)
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeArrayEventsPost``1(System.String,``0,ICredentials)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeArrayEventsPost``1(System.String,``0,ICredentials)
  id: MakeArrayEventsPost``1(System.String,``0,ICredentials)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: MakeArrayEventsPost<T>(String, T, ICredentials)
  nameWithType: HttpBehaviorSpecification.MakeArrayEventsPost<T>(String, T, ICredentials)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeArrayEventsPost<T>(System.String, T, ICredentials)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MakeArrayEventsPost
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 211
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected HttpWebResponse MakeArrayEventsPost<T>(string path, T body, ICredentials credentials = null)
    parameters:
    - id: path
      type: System.String
    - id: body
      type: '{T}'
    - id: credentials
      type: ICredentials
    typeParameters:
    - id: T
    return:
      type: HttpWebResponse
    content.vb: Protected Function MakeArrayEventsPost(Of T)(path As String, body As T, credentials As ICredentials = Nothing) As HttpWebResponse
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeArrayEventsPost*
  nameWithType.vb: HttpBehaviorSpecification.MakeArrayEventsPost(Of T)(String, T, ICredentials)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeArrayEventsPost(Of T)(System.String, T, ICredentials)
  name.vb: MakeArrayEventsPost(Of T)(String, T, ICredentials)
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPost``1(System.String,``0,ICredentials)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPost``1(System.String,``0,ICredentials)
  id: MakeRawJsonPost``1(System.String,``0,ICredentials)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: MakeRawJsonPost<T>(String, T, ICredentials)
  nameWithType: HttpBehaviorSpecification.MakeRawJsonPost<T>(String, T, ICredentials)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPost<T>(System.String, T, ICredentials)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MakeRawJsonPost
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 217
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected HttpWebResponse MakeRawJsonPost<T>(string path, T body, ICredentials credentials = null)
    parameters:
    - id: path
      type: System.String
    - id: body
      type: '{T}'
    - id: credentials
      type: ICredentials
    typeParameters:
    - id: T
    return:
      type: HttpWebResponse
    content.vb: Protected Function MakeRawJsonPost(Of T)(path As String, body As T, credentials As ICredentials = Nothing) As HttpWebResponse
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPost*
  nameWithType.vb: HttpBehaviorSpecification.MakeRawJsonPost(Of T)(String, T, ICredentials)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPost(Of T)(System.String, T, ICredentials)
  name.vb: MakeRawJsonPost(Of T)(String, T, ICredentials)
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPostWithJsonResponse``1(System.String,``0,ICredentials)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPostWithJsonResponse``1(System.String,``0,ICredentials)
  id: MakeJsonPostWithJsonResponse``1(System.String,``0,ICredentials)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: MakeJsonPostWithJsonResponse<T>(String, T, ICredentials)
  nameWithType: HttpBehaviorSpecification.MakeJsonPostWithJsonResponse<T>(String, T, ICredentials)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPostWithJsonResponse<T>(System.String, T, ICredentials)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MakeJsonPostWithJsonResponse
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 224
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected JObject MakeJsonPostWithJsonResponse<T>(string path, T body, ICredentials credentials = null)
    parameters:
    - id: path
      type: System.String
    - id: body
      type: '{T}'
    - id: credentials
      type: ICredentials
    typeParameters:
    - id: T
    return:
      type: JObject
    content.vb: Protected Function MakeJsonPostWithJsonResponse(Of T)(path As String, body As T, credentials As ICredentials = Nothing) As JObject
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPostWithJsonResponse*
  nameWithType.vb: HttpBehaviorSpecification.MakeJsonPostWithJsonResponse(Of T)(String, T, ICredentials)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPostWithJsonResponse(Of T)(System.String, T, ICredentials)
  name.vb: MakeJsonPostWithJsonResponse(Of T)(String, T, ICredentials)
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonEventsPostWithJsonResponse``1(System.String,``0,ICredentials)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonEventsPostWithJsonResponse``1(System.String,``0,ICredentials)
  id: MakeJsonEventsPostWithJsonResponse``1(System.String,``0,ICredentials)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: MakeJsonEventsPostWithJsonResponse<T>(String, T, ICredentials)
  nameWithType: HttpBehaviorSpecification.MakeJsonEventsPostWithJsonResponse<T>(String, T, ICredentials)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonEventsPostWithJsonResponse<T>(System.String, T, ICredentials)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MakeJsonEventsPostWithJsonResponse
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 243
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected JObject MakeJsonEventsPostWithJsonResponse<T>(string path, T body, ICredentials credentials = null)
    parameters:
    - id: path
      type: System.String
    - id: body
      type: '{T}'
    - id: credentials
      type: ICredentials
    typeParameters:
    - id: T
    return:
      type: JObject
    content.vb: Protected Function MakeJsonEventsPostWithJsonResponse(Of T)(path As String, body As T, credentials As ICredentials = Nothing) As JObject
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonEventsPostWithJsonResponse*
  nameWithType.vb: HttpBehaviorSpecification.MakeJsonEventsPostWithJsonResponse(Of T)(String, T, ICredentials)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonEventsPostWithJsonResponse(Of T)(System.String, T, ICredentials)
  name.vb: MakeJsonEventsPostWithJsonResponse(Of T)(String, T, ICredentials)
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeEventsJsonPut``1(System.String,``0,ICredentials)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeEventsJsonPut``1(System.String,``0,ICredentials)
  id: MakeEventsJsonPut``1(System.String,``0,ICredentials)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: MakeEventsJsonPut<T>(String, T, ICredentials)
  nameWithType: HttpBehaviorSpecification.MakeEventsJsonPut<T>(String, T, ICredentials)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeEventsJsonPut<T>(System.String, T, ICredentials)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MakeEventsJsonPut
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 263
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected HttpWebResponse MakeEventsJsonPut<T>(string path, T body, ICredentials credentials)
    parameters:
    - id: path
      type: System.String
    - id: body
      type: '{T}'
    - id: credentials
      type: ICredentials
    typeParameters:
    - id: T
    return:
      type: HttpWebResponse
    content.vb: Protected Function MakeEventsJsonPut(Of T)(path As String, body As T, credentials As ICredentials) As HttpWebResponse
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeEventsJsonPut*
  nameWithType.vb: HttpBehaviorSpecification.MakeEventsJsonPut(Of T)(String, T, ICredentials)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeEventsJsonPut(Of T)(System.String, T, ICredentials)
  name.vb: MakeEventsJsonPut(Of T)(String, T, ICredentials)
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPut``1(System.String,``0,ICredentials)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPut``1(System.String,``0,ICredentials)
  id: MakeRawJsonPut``1(System.String,``0,ICredentials)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: MakeRawJsonPut<T>(String, T, ICredentials)
  nameWithType: HttpBehaviorSpecification.MakeRawJsonPut<T>(String, T, ICredentials)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPut<T>(System.String, T, ICredentials)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MakeRawJsonPut
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 270
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected HttpWebResponse MakeRawJsonPut<T>(string path, T body, ICredentials credentials)
    parameters:
    - id: path
      type: System.String
    - id: body
      type: '{T}'
    - id: credentials
      type: ICredentials
    typeParameters:
    - id: T
    return:
      type: HttpWebResponse
    content.vb: Protected Function MakeRawJsonPut(Of T)(path As String, body As T, credentials As ICredentials) As HttpWebResponse
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPut*
  nameWithType.vb: HttpBehaviorSpecification.MakeRawJsonPut(Of T)(String, T, ICredentials)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPut(Of T)(System.String, T, ICredentials)
  name.vb: MakeRawJsonPut(Of T)(String, T, ICredentials)
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeDelete(System.String,ICredentials)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeDelete(System.String,ICredentials)
  id: MakeDelete(System.String,ICredentials)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: MakeDelete(String, ICredentials)
  nameWithType: HttpBehaviorSpecification.MakeDelete(String, ICredentials)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeDelete(System.String, ICredentials)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MakeDelete
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 277
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected HttpWebResponse MakeDelete(string path, ICredentials credentials = null)
    parameters:
    - id: path
      type: System.String
    - id: credentials
      type: ICredentials
    return:
      type: HttpWebResponse
    content.vb: Protected Function MakeDelete(path As String, credentials As ICredentials = Nothing) As HttpWebResponse
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeDelete*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakePost(System.String,ICredentials)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakePost(System.String,ICredentials)
  id: MakePost(System.String,ICredentials)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: MakePost(String, ICredentials)
  nameWithType: HttpBehaviorSpecification.MakePost(String, ICredentials)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakePost(System.String, ICredentials)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MakePost
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 284
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected HttpWebResponse MakePost(string path, ICredentials credentials = null)
    parameters:
    - id: path
      type: System.String
    - id: credentials
      type: ICredentials
    return:
      type: HttpWebResponse
    content.vb: Protected Function MakePost(path As String, credentials As ICredentials = Nothing) As HttpWebResponse
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakePost*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetAtomXml(Uri,ICredentials)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetAtomXml(Uri,ICredentials)
  id: GetAtomXml(Uri,ICredentials)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: GetAtomXml(Uri, ICredentials)
  nameWithType: HttpBehaviorSpecification.GetAtomXml(Uri, ICredentials)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetAtomXml(Uri, ICredentials)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetAtomXml
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 291
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected XDocument GetAtomXml(Uri uri, ICredentials credentials = null)
    parameters:
    - id: uri
      type: Uri
    - id: credentials
      type: ICredentials
    return:
      type: XDocument
    content.vb: Protected Function GetAtomXml(uri As Uri, credentials As ICredentials = Nothing) As XDocument
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetAtomXml*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetXml(Uri,ICredentials)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetXml(Uri,ICredentials)
  id: GetXml(Uri,ICredentials)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: GetXml(Uri, ICredentials)
  nameWithType: HttpBehaviorSpecification.GetXml(Uri, ICredentials)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetXml(Uri, ICredentials)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetXml
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 297
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected XDocument GetXml(Uri uri, ICredentials credentials = null)
    parameters:
    - id: uri
      type: Uri
    - id: credentials
      type: ICredentials
    return:
      type: XDocument
    content.vb: Protected Function GetXml(uri As Uri, credentials As ICredentials = Nothing) As XDocument
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetXml*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson``1(System.String,System.String,ICredentials,NameValueCollection)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson``1(System.String,System.String,ICredentials,NameValueCollection)
  id: GetJson``1(System.String,System.String,ICredentials,NameValueCollection)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: GetJson<T>(String, String, ICredentials, NameValueCollection)
  nameWithType: HttpBehaviorSpecification.GetJson<T>(String, String, ICredentials, NameValueCollection)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson<T>(System.String, System.String, ICredentials, NameValueCollection)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetJson
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 303
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected T GetJson<T>(string path, string accept = null, ICredentials credentials = null, NameValueCollection headers = null)
    parameters:
    - id: path
      type: System.String
    - id: accept
      type: System.String
    - id: credentials
      type: ICredentials
    - id: headers
      type: NameValueCollection
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Protected Function GetJson(Of T)(path As String, accept As String = Nothing, credentials As ICredentials = Nothing, headers As NameValueCollection = Nothing) As T
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson*
  nameWithType.vb: HttpBehaviorSpecification.GetJson(Of T)(String, String, ICredentials, NameValueCollection)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson(Of T)(System.String, System.String, ICredentials, NameValueCollection)
  name.vb: GetJson(Of T)(String, String, ICredentials, NameValueCollection)
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson2``1(System.String,System.String,System.String,ICredentials)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson2``1(System.String,System.String,System.String,ICredentials)
  id: GetJson2``1(System.String,System.String,System.String,ICredentials)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: GetJson2<T>(String, String, String, ICredentials)
  nameWithType: HttpBehaviorSpecification.GetJson2<T>(String, String, String, ICredentials)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson2<T>(System.String, System.String, System.String, ICredentials)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetJson2
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 317
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected T GetJson2<T>(string path, string extra, string accept = null, ICredentials credentials = null)
    parameters:
    - id: path
      type: System.String
    - id: extra
      type: System.String
    - id: accept
      type: System.String
    - id: credentials
      type: ICredentials
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Protected Function GetJson2(Of T)(path As String, extra As String, accept As String = Nothing, credentials As ICredentials = Nothing) As T
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson2*
  nameWithType.vb: HttpBehaviorSpecification.GetJson2(Of T)(String, String, String, ICredentials)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson2(Of T)(System.String, System.String, System.String, ICredentials)
  name.vb: GetJson2(Of T)(String, String, String, ICredentials)
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJsonWithoutAcceptHeader``1(System.String)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJsonWithoutAcceptHeader``1(System.String)
  id: GetJsonWithoutAcceptHeader``1(System.String)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: GetJsonWithoutAcceptHeader<T>(String)
  nameWithType: HttpBehaviorSpecification.GetJsonWithoutAcceptHeader<T>(String)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJsonWithoutAcceptHeader<T>(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetJsonWithoutAcceptHeader
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 331
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected T GetJsonWithoutAcceptHeader<T>(string path)
    parameters:
    - id: path
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Protected Function GetJsonWithoutAcceptHeader(Of T)(path As String) As T
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJsonWithoutAcceptHeader*
  nameWithType.vb: HttpBehaviorSpecification.GetJsonWithoutAcceptHeader(Of T)(String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJsonWithoutAcceptHeader(Of T)(System.String)
  name.vb: GetJsonWithoutAcceptHeader(Of T)(String)
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.Get(System.String,System.String,System.String,ICredentials,System.Boolean,NameValueCollection)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.Get(System.String,System.String,System.String,ICredentials,System.Boolean,NameValueCollection)
  id: Get(System.String,System.String,System.String,ICredentials,System.Boolean,NameValueCollection)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: Get(String, String, String, ICredentials, Boolean, NameValueCollection)
  nameWithType: HttpBehaviorSpecification.Get(String, String, String, ICredentials, Boolean, NameValueCollection)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.Get(System.String, System.String, System.String, ICredentials, System.Boolean, NameValueCollection)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Get
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 350
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected void Get(string path, string extra, string accept = null, ICredentials credentials = null, bool setAcceptHeader = true, NameValueCollection headers = null)
    parameters:
    - id: path
      type: System.String
    - id: extra
      type: System.String
    - id: accept
      type: System.String
    - id: credentials
      type: ICredentials
    - id: setAcceptHeader
      type: System.Boolean
    - id: headers
      type: NameValueCollection
    content.vb: Protected Sub Get(path As String, extra As String, accept As String = Nothing, credentials As ICredentials = Nothing, setAcceptHeader As Boolean = True, headers As NameValueCollection = Nothing)
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.Get*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetRequestResponse(HttpWebRequest)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetRequestResponse(HttpWebRequest)
  id: GetRequestResponse(HttpWebRequest)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: GetRequestResponse(HttpWebRequest)
  nameWithType: HttpBehaviorSpecification.GetRequestResponse(HttpWebRequest)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetRequestResponse(HttpWebRequest)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetRequestResponse
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 364
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected HttpWebResponse GetRequestResponse(HttpWebRequest request)
    parameters:
    - id: request
      type: HttpWebRequest
    return:
      type: HttpWebResponse
    content.vb: Protected Function GetRequestResponse(request As HttpWebRequest) As HttpWebResponse
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetRequestResponse*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateEventsJsonPostRequest``1(System.String,System.String,``0,ICredentials)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateEventsJsonPostRequest``1(System.String,System.String,``0,ICredentials)
  id: CreateEventsJsonPostRequest``1(System.String,System.String,``0,ICredentials)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: CreateEventsJsonPostRequest<T>(String, String, T, ICredentials)
  nameWithType: HttpBehaviorSpecification.CreateEventsJsonPostRequest<T>(String, String, T, ICredentials)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateEventsJsonPostRequest<T>(System.String, System.String, T, ICredentials)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateEventsJsonPostRequest
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 406
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected HttpWebRequest CreateEventsJsonPostRequest<T>(string path, string method, T body, ICredentials credentials = null)
    parameters:
    - id: path
      type: System.String
    - id: method
      type: System.String
    - id: body
      type: '{T}'
    - id: credentials
      type: ICredentials
    typeParameters:
    - id: T
    return:
      type: HttpWebRequest
    content.vb: Protected Function CreateEventsJsonPostRequest(Of T)(path As String, method As String, body As T, credentials As ICredentials = Nothing) As HttpWebRequest
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateEventsJsonPostRequest*
  nameWithType.vb: HttpBehaviorSpecification.CreateEventsJsonPostRequest(Of T)(String, String, T, ICredentials)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateEventsJsonPostRequest(Of T)(System.String, System.String, T, ICredentials)
  name.vb: CreateEventsJsonPostRequest(Of T)(String, String, T, ICredentials)
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRawJsonPostRequest``1(System.String,System.String,``0,ICredentials)
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRawJsonPostRequest``1(System.String,System.String,``0,ICredentials)
  id: CreateRawJsonPostRequest``1(System.String,System.String,``0,ICredentials)
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: CreateRawJsonPostRequest<T>(String, String, T, ICredentials)
  nameWithType: HttpBehaviorSpecification.CreateRawJsonPostRequest<T>(String, String, T, ICredentials)
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRawJsonPostRequest<T>(System.String, System.String, T, ICredentials)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateRawJsonPostRequest
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 414
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected HttpWebRequest CreateRawJsonPostRequest<T>(string path, string method, T body, ICredentials credentials = null)
    parameters:
    - id: path
      type: System.String
    - id: method
      type: System.String
    - id: body
      type: '{T}'
    - id: credentials
      type: ICredentials
    typeParameters:
    - id: T
    return:
      type: HttpWebRequest
    content.vb: Protected Function CreateRawJsonPostRequest(Of T)(path As String, method As String, body As T, credentials As ICredentials = Nothing) As HttpWebRequest
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRawJsonPostRequest*
  nameWithType.vb: HttpBehaviorSpecification.CreateRawJsonPostRequest(Of T)(String, String, T, ICredentials)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRawJsonPostRequest(Of T)(System.String, System.String, T, ICredentials)
  name.vb: CreateRawJsonPostRequest(Of T)(String, String, T, ICredentials)
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.Given
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.Given
  id: Given
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: Given()
  nameWithType: HttpBehaviorSpecification.Given()
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.Given()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Given
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 429
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected abstract void Given()
    content.vb: Protected MustOverride Sub Given
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.Given*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.When
  commentId: M:EventStore.Core.Tests.Http.HttpBehaviorSpecification.When
  id: When
  parent: EventStore.Core.Tests.Http.HttpBehaviorSpecification
  langs:
  - csharp
  - vb
  name: When()
  nameWithType: HttpBehaviorSpecification.When()
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.When()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: When
    path: ../EventStore/src/EventStore.Core.Tests/Http/HttpBehaviorSpecification.cs
    startLine: 430
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Http
  syntax:
    content: protected abstract void When()
    content.vb: Protected MustOverride Sub When
  overload: EventStore.Core.Tests.Http.HttpBehaviorSpecification.When*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: EventStore.Core.Tests.Http
  commentId: N:EventStore.Core.Tests.Http
  isExternal: false
  name: EventStore.Core.Tests.Http
  nameWithType: EventStore.Core.Tests.Http
  fullName: EventStore.Core.Tests.Http
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  commentId: T:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithDirectoryPerTestFixture
  nameWithType: SpecificationWithDirectoryPerTestFixture
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  commentId: F:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: PathName
  nameWithType: SpecificationWithDirectoryPerTestFixture.PathName
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: GetTempFilePath()
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: true
  name: GetFilePathFor(String)
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor(String)
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<HttpBehaviorSpecification>()
  nameWithType: ProtobufExtensions.Serialize<HttpBehaviorSpecification>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Http.HttpBehaviorSpecification>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of HttpBehaviorSpecification)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Http.HttpBehaviorSpecification)()
  name.vb: Serialize(Of HttpBehaviorSpecification)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<HttpBehaviorSpecification>
    nameWithType: ProtobufExtensions.Serialize<HttpBehaviorSpecification>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Http.HttpBehaviorSpecification>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of HttpBehaviorSpecification)
    nameWithType: ProtobufExtensions.Serialize(Of HttpBehaviorSpecification)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Http.HttpBehaviorSpecification)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<HttpBehaviorSpecification>()
  nameWithType: ProtobufExtensions.SerializeToArray<HttpBehaviorSpecification>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Http.HttpBehaviorSpecification>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of HttpBehaviorSpecification)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Http.HttpBehaviorSpecification)()
  name.vb: SerializeToArray(Of HttpBehaviorSpecification)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<HttpBehaviorSpecification>
    nameWithType: ProtobufExtensions.SerializeToArray<HttpBehaviorSpecification>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Http.HttpBehaviorSpecification>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of HttpBehaviorSpecification)
    nameWithType: ProtobufExtensions.SerializeToArray(Of HttpBehaviorSpecification)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Http.HttpBehaviorSpecification)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Helpers.MiniNode
  commentId: T:EventStore.Core.Tests.Helpers.MiniNode
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: MiniNode
  nameWithType: MiniNode
  fullName: EventStore.Core.Tests.Helpers.MiniNode
- uid: EventStore.ClientAPI.IEventStoreConnection
  commentId: T:EventStore.ClientAPI.IEventStoreConnection
  parent: EventStore.ClientAPI
  isExternal: false
  name: IEventStoreConnection
  nameWithType: IEventStoreConnection
  fullName: EventStore.ClientAPI.IEventStoreConnection
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  isExternal: false
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: HttpWebResponse
  isExternal: true
  name: HttpWebResponse
  nameWithType: HttpWebResponse
  fullName: HttpWebResponse
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: JsonException
  commentId: '!:JsonException'
  isExternal: true
  name: JsonException
  nameWithType: JsonException
  fullName: JsonException
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureSetUp()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestFixtureSetUp*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestFixtureSetUp
  isExternal: false
  name: TestFixtureSetUp
  nameWithType: HttpBehaviorSpecification.TestFixtureSetUp
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestFixtureSetUp
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestStream*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestStream
  isExternal: false
  name: TestStream
  nameWithType: HttpBehaviorSpecification.TestStream
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestStream
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestStreamName*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestStreamName
  isExternal: false
  name: TestStreamName
  nameWithType: HttpBehaviorSpecification.TestStreamName
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestStreamName
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestMetadataStream*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestMetadataStream
  isExternal: false
  name: TestMetadataStream
  nameWithType: HttpBehaviorSpecification.TestMetadataStream
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestMetadataStream
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.Tag*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.Tag
  isExternal: false
  name: Tag
  nameWithType: HttpBehaviorSpecification.Tag
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.Tag
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateMiniNode*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateMiniNode
  isExternal: false
  name: CreateMiniNode
  nameWithType: HttpBehaviorSpecification.CreateMiniNode
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateMiniNode
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GivenSkipInitializeStandardUsersCheck*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.GivenSkipInitializeStandardUsersCheck
  isExternal: false
  name: GivenSkipInitializeStandardUsersCheck
  nameWithType: HttpBehaviorSpecification.GivenSkipInitializeStandardUsersCheck
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GivenSkipInitializeStandardUsersCheck
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureTearDown()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestFixtureTearDown*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestFixtureTearDown
  isExternal: false
  name: TestFixtureTearDown
  nameWithType: HttpBehaviorSpecification.TestFixtureTearDown
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.TestFixtureTearDown
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRequest*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRequest
  isExternal: false
  name: CreateRequest
  nameWithType: HttpBehaviorSpecification.CreateRequest
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRequest
- uid: ICredentials
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: ICredentials
- uid: NameValueCollection
  isExternal: true
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: NameValueCollection
- uid: HttpWebRequest
  isExternal: true
  name: HttpWebRequest
  nameWithType: HttpWebRequest
  fullName: HttpWebRequest
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeUrl*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeUrl
  isExternal: false
  name: MakeUrl
  nameWithType: HttpBehaviorSpecification.MakeUrl
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeUrl
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPut*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPut
  isExternal: false
  name: MakeJsonPut
  nameWithType: HttpBehaviorSpecification.MakeJsonPut
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPut
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPost*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPost
  isExternal: false
  name: MakeJsonPost
  nameWithType: HttpBehaviorSpecification.MakeJsonPost
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPost
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeArrayEventsPost*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeArrayEventsPost
  isExternal: false
  name: MakeArrayEventsPost
  nameWithType: HttpBehaviorSpecification.MakeArrayEventsPost
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeArrayEventsPost
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPost*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPost
  isExternal: false
  name: MakeRawJsonPost
  nameWithType: HttpBehaviorSpecification.MakeRawJsonPost
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPost
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPostWithJsonResponse*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPostWithJsonResponse
  isExternal: false
  name: MakeJsonPostWithJsonResponse
  nameWithType: HttpBehaviorSpecification.MakeJsonPostWithJsonResponse
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonPostWithJsonResponse
- uid: JObject
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: JObject
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonEventsPostWithJsonResponse*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonEventsPostWithJsonResponse
  isExternal: false
  name: MakeJsonEventsPostWithJsonResponse
  nameWithType: HttpBehaviorSpecification.MakeJsonEventsPostWithJsonResponse
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeJsonEventsPostWithJsonResponse
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeEventsJsonPut*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeEventsJsonPut
  isExternal: false
  name: MakeEventsJsonPut
  nameWithType: HttpBehaviorSpecification.MakeEventsJsonPut
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeEventsJsonPut
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPut*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPut
  isExternal: false
  name: MakeRawJsonPut
  nameWithType: HttpBehaviorSpecification.MakeRawJsonPut
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeRawJsonPut
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeDelete*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeDelete
  isExternal: false
  name: MakeDelete
  nameWithType: HttpBehaviorSpecification.MakeDelete
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakeDelete
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakePost*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakePost
  isExternal: false
  name: MakePost
  nameWithType: HttpBehaviorSpecification.MakePost
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.MakePost
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetAtomXml*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetAtomXml
  isExternal: false
  name: GetAtomXml
  nameWithType: HttpBehaviorSpecification.GetAtomXml
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetAtomXml
- uid: XDocument
  isExternal: true
  name: XDocument
  nameWithType: XDocument
  fullName: XDocument
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetXml*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetXml
  isExternal: false
  name: GetXml
  nameWithType: HttpBehaviorSpecification.GetXml
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetXml
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson
  isExternal: false
  name: GetJson
  nameWithType: HttpBehaviorSpecification.GetJson
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson2*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson2
  isExternal: false
  name: GetJson2
  nameWithType: HttpBehaviorSpecification.GetJson2
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJson2
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJsonWithoutAcceptHeader*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJsonWithoutAcceptHeader
  isExternal: false
  name: GetJsonWithoutAcceptHeader
  nameWithType: HttpBehaviorSpecification.GetJsonWithoutAcceptHeader
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetJsonWithoutAcceptHeader
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.Get*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.Get
  isExternal: false
  name: Get
  nameWithType: HttpBehaviorSpecification.Get
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.Get
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetRequestResponse*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetRequestResponse
  isExternal: false
  name: GetRequestResponse
  nameWithType: HttpBehaviorSpecification.GetRequestResponse
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.GetRequestResponse
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateEventsJsonPostRequest*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateEventsJsonPostRequest
  isExternal: false
  name: CreateEventsJsonPostRequest
  nameWithType: HttpBehaviorSpecification.CreateEventsJsonPostRequest
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateEventsJsonPostRequest
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRawJsonPostRequest*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRawJsonPostRequest
  isExternal: false
  name: CreateRawJsonPostRequest
  nameWithType: HttpBehaviorSpecification.CreateRawJsonPostRequest
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.CreateRawJsonPostRequest
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.Given*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.Given
  isExternal: false
  name: Given
  nameWithType: HttpBehaviorSpecification.Given
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.Given
- uid: EventStore.Core.Tests.Http.HttpBehaviorSpecification.When*
  commentId: Overload:EventStore.Core.Tests.Http.HttpBehaviorSpecification.When
  isExternal: false
  name: When
  nameWithType: HttpBehaviorSpecification.When
  fullName: EventStore.Core.Tests.Http.HttpBehaviorSpecification.When

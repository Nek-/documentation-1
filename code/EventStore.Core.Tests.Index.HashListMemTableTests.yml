### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Index.HashListMemTableTests
  commentId: T:EventStore.Core.Tests.Index.HashListMemTableTests
  id: HashListMemTableTests
  parent: EventStore.Core.Tests.Index
  children:
  - EventStore.Core.Tests.Index.HashListMemTableTests.#ctor
  langs:
  - csharp
  - vb
  name: HashListMemTableTests
  nameWithType: HashListMemTableTests
  fullName: EventStore.Core.Tests.Index.HashListMemTableTests
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/MemTableTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HashListMemTableTests
    path: ../EventStore/src/EventStore.Core.Tests/Index/MemTableTests.cs
    startLine: 9
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index
  syntax:
    content: 'public class HashListMemTableTests : MemTableTestsFixture'
    content.vb: >-
      Public Class HashListMemTableTests

          Inherits MemTableTestsFixture
  inheritance:
  - System.Object
  - EventStore.Core.Tests.Index.MemTableTestsFixture
  inheritedMembers:
  - EventStore.Core.Tests.Index.MemTableTestsFixture.MemTable
  - EventStore.Core.Tests.Index.MemTableTestsFixture.SetUp
  - EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_start_version
  - EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_end_version
  - EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_get_one_entry_query_when_provided_with_negative_version
  - EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_version
  - EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_position
  - EventStore.Core.Tests.Index.MemTableTestsFixture.empty_memtable_has_count_of_zero
  - EventStore.Core.Tests.Index.MemTableTestsFixture.adding_an_item_increments_count
  - EventStore.Core.Tests.Index.MemTableTestsFixture.non_existent_item_is_not_found
  - EventStore.Core.Tests.Index.MemTableTestsFixture.existing_item_is_found
  - EventStore.Core.Tests.Index.MemTableTestsFixture.items_come_out_sorted
  - EventStore.Core.Tests.Index.MemTableTestsFixture.items_come_out_sorted_with_duplicates_in_descending_order
  - EventStore.Core.Tests.Index.MemTableTestsFixture.can_do_range_query_of_existing_items
  - EventStore.Core.Tests.Index.MemTableTestsFixture.can_do_range_query_of_existing_items_with_duplicates_on_edges
  - EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_of_non_existing_stream_returns_nothing
  - EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_of_non_existing_version_returns_nothing
  - EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_with_hole_returns_items_included
  - EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_in_range_but_not_end_results_returns_items_included
  - EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_in_range_but_not_start_results_returns_items_included
  - EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_and_start_exclusive_results_returns_items_included
  - EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included
  - EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates
  - EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_items_included
  - EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_duplicated_items_included
  - EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included
  - EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included_with_duplicates
  - EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_less_than_all_items_returns_nothing
  - EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_greater_than_all_items_returns_nothing
  - EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_one_value_returns_value_with_highest_position
  - EventStore.Core.Tests.Index.MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_duplicated
  - EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_one_value_returns_the_value_with_largest_position_when_triduplicated
  - EventStore.Core.Tests.Index.MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated
  - EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_memtable
  - EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_stream
  - EventStore.Core.Tests.Index.MemTableTestsFixture.single_item_is_latest
  - EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_returns_correct_entry
  - EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_when_duplicated_entries_returns_the_one_with_largest_position
  - EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_returns_the_entry_with_the_largest_position_when_triduplicated
  - EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_memtable
  - EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_stream
  - EventStore.Core.Tests.Index.MemTableTestsFixture.single_item_is_oldest
  - EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_returns_correct_entry
  - EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_when_duplicated_entries_returns_the_one_with_smallest_position
  - EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_returns_the_entry_with_the_smallest_position_when_triduplicated
  - EventStore.Core.Tests.Index.MemTableTestsFixture.the_smallest_items_with_hash_collisions_can_be_found
  - EventStore.Core.Tests.Index.MemTableTestsFixture.the_smallest_items_with_hash_collisions_are_returned_in_descending_order
  - EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
  - EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
  - EventStore.Core.Tests.Index.MemTableTestsFixture.the_largest_items_with_hash_collisions_can_be_found
  - EventStore.Core.Tests.Index.MemTableTestsFixture.the_largest_items_with_hash_collisions_are_returned_in_descending_order
  - EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_for_largest_hash_collision_returns_correct_index_entry
  - EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_for_largest_hash_with_collisions_returns_correct_index_entry
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Index.HashListMemTableTests.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Index.HashListMemTableTests.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Index.HashListMemTableTests.#ctor
  commentId: M:EventStore.Core.Tests.Index.HashListMemTableTests.#ctor
  id: '#ctor'
  parent: EventStore.Core.Tests.Index.HashListMemTableTests
  langs:
  - csharp
  - vb
  name: HashListMemTableTests()
  nameWithType: HashListMemTableTests.HashListMemTableTests()
  fullName: EventStore.Core.Tests.Index.HashListMemTableTests.HashListMemTableTests()
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/MemTableTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Index/MemTableTests.cs
    startLine: 12
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index
  syntax:
    content: public HashListMemTableTests()
    content.vb: Public Sub New
  overload: EventStore.Core.Tests.Index.HashListMemTableTests.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Index
  commentId: N:EventStore.Core.Tests.Index
  isExternal: false
  name: EventStore.Core.Tests.Index
  nameWithType: EventStore.Core.Tests.Index
  fullName: EventStore.Core.Tests.Index
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture
  commentId: T:EventStore.Core.Tests.Index.MemTableTestsFixture
  parent: EventStore.Core.Tests.Index
  isExternal: false
  name: MemTableTestsFixture
  nameWithType: MemTableTestsFixture
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.MemTable
  commentId: F:EventStore.Core.Tests.Index.MemTableTestsFixture.MemTable
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: MemTable
  nameWithType: MemTableTestsFixture.MemTable
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.MemTable
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.SetUp
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.SetUp
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: SetUp()
  nameWithType: MemTableTestsFixture.SetUp()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.SetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.SetUp
    name: SetUp
    nameWithType: MemTableTestsFixture.SetUp
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.SetUp
    name: SetUp
    nameWithType: MemTableTestsFixture.SetUp
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_start_version
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_start_version
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_start_version()
  nameWithType: MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_start_version()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_start_version()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_start_version
    name: throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_start_version
    nameWithType: MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_start_version
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_start_version
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_start_version
    name: throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_start_version
    nameWithType: MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_start_version
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_start_version
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_end_version
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_end_version
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_end_version()
  nameWithType: MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_end_version()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_end_version()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_end_version
    name: throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_end_version
    nameWithType: MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_end_version
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_end_version
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_end_version
    name: throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_end_version
    nameWithType: MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_end_version
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_range_query_when_provided_with_negative_end_version
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_get_one_entry_query_when_provided_with_negative_version
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_get_one_entry_query_when_provided_with_negative_version
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: throw_argumentoutofrangeexception_on_get_one_entry_query_when_provided_with_negative_version()
  nameWithType: MemTableTestsFixture.throw_argumentoutofrangeexception_on_get_one_entry_query_when_provided_with_negative_version()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_get_one_entry_query_when_provided_with_negative_version()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_get_one_entry_query_when_provided_with_negative_version
    name: throw_argumentoutofrangeexception_on_get_one_entry_query_when_provided_with_negative_version
    nameWithType: MemTableTestsFixture.throw_argumentoutofrangeexception_on_get_one_entry_query_when_provided_with_negative_version
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_get_one_entry_query_when_provided_with_negative_version
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_get_one_entry_query_when_provided_with_negative_version
    name: throw_argumentoutofrangeexception_on_get_one_entry_query_when_provided_with_negative_version
    nameWithType: MemTableTestsFixture.throw_argumentoutofrangeexception_on_get_one_entry_query_when_provided_with_negative_version
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_get_one_entry_query_when_provided_with_negative_version
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_version
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_version
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: throw_argumentoutofrangeexception_on_adding_entry_with_negative_version()
  nameWithType: MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_version()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_version()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_version
    name: throw_argumentoutofrangeexception_on_adding_entry_with_negative_version
    nameWithType: MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_version
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_version
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_version
    name: throw_argumentoutofrangeexception_on_adding_entry_with_negative_version
    nameWithType: MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_version
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_version
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_position
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_position
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: throw_argumentoutofrangeexception_on_adding_entry_with_negative_position()
  nameWithType: MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_position()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_position()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_position
    name: throw_argumentoutofrangeexception_on_adding_entry_with_negative_position
    nameWithType: MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_position
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_position
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_position
    name: throw_argumentoutofrangeexception_on_adding_entry_with_negative_position
    nameWithType: MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_position
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.throw_argumentoutofrangeexception_on_adding_entry_with_negative_position
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.empty_memtable_has_count_of_zero
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.empty_memtable_has_count_of_zero
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: empty_memtable_has_count_of_zero()
  nameWithType: MemTableTestsFixture.empty_memtable_has_count_of_zero()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.empty_memtable_has_count_of_zero()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.empty_memtable_has_count_of_zero
    name: empty_memtable_has_count_of_zero
    nameWithType: MemTableTestsFixture.empty_memtable_has_count_of_zero
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.empty_memtable_has_count_of_zero
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.empty_memtable_has_count_of_zero
    name: empty_memtable_has_count_of_zero
    nameWithType: MemTableTestsFixture.empty_memtable_has_count_of_zero
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.empty_memtable_has_count_of_zero
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.adding_an_item_increments_count
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.adding_an_item_increments_count
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: adding_an_item_increments_count()
  nameWithType: MemTableTestsFixture.adding_an_item_increments_count()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.adding_an_item_increments_count()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.adding_an_item_increments_count
    name: adding_an_item_increments_count
    nameWithType: MemTableTestsFixture.adding_an_item_increments_count
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.adding_an_item_increments_count
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.adding_an_item_increments_count
    name: adding_an_item_increments_count
    nameWithType: MemTableTestsFixture.adding_an_item_increments_count
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.adding_an_item_increments_count
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.non_existent_item_is_not_found
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.non_existent_item_is_not_found
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: non_existent_item_is_not_found()
  nameWithType: MemTableTestsFixture.non_existent_item_is_not_found()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.non_existent_item_is_not_found()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.non_existent_item_is_not_found
    name: non_existent_item_is_not_found
    nameWithType: MemTableTestsFixture.non_existent_item_is_not_found
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.non_existent_item_is_not_found
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.non_existent_item_is_not_found
    name: non_existent_item_is_not_found
    nameWithType: MemTableTestsFixture.non_existent_item_is_not_found
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.non_existent_item_is_not_found
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.existing_item_is_found
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.existing_item_is_found
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: existing_item_is_found()
  nameWithType: MemTableTestsFixture.existing_item_is_found()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.existing_item_is_found()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.existing_item_is_found
    name: existing_item_is_found
    nameWithType: MemTableTestsFixture.existing_item_is_found
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.existing_item_is_found
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.existing_item_is_found
    name: existing_item_is_found
    nameWithType: MemTableTestsFixture.existing_item_is_found
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.existing_item_is_found
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.items_come_out_sorted
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.items_come_out_sorted
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: items_come_out_sorted()
  nameWithType: MemTableTestsFixture.items_come_out_sorted()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.items_come_out_sorted()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.items_come_out_sorted
    name: items_come_out_sorted
    nameWithType: MemTableTestsFixture.items_come_out_sorted
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.items_come_out_sorted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.items_come_out_sorted
    name: items_come_out_sorted
    nameWithType: MemTableTestsFixture.items_come_out_sorted
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.items_come_out_sorted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.items_come_out_sorted_with_duplicates_in_descending_order
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.items_come_out_sorted_with_duplicates_in_descending_order
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: items_come_out_sorted_with_duplicates_in_descending_order()
  nameWithType: MemTableTestsFixture.items_come_out_sorted_with_duplicates_in_descending_order()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.items_come_out_sorted_with_duplicates_in_descending_order()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.items_come_out_sorted_with_duplicates_in_descending_order
    name: items_come_out_sorted_with_duplicates_in_descending_order
    nameWithType: MemTableTestsFixture.items_come_out_sorted_with_duplicates_in_descending_order
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.items_come_out_sorted_with_duplicates_in_descending_order
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.items_come_out_sorted_with_duplicates_in_descending_order
    name: items_come_out_sorted_with_duplicates_in_descending_order
    nameWithType: MemTableTestsFixture.items_come_out_sorted_with_duplicates_in_descending_order
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.items_come_out_sorted_with_duplicates_in_descending_order
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.can_do_range_query_of_existing_items
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.can_do_range_query_of_existing_items
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: can_do_range_query_of_existing_items()
  nameWithType: MemTableTestsFixture.can_do_range_query_of_existing_items()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.can_do_range_query_of_existing_items()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.can_do_range_query_of_existing_items
    name: can_do_range_query_of_existing_items
    nameWithType: MemTableTestsFixture.can_do_range_query_of_existing_items
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.can_do_range_query_of_existing_items
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.can_do_range_query_of_existing_items
    name: can_do_range_query_of_existing_items
    nameWithType: MemTableTestsFixture.can_do_range_query_of_existing_items
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.can_do_range_query_of_existing_items
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.can_do_range_query_of_existing_items_with_duplicates_on_edges
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.can_do_range_query_of_existing_items_with_duplicates_on_edges
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: can_do_range_query_of_existing_items_with_duplicates_on_edges()
  nameWithType: MemTableTestsFixture.can_do_range_query_of_existing_items_with_duplicates_on_edges()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.can_do_range_query_of_existing_items_with_duplicates_on_edges()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.can_do_range_query_of_existing_items_with_duplicates_on_edges
    name: can_do_range_query_of_existing_items_with_duplicates_on_edges
    nameWithType: MemTableTestsFixture.can_do_range_query_of_existing_items_with_duplicates_on_edges
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.can_do_range_query_of_existing_items_with_duplicates_on_edges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.can_do_range_query_of_existing_items_with_duplicates_on_edges
    name: can_do_range_query_of_existing_items_with_duplicates_on_edges
    nameWithType: MemTableTestsFixture.can_do_range_query_of_existing_items_with_duplicates_on_edges
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.can_do_range_query_of_existing_items_with_duplicates_on_edges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_of_non_existing_stream_returns_nothing
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_of_non_existing_stream_returns_nothing
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: range_query_of_non_existing_stream_returns_nothing()
  nameWithType: MemTableTestsFixture.range_query_of_non_existing_stream_returns_nothing()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_of_non_existing_stream_returns_nothing()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_of_non_existing_stream_returns_nothing
    name: range_query_of_non_existing_stream_returns_nothing
    nameWithType: MemTableTestsFixture.range_query_of_non_existing_stream_returns_nothing
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_of_non_existing_stream_returns_nothing
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_of_non_existing_stream_returns_nothing
    name: range_query_of_non_existing_stream_returns_nothing
    nameWithType: MemTableTestsFixture.range_query_of_non_existing_stream_returns_nothing
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_of_non_existing_stream_returns_nothing
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_of_non_existing_version_returns_nothing
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_of_non_existing_version_returns_nothing
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: range_query_of_non_existing_version_returns_nothing()
  nameWithType: MemTableTestsFixture.range_query_of_non_existing_version_returns_nothing()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_of_non_existing_version_returns_nothing()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_of_non_existing_version_returns_nothing
    name: range_query_of_non_existing_version_returns_nothing
    nameWithType: MemTableTestsFixture.range_query_of_non_existing_version_returns_nothing
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_of_non_existing_version_returns_nothing
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_of_non_existing_version_returns_nothing
    name: range_query_of_non_existing_version_returns_nothing
    nameWithType: MemTableTestsFixture.range_query_of_non_existing_version_returns_nothing
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_of_non_existing_version_returns_nothing
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_with_hole_returns_items_included
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_with_hole_returns_items_included
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: range_query_with_hole_returns_items_included()
  nameWithType: MemTableTestsFixture.range_query_with_hole_returns_items_included()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_with_hole_returns_items_included()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_with_hole_returns_items_included
    name: range_query_with_hole_returns_items_included
    nameWithType: MemTableTestsFixture.range_query_with_hole_returns_items_included
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_with_hole_returns_items_included
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_with_hole_returns_items_included
    name: range_query_with_hole_returns_items_included
    nameWithType: MemTableTestsFixture.range_query_with_hole_returns_items_included
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.range_query_with_hole_returns_items_included
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_in_range_but_not_end_results_returns_items_included
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_in_range_but_not_end_results_returns_items_included
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: query_with_start_in_range_but_not_end_results_returns_items_included()
  nameWithType: MemTableTestsFixture.query_with_start_in_range_but_not_end_results_returns_items_included()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_in_range_but_not_end_results_returns_items_included()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_in_range_but_not_end_results_returns_items_included
    name: query_with_start_in_range_but_not_end_results_returns_items_included
    nameWithType: MemTableTestsFixture.query_with_start_in_range_but_not_end_results_returns_items_included
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_in_range_but_not_end_results_returns_items_included
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_in_range_but_not_end_results_returns_items_included
    name: query_with_start_in_range_but_not_end_results_returns_items_included
    nameWithType: MemTableTestsFixture.query_with_start_in_range_but_not_end_results_returns_items_included
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_in_range_but_not_end_results_returns_items_included
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_in_range_but_not_start_results_returns_items_included
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_in_range_but_not_start_results_returns_items_included
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: query_with_end_in_range_but_not_start_results_returns_items_included()
  nameWithType: MemTableTestsFixture.query_with_end_in_range_but_not_start_results_returns_items_included()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_in_range_but_not_start_results_returns_items_included()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_in_range_but_not_start_results_returns_items_included
    name: query_with_end_in_range_but_not_start_results_returns_items_included
    nameWithType: MemTableTestsFixture.query_with_end_in_range_but_not_start_results_returns_items_included
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_in_range_but_not_start_results_returns_items_included
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_in_range_but_not_start_results_returns_items_included
    name: query_with_end_in_range_but_not_start_results_returns_items_included
    nameWithType: MemTableTestsFixture.query_with_end_in_range_but_not_start_results_returns_items_included
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_in_range_but_not_start_results_returns_items_included
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_and_start_exclusive_results_returns_items_included
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_and_start_exclusive_results_returns_items_included
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: query_with_end_and_start_exclusive_results_returns_items_included()
  nameWithType: MemTableTestsFixture.query_with_end_and_start_exclusive_results_returns_items_included()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_and_start_exclusive_results_returns_items_included()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_and_start_exclusive_results_returns_items_included
    name: query_with_end_and_start_exclusive_results_returns_items_included
    nameWithType: MemTableTestsFixture.query_with_end_and_start_exclusive_results_returns_items_included
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_and_start_exclusive_results_returns_items_included
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_and_start_exclusive_results_returns_items_included
    name: query_with_end_and_start_exclusive_results_returns_items_included
    nameWithType: MemTableTestsFixture.query_with_end_and_start_exclusive_results_returns_items_included
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_and_start_exclusive_results_returns_items_included
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: query_with_end_inside_the_hole_in_list_returns_items_included()
  nameWithType: MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included
    name: query_with_end_inside_the_hole_in_list_returns_items_included
    nameWithType: MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included
    name: query_with_end_inside_the_hole_in_list_returns_items_included
    nameWithType: MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates()
  nameWithType: MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates
    name: query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates
    nameWithType: MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates
    name: query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates
    nameWithType: MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_end_inside_the_hole_in_list_returns_items_included_with_duplicates
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_items_included
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_items_included
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: query_with_start_inside_the_hole_in_list_returns_items_included()
  nameWithType: MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_items_included()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_items_included()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_items_included
    name: query_with_start_inside_the_hole_in_list_returns_items_included
    nameWithType: MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_items_included
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_items_included
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_items_included
    name: query_with_start_inside_the_hole_in_list_returns_items_included
    nameWithType: MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_items_included
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_items_included
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_duplicated_items_included
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_duplicated_items_included
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: query_with_start_inside_the_hole_in_list_returns_duplicated_items_included()
  nameWithType: MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_duplicated_items_included()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_duplicated_items_included()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_duplicated_items_included
    name: query_with_start_inside_the_hole_in_list_returns_duplicated_items_included
    nameWithType: MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_duplicated_items_included
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_duplicated_items_included
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_duplicated_items_included
    name: query_with_start_inside_the_hole_in_list_returns_duplicated_items_included
    nameWithType: MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_duplicated_items_included
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_inside_the_hole_in_list_returns_duplicated_items_included
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: query_with_start_and_end_inside_the_hole_in_list_returns_items_included()
  nameWithType: MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included
    name: query_with_start_and_end_inside_the_hole_in_list_returns_items_included
    nameWithType: MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included
    name: query_with_start_and_end_inside_the_hole_in_list_returns_items_included
    nameWithType: MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included_with_duplicates
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included_with_duplicates
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: query_with_start_and_end_inside_the_hole_in_list_returns_items_included_with_duplicates()
  nameWithType: MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included_with_duplicates()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included_with_duplicates()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included_with_duplicates
    name: query_with_start_and_end_inside_the_hole_in_list_returns_items_included_with_duplicates
    nameWithType: MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included_with_duplicates
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included_with_duplicates
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included_with_duplicates
    name: query_with_start_and_end_inside_the_hole_in_list_returns_items_included_with_duplicates
    nameWithType: MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included_with_duplicates
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_inside_the_hole_in_list_returns_items_included_with_duplicates
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_less_than_all_items_returns_nothing
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_less_than_all_items_returns_nothing
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: query_with_start_and_end_less_than_all_items_returns_nothing()
  nameWithType: MemTableTestsFixture.query_with_start_and_end_less_than_all_items_returns_nothing()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_less_than_all_items_returns_nothing()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_less_than_all_items_returns_nothing
    name: query_with_start_and_end_less_than_all_items_returns_nothing
    nameWithType: MemTableTestsFixture.query_with_start_and_end_less_than_all_items_returns_nothing
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_less_than_all_items_returns_nothing
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_less_than_all_items_returns_nothing
    name: query_with_start_and_end_less_than_all_items_returns_nothing
    nameWithType: MemTableTestsFixture.query_with_start_and_end_less_than_all_items_returns_nothing
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_less_than_all_items_returns_nothing
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_greater_than_all_items_returns_nothing
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_greater_than_all_items_returns_nothing
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: query_with_start_and_end_greater_than_all_items_returns_nothing()
  nameWithType: MemTableTestsFixture.query_with_start_and_end_greater_than_all_items_returns_nothing()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_greater_than_all_items_returns_nothing()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_greater_than_all_items_returns_nothing
    name: query_with_start_and_end_greater_than_all_items_returns_nothing
    nameWithType: MemTableTestsFixture.query_with_start_and_end_greater_than_all_items_returns_nothing
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_greater_than_all_items_returns_nothing
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_greater_than_all_items_returns_nothing
    name: query_with_start_and_end_greater_than_all_items_returns_nothing
    nameWithType: MemTableTestsFixture.query_with_start_and_end_greater_than_all_items_returns_nothing
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.query_with_start_and_end_greater_than_all_items_returns_nothing
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_one_value_returns_value_with_highest_position
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_one_value_returns_value_with_highest_position
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: try_get_one_value_returns_value_with_highest_position()
  nameWithType: MemTableTestsFixture.try_get_one_value_returns_value_with_highest_position()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_one_value_returns_value_with_highest_position()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_one_value_returns_value_with_highest_position
    name: try_get_one_value_returns_value_with_highest_position
    nameWithType: MemTableTestsFixture.try_get_one_value_returns_value_with_highest_position
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_one_value_returns_value_with_highest_position
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_one_value_returns_value_with_highest_position
    name: try_get_one_value_returns_value_with_highest_position
    nameWithType: MemTableTestsFixture.try_get_one_value_returns_value_with_highest_position
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_one_value_returns_value_with_highest_position
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_duplicated
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_duplicated
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: get_range_of_same_version_returns_both_values_in_descending_order_when_duplicated()
  nameWithType: MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_duplicated()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_duplicated()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_duplicated
    name: get_range_of_same_version_returns_both_values_in_descending_order_when_duplicated
    nameWithType: MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_duplicated
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_duplicated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_duplicated
    name: get_range_of_same_version_returns_both_values_in_descending_order_when_duplicated
    nameWithType: MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_duplicated
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_duplicated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_one_value_returns_the_value_with_largest_position_when_triduplicated
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_one_value_returns_the_value_with_largest_position_when_triduplicated
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: try_get_one_value_returns_the_value_with_largest_position_when_triduplicated()
  nameWithType: MemTableTestsFixture.try_get_one_value_returns_the_value_with_largest_position_when_triduplicated()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_one_value_returns_the_value_with_largest_position_when_triduplicated()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_one_value_returns_the_value_with_largest_position_when_triduplicated
    name: try_get_one_value_returns_the_value_with_largest_position_when_triduplicated
    nameWithType: MemTableTestsFixture.try_get_one_value_returns_the_value_with_largest_position_when_triduplicated
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_one_value_returns_the_value_with_largest_position_when_triduplicated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_one_value_returns_the_value_with_largest_position_when_triduplicated
    name: try_get_one_value_returns_the_value_with_largest_position_when_triduplicated
    nameWithType: MemTableTestsFixture.try_get_one_value_returns_the_value_with_largest_position_when_triduplicated
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_one_value_returns_the_value_with_largest_position_when_triduplicated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated()
  nameWithType: MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated
    name: get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated
    nameWithType: MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated
    name: get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated
    nameWithType: MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.get_range_of_same_version_returns_both_values_in_descending_order_when_triduplicated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_memtable
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_memtable
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: try_get_latest_entry_finds_nothing_on_empty_memtable()
  nameWithType: MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_memtable()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_memtable()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_memtable
    name: try_get_latest_entry_finds_nothing_on_empty_memtable
    nameWithType: MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_memtable
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_memtable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_memtable
    name: try_get_latest_entry_finds_nothing_on_empty_memtable
    nameWithType: MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_memtable
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_memtable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_stream
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_stream
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: try_get_latest_entry_finds_nothing_on_empty_stream()
  nameWithType: MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_stream()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_stream()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_stream
    name: try_get_latest_entry_finds_nothing_on_empty_stream
    nameWithType: MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_stream
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_stream
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_stream
    name: try_get_latest_entry_finds_nothing_on_empty_stream
    nameWithType: MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_stream
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_finds_nothing_on_empty_stream
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.single_item_is_latest
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.single_item_is_latest
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: single_item_is_latest()
  nameWithType: MemTableTestsFixture.single_item_is_latest()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.single_item_is_latest()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.single_item_is_latest
    name: single_item_is_latest
    nameWithType: MemTableTestsFixture.single_item_is_latest
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.single_item_is_latest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.single_item_is_latest
    name: single_item_is_latest
    nameWithType: MemTableTestsFixture.single_item_is_latest
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.single_item_is_latest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_returns_correct_entry
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_returns_correct_entry
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: try_get_latest_entry_returns_correct_entry()
  nameWithType: MemTableTestsFixture.try_get_latest_entry_returns_correct_entry()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_returns_correct_entry()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_returns_correct_entry
    name: try_get_latest_entry_returns_correct_entry
    nameWithType: MemTableTestsFixture.try_get_latest_entry_returns_correct_entry
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_returns_correct_entry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_returns_correct_entry
    name: try_get_latest_entry_returns_correct_entry
    nameWithType: MemTableTestsFixture.try_get_latest_entry_returns_correct_entry
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_returns_correct_entry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_when_duplicated_entries_returns_the_one_with_largest_position
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_when_duplicated_entries_returns_the_one_with_largest_position
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: try_get_latest_entry_when_duplicated_entries_returns_the_one_with_largest_position()
  nameWithType: MemTableTestsFixture.try_get_latest_entry_when_duplicated_entries_returns_the_one_with_largest_position()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_when_duplicated_entries_returns_the_one_with_largest_position()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_when_duplicated_entries_returns_the_one_with_largest_position
    name: try_get_latest_entry_when_duplicated_entries_returns_the_one_with_largest_position
    nameWithType: MemTableTestsFixture.try_get_latest_entry_when_duplicated_entries_returns_the_one_with_largest_position
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_when_duplicated_entries_returns_the_one_with_largest_position
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_when_duplicated_entries_returns_the_one_with_largest_position
    name: try_get_latest_entry_when_duplicated_entries_returns_the_one_with_largest_position
    nameWithType: MemTableTestsFixture.try_get_latest_entry_when_duplicated_entries_returns_the_one_with_largest_position
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_when_duplicated_entries_returns_the_one_with_largest_position
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_returns_the_entry_with_the_largest_position_when_triduplicated
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_returns_the_entry_with_the_largest_position_when_triduplicated
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: try_get_latest_entry_returns_the_entry_with_the_largest_position_when_triduplicated()
  nameWithType: MemTableTestsFixture.try_get_latest_entry_returns_the_entry_with_the_largest_position_when_triduplicated()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_returns_the_entry_with_the_largest_position_when_triduplicated()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_returns_the_entry_with_the_largest_position_when_triduplicated
    name: try_get_latest_entry_returns_the_entry_with_the_largest_position_when_triduplicated
    nameWithType: MemTableTestsFixture.try_get_latest_entry_returns_the_entry_with_the_largest_position_when_triduplicated
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_returns_the_entry_with_the_largest_position_when_triduplicated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_returns_the_entry_with_the_largest_position_when_triduplicated
    name: try_get_latest_entry_returns_the_entry_with_the_largest_position_when_triduplicated
    nameWithType: MemTableTestsFixture.try_get_latest_entry_returns_the_entry_with_the_largest_position_when_triduplicated
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_returns_the_entry_with_the_largest_position_when_triduplicated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_memtable
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_memtable
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: try_get_oldest_entry_finds_nothing_on_empty_memtable()
  nameWithType: MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_memtable()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_memtable()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_memtable
    name: try_get_oldest_entry_finds_nothing_on_empty_memtable
    nameWithType: MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_memtable
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_memtable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_memtable
    name: try_get_oldest_entry_finds_nothing_on_empty_memtable
    nameWithType: MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_memtable
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_memtable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_stream
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_stream
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: try_get_oldest_entry_finds_nothing_on_empty_stream()
  nameWithType: MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_stream()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_stream()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_stream
    name: try_get_oldest_entry_finds_nothing_on_empty_stream
    nameWithType: MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_stream
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_stream
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_stream
    name: try_get_oldest_entry_finds_nothing_on_empty_stream
    nameWithType: MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_stream
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_finds_nothing_on_empty_stream
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.single_item_is_oldest
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.single_item_is_oldest
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: single_item_is_oldest()
  nameWithType: MemTableTestsFixture.single_item_is_oldest()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.single_item_is_oldest()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.single_item_is_oldest
    name: single_item_is_oldest
    nameWithType: MemTableTestsFixture.single_item_is_oldest
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.single_item_is_oldest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.single_item_is_oldest
    name: single_item_is_oldest
    nameWithType: MemTableTestsFixture.single_item_is_oldest
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.single_item_is_oldest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_returns_correct_entry
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_returns_correct_entry
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: try_get_oldest_entry_returns_correct_entry()
  nameWithType: MemTableTestsFixture.try_get_oldest_entry_returns_correct_entry()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_returns_correct_entry()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_returns_correct_entry
    name: try_get_oldest_entry_returns_correct_entry
    nameWithType: MemTableTestsFixture.try_get_oldest_entry_returns_correct_entry
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_returns_correct_entry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_returns_correct_entry
    name: try_get_oldest_entry_returns_correct_entry
    nameWithType: MemTableTestsFixture.try_get_oldest_entry_returns_correct_entry
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_returns_correct_entry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_when_duplicated_entries_returns_the_one_with_smallest_position
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_when_duplicated_entries_returns_the_one_with_smallest_position
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: try_get_oldest_entry_when_duplicated_entries_returns_the_one_with_smallest_position()
  nameWithType: MemTableTestsFixture.try_get_oldest_entry_when_duplicated_entries_returns_the_one_with_smallest_position()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_when_duplicated_entries_returns_the_one_with_smallest_position()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_when_duplicated_entries_returns_the_one_with_smallest_position
    name: try_get_oldest_entry_when_duplicated_entries_returns_the_one_with_smallest_position
    nameWithType: MemTableTestsFixture.try_get_oldest_entry_when_duplicated_entries_returns_the_one_with_smallest_position
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_when_duplicated_entries_returns_the_one_with_smallest_position
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_when_duplicated_entries_returns_the_one_with_smallest_position
    name: try_get_oldest_entry_when_duplicated_entries_returns_the_one_with_smallest_position
    nameWithType: MemTableTestsFixture.try_get_oldest_entry_when_duplicated_entries_returns_the_one_with_smallest_position
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_when_duplicated_entries_returns_the_one_with_smallest_position
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_returns_the_entry_with_the_smallest_position_when_triduplicated
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_returns_the_entry_with_the_smallest_position_when_triduplicated
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: try_get_oldest_entry_returns_the_entry_with_the_smallest_position_when_triduplicated()
  nameWithType: MemTableTestsFixture.try_get_oldest_entry_returns_the_entry_with_the_smallest_position_when_triduplicated()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_returns_the_entry_with_the_smallest_position_when_triduplicated()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_returns_the_entry_with_the_smallest_position_when_triduplicated
    name: try_get_oldest_entry_returns_the_entry_with_the_smallest_position_when_triduplicated
    nameWithType: MemTableTestsFixture.try_get_oldest_entry_returns_the_entry_with_the_smallest_position_when_triduplicated
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_returns_the_entry_with_the_smallest_position_when_triduplicated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_returns_the_entry_with_the_smallest_position_when_triduplicated
    name: try_get_oldest_entry_returns_the_entry_with_the_smallest_position_when_triduplicated
    nameWithType: MemTableTestsFixture.try_get_oldest_entry_returns_the_entry_with_the_smallest_position_when_triduplicated
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_returns_the_entry_with_the_smallest_position_when_triduplicated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.the_smallest_items_with_hash_collisions_can_be_found
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.the_smallest_items_with_hash_collisions_can_be_found
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: the_smallest_items_with_hash_collisions_can_be_found()
  nameWithType: MemTableTestsFixture.the_smallest_items_with_hash_collisions_can_be_found()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.the_smallest_items_with_hash_collisions_can_be_found()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.the_smallest_items_with_hash_collisions_can_be_found
    name: the_smallest_items_with_hash_collisions_can_be_found
    nameWithType: MemTableTestsFixture.the_smallest_items_with_hash_collisions_can_be_found
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.the_smallest_items_with_hash_collisions_can_be_found
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.the_smallest_items_with_hash_collisions_can_be_found
    name: the_smallest_items_with_hash_collisions_can_be_found
    nameWithType: MemTableTestsFixture.the_smallest_items_with_hash_collisions_can_be_found
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.the_smallest_items_with_hash_collisions_can_be_found
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.the_smallest_items_with_hash_collisions_are_returned_in_descending_order
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.the_smallest_items_with_hash_collisions_are_returned_in_descending_order
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: the_smallest_items_with_hash_collisions_are_returned_in_descending_order()
  nameWithType: MemTableTestsFixture.the_smallest_items_with_hash_collisions_are_returned_in_descending_order()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.the_smallest_items_with_hash_collisions_are_returned_in_descending_order()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.the_smallest_items_with_hash_collisions_are_returned_in_descending_order
    name: the_smallest_items_with_hash_collisions_are_returned_in_descending_order
    nameWithType: MemTableTestsFixture.the_smallest_items_with_hash_collisions_are_returned_in_descending_order
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.the_smallest_items_with_hash_collisions_are_returned_in_descending_order
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.the_smallest_items_with_hash_collisions_are_returned_in_descending_order
    name: the_smallest_items_with_hash_collisions_are_returned_in_descending_order
    nameWithType: MemTableTestsFixture.the_smallest_items_with_hash_collisions_are_returned_in_descending_order
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.the_smallest_items_with_hash_collisions_are_returned_in_descending_order
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: try_get_latest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry()
  nameWithType: MemTableTestsFixture.try_get_latest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
    name: try_get_latest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
    nameWithType: MemTableTestsFixture.try_get_latest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
    name: try_get_latest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
    nameWithType: MemTableTestsFixture.try_get_latest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: try_get_oldest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry()
  nameWithType: MemTableTestsFixture.try_get_oldest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
    name: try_get_oldest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
    nameWithType: MemTableTestsFixture.try_get_oldest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
    name: try_get_oldest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
    nameWithType: MemTableTestsFixture.try_get_oldest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_for_smallest_hash_with_collisions_returns_correct_index_entry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.the_largest_items_with_hash_collisions_can_be_found
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.the_largest_items_with_hash_collisions_can_be_found
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: the_largest_items_with_hash_collisions_can_be_found()
  nameWithType: MemTableTestsFixture.the_largest_items_with_hash_collisions_can_be_found()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.the_largest_items_with_hash_collisions_can_be_found()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.the_largest_items_with_hash_collisions_can_be_found
    name: the_largest_items_with_hash_collisions_can_be_found
    nameWithType: MemTableTestsFixture.the_largest_items_with_hash_collisions_can_be_found
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.the_largest_items_with_hash_collisions_can_be_found
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.the_largest_items_with_hash_collisions_can_be_found
    name: the_largest_items_with_hash_collisions_can_be_found
    nameWithType: MemTableTestsFixture.the_largest_items_with_hash_collisions_can_be_found
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.the_largest_items_with_hash_collisions_can_be_found
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.the_largest_items_with_hash_collisions_are_returned_in_descending_order
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.the_largest_items_with_hash_collisions_are_returned_in_descending_order
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: the_largest_items_with_hash_collisions_are_returned_in_descending_order()
  nameWithType: MemTableTestsFixture.the_largest_items_with_hash_collisions_are_returned_in_descending_order()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.the_largest_items_with_hash_collisions_are_returned_in_descending_order()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.the_largest_items_with_hash_collisions_are_returned_in_descending_order
    name: the_largest_items_with_hash_collisions_are_returned_in_descending_order
    nameWithType: MemTableTestsFixture.the_largest_items_with_hash_collisions_are_returned_in_descending_order
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.the_largest_items_with_hash_collisions_are_returned_in_descending_order
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.the_largest_items_with_hash_collisions_are_returned_in_descending_order
    name: the_largest_items_with_hash_collisions_are_returned_in_descending_order
    nameWithType: MemTableTestsFixture.the_largest_items_with_hash_collisions_are_returned_in_descending_order
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.the_largest_items_with_hash_collisions_are_returned_in_descending_order
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_for_largest_hash_collision_returns_correct_index_entry
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_for_largest_hash_collision_returns_correct_index_entry
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: try_get_latest_entry_for_largest_hash_collision_returns_correct_index_entry()
  nameWithType: MemTableTestsFixture.try_get_latest_entry_for_largest_hash_collision_returns_correct_index_entry()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_for_largest_hash_collision_returns_correct_index_entry()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_for_largest_hash_collision_returns_correct_index_entry
    name: try_get_latest_entry_for_largest_hash_collision_returns_correct_index_entry
    nameWithType: MemTableTestsFixture.try_get_latest_entry_for_largest_hash_collision_returns_correct_index_entry
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_for_largest_hash_collision_returns_correct_index_entry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_for_largest_hash_collision_returns_correct_index_entry
    name: try_get_latest_entry_for_largest_hash_collision_returns_correct_index_entry
    nameWithType: MemTableTestsFixture.try_get_latest_entry_for_largest_hash_collision_returns_correct_index_entry
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_latest_entry_for_largest_hash_collision_returns_correct_index_entry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_for_largest_hash_with_collisions_returns_correct_index_entry
  commentId: M:EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_for_largest_hash_with_collisions_returns_correct_index_entry
  parent: EventStore.Core.Tests.Index.MemTableTestsFixture
  isExternal: false
  name: try_get_oldest_entry_for_largest_hash_with_collisions_returns_correct_index_entry()
  nameWithType: MemTableTestsFixture.try_get_oldest_entry_for_largest_hash_with_collisions_returns_correct_index_entry()
  fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_for_largest_hash_with_collisions_returns_correct_index_entry()
  spec.csharp:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_for_largest_hash_with_collisions_returns_correct_index_entry
    name: try_get_oldest_entry_for_largest_hash_with_collisions_returns_correct_index_entry
    nameWithType: MemTableTestsFixture.try_get_oldest_entry_for_largest_hash_with_collisions_returns_correct_index_entry
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_for_largest_hash_with_collisions_returns_correct_index_entry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_for_largest_hash_with_collisions_returns_correct_index_entry
    name: try_get_oldest_entry_for_largest_hash_with_collisions_returns_correct_index_entry
    nameWithType: MemTableTestsFixture.try_get_oldest_entry_for_largest_hash_with_collisions_returns_correct_index_entry
    fullName: EventStore.Core.Tests.Index.MemTableTestsFixture.try_get_oldest_entry_for_largest_hash_with_collisions_returns_correct_index_entry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.HashListMemTableTests.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<HashListMemTableTests>()
  nameWithType: ProtobufExtensions.Serialize<HashListMemTableTests>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Index.HashListMemTableTests>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of HashListMemTableTests)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Index.HashListMemTableTests)()
  name.vb: Serialize(Of HashListMemTableTests)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<HashListMemTableTests>
    nameWithType: ProtobufExtensions.Serialize<HashListMemTableTests>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Index.HashListMemTableTests>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of HashListMemTableTests)
    nameWithType: ProtobufExtensions.Serialize(Of HashListMemTableTests)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Index.HashListMemTableTests)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.HashListMemTableTests.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<HashListMemTableTests>()
  nameWithType: ProtobufExtensions.SerializeToArray<HashListMemTableTests>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Index.HashListMemTableTests>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of HashListMemTableTests)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Index.HashListMemTableTests)()
  name.vb: SerializeToArray(Of HashListMemTableTests)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<HashListMemTableTests>
    nameWithType: ProtobufExtensions.SerializeToArray<HashListMemTableTests>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Index.HashListMemTableTests>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of HashListMemTableTests)
    nameWithType: ProtobufExtensions.SerializeToArray(Of HashListMemTableTests)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Index.HashListMemTableTests)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Index.HashListMemTableTests.#ctor*
  commentId: Overload:EventStore.Core.Tests.Index.HashListMemTableTests.#ctor
  isExternal: false
  name: HashListMemTableTests
  nameWithType: HashListMemTableTests.HashListMemTableTests
  fullName: EventStore.Core.Tests.Index.HashListMemTableTests.HashListMemTableTests

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario
  commentId: T:EventStore.Core.Tests.Index.IndexV1.PTableReadScenario
  id: PTableReadScenario
  parent: EventStore.Core.Tests.Index.IndexV1
  children:
  - EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.#ctor(System.Byte,System.Boolean,System.Int32)
  - EventStore.Core.Tests.Index.IndexV1.PTableReadScenario._ptableVersion
  - EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.AddItemsForScenario(EventStore.Core.Index.IMemTable)
  - EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.PTable
  - EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.SetUp
  - EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.TearDown
  langs:
  - csharp
  - vb
  name: PTableReadScenario
  nameWithType: PTableReadScenario
  fullName: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/PTableReadScenario.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PTableReadScenario
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/PTableReadScenario.cs
    startLine: 5
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: 'public abstract class PTableReadScenario : SpecificationWithFile'
    content.vb: >-
      Public MustInherit Class PTableReadScenario

          Inherits SpecificationWithFile
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithFile
  derivedClasses:
  - EventStore.Core.Tests.Index.IndexV1.ptable_read_scenario_with_items_spanning_few_cache_segments
  - EventStore.Core.Tests.Index.IndexV1.ptable_read_scenario_with_usual_items
  inheritedMembers:
  - EventStore.Core.Tests.SpecificationWithFile.Filename
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario._ptableVersion
  commentId: F:EventStore.Core.Tests.Index.IndexV1.PTableReadScenario._ptableVersion
  id: _ptableVersion
  parent: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario
  langs:
  - csharp
  - vb
  name: _ptableVersion
  nameWithType: PTableReadScenario._ptableVersion
  fullName: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario._ptableVersion
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/PTableReadScenario.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _ptableVersion
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/PTableReadScenario.cs
    startLine: 8
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: protected byte _ptableVersion
    return:
      type: System.Byte
    content.vb: Protected _ptableVersion As Byte
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.PTable
  commentId: F:EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.PTable
  id: PTable
  parent: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario
  langs:
  - csharp
  - vb
  name: PTable
  nameWithType: PTableReadScenario.PTable
  fullName: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.PTable
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/PTableReadScenario.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PTable
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/PTableReadScenario.cs
    startLine: 10
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: protected PTable PTable
    return:
      type: EventStore.Core.Index.PTable
    content.vb: Protected PTable As PTable
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.#ctor(System.Byte,System.Boolean,System.Int32)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.#ctor(System.Byte,System.Boolean,System.Int32)
  id: '#ctor(System.Byte,System.Boolean,System.Int32)'
  parent: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario
  langs:
  - csharp
  - vb
  name: PTableReadScenario(Byte, Boolean, Int32)
  nameWithType: PTableReadScenario.PTableReadScenario(Byte, Boolean, Int32)
  fullName: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.PTableReadScenario(System.Byte, System.Boolean, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/PTableReadScenario.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/PTableReadScenario.cs
    startLine: 13
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: protected PTableReadScenario(byte ptableVersion, bool skipIndexVerify, int midpointCacheDepth)
    parameters:
    - id: ptableVersion
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    - id: midpointCacheDepth
      type: System.Int32
    content.vb: Protected Sub New(ptableVersion As Byte, skipIndexVerify As Boolean, midpointCacheDepth As Integer)
  overload: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.SetUp
  commentId: M:EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.SetUp
  id: SetUp
  parent: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario
  langs:
  - csharp
  - vb
  name: SetUp()
  nameWithType: PTableReadScenario.SetUp()
  fullName: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.SetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/PTableReadScenario.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetUp
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/PTableReadScenario.cs
    startLine: 20
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public override void SetUp()
    content.vb: Public Overrides Sub SetUp
  overridden: EventStore.Core.Tests.SpecificationWithFile.SetUp
  overload: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.SetUp*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.TearDown
  commentId: M:EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.TearDown
  id: TearDown
  parent: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario
  langs:
  - csharp
  - vb
  name: TearDown()
  nameWithType: PTableReadScenario.TearDown()
  fullName: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.TearDown()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/PTableReadScenario.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TearDown
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/PTableReadScenario.cs
    startLine: 32
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public override void TearDown()
    content.vb: Public Overrides Sub TearDown
  overridden: EventStore.Core.Tests.SpecificationWithFile.TearDown
  overload: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.TearDown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.AddItemsForScenario(EventStore.Core.Index.IMemTable)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.AddItemsForScenario(EventStore.Core.Index.IMemTable)
  id: AddItemsForScenario(EventStore.Core.Index.IMemTable)
  parent: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario
  langs:
  - csharp
  - vb
  name: AddItemsForScenario(IMemTable)
  nameWithType: PTableReadScenario.AddItemsForScenario(IMemTable)
  fullName: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.AddItemsForScenario(EventStore.Core.Index.IMemTable)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/PTableReadScenario.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AddItemsForScenario
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/PTableReadScenario.cs
    startLine: 40
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: protected abstract void AddItemsForScenario(IMemTable memTable)
    parameters:
    - id: memTable
      type: EventStore.Core.Index.IMemTable
    content.vb: Protected MustOverride Sub AddItemsForScenario(memTable As IMemTable)
  overload: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.AddItemsForScenario*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: EventStore.Core.Tests.Index.IndexV1
  commentId: N:EventStore.Core.Tests.Index.IndexV1
  isExternal: false
  name: EventStore.Core.Tests.Index.IndexV1
  nameWithType: EventStore.Core.Tests.Index.IndexV1
  fullName: EventStore.Core.Tests.Index.IndexV1
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithFile
  commentId: T:EventStore.Core.Tests.SpecificationWithFile
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithFile
  nameWithType: SpecificationWithFile
  fullName: EventStore.Core.Tests.SpecificationWithFile
- uid: EventStore.Core.Tests.SpecificationWithFile.Filename
  commentId: F:EventStore.Core.Tests.SpecificationWithFile.Filename
  parent: EventStore.Core.Tests.SpecificationWithFile
  isExternal: false
  name: Filename
  nameWithType: SpecificationWithFile.Filename
  fullName: EventStore.Core.Tests.SpecificationWithFile.Filename
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PTableReadScenario>()
  nameWithType: ProtobufExtensions.Serialize<PTableReadScenario>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Index.IndexV1.PTableReadScenario>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PTableReadScenario)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Index.IndexV1.PTableReadScenario)()
  name.vb: Serialize(Of PTableReadScenario)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PTableReadScenario>
    nameWithType: ProtobufExtensions.Serialize<PTableReadScenario>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Index.IndexV1.PTableReadScenario>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PTableReadScenario)
    nameWithType: ProtobufExtensions.Serialize(Of PTableReadScenario)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Index.IndexV1.PTableReadScenario)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PTableReadScenario>()
  nameWithType: ProtobufExtensions.SerializeToArray<PTableReadScenario>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Index.IndexV1.PTableReadScenario>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PTableReadScenario)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Index.IndexV1.PTableReadScenario)()
  name.vb: SerializeToArray(Of PTableReadScenario)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PTableReadScenario>
    nameWithType: ProtobufExtensions.SerializeToArray<PTableReadScenario>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Index.IndexV1.PTableReadScenario>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PTableReadScenario)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PTableReadScenario)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Index.IndexV1.PTableReadScenario)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Byte
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: EventStore.Core.Index.PTable
  commentId: T:EventStore.Core.Index.PTable
  parent: EventStore.Core.Index
  isExternal: false
  name: PTable
  nameWithType: PTable
  fullName: EventStore.Core.Index.PTable
- uid: EventStore.Core.Index
  commentId: N:EventStore.Core.Index
  isExternal: false
  name: EventStore.Core.Index
  nameWithType: EventStore.Core.Index
  fullName: EventStore.Core.Index
- uid: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.#ctor*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.#ctor
  isExternal: false
  name: PTableReadScenario
  nameWithType: PTableReadScenario.PTableReadScenario
  fullName: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.PTableReadScenario
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Tests.SpecificationWithFile.SetUp
  commentId: M:EventStore.Core.Tests.SpecificationWithFile.SetUp
  parent: EventStore.Core.Tests.SpecificationWithFile
  isExternal: false
  name: SetUp()
  nameWithType: SpecificationWithFile.SetUp()
  fullName: EventStore.Core.Tests.SpecificationWithFile.SetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithFile.SetUp
    name: SetUp
    nameWithType: SpecificationWithFile.SetUp
    fullName: EventStore.Core.Tests.SpecificationWithFile.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithFile.SetUp
    name: SetUp
    nameWithType: SpecificationWithFile.SetUp
    fullName: EventStore.Core.Tests.SpecificationWithFile.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.SetUp*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.SetUp
  isExternal: false
  name: SetUp
  nameWithType: PTableReadScenario.SetUp
  fullName: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.SetUp
- uid: EventStore.Core.Tests.SpecificationWithFile.TearDown
  commentId: M:EventStore.Core.Tests.SpecificationWithFile.TearDown
  parent: EventStore.Core.Tests.SpecificationWithFile
  isExternal: false
  name: TearDown()
  nameWithType: SpecificationWithFile.TearDown()
  fullName: EventStore.Core.Tests.SpecificationWithFile.TearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithFile.TearDown
    name: TearDown
    nameWithType: SpecificationWithFile.TearDown
    fullName: EventStore.Core.Tests.SpecificationWithFile.TearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithFile.TearDown
    name: TearDown
    nameWithType: SpecificationWithFile.TearDown
    fullName: EventStore.Core.Tests.SpecificationWithFile.TearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.TearDown*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.TearDown
  isExternal: false
  name: TearDown
  nameWithType: PTableReadScenario.TearDown
  fullName: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.TearDown
- uid: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.AddItemsForScenario*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.AddItemsForScenario
  isExternal: false
  name: AddItemsForScenario
  nameWithType: PTableReadScenario.AddItemsForScenario
  fullName: EventStore.Core.Tests.Index.IndexV1.PTableReadScenario.AddItemsForScenario
- uid: EventStore.Core.Index.IMemTable
  commentId: T:EventStore.Core.Index.IMemTable
  parent: EventStore.Core.Index
  isExternal: false
  name: IMemTable
  nameWithType: IMemTable
  fullName: EventStore.Core.Index.IMemTable

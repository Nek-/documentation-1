### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  commentId: T:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  id: corrupt_index_should
  parent: EventStore.Core.Tests.Index.IndexV1
  children:
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry(System.Byte,System.Boolean)
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry_2(System.Byte,System.Boolean)
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry(System.Byte,System.Boolean)
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry_2(System.Byte,System.Boolean)
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value(System.Byte,System.Boolean)
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value_2(System.Byte,System.Boolean)
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range(System.Byte,System.Boolean)
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range_2(System.Byte,System.Boolean)
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_multiple_of_index_entry_size(System.Byte,System.Boolean)
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_less_than_2_midpoints_cached(System.Byte,System.Boolean)
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_midpoints_index_entries_not_in_descending_order(System.Byte,System.Boolean)
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_midpoints_item_indexes_not_in_ascending_order(System.Byte,System.Boolean)
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_more_midpoints_than_index_entries(System.Byte,System.Boolean)
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_negative_index_entries_size(System.Byte,System.Boolean)
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_on_header_footer_version_mismatch(System.Byte,System.Boolean)
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_on_invalid_ptable_filenumber_in_footer(System.Byte,System.Boolean)
  langs:
  - csharp
  - vb
  name: corrupt_index_should
  nameWithType: corrupt_index_should
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: corrupt_index_should
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
    startLine: 11
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: 'public class corrupt_index_should : SpecificationWithDirectoryPerTestFixture'
    content.vb: >-
      Public Class corrupt_index_should

          Inherits SpecificationWithDirectoryPerTestFixture
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  inheritedMembers:
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_multiple_of_index_entry_size(System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_multiple_of_index_entry_size(System.Byte,System.Boolean)
  id: throw_exception_if_index_entries_not_multiple_of_index_entry_size(System.Byte,System.Boolean)
  parent: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  langs:
  - csharp
  - vb
  name: throw_exception_if_index_entries_not_multiple_of_index_entry_size(Byte, Boolean)
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_multiple_of_index_entry_size(Byte, Boolean)
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_multiple_of_index_entry_size(System.Byte, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_exception_if_index_entries_not_multiple_of_index_entry_size
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
    startLine: 163
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_exception_if_index_entries_not_multiple_of_index_entry_size(byte version, bool skipIndexVerify)
    parameters:
    - id: version
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    content.vb: Public Sub throw_exception_if_index_entries_not_multiple_of_index_entry_size(version As Byte, skipIndexVerify As Boolean)
  overload: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_multiple_of_index_entry_size*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_midpoints_index_entries_not_in_descending_order(System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_midpoints_index_entries_not_in_descending_order(System.Byte,System.Boolean)
  id: throw_exception_if_midpoints_index_entries_not_in_descending_order(System.Byte,System.Boolean)
  parent: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  langs:
  - csharp
  - vb
  name: throw_exception_if_midpoints_index_entries_not_in_descending_order(Byte, Boolean)
  nameWithType: corrupt_index_should.throw_exception_if_midpoints_index_entries_not_in_descending_order(Byte, Boolean)
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_midpoints_index_entries_not_in_descending_order(System.Byte, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_exception_if_midpoints_index_entries_not_in_descending_order
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
    startLine: 178
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_exception_if_midpoints_index_entries_not_in_descending_order(byte version, bool skipIndexVerify)
    parameters:
    - id: version
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    content.vb: Public Sub throw_exception_if_midpoints_index_entries_not_in_descending_order(version As Byte, skipIndexVerify As Boolean)
  overload: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_midpoints_index_entries_not_in_descending_order*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_midpoints_item_indexes_not_in_ascending_order(System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_midpoints_item_indexes_not_in_ascending_order(System.Byte,System.Boolean)
  id: throw_exception_if_midpoints_item_indexes_not_in_ascending_order(System.Byte,System.Boolean)
  parent: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  langs:
  - csharp
  - vb
  name: throw_exception_if_midpoints_item_indexes_not_in_ascending_order(Byte, Boolean)
  nameWithType: corrupt_index_should.throw_exception_if_midpoints_item_indexes_not_in_ascending_order(Byte, Boolean)
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_midpoints_item_indexes_not_in_ascending_order(System.Byte, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_exception_if_midpoints_item_indexes_not_in_ascending_order
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
    startLine: 194
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_exception_if_midpoints_item_indexes_not_in_ascending_order(byte version, bool skipIndexVerify)
    parameters:
    - id: version
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    content.vb: Public Sub throw_exception_if_midpoints_item_indexes_not_in_ascending_order(version As Byte, skipIndexVerify As Boolean)
  overload: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_midpoints_item_indexes_not_in_ascending_order*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range(System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range(System.Byte,System.Boolean)
  id: throw_exception_if_index_entries_not_descending_during_ptable_get_range(System.Byte,System.Boolean)
  parent: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  langs:
  - csharp
  - vb
  name: throw_exception_if_index_entries_not_descending_during_ptable_get_range(Byte, Boolean)
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range(Byte, Boolean)
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range(System.Byte, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_exception_if_index_entries_not_descending_during_ptable_get_range
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
    startLine: 203
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_exception_if_index_entries_not_descending_during_ptable_get_range(byte version, bool skipIndexVerify)
    parameters:
    - id: version
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    content.vb: Public Sub throw_exception_if_index_entries_not_descending_during_ptable_get_range(version As Byte, skipIndexVerify As Boolean)
  overload: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range_2(System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range_2(System.Byte,System.Boolean)
  id: throw_exception_if_index_entries_not_descending_during_ptable_get_range_2(System.Byte,System.Boolean)
  parent: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  langs:
  - csharp
  - vb
  name: throw_exception_if_index_entries_not_descending_during_ptable_get_range_2(Byte, Boolean)
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range_2(Byte, Boolean)
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range_2(System.Byte, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_exception_if_index_entries_not_descending_during_ptable_get_range_2
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
    startLine: 217
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_exception_if_index_entries_not_descending_during_ptable_get_range_2(byte version, bool skipIndexVerify)
    parameters:
    - id: version
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    content.vb: Public Sub throw_exception_if_index_entries_not_descending_during_ptable_get_range_2(version As Byte, skipIndexVerify As Boolean)
  overload: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range_2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry(System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry(System.Byte,System.Boolean)
  id: throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry(System.Byte,System.Boolean)
  parent: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  langs:
  - csharp
  - vb
  name: throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry(Byte, Boolean)
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry(Byte, Boolean)
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry(System.Byte, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
    startLine: 231
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry(byte version, bool skipIndexVerify)
    parameters:
    - id: version
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    content.vb: Public Sub throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry(version As Byte, skipIndexVerify As Boolean)
  overload: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry_2(System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry_2(System.Byte,System.Boolean)
  id: throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry_2(System.Byte,System.Boolean)
  parent: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  langs:
  - csharp
  - vb
  name: throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry_2(Byte, Boolean)
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry_2(Byte, Boolean)
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry_2(System.Byte, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry_2
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
    startLine: 246
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry_2(byte version, bool skipIndexVerify)
    parameters:
    - id: version
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    content.vb: Public Sub throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry_2(version As Byte, skipIndexVerify As Boolean)
  overload: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry_2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry(System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry(System.Byte,System.Boolean)
  id: throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry(System.Byte,System.Boolean)
  parent: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  langs:
  - csharp
  - vb
  name: throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry(Byte, Boolean)
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry(Byte, Boolean)
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry(System.Byte, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
    startLine: 261
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry(byte version, bool skipIndexVerify)
    parameters:
    - id: version
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    content.vb: Public Sub throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry(version As Byte, skipIndexVerify As Boolean)
  overload: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry_2(System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry_2(System.Byte,System.Boolean)
  id: throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry_2(System.Byte,System.Boolean)
  parent: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  langs:
  - csharp
  - vb
  name: throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry_2(Byte, Boolean)
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry_2(Byte, Boolean)
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry_2(System.Byte, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry_2
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
    startLine: 276
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry_2(byte version, bool skipIndexVerify)
    parameters:
    - id: version
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    content.vb: Public Sub throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry_2(version As Byte, skipIndexVerify As Boolean)
  overload: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry_2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value(System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value(System.Byte,System.Boolean)
  id: throw_exception_if_index_entries_not_descending_during_ptable_get_one_value(System.Byte,System.Boolean)
  parent: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  langs:
  - csharp
  - vb
  name: throw_exception_if_index_entries_not_descending_during_ptable_get_one_value(Byte, Boolean)
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value(Byte, Boolean)
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value(System.Byte, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_exception_if_index_entries_not_descending_during_ptable_get_one_value
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
    startLine: 291
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_exception_if_index_entries_not_descending_during_ptable_get_one_value(byte version, bool skipIndexVerify)
    parameters:
    - id: version
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    content.vb: Public Sub throw_exception_if_index_entries_not_descending_during_ptable_get_one_value(version As Byte, skipIndexVerify As Boolean)
  overload: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value_2(System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value_2(System.Byte,System.Boolean)
  id: throw_exception_if_index_entries_not_descending_during_ptable_get_one_value_2(System.Byte,System.Boolean)
  parent: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  langs:
  - csharp
  - vb
  name: throw_exception_if_index_entries_not_descending_during_ptable_get_one_value_2(Byte, Boolean)
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value_2(Byte, Boolean)
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value_2(System.Byte, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_exception_if_index_entries_not_descending_during_ptable_get_one_value_2
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
    startLine: 306
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_exception_if_index_entries_not_descending_during_ptable_get_one_value_2(byte version, bool skipIndexVerify)
    parameters:
    - id: version
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    content.vb: Public Sub throw_exception_if_index_entries_not_descending_during_ptable_get_one_value_2(version As Byte, skipIndexVerify As Boolean)
  overload: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value_2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_on_invalid_ptable_filenumber_in_footer(System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_on_invalid_ptable_filenumber_in_footer(System.Byte,System.Boolean)
  id: throw_exception_on_invalid_ptable_filenumber_in_footer(System.Byte,System.Boolean)
  parent: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  langs:
  - csharp
  - vb
  name: throw_exception_on_invalid_ptable_filenumber_in_footer(Byte, Boolean)
  nameWithType: corrupt_index_should.throw_exception_on_invalid_ptable_filenumber_in_footer(Byte, Boolean)
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_on_invalid_ptable_filenumber_in_footer(System.Byte, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_exception_on_invalid_ptable_filenumber_in_footer
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
    startLine: 321
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_exception_on_invalid_ptable_filenumber_in_footer(byte version, bool skipIndexVerify)
    parameters:
    - id: version
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    content.vb: Public Sub throw_exception_on_invalid_ptable_filenumber_in_footer(version As Byte, skipIndexVerify As Boolean)
  overload: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_on_invalid_ptable_filenumber_in_footer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_on_header_footer_version_mismatch(System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_on_header_footer_version_mismatch(System.Byte,System.Boolean)
  id: throw_exception_on_header_footer_version_mismatch(System.Byte,System.Boolean)
  parent: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  langs:
  - csharp
  - vb
  name: throw_exception_on_header_footer_version_mismatch(Byte, Boolean)
  nameWithType: corrupt_index_should.throw_exception_on_header_footer_version_mismatch(Byte, Boolean)
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_on_header_footer_version_mismatch(System.Byte, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_exception_on_header_footer_version_mismatch
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
    startLine: 330
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_exception_on_header_footer_version_mismatch(byte version, bool skipIndexVerify)
    parameters:
    - id: version
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    content.vb: Public Sub throw_exception_on_header_footer_version_mismatch(version As Byte, skipIndexVerify As Boolean)
  overload: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_on_header_footer_version_mismatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_negative_index_entries_size(System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_negative_index_entries_size(System.Byte,System.Boolean)
  id: throw_exception_if_negative_index_entries_size(System.Byte,System.Boolean)
  parent: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  langs:
  - csharp
  - vb
  name: throw_exception_if_negative_index_entries_size(Byte, Boolean)
  nameWithType: corrupt_index_should.throw_exception_if_negative_index_entries_size(Byte, Boolean)
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_negative_index_entries_size(System.Byte, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_exception_if_negative_index_entries_size
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
    startLine: 339
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_exception_if_negative_index_entries_size(byte version, bool skipIndexVerify)
    parameters:
    - id: version
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    content.vb: Public Sub throw_exception_if_negative_index_entries_size(version As Byte, skipIndexVerify As Boolean)
  overload: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_negative_index_entries_size*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_less_than_2_midpoints_cached(System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_less_than_2_midpoints_cached(System.Byte,System.Boolean)
  id: throw_exception_if_less_than_2_midpoints_cached(System.Byte,System.Boolean)
  parent: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  langs:
  - csharp
  - vb
  name: throw_exception_if_less_than_2_midpoints_cached(Byte, Boolean)
  nameWithType: corrupt_index_should.throw_exception_if_less_than_2_midpoints_cached(Byte, Boolean)
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_less_than_2_midpoints_cached(System.Byte, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_exception_if_less_than_2_midpoints_cached
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
    startLine: 348
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_exception_if_less_than_2_midpoints_cached(byte version, bool skipIndexVerify)
    parameters:
    - id: version
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    content.vb: Public Sub throw_exception_if_less_than_2_midpoints_cached(version As Byte, skipIndexVerify As Boolean)
  overload: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_less_than_2_midpoints_cached*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_more_midpoints_than_index_entries(System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_more_midpoints_than_index_entries(System.Byte,System.Boolean)
  id: throw_exception_if_more_midpoints_than_index_entries(System.Byte,System.Boolean)
  parent: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should
  langs:
  - csharp
  - vb
  name: throw_exception_if_more_midpoints_than_index_entries(Byte, Boolean)
  nameWithType: corrupt_index_should.throw_exception_if_more_midpoints_than_index_entries(Byte, Boolean)
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_more_midpoints_than_index_entries(System.Byte, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_exception_if_more_midpoints_than_index_entries
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/corrupt_index_should.cs
    startLine: 357
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_exception_if_more_midpoints_than_index_entries(byte version, bool skipIndexVerify)
    parameters:
    - id: version
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    content.vb: Public Sub throw_exception_if_more_midpoints_than_index_entries(version As Byte, skipIndexVerify As Boolean)
  overload: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_more_midpoints_than_index_entries*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Index.IndexV1
  commentId: N:EventStore.Core.Tests.Index.IndexV1
  isExternal: false
  name: EventStore.Core.Tests.Index.IndexV1
  nameWithType: EventStore.Core.Tests.Index.IndexV1
  fullName: EventStore.Core.Tests.Index.IndexV1
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  commentId: T:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithDirectoryPerTestFixture
  nameWithType: SpecificationWithDirectoryPerTestFixture
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  commentId: F:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: PathName
  nameWithType: SpecificationWithDirectoryPerTestFixture.PathName
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: GetTempFilePath()
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: true
  name: GetFilePathFor(String)
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor(String)
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureSetUp()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureTearDown()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<corrupt_index_should>()
  nameWithType: ProtobufExtensions.Serialize<corrupt_index_should>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Index.IndexV1.corrupt_index_should>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of corrupt_index_should)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Index.IndexV1.corrupt_index_should)()
  name.vb: Serialize(Of corrupt_index_should)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<corrupt_index_should>
    nameWithType: ProtobufExtensions.Serialize<corrupt_index_should>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Index.IndexV1.corrupt_index_should>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of corrupt_index_should)
    nameWithType: ProtobufExtensions.Serialize(Of corrupt_index_should)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Index.IndexV1.corrupt_index_should)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<corrupt_index_should>()
  nameWithType: ProtobufExtensions.SerializeToArray<corrupt_index_should>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Index.IndexV1.corrupt_index_should>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of corrupt_index_should)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Index.IndexV1.corrupt_index_should)()
  name.vb: SerializeToArray(Of corrupt_index_should)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<corrupt_index_should>
    nameWithType: ProtobufExtensions.SerializeToArray<corrupt_index_should>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Index.IndexV1.corrupt_index_should>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of corrupt_index_should)
    nameWithType: ProtobufExtensions.SerializeToArray(Of corrupt_index_should)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Index.IndexV1.corrupt_index_should)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_multiple_of_index_entry_size*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_multiple_of_index_entry_size
  isExternal: false
  name: throw_exception_if_index_entries_not_multiple_of_index_entry_size
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_multiple_of_index_entry_size
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_multiple_of_index_entry_size
- uid: System.Byte
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_midpoints_index_entries_not_in_descending_order*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_midpoints_index_entries_not_in_descending_order
  isExternal: false
  name: throw_exception_if_midpoints_index_entries_not_in_descending_order
  nameWithType: corrupt_index_should.throw_exception_if_midpoints_index_entries_not_in_descending_order
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_midpoints_index_entries_not_in_descending_order
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_midpoints_item_indexes_not_in_ascending_order*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_midpoints_item_indexes_not_in_ascending_order
  isExternal: false
  name: throw_exception_if_midpoints_item_indexes_not_in_ascending_order
  nameWithType: corrupt_index_should.throw_exception_if_midpoints_item_indexes_not_in_ascending_order
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_midpoints_item_indexes_not_in_ascending_order
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range
  isExternal: false
  name: throw_exception_if_index_entries_not_descending_during_ptable_get_range
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range_2*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range_2
  isExternal: false
  name: throw_exception_if_index_entries_not_descending_during_ptable_get_range_2
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range_2
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_range_2
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry
  isExternal: false
  name: throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry_2*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry_2
  isExternal: false
  name: throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry_2
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry_2
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_latest_entry_2
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry
  isExternal: false
  name: throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry_2*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry_2
  isExternal: false
  name: throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry_2
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry_2
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_oldest_entry_2
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value
  isExternal: false
  name: throw_exception_if_index_entries_not_descending_during_ptable_get_one_value
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value_2*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value_2
  isExternal: false
  name: throw_exception_if_index_entries_not_descending_during_ptable_get_one_value_2
  nameWithType: corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value_2
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_index_entries_not_descending_during_ptable_get_one_value_2
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_on_invalid_ptable_filenumber_in_footer*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_on_invalid_ptable_filenumber_in_footer
  isExternal: false
  name: throw_exception_on_invalid_ptable_filenumber_in_footer
  nameWithType: corrupt_index_should.throw_exception_on_invalid_ptable_filenumber_in_footer
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_on_invalid_ptable_filenumber_in_footer
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_on_header_footer_version_mismatch*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_on_header_footer_version_mismatch
  isExternal: false
  name: throw_exception_on_header_footer_version_mismatch
  nameWithType: corrupt_index_should.throw_exception_on_header_footer_version_mismatch
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_on_header_footer_version_mismatch
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_negative_index_entries_size*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_negative_index_entries_size
  isExternal: false
  name: throw_exception_if_negative_index_entries_size
  nameWithType: corrupt_index_should.throw_exception_if_negative_index_entries_size
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_negative_index_entries_size
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_less_than_2_midpoints_cached*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_less_than_2_midpoints_cached
  isExternal: false
  name: throw_exception_if_less_than_2_midpoints_cached
  nameWithType: corrupt_index_should.throw_exception_if_less_than_2_midpoints_cached
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_less_than_2_midpoints_cached
- uid: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_more_midpoints_than_index_entries*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_more_midpoints_than_index_entries
  isExternal: false
  name: throw_exception_if_more_midpoints_than_index_entries
  nameWithType: corrupt_index_should.throw_exception_if_more_midpoints_than_index_entries
  fullName: EventStore.Core.Tests.Index.IndexV1.corrupt_index_should.throw_exception_if_more_midpoints_than_index_entries

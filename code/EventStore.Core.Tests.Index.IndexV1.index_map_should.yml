### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should
  commentId: T:EventStore.Core.Tests.Index.IndexV1.index_map_should
  id: index_map_should
  parent: EventStore.Core.Tests.Index.IndexV1
  children:
  - EventStore.Core.Tests.Index.IndexV1.index_map_should.#ctor(System.Byte)
  - EventStore.Core.Tests.Index.IndexV1.index_map_should._ptableVersion
  - EventStore.Core.Tests.Index.IndexV1.index_map_should.allow_commit_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
  - EventStore.Core.Tests.Index.IndexV1.index_map_should.allow_prepare_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
  - EventStore.Core.Tests.Index.IndexV1.index_map_should.not_allow_negative_commit_checkpoint_when_adding_ptable
  - EventStore.Core.Tests.Index.IndexV1.index_map_should.not_allow_negative_prepare_checkpoint_when_adding_ptable
  - EventStore.Core.Tests.Index.IndexV1.index_map_should.SetUp
  - EventStore.Core.Tests.Index.IndexV1.index_map_should.TearDown
  - EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_if_commit_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
  - EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_if_prepare_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
  - EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one
  - EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one
  langs:
  - csharp
  - vb
  name: index_map_should
  nameWithType: index_map_should
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: index_map_should
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
    startLine: 11
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: 'public class index_map_should : SpecificationWithDirectory'
    content.vb: >-
      Public Class index_map_should

          Inherits SpecificationWithDirectory
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithDirectory
  inheritedMembers:
  - EventStore.Core.Tests.SpecificationWithDirectory.PathName
  - EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
  - EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor(System.String)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Index.IndexV1.index_map_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Index.IndexV1.index_map_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should._ptableVersion
  commentId: F:EventStore.Core.Tests.Index.IndexV1.index_map_should._ptableVersion
  id: _ptableVersion
  parent: EventStore.Core.Tests.Index.IndexV1.index_map_should
  langs:
  - csharp
  - vb
  name: _ptableVersion
  nameWithType: index_map_should._ptableVersion
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should._ptableVersion
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _ptableVersion
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
    startLine: 21
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: protected byte _ptableVersion
    return:
      type: System.Byte
    content.vb: Protected _ptableVersion As Byte
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.#ctor(System.Byte)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.index_map_should.#ctor(System.Byte)
  id: '#ctor(System.Byte)'
  parent: EventStore.Core.Tests.Index.IndexV1.index_map_should
  langs:
  - csharp
  - vb
  name: index_map_should(Byte)
  nameWithType: index_map_should.index_map_should(Byte)
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.index_map_should(System.Byte)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
    startLine: 23
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public index_map_should(byte version)
    parameters:
    - id: version
      type: System.Byte
    content.vb: Public Sub New(version As Byte)
  overload: EventStore.Core.Tests.Index.IndexV1.index_map_should.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.SetUp
  commentId: M:EventStore.Core.Tests.Index.IndexV1.index_map_should.SetUp
  id: SetUp
  parent: EventStore.Core.Tests.Index.IndexV1.index_map_should
  langs:
  - csharp
  - vb
  name: SetUp()
  nameWithType: index_map_should.SetUp()
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.SetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetUp
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
    startLine: 27
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public override void SetUp()
    content.vb: Public Overrides Sub SetUp
  overridden: EventStore.Core.Tests.SpecificationWithDirectory.SetUp
  overload: EventStore.Core.Tests.Index.IndexV1.index_map_should.SetUp*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.TearDown
  commentId: M:EventStore.Core.Tests.Index.IndexV1.index_map_should.TearDown
  id: TearDown
  parent: EventStore.Core.Tests.Index.IndexV1.index_map_should
  langs:
  - csharp
  - vb
  name: TearDown()
  nameWithType: index_map_should.TearDown()
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.TearDown()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TearDown
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
    startLine: 42
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public override void TearDown()
    content.vb: Public Overrides Sub TearDown
  overridden: EventStore.Core.Tests.SpecificationWithDirectory.TearDown
  overload: EventStore.Core.Tests.Index.IndexV1.index_map_should.TearDown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.not_allow_negative_prepare_checkpoint_when_adding_ptable
  commentId: M:EventStore.Core.Tests.Index.IndexV1.index_map_should.not_allow_negative_prepare_checkpoint_when_adding_ptable
  id: not_allow_negative_prepare_checkpoint_when_adding_ptable
  parent: EventStore.Core.Tests.Index.IndexV1.index_map_should
  langs:
  - csharp
  - vb
  name: not_allow_negative_prepare_checkpoint_when_adding_ptable()
  nameWithType: index_map_should.not_allow_negative_prepare_checkpoint_when_adding_ptable()
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.not_allow_negative_prepare_checkpoint_when_adding_ptable()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: not_allow_negative_prepare_checkpoint_when_adding_ptable
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
    startLine: 49
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void not_allow_negative_prepare_checkpoint_when_adding_ptable()
    content.vb: Public Sub not_allow_negative_prepare_checkpoint_when_adding_ptable
  overload: EventStore.Core.Tests.Index.IndexV1.index_map_should.not_allow_negative_prepare_checkpoint_when_adding_ptable*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.not_allow_negative_commit_checkpoint_when_adding_ptable
  commentId: M:EventStore.Core.Tests.Index.IndexV1.index_map_should.not_allow_negative_commit_checkpoint_when_adding_ptable
  id: not_allow_negative_commit_checkpoint_when_adding_ptable
  parent: EventStore.Core.Tests.Index.IndexV1.index_map_should
  langs:
  - csharp
  - vb
  name: not_allow_negative_commit_checkpoint_when_adding_ptable()
  nameWithType: index_map_should.not_allow_negative_commit_checkpoint_when_adding_ptable()
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.not_allow_negative_commit_checkpoint_when_adding_ptable()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: not_allow_negative_commit_checkpoint_when_adding_ptable
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
    startLine: 55
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void not_allow_negative_commit_checkpoint_when_adding_ptable()
    content.vb: Public Sub not_allow_negative_commit_checkpoint_when_adding_ptable
  overload: EventStore.Core.Tests.Index.IndexV1.index_map_should.not_allow_negative_commit_checkpoint_when_adding_ptable*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one
  commentId: M:EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one
  id: throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one
  parent: EventStore.Core.Tests.Index.IndexV1.index_map_should
  langs:
  - csharp
  - vb
  name: throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one()
  nameWithType: index_map_should.throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one()
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
    startLine: 61
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one()
    content.vb: Public Sub throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one
  overload: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.allow_prepare_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
  commentId: M:EventStore.Core.Tests.Index.IndexV1.index_map_should.allow_prepare_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
  id: allow_prepare_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
  parent: EventStore.Core.Tests.Index.IndexV1.index_map_should
  langs:
  - csharp
  - vb
  name: allow_prepare_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index()
  nameWithType: index_map_should.allow_prepare_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index()
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.allow_prepare_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: allow_prepare_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
    startLine: 68
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void allow_prepare_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index()
    content.vb: Public Sub allow_prepare_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
  overload: EventStore.Core.Tests.Index.IndexV1.index_map_should.allow_prepare_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_if_prepare_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
  commentId: M:EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_if_prepare_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
  id: throw_corruptedindexexception_if_prepare_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
  parent: EventStore.Core.Tests.Index.IndexV1.index_map_should
  langs:
  - csharp
  - vb
  name: throw_corruptedindexexception_if_prepare_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap()
  nameWithType: index_map_should.throw_corruptedindexexception_if_prepare_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap()
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_if_prepare_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_corruptedindexexception_if_prepare_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
    startLine: 79
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_corruptedindexexception_if_prepare_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap()
    content.vb: Public Sub throw_corruptedindexexception_if_prepare_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
  overload: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_if_prepare_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one
  commentId: M:EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one
  id: throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one
  parent: EventStore.Core.Tests.Index.IndexV1.index_map_should
  langs:
  - csharp
  - vb
  name: throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one()
  nameWithType: index_map_should.throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one()
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
    startLine: 86
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one()
    content.vb: Public Sub throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one
  overload: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.allow_commit_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
  commentId: M:EventStore.Core.Tests.Index.IndexV1.index_map_should.allow_commit_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
  id: allow_commit_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
  parent: EventStore.Core.Tests.Index.IndexV1.index_map_should
  langs:
  - csharp
  - vb
  name: allow_commit_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index()
  nameWithType: index_map_should.allow_commit_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index()
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.allow_commit_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: allow_commit_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
    startLine: 93
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void allow_commit_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index()
    content.vb: Public Sub allow_commit_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
  overload: EventStore.Core.Tests.Index.IndexV1.index_map_should.allow_commit_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_if_commit_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
  commentId: M:EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_if_commit_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
  id: throw_corruptedindexexception_if_commit_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
  parent: EventStore.Core.Tests.Index.IndexV1.index_map_should
  langs:
  - csharp
  - vb
  name: throw_corruptedindexexception_if_commit_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap()
  nameWithType: index_map_should.throw_corruptedindexexception_if_commit_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap()
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_if_commit_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_corruptedindexexception_if_commit_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/index_map_should.cs
    startLine: 104
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void throw_corruptedindexexception_if_commit_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap()
    content.vb: Public Sub throw_corruptedindexexception_if_commit_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
  overload: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_if_commit_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Index.IndexV1
  commentId: N:EventStore.Core.Tests.Index.IndexV1
  isExternal: false
  name: EventStore.Core.Tests.Index.IndexV1
  nameWithType: EventStore.Core.Tests.Index.IndexV1
  fullName: EventStore.Core.Tests.Index.IndexV1
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithDirectory
  commentId: T:EventStore.Core.Tests.SpecificationWithDirectory
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithDirectory
  nameWithType: SpecificationWithDirectory
  fullName: EventStore.Core.Tests.SpecificationWithDirectory
- uid: EventStore.Core.Tests.SpecificationWithDirectory.PathName
  commentId: F:EventStore.Core.Tests.SpecificationWithDirectory.PathName
  parent: EventStore.Core.Tests.SpecificationWithDirectory
  isExternal: false
  name: PathName
  nameWithType: SpecificationWithDirectory.PathName
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.PathName
- uid: EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
  parent: EventStore.Core.Tests.SpecificationWithDirectory
  isExternal: false
  name: GetTempFilePath()
  nameWithType: SpecificationWithDirectory.GetTempFilePath()
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectory.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectory.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor(System.String)
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor(System.String)
  parent: EventStore.Core.Tests.SpecificationWithDirectory
  isExternal: true
  name: GetFilePathFor(String)
  nameWithType: SpecificationWithDirectory.GetFilePathFor(String)
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectory.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectory.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<index_map_should>()
  nameWithType: ProtobufExtensions.Serialize<index_map_should>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Index.IndexV1.index_map_should>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of index_map_should)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Index.IndexV1.index_map_should)()
  name.vb: Serialize(Of index_map_should)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<index_map_should>
    nameWithType: ProtobufExtensions.Serialize<index_map_should>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Index.IndexV1.index_map_should>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of index_map_should)
    nameWithType: ProtobufExtensions.Serialize(Of index_map_should)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Index.IndexV1.index_map_should)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<index_map_should>()
  nameWithType: ProtobufExtensions.SerializeToArray<index_map_should>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Index.IndexV1.index_map_should>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of index_map_should)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Index.IndexV1.index_map_should)()
  name.vb: SerializeToArray(Of index_map_should)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<index_map_should>
    nameWithType: ProtobufExtensions.SerializeToArray<index_map_should>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Index.IndexV1.index_map_should>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of index_map_should)
    nameWithType: ProtobufExtensions.SerializeToArray(Of index_map_should)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Index.IndexV1.index_map_should)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Byte
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.#ctor*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.index_map_should.#ctor
  isExternal: false
  name: index_map_should
  nameWithType: index_map_should.index_map_should
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.index_map_should
- uid: EventStore.Core.Tests.SpecificationWithDirectory.SetUp
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectory.SetUp
  parent: EventStore.Core.Tests.SpecificationWithDirectory
  isExternal: false
  name: SetUp()
  nameWithType: SpecificationWithDirectory.SetUp()
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.SetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectory.SetUp
    name: SetUp
    nameWithType: SpecificationWithDirectory.SetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectory.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectory.SetUp
    name: SetUp
    nameWithType: SpecificationWithDirectory.SetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectory.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.SetUp*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.index_map_should.SetUp
  isExternal: false
  name: SetUp
  nameWithType: index_map_should.SetUp
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.SetUp
- uid: EventStore.Core.Tests.SpecificationWithDirectory.TearDown
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectory.TearDown
  parent: EventStore.Core.Tests.SpecificationWithDirectory
  isExternal: false
  name: TearDown()
  nameWithType: SpecificationWithDirectory.TearDown()
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.TearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectory.TearDown
    name: TearDown
    nameWithType: SpecificationWithDirectory.TearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectory.TearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectory.TearDown
    name: TearDown
    nameWithType: SpecificationWithDirectory.TearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectory.TearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.TearDown*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.index_map_should.TearDown
  isExternal: false
  name: TearDown
  nameWithType: index_map_should.TearDown
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.TearDown
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.not_allow_negative_prepare_checkpoint_when_adding_ptable*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.index_map_should.not_allow_negative_prepare_checkpoint_when_adding_ptable
  isExternal: false
  name: not_allow_negative_prepare_checkpoint_when_adding_ptable
  nameWithType: index_map_should.not_allow_negative_prepare_checkpoint_when_adding_ptable
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.not_allow_negative_prepare_checkpoint_when_adding_ptable
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.not_allow_negative_commit_checkpoint_when_adding_ptable*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.index_map_should.not_allow_negative_commit_checkpoint_when_adding_ptable
  isExternal: false
  name: not_allow_negative_commit_checkpoint_when_adding_ptable
  nameWithType: index_map_should.not_allow_negative_commit_checkpoint_when_adding_ptable
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.not_allow_negative_commit_checkpoint_when_adding_ptable
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one
  isExternal: false
  name: throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one
  nameWithType: index_map_should.throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_when_prepare_checkpoint_is_less_than_minus_one
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.allow_prepare_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.index_map_should.allow_prepare_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
  isExternal: false
  name: allow_prepare_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
  nameWithType: index_map_should.allow_prepare_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.allow_prepare_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_if_prepare_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_if_prepare_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
  isExternal: false
  name: throw_corruptedindexexception_if_prepare_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
  nameWithType: index_map_should.throw_corruptedindexexception_if_prepare_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_if_prepare_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one
  isExternal: false
  name: throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one
  nameWithType: index_map_should.throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_when_commit_checkpoint_is_less_than_minus_one
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.allow_commit_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.index_map_should.allow_commit_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
  isExternal: false
  name: allow_commit_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
  nameWithType: index_map_should.allow_commit_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.allow_commit_checkpoint_equal_to_minus_one_if_no_ptables_are_in_index
- uid: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_if_commit_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_if_commit_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
  isExternal: false
  name: throw_corruptedindexexception_if_commit_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
  nameWithType: index_map_should.throw_corruptedindexexception_if_commit_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap
  fullName: EventStore.Core.Tests.Index.IndexV1.index_map_should.throw_corruptedindexexception_if_commit_checkpoint_is_minus_one_and_there_are_ptables_in_indexmap

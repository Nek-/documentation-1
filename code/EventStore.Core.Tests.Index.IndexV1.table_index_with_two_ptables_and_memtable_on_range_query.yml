### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  commentId: T:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  id: table_index_with_two_ptables_and_memtable_on_range_query
  parent: EventStore.Core.Tests.Index.IndexV1
  children:
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.#ctor(System.Byte,System.Boolean)
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query._ptableVersion
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_latest_entry_for_nonexisting_stream
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_oldest_entry_for_nonexisting_stream
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_existing_streams_for_nonexistent_version
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_nonexistent_stream
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_1
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_2
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_3
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_4
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_5
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_6
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_0
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_2
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_memtable
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_0
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_1
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_2
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_oldest_entries_for_each_stream
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_empty_range_for_nonexisting_stream
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_one_value_for_existing_streams_for_existing_version
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureSetUp
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureTearDown
  langs:
  - csharp
  - vb
  name: table_index_with_two_ptables_and_memtable_on_range_query
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: table_index_with_two_ptables_and_memtable_on_range_query
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 10
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: 'public class table_index_with_two_ptables_and_memtable_on_range_query : SpecificationWithDirectoryPerTestFixture'
    content.vb: >-
      Public Class table_index_with_two_ptables_and_memtable_on_range_query

          Inherits SpecificationWithDirectoryPerTestFixture
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  inheritedMembers:
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query._ptableVersion
  commentId: F:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query._ptableVersion
  id: _ptableVersion
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: _ptableVersion
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query._ptableVersion
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query._ptableVersion
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _ptableVersion
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 24
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: protected byte _ptableVersion
    return:
      type: System.Byte
    content.vb: Protected _ptableVersion As Byte
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.#ctor(System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.#ctor(System.Byte,System.Boolean)
  id: '#ctor(System.Byte,System.Boolean)'
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: table_index_with_two_ptables_and_memtable_on_range_query(Byte, Boolean)
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.table_index_with_two_ptables_and_memtable_on_range_query(Byte, Boolean)
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.table_index_with_two_ptables_and_memtable_on_range_query(System.Byte, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 27
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public table_index_with_two_ptables_and_memtable_on_range_query(byte version, bool skipIndexVerify)
    parameters:
    - id: version
      type: System.Byte
    - id: skipIndexVerify
      type: System.Boolean
    content.vb: Public Sub New(version As Byte, skipIndexVerify As Boolean)
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureSetUp
  id: TestFixtureSetUp
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: TestFixtureSetUp()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureSetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureSetUp
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 32
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public override void TestFixtureSetUp()
    content.vb: Public Overrides Sub TestFixtureSetUp
  overridden: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureSetUp*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureTearDown
  id: TestFixtureTearDown
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: TestFixtureTearDown()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureTearDown()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureTearDown
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 76
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public override void TestFixtureTearDown()
    content.vb: Public Overrides Sub TestFixtureTearDown
  overridden: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureTearDown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_latest_entry_for_nonexisting_stream
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_latest_entry_for_nonexisting_stream
  id: should_not_return_latest_entry_for_nonexisting_stream
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_not_return_latest_entry_for_nonexisting_stream()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_latest_entry_for_nonexisting_stream()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_latest_entry_for_nonexisting_stream()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_not_return_latest_entry_for_nonexisting_stream
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 91
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_not_return_latest_entry_for_nonexisting_stream()
    content.vb: Public Sub should_not_return_latest_entry_for_nonexisting_stream
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_latest_entry_for_nonexisting_stream*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_oldest_entry_for_nonexisting_stream
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_oldest_entry_for_nonexisting_stream
  id: should_not_return_oldest_entry_for_nonexisting_stream
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_not_return_oldest_entry_for_nonexisting_stream()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_oldest_entry_for_nonexisting_stream()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_oldest_entry_for_nonexisting_stream()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_not_return_oldest_entry_for_nonexisting_stream
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 98
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_not_return_oldest_entry_for_nonexisting_stream()
    content.vb: Public Sub should_not_return_oldest_entry_for_nonexisting_stream
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_oldest_entry_for_nonexisting_stream*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_memtable
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_memtable
  id: should_return_correct_latest_entry_for_stream_with_latest_entry_in_memtable
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_return_correct_latest_entry_for_stream_with_latest_entry_in_memtable()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_memtable()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_memtable()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_return_correct_latest_entry_for_stream_with_latest_entry_in_memtable
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 105
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_return_correct_latest_entry_for_stream_with_latest_entry_in_memtable()
    content.vb: Public Sub should_return_correct_latest_entry_for_stream_with_latest_entry_in_memtable
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_memtable*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_0
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_0
  id: should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_0
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_0()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_0()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_0()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_0
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 115
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_0()
    content.vb: Public Sub should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_0
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_0*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_0
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_0
  id: should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_0
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_0()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_0()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_0()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_0
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 125
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_0()
    content.vb: Public Sub should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_0
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_0*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_1
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_1
  id: should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_1
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_1()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_1()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_1()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_1
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 135
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_1()
    content.vb: Public Sub should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_1
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_1*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_2
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_2
  id: should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_2
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_2()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_2()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_2()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_2
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 145
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_2()
    content.vb: Public Sub should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_2
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_2
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_2
  id: should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_2
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_2()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_2()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_2()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_2
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 155
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_2()
    content.vb: Public Sub should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_2
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_oldest_entries_for_each_stream
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_oldest_entries_for_each_stream
  id: should_return_correct_oldest_entries_for_each_stream
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_return_correct_oldest_entries_for_each_stream()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_oldest_entries_for_each_stream()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_oldest_entries_for_each_stream()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_return_correct_oldest_entries_for_each_stream
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 165
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_return_correct_oldest_entries_for_each_stream()
    content.vb: Public Sub should_return_correct_oldest_entries_for_each_stream
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_oldest_entries_for_each_stream*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_empty_range_for_nonexisting_stream
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_empty_range_for_nonexisting_stream
  id: should_return_empty_range_for_nonexisting_stream
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_return_empty_range_for_nonexisting_stream()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_empty_range_for_nonexisting_stream()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_empty_range_for_nonexisting_stream()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_return_empty_range_for_nonexisting_stream
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 201
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_return_empty_range_for_nonexisting_stream()
    content.vb: Public Sub should_return_empty_range_for_nonexisting_stream
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_empty_range_for_nonexisting_stream*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_1
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_1
  id: should_return_correct_full_range_with_descending_order_for_1
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_return_correct_full_range_with_descending_order_for_1()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_1()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_1()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_return_correct_full_range_with_descending_order_for_1
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 208
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_return_correct_full_range_with_descending_order_for_1()
    content.vb: Public Sub should_return_correct_full_range_with_descending_order_for_1
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_1*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_2
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_2
  id: should_return_correct_full_range_with_descending_order_for_2
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_return_correct_full_range_with_descending_order_for_2()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_2()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_2()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_return_correct_full_range_with_descending_order_for_2
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 219
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_return_correct_full_range_with_descending_order_for_2()
    content.vb: Public Sub should_return_correct_full_range_with_descending_order_for_2
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_3
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_3
  id: should_return_correct_full_range_with_descending_order_for_3
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_return_correct_full_range_with_descending_order_for_3()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_3()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_3()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_return_correct_full_range_with_descending_order_for_3
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 228
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_return_correct_full_range_with_descending_order_for_3()
    content.vb: Public Sub should_return_correct_full_range_with_descending_order_for_3
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_3*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_4
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_4
  id: should_return_correct_full_range_with_descending_order_for_4
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_return_correct_full_range_with_descending_order_for_4()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_4()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_4()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_return_correct_full_range_with_descending_order_for_4
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 239
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_return_correct_full_range_with_descending_order_for_4()
    content.vb: Public Sub should_return_correct_full_range_with_descending_order_for_4
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_4*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_5
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_5
  id: should_return_correct_full_range_with_descending_order_for_5
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_return_correct_full_range_with_descending_order_for_5()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_5()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_5()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_return_correct_full_range_with_descending_order_for_5
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 248
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_return_correct_full_range_with_descending_order_for_5()
    content.vb: Public Sub should_return_correct_full_range_with_descending_order_for_5
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_5*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_6
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_6
  id: should_return_correct_full_range_with_descending_order_for_6
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_return_correct_full_range_with_descending_order_for_6()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_6()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_6()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_return_correct_full_range_with_descending_order_for_6
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 256
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_return_correct_full_range_with_descending_order_for_6()
    content.vb: Public Sub should_return_correct_full_range_with_descending_order_for_6
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_6*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_nonexistent_stream
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_nonexistent_stream
  id: should_not_return_one_value_for_nonexistent_stream
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_not_return_one_value_for_nonexistent_stream()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_nonexistent_stream()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_nonexistent_stream()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_not_return_one_value_for_nonexistent_stream
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 265
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_not_return_one_value_for_nonexistent_stream()
    content.vb: Public Sub should_not_return_one_value_for_nonexistent_stream
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_nonexistent_stream*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_one_value_for_existing_streams_for_existing_version
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_one_value_for_existing_streams_for_existing_version
  id: should_return_one_value_for_existing_streams_for_existing_version
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_return_one_value_for_existing_streams_for_existing_version()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_one_value_for_existing_streams_for_existing_version()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_one_value_for_existing_streams_for_existing_version()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_return_one_value_for_existing_streams_for_existing_version
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 272
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_return_one_value_for_existing_streams_for_existing_version()
    content.vb: Public Sub should_return_one_value_for_existing_streams_for_existing_version
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_one_value_for_existing_streams_for_existing_version*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_existing_streams_for_nonexistent_version
  commentId: M:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_existing_streams_for_nonexistent_version
  id: should_not_return_one_value_for_existing_streams_for_nonexistent_version
  parent: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query
  langs:
  - csharp
  - vb
  name: should_not_return_one_value_for_existing_streams_for_nonexistent_version()
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_existing_streams_for_nonexistent_version()
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_existing_streams_for_nonexistent_version()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_not_return_one_value_for_existing_streams_for_nonexistent_version
    path: ../EventStore/src/EventStore.Core.Tests/Index/IndexV1/table_index_with_two_ptables_and_memtable_on_range_query.cs
    startLine: 295
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Index.IndexV1
  syntax:
    content: public void should_not_return_one_value_for_existing_streams_for_nonexistent_version()
    content.vb: Public Sub should_not_return_one_value_for_existing_streams_for_nonexistent_version
  overload: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_existing_streams_for_nonexistent_version*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Index.IndexV1
  commentId: N:EventStore.Core.Tests.Index.IndexV1
  isExternal: false
  name: EventStore.Core.Tests.Index.IndexV1
  nameWithType: EventStore.Core.Tests.Index.IndexV1
  fullName: EventStore.Core.Tests.Index.IndexV1
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  commentId: T:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithDirectoryPerTestFixture
  nameWithType: SpecificationWithDirectoryPerTestFixture
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  commentId: F:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: PathName
  nameWithType: SpecificationWithDirectoryPerTestFixture.PathName
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: GetTempFilePath()
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: true
  name: GetFilePathFor(String)
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor(String)
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<table_index_with_two_ptables_and_memtable_on_range_query>()
  nameWithType: ProtobufExtensions.Serialize<table_index_with_two_ptables_and_memtable_on_range_query>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of table_index_with_two_ptables_and_memtable_on_range_query)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query)()
  name.vb: Serialize(Of table_index_with_two_ptables_and_memtable_on_range_query)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<table_index_with_two_ptables_and_memtable_on_range_query>
    nameWithType: ProtobufExtensions.Serialize<table_index_with_two_ptables_and_memtable_on_range_query>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of table_index_with_two_ptables_and_memtable_on_range_query)
    nameWithType: ProtobufExtensions.Serialize(Of table_index_with_two_ptables_and_memtable_on_range_query)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<table_index_with_two_ptables_and_memtable_on_range_query>()
  nameWithType: ProtobufExtensions.SerializeToArray<table_index_with_two_ptables_and_memtable_on_range_query>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of table_index_with_two_ptables_and_memtable_on_range_query)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query)()
  name.vb: SerializeToArray(Of table_index_with_two_ptables_and_memtable_on_range_query)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<table_index_with_two_ptables_and_memtable_on_range_query>
    nameWithType: ProtobufExtensions.SerializeToArray<table_index_with_two_ptables_and_memtable_on_range_query>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of table_index_with_two_ptables_and_memtable_on_range_query)
    nameWithType: ProtobufExtensions.SerializeToArray(Of table_index_with_two_ptables_and_memtable_on_range_query)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Byte
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.#ctor*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.#ctor
  isExternal: false
  name: table_index_with_two_ptables_and_memtable_on_range_query
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.table_index_with_two_ptables_and_memtable_on_range_query
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.table_index_with_two_ptables_and_memtable_on_range_query
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureSetUp()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureSetUp*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureSetUp
  isExternal: false
  name: TestFixtureSetUp
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureSetUp
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureSetUp
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureTearDown()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureTearDown*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureTearDown
  isExternal: false
  name: TestFixtureTearDown
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureTearDown
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.TestFixtureTearDown
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_latest_entry_for_nonexisting_stream*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_latest_entry_for_nonexisting_stream
  isExternal: false
  name: should_not_return_latest_entry_for_nonexisting_stream
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_latest_entry_for_nonexisting_stream
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_latest_entry_for_nonexisting_stream
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_oldest_entry_for_nonexisting_stream*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_oldest_entry_for_nonexisting_stream
  isExternal: false
  name: should_not_return_oldest_entry_for_nonexisting_stream
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_oldest_entry_for_nonexisting_stream
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_oldest_entry_for_nonexisting_stream
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_memtable*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_memtable
  isExternal: false
  name: should_return_correct_latest_entry_for_stream_with_latest_entry_in_memtable
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_memtable
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_memtable
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_0*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_0
  isExternal: false
  name: should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_0
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_0
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_0
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_0*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_0
  isExternal: false
  name: should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_0
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_0
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_0
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_1*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_1
  isExternal: false
  name: should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_1
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_1
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_1
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_2*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_2
  isExternal: false
  name: should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_2
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_2
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_stream_with_latest_entry_in_ptable_2
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_2*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_2
  isExternal: false
  name: should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_2
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_2
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_latest_entry_for_another_stream_with_latest_entry_in_ptable_2
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_oldest_entries_for_each_stream*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_oldest_entries_for_each_stream
  isExternal: false
  name: should_return_correct_oldest_entries_for_each_stream
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_oldest_entries_for_each_stream
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_oldest_entries_for_each_stream
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_empty_range_for_nonexisting_stream*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_empty_range_for_nonexisting_stream
  isExternal: false
  name: should_return_empty_range_for_nonexisting_stream
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_empty_range_for_nonexisting_stream
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_empty_range_for_nonexisting_stream
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_1*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_1
  isExternal: false
  name: should_return_correct_full_range_with_descending_order_for_1
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_1
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_1
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_2*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_2
  isExternal: false
  name: should_return_correct_full_range_with_descending_order_for_2
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_2
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_2
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_3*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_3
  isExternal: false
  name: should_return_correct_full_range_with_descending_order_for_3
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_3
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_3
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_4*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_4
  isExternal: false
  name: should_return_correct_full_range_with_descending_order_for_4
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_4
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_4
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_5*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_5
  isExternal: false
  name: should_return_correct_full_range_with_descending_order_for_5
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_5
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_5
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_6*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_6
  isExternal: false
  name: should_return_correct_full_range_with_descending_order_for_6
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_6
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_correct_full_range_with_descending_order_for_6
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_nonexistent_stream*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_nonexistent_stream
  isExternal: false
  name: should_not_return_one_value_for_nonexistent_stream
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_nonexistent_stream
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_nonexistent_stream
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_one_value_for_existing_streams_for_existing_version*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_one_value_for_existing_streams_for_existing_version
  isExternal: false
  name: should_return_one_value_for_existing_streams_for_existing_version
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_return_one_value_for_existing_streams_for_existing_version
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_return_one_value_for_existing_streams_for_existing_version
- uid: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_existing_streams_for_nonexistent_version*
  commentId: Overload:EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_existing_streams_for_nonexistent_version
  isExternal: false
  name: should_not_return_one_value_for_existing_streams_for_nonexistent_version
  nameWithType: table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_existing_streams_for_nonexistent_version
  fullName: EventStore.Core.Tests.Index.IndexV1.table_index_with_two_ptables_and_memtable_on_range_query.should_not_return_one_value_for_existing_streams_for_nonexistent_version

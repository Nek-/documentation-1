### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Infrastructure.RandTestQueueItem
  commentId: T:EventStore.Core.Tests.Infrastructure.RandTestQueueItem
  id: RandTestQueueItem
  parent: EventStore.Core.Tests.Infrastructure
  children:
  - EventStore.Core.Tests.Infrastructure.RandTestQueueItem.#ctor(System.Int32,System.Int32,IPEndPoint,EventStore.Core.Messaging.Message,EventStore.Core.Bus.IPublisher)
  - EventStore.Core.Tests.Infrastructure.RandTestQueueItem.Bus
  - EventStore.Core.Tests.Infrastructure.RandTestQueueItem.EndPoint
  - EventStore.Core.Tests.Infrastructure.RandTestQueueItem.GlobalId
  - EventStore.Core.Tests.Infrastructure.RandTestQueueItem.LogicalTime
  - EventStore.Core.Tests.Infrastructure.RandTestQueueItem.Message
  - EventStore.Core.Tests.Infrastructure.RandTestQueueItem.ToString
  langs:
  - csharp
  - vb
  name: RandTestQueueItem
  nameWithType: RandTestQueueItem
  fullName: EventStore.Core.Tests.Infrastructure.RandTestQueueItem
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Infrastructure/RandTestQueueItem.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RandTestQueueItem
    path: ../EventStore/src/EventStore.Core.Tests/Infrastructure/RandTestQueueItem.cs
    startLine: 6
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Infrastructure
  syntax:
    content: 'public class RandTestQueueItem : object'
    content.vb: >-
      Public Class RandTestQueueItem

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Infrastructure.RandTestQueueItem.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Infrastructure.RandTestQueueItem.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.LogicalTime
  commentId: F:EventStore.Core.Tests.Infrastructure.RandTestQueueItem.LogicalTime
  id: LogicalTime
  parent: EventStore.Core.Tests.Infrastructure.RandTestQueueItem
  langs:
  - csharp
  - vb
  name: LogicalTime
  nameWithType: RandTestQueueItem.LogicalTime
  fullName: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.LogicalTime
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Infrastructure/RandTestQueueItem.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: LogicalTime
    path: ../EventStore/src/EventStore.Core.Tests/Infrastructure/RandTestQueueItem.cs
    startLine: 8
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Infrastructure
  syntax:
    content: public readonly int LogicalTime
    return:
      type: System.Int32
    content.vb: Public ReadOnly LogicalTime As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.GlobalId
  commentId: F:EventStore.Core.Tests.Infrastructure.RandTestQueueItem.GlobalId
  id: GlobalId
  parent: EventStore.Core.Tests.Infrastructure.RandTestQueueItem
  langs:
  - csharp
  - vb
  name: GlobalId
  nameWithType: RandTestQueueItem.GlobalId
  fullName: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.GlobalId
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Infrastructure/RandTestQueueItem.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GlobalId
    path: ../EventStore/src/EventStore.Core.Tests/Infrastructure/RandTestQueueItem.cs
    startLine: 9
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Infrastructure
  syntax:
    content: public readonly int GlobalId
    return:
      type: System.Int32
    content.vb: Public ReadOnly GlobalId As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.EndPoint
  commentId: F:EventStore.Core.Tests.Infrastructure.RandTestQueueItem.EndPoint
  id: EndPoint
  parent: EventStore.Core.Tests.Infrastructure.RandTestQueueItem
  langs:
  - csharp
  - vb
  name: EndPoint
  nameWithType: RandTestQueueItem.EndPoint
  fullName: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.EndPoint
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Infrastructure/RandTestQueueItem.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EndPoint
    path: ../EventStore/src/EventStore.Core.Tests/Infrastructure/RandTestQueueItem.cs
    startLine: 10
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Infrastructure
  syntax:
    content: public readonly IPEndPoint EndPoint
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly EndPoint As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.Message
  commentId: F:EventStore.Core.Tests.Infrastructure.RandTestQueueItem.Message
  id: Message
  parent: EventStore.Core.Tests.Infrastructure.RandTestQueueItem
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: RandTestQueueItem.Message
  fullName: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.Message
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Infrastructure/RandTestQueueItem.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Message
    path: ../EventStore/src/EventStore.Core.Tests/Infrastructure/RandTestQueueItem.cs
    startLine: 11
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Infrastructure
  syntax:
    content: public readonly Message Message
    return:
      type: EventStore.Core.Messaging.Message
    content.vb: Public ReadOnly Message As Message
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.Bus
  commentId: F:EventStore.Core.Tests.Infrastructure.RandTestQueueItem.Bus
  id: Bus
  parent: EventStore.Core.Tests.Infrastructure.RandTestQueueItem
  langs:
  - csharp
  - vb
  name: Bus
  nameWithType: RandTestQueueItem.Bus
  fullName: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.Bus
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Infrastructure/RandTestQueueItem.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Bus
    path: ../EventStore/src/EventStore.Core.Tests/Infrastructure/RandTestQueueItem.cs
    startLine: 12
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Infrastructure
  syntax:
    content: public readonly IPublisher Bus
    return:
      type: EventStore.Core.Bus.IPublisher
    content.vb: Public ReadOnly Bus As IPublisher
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.#ctor(System.Int32,System.Int32,IPEndPoint,EventStore.Core.Messaging.Message,EventStore.Core.Bus.IPublisher)
  commentId: M:EventStore.Core.Tests.Infrastructure.RandTestQueueItem.#ctor(System.Int32,System.Int32,IPEndPoint,EventStore.Core.Messaging.Message,EventStore.Core.Bus.IPublisher)
  id: '#ctor(System.Int32,System.Int32,IPEndPoint,EventStore.Core.Messaging.Message,EventStore.Core.Bus.IPublisher)'
  parent: EventStore.Core.Tests.Infrastructure.RandTestQueueItem
  langs:
  - csharp
  - vb
  name: RandTestQueueItem(Int32, Int32, IPEndPoint, Message, IPublisher)
  nameWithType: RandTestQueueItem.RandTestQueueItem(Int32, Int32, IPEndPoint, Message, IPublisher)
  fullName: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.RandTestQueueItem(System.Int32, System.Int32, IPEndPoint, EventStore.Core.Messaging.Message, EventStore.Core.Bus.IPublisher)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Infrastructure/RandTestQueueItem.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Infrastructure/RandTestQueueItem.cs
    startLine: 14
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Infrastructure
  syntax:
    content: public RandTestQueueItem(int logicalTime, int globalId, IPEndPoint endPoint, Message message, IPublisher bus)
    parameters:
    - id: logicalTime
      type: System.Int32
    - id: globalId
      type: System.Int32
    - id: endPoint
      type: IPEndPoint
    - id: message
      type: EventStore.Core.Messaging.Message
    - id: bus
      type: EventStore.Core.Bus.IPublisher
    content.vb: Public Sub New(logicalTime As Integer, globalId As Integer, endPoint As IPEndPoint, message As Message, bus As IPublisher)
  overload: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.ToString
  commentId: M:EventStore.Core.Tests.Infrastructure.RandTestQueueItem.ToString
  id: ToString
  parent: EventStore.Core.Tests.Infrastructure.RandTestQueueItem
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RandTestQueueItem.ToString()
  fullName: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Infrastructure/RandTestQueueItem.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.Core.Tests/Infrastructure/RandTestQueueItem.cs
    startLine: 23
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Infrastructure
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.Tests.Infrastructure
  commentId: N:EventStore.Core.Tests.Infrastructure
  isExternal: false
  name: EventStore.Core.Tests.Infrastructure
  nameWithType: EventStore.Core.Tests.Infrastructure
  fullName: EventStore.Core.Tests.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<RandTestQueueItem>()
  nameWithType: ProtobufExtensions.Serialize<RandTestQueueItem>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Infrastructure.RandTestQueueItem>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of RandTestQueueItem)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Infrastructure.RandTestQueueItem)()
  name.vb: Serialize(Of RandTestQueueItem)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<RandTestQueueItem>
    nameWithType: ProtobufExtensions.Serialize<RandTestQueueItem>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Infrastructure.RandTestQueueItem>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of RandTestQueueItem)
    nameWithType: ProtobufExtensions.Serialize(Of RandTestQueueItem)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Infrastructure.RandTestQueueItem)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<RandTestQueueItem>()
  nameWithType: ProtobufExtensions.SerializeToArray<RandTestQueueItem>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Infrastructure.RandTestQueueItem>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of RandTestQueueItem)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Infrastructure.RandTestQueueItem)()
  name.vb: SerializeToArray(Of RandTestQueueItem)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<RandTestQueueItem>
    nameWithType: ProtobufExtensions.SerializeToArray<RandTestQueueItem>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Infrastructure.RandTestQueueItem>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of RandTestQueueItem)
    nameWithType: ProtobufExtensions.SerializeToArray(Of RandTestQueueItem)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Infrastructure.RandTestQueueItem)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: IPEndPoint
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: IPEndPoint
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  isExternal: false
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.#ctor*
  commentId: Overload:EventStore.Core.Tests.Infrastructure.RandTestQueueItem.#ctor
  isExternal: false
  name: RandTestQueueItem
  nameWithType: RandTestQueueItem.RandTestQueueItem
  fullName: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.RandTestQueueItem
- uid: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.ToString*
  commentId: Overload:EventStore.Core.Tests.Infrastructure.RandTestQueueItem.ToString
  isExternal: false
  name: ToString
  nameWithType: RandTestQueueItem.ToString
  fullName: EventStore.Core.Tests.Infrastructure.RandTestQueueItem.ToString
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

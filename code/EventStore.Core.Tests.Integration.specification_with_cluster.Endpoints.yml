### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints
  commentId: T:EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints
  id: specification_with_cluster.Endpoints
  parent: EventStore.Core.Tests.Integration
  children:
  - EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.ExternalHttp
  - EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.ExternalTcp
  - EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.ExternalTcpSec
  - EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.InternalHttp
  - EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.InternalTcp
  - EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.InternalTcpSec
  langs:
  - csharp
  - vb
  name: specification_with_cluster.Endpoints
  nameWithType: specification_with_cluster.Endpoints
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Endpoints
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 21
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: 'protected class Endpoints : object'
    content.vb: >-
      Protected Class Endpoints

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.InternalTcp
  commentId: F:EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.InternalTcp
  id: InternalTcp
  parent: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints
  langs:
  - csharp
  - vb
  name: InternalTcp
  nameWithType: specification_with_cluster.Endpoints.InternalTcp
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.InternalTcp
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InternalTcp
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 23
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: public readonly IPEndPoint InternalTcp
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly InternalTcp As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.InternalTcpSec
  commentId: F:EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.InternalTcpSec
  id: InternalTcpSec
  parent: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints
  langs:
  - csharp
  - vb
  name: InternalTcpSec
  nameWithType: specification_with_cluster.Endpoints.InternalTcpSec
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.InternalTcpSec
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InternalTcpSec
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 24
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: public readonly IPEndPoint InternalTcpSec
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly InternalTcpSec As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.InternalHttp
  commentId: F:EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.InternalHttp
  id: InternalHttp
  parent: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints
  langs:
  - csharp
  - vb
  name: InternalHttp
  nameWithType: specification_with_cluster.Endpoints.InternalHttp
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.InternalHttp
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InternalHttp
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 25
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: public readonly IPEndPoint InternalHttp
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly InternalHttp As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.ExternalTcp
  commentId: F:EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.ExternalTcp
  id: ExternalTcp
  parent: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints
  langs:
  - csharp
  - vb
  name: ExternalTcp
  nameWithType: specification_with_cluster.Endpoints.ExternalTcp
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.ExternalTcp
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExternalTcp
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 26
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: public readonly IPEndPoint ExternalTcp
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly ExternalTcp As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.ExternalTcpSec
  commentId: F:EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.ExternalTcpSec
  id: ExternalTcpSec
  parent: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints
  langs:
  - csharp
  - vb
  name: ExternalTcpSec
  nameWithType: specification_with_cluster.Endpoints.ExternalTcpSec
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.ExternalTcpSec
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExternalTcpSec
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 27
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: public readonly IPEndPoint ExternalTcpSec
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly ExternalTcpSec As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.ExternalHttp
  commentId: F:EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.ExternalHttp
  id: ExternalHttp
  parent: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints
  langs:
  - csharp
  - vb
  name: ExternalHttp
  nameWithType: specification_with_cluster.Endpoints.ExternalHttp
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.ExternalHttp
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExternalHttp
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 28
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: public readonly IPEndPoint ExternalHttp
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly ExternalHttp As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints
  langs:
  - csharp
  - vb
  name: Endpoints(Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: specification_with_cluster.Endpoints.Endpoints(Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.Endpoints(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 30
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: public Endpoints(int internalTcp, int internalTcpSec, int internalHttp, int externalTcp, int externalTcpSec, int externalHttp)
    parameters:
    - id: internalTcp
      type: System.Int32
    - id: internalTcpSec
      type: System.Int32
    - id: internalHttp
      type: System.Int32
    - id: externalTcp
      type: System.Int32
    - id: externalTcpSec
      type: System.Int32
    - id: externalHttp
      type: System.Int32
    content.vb: Public Sub New(internalTcp As Integer, internalTcpSec As Integer, internalHttp As Integer, externalTcp As Integer, externalTcpSec As Integer, externalHttp As Integer)
  overload: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Integration
  commentId: N:EventStore.Core.Tests.Integration
  isExternal: false
  name: EventStore.Core.Tests.Integration
  nameWithType: EventStore.Core.Tests.Integration
  fullName: EventStore.Core.Tests.Integration
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<specification_with_cluster.Endpoints>()
  nameWithType: ProtobufExtensions.Serialize<specification_with_cluster.Endpoints>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of specification_with_cluster.Endpoints)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints)()
  name.vb: Serialize(Of specification_with_cluster.Endpoints)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<specification_with_cluster.Endpoints>
    nameWithType: ProtobufExtensions.Serialize<specification_with_cluster.Endpoints>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of specification_with_cluster.Endpoints)
    nameWithType: ProtobufExtensions.Serialize(Of specification_with_cluster.Endpoints)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<specification_with_cluster.Endpoints>()
  nameWithType: ProtobufExtensions.SerializeToArray<specification_with_cluster.Endpoints>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of specification_with_cluster.Endpoints)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints)()
  name.vb: SerializeToArray(Of specification_with_cluster.Endpoints)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<specification_with_cluster.Endpoints>
    nameWithType: ProtobufExtensions.SerializeToArray<specification_with_cluster.Endpoints>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of specification_with_cluster.Endpoints)
    nameWithType: ProtobufExtensions.SerializeToArray(Of specification_with_cluster.Endpoints)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: IPEndPoint
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: IPEndPoint
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.#ctor*
  commentId: Overload:EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.#ctor
  isExternal: false
  name: Endpoints
  nameWithType: specification_with_cluster.Endpoints.Endpoints
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints.Endpoints
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Integration.specification_with_cluster
  commentId: T:EventStore.Core.Tests.Integration.specification_with_cluster
  id: specification_with_cluster
  parent: EventStore.Core.Tests.Integration
  children:
  - EventStore.Core.Tests.Integration.specification_with_cluster._admin
  - EventStore.Core.Tests.Integration.specification_with_cluster._conn
  - EventStore.Core.Tests.Integration.specification_with_cluster._nodeCreationFactory
  - EventStore.Core.Tests.Integration.specification_with_cluster._nodeEndpoints
  - EventStore.Core.Tests.Integration.specification_with_cluster._nodes
  - EventStore.Core.Tests.Integration.specification_with_cluster.BeforeNodesStart
  - EventStore.Core.Tests.Integration.specification_with_cluster.GetMaster
  - EventStore.Core.Tests.Integration.specification_with_cluster.GetSlaves
  - EventStore.Core.Tests.Integration.specification_with_cluster.Given
  - EventStore.Core.Tests.Integration.specification_with_cluster.ShutdownNode(System.Int32)
  - EventStore.Core.Tests.Integration.specification_with_cluster.StartNode(System.Int32)
  - EventStore.Core.Tests.Integration.specification_with_cluster.TestFixtureSetUp
  - EventStore.Core.Tests.Integration.specification_with_cluster.TestFixtureTearDown
  - EventStore.Core.Tests.Integration.specification_with_cluster.WaitIdle
  langs:
  - csharp
  - vb
  name: specification_with_cluster
  nameWithType: specification_with_cluster
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: specification_with_cluster
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 13
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: 'public class specification_with_cluster : SpecificationWithDirectoryPerTestFixture'
    content.vb: >-
      Public Class specification_with_cluster

          Inherits SpecificationWithDirectoryPerTestFixture
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  derivedClasses:
  - EventStore.Core.Tests.Integration.when_a_master_is_shutdown
  - EventStore.Core.Tests.Replication.ReadStream.when_reading_an_event_committed_on_master_and_on_slaves
  - EventStore.Core.Tests.Replication.ReadStream.when_reading_an_event_from_a_single_node
  - EventStore.Core.Tests.Replication.ReadStream.when_reading_events_from_cluster_with_replication_checkpoint_not_set
  - EventStore.Core.Tests.Replication.ReadStream.when_subscribed_to_stream_on_master_and_event_is_replicated_to_slaves
  inheritedMembers:
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Integration.specification_with_cluster.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Integration.specification_with_cluster.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Integration.specification_with_cluster._nodes
  commentId: F:EventStore.Core.Tests.Integration.specification_with_cluster._nodes
  id: _nodes
  parent: EventStore.Core.Tests.Integration.specification_with_cluster
  langs:
  - csharp
  - vb
  name: _nodes
  nameWithType: specification_with_cluster._nodes
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster._nodes
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _nodes
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 15
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: protected MiniClusterNode[] _nodes
    return:
      type: EventStore.Core.Tests.Helpers.MiniClusterNode[]
    content.vb: Protected _nodes As MiniClusterNode()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Integration.specification_with_cluster._nodeEndpoints
  commentId: F:EventStore.Core.Tests.Integration.specification_with_cluster._nodeEndpoints
  id: _nodeEndpoints
  parent: EventStore.Core.Tests.Integration.specification_with_cluster
  langs:
  - csharp
  - vb
  name: _nodeEndpoints
  nameWithType: specification_with_cluster._nodeEndpoints
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster._nodeEndpoints
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _nodeEndpoints
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 16
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: protected specification_with_cluster.Endpoints[] _nodeEndpoints
    return:
      type: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints[]
    content.vb: Protected _nodeEndpoints As specification_with_cluster.Endpoints()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Integration.specification_with_cluster._conn
  commentId: F:EventStore.Core.Tests.Integration.specification_with_cluster._conn
  id: _conn
  parent: EventStore.Core.Tests.Integration.specification_with_cluster
  langs:
  - csharp
  - vb
  name: _conn
  nameWithType: specification_with_cluster._conn
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster._conn
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _conn
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 17
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: protected IEventStoreConnection _conn
    return:
      type: EventStore.ClientAPI.IEventStoreConnection
    content.vb: Protected _conn As IEventStoreConnection
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Integration.specification_with_cluster._admin
  commentId: F:EventStore.Core.Tests.Integration.specification_with_cluster._admin
  id: _admin
  parent: EventStore.Core.Tests.Integration.specification_with_cluster
  langs:
  - csharp
  - vb
  name: _admin
  nameWithType: specification_with_cluster._admin
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster._admin
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _admin
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 18
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: protected UserCredentials _admin
    return:
      type: EventStore.ClientAPI.SystemData.UserCredentials
    content.vb: Protected _admin As UserCredentials
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Integration.specification_with_cluster._nodeCreationFactory
  commentId: F:EventStore.Core.Tests.Integration.specification_with_cluster._nodeCreationFactory
  id: _nodeCreationFactory
  parent: EventStore.Core.Tests.Integration.specification_with_cluster
  langs:
  - csharp
  - vb
  name: _nodeCreationFactory
  nameWithType: specification_with_cluster._nodeCreationFactory
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster._nodeCreationFactory
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _nodeCreationFactory
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 19
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: protected Dictionary<int, Func<bool, MiniClusterNode>> _nodeCreationFactory
    return:
      type: Dictionary{System.Int32,Func{System.Boolean,EventStore.Core.Tests.Helpers.MiniClusterNode}}
    content.vb: Protected _nodeCreationFactory As Dictionary(Of Integer, Func(Of Boolean, MiniClusterNode))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.Integration.specification_with_cluster.TestFixtureSetUp
  id: TestFixtureSetUp
  parent: EventStore.Core.Tests.Integration.specification_with_cluster
  langs:
  - csharp
  - vb
  name: TestFixtureSetUp()
  nameWithType: specification_with_cluster.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.TestFixtureSetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureSetUp
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 44
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: public override void TestFixtureSetUp()
    content.vb: Public Overrides Sub TestFixtureSetUp
  overridden: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  overload: EventStore.Core.Tests.Integration.specification_with_cluster.TestFixtureSetUp*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.BeforeNodesStart
  commentId: M:EventStore.Core.Tests.Integration.specification_with_cluster.BeforeNodesStart
  id: BeforeNodesStart
  parent: EventStore.Core.Tests.Integration.specification_with_cluster
  langs:
  - csharp
  - vb
  name: BeforeNodesStart()
  nameWithType: specification_with_cluster.BeforeNodesStart()
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.BeforeNodesStart()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: BeforeNodesStart
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 95
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: protected virtual void BeforeNodesStart()
    content.vb: Protected Overridable Sub BeforeNodesStart
  overload: EventStore.Core.Tests.Integration.specification_with_cluster.BeforeNodesStart*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.Given
  commentId: M:EventStore.Core.Tests.Integration.specification_with_cluster.Given
  id: Given
  parent: EventStore.Core.Tests.Integration.specification_with_cluster
  langs:
  - csharp
  - vb
  name: Given()
  nameWithType: specification_with_cluster.Given()
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.Given()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Given
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 96
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: protected virtual void Given()
    content.vb: Protected Overridable Sub Given
  overload: EventStore.Core.Tests.Integration.specification_with_cluster.Given*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.ShutdownNode(System.Int32)
  commentId: M:EventStore.Core.Tests.Integration.specification_with_cluster.ShutdownNode(System.Int32)
  id: ShutdownNode(System.Int32)
  parent: EventStore.Core.Tests.Integration.specification_with_cluster
  langs:
  - csharp
  - vb
  name: ShutdownNode(Int32)
  nameWithType: specification_with_cluster.ShutdownNode(Int32)
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.ShutdownNode(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ShutdownNode
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 98
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: protected void ShutdownNode(int nodeNum)
    parameters:
    - id: nodeNum
      type: System.Int32
    content.vb: Protected Sub ShutdownNode(nodeNum As Integer)
  overload: EventStore.Core.Tests.Integration.specification_with_cluster.ShutdownNode*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.StartNode(System.Int32)
  commentId: M:EventStore.Core.Tests.Integration.specification_with_cluster.StartNode(System.Int32)
  id: StartNode(System.Int32)
  parent: EventStore.Core.Tests.Integration.specification_with_cluster
  langs:
  - csharp
  - vb
  name: StartNode(Int32)
  nameWithType: specification_with_cluster.StartNode(Int32)
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.StartNode(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StartNode
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 103
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: protected void StartNode(int nodeNum)
    parameters:
    - id: nodeNum
      type: System.Int32
    content.vb: Protected Sub StartNode(nodeNum As Integer)
  overload: EventStore.Core.Tests.Integration.specification_with_cluster.StartNode*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.Integration.specification_with_cluster.TestFixtureTearDown
  id: TestFixtureTearDown
  parent: EventStore.Core.Tests.Integration.specification_with_cluster
  langs:
  - csharp
  - vb
  name: TestFixtureTearDown()
  nameWithType: specification_with_cluster.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.TestFixtureTearDown()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureTearDown
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 121
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: public override void TestFixtureTearDown()
    content.vb: Public Overrides Sub TestFixtureTearDown
  overridden: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  overload: EventStore.Core.Tests.Integration.specification_with_cluster.TestFixtureTearDown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.WaitIdle
  commentId: M:EventStore.Core.Tests.Integration.specification_with_cluster.WaitIdle
  id: WaitIdle
  parent: EventStore.Core.Tests.Integration.specification_with_cluster
  langs:
  - csharp
  - vb
  name: WaitIdle()
  nameWithType: specification_with_cluster.WaitIdle()
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.WaitIdle()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WaitIdle
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 131
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: protected static void WaitIdle()
    content.vb: Protected Shared Sub WaitIdle
  overload: EventStore.Core.Tests.Integration.specification_with_cluster.WaitIdle*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.GetMaster
  commentId: M:EventStore.Core.Tests.Integration.specification_with_cluster.GetMaster
  id: GetMaster
  parent: EventStore.Core.Tests.Integration.specification_with_cluster
  langs:
  - csharp
  - vb
  name: GetMaster()
  nameWithType: specification_with_cluster.GetMaster()
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.GetMaster()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetMaster
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 136
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: protected MiniClusterNode GetMaster()
    return:
      type: EventStore.Core.Tests.Helpers.MiniClusterNode
    content.vb: Protected Function GetMaster As MiniClusterNode
  overload: EventStore.Core.Tests.Integration.specification_with_cluster.GetMaster*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.GetSlaves
  commentId: M:EventStore.Core.Tests.Integration.specification_with_cluster.GetSlaves
  id: GetSlaves
  parent: EventStore.Core.Tests.Integration.specification_with_cluster
  langs:
  - csharp
  - vb
  name: GetSlaves()
  nameWithType: specification_with_cluster.GetSlaves()
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.GetSlaves()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetSlaves
    path: ../EventStore/src/EventStore.Core.Tests/Integration/specification_with_cluster.cs
    startLine: 141
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: protected MiniClusterNode[] GetSlaves()
    return:
      type: EventStore.Core.Tests.Helpers.MiniClusterNode[]
    content.vb: Protected Function GetSlaves As MiniClusterNode()
  overload: EventStore.Core.Tests.Integration.specification_with_cluster.GetSlaves*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: EventStore.Core.Tests.Integration
  commentId: N:EventStore.Core.Tests.Integration
  isExternal: false
  name: EventStore.Core.Tests.Integration
  nameWithType: EventStore.Core.Tests.Integration
  fullName: EventStore.Core.Tests.Integration
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  commentId: T:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithDirectoryPerTestFixture
  nameWithType: SpecificationWithDirectoryPerTestFixture
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  commentId: F:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: PathName
  nameWithType: SpecificationWithDirectoryPerTestFixture.PathName
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: GetTempFilePath()
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: true
  name: GetFilePathFor(String)
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor(String)
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<specification_with_cluster>()
  nameWithType: ProtobufExtensions.Serialize<specification_with_cluster>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Integration.specification_with_cluster>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of specification_with_cluster)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Integration.specification_with_cluster)()
  name.vb: Serialize(Of specification_with_cluster)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<specification_with_cluster>
    nameWithType: ProtobufExtensions.Serialize<specification_with_cluster>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Integration.specification_with_cluster>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of specification_with_cluster)
    nameWithType: ProtobufExtensions.Serialize(Of specification_with_cluster)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Integration.specification_with_cluster)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<specification_with_cluster>()
  nameWithType: ProtobufExtensions.SerializeToArray<specification_with_cluster>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Integration.specification_with_cluster>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of specification_with_cluster)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Integration.specification_with_cluster)()
  name.vb: SerializeToArray(Of specification_with_cluster)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<specification_with_cluster>
    nameWithType: ProtobufExtensions.SerializeToArray<specification_with_cluster>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Integration.specification_with_cluster>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of specification_with_cluster)
    nameWithType: ProtobufExtensions.SerializeToArray(Of specification_with_cluster)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Integration.specification_with_cluster)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode[]
  name: MiniClusterNode[]
  nameWithType: MiniClusterNode[]
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode[]
  nameWithType.vb: MiniClusterNode()
  fullName.vb: EventStore.Core.Tests.Helpers.MiniClusterNode()
  name.vb: MiniClusterNode()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.MiniClusterNode
    name: MiniClusterNode
    nameWithType: MiniClusterNode
    fullName: EventStore.Core.Tests.Helpers.MiniClusterNode
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.MiniClusterNode
    name: MiniClusterNode
    nameWithType: MiniClusterNode
    fullName: EventStore.Core.Tests.Helpers.MiniClusterNode
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints[]
  name: specification_with_cluster.Endpoints[]
  nameWithType: specification_with_cluster.Endpoints[]
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints[]
  nameWithType.vb: specification_with_cluster.Endpoints()
  fullName.vb: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints()
  name.vb: specification_with_cluster.Endpoints()
  spec.csharp:
  - uid: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints
    name: specification_with_cluster.Endpoints
    nameWithType: specification_with_cluster.Endpoints
    fullName: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints
    name: specification_with_cluster.Endpoints
    nameWithType: specification_with_cluster.Endpoints
    fullName: EventStore.Core.Tests.Integration.specification_with_cluster.Endpoints
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.ClientAPI.IEventStoreConnection
  commentId: T:EventStore.ClientAPI.IEventStoreConnection
  parent: EventStore.ClientAPI
  isExternal: false
  name: IEventStoreConnection
  nameWithType: IEventStoreConnection
  fullName: EventStore.ClientAPI.IEventStoreConnection
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  isExternal: false
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: EventStore.ClientAPI.SystemData.UserCredentials
  commentId: T:EventStore.ClientAPI.SystemData.UserCredentials
  parent: EventStore.ClientAPI.SystemData
  isExternal: false
  name: UserCredentials
  nameWithType: UserCredentials
  fullName: EventStore.ClientAPI.SystemData.UserCredentials
- uid: EventStore.ClientAPI.SystemData
  commentId: N:EventStore.ClientAPI.SystemData
  isExternal: false
  name: EventStore.ClientAPI.SystemData
  nameWithType: EventStore.ClientAPI.SystemData
  fullName: EventStore.ClientAPI.SystemData
- uid: Dictionary{System.Int32,Func{System.Boolean,EventStore.Core.Tests.Helpers.MiniClusterNode}}
  commentId: '!:Dictionary{System.Int32,Func{System.Boolean,EventStore.Core.Tests.Helpers.MiniClusterNode}}'
  definition: Dictionary`2
  name: Dictionary<Int32, Func<Boolean, MiniClusterNode>>
  nameWithType: Dictionary<Int32, Func<Boolean, MiniClusterNode>>
  fullName: Dictionary<System.Int32, Func<System.Boolean, EventStore.Core.Tests.Helpers.MiniClusterNode>>
  nameWithType.vb: Dictionary(Of Int32, Func(Of Boolean, MiniClusterNode))
  fullName.vb: Dictionary(Of System.Int32, Func(Of System.Boolean, EventStore.Core.Tests.Helpers.MiniClusterNode))
  name.vb: Dictionary(Of Int32, Func(Of Boolean, MiniClusterNode))
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Tests.Helpers.MiniClusterNode
    name: MiniClusterNode
    nameWithType: MiniClusterNode
    fullName: EventStore.Core.Tests.Helpers.MiniClusterNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Tests.Helpers.MiniClusterNode
    name: MiniClusterNode
    nameWithType: MiniClusterNode
    fullName: EventStore.Core.Tests.Helpers.MiniClusterNode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureSetUp()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.TestFixtureSetUp*
  commentId: Overload:EventStore.Core.Tests.Integration.specification_with_cluster.TestFixtureSetUp
  isExternal: false
  name: TestFixtureSetUp
  nameWithType: specification_with_cluster.TestFixtureSetUp
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.TestFixtureSetUp
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.BeforeNodesStart*
  commentId: Overload:EventStore.Core.Tests.Integration.specification_with_cluster.BeforeNodesStart
  isExternal: false
  name: BeforeNodesStart
  nameWithType: specification_with_cluster.BeforeNodesStart
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.BeforeNodesStart
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.Given*
  commentId: Overload:EventStore.Core.Tests.Integration.specification_with_cluster.Given
  isExternal: false
  name: Given
  nameWithType: specification_with_cluster.Given
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.Given
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.ShutdownNode*
  commentId: Overload:EventStore.Core.Tests.Integration.specification_with_cluster.ShutdownNode
  isExternal: false
  name: ShutdownNode
  nameWithType: specification_with_cluster.ShutdownNode
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.ShutdownNode
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.StartNode*
  commentId: Overload:EventStore.Core.Tests.Integration.specification_with_cluster.StartNode
  isExternal: false
  name: StartNode
  nameWithType: specification_with_cluster.StartNode
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.StartNode
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureTearDown()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.TestFixtureTearDown*
  commentId: Overload:EventStore.Core.Tests.Integration.specification_with_cluster.TestFixtureTearDown
  isExternal: false
  name: TestFixtureTearDown
  nameWithType: specification_with_cluster.TestFixtureTearDown
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.TestFixtureTearDown
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.WaitIdle*
  commentId: Overload:EventStore.Core.Tests.Integration.specification_with_cluster.WaitIdle
  isExternal: false
  name: WaitIdle
  nameWithType: specification_with_cluster.WaitIdle
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.WaitIdle
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.GetMaster*
  commentId: Overload:EventStore.Core.Tests.Integration.specification_with_cluster.GetMaster
  isExternal: false
  name: GetMaster
  nameWithType: specification_with_cluster.GetMaster
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.GetMaster
- uid: EventStore.Core.Tests.Helpers.MiniClusterNode
  commentId: T:EventStore.Core.Tests.Helpers.MiniClusterNode
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: MiniClusterNode
  nameWithType: MiniClusterNode
  fullName: EventStore.Core.Tests.Helpers.MiniClusterNode
- uid: EventStore.Core.Tests.Integration.specification_with_cluster.GetSlaves*
  commentId: Overload:EventStore.Core.Tests.Integration.specification_with_cluster.GetSlaves
  isExternal: false
  name: GetSlaves
  nameWithType: specification_with_cluster.GetSlaves
  fullName: EventStore.Core.Tests.Integration.specification_with_cluster.GetSlaves

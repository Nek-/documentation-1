### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times
  commentId: T:EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times
  id: when_a_single_node_is_restarted_multiple_times
  parent: EventStore.Core.Tests.Integration
  children:
  - EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.BeforeNodeStarts
  - EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.Given
  - EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.should_be_a_different_epoch_for_every_startup
  langs:
  - csharp
  - vb
  name: when_a_single_node_is_restarted_multiple_times
  nameWithType: when_a_single_node_is_restarted_multiple_times
  fullName: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/when_a_single_node_is_restarted_multiple_times.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: when_a_single_node_is_restarted_multiple_times
    path: ../EventStore/src/EventStore.Core.Tests/Integration/when_a_single_node_is_restarted_multiple_times.cs
    startLine: 9
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: 'public class when_a_single_node_is_restarted_multiple_times : specification_with_a_single_node'
    content.vb: >-
      Public Class when_a_single_node_is_restarted_multiple_times

          Inherits specification_with_a_single_node
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  - EventStore.Core.Tests.Integration.specification_with_a_single_node
  inheritedMembers:
  - EventStore.Core.Tests.Integration.specification_with_a_single_node._node
  - EventStore.Core.Tests.Integration.specification_with_a_single_node.TestFixtureSetUp
  - EventStore.Core.Tests.Integration.specification_with_a_single_node.ShutdownNode
  - EventStore.Core.Tests.Integration.specification_with_a_single_node.StartNode
  - EventStore.Core.Tests.Integration.specification_with_a_single_node.TestFixtureTearDown
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.BeforeNodeStarts
  commentId: M:EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.BeforeNodeStarts
  id: BeforeNodeStarts
  parent: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times
  langs:
  - csharp
  - vb
  name: BeforeNodeStarts()
  nameWithType: when_a_single_node_is_restarted_multiple_times.BeforeNodeStarts()
  fullName: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.BeforeNodeStarts()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/when_a_single_node_is_restarted_multiple_times.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: BeforeNodeStarts
    path: ../EventStore/src/EventStore.Core.Tests/Integration/when_a_single_node_is_restarted_multiple_times.cs
    startLine: 14
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: protected override void BeforeNodeStarts()
    content.vb: Protected Overrides Sub BeforeNodeStarts
  overridden: EventStore.Core.Tests.Integration.specification_with_a_single_node.BeforeNodeStarts
  overload: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.BeforeNodeStarts*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.Given
  commentId: M:EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.Given
  id: Given
  parent: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times
  langs:
  - csharp
  - vb
  name: Given()
  nameWithType: when_a_single_node_is_restarted_multiple_times.Given()
  fullName: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.Given()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/when_a_single_node_is_restarted_multiple_times.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Given
    path: ../EventStore/src/EventStore.Core.Tests/Integration/when_a_single_node_is_restarted_multiple_times.cs
    startLine: 20
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: protected override void Given()
    content.vb: Protected Overrides Sub Given
  overridden: EventStore.Core.Tests.Integration.specification_with_a_single_node.Given
  overload: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.Given*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.should_be_a_different_epoch_for_every_startup
  commentId: M:EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.should_be_a_different_epoch_for_every_startup
  id: should_be_a_different_epoch_for_every_startup
  parent: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times
  langs:
  - csharp
  - vb
  name: should_be_a_different_epoch_for_every_startup()
  nameWithType: when_a_single_node_is_restarted_multiple_times.should_be_a_different_epoch_for_every_startup()
  fullName: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.should_be_a_different_epoch_for_every_startup()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Integration/when_a_single_node_is_restarted_multiple_times.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_be_a_different_epoch_for_every_startup
    path: ../EventStore/src/EventStore.Core.Tests/Integration/when_a_single_node_is_restarted_multiple_times.cs
    startLine: 36
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Integration
  syntax:
    content: public void should_be_a_different_epoch_for_every_startup()
    content.vb: Public Sub should_be_a_different_epoch_for_every_startup
  overload: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.should_be_a_different_epoch_for_every_startup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Integration
  commentId: N:EventStore.Core.Tests.Integration
  isExternal: false
  name: EventStore.Core.Tests.Integration
  nameWithType: EventStore.Core.Tests.Integration
  fullName: EventStore.Core.Tests.Integration
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  commentId: T:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithDirectoryPerTestFixture
  nameWithType: SpecificationWithDirectoryPerTestFixture
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
- uid: EventStore.Core.Tests.Integration.specification_with_a_single_node
  commentId: T:EventStore.Core.Tests.Integration.specification_with_a_single_node
  parent: EventStore.Core.Tests.Integration
  isExternal: false
  name: specification_with_a_single_node
  nameWithType: specification_with_a_single_node
  fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node
- uid: EventStore.Core.Tests.Integration.specification_with_a_single_node._node
  commentId: F:EventStore.Core.Tests.Integration.specification_with_a_single_node._node
  parent: EventStore.Core.Tests.Integration.specification_with_a_single_node
  isExternal: false
  name: _node
  nameWithType: specification_with_a_single_node._node
  fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node._node
- uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.Integration.specification_with_a_single_node.TestFixtureSetUp
  parent: EventStore.Core.Tests.Integration.specification_with_a_single_node
  isExternal: false
  name: TestFixtureSetUp()
  nameWithType: specification_with_a_single_node.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.TestFixtureSetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: specification_with_a_single_node.TestFixtureSetUp
    fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: specification_with_a_single_node.TestFixtureSetUp
    fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.ShutdownNode
  commentId: M:EventStore.Core.Tests.Integration.specification_with_a_single_node.ShutdownNode
  parent: EventStore.Core.Tests.Integration.specification_with_a_single_node
  isExternal: false
  name: ShutdownNode()
  nameWithType: specification_with_a_single_node.ShutdownNode()
  fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.ShutdownNode()
  spec.csharp:
  - uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.ShutdownNode
    name: ShutdownNode
    nameWithType: specification_with_a_single_node.ShutdownNode
    fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.ShutdownNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.ShutdownNode
    name: ShutdownNode
    nameWithType: specification_with_a_single_node.ShutdownNode
    fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.ShutdownNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.StartNode
  commentId: M:EventStore.Core.Tests.Integration.specification_with_a_single_node.StartNode
  parent: EventStore.Core.Tests.Integration.specification_with_a_single_node
  isExternal: false
  name: StartNode()
  nameWithType: specification_with_a_single_node.StartNode()
  fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.StartNode()
  spec.csharp:
  - uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.StartNode
    name: StartNode
    nameWithType: specification_with_a_single_node.StartNode
    fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.StartNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.StartNode
    name: StartNode
    nameWithType: specification_with_a_single_node.StartNode
    fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.StartNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.Integration.specification_with_a_single_node.TestFixtureTearDown
  parent: EventStore.Core.Tests.Integration.specification_with_a_single_node
  isExternal: false
  name: TestFixtureTearDown()
  nameWithType: specification_with_a_single_node.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.TestFixtureTearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: specification_with_a_single_node.TestFixtureTearDown
    fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: specification_with_a_single_node.TestFixtureTearDown
    fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  commentId: F:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: PathName
  nameWithType: SpecificationWithDirectoryPerTestFixture.PathName
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: GetTempFilePath()
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: true
  name: GetFilePathFor(String)
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor(String)
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<when_a_single_node_is_restarted_multiple_times>()
  nameWithType: ProtobufExtensions.Serialize<when_a_single_node_is_restarted_multiple_times>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of when_a_single_node_is_restarted_multiple_times)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times)()
  name.vb: Serialize(Of when_a_single_node_is_restarted_multiple_times)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<when_a_single_node_is_restarted_multiple_times>
    nameWithType: ProtobufExtensions.Serialize<when_a_single_node_is_restarted_multiple_times>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of when_a_single_node_is_restarted_multiple_times)
    nameWithType: ProtobufExtensions.Serialize(Of when_a_single_node_is_restarted_multiple_times)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<when_a_single_node_is_restarted_multiple_times>()
  nameWithType: ProtobufExtensions.SerializeToArray<when_a_single_node_is_restarted_multiple_times>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of when_a_single_node_is_restarted_multiple_times)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times)()
  name.vb: SerializeToArray(Of when_a_single_node_is_restarted_multiple_times)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<when_a_single_node_is_restarted_multiple_times>
    nameWithType: ProtobufExtensions.SerializeToArray<when_a_single_node_is_restarted_multiple_times>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of when_a_single_node_is_restarted_multiple_times)
    nameWithType: ProtobufExtensions.SerializeToArray(Of when_a_single_node_is_restarted_multiple_times)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.BeforeNodeStarts
  commentId: M:EventStore.Core.Tests.Integration.specification_with_a_single_node.BeforeNodeStarts
  parent: EventStore.Core.Tests.Integration.specification_with_a_single_node
  isExternal: false
  name: BeforeNodeStarts()
  nameWithType: specification_with_a_single_node.BeforeNodeStarts()
  fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.BeforeNodeStarts()
  spec.csharp:
  - uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.BeforeNodeStarts
    name: BeforeNodeStarts
    nameWithType: specification_with_a_single_node.BeforeNodeStarts
    fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.BeforeNodeStarts
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.BeforeNodeStarts
    name: BeforeNodeStarts
    nameWithType: specification_with_a_single_node.BeforeNodeStarts
    fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.BeforeNodeStarts
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.BeforeNodeStarts*
  commentId: Overload:EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.BeforeNodeStarts
  isExternal: false
  name: BeforeNodeStarts
  nameWithType: when_a_single_node_is_restarted_multiple_times.BeforeNodeStarts
  fullName: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.BeforeNodeStarts
- uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.Given
  commentId: M:EventStore.Core.Tests.Integration.specification_with_a_single_node.Given
  parent: EventStore.Core.Tests.Integration.specification_with_a_single_node
  isExternal: false
  name: Given()
  nameWithType: specification_with_a_single_node.Given()
  fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.Given()
  spec.csharp:
  - uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.Given
    name: Given
    nameWithType: specification_with_a_single_node.Given
    fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.Given
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Integration.specification_with_a_single_node.Given
    name: Given
    nameWithType: specification_with_a_single_node.Given
    fullName: EventStore.Core.Tests.Integration.specification_with_a_single_node.Given
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.Given*
  commentId: Overload:EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.Given
  isExternal: false
  name: Given
  nameWithType: when_a_single_node_is_restarted_multiple_times.Given
  fullName: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.Given
- uid: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.should_be_a_different_epoch_for_every_startup*
  commentId: Overload:EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.should_be_a_different_epoch_for_every_startup
  isExternal: false
  name: should_be_a_different_epoch_for_every_startup
  nameWithType: when_a_single_node_is_restarted_multiple_times.should_be_a_different_epoch_for_every_startup
  fullName: EventStore.Core.Tests.Integration.when_a_single_node_is_restarted_multiple_times.should_be_a_different_epoch_for_every_startup

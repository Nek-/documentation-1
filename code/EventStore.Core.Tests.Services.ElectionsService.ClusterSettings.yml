### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings
  commentId: T:EventStore.Core.Tests.Services.ElectionsService.ClusterSettings
  id: ClusterSettings
  parent: EventStore.Core.Tests.Services.ElectionsService
  children:
  - EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.#ctor(System.String,IPEndPoint,EventStore.Core.Cluster.Settings.ClusterVNodeSettings,EventStore.Core.Cluster.Settings.ClusterVNodeSettings[],System.Int32)
  - EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.#ctor(System.String,IPEndPoint,EventStore.Core.Cluster.Settings.ClusterVNodeSettings,System.Int32)
  - EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.#ctor(System.String,IPEndPoint,System.Int32)
  - EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterDns
  - EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterManager
  - EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterNodesCount
  - EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.GroupMembers
  - EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.Self
  langs:
  - csharp
  - vb
  name: ClusterSettings
  nameWithType: ClusterSettings
  fullName: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ClusterSettings
    path: ../EventStore/src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
    startLine: 7
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.ElectionsService
  syntax:
    content: 'public sealed class ClusterSettings : object'
    content.vb: >-
      Public NotInheritable Class ClusterSettings

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterDns
  commentId: P:EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterDns
  id: ClusterDns
  parent: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings
  langs:
  - csharp
  - vb
  name: ClusterDns
  nameWithType: ClusterSettings.ClusterDns
  fullName: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterDns
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ClusterDns
    path: ../EventStore/src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
    startLine: 9
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.ElectionsService
  syntax:
    content: public string ClusterDns { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ClusterDns As String
  overload: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterDns*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.Self
  commentId: P:EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.Self
  id: Self
  parent: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings
  langs:
  - csharp
  - vb
  name: Self
  nameWithType: ClusterSettings.Self
  fullName: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.Self
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Self
    path: ../EventStore/src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
    startLine: 11
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.ElectionsService
  syntax:
    content: public ClusterVNodeSettings Self { get; }
    parameters: []
    return:
      type: EventStore.Core.Cluster.Settings.ClusterVNodeSettings
    content.vb: Public ReadOnly Property Self As ClusterVNodeSettings
  overload: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.Self*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.GroupMembers
  commentId: P:EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.GroupMembers
  id: GroupMembers
  parent: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings
  langs:
  - csharp
  - vb
  name: GroupMembers
  nameWithType: ClusterSettings.GroupMembers
  fullName: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.GroupMembers
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GroupMembers
    path: ../EventStore/src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
    startLine: 12
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.ElectionsService
  syntax:
    content: public ClusterVNodeSettings[] GroupMembers { get; }
    parameters: []
    return:
      type: EventStore.Core.Cluster.Settings.ClusterVNodeSettings[]
    content.vb: Public ReadOnly Property GroupMembers As ClusterVNodeSettings()
  overload: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.GroupMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterManager
  commentId: P:EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterManager
  id: ClusterManager
  parent: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings
  langs:
  - csharp
  - vb
  name: ClusterManager
  nameWithType: ClusterSettings.ClusterManager
  fullName: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterManager
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ClusterManager
    path: ../EventStore/src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
    startLine: 14
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.ElectionsService
  syntax:
    content: public IPEndPoint ClusterManager { get; }
    parameters: []
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly Property ClusterManager As IPEndPoint
  overload: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterManager*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterNodesCount
  commentId: P:EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterNodesCount
  id: ClusterNodesCount
  parent: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings
  langs:
  - csharp
  - vb
  name: ClusterNodesCount
  nameWithType: ClusterSettings.ClusterNodesCount
  fullName: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterNodesCount
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ClusterNodesCount
    path: ../EventStore/src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
    startLine: 16
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.ElectionsService
  syntax:
    content: public int ClusterNodesCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ClusterNodesCount As Integer
  overload: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterNodesCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.#ctor(System.String,IPEndPoint,EventStore.Core.Cluster.Settings.ClusterVNodeSettings,EventStore.Core.Cluster.Settings.ClusterVNodeSettings[],System.Int32)
  commentId: M:EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.#ctor(System.String,IPEndPoint,EventStore.Core.Cluster.Settings.ClusterVNodeSettings,EventStore.Core.Cluster.Settings.ClusterVNodeSettings[],System.Int32)
  id: '#ctor(System.String,IPEndPoint,EventStore.Core.Cluster.Settings.ClusterVNodeSettings,EventStore.Core.Cluster.Settings.ClusterVNodeSettings[],System.Int32)'
  parent: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings
  langs:
  - csharp
  - vb
  name: ClusterSettings(String, IPEndPoint, ClusterVNodeSettings, ClusterVNodeSettings[], Int32)
  nameWithType: ClusterSettings.ClusterSettings(String, IPEndPoint, ClusterVNodeSettings, ClusterVNodeSettings[], Int32)
  fullName: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterSettings(System.String, IPEndPoint, EventStore.Core.Cluster.Settings.ClusterVNodeSettings, EventStore.Core.Cluster.Settings.ClusterVNodeSettings[], System.Int32)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
    startLine: 18
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.ElectionsService
  syntax:
    content: public ClusterSettings(string clusterDns, IPEndPoint clusterManager, ClusterVNodeSettings self, ClusterVNodeSettings[] groupMembers, int expectedNodesCount)
    parameters:
    - id: clusterDns
      type: System.String
    - id: clusterManager
      type: IPEndPoint
    - id: self
      type: EventStore.Core.Cluster.Settings.ClusterVNodeSettings
    - id: groupMembers
      type: EventStore.Core.Cluster.Settings.ClusterVNodeSettings[]
    - id: expectedNodesCount
      type: System.Int32
    content.vb: Public Sub New(clusterDns As String, clusterManager As IPEndPoint, self As ClusterVNodeSettings, groupMembers As ClusterVNodeSettings(), expectedNodesCount As Integer)
  overload: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.#ctor*
  nameWithType.vb: ClusterSettings.ClusterSettings(String, IPEndPoint, ClusterVNodeSettings, ClusterVNodeSettings(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterSettings(System.String, IPEndPoint, EventStore.Core.Cluster.Settings.ClusterVNodeSettings, EventStore.Core.Cluster.Settings.ClusterVNodeSettings(), System.Int32)
  name.vb: ClusterSettings(String, IPEndPoint, ClusterVNodeSettings, ClusterVNodeSettings(), Int32)
- uid: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.#ctor(System.String,IPEndPoint,EventStore.Core.Cluster.Settings.ClusterVNodeSettings,System.Int32)
  commentId: M:EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.#ctor(System.String,IPEndPoint,EventStore.Core.Cluster.Settings.ClusterVNodeSettings,System.Int32)
  id: '#ctor(System.String,IPEndPoint,EventStore.Core.Cluster.Settings.ClusterVNodeSettings,System.Int32)'
  parent: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings
  langs:
  - csharp
  - vb
  name: ClusterSettings(String, IPEndPoint, ClusterVNodeSettings, Int32)
  nameWithType: ClusterSettings.ClusterSettings(String, IPEndPoint, ClusterVNodeSettings, Int32)
  fullName: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterSettings(System.String, IPEndPoint, EventStore.Core.Cluster.Settings.ClusterVNodeSettings, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
    startLine: 40
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.ElectionsService
  syntax:
    content: public ClusterSettings(string clusterDns, IPEndPoint clusterManager, ClusterVNodeSettings self, int clusterNodesCount)
    parameters:
    - id: clusterDns
      type: System.String
    - id: clusterManager
      type: IPEndPoint
    - id: self
      type: EventStore.Core.Cluster.Settings.ClusterVNodeSettings
    - id: clusterNodesCount
      type: System.Int32
    content.vb: Public Sub New(clusterDns As String, clusterManager As IPEndPoint, self As ClusterVNodeSettings, clusterNodesCount As Integer)
  overload: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.#ctor(System.String,IPEndPoint,System.Int32)
  commentId: M:EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.#ctor(System.String,IPEndPoint,System.Int32)
  id: '#ctor(System.String,IPEndPoint,System.Int32)'
  parent: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings
  langs:
  - csharp
  - vb
  name: ClusterSettings(String, IPEndPoint, Int32)
  nameWithType: ClusterSettings.ClusterSettings(String, IPEndPoint, Int32)
  fullName: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterSettings(System.String, IPEndPoint, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Services/ElectionsService/ClusterSettings.cs
    startLine: 45
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.ElectionsService
  syntax:
    content: public ClusterSettings(string clusterDns, IPEndPoint clusterManagerEndPoint, int clusterNodesCount)
    parameters:
    - id: clusterDns
      type: System.String
    - id: clusterManagerEndPoint
      type: IPEndPoint
    - id: clusterNodesCount
      type: System.Int32
    content.vb: Public Sub New(clusterDns As String, clusterManagerEndPoint As IPEndPoint, clusterNodesCount As Integer)
  overload: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Services.ElectionsService
  commentId: N:EventStore.Core.Tests.Services.ElectionsService
  isExternal: false
  name: EventStore.Core.Tests.Services.ElectionsService
  nameWithType: EventStore.Core.Tests.Services.ElectionsService
  fullName: EventStore.Core.Tests.Services.ElectionsService
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ClusterSettings>()
  nameWithType: ProtobufExtensions.Serialize<ClusterSettings>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.ElectionsService.ClusterSettings>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ClusterSettings)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.ElectionsService.ClusterSettings)()
  name.vb: Serialize(Of ClusterSettings)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ClusterSettings>
    nameWithType: ProtobufExtensions.Serialize<ClusterSettings>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.ElectionsService.ClusterSettings>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ClusterSettings)
    nameWithType: ProtobufExtensions.Serialize(Of ClusterSettings)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.ElectionsService.ClusterSettings)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ClusterSettings>()
  nameWithType: ProtobufExtensions.SerializeToArray<ClusterSettings>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.ElectionsService.ClusterSettings>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ClusterSettings)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.ElectionsService.ClusterSettings)()
  name.vb: SerializeToArray(Of ClusterSettings)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ClusterSettings>
    nameWithType: ProtobufExtensions.SerializeToArray<ClusterSettings>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.ElectionsService.ClusterSettings>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ClusterSettings)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ClusterSettings)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.ElectionsService.ClusterSettings)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterDns*
  commentId: Overload:EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterDns
  isExternal: false
  name: ClusterDns
  nameWithType: ClusterSettings.ClusterDns
  fullName: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterDns
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.Self*
  commentId: Overload:EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.Self
  isExternal: false
  name: Self
  nameWithType: ClusterSettings.Self
  fullName: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.Self
- uid: EventStore.Core.Cluster.Settings.ClusterVNodeSettings
  commentId: T:EventStore.Core.Cluster.Settings.ClusterVNodeSettings
  parent: EventStore.Core.Cluster.Settings
  isExternal: false
  name: ClusterVNodeSettings
  nameWithType: ClusterVNodeSettings
  fullName: EventStore.Core.Cluster.Settings.ClusterVNodeSettings
- uid: EventStore.Core.Cluster.Settings
  commentId: N:EventStore.Core.Cluster.Settings
  isExternal: false
  name: EventStore.Core.Cluster.Settings
  nameWithType: EventStore.Core.Cluster.Settings
  fullName: EventStore.Core.Cluster.Settings
- uid: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.GroupMembers*
  commentId: Overload:EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.GroupMembers
  isExternal: false
  name: GroupMembers
  nameWithType: ClusterSettings.GroupMembers
  fullName: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.GroupMembers
- uid: EventStore.Core.Cluster.Settings.ClusterVNodeSettings[]
  name: ClusterVNodeSettings[]
  nameWithType: ClusterVNodeSettings[]
  fullName: EventStore.Core.Cluster.Settings.ClusterVNodeSettings[]
  nameWithType.vb: ClusterVNodeSettings()
  fullName.vb: EventStore.Core.Cluster.Settings.ClusterVNodeSettings()
  name.vb: ClusterVNodeSettings()
  spec.csharp:
  - uid: EventStore.Core.Cluster.Settings.ClusterVNodeSettings
    name: ClusterVNodeSettings
    nameWithType: ClusterVNodeSettings
    fullName: EventStore.Core.Cluster.Settings.ClusterVNodeSettings
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Cluster.Settings.ClusterVNodeSettings
    name: ClusterVNodeSettings
    nameWithType: ClusterVNodeSettings
    fullName: EventStore.Core.Cluster.Settings.ClusterVNodeSettings
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterManager*
  commentId: Overload:EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterManager
  isExternal: false
  name: ClusterManager
  nameWithType: ClusterSettings.ClusterManager
  fullName: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterManager
- uid: IPEndPoint
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: IPEndPoint
- uid: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterNodesCount*
  commentId: Overload:EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterNodesCount
  isExternal: false
  name: ClusterNodesCount
  nameWithType: ClusterSettings.ClusterNodesCount
  fullName: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterNodesCount
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.#ctor*
  commentId: Overload:EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.#ctor
  isExternal: false
  name: ClusterSettings
  nameWithType: ClusterSettings.ClusterSettings
  fullName: EventStore.Core.Tests.Services.ElectionsService.ClusterSettings.ClusterSettings

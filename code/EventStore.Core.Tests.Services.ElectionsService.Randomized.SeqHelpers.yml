### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Services.ElectionsService.Randomized.SeqHelpers
  commentId: T:EventStore.Core.Tests.Services.ElectionsService.Randomized.SeqHelpers
  id: SeqHelpers
  parent: EventStore.Core.Tests.Services.ElectionsService.Randomized
  children:
  - EventStore.Core.Tests.Services.ElectionsService.Randomized.SeqHelpers.Shuffle``1(IEnumerable{``0},Func{System.Int32,System.Int32})
  langs:
  - csharp
  - vb
  name: SeqHelpers
  nameWithType: SeqHelpers
  fullName: EventStore.Core.Tests.Services.ElectionsService.Randomized.SeqHelpers
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/ElectionsService/Randomized/SeqHelpers.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SeqHelpers
    path: ../EventStore/src/EventStore.Core.Tests/Services/ElectionsService/Randomized/SeqHelpers.cs
    startLine: 6
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.ElectionsService.Randomized
  syntax:
    content: 'public static class SeqHelpers : object'
    content.vb: >-
      Public Module SeqHelpers

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Core.Tests.Services.ElectionsService.Randomized.SeqHelpers.Shuffle``1(IEnumerable{``0},Func{System.Int32,System.Int32})
  commentId: M:EventStore.Core.Tests.Services.ElectionsService.Randomized.SeqHelpers.Shuffle``1(IEnumerable{``0},Func{System.Int32,System.Int32})
  id: Shuffle``1(IEnumerable{``0},Func{System.Int32,System.Int32})
  isExtensionMethod: true
  parent: EventStore.Core.Tests.Services.ElectionsService.Randomized.SeqHelpers
  langs:
  - csharp
  - vb
  name: Shuffle<T>(IEnumerable<T>, Func<Int32, Int32>)
  nameWithType: SeqHelpers.Shuffle<T>(IEnumerable<T>, Func<Int32, Int32>)
  fullName: EventStore.Core.Tests.Services.ElectionsService.Randomized.SeqHelpers.Shuffle<T>(IEnumerable<T>, Func<System.Int32, System.Int32>)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/ElectionsService/Randomized/SeqHelpers.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Shuffle
    path: ../EventStore/src/EventStore.Core.Tests/Services/ElectionsService/Randomized/SeqHelpers.cs
    startLine: 8
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.ElectionsService.Randomized
  syntax:
    content: public static IEnumerable<T> Shuffle<T>(this IEnumerable<T> source, Func<int, int> rndNext)
    parameters:
    - id: source
      type: IEnumerable{{T}}
    - id: rndNext
      type: Func{System.Int32,System.Int32}
    typeParameters:
    - id: T
    return:
      type: IEnumerable{{T}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Shuffle(Of T)(source As IEnumerable(Of T), rndNext As Func(Of Integer, Integer)) As IEnumerable(Of T)
  overload: EventStore.Core.Tests.Services.ElectionsService.Randomized.SeqHelpers.Shuffle*
  nameWithType.vb: SeqHelpers.Shuffle(Of T)(IEnumerable(Of T), Func(Of Int32, Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Tests.Services.ElectionsService.Randomized.SeqHelpers.Shuffle(Of T)(IEnumerable(Of T), Func(Of System.Int32, System.Int32))
  name.vb: Shuffle(Of T)(IEnumerable(Of T), Func(Of Int32, Int32))
references:
- uid: EventStore.Core.Tests.Services.ElectionsService.Randomized
  commentId: N:EventStore.Core.Tests.Services.ElectionsService.Randomized
  isExternal: false
  name: EventStore.Core.Tests.Services.ElectionsService.Randomized
  nameWithType: EventStore.Core.Tests.Services.ElectionsService.Randomized
  fullName: EventStore.Core.Tests.Services.ElectionsService.Randomized
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.Services.ElectionsService.Randomized.SeqHelpers.Shuffle*
  commentId: Overload:EventStore.Core.Tests.Services.ElectionsService.Randomized.SeqHelpers.Shuffle
  isExternal: false
  name: Shuffle
  nameWithType: SeqHelpers.Shuffle
  fullName: EventStore.Core.Tests.Services.ElectionsService.Randomized.SeqHelpers.Shuffle
- uid: IEnumerable{{T}}
  commentId: '!:IEnumerable{``0}'
  definition: IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Func{System.Int32,System.Int32}
  commentId: '!:Func{System.Int32,System.Int32}'
  definition: Func`2
  name: Func<Int32, Int32>
  nameWithType: Func<Int32, Int32>
  fullName: Func<System.Int32, System.Int32>
  nameWithType.vb: Func(Of Int32, Int32)
  fullName.vb: Func(Of System.Int32, System.Int32)
  name.vb: Func(Of Int32, Int32)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )

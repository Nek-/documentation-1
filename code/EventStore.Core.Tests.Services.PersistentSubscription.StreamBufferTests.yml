### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests
  commentId: T:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests
  id: StreamBufferTests
  parent: EventStore.Core.Tests.Services.PersistentSubscription
  children:
  - EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_live_without_start_from_beginning
  - EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_read_after_later_live_does_not_switch
  - EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_read_after_same_on_live_switches_to_live
  - EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_with_lower_in_live
  - EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_read_message_in_correct_order
  - EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_read_message_in_wrong_order
  - EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_same_read_message
  - EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_read_message_in_correct_order
  - EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.lowest_retry_doesnt_assume_order
  - EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.retried_messages_appear_first
  - EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.retried_messages_appear_in_version_order
  - EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.skipped_messages_are_not_removed
  langs:
  - csharp
  - vb
  name: StreamBufferTests
  nameWithType: StreamBufferTests
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StreamBufferTests
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
    startLine: 8
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: 'public class StreamBufferTests : object'
    content.vb: >-
      Public Class StreamBufferTests

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_read_message_in_correct_order
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_read_message_in_correct_order
  id: adding_read_message_in_correct_order
  parent: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests
  langs:
  - csharp
  - vb
  name: adding_read_message_in_correct_order()
  nameWithType: StreamBufferTests.adding_read_message_in_correct_order()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_read_message_in_correct_order()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: adding_read_message_in_correct_order
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
    startLine: 12
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void adding_read_message_in_correct_order()
    content.vb: Public Sub adding_read_message_in_correct_order
  overload: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_read_message_in_correct_order*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_read_message_in_correct_order
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_read_message_in_correct_order
  id: adding_multiple_read_message_in_correct_order
  parent: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests
  langs:
  - csharp
  - vb
  name: adding_multiple_read_message_in_correct_order()
  nameWithType: StreamBufferTests.adding_multiple_read_message_in_correct_order()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_read_message_in_correct_order()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: adding_multiple_read_message_in_correct_order
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
    startLine: 24
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void adding_multiple_read_message_in_correct_order()
    content.vb: Public Sub adding_multiple_read_message_in_correct_order
  overload: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_read_message_in_correct_order*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_read_message_in_wrong_order
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_read_message_in_wrong_order
  id: adding_multiple_read_message_in_wrong_order
  parent: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests
  langs:
  - csharp
  - vb
  name: adding_multiple_read_message_in_wrong_order()
  nameWithType: StreamBufferTests.adding_multiple_read_message_in_wrong_order()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_read_message_in_wrong_order()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: adding_multiple_read_message_in_wrong_order
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
    startLine: 45
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void adding_multiple_read_message_in_wrong_order()
    content.vb: Public Sub adding_multiple_read_message_in_wrong_order
  overload: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_read_message_in_wrong_order*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_same_read_message
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_same_read_message
  id: adding_multiple_same_read_message
  parent: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests
  langs:
  - csharp
  - vb
  name: adding_multiple_same_read_message()
  nameWithType: StreamBufferTests.adding_multiple_same_read_message()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_same_read_message()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: adding_multiple_same_read_message
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
    startLine: 65
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void adding_multiple_same_read_message()
    content.vb: Public Sub adding_multiple_same_read_message
  overload: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_same_read_message*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_read_after_same_on_live_switches_to_live
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_read_after_same_on_live_switches_to_live
  id: adding_messages_to_read_after_same_on_live_switches_to_live
  parent: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests
  langs:
  - csharp
  - vb
  name: adding_messages_to_read_after_same_on_live_switches_to_live()
  nameWithType: StreamBufferTests.adding_messages_to_read_after_same_on_live_switches_to_live()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_read_after_same_on_live_switches_to_live()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: adding_messages_to_read_after_same_on_live_switches_to_live
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
    startLine: 84
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void adding_messages_to_read_after_same_on_live_switches_to_live()
    content.vb: Public Sub adding_messages_to_read_after_same_on_live_switches_to_live
  overload: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_read_after_same_on_live_switches_to_live*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_read_after_later_live_does_not_switch
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_read_after_later_live_does_not_switch
  id: adding_messages_to_read_after_later_live_does_not_switch
  parent: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests
  langs:
  - csharp
  - vb
  name: adding_messages_to_read_after_later_live_does_not_switch()
  nameWithType: StreamBufferTests.adding_messages_to_read_after_later_live_does_not_switch()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_read_after_later_live_does_not_switch()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: adding_messages_to_read_after_later_live_does_not_switch
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
    startLine: 99
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void adding_messages_to_read_after_later_live_does_not_switch()
    content.vb: Public Sub adding_messages_to_read_after_later_live_does_not_switch
  overload: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_read_after_later_live_does_not_switch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_live_without_start_from_beginning
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_live_without_start_from_beginning
  id: adding_messages_to_live_without_start_from_beginning
  parent: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests
  langs:
  - csharp
  - vb
  name: adding_messages_to_live_without_start_from_beginning()
  nameWithType: StreamBufferTests.adding_messages_to_live_without_start_from_beginning()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_live_without_start_from_beginning()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: adding_messages_to_live_without_start_from_beginning
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
    startLine: 115
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void adding_messages_to_live_without_start_from_beginning()
    content.vb: Public Sub adding_messages_to_live_without_start_from_beginning
  overload: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_live_without_start_from_beginning*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_with_lower_in_live
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_with_lower_in_live
  id: adding_messages_with_lower_in_live
  parent: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests
  langs:
  - csharp
  - vb
  name: adding_messages_with_lower_in_live()
  nameWithType: StreamBufferTests.adding_messages_with_lower_in_live()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_with_lower_in_live()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: adding_messages_with_lower_in_live
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
    startLine: 135
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void adding_messages_with_lower_in_live()
    content.vb: Public Sub adding_messages_with_lower_in_live
  overload: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_with_lower_in_live*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.skipped_messages_are_not_removed
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.skipped_messages_are_not_removed
  id: skipped_messages_are_not_removed
  parent: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests
  langs:
  - csharp
  - vb
  name: skipped_messages_are_not_removed()
  nameWithType: StreamBufferTests.skipped_messages_are_not_removed()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.skipped_messages_are_not_removed()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: skipped_messages_are_not_removed
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
    startLine: 153
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void skipped_messages_are_not_removed()
    content.vb: Public Sub skipped_messages_are_not_removed
  overload: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.skipped_messages_are_not_removed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.retried_messages_appear_first
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.retried_messages_appear_first
  id: retried_messages_appear_first
  parent: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests
  langs:
  - csharp
  - vb
  name: retried_messages_appear_first()
  nameWithType: StreamBufferTests.retried_messages_appear_first()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.retried_messages_appear_first()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: retried_messages_appear_first
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
    startLine: 175
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void retried_messages_appear_first()
    content.vb: Public Sub retried_messages_appear_first
  overload: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.retried_messages_appear_first*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.retried_messages_appear_in_version_order
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.retried_messages_appear_in_version_order
  id: retried_messages_appear_in_version_order
  parent: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests
  langs:
  - csharp
  - vb
  name: retried_messages_appear_in_version_order()
  nameWithType: StreamBufferTests.retried_messages_appear_in_version_order()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.retried_messages_appear_in_version_order()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: retried_messages_appear_in_version_order
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
    startLine: 204
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void retried_messages_appear_in_version_order()
    content.vb: Public Sub retried_messages_appear_in_version_order
  overload: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.retried_messages_appear_in_version_order*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.lowest_retry_doesnt_assume_order
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.lowest_retry_doesnt_assume_order
  id: lowest_retry_doesnt_assume_order
  parent: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests
  langs:
  - csharp
  - vb
  name: lowest_retry_doesnt_assume_order()
  nameWithType: StreamBufferTests.lowest_retry_doesnt_assume_order()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.lowest_retry_doesnt_assume_order()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: lowest_retry_doesnt_assume_order
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/StreamBufferTests.cs
    startLine: 237
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void lowest_retry_doesnt_assume_order()
    content.vb: Public Sub lowest_retry_doesnt_assume_order
  overload: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.lowest_retry_doesnt_assume_order*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Services.PersistentSubscription
  commentId: N:EventStore.Core.Tests.Services.PersistentSubscription
  isExternal: false
  name: EventStore.Core.Tests.Services.PersistentSubscription
  nameWithType: EventStore.Core.Tests.Services.PersistentSubscription
  fullName: EventStore.Core.Tests.Services.PersistentSubscription
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<StreamBufferTests>()
  nameWithType: ProtobufExtensions.Serialize<StreamBufferTests>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of StreamBufferTests)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests)()
  name.vb: Serialize(Of StreamBufferTests)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<StreamBufferTests>
    nameWithType: ProtobufExtensions.Serialize<StreamBufferTests>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of StreamBufferTests)
    nameWithType: ProtobufExtensions.Serialize(Of StreamBufferTests)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<StreamBufferTests>()
  nameWithType: ProtobufExtensions.SerializeToArray<StreamBufferTests>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of StreamBufferTests)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests)()
  name.vb: SerializeToArray(Of StreamBufferTests)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<StreamBufferTests>
    nameWithType: ProtobufExtensions.SerializeToArray<StreamBufferTests>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of StreamBufferTests)
    nameWithType: ProtobufExtensions.SerializeToArray(Of StreamBufferTests)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_read_message_in_correct_order*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_read_message_in_correct_order
  isExternal: false
  name: adding_read_message_in_correct_order
  nameWithType: StreamBufferTests.adding_read_message_in_correct_order
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_read_message_in_correct_order
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_read_message_in_correct_order*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_read_message_in_correct_order
  isExternal: false
  name: adding_multiple_read_message_in_correct_order
  nameWithType: StreamBufferTests.adding_multiple_read_message_in_correct_order
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_read_message_in_correct_order
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_read_message_in_wrong_order*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_read_message_in_wrong_order
  isExternal: false
  name: adding_multiple_read_message_in_wrong_order
  nameWithType: StreamBufferTests.adding_multiple_read_message_in_wrong_order
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_read_message_in_wrong_order
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_same_read_message*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_same_read_message
  isExternal: false
  name: adding_multiple_same_read_message
  nameWithType: StreamBufferTests.adding_multiple_same_read_message
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_multiple_same_read_message
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_read_after_same_on_live_switches_to_live*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_read_after_same_on_live_switches_to_live
  isExternal: false
  name: adding_messages_to_read_after_same_on_live_switches_to_live
  nameWithType: StreamBufferTests.adding_messages_to_read_after_same_on_live_switches_to_live
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_read_after_same_on_live_switches_to_live
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_read_after_later_live_does_not_switch*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_read_after_later_live_does_not_switch
  isExternal: false
  name: adding_messages_to_read_after_later_live_does_not_switch
  nameWithType: StreamBufferTests.adding_messages_to_read_after_later_live_does_not_switch
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_read_after_later_live_does_not_switch
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_live_without_start_from_beginning*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_live_without_start_from_beginning
  isExternal: false
  name: adding_messages_to_live_without_start_from_beginning
  nameWithType: StreamBufferTests.adding_messages_to_live_without_start_from_beginning
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_to_live_without_start_from_beginning
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_with_lower_in_live*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_with_lower_in_live
  isExternal: false
  name: adding_messages_with_lower_in_live
  nameWithType: StreamBufferTests.adding_messages_with_lower_in_live
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.adding_messages_with_lower_in_live
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.skipped_messages_are_not_removed*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.skipped_messages_are_not_removed
  isExternal: false
  name: skipped_messages_are_not_removed
  nameWithType: StreamBufferTests.skipped_messages_are_not_removed
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.skipped_messages_are_not_removed
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.retried_messages_appear_first*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.retried_messages_appear_first
  isExternal: false
  name: retried_messages_appear_first
  nameWithType: StreamBufferTests.retried_messages_appear_first
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.retried_messages_appear_first
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.retried_messages_appear_in_version_order*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.retried_messages_appear_in_version_order
  isExternal: false
  name: retried_messages_appear_in_version_order
  nameWithType: StreamBufferTests.retried_messages_appear_in_version_order
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.retried_messages_appear_in_version_order
- uid: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.lowest_retry_doesnt_assume_order*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.lowest_retry_doesnt_assume_order
  isExternal: false
  name: lowest_retry_doesnt_assume_order
  nameWithType: StreamBufferTests.lowest_retry_doesnt_assume_order
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.StreamBufferTests.lowest_retry_doesnt_assume_order

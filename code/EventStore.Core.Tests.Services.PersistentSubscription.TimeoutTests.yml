### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests
  commentId: T:EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests
  id: TimeoutTests
  parent: EventStore.Core.Tests.Services.PersistentSubscription
  children:
  - EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.disable_timeout_doesnt_timeout
  - EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.message_gets_timed_out_and_parked_after_max_retry_count
  - EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_dont_get_retried_when_acked_on_synchronous_reads
  - EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_get_timed_out_and_resent_to_clients
  - EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_get_timed_out_on_synchronous_reads
  - EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.multiple_messages_get_timed_out_and_parked_after_max_retry_count
  - EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.timeout_park_correctly_tracks_the_available_client_slots
  - EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.with_no_timeouts_to_happen_no_timeouts_happen
  langs:
  - csharp
  - vb
  name: TimeoutTests
  nameWithType: TimeoutTests
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TimeoutTests
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
    startLine: 931
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: 'public class TimeoutTests : object'
    content.vb: >-
      Public Class TimeoutTests

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.with_no_timeouts_to_happen_no_timeouts_happen
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.with_no_timeouts_to_happen_no_timeouts_happen
  id: with_no_timeouts_to_happen_no_timeouts_happen
  parent: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests
  langs:
  - csharp
  - vb
  name: with_no_timeouts_to_happen_no_timeouts_happen()
  nameWithType: TimeoutTests.with_no_timeouts_to_happen_no_timeouts_happen()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.with_no_timeouts_to_happen_no_timeouts_happen()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: with_no_timeouts_to_happen_no_timeouts_happen
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
    startLine: 934
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void with_no_timeouts_to_happen_no_timeouts_happen()
    content.vb: Public Sub with_no_timeouts_to_happen_no_timeouts_happen
  overload: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.with_no_timeouts_to_happen_no_timeouts_happen*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_get_timed_out_and_resent_to_clients
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_get_timed_out_and_resent_to_clients
  id: messages_get_timed_out_and_resent_to_clients
  parent: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests
  langs:
  - csharp
  - vb
  name: messages_get_timed_out_and_resent_to_clients()
  nameWithType: TimeoutTests.messages_get_timed_out_and_resent_to_clients()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_get_timed_out_and_resent_to_clients()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: messages_get_timed_out_and_resent_to_clients
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
    startLine: 964
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void messages_get_timed_out_and_resent_to_clients()
    content.vb: Public Sub messages_get_timed_out_and_resent_to_clients
  overload: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_get_timed_out_and_resent_to_clients*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_get_timed_out_on_synchronous_reads
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_get_timed_out_on_synchronous_reads
  id: messages_get_timed_out_on_synchronous_reads
  parent: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests
  langs:
  - csharp
  - vb
  name: messages_get_timed_out_on_synchronous_reads()
  nameWithType: TimeoutTests.messages_get_timed_out_on_synchronous_reads()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_get_timed_out_on_synchronous_reads()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: messages_get_timed_out_on_synchronous_reads
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
    startLine: 1000
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void messages_get_timed_out_on_synchronous_reads()
    content.vb: Public Sub messages_get_timed_out_on_synchronous_reads
  overload: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_get_timed_out_on_synchronous_reads*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_dont_get_retried_when_acked_on_synchronous_reads
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_dont_get_retried_when_acked_on_synchronous_reads
  id: messages_dont_get_retried_when_acked_on_synchronous_reads
  parent: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests
  langs:
  - csharp
  - vb
  name: messages_dont_get_retried_when_acked_on_synchronous_reads()
  nameWithType: TimeoutTests.messages_dont_get_retried_when_acked_on_synchronous_reads()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_dont_get_retried_when_acked_on_synchronous_reads()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: messages_dont_get_retried_when_acked_on_synchronous_reads
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
    startLine: 1030
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void messages_dont_get_retried_when_acked_on_synchronous_reads()
    content.vb: Public Sub messages_dont_get_retried_when_acked_on_synchronous_reads
  overload: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_dont_get_retried_when_acked_on_synchronous_reads*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.message_gets_timed_out_and_parked_after_max_retry_count
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.message_gets_timed_out_and_parked_after_max_retry_count
  id: message_gets_timed_out_and_parked_after_max_retry_count
  parent: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests
  langs:
  - csharp
  - vb
  name: message_gets_timed_out_and_parked_after_max_retry_count()
  nameWithType: TimeoutTests.message_gets_timed_out_and_parked_after_max_retry_count()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.message_gets_timed_out_and_parked_after_max_retry_count()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: message_gets_timed_out_and_parked_after_max_retry_count
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
    startLine: 1060
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void message_gets_timed_out_and_parked_after_max_retry_count()
    content.vb: Public Sub message_gets_timed_out_and_parked_after_max_retry_count
  overload: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.message_gets_timed_out_and_parked_after_max_retry_count*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.multiple_messages_get_timed_out_and_parked_after_max_retry_count
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.multiple_messages_get_timed_out_and_parked_after_max_retry_count
  id: multiple_messages_get_timed_out_and_parked_after_max_retry_count
  parent: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests
  langs:
  - csharp
  - vb
  name: multiple_messages_get_timed_out_and_parked_after_max_retry_count()
  nameWithType: TimeoutTests.multiple_messages_get_timed_out_and_parked_after_max_retry_count()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.multiple_messages_get_timed_out_and_parked_after_max_retry_count()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: multiple_messages_get_timed_out_and_parked_after_max_retry_count
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
    startLine: 1090
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void multiple_messages_get_timed_out_and_parked_after_max_retry_count()
    content.vb: Public Sub multiple_messages_get_timed_out_and_parked_after_max_retry_count
  overload: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.multiple_messages_get_timed_out_and_parked_after_max_retry_count*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.timeout_park_correctly_tracks_the_available_client_slots
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.timeout_park_correctly_tracks_the_available_client_slots
  id: timeout_park_correctly_tracks_the_available_client_slots
  parent: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests
  langs:
  - csharp
  - vb
  name: timeout_park_correctly_tracks_the_available_client_slots()
  nameWithType: TimeoutTests.timeout_park_correctly_tracks_the_available_client_slots()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.timeout_park_correctly_tracks_the_available_client_slots()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: timeout_park_correctly_tracks_the_available_client_slots
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
    startLine: 1125
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void timeout_park_correctly_tracks_the_available_client_slots()
    content.vb: Public Sub timeout_park_correctly_tracks_the_available_client_slots
  overload: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.timeout_park_correctly_tracks_the_available_client_slots*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.disable_timeout_doesnt_timeout
  commentId: M:EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.disable_timeout_doesnt_timeout
  id: disable_timeout_doesnt_timeout
  parent: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests
  langs:
  - csharp
  - vb
  name: disable_timeout_doesnt_timeout()
  nameWithType: TimeoutTests.disable_timeout_doesnt_timeout()
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.disable_timeout_doesnt_timeout()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: disable_timeout_doesnt_timeout
    path: ../EventStore/src/EventStore.Core.Tests/Services/PersistentSubscription/PersistentSubscriptionTests.cs
    startLine: 1167
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.PersistentSubscription
  syntax:
    content: public void disable_timeout_doesnt_timeout()
    content.vb: Public Sub disable_timeout_doesnt_timeout
  overload: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.disable_timeout_doesnt_timeout*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Services.PersistentSubscription
  commentId: N:EventStore.Core.Tests.Services.PersistentSubscription
  isExternal: false
  name: EventStore.Core.Tests.Services.PersistentSubscription
  nameWithType: EventStore.Core.Tests.Services.PersistentSubscription
  fullName: EventStore.Core.Tests.Services.PersistentSubscription
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TimeoutTests>()
  nameWithType: ProtobufExtensions.Serialize<TimeoutTests>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TimeoutTests)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests)()
  name.vb: Serialize(Of TimeoutTests)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TimeoutTests>
    nameWithType: ProtobufExtensions.Serialize<TimeoutTests>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TimeoutTests)
    nameWithType: ProtobufExtensions.Serialize(Of TimeoutTests)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TimeoutTests>()
  nameWithType: ProtobufExtensions.SerializeToArray<TimeoutTests>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TimeoutTests)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests)()
  name.vb: SerializeToArray(Of TimeoutTests)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TimeoutTests>
    nameWithType: ProtobufExtensions.SerializeToArray<TimeoutTests>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TimeoutTests)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TimeoutTests)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.with_no_timeouts_to_happen_no_timeouts_happen*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.with_no_timeouts_to_happen_no_timeouts_happen
  isExternal: false
  name: with_no_timeouts_to_happen_no_timeouts_happen
  nameWithType: TimeoutTests.with_no_timeouts_to_happen_no_timeouts_happen
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.with_no_timeouts_to_happen_no_timeouts_happen
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_get_timed_out_and_resent_to_clients*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_get_timed_out_and_resent_to_clients
  isExternal: false
  name: messages_get_timed_out_and_resent_to_clients
  nameWithType: TimeoutTests.messages_get_timed_out_and_resent_to_clients
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_get_timed_out_and_resent_to_clients
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_get_timed_out_on_synchronous_reads*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_get_timed_out_on_synchronous_reads
  isExternal: false
  name: messages_get_timed_out_on_synchronous_reads
  nameWithType: TimeoutTests.messages_get_timed_out_on_synchronous_reads
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_get_timed_out_on_synchronous_reads
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_dont_get_retried_when_acked_on_synchronous_reads*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_dont_get_retried_when_acked_on_synchronous_reads
  isExternal: false
  name: messages_dont_get_retried_when_acked_on_synchronous_reads
  nameWithType: TimeoutTests.messages_dont_get_retried_when_acked_on_synchronous_reads
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.messages_dont_get_retried_when_acked_on_synchronous_reads
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.message_gets_timed_out_and_parked_after_max_retry_count*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.message_gets_timed_out_and_parked_after_max_retry_count
  isExternal: false
  name: message_gets_timed_out_and_parked_after_max_retry_count
  nameWithType: TimeoutTests.message_gets_timed_out_and_parked_after_max_retry_count
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.message_gets_timed_out_and_parked_after_max_retry_count
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.multiple_messages_get_timed_out_and_parked_after_max_retry_count*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.multiple_messages_get_timed_out_and_parked_after_max_retry_count
  isExternal: false
  name: multiple_messages_get_timed_out_and_parked_after_max_retry_count
  nameWithType: TimeoutTests.multiple_messages_get_timed_out_and_parked_after_max_retry_count
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.multiple_messages_get_timed_out_and_parked_after_max_retry_count
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.timeout_park_correctly_tracks_the_available_client_slots*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.timeout_park_correctly_tracks_the_available_client_slots
  isExternal: false
  name: timeout_park_correctly_tracks_the_available_client_slots
  nameWithType: TimeoutTests.timeout_park_correctly_tracks_the_available_client_slots
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.timeout_park_correctly_tracks_the_available_client_slots
- uid: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.disable_timeout_doesnt_timeout*
  commentId: Overload:EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.disable_timeout_doesnt_timeout
  isExternal: false
  name: disable_timeout_doesnt_timeout
  nameWithType: TimeoutTests.disable_timeout_doesnt_timeout
  fullName: EventStore.Core.Tests.Services.PersistentSubscription.TimeoutTests.disable_timeout_doesnt_timeout

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service
  commentId: T:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service
  id: when_creating_index_committer_service
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication
  children:
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._commitCount
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._indexCommitter
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._publisher
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._replicationCheckpoint
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._writerCheckpoint
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.commit_count_of_zero_throws_argument_out_of_range_exception
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.negative_commit_count_throws_argument_out_of_range_exception
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_index_committer_throws_argument_null_exception
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_publisher_throws_argument_null_exception
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_replication_checkpoint_throws_argument_null_exception
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_writer_checkpoint_throws_argument_null_exception
  langs:
  - csharp
  - vb
  name: when_creating_index_committer_service
  nameWithType: when_creating_index_committer_service
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: when_creating_index_committer_service
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
    startLine: 15
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: 'public class when_creating_index_committer_service : object'
    content.vb: >-
      Public Class when_creating_index_committer_service

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._commitCount
  commentId: F:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._commitCount
  id: _commitCount
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service
  langs:
  - csharp
  - vb
  name: _commitCount
  nameWithType: when_creating_index_committer_service._commitCount
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._commitCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _commitCount
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
    startLine: 18
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: protected int _commitCount
    return:
      type: System.Int32
    content.vb: Protected _commitCount As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._replicationCheckpoint
  commentId: F:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._replicationCheckpoint
  id: _replicationCheckpoint
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service
  langs:
  - csharp
  - vb
  name: _replicationCheckpoint
  nameWithType: when_creating_index_committer_service._replicationCheckpoint
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._replicationCheckpoint
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _replicationCheckpoint
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
    startLine: 19
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: protected ICheckpoint _replicationCheckpoint
    return:
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    content.vb: Protected _replicationCheckpoint As ICheckpoint
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._writerCheckpoint
  commentId: F:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._writerCheckpoint
  id: _writerCheckpoint
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service
  langs:
  - csharp
  - vb
  name: _writerCheckpoint
  nameWithType: when_creating_index_committer_service._writerCheckpoint
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._writerCheckpoint
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _writerCheckpoint
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
    startLine: 20
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: protected ICheckpoint _writerCheckpoint
    return:
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    content.vb: Protected _writerCheckpoint As ICheckpoint
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._publisher
  commentId: F:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._publisher
  id: _publisher
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service
  langs:
  - csharp
  - vb
  name: _publisher
  nameWithType: when_creating_index_committer_service._publisher
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._publisher
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _publisher
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
    startLine: 21
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: protected InMemoryBus _publisher
    return:
      type: EventStore.Core.Bus.InMemoryBus
    content.vb: Protected _publisher As InMemoryBus
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._indexCommitter
  commentId: F:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._indexCommitter
  id: _indexCommitter
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service
  langs:
  - csharp
  - vb
  name: _indexCommitter
  nameWithType: when_creating_index_committer_service._indexCommitter
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service._indexCommitter
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _indexCommitter
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
    startLine: 22
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: protected FakeIndexCommitter _indexCommitter
    return:
      type: EventStore.Core.Tests.Services.Replication.CommitReplication.FakeIndexCommitter
    content.vb: Protected _indexCommitter As FakeIndexCommitter
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_index_committer_throws_argument_null_exception
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_index_committer_throws_argument_null_exception
  id: null_index_committer_throws_argument_null_exception
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service
  langs:
  - csharp
  - vb
  name: null_index_committer_throws_argument_null_exception()
  nameWithType: when_creating_index_committer_service.null_index_committer_throws_argument_null_exception()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_index_committer_throws_argument_null_exception()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: null_index_committer_throws_argument_null_exception
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
    startLine: 24
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: public void null_index_committer_throws_argument_null_exception()
    content.vb: Public Sub null_index_committer_throws_argument_null_exception
  overload: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_index_committer_throws_argument_null_exception*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_publisher_throws_argument_null_exception
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_publisher_throws_argument_null_exception
  id: null_publisher_throws_argument_null_exception
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service
  langs:
  - csharp
  - vb
  name: null_publisher_throws_argument_null_exception()
  nameWithType: when_creating_index_committer_service.null_publisher_throws_argument_null_exception()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_publisher_throws_argument_null_exception()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: null_publisher_throws_argument_null_exception
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
    startLine: 30
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: public void null_publisher_throws_argument_null_exception()
    content.vb: Public Sub null_publisher_throws_argument_null_exception
  overload: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_publisher_throws_argument_null_exception*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_writer_checkpoint_throws_argument_null_exception
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_writer_checkpoint_throws_argument_null_exception
  id: null_writer_checkpoint_throws_argument_null_exception
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service
  langs:
  - csharp
  - vb
  name: null_writer_checkpoint_throws_argument_null_exception()
  nameWithType: when_creating_index_committer_service.null_writer_checkpoint_throws_argument_null_exception()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_writer_checkpoint_throws_argument_null_exception()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: null_writer_checkpoint_throws_argument_null_exception
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
    startLine: 36
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: public void null_writer_checkpoint_throws_argument_null_exception()
    content.vb: Public Sub null_writer_checkpoint_throws_argument_null_exception
  overload: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_writer_checkpoint_throws_argument_null_exception*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_replication_checkpoint_throws_argument_null_exception
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_replication_checkpoint_throws_argument_null_exception
  id: null_replication_checkpoint_throws_argument_null_exception
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service
  langs:
  - csharp
  - vb
  name: null_replication_checkpoint_throws_argument_null_exception()
  nameWithType: when_creating_index_committer_service.null_replication_checkpoint_throws_argument_null_exception()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_replication_checkpoint_throws_argument_null_exception()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: null_replication_checkpoint_throws_argument_null_exception
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
    startLine: 42
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: public void null_replication_checkpoint_throws_argument_null_exception()
    content.vb: Public Sub null_replication_checkpoint_throws_argument_null_exception
  overload: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_replication_checkpoint_throws_argument_null_exception*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.commit_count_of_zero_throws_argument_out_of_range_exception
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.commit_count_of_zero_throws_argument_out_of_range_exception
  id: commit_count_of_zero_throws_argument_out_of_range_exception
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service
  langs:
  - csharp
  - vb
  name: commit_count_of_zero_throws_argument_out_of_range_exception()
  nameWithType: when_creating_index_committer_service.commit_count_of_zero_throws_argument_out_of_range_exception()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.commit_count_of_zero_throws_argument_out_of_range_exception()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: commit_count_of_zero_throws_argument_out_of_range_exception
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
    startLine: 48
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: public void commit_count_of_zero_throws_argument_out_of_range_exception()
    content.vb: Public Sub commit_count_of_zero_throws_argument_out_of_range_exception
  overload: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.commit_count_of_zero_throws_argument_out_of_range_exception*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.negative_commit_count_throws_argument_out_of_range_exception
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.negative_commit_count_throws_argument_out_of_range_exception
  id: negative_commit_count_throws_argument_out_of_range_exception
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service
  langs:
  - csharp
  - vb
  name: negative_commit_count_throws_argument_out_of_range_exception()
  nameWithType: when_creating_index_committer_service.negative_commit_count_throws_argument_out_of_range_exception()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.negative_commit_count_throws_argument_out_of_range_exception()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: negative_commit_count_throws_argument_out_of_range_exception
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_constructing_index_committer_service.cs
    startLine: 54
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: public void negative_commit_count_throws_argument_out_of_range_exception()
    content.vb: Public Sub negative_commit_count_throws_argument_out_of_range_exception
  overload: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.negative_commit_count_throws_argument_out_of_range_exception*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication
  commentId: N:EventStore.Core.Tests.Services.Replication.CommitReplication
  isExternal: false
  name: EventStore.Core.Tests.Services.Replication.CommitReplication
  nameWithType: EventStore.Core.Tests.Services.Replication.CommitReplication
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<when_creating_index_committer_service>()
  nameWithType: ProtobufExtensions.Serialize<when_creating_index_committer_service>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of when_creating_index_committer_service)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service)()
  name.vb: Serialize(Of when_creating_index_committer_service)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<when_creating_index_committer_service>
    nameWithType: ProtobufExtensions.Serialize<when_creating_index_committer_service>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of when_creating_index_committer_service)
    nameWithType: ProtobufExtensions.Serialize(Of when_creating_index_committer_service)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<when_creating_index_committer_service>()
  nameWithType: ProtobufExtensions.SerializeToArray<when_creating_index_committer_service>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of when_creating_index_committer_service)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service)()
  name.vb: SerializeToArray(Of when_creating_index_committer_service)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<when_creating_index_committer_service>
    nameWithType: ProtobufExtensions.SerializeToArray<when_creating_index_committer_service>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of when_creating_index_committer_service)
    nameWithType: ProtobufExtensions.SerializeToArray(Of when_creating_index_committer_service)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  commentId: T:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  parent: EventStore.Core.TransactionLog.Checkpoint
  isExternal: false
  name: ICheckpoint
  nameWithType: ICheckpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
- uid: EventStore.Core.TransactionLog.Checkpoint
  commentId: N:EventStore.Core.TransactionLog.Checkpoint
  isExternal: false
  name: EventStore.Core.TransactionLog.Checkpoint
  nameWithType: EventStore.Core.TransactionLog.Checkpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint
- uid: EventStore.Core.Bus.InMemoryBus
  commentId: T:EventStore.Core.Bus.InMemoryBus
  parent: EventStore.Core.Bus
  isExternal: false
  name: InMemoryBus
  nameWithType: InMemoryBus
  fullName: EventStore.Core.Bus.InMemoryBus
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.FakeIndexCommitter
  commentId: T:EventStore.Core.Tests.Services.Replication.CommitReplication.FakeIndexCommitter
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication
  isExternal: false
  name: FakeIndexCommitter
  nameWithType: FakeIndexCommitter
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.FakeIndexCommitter
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_index_committer_throws_argument_null_exception*
  commentId: Overload:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_index_committer_throws_argument_null_exception
  isExternal: false
  name: null_index_committer_throws_argument_null_exception
  nameWithType: when_creating_index_committer_service.null_index_committer_throws_argument_null_exception
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_index_committer_throws_argument_null_exception
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_publisher_throws_argument_null_exception*
  commentId: Overload:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_publisher_throws_argument_null_exception
  isExternal: false
  name: null_publisher_throws_argument_null_exception
  nameWithType: when_creating_index_committer_service.null_publisher_throws_argument_null_exception
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_publisher_throws_argument_null_exception
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_writer_checkpoint_throws_argument_null_exception*
  commentId: Overload:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_writer_checkpoint_throws_argument_null_exception
  isExternal: false
  name: null_writer_checkpoint_throws_argument_null_exception
  nameWithType: when_creating_index_committer_service.null_writer_checkpoint_throws_argument_null_exception
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_writer_checkpoint_throws_argument_null_exception
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_replication_checkpoint_throws_argument_null_exception*
  commentId: Overload:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_replication_checkpoint_throws_argument_null_exception
  isExternal: false
  name: null_replication_checkpoint_throws_argument_null_exception
  nameWithType: when_creating_index_committer_service.null_replication_checkpoint_throws_argument_null_exception
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.null_replication_checkpoint_throws_argument_null_exception
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.commit_count_of_zero_throws_argument_out_of_range_exception*
  commentId: Overload:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.commit_count_of_zero_throws_argument_out_of_range_exception
  isExternal: false
  name: commit_count_of_zero_throws_argument_out_of_range_exception
  nameWithType: when_creating_index_committer_service.commit_count_of_zero_throws_argument_out_of_range_exception
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.commit_count_of_zero_throws_argument_out_of_range_exception
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.negative_commit_count_throws_argument_out_of_range_exception*
  commentId: Overload:EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.negative_commit_count_throws_argument_out_of_range_exception
  isExternal: false
  name: negative_commit_count_throws_argument_out_of_range_exception
  nameWithType: when_creating_index_committer_service.negative_commit_count_throws_argument_out_of_range_exception
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_creating_index_committer_service.negative_commit_count_throws_argument_out_of_range_exception

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares
  commentId: T:EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares
  id: when_single_node_cluster_receives_commit_ack_for_multiple_prepares
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication
  children:
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.commit_replicated_message_should_have_been_sent
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_commits
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_prepares
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.replication_checkpoint_should_be_set_to_commit_position
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.TestFixtureSetUp
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.When
  langs:
  - csharp
  - vb
  name: when_single_node_cluster_receives_commit_ack_for_multiple_prepares
  nameWithType: when_single_node_cluster_receives_commit_ack_for_multiple_prepares
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_single_node_cluster_receives_commit_ack_for_multiple_prepares.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: when_single_node_cluster_receives_commit_ack_for_multiple_prepares
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_single_node_cluster_receives_commit_ack_for_multiple_prepares.cs
    startLine: 8
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: 'public class when_single_node_cluster_receives_commit_ack_for_multiple_prepares : with_index_committer_service'
    content.vb: >-
      Public Class when_single_node_cluster_receives_commit_ack_for_multiple_prepares

          Inherits with_index_committer_service
  inheritance:
  - System.Object
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  inheritedMembers:
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._timeoutSeconds
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._eventStreamId
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._commitCount
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._replicationPosition
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._replicationCheckpoint
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._writerCheckpoint
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._publisher
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._handledMessages
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._service
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._indexCommitter
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._expectedCommitReplicatedMessages
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.TestFixtureTearDown
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingPrepare(System.Int64,System.Int64)
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingPrepares(System.Int64,System.Int64[])
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingCommit(System.Int64,System.Int64,System.Int64)
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeMaster
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeUnknown
  - EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeSlave
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.TestFixtureSetUp
  id: TestFixtureSetUp
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares
  langs:
  - csharp
  - vb
  name: TestFixtureSetUp()
  nameWithType: when_single_node_cluster_receives_commit_ack_for_multiple_prepares.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.TestFixtureSetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_single_node_cluster_receives_commit_ack_for_multiple_prepares.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureSetUp
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_single_node_cluster_receives_commit_ack_for_multiple_prepares.cs
    startLine: 19
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: public override void TestFixtureSetUp()
    content.vb: Public Overrides Sub TestFixtureSetUp
  overridden: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.TestFixtureSetUp
  overload: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.TestFixtureSetUp*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.When
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.When
  id: When
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares
  langs:
  - csharp
  - vb
  name: When()
  nameWithType: when_single_node_cluster_receives_commit_ack_for_multiple_prepares.When()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.When()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_single_node_cluster_receives_commit_ack_for_multiple_prepares.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: When
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_single_node_cluster_receives_commit_ack_for_multiple_prepares.cs
    startLine: 25
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: public override void When()
    content.vb: Public Overrides Sub When
  overridden: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.When
  overload: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.When*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.replication_checkpoint_should_be_set_to_commit_position
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.replication_checkpoint_should_be_set_to_commit_position
  id: replication_checkpoint_should_be_set_to_commit_position
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares
  langs:
  - csharp
  - vb
  name: replication_checkpoint_should_be_set_to_commit_position()
  nameWithType: when_single_node_cluster_receives_commit_ack_for_multiple_prepares.replication_checkpoint_should_be_set_to_commit_position()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.replication_checkpoint_should_be_set_to_commit_position()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_single_node_cluster_receives_commit_ack_for_multiple_prepares.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: replication_checkpoint_should_be_set_to_commit_position
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_single_node_cluster_receives_commit_ack_for_multiple_prepares.cs
    startLine: 40
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: public void replication_checkpoint_should_be_set_to_commit_position()
    content.vb: Public Sub replication_checkpoint_should_be_set_to_commit_position
  overload: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.replication_checkpoint_should_be_set_to_commit_position*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.commit_replicated_message_should_have_been_sent
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.commit_replicated_message_should_have_been_sent
  id: commit_replicated_message_should_have_been_sent
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares
  langs:
  - csharp
  - vb
  name: commit_replicated_message_should_have_been_sent()
  nameWithType: when_single_node_cluster_receives_commit_ack_for_multiple_prepares.commit_replicated_message_should_have_been_sent()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.commit_replicated_message_should_have_been_sent()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_single_node_cluster_receives_commit_ack_for_multiple_prepares.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: commit_replicated_message_should_have_been_sent
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_single_node_cluster_receives_commit_ack_for_multiple_prepares.cs
    startLine: 46
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: public void commit_replicated_message_should_have_been_sent()
    content.vb: Public Sub commit_replicated_message_should_have_been_sent
  overload: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.commit_replicated_message_should_have_been_sent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_prepares
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_prepares
  id: index_should_have_been_updated_with_prepares
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares
  langs:
  - csharp
  - vb
  name: index_should_have_been_updated_with_prepares()
  nameWithType: when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_prepares()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_prepares()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_single_node_cluster_receives_commit_ack_for_multiple_prepares.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: index_should_have_been_updated_with_prepares
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_single_node_cluster_receives_commit_ack_for_multiple_prepares.cs
    startLine: 53
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: public void index_should_have_been_updated_with_prepares()
    content.vb: Public Sub index_should_have_been_updated_with_prepares
  overload: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_prepares*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_commits
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_commits
  id: index_should_have_been_updated_with_commits
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares
  langs:
  - csharp
  - vb
  name: index_should_have_been_updated_with_commits()
  nameWithType: when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_commits()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_commits()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_single_node_cluster_receives_commit_ack_for_multiple_prepares.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: index_should_have_been_updated_with_commits
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/CommitReplication/when_single_node_cluster_receives_commit_ack_for_multiple_prepares.cs
    startLine: 62
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.CommitReplication
  syntax:
    content: public void index_should_have_been_updated_with_commits()
    content.vb: Public Sub index_should_have_been_updated_with_commits
  overload: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_commits*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication
  commentId: N:EventStore.Core.Tests.Services.Replication.CommitReplication
  isExternal: false
  name: EventStore.Core.Tests.Services.Replication.CommitReplication
  nameWithType: EventStore.Core.Tests.Services.Replication.CommitReplication
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  commentId: T:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication
  isExternal: false
  name: with_index_committer_service
  nameWithType: with_index_committer_service
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._timeoutSeconds
  commentId: F:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._timeoutSeconds
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: false
  name: _timeoutSeconds
  nameWithType: with_index_committer_service._timeoutSeconds
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._timeoutSeconds
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._eventStreamId
  commentId: F:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._eventStreamId
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: false
  name: _eventStreamId
  nameWithType: with_index_committer_service._eventStreamId
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._eventStreamId
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._commitCount
  commentId: F:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._commitCount
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: false
  name: _commitCount
  nameWithType: with_index_committer_service._commitCount
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._commitCount
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._replicationPosition
  commentId: F:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._replicationPosition
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: false
  name: _replicationPosition
  nameWithType: with_index_committer_service._replicationPosition
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._replicationPosition
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._replicationCheckpoint
  commentId: F:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._replicationCheckpoint
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: false
  name: _replicationCheckpoint
  nameWithType: with_index_committer_service._replicationCheckpoint
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._replicationCheckpoint
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._writerCheckpoint
  commentId: F:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._writerCheckpoint
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: false
  name: _writerCheckpoint
  nameWithType: with_index_committer_service._writerCheckpoint
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._writerCheckpoint
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._publisher
  commentId: F:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._publisher
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: false
  name: _publisher
  nameWithType: with_index_committer_service._publisher
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._publisher
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._handledMessages
  commentId: F:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._handledMessages
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: false
  name: _handledMessages
  nameWithType: with_index_committer_service._handledMessages
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._handledMessages
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._service
  commentId: F:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._service
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: false
  name: _service
  nameWithType: with_index_committer_service._service
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._service
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._indexCommitter
  commentId: F:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._indexCommitter
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: false
  name: _indexCommitter
  nameWithType: with_index_committer_service._indexCommitter
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._indexCommitter
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._expectedCommitReplicatedMessages
  commentId: F:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._expectedCommitReplicatedMessages
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: false
  name: _expectedCommitReplicatedMessages
  nameWithType: with_index_committer_service._expectedCommitReplicatedMessages
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service._expectedCommitReplicatedMessages
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.TestFixtureTearDown
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: false
  name: TestFixtureTearDown()
  nameWithType: with_index_committer_service.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.TestFixtureTearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: with_index_committer_service.TestFixtureTearDown
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: with_index_committer_service.TestFixtureTearDown
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingPrepare(System.Int64,System.Int64)
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingPrepare(System.Int64,System.Int64)
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: true
  name: AddPendingPrepare(Int64, Int64)
  nameWithType: with_index_committer_service.AddPendingPrepare(Int64, Int64)
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingPrepare(System.Int64, System.Int64)
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingPrepare(System.Int64,System.Int64)
    name: AddPendingPrepare
    nameWithType: with_index_committer_service.AddPendingPrepare
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingPrepare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingPrepare(System.Int64,System.Int64)
    name: AddPendingPrepare
    nameWithType: with_index_committer_service.AddPendingPrepare
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingPrepare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingPrepares(System.Int64,System.Int64[])
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingPrepares(System.Int64,System.Int64[])
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: true
  name: AddPendingPrepares(Int64, Int64[])
  nameWithType: with_index_committer_service.AddPendingPrepares(Int64, Int64[])
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingPrepares(System.Int64, System.Int64[])
  nameWithType.vb: with_index_committer_service.AddPendingPrepares(Int64, Int64())
  fullName.vb: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingPrepares(System.Int64, System.Int64())
  name.vb: AddPendingPrepares(Int64, Int64())
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingPrepares(System.Int64,System.Int64[])
    name: AddPendingPrepares
    nameWithType: with_index_committer_service.AddPendingPrepares
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingPrepares
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingPrepares(System.Int64,System.Int64[])
    name: AddPendingPrepares
    nameWithType: with_index_committer_service.AddPendingPrepares
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingPrepares
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingCommit(System.Int64,System.Int64,System.Int64)
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingCommit(System.Int64,System.Int64,System.Int64)
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: true
  name: AddPendingCommit(Int64, Int64, Int64)
  nameWithType: with_index_committer_service.AddPendingCommit(Int64, Int64, Int64)
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingCommit(System.Int64, System.Int64, System.Int64)
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingCommit(System.Int64,System.Int64,System.Int64)
    name: AddPendingCommit
    nameWithType: with_index_committer_service.AddPendingCommit
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingCommit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingCommit(System.Int64,System.Int64,System.Int64)
    name: AddPendingCommit
    nameWithType: with_index_committer_service.AddPendingCommit
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.AddPendingCommit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeMaster
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeMaster
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: false
  name: BecomeMaster()
  nameWithType: with_index_committer_service.BecomeMaster()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeMaster()
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeMaster
    name: BecomeMaster
    nameWithType: with_index_committer_service.BecomeMaster
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeMaster
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeMaster
    name: BecomeMaster
    nameWithType: with_index_committer_service.BecomeMaster
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeMaster
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeUnknown
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeUnknown
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: false
  name: BecomeUnknown()
  nameWithType: with_index_committer_service.BecomeUnknown()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeUnknown()
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeUnknown
    name: BecomeUnknown
    nameWithType: with_index_committer_service.BecomeUnknown
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeUnknown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeUnknown
    name: BecomeUnknown
    nameWithType: with_index_committer_service.BecomeUnknown
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeUnknown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeSlave
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeSlave
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: false
  name: BecomeSlave()
  nameWithType: with_index_committer_service.BecomeSlave()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeSlave()
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeSlave
    name: BecomeSlave
    nameWithType: with_index_committer_service.BecomeSlave
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeSlave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeSlave
    name: BecomeSlave
    nameWithType: with_index_committer_service.BecomeSlave
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.BecomeSlave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<when_single_node_cluster_receives_commit_ack_for_multiple_prepares>()
  nameWithType: ProtobufExtensions.Serialize<when_single_node_cluster_receives_commit_ack_for_multiple_prepares>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of when_single_node_cluster_receives_commit_ack_for_multiple_prepares)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares)()
  name.vb: Serialize(Of when_single_node_cluster_receives_commit_ack_for_multiple_prepares)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<when_single_node_cluster_receives_commit_ack_for_multiple_prepares>
    nameWithType: ProtobufExtensions.Serialize<when_single_node_cluster_receives_commit_ack_for_multiple_prepares>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of when_single_node_cluster_receives_commit_ack_for_multiple_prepares)
    nameWithType: ProtobufExtensions.Serialize(Of when_single_node_cluster_receives_commit_ack_for_multiple_prepares)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<when_single_node_cluster_receives_commit_ack_for_multiple_prepares>()
  nameWithType: ProtobufExtensions.SerializeToArray<when_single_node_cluster_receives_commit_ack_for_multiple_prepares>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of when_single_node_cluster_receives_commit_ack_for_multiple_prepares)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares)()
  name.vb: SerializeToArray(Of when_single_node_cluster_receives_commit_ack_for_multiple_prepares)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<when_single_node_cluster_receives_commit_ack_for_multiple_prepares>
    nameWithType: ProtobufExtensions.SerializeToArray<when_single_node_cluster_receives_commit_ack_for_multiple_prepares>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of when_single_node_cluster_receives_commit_ack_for_multiple_prepares)
    nameWithType: ProtobufExtensions.SerializeToArray(Of when_single_node_cluster_receives_commit_ack_for_multiple_prepares)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.TestFixtureSetUp
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: false
  name: TestFixtureSetUp()
  nameWithType: with_index_committer_service.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.TestFixtureSetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: with_index_committer_service.TestFixtureSetUp
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: with_index_committer_service.TestFixtureSetUp
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.TestFixtureSetUp*
  commentId: Overload:EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.TestFixtureSetUp
  isExternal: false
  name: TestFixtureSetUp
  nameWithType: when_single_node_cluster_receives_commit_ack_for_multiple_prepares.TestFixtureSetUp
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.TestFixtureSetUp
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.When
  commentId: M:EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.When
  parent: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service
  isExternal: false
  name: When()
  nameWithType: with_index_committer_service.When()
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.When()
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.When
    name: When
    nameWithType: with_index_committer_service.When
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.When
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.When
    name: When
    nameWithType: with_index_committer_service.When
    fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.with_index_committer_service.When
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.When*
  commentId: Overload:EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.When
  isExternal: false
  name: When
  nameWithType: when_single_node_cluster_receives_commit_ack_for_multiple_prepares.When
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.When
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.replication_checkpoint_should_be_set_to_commit_position*
  commentId: Overload:EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.replication_checkpoint_should_be_set_to_commit_position
  isExternal: false
  name: replication_checkpoint_should_be_set_to_commit_position
  nameWithType: when_single_node_cluster_receives_commit_ack_for_multiple_prepares.replication_checkpoint_should_be_set_to_commit_position
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.replication_checkpoint_should_be_set_to_commit_position
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.commit_replicated_message_should_have_been_sent*
  commentId: Overload:EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.commit_replicated_message_should_have_been_sent
  isExternal: false
  name: commit_replicated_message_should_have_been_sent
  nameWithType: when_single_node_cluster_receives_commit_ack_for_multiple_prepares.commit_replicated_message_should_have_been_sent
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.commit_replicated_message_should_have_been_sent
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_prepares*
  commentId: Overload:EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_prepares
  isExternal: false
  name: index_should_have_been_updated_with_prepares
  nameWithType: when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_prepares
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_prepares
- uid: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_commits*
  commentId: Overload:EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_commits
  isExternal: false
  name: index_should_have_been_updated_with_commits
  nameWithType: when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_commits
  fullName: EventStore.Core.Tests.Services.Replication.CommitReplication.when_single_node_cluster_receives_commit_ack_for_multiple_prepares.index_should_have_been_updated_with_commits

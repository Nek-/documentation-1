### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares
  commentId: T:EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares
  id: when_transaction_commit_gets_prepare_timeout_before_prepares
  parent: EventStore.Core.Tests.Services.Replication.TransactionCommit
  children:
  - EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.failed_request_message_is_published
  - EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.OnManager(EventStore.Core.Tests.Fakes.FakePublisher)
  - EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.the_envelope_is_replied_to_with_failure
  - EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.When
  - EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.WithInitialMessages
  langs:
  - csharp
  - vb
  name: when_transaction_commit_gets_prepare_timeout_before_prepares
  nameWithType: when_transaction_commit_gets_prepare_timeout_before_prepares
  fullName: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/TransactionCommit/when_transaction_commit_gets_prepare_timeout_before_prepares.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: when_transaction_commit_gets_prepare_timeout_before_prepares
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/TransactionCommit/when_transaction_commit_gets_prepare_timeout_before_prepares.cs
    startLine: 11
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.TransactionCommit
  syntax:
    content: 'public class when_transaction_commit_gets_prepare_timeout_before_prepares : RequestManagerSpecification'
    content.vb: >-
      Public Class when_transaction_commit_gets_prepare_timeout_before_prepares

          Inherits RequestManagerSpecification
  inheritance:
  - System.Object
  - EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  inheritedMembers:
  - EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.PrepareTimeout
  - EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.CommitTimeout
  - EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Manager
  - EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Produced
  - EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Publisher
  - EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.InternalCorrId
  - EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.ClientCorrId
  - EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Metadata
  - EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.EventData
  - EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Envelope
  - EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.DummyEvent
  - EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Setup
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.OnManager(EventStore.Core.Tests.Fakes.FakePublisher)
  commentId: M:EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.OnManager(EventStore.Core.Tests.Fakes.FakePublisher)
  id: OnManager(EventStore.Core.Tests.Fakes.FakePublisher)
  parent: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares
  langs:
  - csharp
  - vb
  name: OnManager(FakePublisher)
  nameWithType: when_transaction_commit_gets_prepare_timeout_before_prepares.OnManager(FakePublisher)
  fullName: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.OnManager(EventStore.Core.Tests.Fakes.FakePublisher)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/TransactionCommit/when_transaction_commit_gets_prepare_timeout_before_prepares.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: OnManager
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/TransactionCommit/when_transaction_commit_gets_prepare_timeout_before_prepares.cs
    startLine: 14
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.TransactionCommit
  syntax:
    content: protected override TwoPhaseRequestManagerBase OnManager(FakePublisher publisher)
    parameters:
    - id: publisher
      type: EventStore.Core.Tests.Fakes.FakePublisher
    return:
      type: EventStore.Core.Services.RequestManager.Managers.TwoPhaseRequestManagerBase
    content.vb: Protected Overrides Function OnManager(publisher As FakePublisher) As TwoPhaseRequestManagerBase
  overridden: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.OnManager(EventStore.Core.Tests.Fakes.FakePublisher)
  overload: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.OnManager*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.WithInitialMessages
  commentId: M:EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.WithInitialMessages
  id: WithInitialMessages
  parent: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares
  langs:
  - csharp
  - vb
  name: WithInitialMessages()
  nameWithType: when_transaction_commit_gets_prepare_timeout_before_prepares.WithInitialMessages()
  fullName: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.WithInitialMessages()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/TransactionCommit/when_transaction_commit_gets_prepare_timeout_before_prepares.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithInitialMessages
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/TransactionCommit/when_transaction_commit_gets_prepare_timeout_before_prepares.cs
    startLine: 19
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.TransactionCommit
  syntax:
    content: protected override IEnumerable<Message> WithInitialMessages()
    return:
      type: IEnumerable{EventStore.Core.Messaging.Message}
    content.vb: Protected Overrides Function WithInitialMessages As IEnumerable(Of Message)
  overridden: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.WithInitialMessages
  overload: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.WithInitialMessages*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.When
  commentId: M:EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.When
  id: When
  parent: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares
  langs:
  - csharp
  - vb
  name: When()
  nameWithType: when_transaction_commit_gets_prepare_timeout_before_prepares.When()
  fullName: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.When()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/TransactionCommit/when_transaction_commit_gets_prepare_timeout_before_prepares.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: When
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/TransactionCommit/when_transaction_commit_gets_prepare_timeout_before_prepares.cs
    startLine: 24
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.TransactionCommit
  syntax:
    content: protected override Message When()
    return:
      type: EventStore.Core.Messaging.Message
    content.vb: Protected Overrides Function When As Message
  overridden: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.When
  overload: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.When*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.failed_request_message_is_published
  commentId: M:EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.failed_request_message_is_published
  id: failed_request_message_is_published
  parent: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares
  langs:
  - csharp
  - vb
  name: failed_request_message_is_published()
  nameWithType: when_transaction_commit_gets_prepare_timeout_before_prepares.failed_request_message_is_published()
  fullName: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.failed_request_message_is_published()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/TransactionCommit/when_transaction_commit_gets_prepare_timeout_before_prepares.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: failed_request_message_is_published
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/TransactionCommit/when_transaction_commit_gets_prepare_timeout_before_prepares.cs
    startLine: 29
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.TransactionCommit
  syntax:
    content: public void failed_request_message_is_published()
    content.vb: Public Sub failed_request_message_is_published
  overload: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.failed_request_message_is_published*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.the_envelope_is_replied_to_with_failure
  commentId: M:EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.the_envelope_is_replied_to_with_failure
  id: the_envelope_is_replied_to_with_failure
  parent: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares
  langs:
  - csharp
  - vb
  name: the_envelope_is_replied_to_with_failure()
  nameWithType: when_transaction_commit_gets_prepare_timeout_before_prepares.the_envelope_is_replied_to_with_failure()
  fullName: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.the_envelope_is_replied_to_with_failure()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Replication/TransactionCommit/when_transaction_commit_gets_prepare_timeout_before_prepares.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: the_envelope_is_replied_to_with_failure
    path: ../EventStore/src/EventStore.Core.Tests/Services/Replication/TransactionCommit/when_transaction_commit_gets_prepare_timeout_before_prepares.cs
    startLine: 36
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Replication.TransactionCommit
  syntax:
    content: public void the_envelope_is_replied_to_with_failure()
    content.vb: Public Sub the_envelope_is_replied_to_with_failure
  overload: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.the_envelope_is_replied_to_with_failure*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Services.Replication.TransactionCommit
  commentId: N:EventStore.Core.Tests.Services.Replication.TransactionCommit
  isExternal: false
  name: EventStore.Core.Tests.Services.Replication.TransactionCommit
  nameWithType: EventStore.Core.Tests.Services.Replication.TransactionCommit
  fullName: EventStore.Core.Tests.Services.Replication.TransactionCommit
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  commentId: T:EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  parent: EventStore.Core.Tests.Services.Replication
  isExternal: false
  name: RequestManagerSpecification
  nameWithType: RequestManagerSpecification
  fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
- uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.PrepareTimeout
  commentId: F:EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.PrepareTimeout
  parent: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  isExternal: false
  name: PrepareTimeout
  nameWithType: RequestManagerSpecification.PrepareTimeout
  fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.PrepareTimeout
- uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.CommitTimeout
  commentId: F:EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.CommitTimeout
  parent: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  isExternal: false
  name: CommitTimeout
  nameWithType: RequestManagerSpecification.CommitTimeout
  fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.CommitTimeout
- uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Manager
  commentId: F:EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Manager
  parent: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  isExternal: false
  name: Manager
  nameWithType: RequestManagerSpecification.Manager
  fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Manager
- uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Produced
  commentId: F:EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Produced
  parent: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  isExternal: false
  name: Produced
  nameWithType: RequestManagerSpecification.Produced
  fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Produced
- uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Publisher
  commentId: F:EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Publisher
  parent: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  isExternal: false
  name: Publisher
  nameWithType: RequestManagerSpecification.Publisher
  fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Publisher
- uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.InternalCorrId
  commentId: F:EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.InternalCorrId
  parent: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  isExternal: false
  name: InternalCorrId
  nameWithType: RequestManagerSpecification.InternalCorrId
  fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.InternalCorrId
- uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.ClientCorrId
  commentId: F:EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.ClientCorrId
  parent: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  isExternal: false
  name: ClientCorrId
  nameWithType: RequestManagerSpecification.ClientCorrId
  fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.ClientCorrId
- uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Metadata
  commentId: F:EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Metadata
  parent: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  isExternal: false
  name: Metadata
  nameWithType: RequestManagerSpecification.Metadata
  fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Metadata
- uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.EventData
  commentId: F:EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.EventData
  parent: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  isExternal: false
  name: EventData
  nameWithType: RequestManagerSpecification.EventData
  fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.EventData
- uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Envelope
  commentId: F:EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Envelope
  parent: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  isExternal: false
  name: Envelope
  nameWithType: RequestManagerSpecification.Envelope
  fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Envelope
- uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.DummyEvent
  commentId: M:EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.DummyEvent
  parent: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  isExternal: false
  name: DummyEvent()
  nameWithType: RequestManagerSpecification.DummyEvent()
  fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.DummyEvent()
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.DummyEvent
    name: DummyEvent
    nameWithType: RequestManagerSpecification.DummyEvent
    fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.DummyEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.DummyEvent
    name: DummyEvent
    nameWithType: RequestManagerSpecification.DummyEvent
    fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.DummyEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Setup
  commentId: M:EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Setup
  parent: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  isExternal: false
  name: Setup()
  nameWithType: RequestManagerSpecification.Setup()
  fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Setup()
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Setup
    name: Setup
    nameWithType: RequestManagerSpecification.Setup
    fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Setup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Setup
    name: Setup
    nameWithType: RequestManagerSpecification.Setup
    fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.Setup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<when_transaction_commit_gets_prepare_timeout_before_prepares>()
  nameWithType: ProtobufExtensions.Serialize<when_transaction_commit_gets_prepare_timeout_before_prepares>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of when_transaction_commit_gets_prepare_timeout_before_prepares)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares)()
  name.vb: Serialize(Of when_transaction_commit_gets_prepare_timeout_before_prepares)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<when_transaction_commit_gets_prepare_timeout_before_prepares>
    nameWithType: ProtobufExtensions.Serialize<when_transaction_commit_gets_prepare_timeout_before_prepares>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of when_transaction_commit_gets_prepare_timeout_before_prepares)
    nameWithType: ProtobufExtensions.Serialize(Of when_transaction_commit_gets_prepare_timeout_before_prepares)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<when_transaction_commit_gets_prepare_timeout_before_prepares>()
  nameWithType: ProtobufExtensions.SerializeToArray<when_transaction_commit_gets_prepare_timeout_before_prepares>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of when_transaction_commit_gets_prepare_timeout_before_prepares)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares)()
  name.vb: SerializeToArray(Of when_transaction_commit_gets_prepare_timeout_before_prepares)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<when_transaction_commit_gets_prepare_timeout_before_prepares>
    nameWithType: ProtobufExtensions.SerializeToArray<when_transaction_commit_gets_prepare_timeout_before_prepares>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of when_transaction_commit_gets_prepare_timeout_before_prepares)
    nameWithType: ProtobufExtensions.SerializeToArray(Of when_transaction_commit_gets_prepare_timeout_before_prepares)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication
  commentId: N:EventStore.Core.Tests.Services.Replication
  isExternal: false
  name: EventStore.Core.Tests.Services.Replication
  nameWithType: EventStore.Core.Tests.Services.Replication
  fullName: EventStore.Core.Tests.Services.Replication
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.OnManager(EventStore.Core.Tests.Fakes.FakePublisher)
  commentId: M:EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.OnManager(EventStore.Core.Tests.Fakes.FakePublisher)
  parent: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  isExternal: false
  name: OnManager(FakePublisher)
  nameWithType: RequestManagerSpecification.OnManager(FakePublisher)
  fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.OnManager(EventStore.Core.Tests.Fakes.FakePublisher)
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.OnManager(EventStore.Core.Tests.Fakes.FakePublisher)
    name: OnManager
    nameWithType: RequestManagerSpecification.OnManager
    fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.OnManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.Fakes.FakePublisher
    name: FakePublisher
    nameWithType: FakePublisher
    fullName: EventStore.Core.Tests.Fakes.FakePublisher
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.OnManager(EventStore.Core.Tests.Fakes.FakePublisher)
    name: OnManager
    nameWithType: RequestManagerSpecification.OnManager
    fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.OnManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.Fakes.FakePublisher
    name: FakePublisher
    nameWithType: FakePublisher
    fullName: EventStore.Core.Tests.Fakes.FakePublisher
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.OnManager*
  commentId: Overload:EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.OnManager
  isExternal: false
  name: OnManager
  nameWithType: when_transaction_commit_gets_prepare_timeout_before_prepares.OnManager
  fullName: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.OnManager
- uid: EventStore.Core.Tests.Fakes.FakePublisher
  commentId: T:EventStore.Core.Tests.Fakes.FakePublisher
  parent: EventStore.Core.Tests.Fakes
  isExternal: false
  name: FakePublisher
  nameWithType: FakePublisher
  fullName: EventStore.Core.Tests.Fakes.FakePublisher
- uid: EventStore.Core.Services.RequestManager.Managers.TwoPhaseRequestManagerBase
  commentId: T:EventStore.Core.Services.RequestManager.Managers.TwoPhaseRequestManagerBase
  parent: EventStore.Core.Services.RequestManager.Managers
  isExternal: false
  name: TwoPhaseRequestManagerBase
  nameWithType: TwoPhaseRequestManagerBase
  fullName: EventStore.Core.Services.RequestManager.Managers.TwoPhaseRequestManagerBase
- uid: EventStore.Core.Tests.Fakes
  commentId: N:EventStore.Core.Tests.Fakes
  isExternal: false
  name: EventStore.Core.Tests.Fakes
  nameWithType: EventStore.Core.Tests.Fakes
  fullName: EventStore.Core.Tests.Fakes
- uid: EventStore.Core.Services.RequestManager.Managers
  commentId: N:EventStore.Core.Services.RequestManager.Managers
  isExternal: false
  name: EventStore.Core.Services.RequestManager.Managers
  nameWithType: EventStore.Core.Services.RequestManager.Managers
  fullName: EventStore.Core.Services.RequestManager.Managers
- uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.WithInitialMessages
  commentId: M:EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.WithInitialMessages
  parent: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  isExternal: false
  name: WithInitialMessages()
  nameWithType: RequestManagerSpecification.WithInitialMessages()
  fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.WithInitialMessages()
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.WithInitialMessages
    name: WithInitialMessages
    nameWithType: RequestManagerSpecification.WithInitialMessages
    fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.WithInitialMessages
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.WithInitialMessages
    name: WithInitialMessages
    nameWithType: RequestManagerSpecification.WithInitialMessages
    fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.WithInitialMessages
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.WithInitialMessages*
  commentId: Overload:EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.WithInitialMessages
  isExternal: false
  name: WithInitialMessages
  nameWithType: when_transaction_commit_gets_prepare_timeout_before_prepares.WithInitialMessages
  fullName: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.WithInitialMessages
- uid: IEnumerable{EventStore.Core.Messaging.Message}
  commentId: '!:IEnumerable{EventStore.Core.Messaging.Message}'
  definition: IEnumerable`1
  name: IEnumerable<Message>
  nameWithType: IEnumerable<Message>
  fullName: IEnumerable<EventStore.Core.Messaging.Message>
  nameWithType.vb: IEnumerable(Of Message)
  fullName.vb: IEnumerable(Of EventStore.Core.Messaging.Message)
  name.vb: IEnumerable(Of Message)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.When
  commentId: M:EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.When
  parent: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification
  isExternal: false
  name: When()
  nameWithType: RequestManagerSpecification.When()
  fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.When()
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.When
    name: When
    nameWithType: RequestManagerSpecification.When
    fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.When
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.When
    name: When
    nameWithType: RequestManagerSpecification.When
    fullName: EventStore.Core.Tests.Services.Replication.RequestManagerSpecification.When
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.When*
  commentId: Overload:EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.When
  isExternal: false
  name: When
  nameWithType: when_transaction_commit_gets_prepare_timeout_before_prepares.When
  fullName: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.When
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.failed_request_message_is_published*
  commentId: Overload:EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.failed_request_message_is_published
  isExternal: false
  name: failed_request_message_is_published
  nameWithType: when_transaction_commit_gets_prepare_timeout_before_prepares.failed_request_message_is_published
  fullName: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.failed_request_message_is_published
- uid: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.the_envelope_is_replied_to_with_failure*
  commentId: Overload:EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.the_envelope_is_replied_to_with_failure
  isExternal: false
  name: the_envelope_is_replied_to_with_failure
  nameWithType: when_transaction_commit_gets_prepare_timeout_before_prepares.the_envelope_is_replied_to_with_failure
  fullName: EventStore.Core.Tests.Services.Replication.TransactionCommit.when_transaction_commit_gets_prepare_timeout_before_prepares.the_envelope_is_replied_to_with_failure

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present
  commentId: T:EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present
  id: when_a_single_write_before_the_transaction_is_present
  parent: EventStore.Core.Tests.Services.Storage.AllReader
  children:
  - EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present.should_be_able_to_read_the_transactional_writes_when_the_commit_is_present
  langs:
  - csharp
  - vb
  name: when_a_single_write_before_the_transaction_is_present
  nameWithType: when_a_single_write_before_the_transaction_is_present
  fullName: EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/AllReader/when_a_single_write_before_the_transaction_is_present.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: when_a_single_write_before_the_transaction_is_present
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/AllReader/when_a_single_write_before_the_transaction_is_present.cs
    startLine: 6
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.AllReader
  syntax:
    content: 'public class when_a_single_write_before_the_transaction_is_present : RepeatableDbTestScenario'
    content.vb: >-
      Public Class when_a_single_write_before_the_transaction_is_present

          Inherits RepeatableDbTestScenario
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  - EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario
  inheritedMembers:
  - EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.MaxEntriesInMemTable
  - EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TableIndex
  - EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.ReadIndex
  - EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.DbRes
  - EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.DbCreationHelper
  - EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TestFixtureSetUp
  - EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec[])
  - EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TestFixtureTearDown
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present.should_be_able_to_read_the_transactional_writes_when_the_commit_is_present
  commentId: M:EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present.should_be_able_to_read_the_transactional_writes_when_the_commit_is_present
  id: should_be_able_to_read_the_transactional_writes_when_the_commit_is_present
  parent: EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present
  langs:
  - csharp
  - vb
  name: should_be_able_to_read_the_transactional_writes_when_the_commit_is_present()
  nameWithType: when_a_single_write_before_the_transaction_is_present.should_be_able_to_read_the_transactional_writes_when_the_commit_is_present()
  fullName: EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present.should_be_able_to_read_the_transactional_writes_when_the_commit_is_present()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/AllReader/when_a_single_write_before_the_transaction_is_present.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: should_be_able_to_read_the_transactional_writes_when_the_commit_is_present
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/AllReader/when_a_single_write_before_the_transaction_is_present.cs
    startLine: 9
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.AllReader
  syntax:
    content: public void should_be_able_to_read_the_transactional_writes_when_the_commit_is_present()
    content.vb: Public Sub should_be_able_to_read_the_transactional_writes_when_the_commit_is_present
  overload: EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present.should_be_able_to_read_the_transactional_writes_when_the_commit_is_present*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Services.Storage.AllReader
  commentId: N:EventStore.Core.Tests.Services.Storage.AllReader
  isExternal: false
  name: EventStore.Core.Tests.Services.Storage.AllReader
  nameWithType: EventStore.Core.Tests.Services.Storage.AllReader
  fullName: EventStore.Core.Tests.Services.Storage.AllReader
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  commentId: T:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithDirectoryPerTestFixture
  nameWithType: SpecificationWithDirectoryPerTestFixture
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
- uid: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario
  commentId: T:EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario
  parent: EventStore.Core.Tests.Services.Storage
  isExternal: false
  name: RepeatableDbTestScenario
  nameWithType: RepeatableDbTestScenario
  fullName: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario
- uid: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.MaxEntriesInMemTable
  commentId: F:EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.MaxEntriesInMemTable
  parent: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario
  isExternal: false
  name: MaxEntriesInMemTable
  nameWithType: RepeatableDbTestScenario.MaxEntriesInMemTable
  fullName: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.MaxEntriesInMemTable
- uid: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TableIndex
  commentId: F:EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TableIndex
  parent: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario
  isExternal: false
  name: TableIndex
  nameWithType: RepeatableDbTestScenario.TableIndex
  fullName: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TableIndex
- uid: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.ReadIndex
  commentId: F:EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.ReadIndex
  parent: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario
  isExternal: false
  name: ReadIndex
  nameWithType: RepeatableDbTestScenario.ReadIndex
  fullName: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.ReadIndex
- uid: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.DbRes
  commentId: F:EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.DbRes
  parent: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario
  isExternal: false
  name: DbRes
  nameWithType: RepeatableDbTestScenario.DbRes
  fullName: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.DbRes
- uid: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.DbCreationHelper
  commentId: F:EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.DbCreationHelper
  parent: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario
  isExternal: false
  name: DbCreationHelper
  nameWithType: RepeatableDbTestScenario.DbCreationHelper
  fullName: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.DbCreationHelper
- uid: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TestFixtureSetUp
  parent: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario
  isExternal: false
  name: TestFixtureSetUp()
  nameWithType: RepeatableDbTestScenario.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TestFixtureSetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: RepeatableDbTestScenario.TestFixtureSetUp
    fullName: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: RepeatableDbTestScenario.TestFixtureSetUp
    fullName: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec[])
  commentId: M:EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec[])
  parent: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario
  isExternal: false
  name: CreateDb(Rec[])
  nameWithType: RepeatableDbTestScenario.CreateDb(Rec[])
  fullName: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec[])
  nameWithType.vb: RepeatableDbTestScenario.CreateDb(Rec())
  fullName.vb: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec())
  name.vb: CreateDb(Rec())
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec[])
    name: CreateDb
    nameWithType: RepeatableDbTestScenario.CreateDb
    fullName: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.CreateDb
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
    name: Rec
    nameWithType: Rec
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec[])
    name: CreateDb
    nameWithType: RepeatableDbTestScenario.CreateDb
    fullName: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.CreateDb
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
    name: Rec
    nameWithType: Rec
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TestFixtureTearDown
  parent: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario
  isExternal: false
  name: TestFixtureTearDown()
  nameWithType: RepeatableDbTestScenario.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TestFixtureTearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: RepeatableDbTestScenario.TestFixtureTearDown
    fullName: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: RepeatableDbTestScenario.TestFixtureTearDown
    fullName: EventStore.Core.Tests.Services.Storage.RepeatableDbTestScenario.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  commentId: F:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: PathName
  nameWithType: SpecificationWithDirectoryPerTestFixture.PathName
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: GetTempFilePath()
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: true
  name: GetFilePathFor(String)
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor(String)
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<when_a_single_write_before_the_transaction_is_present>()
  nameWithType: ProtobufExtensions.Serialize<when_a_single_write_before_the_transaction_is_present>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of when_a_single_write_before_the_transaction_is_present)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present)()
  name.vb: Serialize(Of when_a_single_write_before_the_transaction_is_present)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<when_a_single_write_before_the_transaction_is_present>
    nameWithType: ProtobufExtensions.Serialize<when_a_single_write_before_the_transaction_is_present>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of when_a_single_write_before_the_transaction_is_present)
    nameWithType: ProtobufExtensions.Serialize(Of when_a_single_write_before_the_transaction_is_present)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<when_a_single_write_before_the_transaction_is_present>()
  nameWithType: ProtobufExtensions.SerializeToArray<when_a_single_write_before_the_transaction_is_present>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of when_a_single_write_before_the_transaction_is_present)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present)()
  name.vb: SerializeToArray(Of when_a_single_write_before_the_transaction_is_present)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<when_a_single_write_before_the_transaction_is_present>
    nameWithType: ProtobufExtensions.SerializeToArray<when_a_single_write_before_the_transaction_is_present>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of when_a_single_write_before_the_transaction_is_present)
    nameWithType: ProtobufExtensions.SerializeToArray(Of when_a_single_write_before_the_transaction_is_present)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Core.Tests.Services.Storage
  commentId: N:EventStore.Core.Tests.Services.Storage
  isExternal: false
  name: EventStore.Core.Tests.Services.Storage
  nameWithType: EventStore.Core.Tests.Services.Storage
  fullName: EventStore.Core.Tests.Services.Storage
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present.should_be_able_to_read_the_transactional_writes_when_the_commit_is_present*
  commentId: Overload:EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present.should_be_able_to_read_the_transactional_writes_when_the_commit_is_present
  isExternal: false
  name: should_be_able_to_read_the_transactional_writes_when_the_commit_is_present
  nameWithType: when_a_single_write_before_the_transaction_is_present.should_be_able_to_read_the_transactional_writes_when_the_commit_is_present
  fullName: EventStore.Core.Tests.Services.Storage.AllReader.when_a_single_write_before_the_transaction_is_present.should_be_able_to_read_the_transactional_writes_when_the_commit_is_present

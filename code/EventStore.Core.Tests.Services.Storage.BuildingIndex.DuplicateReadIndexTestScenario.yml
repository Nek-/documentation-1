### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario
  commentId: T:EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario
  id: DuplicateReadIndexTestScenario
  parent: EventStore.Core.Tests.Services.Storage.BuildingIndex
  children:
  - EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.#ctor(System.Int32,System.Int32,System.Byte,System.Boolean)
  - EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.Given
  - EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.IndexBitnessVersion
  - EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.MaxEntriesInMemTable
  - EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.MetastreamMaxCount
  - EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.PerformAdditionalCommitChecks
  - EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.ReadIndex
  - EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.SetupDB
  - EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.TestFixtureSetUp
  - EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.TestFixtureTearDown
  - EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.Writer
  langs:
  - csharp
  - vb
  name: DuplicateReadIndexTestScenario
  nameWithType: DuplicateReadIndexTestScenario
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DuplicateReadIndexTestScenario
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
    startLine: 76
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.BuildingIndex
  syntax:
    content: 'public abstract class DuplicateReadIndexTestScenario : SpecificationWithDirectoryPerTestFixture'
    content.vb: >-
      Public MustInherit Class DuplicateReadIndexTestScenario

          Inherits SpecificationWithDirectoryPerTestFixture
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  derivedClasses:
  - EventStore.Core.Tests.Services.Storage.BuildingIndex.when_building_an_index_off_tfile_with_duplicate_events_in_a_stream
  inheritedMembers:
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.MaxEntriesInMemTable
  commentId: F:EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.MaxEntriesInMemTable
  id: MaxEntriesInMemTable
  parent: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario
  langs:
  - csharp
  - vb
  name: MaxEntriesInMemTable
  nameWithType: DuplicateReadIndexTestScenario.MaxEntriesInMemTable
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.MaxEntriesInMemTable
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MaxEntriesInMemTable
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
    startLine: 78
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.BuildingIndex
  syntax:
    content: protected readonly int MaxEntriesInMemTable
    return:
      type: System.Int32
    content.vb: Protected ReadOnly MaxEntriesInMemTable As Integer
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.MetastreamMaxCount
  commentId: F:EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.MetastreamMaxCount
  id: MetastreamMaxCount
  parent: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario
  langs:
  - csharp
  - vb
  name: MetastreamMaxCount
  nameWithType: DuplicateReadIndexTestScenario.MetastreamMaxCount
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.MetastreamMaxCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MetastreamMaxCount
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
    startLine: 79
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.BuildingIndex
  syntax:
    content: protected readonly int MetastreamMaxCount
    return:
      type: System.Int32
    content.vb: Protected ReadOnly MetastreamMaxCount As Integer
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.PerformAdditionalCommitChecks
  commentId: F:EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.PerformAdditionalCommitChecks
  id: PerformAdditionalCommitChecks
  parent: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario
  langs:
  - csharp
  - vb
  name: PerformAdditionalCommitChecks
  nameWithType: DuplicateReadIndexTestScenario.PerformAdditionalCommitChecks
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.PerformAdditionalCommitChecks
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PerformAdditionalCommitChecks
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
    startLine: 80
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.BuildingIndex
  syntax:
    content: protected readonly bool PerformAdditionalCommitChecks
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly PerformAdditionalCommitChecks As Boolean
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.IndexBitnessVersion
  commentId: F:EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.IndexBitnessVersion
  id: IndexBitnessVersion
  parent: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario
  langs:
  - csharp
  - vb
  name: IndexBitnessVersion
  nameWithType: DuplicateReadIndexTestScenario.IndexBitnessVersion
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.IndexBitnessVersion
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IndexBitnessVersion
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
    startLine: 81
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.BuildingIndex
  syntax:
    content: protected readonly byte IndexBitnessVersion
    return:
      type: System.Byte
    content.vb: Protected ReadOnly IndexBitnessVersion As Byte
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.Writer
  commentId: F:EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.Writer
  id: Writer
  parent: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario
  langs:
  - csharp
  - vb
  name: Writer
  nameWithType: DuplicateReadIndexTestScenario.Writer
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.Writer
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Writer
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
    startLine: 82
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.BuildingIndex
  syntax:
    content: protected TFChunkWriter Writer
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
    content.vb: Protected Writer As TFChunkWriter
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.ReadIndex
  commentId: F:EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.ReadIndex
  id: ReadIndex
  parent: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario
  langs:
  - csharp
  - vb
  name: ReadIndex
  nameWithType: DuplicateReadIndexTestScenario.ReadIndex
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.ReadIndex
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadIndex
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
    startLine: 83
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.BuildingIndex
  syntax:
    content: protected IReadIndex ReadIndex
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
    content.vb: Protected ReadIndex As IReadIndex
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.#ctor(System.Int32,System.Int32,System.Byte,System.Boolean)
  commentId: M:EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.#ctor(System.Int32,System.Int32,System.Byte,System.Boolean)
  id: '#ctor(System.Int32,System.Int32,System.Byte,System.Boolean)'
  parent: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario
  langs:
  - csharp
  - vb
  name: DuplicateReadIndexTestScenario(Int32, Int32, Byte, Boolean)
  nameWithType: DuplicateReadIndexTestScenario.DuplicateReadIndexTestScenario(Int32, Int32, Byte, Boolean)
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.DuplicateReadIndexTestScenario(System.Int32, System.Int32, System.Byte, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
    startLine: 88
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.BuildingIndex
  syntax:
    content: protected DuplicateReadIndexTestScenario(int maxEntriesInMemTable = 20, int metastreamMaxCount = 1, byte indexBitnessVersion = null, bool performAdditionalChecks = false)
    parameters:
    - id: maxEntriesInMemTable
      type: System.Int32
    - id: metastreamMaxCount
      type: System.Int32
    - id: indexBitnessVersion
      type: System.Byte
    - id: performAdditionalChecks
      type: System.Boolean
    content.vb: Protected Sub New(maxEntriesInMemTable As Integer = 20, metastreamMaxCount As Integer = 1, indexBitnessVersion As Byte = Nothing, performAdditionalChecks As Boolean = False)
  overload: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.TestFixtureSetUp
  id: TestFixtureSetUp
  parent: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario
  langs:
  - csharp
  - vb
  name: TestFixtureSetUp()
  nameWithType: DuplicateReadIndexTestScenario.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.TestFixtureSetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureSetUp
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
    startLine: 97
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.BuildingIndex
  syntax:
    content: public override void TestFixtureSetUp()
    content.vb: Public Overrides Sub TestFixtureSetUp
  overridden: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  overload: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.TestFixtureSetUp*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.TestFixtureTearDown
  id: TestFixtureTearDown
  parent: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario
  langs:
  - csharp
  - vb
  name: TestFixtureTearDown()
  nameWithType: DuplicateReadIndexTestScenario.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.TestFixtureTearDown()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureTearDown
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
    startLine: 174
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.BuildingIndex
  syntax:
    content: public override void TestFixtureTearDown()
    content.vb: Public Overrides Sub TestFixtureTearDown
  overridden: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  overload: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.TestFixtureTearDown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.SetupDB
  commentId: M:EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.SetupDB
  id: SetupDB
  parent: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario
  langs:
  - csharp
  - vb
  name: SetupDB()
  nameWithType: DuplicateReadIndexTestScenario.SetupDB()
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.SetupDB()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetupDB
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
    startLine: 187
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.BuildingIndex
  syntax:
    content: protected abstract void SetupDB()
    content.vb: Protected MustOverride Sub SetupDB
  overload: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.SetupDB*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.Given
  commentId: M:EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.Given
  id: Given
  parent: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario
  langs:
  - csharp
  - vb
  name: Given()
  nameWithType: DuplicateReadIndexTestScenario.Given()
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.Given()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Given
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/BuildingIndex/when_building_an_index_off_tfile_with_duplicate_events_in_a_stream.cs
    startLine: 188
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.BuildingIndex
  syntax:
    content: protected abstract void Given()
    content.vb: Protected MustOverride Sub Given
  overload: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.Given*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex
  commentId: N:EventStore.Core.Tests.Services.Storage.BuildingIndex
  isExternal: false
  name: EventStore.Core.Tests.Services.Storage.BuildingIndex
  nameWithType: EventStore.Core.Tests.Services.Storage.BuildingIndex
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  commentId: T:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithDirectoryPerTestFixture
  nameWithType: SpecificationWithDirectoryPerTestFixture
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  commentId: F:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: PathName
  nameWithType: SpecificationWithDirectoryPerTestFixture.PathName
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: GetTempFilePath()
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: true
  name: GetFilePathFor(String)
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor(String)
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<DuplicateReadIndexTestScenario>()
  nameWithType: ProtobufExtensions.Serialize<DuplicateReadIndexTestScenario>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of DuplicateReadIndexTestScenario)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario)()
  name.vb: Serialize(Of DuplicateReadIndexTestScenario)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<DuplicateReadIndexTestScenario>
    nameWithType: ProtobufExtensions.Serialize<DuplicateReadIndexTestScenario>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of DuplicateReadIndexTestScenario)
    nameWithType: ProtobufExtensions.Serialize(Of DuplicateReadIndexTestScenario)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<DuplicateReadIndexTestScenario>()
  nameWithType: ProtobufExtensions.SerializeToArray<DuplicateReadIndexTestScenario>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of DuplicateReadIndexTestScenario)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario)()
  name.vb: SerializeToArray(Of DuplicateReadIndexTestScenario)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<DuplicateReadIndexTestScenario>
    nameWithType: ProtobufExtensions.SerializeToArray<DuplicateReadIndexTestScenario>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of DuplicateReadIndexTestScenario)
    nameWithType: ProtobufExtensions.SerializeToArray(Of DuplicateReadIndexTestScenario)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkWriter
  parent: EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: TFChunkWriter
  nameWithType: TFChunkWriter
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  parent: EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: IReadIndex
  nameWithType: IReadIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.#ctor*
  commentId: Overload:EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.#ctor
  isExternal: false
  name: DuplicateReadIndexTestScenario
  nameWithType: DuplicateReadIndexTestScenario.DuplicateReadIndexTestScenario
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.DuplicateReadIndexTestScenario
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureSetUp()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.TestFixtureSetUp*
  commentId: Overload:EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.TestFixtureSetUp
  isExternal: false
  name: TestFixtureSetUp
  nameWithType: DuplicateReadIndexTestScenario.TestFixtureSetUp
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.TestFixtureSetUp
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureTearDown()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.TestFixtureTearDown*
  commentId: Overload:EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.TestFixtureTearDown
  isExternal: false
  name: TestFixtureTearDown
  nameWithType: DuplicateReadIndexTestScenario.TestFixtureTearDown
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.TestFixtureTearDown
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.SetupDB*
  commentId: Overload:EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.SetupDB
  isExternal: false
  name: SetupDB
  nameWithType: DuplicateReadIndexTestScenario.SetupDB
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.SetupDB
- uid: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.Given*
  commentId: Overload:EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.Given
  isExternal: false
  name: Given
  nameWithType: DuplicateReadIndexTestScenario.Given
  fullName: EventStore.Core.Tests.Services.Storage.BuildingIndex.DuplicateReadIndexTestScenario.Given

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should
  commentId: T:EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should
  id: when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should
  parent: EventStore.Core.Tests.Services.Storage.DeletingStream
  children:
  - EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_different_hash_is_not_deleted
  - EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_same_hash_is_not_deleted
  - EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_different_hash_is_not_deleted
  - EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_same_hash_is_not_deleted
  - EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_stream_is_deleted
  - EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.WriteTestScenario
  langs:
  - csharp
  - vb
  name: when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should
  nameWithType: when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should
  fullName: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/DeletingStream/when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/DeletingStream/when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs
    startLine: 4
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.DeletingStream
  syntax:
    content: 'public class when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should : ReadIndexTestScenario'
    content.vb: >-
      Public Class when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should

          Inherits ReadIndexTestScenario
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  inheritedMembers:
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.MaxEntriesInMemTable
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.MetastreamMaxCount
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.PerformAdditionalCommitChecks
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.IndexBitnessVersion
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TableIndex
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.ReadIndex
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Db
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Writer
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriterCheckpoint
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.ChaserCheckpoint
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.ReplicationCheckpoint
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.IODispatcher
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Bus
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TestFixtureSetUp
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TestFixtureTearDown
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEvent(System.String,System.Int64,System.String,System.Nullable{DateTime},Guid,System.Boolean)
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteStreamMetadata(System.String,System.Int64,System.String,System.Nullable{DateTime})
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionBegin(System.String,System.Int64,System.Int64,System.String)
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionBegin(System.String,System.Int64)
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionEvent(Guid,System.Int64,System.Int32,System.String,System.Int64,System.String,EventStore.Core.TransactionLog.LogRecords.PrepareFlags,System.Boolean)
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionEnd(Guid,System.Int64,System.String)
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WritePrepare(System.String,System.Int64,Guid,System.String,System.String)
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteCommit(System.Int64,System.String,System.Int64)
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteCommit(Guid,System.Int64,System.String,System.Int64)
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDelete(System.String)
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDeletePrepare(System.String)
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDeleteCommit(EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord)
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEventWithLogVersion0(Guid,System.String,System.Int64,System.Int64,System.Nullable{EventStore.Core.TransactionLog.LogRecords.PrepareFlags})
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.GetBackwardReadPos
  - EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Scavenge(System.Boolean,System.Boolean)
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.WriteTestScenario
  commentId: M:EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.WriteTestScenario
  id: WriteTestScenario
  parent: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should
  langs:
  - csharp
  - vb
  name: WriteTestScenario()
  nameWithType: when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.WriteTestScenario()
  fullName: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.WriteTestScenario()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/DeletingStream/when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WriteTestScenario
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/DeletingStream/when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs
    startLine: 8
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.DeletingStream
  syntax:
    content: protected override void WriteTestScenario()
    content.vb: Protected Overrides Sub WriteTestScenario
  overridden: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTestScenario
  overload: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.WriteTestScenario*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_stream_is_deleted
  commentId: M:EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_stream_is_deleted
  id: indicate_that_stream_is_deleted
  parent: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should
  langs:
  - csharp
  - vb
  name: indicate_that_stream_is_deleted()
  nameWithType: when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_stream_is_deleted()
  fullName: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_stream_is_deleted()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/DeletingStream/when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: indicate_that_stream_is_deleted
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/DeletingStream/when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs
    startLine: 29
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.DeletingStream
  syntax:
    content: public void indicate_that_stream_is_deleted()
    content.vb: Public Sub indicate_that_stream_is_deleted
  overload: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_stream_is_deleted*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_same_hash_is_not_deleted
  commentId: M:EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_same_hash_is_not_deleted
  id: indicate_that_nonexisting_stream_with_same_hash_is_not_deleted
  parent: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should
  langs:
  - csharp
  - vb
  name: indicate_that_nonexisting_stream_with_same_hash_is_not_deleted()
  nameWithType: when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_same_hash_is_not_deleted()
  fullName: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_same_hash_is_not_deleted()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/DeletingStream/when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: indicate_that_nonexisting_stream_with_same_hash_is_not_deleted
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/DeletingStream/when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs
    startLine: 35
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.DeletingStream
  syntax:
    content: public void indicate_that_nonexisting_stream_with_same_hash_is_not_deleted()
    content.vb: Public Sub indicate_that_nonexisting_stream_with_same_hash_is_not_deleted
  overload: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_same_hash_is_not_deleted*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_different_hash_is_not_deleted
  commentId: M:EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_different_hash_is_not_deleted
  id: indicate_that_nonexisting_stream_with_different_hash_is_not_deleted
  parent: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should
  langs:
  - csharp
  - vb
  name: indicate_that_nonexisting_stream_with_different_hash_is_not_deleted()
  nameWithType: when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_different_hash_is_not_deleted()
  fullName: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_different_hash_is_not_deleted()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/DeletingStream/when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: indicate_that_nonexisting_stream_with_different_hash_is_not_deleted
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/DeletingStream/when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs
    startLine: 41
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.DeletingStream
  syntax:
    content: public void indicate_that_nonexisting_stream_with_different_hash_is_not_deleted()
    content.vb: Public Sub indicate_that_nonexisting_stream_with_different_hash_is_not_deleted
  overload: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_different_hash_is_not_deleted*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_same_hash_is_not_deleted
  commentId: M:EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_same_hash_is_not_deleted
  id: indicate_that_existing_stream_with_same_hash_is_not_deleted
  parent: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should
  langs:
  - csharp
  - vb
  name: indicate_that_existing_stream_with_same_hash_is_not_deleted()
  nameWithType: when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_same_hash_is_not_deleted()
  fullName: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_same_hash_is_not_deleted()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/DeletingStream/when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: indicate_that_existing_stream_with_same_hash_is_not_deleted
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/DeletingStream/when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs
    startLine: 47
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.DeletingStream
  syntax:
    content: public void indicate_that_existing_stream_with_same_hash_is_not_deleted()
    content.vb: Public Sub indicate_that_existing_stream_with_same_hash_is_not_deleted
  overload: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_same_hash_is_not_deleted*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_different_hash_is_not_deleted
  commentId: M:EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_different_hash_is_not_deleted
  id: indicate_that_existing_stream_with_different_hash_is_not_deleted
  parent: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should
  langs:
  - csharp
  - vb
  name: indicate_that_existing_stream_with_different_hash_is_not_deleted()
  nameWithType: when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_different_hash_is_not_deleted()
  fullName: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_different_hash_is_not_deleted()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/DeletingStream/when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: indicate_that_existing_stream_with_different_hash_is_not_deleted
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/DeletingStream/when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.cs
    startLine: 53
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.DeletingStream
  syntax:
    content: public void indicate_that_existing_stream_with_different_hash_is_not_deleted()
    content.vb: Public Sub indicate_that_existing_stream_with_different_hash_is_not_deleted
  overload: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_different_hash_is_not_deleted*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Services.Storage.DeletingStream
  commentId: N:EventStore.Core.Tests.Services.Storage.DeletingStream
  isExternal: false
  name: EventStore.Core.Tests.Services.Storage.DeletingStream
  nameWithType: EventStore.Core.Tests.Services.Storage.DeletingStream
  fullName: EventStore.Core.Tests.Services.Storage.DeletingStream
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  commentId: T:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithDirectoryPerTestFixture
  nameWithType: SpecificationWithDirectoryPerTestFixture
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  commentId: T:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  parent: EventStore.Core.Tests.Services.Storage
  isExternal: false
  name: ReadIndexTestScenario
  nameWithType: ReadIndexTestScenario
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.MaxEntriesInMemTable
  commentId: F:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.MaxEntriesInMemTable
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: MaxEntriesInMemTable
  nameWithType: ReadIndexTestScenario.MaxEntriesInMemTable
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.MaxEntriesInMemTable
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.MetastreamMaxCount
  commentId: F:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.MetastreamMaxCount
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: MetastreamMaxCount
  nameWithType: ReadIndexTestScenario.MetastreamMaxCount
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.MetastreamMaxCount
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.PerformAdditionalCommitChecks
  commentId: F:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.PerformAdditionalCommitChecks
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: PerformAdditionalCommitChecks
  nameWithType: ReadIndexTestScenario.PerformAdditionalCommitChecks
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.PerformAdditionalCommitChecks
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.IndexBitnessVersion
  commentId: F:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.IndexBitnessVersion
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: IndexBitnessVersion
  nameWithType: ReadIndexTestScenario.IndexBitnessVersion
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.IndexBitnessVersion
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TableIndex
  commentId: F:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TableIndex
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: TableIndex
  nameWithType: ReadIndexTestScenario.TableIndex
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TableIndex
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.ReadIndex
  commentId: F:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.ReadIndex
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: ReadIndex
  nameWithType: ReadIndexTestScenario.ReadIndex
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.ReadIndex
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Db
  commentId: F:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Db
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: Db
  nameWithType: ReadIndexTestScenario.Db
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Db
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Writer
  commentId: F:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Writer
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: Writer
  nameWithType: ReadIndexTestScenario.Writer
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Writer
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriterCheckpoint
  commentId: F:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriterCheckpoint
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: WriterCheckpoint
  nameWithType: ReadIndexTestScenario.WriterCheckpoint
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriterCheckpoint
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.ChaserCheckpoint
  commentId: F:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.ChaserCheckpoint
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: ChaserCheckpoint
  nameWithType: ReadIndexTestScenario.ChaserCheckpoint
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.ChaserCheckpoint
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.ReplicationCheckpoint
  commentId: F:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.ReplicationCheckpoint
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: ReplicationCheckpoint
  nameWithType: ReadIndexTestScenario.ReplicationCheckpoint
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.ReplicationCheckpoint
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.IODispatcher
  commentId: F:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.IODispatcher
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: IODispatcher
  nameWithType: ReadIndexTestScenario.IODispatcher
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.IODispatcher
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Bus
  commentId: F:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Bus
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: Bus
  nameWithType: ReadIndexTestScenario.Bus
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Bus
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TestFixtureSetUp
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: TestFixtureSetUp()
  nameWithType: ReadIndexTestScenario.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TestFixtureSetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: ReadIndexTestScenario.TestFixtureSetUp
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: ReadIndexTestScenario.TestFixtureSetUp
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TestFixtureTearDown
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: TestFixtureTearDown()
  nameWithType: ReadIndexTestScenario.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TestFixtureTearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: ReadIndexTestScenario.TestFixtureTearDown
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: ReadIndexTestScenario.TestFixtureTearDown
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEvent(System.String,System.Int64,System.String,System.Nullable{DateTime},Guid,System.Boolean)
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEvent(System.String,System.Int64,System.String,System.Nullable{DateTime},Guid,System.Boolean)
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: true
  name: WriteSingleEvent(String, Int64, String, Nullable<DateTime>, Guid, Boolean)
  nameWithType: ReadIndexTestScenario.WriteSingleEvent(String, Int64, String, Nullable<DateTime>, Guid, Boolean)
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEvent(System.String, System.Int64, System.String, System.Nullable<DateTime>, Guid, System.Boolean)
  nameWithType.vb: ReadIndexTestScenario.WriteSingleEvent(String, Int64, String, Nullable(Of DateTime), Guid, Boolean)
  fullName.vb: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEvent(System.String, System.Int64, System.String, System.Nullable(Of DateTime), Guid, System.Boolean)
  name.vb: WriteSingleEvent(String, Int64, String, Nullable(Of DateTime), Guid, Boolean)
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEvent(System.String,System.Int64,System.String,System.Nullable{DateTime},Guid,System.Boolean)
    name: WriteSingleEvent
    nameWithType: ReadIndexTestScenario.WriteSingleEvent
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEvent(System.String,System.Int64,System.String,System.Nullable{DateTime},Guid,System.Boolean)
    name: WriteSingleEvent
    nameWithType: ReadIndexTestScenario.WriteSingleEvent
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteStreamMetadata(System.String,System.Int64,System.String,System.Nullable{DateTime})
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteStreamMetadata(System.String,System.Int64,System.String,System.Nullable{DateTime})
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: true
  name: WriteStreamMetadata(String, Int64, String, Nullable<DateTime>)
  nameWithType: ReadIndexTestScenario.WriteStreamMetadata(String, Int64, String, Nullable<DateTime>)
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteStreamMetadata(System.String, System.Int64, System.String, System.Nullable<DateTime>)
  nameWithType.vb: ReadIndexTestScenario.WriteStreamMetadata(String, Int64, String, Nullable(Of DateTime))
  fullName.vb: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteStreamMetadata(System.String, System.Int64, System.String, System.Nullable(Of DateTime))
  name.vb: WriteStreamMetadata(String, Int64, String, Nullable(Of DateTime))
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteStreamMetadata(System.String,System.Int64,System.String,System.Nullable{DateTime})
    name: WriteStreamMetadata
    nameWithType: ReadIndexTestScenario.WriteStreamMetadata
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteStreamMetadata
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteStreamMetadata(System.String,System.Int64,System.String,System.Nullable{DateTime})
    name: WriteStreamMetadata
    nameWithType: ReadIndexTestScenario.WriteStreamMetadata
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteStreamMetadata
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionBegin(System.String,System.Int64,System.Int64,System.String)
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionBegin(System.String,System.Int64,System.Int64,System.String)
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: true
  name: WriteTransactionBegin(String, Int64, Int64, String)
  nameWithType: ReadIndexTestScenario.WriteTransactionBegin(String, Int64, Int64, String)
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionBegin(System.String, System.Int64, System.Int64, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionBegin(System.String,System.Int64,System.Int64,System.String)
    name: WriteTransactionBegin
    nameWithType: ReadIndexTestScenario.WriteTransactionBegin
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionBegin
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionBegin(System.String,System.Int64,System.Int64,System.String)
    name: WriteTransactionBegin
    nameWithType: ReadIndexTestScenario.WriteTransactionBegin
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionBegin
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionBegin(System.String,System.Int64)
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionBegin(System.String,System.Int64)
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: true
  name: WriteTransactionBegin(String, Int64)
  nameWithType: ReadIndexTestScenario.WriteTransactionBegin(String, Int64)
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionBegin(System.String, System.Int64)
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionBegin(System.String,System.Int64)
    name: WriteTransactionBegin
    nameWithType: ReadIndexTestScenario.WriteTransactionBegin
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionBegin
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionBegin(System.String,System.Int64)
    name: WriteTransactionBegin
    nameWithType: ReadIndexTestScenario.WriteTransactionBegin
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionBegin
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionEvent(Guid,System.Int64,System.Int32,System.String,System.Int64,System.String,EventStore.Core.TransactionLog.LogRecords.PrepareFlags,System.Boolean)
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionEvent(Guid,System.Int64,System.Int32,System.String,System.Int64,System.String,EventStore.Core.TransactionLog.LogRecords.PrepareFlags,System.Boolean)
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: true
  name: WriteTransactionEvent(Guid, Int64, Int32, String, Int64, String, PrepareFlags, Boolean)
  nameWithType: ReadIndexTestScenario.WriteTransactionEvent(Guid, Int64, Int32, String, Int64, String, PrepareFlags, Boolean)
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionEvent(Guid, System.Int64, System.Int32, System.String, System.Int64, System.String, EventStore.Core.TransactionLog.LogRecords.PrepareFlags, System.Boolean)
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionEvent(Guid,System.Int64,System.Int32,System.String,System.Int64,System.String,EventStore.Core.TransactionLog.LogRecords.PrepareFlags,System.Boolean)
    name: WriteTransactionEvent
    nameWithType: ReadIndexTestScenario.WriteTransactionEvent
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionEvent(Guid,System.Int64,System.Int32,System.String,System.Int64,System.String,EventStore.Core.TransactionLog.LogRecords.PrepareFlags,System.Boolean)
    name: WriteTransactionEvent
    nameWithType: ReadIndexTestScenario.WriteTransactionEvent
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionEnd(Guid,System.Int64,System.String)
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionEnd(Guid,System.Int64,System.String)
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: true
  name: WriteTransactionEnd(Guid, Int64, String)
  nameWithType: ReadIndexTestScenario.WriteTransactionEnd(Guid, Int64, String)
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionEnd(Guid, System.Int64, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionEnd(Guid,System.Int64,System.String)
    name: WriteTransactionEnd
    nameWithType: ReadIndexTestScenario.WriteTransactionEnd
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionEnd
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionEnd(Guid,System.Int64,System.String)
    name: WriteTransactionEnd
    nameWithType: ReadIndexTestScenario.WriteTransactionEnd
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTransactionEnd
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WritePrepare(System.String,System.Int64,Guid,System.String,System.String)
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WritePrepare(System.String,System.Int64,Guid,System.String,System.String)
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: true
  name: WritePrepare(String, Int64, Guid, String, String)
  nameWithType: ReadIndexTestScenario.WritePrepare(String, Int64, Guid, String, String)
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WritePrepare(System.String, System.Int64, Guid, System.String, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WritePrepare(System.String,System.Int64,Guid,System.String,System.String)
    name: WritePrepare
    nameWithType: ReadIndexTestScenario.WritePrepare
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WritePrepare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WritePrepare(System.String,System.Int64,Guid,System.String,System.String)
    name: WritePrepare
    nameWithType: ReadIndexTestScenario.WritePrepare
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WritePrepare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteCommit(System.Int64,System.String,System.Int64)
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteCommit(System.Int64,System.String,System.Int64)
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: true
  name: WriteCommit(Int64, String, Int64)
  nameWithType: ReadIndexTestScenario.WriteCommit(Int64, String, Int64)
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteCommit(System.Int64, System.String, System.Int64)
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteCommit(System.Int64,System.String,System.Int64)
    name: WriteCommit
    nameWithType: ReadIndexTestScenario.WriteCommit
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteCommit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteCommit(System.Int64,System.String,System.Int64)
    name: WriteCommit
    nameWithType: ReadIndexTestScenario.WriteCommit
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteCommit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteCommit(Guid,System.Int64,System.String,System.Int64)
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteCommit(Guid,System.Int64,System.String,System.Int64)
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: true
  name: WriteCommit(Guid, Int64, String, Int64)
  nameWithType: ReadIndexTestScenario.WriteCommit(Guid, Int64, String, Int64)
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteCommit(Guid, System.Int64, System.String, System.Int64)
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteCommit(Guid,System.Int64,System.String,System.Int64)
    name: WriteCommit
    nameWithType: ReadIndexTestScenario.WriteCommit
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteCommit
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteCommit(Guid,System.Int64,System.String,System.Int64)
    name: WriteCommit
    nameWithType: ReadIndexTestScenario.WriteCommit
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteCommit
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDelete(System.String)
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDelete(System.String)
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: true
  name: WriteDelete(String)
  nameWithType: ReadIndexTestScenario.WriteDelete(String)
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDelete(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDelete(System.String)
    name: WriteDelete
    nameWithType: ReadIndexTestScenario.WriteDelete
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDelete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDelete(System.String)
    name: WriteDelete
    nameWithType: ReadIndexTestScenario.WriteDelete
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDelete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDeletePrepare(System.String)
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDeletePrepare(System.String)
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: true
  name: WriteDeletePrepare(String)
  nameWithType: ReadIndexTestScenario.WriteDeletePrepare(String)
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDeletePrepare(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDeletePrepare(System.String)
    name: WriteDeletePrepare
    nameWithType: ReadIndexTestScenario.WriteDeletePrepare
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDeletePrepare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDeletePrepare(System.String)
    name: WriteDeletePrepare
    nameWithType: ReadIndexTestScenario.WriteDeletePrepare
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDeletePrepare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDeleteCommit(EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord)
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDeleteCommit(EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord)
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: WriteDeleteCommit(PrepareLogRecord)
  nameWithType: ReadIndexTestScenario.WriteDeleteCommit(PrepareLogRecord)
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDeleteCommit(EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord)
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDeleteCommit(EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord)
    name: WriteDeleteCommit
    nameWithType: ReadIndexTestScenario.WriteDeleteCommit
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDeleteCommit
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
    name: PrepareLogRecord
    nameWithType: PrepareLogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDeleteCommit(EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord)
    name: WriteDeleteCommit
    nameWithType: ReadIndexTestScenario.WriteDeleteCommit
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteDeleteCommit
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
    name: PrepareLogRecord
    nameWithType: PrepareLogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEventWithLogVersion0(Guid,System.String,System.Int64,System.Int64,System.Nullable{EventStore.Core.TransactionLog.LogRecords.PrepareFlags})
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEventWithLogVersion0(Guid,System.String,System.Int64,System.Int64,System.Nullable{EventStore.Core.TransactionLog.LogRecords.PrepareFlags})
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: true
  name: WriteSingleEventWithLogVersion0(Guid, String, Int64, Int64, Nullable<PrepareFlags>)
  nameWithType: ReadIndexTestScenario.WriteSingleEventWithLogVersion0(Guid, String, Int64, Int64, Nullable<PrepareFlags>)
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEventWithLogVersion0(Guid, System.String, System.Int64, System.Int64, System.Nullable<EventStore.Core.TransactionLog.LogRecords.PrepareFlags>)
  nameWithType.vb: ReadIndexTestScenario.WriteSingleEventWithLogVersion0(Guid, String, Int64, Int64, Nullable(Of PrepareFlags))
  fullName.vb: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEventWithLogVersion0(Guid, System.String, System.Int64, System.Int64, System.Nullable(Of EventStore.Core.TransactionLog.LogRecords.PrepareFlags))
  name.vb: WriteSingleEventWithLogVersion0(Guid, String, Int64, Int64, Nullable(Of PrepareFlags))
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEventWithLogVersion0(Guid,System.String,System.Int64,System.Int64,System.Nullable{EventStore.Core.TransactionLog.LogRecords.PrepareFlags})
    name: WriteSingleEventWithLogVersion0
    nameWithType: ReadIndexTestScenario.WriteSingleEventWithLogVersion0
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEventWithLogVersion0
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEventWithLogVersion0(Guid,System.String,System.Int64,System.Int64,System.Nullable{EventStore.Core.TransactionLog.LogRecords.PrepareFlags})
    name: WriteSingleEventWithLogVersion0
    nameWithType: ReadIndexTestScenario.WriteSingleEventWithLogVersion0
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteSingleEventWithLogVersion0
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    name: PrepareFlags
    nameWithType: PrepareFlags
    fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.GetBackwardReadPos
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.GetBackwardReadPos
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: GetBackwardReadPos()
  nameWithType: ReadIndexTestScenario.GetBackwardReadPos()
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.GetBackwardReadPos()
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.GetBackwardReadPos
    name: GetBackwardReadPos
    nameWithType: ReadIndexTestScenario.GetBackwardReadPos
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.GetBackwardReadPos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.GetBackwardReadPos
    name: GetBackwardReadPos
    nameWithType: ReadIndexTestScenario.GetBackwardReadPos
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.GetBackwardReadPos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Scavenge(System.Boolean,System.Boolean)
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Scavenge(System.Boolean,System.Boolean)
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: true
  name: Scavenge(Boolean, Boolean)
  nameWithType: ReadIndexTestScenario.Scavenge(Boolean, Boolean)
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Scavenge(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Scavenge(System.Boolean,System.Boolean)
    name: Scavenge
    nameWithType: ReadIndexTestScenario.Scavenge
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Scavenge
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Scavenge(System.Boolean,System.Boolean)
    name: Scavenge
    nameWithType: ReadIndexTestScenario.Scavenge
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.Scavenge
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  commentId: F:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: PathName
  nameWithType: SpecificationWithDirectoryPerTestFixture.PathName
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: GetTempFilePath()
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: true
  name: GetFilePathFor(String)
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor(String)
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should>()
  nameWithType: ProtobufExtensions.Serialize<when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should)()
  name.vb: Serialize(Of when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should>
    nameWithType: ProtobufExtensions.Serialize<when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should)
    nameWithType: ProtobufExtensions.Serialize(Of when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should>()
  nameWithType: ProtobufExtensions.SerializeToArray<when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should)()
  name.vb: SerializeToArray(Of when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should>
    nameWithType: ProtobufExtensions.SerializeToArray<when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should)
    nameWithType: ProtobufExtensions.SerializeToArray(Of when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Core.Tests.Services.Storage
  commentId: N:EventStore.Core.Tests.Services.Storage
  isExternal: false
  name: EventStore.Core.Tests.Services.Storage
  nameWithType: EventStore.Core.Tests.Services.Storage
  fullName: EventStore.Core.Tests.Services.Storage
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTestScenario
  commentId: M:EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTestScenario
  parent: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario
  isExternal: false
  name: WriteTestScenario()
  nameWithType: ReadIndexTestScenario.WriteTestScenario()
  fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTestScenario()
  spec.csharp:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTestScenario
    name: WriteTestScenario
    nameWithType: ReadIndexTestScenario.WriteTestScenario
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTestScenario
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTestScenario
    name: WriteTestScenario
    nameWithType: ReadIndexTestScenario.WriteTestScenario
    fullName: EventStore.Core.Tests.Services.Storage.ReadIndexTestScenario.WriteTestScenario
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.WriteTestScenario*
  commentId: Overload:EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.WriteTestScenario
  isExternal: false
  name: WriteTestScenario
  nameWithType: when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.WriteTestScenario
  fullName: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.WriteTestScenario
- uid: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_stream_is_deleted*
  commentId: Overload:EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_stream_is_deleted
  isExternal: false
  name: indicate_that_stream_is_deleted
  nameWithType: when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_stream_is_deleted
  fullName: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_stream_is_deleted
- uid: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_same_hash_is_not_deleted*
  commentId: Overload:EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_same_hash_is_not_deleted
  isExternal: false
  name: indicate_that_nonexisting_stream_with_same_hash_is_not_deleted
  nameWithType: when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_same_hash_is_not_deleted
  fullName: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_same_hash_is_not_deleted
- uid: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_different_hash_is_not_deleted*
  commentId: Overload:EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_different_hash_is_not_deleted
  isExternal: false
  name: indicate_that_nonexisting_stream_with_different_hash_is_not_deleted
  nameWithType: when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_different_hash_is_not_deleted
  fullName: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_nonexisting_stream_with_different_hash_is_not_deleted
- uid: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_same_hash_is_not_deleted*
  commentId: Overload:EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_same_hash_is_not_deleted
  isExternal: false
  name: indicate_that_existing_stream_with_same_hash_is_not_deleted
  nameWithType: when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_same_hash_is_not_deleted
  fullName: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_same_hash_is_not_deleted
- uid: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_different_hash_is_not_deleted*
  commentId: Overload:EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_different_hash_is_not_deleted
  isExternal: false
  name: indicate_that_existing_stream_with_different_hash_is_not_deleted
  nameWithType: when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_different_hash_is_not_deleted
  fullName: EventStore.Core.Tests.Services.Storage.DeletingStream.when_deleting_stream_spanning_through_multiple_chunks_in_db_with_other_streams_read_index_should.indicate_that_existing_stream_with_different_hash_is_not_deleted

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture
  commentId: T:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture
  id: HashCollisionTestFixture
  parent: EventStore.Core.Tests.Services.Storage.HashCollisions
  children:
  - EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._fakeReader
  - EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._hashCollisionReadLimit
  - EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._highHasher
  - EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._indexBackend
  - EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._indexDir
  - EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._indexReader
  - EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._lowHasher
  - EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._maxMemTableSize
  - EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._tableIndex
  - EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.given
  - EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.Setup
  - EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.TestFixtureTearDown
  - EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.when
  langs:
  - csharp
  - vb
  name: HashCollisionTestFixture
  nameWithType: HashCollisionTestFixture
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HashCollisionTestFixture
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
    startLine: 12
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.HashCollisions
  syntax:
    content: 'public class HashCollisionTestFixture : SpecificationWithDirectoryPerTestFixture'
    content.vb: >-
      Public Class HashCollisionTestFixture

          Inherits SpecificationWithDirectoryPerTestFixture
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  derivedClasses:
  - EventStore.Core.Tests.Services.Storage.HashCollisions.when_hash_read_limit_is_not_reached
  - EventStore.Core.Tests.Services.Storage.HashCollisions.when_index_contains_duplicate_entries
  - EventStore.Core.Tests.Services.Storage.HashCollisions.when_index_contains_duplicate_entries_and_the_duplicate_is_a_64bit_index_entry
  - EventStore.Core.Tests.Services.Storage.HashCollisions.when_stream_does_not_exist
  - EventStore.Core.Tests.Services.Storage.HashCollisions.when_stream_is_in_of_range_of_read_limit
  - EventStore.Core.Tests.Services.Storage.HashCollisions.when_stream_is_out_of_range_of_read_limit
  inheritedMembers:
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._hashCollisionReadLimit
  commentId: F:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._hashCollisionReadLimit
  id: _hashCollisionReadLimit
  parent: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture
  langs:
  - csharp
  - vb
  name: _hashCollisionReadLimit
  nameWithType: HashCollisionTestFixture._hashCollisionReadLimit
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._hashCollisionReadLimit
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _hashCollisionReadLimit
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
    startLine: 14
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.HashCollisions
  syntax:
    content: protected int _hashCollisionReadLimit
    return:
      type: System.Int32
    content.vb: Protected _hashCollisionReadLimit As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._maxMemTableSize
  commentId: F:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._maxMemTableSize
  id: _maxMemTableSize
  parent: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture
  langs:
  - csharp
  - vb
  name: _maxMemTableSize
  nameWithType: HashCollisionTestFixture._maxMemTableSize
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._maxMemTableSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _maxMemTableSize
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
    startLine: 15
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.HashCollisions
  syntax:
    content: protected int _maxMemTableSize
    return:
      type: System.Int32
    content.vb: Protected _maxMemTableSize As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._tableIndex
  commentId: F:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._tableIndex
  id: _tableIndex
  parent: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture
  langs:
  - csharp
  - vb
  name: _tableIndex
  nameWithType: HashCollisionTestFixture._tableIndex
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._tableIndex
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _tableIndex
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
    startLine: 16
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.HashCollisions
  syntax:
    content: protected TableIndex _tableIndex
    return:
      type: EventStore.Core.Index.TableIndex
    content.vb: Protected _tableIndex As TableIndex
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._indexReader
  commentId: F:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._indexReader
  id: _indexReader
  parent: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture
  langs:
  - csharp
  - vb
  name: _indexReader
  nameWithType: HashCollisionTestFixture._indexReader
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._indexReader
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _indexReader
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
    startLine: 17
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.HashCollisions
  syntax:
    content: protected IIndexReader _indexReader
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
    content.vb: Protected _indexReader As IIndexReader
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._indexBackend
  commentId: F:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._indexBackend
  id: _indexBackend
  parent: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture
  langs:
  - csharp
  - vb
  name: _indexBackend
  nameWithType: HashCollisionTestFixture._indexBackend
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._indexBackend
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _indexBackend
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
    startLine: 18
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.HashCollisions
  syntax:
    content: protected IIndexBackend _indexBackend
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
    content.vb: Protected _indexBackend As IIndexBackend
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._lowHasher
  commentId: F:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._lowHasher
  id: _lowHasher
  parent: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture
  langs:
  - csharp
  - vb
  name: _lowHasher
  nameWithType: HashCollisionTestFixture._lowHasher
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._lowHasher
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _lowHasher
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
    startLine: 19
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.HashCollisions
  syntax:
    content: protected IHasher _lowHasher
    return:
      type: EventStore.Core.Index.Hashes.IHasher
    content.vb: Protected _lowHasher As IHasher
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._highHasher
  commentId: F:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._highHasher
  id: _highHasher
  parent: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture
  langs:
  - csharp
  - vb
  name: _highHasher
  nameWithType: HashCollisionTestFixture._highHasher
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._highHasher
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _highHasher
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
    startLine: 20
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.HashCollisions
  syntax:
    content: protected IHasher _highHasher
    return:
      type: EventStore.Core.Index.Hashes.IHasher
    content.vb: Protected _highHasher As IHasher
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._indexDir
  commentId: F:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._indexDir
  id: _indexDir
  parent: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture
  langs:
  - csharp
  - vb
  name: _indexDir
  nameWithType: HashCollisionTestFixture._indexDir
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._indexDir
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _indexDir
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
    startLine: 21
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.HashCollisions
  syntax:
    content: protected string _indexDir
    return:
      type: System.String
    content.vb: Protected _indexDir As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._fakeReader
  commentId: F:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._fakeReader
  id: _fakeReader
  parent: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture
  langs:
  - csharp
  - vb
  name: _fakeReader
  nameWithType: HashCollisionTestFixture._fakeReader
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture._fakeReader
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _fakeReader
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
    startLine: 22
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.HashCollisions
  syntax:
    content: protected TFReaderLease _fakeReader
    return:
      type: EventStore.Core.TransactionLog.TFReaderLease
    content.vb: Protected _fakeReader As TFReaderLease
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.given
  commentId: M:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.given
  id: given
  parent: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture
  langs:
  - csharp
  - vb
  name: given()
  nameWithType: HashCollisionTestFixture.given()
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.given()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: given
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
    startLine: 24
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.HashCollisions
  syntax:
    content: protected virtual void given()
    content.vb: Protected Overridable Sub given
  overload: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.given*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.when
  commentId: M:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.when
  id: when
  parent: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture
  langs:
  - csharp
  - vb
  name: when()
  nameWithType: HashCollisionTestFixture.when()
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.when()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: when
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
    startLine: 25
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.HashCollisions
  syntax:
    content: protected virtual void when()
    content.vb: Protected Overridable Sub when
  overload: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.when*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.Setup
  commentId: M:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.Setup
  id: Setup
  parent: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture
  langs:
  - csharp
  - vb
  name: Setup()
  nameWithType: HashCollisionTestFixture.Setup()
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.Setup()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Setup
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
    startLine: 27
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.HashCollisions
  syntax:
    content: public void Setup()
    content.vb: Public Sub Setup
  overload: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.Setup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.TestFixtureTearDown
  id: TestFixtureTearDown
  parent: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture
  langs:
  - csharp
  - vb
  name: TestFixtureTearDown()
  nameWithType: HashCollisionTestFixture.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.TestFixtureTearDown()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureTearDown
    path: ../EventStore/src/EventStore.Core.Tests/Services/Storage/HashCollisions/with_hash_collisions.cs
    startLine: 49
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Storage.HashCollisions
  syntax:
    content: public override void TestFixtureTearDown()
    content.vb: Public Overrides Sub TestFixtureTearDown
  overridden: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  overload: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.TestFixtureTearDown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions
  commentId: N:EventStore.Core.Tests.Services.Storage.HashCollisions
  isExternal: false
  name: EventStore.Core.Tests.Services.Storage.HashCollisions
  nameWithType: EventStore.Core.Tests.Services.Storage.HashCollisions
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  commentId: T:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithDirectoryPerTestFixture
  nameWithType: SpecificationWithDirectoryPerTestFixture
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  commentId: F:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: PathName
  nameWithType: SpecificationWithDirectoryPerTestFixture.PathName
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: GetTempFilePath()
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: true
  name: GetFilePathFor(String)
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor(String)
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureSetUp()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<HashCollisionTestFixture>()
  nameWithType: ProtobufExtensions.Serialize<HashCollisionTestFixture>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of HashCollisionTestFixture)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture)()
  name.vb: Serialize(Of HashCollisionTestFixture)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<HashCollisionTestFixture>
    nameWithType: ProtobufExtensions.Serialize<HashCollisionTestFixture>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of HashCollisionTestFixture)
    nameWithType: ProtobufExtensions.Serialize(Of HashCollisionTestFixture)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<HashCollisionTestFixture>()
  nameWithType: ProtobufExtensions.SerializeToArray<HashCollisionTestFixture>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of HashCollisionTestFixture)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture)()
  name.vb: SerializeToArray(Of HashCollisionTestFixture)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<HashCollisionTestFixture>
    nameWithType: ProtobufExtensions.SerializeToArray<HashCollisionTestFixture>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of HashCollisionTestFixture)
    nameWithType: ProtobufExtensions.SerializeToArray(Of HashCollisionTestFixture)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Index.TableIndex
  commentId: T:EventStore.Core.Index.TableIndex
  parent: EventStore.Core.Index
  isExternal: false
  name: TableIndex
  nameWithType: TableIndex
  fullName: EventStore.Core.Index.TableIndex
- uid: EventStore.Core.Index
  commentId: N:EventStore.Core.Index
  isExternal: false
  name: EventStore.Core.Index
  nameWithType: EventStore.Core.Index
  fullName: EventStore.Core.Index
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
  parent: EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: IIndexReader
  nameWithType: IIndexReader
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexReader
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
  parent: EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: IIndexBackend
  nameWithType: IIndexBackend
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend
- uid: EventStore.Core.Index.Hashes.IHasher
  commentId: T:EventStore.Core.Index.Hashes.IHasher
  parent: EventStore.Core.Index.Hashes
  isExternal: false
  name: IHasher
  nameWithType: IHasher
  fullName: EventStore.Core.Index.Hashes.IHasher
- uid: EventStore.Core.Index.Hashes
  commentId: N:EventStore.Core.Index.Hashes
  isExternal: false
  name: EventStore.Core.Index.Hashes
  nameWithType: EventStore.Core.Index.Hashes
  fullName: EventStore.Core.Index.Hashes
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.TransactionLog.TFReaderLease
  commentId: T:EventStore.Core.TransactionLog.TFReaderLease
  parent: EventStore.Core.TransactionLog
  isExternal: false
  name: TFReaderLease
  nameWithType: TFReaderLease
  fullName: EventStore.Core.TransactionLog.TFReaderLease
- uid: EventStore.Core.TransactionLog
  commentId: N:EventStore.Core.TransactionLog
  isExternal: false
  name: EventStore.Core.TransactionLog
  nameWithType: EventStore.Core.TransactionLog
  fullName: EventStore.Core.TransactionLog
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.given*
  commentId: Overload:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.given
  isExternal: false
  name: given
  nameWithType: HashCollisionTestFixture.given
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.given
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.when*
  commentId: Overload:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.when
  isExternal: false
  name: when
  nameWithType: HashCollisionTestFixture.when
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.when
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.Setup*
  commentId: Overload:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.Setup
  isExternal: false
  name: Setup
  nameWithType: HashCollisionTestFixture.Setup
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.Setup
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureTearDown()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.TestFixtureTearDown*
  commentId: Overload:EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.TestFixtureTearDown
  isExternal: false
  name: TestFixtureTearDown
  nameWithType: HashCollisionTestFixture.TestFixtureTearDown
  fullName: EventStore.Core.Tests.Services.Storage.HashCollisions.HashCollisionTestFixture.TestFixtureTearDown

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Services.TimeService.FakeScheduler
  commentId: T:EventStore.Core.Tests.Services.TimeService.FakeScheduler
  id: FakeScheduler
  parent: EventStore.Core.Tests.Services.TimeService
  children:
  - EventStore.Core.Tests.Services.TimeService.FakeScheduler.#ctor(EventStore.Core.Services.TimerService.ITimer,EventStore.Core.Services.TimerService.ITimeProvider)
  - EventStore.Core.Tests.Services.TimeService.FakeScheduler.TriggerProcessing
  langs:
  - csharp
  - vb
  name: FakeScheduler
  nameWithType: FakeScheduler
  fullName: EventStore.Core.Tests.Services.TimeService.FakeScheduler
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: FakeScheduler
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 10
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: 'public class FakeScheduler : TimerBasedScheduler, IScheduler, IDisposable'
    content.vb: >-
      Public Class FakeScheduler

          Inherits TimerBasedScheduler

          Implements IScheduler, IDisposable
  inheritance:
  - System.Object
  - EventStore.Core.Services.TimerService.TimerBasedScheduler
  implements:
  - EventStore.Core.Services.TimerService.IScheduler
  - IDisposable
  inheritedMembers:
  - EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop
  - EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule(TimeSpan,Action{`0,`1},System.Object)
  - EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations
  - EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Services.TimeService.FakeScheduler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Services.TimeService.FakeScheduler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Services.TimeService.FakeScheduler.#ctor(EventStore.Core.Services.TimerService.ITimer,EventStore.Core.Services.TimerService.ITimeProvider)
  commentId: M:EventStore.Core.Tests.Services.TimeService.FakeScheduler.#ctor(EventStore.Core.Services.TimerService.ITimer,EventStore.Core.Services.TimerService.ITimeProvider)
  id: '#ctor(EventStore.Core.Services.TimerService.ITimer,EventStore.Core.Services.TimerService.ITimeProvider)'
  parent: EventStore.Core.Tests.Services.TimeService.FakeScheduler
  langs:
  - csharp
  - vb
  name: FakeScheduler(ITimer, ITimeProvider)
  nameWithType: FakeScheduler.FakeScheduler(ITimer, ITimeProvider)
  fullName: EventStore.Core.Tests.Services.TimeService.FakeScheduler.FakeScheduler(EventStore.Core.Services.TimerService.ITimer, EventStore.Core.Services.TimerService.ITimeProvider)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 12
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: public FakeScheduler(ITimer timer, ITimeProvider timeProvider)
    parameters:
    - id: timer
      type: EventStore.Core.Services.TimerService.ITimer
    - id: timeProvider
      type: EventStore.Core.Services.TimerService.ITimeProvider
    content.vb: Public Sub New(timer As ITimer, timeProvider As ITimeProvider)
  overload: EventStore.Core.Tests.Services.TimeService.FakeScheduler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.TimeService.FakeScheduler.TriggerProcessing
  commentId: M:EventStore.Core.Tests.Services.TimeService.FakeScheduler.TriggerProcessing
  id: TriggerProcessing
  parent: EventStore.Core.Tests.Services.TimeService.FakeScheduler
  langs:
  - csharp
  - vb
  name: TriggerProcessing()
  nameWithType: FakeScheduler.TriggerProcessing()
  fullName: EventStore.Core.Tests.Services.TimeService.FakeScheduler.TriggerProcessing()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TriggerProcessing
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 16
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: public void TriggerProcessing()
    content.vb: Public Sub TriggerProcessing
  overload: EventStore.Core.Tests.Services.TimeService.FakeScheduler.TriggerProcessing*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Services.TimeService
  commentId: N:EventStore.Core.Tests.Services.TimeService
  isExternal: false
  name: EventStore.Core.Tests.Services.TimeService
  nameWithType: EventStore.Core.Tests.Services.TimeService
  fullName: EventStore.Core.Tests.Services.TimeService
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Services.TimerService.TimerBasedScheduler
  commentId: T:EventStore.Core.Services.TimerService.TimerBasedScheduler
  parent: EventStore.Core.Services.TimerService
  isExternal: false
  name: TimerBasedScheduler
  nameWithType: TimerBasedScheduler
  fullName: EventStore.Core.Services.TimerService.TimerBasedScheduler
- uid: EventStore.Core.Services.TimerService.IScheduler
  commentId: T:EventStore.Core.Services.TimerService.IScheduler
  parent: EventStore.Core.Services.TimerService
  isExternal: false
  name: IScheduler
  nameWithType: IScheduler
  fullName: EventStore.Core.Services.TimerService.IScheduler
- uid: IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
- uid: EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop
  commentId: M:EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop
  parent: EventStore.Core.Services.TimerService.TimerBasedScheduler
  isExternal: false
  name: Stop()
  nameWithType: TimerBasedScheduler.Stop()
  fullName: EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop()
  spec.csharp:
  - uid: EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop
    name: Stop
    nameWithType: TimerBasedScheduler.Stop
    fullName: EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop
    name: Stop
    nameWithType: TimerBasedScheduler.Stop
    fullName: EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule(TimeSpan,Action{`0,`1},System.Object)
  commentId: M:EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule(TimeSpan,Action{`0,`1},System.Object)
  parent: EventStore.Core.Services.TimerService.TimerBasedScheduler
  isExternal: true
  name: Schedule(TimeSpan, Action<, >, Object)
  nameWithType: TimerBasedScheduler.Schedule(TimeSpan, Action<, >, Object)
  fullName: EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule(TimeSpan, Action<, >, System.Object)
  nameWithType.vb: TimerBasedScheduler.Schedule(TimeSpan, Action(Of , ), Object)
  fullName.vb: EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule(TimeSpan, Action(Of , ), System.Object)
  name.vb: Schedule(TimeSpan, Action(Of , ), Object)
  spec.csharp:
  - uid: EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule(TimeSpan,Action{`0,`1},System.Object)
    name: Schedule
    nameWithType: TimerBasedScheduler.Schedule
    fullName: EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule(TimeSpan,Action{`0,`1},System.Object)
    name: Schedule
    nameWithType: TimerBasedScheduler.Schedule
    fullName: EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule
  - name: (
    nameWithType: (
    fullName: (
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations
  commentId: M:EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations
  parent: EventStore.Core.Services.TimerService.TimerBasedScheduler
  isExternal: false
  name: ProcessOperations()
  nameWithType: TimerBasedScheduler.ProcessOperations()
  fullName: EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations()
  spec.csharp:
  - uid: EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations
    name: ProcessOperations
    nameWithType: TimerBasedScheduler.ProcessOperations
    fullName: EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations
    name: ProcessOperations
    nameWithType: TimerBasedScheduler.ProcessOperations
    fullName: EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose
  commentId: M:EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose
  parent: EventStore.Core.Services.TimerService.TimerBasedScheduler
  isExternal: false
  name: Dispose()
  nameWithType: TimerBasedScheduler.Dispose()
  fullName: EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose()
  spec.csharp:
  - uid: EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose
    name: Dispose
    nameWithType: TimerBasedScheduler.Dispose
    fullName: EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose
    name: Dispose
    nameWithType: TimerBasedScheduler.Dispose
    fullName: EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.TimeService.FakeScheduler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<FakeScheduler>()
  nameWithType: ProtobufExtensions.Serialize<FakeScheduler>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.TimeService.FakeScheduler>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of FakeScheduler)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.TimeService.FakeScheduler)()
  name.vb: Serialize(Of FakeScheduler)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<FakeScheduler>
    nameWithType: ProtobufExtensions.Serialize<FakeScheduler>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.TimeService.FakeScheduler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of FakeScheduler)
    nameWithType: ProtobufExtensions.Serialize(Of FakeScheduler)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.TimeService.FakeScheduler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.TimeService.FakeScheduler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<FakeScheduler>()
  nameWithType: ProtobufExtensions.SerializeToArray<FakeScheduler>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.TimeService.FakeScheduler>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of FakeScheduler)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.TimeService.FakeScheduler)()
  name.vb: SerializeToArray(Of FakeScheduler)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<FakeScheduler>
    nameWithType: ProtobufExtensions.SerializeToArray<FakeScheduler>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.TimeService.FakeScheduler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of FakeScheduler)
    nameWithType: ProtobufExtensions.SerializeToArray(Of FakeScheduler)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.TimeService.FakeScheduler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.TimerService
  commentId: N:EventStore.Core.Services.TimerService
  isExternal: false
  name: EventStore.Core.Services.TimerService
  nameWithType: EventStore.Core.Services.TimerService
  fullName: EventStore.Core.Services.TimerService
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Services.TimeService.FakeScheduler.#ctor*
  commentId: Overload:EventStore.Core.Tests.Services.TimeService.FakeScheduler.#ctor
  isExternal: false
  name: FakeScheduler
  nameWithType: FakeScheduler.FakeScheduler
  fullName: EventStore.Core.Tests.Services.TimeService.FakeScheduler.FakeScheduler
- uid: EventStore.Core.Services.TimerService.ITimer
  commentId: T:EventStore.Core.Services.TimerService.ITimer
  parent: EventStore.Core.Services.TimerService
  isExternal: false
  name: ITimer
  nameWithType: ITimer
  fullName: EventStore.Core.Services.TimerService.ITimer
- uid: EventStore.Core.Services.TimerService.ITimeProvider
  commentId: T:EventStore.Core.Services.TimerService.ITimeProvider
  parent: EventStore.Core.Services.TimerService
  isExternal: false
  name: ITimeProvider
  nameWithType: ITimeProvider
  fullName: EventStore.Core.Services.TimerService.ITimeProvider
- uid: EventStore.Core.Tests.Services.TimeService.FakeScheduler.TriggerProcessing*
  commentId: Overload:EventStore.Core.Tests.Services.TimeService.FakeScheduler.TriggerProcessing
  isExternal: false
  name: TriggerProcessing
  nameWithType: FakeScheduler.TriggerProcessing
  fullName: EventStore.Core.Tests.Services.TimeService.FakeScheduler.TriggerProcessing

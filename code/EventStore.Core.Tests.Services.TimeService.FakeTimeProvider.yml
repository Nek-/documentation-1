### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider
  commentId: T:EventStore.Core.Tests.Services.TimeService.FakeTimeProvider
  id: FakeTimeProvider
  parent: EventStore.Core.Tests.Services.TimeService
  children:
  - EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.#ctor
  - EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.AddTime(TimeSpan)
  - EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.Now
  - EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.SetNewTime(DateTime)
  langs:
  - csharp
  - vb
  name: FakeTimeProvider
  nameWithType: FakeTimeProvider
  fullName: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: FakeTimeProvider
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 22
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: 'public class FakeTimeProvider : object, ITimeProvider'
    content.vb: >-
      Public Class FakeTimeProvider

          Inherits Object

          Implements ITimeProvider
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Services.TimerService.ITimeProvider
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.Now
  commentId: P:EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.Now
  id: Now
  parent: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider
  langs:
  - csharp
  - vb
  name: Now
  nameWithType: FakeTimeProvider.Now
  fullName: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.Now
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Now
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 24
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: public DateTime Now { get; }
    parameters: []
    return:
      type: DateTime
    content.vb: Public ReadOnly Property Now As DateTime
  overload: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.Now*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.#ctor
  commentId: M:EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.#ctor
  id: '#ctor'
  parent: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider
  langs:
  - csharp
  - vb
  name: FakeTimeProvider()
  nameWithType: FakeTimeProvider.FakeTimeProvider()
  fullName: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.FakeTimeProvider()
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 26
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: public FakeTimeProvider()
    content.vb: Public Sub New
  overload: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.SetNewTime(DateTime)
  commentId: M:EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.SetNewTime(DateTime)
  id: SetNewTime(DateTime)
  parent: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider
  langs:
  - csharp
  - vb
  name: SetNewTime(DateTime)
  nameWithType: FakeTimeProvider.SetNewTime(DateTime)
  fullName: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.SetNewTime(DateTime)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetNewTime
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 31
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: public void SetNewTime(DateTime newTime)
    parameters:
    - id: newTime
      type: DateTime
    content.vb: Public Sub SetNewTime(newTime As DateTime)
  overload: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.SetNewTime*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.AddTime(TimeSpan)
  commentId: M:EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.AddTime(TimeSpan)
  id: AddTime(TimeSpan)
  parent: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider
  langs:
  - csharp
  - vb
  name: AddTime(TimeSpan)
  nameWithType: FakeTimeProvider.AddTime(TimeSpan)
  fullName: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.AddTime(TimeSpan)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AddTime
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 36
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: public void AddTime(TimeSpan timeSpan)
    parameters:
    - id: timeSpan
      type: TimeSpan
    content.vb: Public Sub AddTime(timeSpan As TimeSpan)
  overload: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.AddTime*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Services.TimeService
  commentId: N:EventStore.Core.Tests.Services.TimeService
  isExternal: false
  name: EventStore.Core.Tests.Services.TimeService
  nameWithType: EventStore.Core.Tests.Services.TimeService
  fullName: EventStore.Core.Tests.Services.TimeService
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Services.TimerService.ITimeProvider
  commentId: T:EventStore.Core.Services.TimerService.ITimeProvider
  parent: EventStore.Core.Services.TimerService
  isExternal: false
  name: ITimeProvider
  nameWithType: ITimeProvider
  fullName: EventStore.Core.Services.TimerService.ITimeProvider
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<FakeTimeProvider>()
  nameWithType: ProtobufExtensions.Serialize<FakeTimeProvider>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.TimeService.FakeTimeProvider>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of FakeTimeProvider)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.TimeService.FakeTimeProvider)()
  name.vb: Serialize(Of FakeTimeProvider)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<FakeTimeProvider>
    nameWithType: ProtobufExtensions.Serialize<FakeTimeProvider>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.TimeService.FakeTimeProvider>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of FakeTimeProvider)
    nameWithType: ProtobufExtensions.Serialize(Of FakeTimeProvider)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.TimeService.FakeTimeProvider)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<FakeTimeProvider>()
  nameWithType: ProtobufExtensions.SerializeToArray<FakeTimeProvider>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.TimeService.FakeTimeProvider>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of FakeTimeProvider)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.TimeService.FakeTimeProvider)()
  name.vb: SerializeToArray(Of FakeTimeProvider)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<FakeTimeProvider>
    nameWithType: ProtobufExtensions.SerializeToArray<FakeTimeProvider>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.TimeService.FakeTimeProvider>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of FakeTimeProvider)
    nameWithType: ProtobufExtensions.SerializeToArray(Of FakeTimeProvider)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.TimeService.FakeTimeProvider)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.TimerService
  commentId: N:EventStore.Core.Services.TimerService
  isExternal: false
  name: EventStore.Core.Services.TimerService
  nameWithType: EventStore.Core.Services.TimerService
  fullName: EventStore.Core.Services.TimerService
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.Now*
  commentId: Overload:EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.Now
  isExternal: false
  name: Now
  nameWithType: FakeTimeProvider.Now
  fullName: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.Now
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.#ctor*
  commentId: Overload:EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.#ctor
  isExternal: false
  name: FakeTimeProvider
  nameWithType: FakeTimeProvider.FakeTimeProvider
  fullName: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.FakeTimeProvider
- uid: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.SetNewTime*
  commentId: Overload:EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.SetNewTime
  isExternal: false
  name: SetNewTime
  nameWithType: FakeTimeProvider.SetNewTime
  fullName: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.SetNewTime
- uid: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.AddTime*
  commentId: Overload:EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.AddTime
  isExternal: false
  name: AddTime
  nameWithType: FakeTimeProvider.AddTime
  fullName: EventStore.Core.Tests.Services.TimeService.FakeTimeProvider.AddTime
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan

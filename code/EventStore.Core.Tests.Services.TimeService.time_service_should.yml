### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should
  commentId: T:EventStore.Core.Tests.Services.TimeService.time_service_should
  id: time_service_should
  parent: EventStore.Core.Tests.Services.TimeService
  children:
  - EventStore.Core.Tests.Services.TimeService.time_service_should.fire_all_timeouts_after_long_pause
  - EventStore.Core.Tests.Services.TimeService.time_service_should.fire_all_timeouts_that_are_scheduled_at_same_time
  - EventStore.Core.Tests.Services.TimeService.time_service_should.fire_timeouts_gradually
  - EventStore.Core.Tests.Services.TimeService.time_service_should.Handle(EventStore.Core.Tests.Services.TimeService.TestResponseMessage)
  - EventStore.Core.Tests.Services.TimeService.time_service_should.not_respond_until_time_elapses
  - EventStore.Core.Tests.Services.TimeService.time_service_should.respond_even_if_fired_too_late
  - EventStore.Core.Tests.Services.TimeService.time_service_should.respond_in_correct_time
  - EventStore.Core.Tests.Services.TimeService.time_service_should.respond_with_correct_message
  - EventStore.Core.Tests.Services.TimeService.time_service_should.SetUp
  - EventStore.Core.Tests.Services.TimeService.time_service_should.TearDown
  langs:
  - csharp
  - vb
  name: time_service_should
  nameWithType: time_service_should
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: time_service_should
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 67
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: 'public class time_service_should : object, IHandle<TestResponseMessage>'
    content.vb: >-
      Public Class time_service_should

          Inherits Object

          Implements IHandle(Of TestResponseMessage)
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Services.TimeService.TestResponseMessage}
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Services.TimeService.time_service_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Services.TimeService.time_service_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.SetUp
  commentId: M:EventStore.Core.Tests.Services.TimeService.time_service_should.SetUp
  id: SetUp
  parent: EventStore.Core.Tests.Services.TimeService.time_service_should
  langs:
  - csharp
  - vb
  name: SetUp()
  nameWithType: time_service_should.SetUp()
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.SetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetUp
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 76
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: public void SetUp()
    content.vb: Public Sub SetUp
  overload: EventStore.Core.Tests.Services.TimeService.time_service_should.SetUp*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.Handle(EventStore.Core.Tests.Services.TimeService.TestResponseMessage)
  commentId: M:EventStore.Core.Tests.Services.TimeService.time_service_should.Handle(EventStore.Core.Tests.Services.TimeService.TestResponseMessage)
  id: Handle(EventStore.Core.Tests.Services.TimeService.TestResponseMessage)
  parent: EventStore.Core.Tests.Services.TimeService.time_service_should
  langs:
  - csharp
  - vb
  name: Handle(TestResponseMessage)
  nameWithType: time_service_should.Handle(TestResponseMessage)
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.Handle(EventStore.Core.Tests.Services.TimeService.TestResponseMessage)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 92
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: public void Handle(TestResponseMessage message)
    parameters:
    - id: message
      type: EventStore.Core.Tests.Services.TimeService.TestResponseMessage
    content.vb: Public Sub Handle(message As TestResponseMessage)
  overload: EventStore.Core.Tests.Services.TimeService.time_service_should.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Services.TimeService.TestResponseMessage}.Handle(EventStore.Core.Tests.Services.TimeService.TestResponseMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.TearDown
  commentId: M:EventStore.Core.Tests.Services.TimeService.time_service_should.TearDown
  id: TearDown
  parent: EventStore.Core.Tests.Services.TimeService.time_service_should
  langs:
  - csharp
  - vb
  name: TearDown()
  nameWithType: time_service_should.TearDown()
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.TearDown()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TearDown
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 97
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: public void TearDown()
    content.vb: Public Sub TearDown
  overload: EventStore.Core.Tests.Services.TimeService.time_service_should.TearDown*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.respond_with_correct_message
  commentId: M:EventStore.Core.Tests.Services.TimeService.time_service_should.respond_with_correct_message
  id: respond_with_correct_message
  parent: EventStore.Core.Tests.Services.TimeService.time_service_should
  langs:
  - csharp
  - vb
  name: respond_with_correct_message()
  nameWithType: time_service_should.respond_with_correct_message()
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.respond_with_correct_message()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: respond_with_correct_message
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 102
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: public void respond_with_correct_message()
    content.vb: Public Sub respond_with_correct_message
  overload: EventStore.Core.Tests.Services.TimeService.time_service_should.respond_with_correct_message*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.respond_even_if_fired_too_late
  commentId: M:EventStore.Core.Tests.Services.TimeService.time_service_should.respond_even_if_fired_too_late
  id: respond_even_if_fired_too_late
  parent: EventStore.Core.Tests.Services.TimeService.time_service_should
  langs:
  - csharp
  - vb
  name: respond_even_if_fired_too_late()
  nameWithType: time_service_should.respond_even_if_fired_too_late()
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.respond_even_if_fired_too_late()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: respond_even_if_fired_too_late
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 113
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: public void respond_even_if_fired_too_late()
    content.vb: Public Sub respond_even_if_fired_too_late
  overload: EventStore.Core.Tests.Services.TimeService.time_service_should.respond_even_if_fired_too_late*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.not_respond_until_time_elapses
  commentId: M:EventStore.Core.Tests.Services.TimeService.time_service_should.not_respond_until_time_elapses
  id: not_respond_until_time_elapses
  parent: EventStore.Core.Tests.Services.TimeService.time_service_should
  langs:
  - csharp
  - vb
  name: not_respond_until_time_elapses()
  nameWithType: time_service_should.not_respond_until_time_elapses()
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.not_respond_until_time_elapses()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: not_respond_until_time_elapses
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 122
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: public void not_respond_until_time_elapses()
    content.vb: Public Sub not_respond_until_time_elapses
  overload: EventStore.Core.Tests.Services.TimeService.time_service_should.not_respond_until_time_elapses*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.respond_in_correct_time
  commentId: M:EventStore.Core.Tests.Services.TimeService.time_service_should.respond_in_correct_time
  id: respond_in_correct_time
  parent: EventStore.Core.Tests.Services.TimeService.time_service_should
  langs:
  - csharp
  - vb
  name: respond_in_correct_time()
  nameWithType: time_service_should.respond_in_correct_time()
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.respond_in_correct_time()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: respond_in_correct_time
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 133
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: public void respond_in_correct_time()
    content.vb: Public Sub respond_in_correct_time
  overload: EventStore.Core.Tests.Services.TimeService.time_service_should.respond_in_correct_time*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.fire_timeouts_gradually
  commentId: M:EventStore.Core.Tests.Services.TimeService.time_service_should.fire_timeouts_gradually
  id: fire_timeouts_gradually
  parent: EventStore.Core.Tests.Services.TimeService.time_service_should
  langs:
  - csharp
  - vb
  name: fire_timeouts_gradually()
  nameWithType: time_service_should.fire_timeouts_gradually()
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.fire_timeouts_gradually()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: fire_timeouts_gradually
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 144
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: public void fire_timeouts_gradually()
    content.vb: Public Sub fire_timeouts_gradually
  overload: EventStore.Core.Tests.Services.TimeService.time_service_should.fire_timeouts_gradually*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.fire_all_timeouts_that_are_scheduled_at_same_time
  commentId: M:EventStore.Core.Tests.Services.TimeService.time_service_should.fire_all_timeouts_that_are_scheduled_at_same_time
  id: fire_all_timeouts_that_are_scheduled_at_same_time
  parent: EventStore.Core.Tests.Services.TimeService.time_service_should
  langs:
  - csharp
  - vb
  name: fire_all_timeouts_that_are_scheduled_at_same_time()
  nameWithType: time_service_should.fire_all_timeouts_that_are_scheduled_at_same_time()
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.fire_all_timeouts_that_are_scheduled_at_same_time()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: fire_all_timeouts_that_are_scheduled_at_same_time
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 183
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: public void fire_all_timeouts_that_are_scheduled_at_same_time()
    content.vb: Public Sub fire_all_timeouts_that_are_scheduled_at_same_time
  overload: EventStore.Core.Tests.Services.TimeService.time_service_should.fire_all_timeouts_that_are_scheduled_at_same_time*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.fire_all_timeouts_after_long_pause
  commentId: M:EventStore.Core.Tests.Services.TimeService.time_service_should.fire_all_timeouts_after_long_pause
  id: fire_all_timeouts_after_long_pause
  parent: EventStore.Core.Tests.Services.TimeService.time_service_should
  langs:
  - csharp
  - vb
  name: fire_all_timeouts_after_long_pause()
  nameWithType: time_service_should.fire_all_timeouts_after_long_pause()
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.fire_all_timeouts_after_long_pause()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: fire_all_timeouts_after_long_pause
    path: ../EventStore/src/EventStore.Core.Tests/Services/TimeService/time_service_should.cs
    startLine: 196
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.TimeService
  syntax:
    content: public void fire_all_timeouts_after_long_pause()
    content.vb: Public Sub fire_all_timeouts_after_long_pause
  overload: EventStore.Core.Tests.Services.TimeService.time_service_should.fire_all_timeouts_after_long_pause*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Services.TimeService
  commentId: N:EventStore.Core.Tests.Services.TimeService
  isExternal: false
  name: EventStore.Core.Tests.Services.TimeService
  nameWithType: EventStore.Core.Tests.Services.TimeService
  fullName: EventStore.Core.Tests.Services.TimeService
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Services.TimeService.TestResponseMessage}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Services.TimeService.TestResponseMessage}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<TestResponseMessage>
  nameWithType: IHandle<TestResponseMessage>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Tests.Services.TimeService.TestResponseMessage>
  nameWithType.vb: IHandle(Of TestResponseMessage)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Tests.Services.TimeService.TestResponseMessage)
  name.vb: IHandle(Of TestResponseMessage)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Tests.Services.TimeService.TestResponseMessage
    name: TestResponseMessage
    nameWithType: TestResponseMessage
    fullName: EventStore.Core.Tests.Services.TimeService.TestResponseMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Tests.Services.TimeService.TestResponseMessage
    name: TestResponseMessage
    nameWithType: TestResponseMessage
    fullName: EventStore.Core.Tests.Services.TimeService.TestResponseMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<time_service_should>()
  nameWithType: ProtobufExtensions.Serialize<time_service_should>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.TimeService.time_service_should>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of time_service_should)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.TimeService.time_service_should)()
  name.vb: Serialize(Of time_service_should)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<time_service_should>
    nameWithType: ProtobufExtensions.Serialize<time_service_should>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.TimeService.time_service_should>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of time_service_should)
    nameWithType: ProtobufExtensions.Serialize(Of time_service_should)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.TimeService.time_service_should)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<time_service_should>()
  nameWithType: ProtobufExtensions.SerializeToArray<time_service_should>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.TimeService.time_service_should>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of time_service_should)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.TimeService.time_service_should)()
  name.vb: SerializeToArray(Of time_service_should)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<time_service_should>
    nameWithType: ProtobufExtensions.SerializeToArray<time_service_should>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.TimeService.time_service_should>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of time_service_should)
    nameWithType: ProtobufExtensions.SerializeToArray(Of time_service_should)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.TimeService.time_service_should)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  isExternal: false
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.SetUp*
  commentId: Overload:EventStore.Core.Tests.Services.TimeService.time_service_should.SetUp
  isExternal: false
  name: SetUp
  nameWithType: time_service_should.SetUp
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.SetUp
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.Handle*
  commentId: Overload:EventStore.Core.Tests.Services.TimeService.time_service_should.Handle
  isExternal: false
  name: Handle
  nameWithType: time_service_should.Handle
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Services.TimeService.TestResponseMessage}.Handle(EventStore.Core.Tests.Services.TimeService.TestResponseMessage)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Services.TimeService.TestResponseMessage}.Handle(EventStore.Core.Tests.Services.TimeService.TestResponseMessage)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Tests.Services.TimeService.TestResponseMessage}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(TestResponseMessage)
  nameWithType: IHandle<TestResponseMessage>.Handle(TestResponseMessage)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Tests.Services.TimeService.TestResponseMessage>.Handle(EventStore.Core.Tests.Services.TimeService.TestResponseMessage)
  nameWithType.vb: IHandle(Of TestResponseMessage).Handle(TestResponseMessage)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Tests.Services.TimeService.TestResponseMessage).Handle(EventStore.Core.Tests.Services.TimeService.TestResponseMessage)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<TestResponseMessage>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Tests.Services.TimeService.TestResponseMessage>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.Services.TimeService.TestResponseMessage
    name: TestResponseMessage
    nameWithType: TestResponseMessage
    fullName: EventStore.Core.Tests.Services.TimeService.TestResponseMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of TestResponseMessage).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Tests.Services.TimeService.TestResponseMessage).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.Services.TimeService.TestResponseMessage
    name: TestResponseMessage
    nameWithType: TestResponseMessage
    fullName: EventStore.Core.Tests.Services.TimeService.TestResponseMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.TimeService.TestResponseMessage
  commentId: T:EventStore.Core.Tests.Services.TimeService.TestResponseMessage
  parent: EventStore.Core.Tests.Services.TimeService
  isExternal: false
  name: TestResponseMessage
  nameWithType: TestResponseMessage
  fullName: EventStore.Core.Tests.Services.TimeService.TestResponseMessage
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  isExternal: false
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.TearDown*
  commentId: Overload:EventStore.Core.Tests.Services.TimeService.time_service_should.TearDown
  isExternal: false
  name: TearDown
  nameWithType: time_service_should.TearDown
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.TearDown
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.respond_with_correct_message*
  commentId: Overload:EventStore.Core.Tests.Services.TimeService.time_service_should.respond_with_correct_message
  isExternal: false
  name: respond_with_correct_message
  nameWithType: time_service_should.respond_with_correct_message
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.respond_with_correct_message
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.respond_even_if_fired_too_late*
  commentId: Overload:EventStore.Core.Tests.Services.TimeService.time_service_should.respond_even_if_fired_too_late
  isExternal: false
  name: respond_even_if_fired_too_late
  nameWithType: time_service_should.respond_even_if_fired_too_late
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.respond_even_if_fired_too_late
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.not_respond_until_time_elapses*
  commentId: Overload:EventStore.Core.Tests.Services.TimeService.time_service_should.not_respond_until_time_elapses
  isExternal: false
  name: not_respond_until_time_elapses
  nameWithType: time_service_should.not_respond_until_time_elapses
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.not_respond_until_time_elapses
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.respond_in_correct_time*
  commentId: Overload:EventStore.Core.Tests.Services.TimeService.time_service_should.respond_in_correct_time
  isExternal: false
  name: respond_in_correct_time
  nameWithType: time_service_should.respond_in_correct_time
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.respond_in_correct_time
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.fire_timeouts_gradually*
  commentId: Overload:EventStore.Core.Tests.Services.TimeService.time_service_should.fire_timeouts_gradually
  isExternal: false
  name: fire_timeouts_gradually
  nameWithType: time_service_should.fire_timeouts_gradually
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.fire_timeouts_gradually
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.fire_all_timeouts_that_are_scheduled_at_same_time*
  commentId: Overload:EventStore.Core.Tests.Services.TimeService.time_service_should.fire_all_timeouts_that_are_scheduled_at_same_time
  isExternal: false
  name: fire_all_timeouts_that_are_scheduled_at_same_time
  nameWithType: time_service_should.fire_all_timeouts_that_are_scheduled_at_same_time
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.fire_all_timeouts_that_are_scheduled_at_same_time
- uid: EventStore.Core.Tests.Services.TimeService.time_service_should.fire_all_timeouts_after_long_pause*
  commentId: Overload:EventStore.Core.Tests.Services.TimeService.time_service_should.fire_all_timeouts_after_long_pause
  isExternal: false
  name: fire_all_timeouts_after_long_pause
  nameWithType: time_service_should.fire_all_timeouts_after_long_pause
  fullName: EventStore.Core.Tests.Services.TimeService.time_service_should.fire_all_timeouts_after_long_pause

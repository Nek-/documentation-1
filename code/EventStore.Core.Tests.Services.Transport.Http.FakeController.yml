### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Services.Transport.Http.FakeController
  commentId: T:EventStore.Core.Tests.Services.Transport.Http.FakeController
  id: FakeController
  parent: EventStore.Core.Tests.Services.Transport.Http
  children:
  - EventStore.Core.Tests.Services.Transport.Http.FakeController.#ctor(System.Int32,EventStore.Core.Services.Transport.Http.IUriRouter)
  - EventStore.Core.Tests.Services.Transport.Http.FakeController.BoundRoutes
  - EventStore.Core.Tests.Services.Transport.Http.FakeController.CountdownEvent
  - EventStore.Core.Tests.Services.Transport.Http.FakeController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  - EventStore.Core.Tests.Services.Transport.Http.FakeController.SupportedCodecs
  langs:
  - csharp
  - vb
  name: FakeController
  nameWithType: FakeController
  fullName: EventStore.Core.Tests.Services.Transport.Http.FakeController
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/speed_test.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: FakeController
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/speed_test.cs
    startLine: 18
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: 'public class FakeController : object, IHttpController'
    content.vb: >-
      Public Class FakeController

          Inherits Object

          Implements IHttpController
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Services.Transport.Http.IHttpController
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Services.Transport.Http.FakeController.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Services.Transport.Http.FakeController.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Services.Transport.Http.FakeController.SupportedCodecs
  commentId: F:EventStore.Core.Tests.Services.Transport.Http.FakeController.SupportedCodecs
  id: SupportedCodecs
  parent: EventStore.Core.Tests.Services.Transport.Http.FakeController
  langs:
  - csharp
  - vb
  name: SupportedCodecs
  nameWithType: FakeController.SupportedCodecs
  fullName: EventStore.Core.Tests.Services.Transport.Http.FakeController.SupportedCodecs
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/speed_test.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SupportedCodecs
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/speed_test.cs
    startLine: 21
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public static readonly ICodec[] SupportedCodecs
    return:
      type: EventStore.Transport.Http.ICodec[]
    content.vb: Public Shared ReadOnly SupportedCodecs As ICodec()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Core.Tests.Services.Transport.Http.FakeController.BoundRoutes
  commentId: F:EventStore.Core.Tests.Services.Transport.Http.FakeController.BoundRoutes
  id: BoundRoutes
  parent: EventStore.Core.Tests.Services.Transport.Http.FakeController
  langs:
  - csharp
  - vb
  name: BoundRoutes
  nameWithType: FakeController.BoundRoutes
  fullName: EventStore.Core.Tests.Services.Transport.Http.FakeController.BoundRoutes
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/speed_test.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: BoundRoutes
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/speed_test.cs
    startLine: 24
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public readonly List<Tuple<string, string>> BoundRoutes
    return:
      type: List{Tuple{System.String,System.String}}
    content.vb: Public ReadOnly BoundRoutes As List(Of Tuple(Of String, String))
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Services.Transport.Http.FakeController.CountdownEvent
  commentId: F:EventStore.Core.Tests.Services.Transport.Http.FakeController.CountdownEvent
  id: CountdownEvent
  parent: EventStore.Core.Tests.Services.Transport.Http.FakeController
  langs:
  - csharp
  - vb
  name: CountdownEvent
  nameWithType: FakeController.CountdownEvent
  fullName: EventStore.Core.Tests.Services.Transport.Http.FakeController.CountdownEvent
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/speed_test.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CountdownEvent
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/speed_test.cs
    startLine: 25
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public readonly CountdownEvent CountdownEvent
    return:
      type: CountdownEvent
    content.vb: Public ReadOnly CountdownEvent As CountdownEvent
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.Services.Transport.Http.FakeController.#ctor(System.Int32,EventStore.Core.Services.Transport.Http.IUriRouter)
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.FakeController.#ctor(System.Int32,EventStore.Core.Services.Transport.Http.IUriRouter)
  id: '#ctor(System.Int32,EventStore.Core.Services.Transport.Http.IUriRouter)'
  parent: EventStore.Core.Tests.Services.Transport.Http.FakeController
  langs:
  - csharp
  - vb
  name: FakeController(Int32, IUriRouter)
  nameWithType: FakeController.FakeController(Int32, IUriRouter)
  fullName: EventStore.Core.Tests.Services.Transport.Http.FakeController.FakeController(System.Int32, EventStore.Core.Services.Transport.Http.IUriRouter)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/speed_test.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/speed_test.cs
    startLine: 27
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public FakeController(int reqCount, IUriRouter router)
    parameters:
    - id: reqCount
      type: System.Int32
    - id: router
      type: EventStore.Core.Services.Transport.Http.IUriRouter
    content.vb: Public Sub New(reqCount As Integer, router As IUriRouter)
  overload: EventStore.Core.Tests.Services.Transport.Http.FakeController.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.FakeController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.FakeController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  id: Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  parent: EventStore.Core.Tests.Services.Transport.Http.FakeController
  langs:
  - csharp
  - vb
  name: Subscribe(IHttpService)
  nameWithType: FakeController.Subscribe(IHttpService)
  fullName: EventStore.Core.Tests.Services.Transport.Http.FakeController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/speed_test.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Subscribe
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/speed_test.cs
    startLine: 33
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void Subscribe(IHttpService http)
    parameters:
    - id: http
      type: EventStore.Core.Services.Transport.Http.IHttpService
    content.vb: Public Sub Subscribe(http As IHttpService)
  overload: EventStore.Core.Tests.Services.Transport.Http.FakeController.Subscribe*
  implements:
  - EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Services.Transport.Http
  commentId: N:EventStore.Core.Tests.Services.Transport.Http
  isExternal: false
  name: EventStore.Core.Tests.Services.Transport.Http
  nameWithType: EventStore.Core.Tests.Services.Transport.Http
  fullName: EventStore.Core.Tests.Services.Transport.Http
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Services.Transport.Http.IHttpController
  commentId: T:EventStore.Core.Services.Transport.Http.IHttpController
  parent: EventStore.Core.Services.Transport.Http
  isExternal: false
  name: IHttpController
  nameWithType: IHttpController
  fullName: EventStore.Core.Services.Transport.Http.IHttpController
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Transport.Http.FakeController.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<FakeController>()
  nameWithType: ProtobufExtensions.Serialize<FakeController>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Transport.Http.FakeController>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of FakeController)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Transport.Http.FakeController)()
  name.vb: Serialize(Of FakeController)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<FakeController>
    nameWithType: ProtobufExtensions.Serialize<FakeController>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Transport.Http.FakeController>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of FakeController)
    nameWithType: ProtobufExtensions.Serialize(Of FakeController)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Transport.Http.FakeController)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Transport.Http.FakeController.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<FakeController>()
  nameWithType: ProtobufExtensions.SerializeToArray<FakeController>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Transport.Http.FakeController>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of FakeController)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Transport.Http.FakeController)()
  name.vb: SerializeToArray(Of FakeController)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<FakeController>
    nameWithType: ProtobufExtensions.SerializeToArray<FakeController>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Transport.Http.FakeController>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of FakeController)
    nameWithType: ProtobufExtensions.SerializeToArray(Of FakeController)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Transport.Http.FakeController)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http
  commentId: N:EventStore.Core.Services.Transport.Http
  isExternal: false
  name: EventStore.Core.Services.Transport.Http
  nameWithType: EventStore.Core.Services.Transport.Http
  fullName: EventStore.Core.Services.Transport.Http
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Transport.Http.ICodec[]
  name: ICodec[]
  nameWithType: ICodec[]
  fullName: EventStore.Transport.Http.ICodec[]
  nameWithType.vb: ICodec()
  fullName.vb: EventStore.Transport.Http.ICodec()
  name.vb: ICodec()
  spec.csharp:
  - uid: EventStore.Transport.Http.ICodec
    name: ICodec
    nameWithType: ICodec
    fullName: EventStore.Transport.Http.ICodec
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Transport.Http.ICodec
    name: ICodec
    nameWithType: ICodec
    fullName: EventStore.Transport.Http.ICodec
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: List{Tuple{System.String,System.String}}
  commentId: '!:List{Tuple{System.String,System.String}}'
  definition: List`1
  name: List<Tuple<String, String>>
  nameWithType: List<Tuple<String, String>>
  fullName: List<Tuple<System.String, System.String>>
  nameWithType.vb: List(Of Tuple(Of String, String))
  fullName.vb: List(Of Tuple(Of System.String, System.String))
  name.vb: List(Of Tuple(Of String, String))
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CountdownEvent
  isExternal: true
  name: CountdownEvent
  nameWithType: CountdownEvent
  fullName: CountdownEvent
- uid: EventStore.Core.Tests.Services.Transport.Http.FakeController.#ctor*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.FakeController.#ctor
  isExternal: false
  name: FakeController
  nameWithType: FakeController.FakeController
  fullName: EventStore.Core.Tests.Services.Transport.Http.FakeController.FakeController
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Services.Transport.Http.IUriRouter
  commentId: T:EventStore.Core.Services.Transport.Http.IUriRouter
  parent: EventStore.Core.Services.Transport.Http
  isExternal: false
  name: IUriRouter
  nameWithType: IUriRouter
  fullName: EventStore.Core.Services.Transport.Http.IUriRouter
- uid: EventStore.Core.Tests.Services.Transport.Http.FakeController.Subscribe*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.FakeController.Subscribe
  isExternal: false
  name: Subscribe
  nameWithType: FakeController.Subscribe
  fullName: EventStore.Core.Tests.Services.Transport.Http.FakeController.Subscribe
- uid: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  commentId: M:EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  parent: EventStore.Core.Services.Transport.Http.IHttpController
  isExternal: false
  name: Subscribe(IHttpService)
  nameWithType: IHttpController.Subscribe(IHttpService)
  fullName: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
    name: Subscribe
    nameWithType: IHttpController.Subscribe
    fullName: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Http.IHttpService
    name: IHttpService
    nameWithType: IHttpService
    fullName: EventStore.Core.Services.Transport.Http.IHttpService
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe(EventStore.Core.Services.Transport.Http.IHttpService)
    name: Subscribe
    nameWithType: IHttpController.Subscribe
    fullName: EventStore.Core.Services.Transport.Http.IHttpController.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Services.Transport.Http.IHttpService
    name: IHttpService
    nameWithType: IHttpService
    fullName: EventStore.Core.Services.Transport.Http.IHttpService
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.IHttpService
  commentId: T:EventStore.Core.Services.Transport.Http.IHttpService
  parent: EventStore.Core.Services.Transport.Http
  isExternal: false
  name: IHttpService
  nameWithType: IHttpService
  fullName: EventStore.Core.Services.Transport.Http.IHttpService

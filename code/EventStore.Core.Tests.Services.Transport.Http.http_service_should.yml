### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should
  commentId: T:EventStore.Core.Tests.Services.Transport.Http.http_service_should
  id: http_service_should
  parent: EventStore.Core.Tests.Services.Transport.Http
  children:
  - EventStore.Core.Tests.Services.Transport.Http.http_service_should.#ctor
  - EventStore.Core.Tests.Services.Transport.Http.http_service_should.handle_invalid_characters_in_url
  - EventStore.Core.Tests.Services.Transport.Http.http_service_should.ignore_shutdown_message_that_does_not_say_shut_down
  - EventStore.Core.Tests.Services.Transport.Http.http_service_should.react_to_shutdown_message_that_cause_process_exit
  - EventStore.Core.Tests.Services.Transport.Http.http_service_should.reply_with_404_to_every_request_when_there_are_no_registered_controllers
  - EventStore.Core.Tests.Services.Transport.Http.http_service_should.SetUp
  - EventStore.Core.Tests.Services.Transport.Http.http_service_should.start_after_system_message_system_init_published
  - EventStore.Core.Tests.Services.Transport.Http.http_service_should.TearDown
  - EventStore.Core.Tests.Services.Transport.Http.http_service_should.TestFixtureTearDown
  langs:
  - csharp
  - vb
  name: http_service_should
  nameWithType: http_service_should
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: http_service_should
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
    startLine: 15
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: 'public class http_service_should : object'
    content.vb: >-
      Public Class http_service_should

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Services.Transport.Http.http_service_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Services.Transport.Http.http_service_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.#ctor
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.http_service_should.#ctor
  id: '#ctor'
  parent: EventStore.Core.Tests.Services.Transport.Http.http_service_should
  langs:
  - csharp
  - vb
  name: http_service_should()
  nameWithType: http_service_should.http_service_should()
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.http_service_should()
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
    startLine: 21
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public http_service_should()
    content.vb: Public Sub New
  overload: EventStore.Core.Tests.Services.Transport.Http.http_service_should.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.SetUp
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.http_service_should.SetUp
  id: SetUp
  parent: EventStore.Core.Tests.Services.Transport.Http.http_service_should
  langs:
  - csharp
  - vb
  name: SetUp()
  nameWithType: http_service_should.SetUp()
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.SetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetUp
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
    startLine: 28
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void SetUp()
    content.vb: Public Sub SetUp
  overload: EventStore.Core.Tests.Services.Transport.Http.http_service_should.SetUp*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.TearDown
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.http_service_should.TearDown
  id: TearDown
  parent: EventStore.Core.Tests.Services.Transport.Http.http_service_should
  langs:
  - csharp
  - vb
  name: TearDown()
  nameWithType: http_service_should.TearDown()
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.TearDown()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TearDown
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
    startLine: 34
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void TearDown()
    content.vb: Public Sub TearDown
  overload: EventStore.Core.Tests.Services.Transport.Http.http_service_should.TearDown*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.http_service_should.TestFixtureTearDown
  id: TestFixtureTearDown
  parent: EventStore.Core.Tests.Services.Transport.Http.http_service_should
  langs:
  - csharp
  - vb
  name: TestFixtureTearDown()
  nameWithType: http_service_should.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.TestFixtureTearDown()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureTearDown
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
    startLine: 40
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void TestFixtureTearDown()
    content.vb: Public Sub TestFixtureTearDown
  overload: EventStore.Core.Tests.Services.Transport.Http.http_service_should.TestFixtureTearDown*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.start_after_system_message_system_init_published
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.http_service_should.start_after_system_message_system_init_published
  id: start_after_system_message_system_init_published
  parent: EventStore.Core.Tests.Services.Transport.Http.http_service_should
  langs:
  - csharp
  - vb
  name: start_after_system_message_system_init_published()
  nameWithType: http_service_should.start_after_system_message_system_init_published()
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.start_after_system_message_system_init_published()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: start_after_system_message_system_init_published
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
    startLine: 46
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void start_after_system_message_system_init_published()
    content.vb: Public Sub start_after_system_message_system_init_published
  overload: EventStore.Core.Tests.Services.Transport.Http.http_service_should.start_after_system_message_system_init_published*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.ignore_shutdown_message_that_does_not_say_shut_down
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.http_service_should.ignore_shutdown_message_that_does_not_say_shut_down
  id: ignore_shutdown_message_that_does_not_say_shut_down
  parent: EventStore.Core.Tests.Services.Transport.Http.http_service_should
  langs:
  - csharp
  - vb
  name: ignore_shutdown_message_that_does_not_say_shut_down()
  nameWithType: http_service_should.ignore_shutdown_message_that_does_not_say_shut_down()
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.ignore_shutdown_message_that_does_not_say_shut_down()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ignore_shutdown_message_that_does_not_say_shut_down
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
    startLine: 55
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void ignore_shutdown_message_that_does_not_say_shut_down()
    content.vb: Public Sub ignore_shutdown_message_that_does_not_say_shut_down
  overload: EventStore.Core.Tests.Services.Transport.Http.http_service_should.ignore_shutdown_message_that_does_not_say_shut_down*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.react_to_shutdown_message_that_cause_process_exit
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.http_service_should.react_to_shutdown_message_that_cause_process_exit
  id: react_to_shutdown_message_that_cause_process_exit
  parent: EventStore.Core.Tests.Services.Transport.Http.http_service_should
  langs:
  - csharp
  - vb
  name: react_to_shutdown_message_that_cause_process_exit()
  nameWithType: http_service_should.react_to_shutdown_message_that_cause_process_exit()
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.react_to_shutdown_message_that_cause_process_exit()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: react_to_shutdown_message_that_cause_process_exit
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
    startLine: 66
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void react_to_shutdown_message_that_cause_process_exit()
    content.vb: Public Sub react_to_shutdown_message_that_cause_process_exit
  overload: EventStore.Core.Tests.Services.Transport.Http.http_service_should.react_to_shutdown_message_that_cause_process_exit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.reply_with_404_to_every_request_when_there_are_no_registered_controllers
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.http_service_should.reply_with_404_to_every_request_when_there_are_no_registered_controllers
  id: reply_with_404_to_every_request_when_there_are_no_registered_controllers
  parent: EventStore.Core.Tests.Services.Transport.Http.http_service_should
  langs:
  - csharp
  - vb
  name: reply_with_404_to_every_request_when_there_are_no_registered_controllers()
  nameWithType: http_service_should.reply_with_404_to_every_request_when_there_are_no_registered_controllers()
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.reply_with_404_to_every_request_when_there_are_no_registered_controllers()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: reply_with_404_to_every_request_when_there_are_no_registered_controllers
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
    startLine: 77
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void reply_with_404_to_every_request_when_there_are_no_registered_controllers()
    content.vb: Public Sub reply_with_404_to_every_request_when_there_are_no_registered_controllers
  overload: EventStore.Core.Tests.Services.Transport.Http.http_service_should.reply_with_404_to_every_request_when_there_are_no_registered_controllers*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.handle_invalid_characters_in_url
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.http_service_should.handle_invalid_characters_in_url
  id: handle_invalid_characters_in_url
  parent: EventStore.Core.Tests.Services.Transport.Http.http_service_should
  langs:
  - csharp
  - vb
  name: handle_invalid_characters_in_url()
  nameWithType: http_service_should.handle_invalid_characters_in_url()
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.handle_invalid_characters_in_url()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: handle_invalid_characters_in_url
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/http_service_should.cs
    startLine: 113
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void handle_invalid_characters_in_url()
    content.vb: Public Sub handle_invalid_characters_in_url
  overload: EventStore.Core.Tests.Services.Transport.Http.http_service_should.handle_invalid_characters_in_url*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Services.Transport.Http
  commentId: N:EventStore.Core.Tests.Services.Transport.Http
  isExternal: false
  name: EventStore.Core.Tests.Services.Transport.Http
  nameWithType: EventStore.Core.Tests.Services.Transport.Http
  fullName: EventStore.Core.Tests.Services.Transport.Http
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<http_service_should>()
  nameWithType: ProtobufExtensions.Serialize<http_service_should>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Transport.Http.http_service_should>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of http_service_should)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Transport.Http.http_service_should)()
  name.vb: Serialize(Of http_service_should)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<http_service_should>
    nameWithType: ProtobufExtensions.Serialize<http_service_should>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Transport.Http.http_service_should>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of http_service_should)
    nameWithType: ProtobufExtensions.Serialize(Of http_service_should)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Transport.Http.http_service_should)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<http_service_should>()
  nameWithType: ProtobufExtensions.SerializeToArray<http_service_should>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Transport.Http.http_service_should>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of http_service_should)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Transport.Http.http_service_should)()
  name.vb: SerializeToArray(Of http_service_should)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<http_service_should>
    nameWithType: ProtobufExtensions.SerializeToArray<http_service_should>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Transport.Http.http_service_should>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of http_service_should)
    nameWithType: ProtobufExtensions.SerializeToArray(Of http_service_should)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Transport.Http.http_service_should)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.#ctor*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.http_service_should.#ctor
  isExternal: false
  name: http_service_should
  nameWithType: http_service_should.http_service_should
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.http_service_should
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.SetUp*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.http_service_should.SetUp
  isExternal: false
  name: SetUp
  nameWithType: http_service_should.SetUp
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.SetUp
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.TearDown*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.http_service_should.TearDown
  isExternal: false
  name: TearDown
  nameWithType: http_service_should.TearDown
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.TearDown
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.TestFixtureTearDown*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.http_service_should.TestFixtureTearDown
  isExternal: false
  name: TestFixtureTearDown
  nameWithType: http_service_should.TestFixtureTearDown
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.TestFixtureTearDown
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.start_after_system_message_system_init_published*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.http_service_should.start_after_system_message_system_init_published
  isExternal: false
  name: start_after_system_message_system_init_published
  nameWithType: http_service_should.start_after_system_message_system_init_published
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.start_after_system_message_system_init_published
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.ignore_shutdown_message_that_does_not_say_shut_down*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.http_service_should.ignore_shutdown_message_that_does_not_say_shut_down
  isExternal: false
  name: ignore_shutdown_message_that_does_not_say_shut_down
  nameWithType: http_service_should.ignore_shutdown_message_that_does_not_say_shut_down
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.ignore_shutdown_message_that_does_not_say_shut_down
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.react_to_shutdown_message_that_cause_process_exit*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.http_service_should.react_to_shutdown_message_that_cause_process_exit
  isExternal: false
  name: react_to_shutdown_message_that_cause_process_exit
  nameWithType: http_service_should.react_to_shutdown_message_that_cause_process_exit
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.react_to_shutdown_message_that_cause_process_exit
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.reply_with_404_to_every_request_when_there_are_no_registered_controllers*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.http_service_should.reply_with_404_to_every_request_when_there_are_no_registered_controllers
  isExternal: false
  name: reply_with_404_to_every_request_when_there_are_no_registered_controllers
  nameWithType: http_service_should.reply_with_404_to_every_request_when_there_are_no_registered_controllers
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.reply_with_404_to_every_request_when_there_are_no_registered_controllers
- uid: EventStore.Core.Tests.Services.Transport.Http.http_service_should.handle_invalid_characters_in_url*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.http_service_should.handle_invalid_characters_in_url
  isExternal: false
  name: handle_invalid_characters_in_url
  nameWithType: http_service_should.handle_invalid_characters_in_url
  fullName: EventStore.Core.Tests.Services.Transport.Http.http_service_should.handle_invalid_characters_in_url

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  commentId: T:EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  id: uri_router_should
  parent: EventStore.Core.Tests.Services.Transport.Http
  children:
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.#ctor(Func{EventStore.Core.Services.Transport.Http.IUriRouter})
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.care_about_trailing_slash
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.care_about_trailing_slash2
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.detect_duplicate_route
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_all_possible_alternatives
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_complex_route_with_placeholders_and_query_params
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_complex_route_with_placeholders_and_query_params_when_no_query_params_are_set
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_and_catch_long_uri
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_in_the_root_to_any_path
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_with_bare_minimum_of_uri
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_with_empty_path_part_starting_with_slash
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_root
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_route_with_dollar_sign
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_same_routes_with_different_http_methods
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_single_segment_path
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_care_about_trailing_slash
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_care_about_trailing_slash2
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_match_greedy_route_with_empty_path_part_without_slash
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_match_partial_route_match
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.SetUp
  langs:
  - csharp
  - vb
  name: uri_router_should
  nameWithType: uri_router_should
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: uri_router_should
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 27
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: 'public abstract class uri_router_should : object'
    content.vb: >-
      Public MustInherit Class uri_router_should

          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - EventStore.Core.Tests.Services.Transport.Http.naive_uri_router_should
  - EventStore.Core.Tests.Services.Transport.Http.trie_uri_router_should
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.Services.Transport.Http.uri_router_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.#ctor(Func{EventStore.Core.Services.Transport.Http.IUriRouter})
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.#ctor(Func{EventStore.Core.Services.Transport.Http.IUriRouter})
  id: '#ctor(Func{EventStore.Core.Services.Transport.Http.IUriRouter})'
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: uri_router_should(Func<IUriRouter>)
  nameWithType: uri_router_should.uri_router_should(Func<IUriRouter>)
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.uri_router_should(Func<EventStore.Core.Services.Transport.Http.IUriRouter>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 33
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: protected uri_router_should(Func<IUriRouter> uriRouterFactory)
    parameters:
    - id: uriRouterFactory
      type: Func{EventStore.Core.Services.Transport.Http.IUriRouter}
    content.vb: Protected Sub New(uriRouterFactory As Func(Of IUriRouter))
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.#ctor*
  nameWithType.vb: uri_router_should.uri_router_should(Func(Of IUriRouter))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.uri_router_should(Func(Of EventStore.Core.Services.Transport.Http.IUriRouter))
  name.vb: uri_router_should(Func(Of IUriRouter))
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.SetUp
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.SetUp
  id: SetUp
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: SetUp()
  nameWithType: uri_router_should.SetUp()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.SetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetUp
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 39
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void SetUp()
    content.vb: Public Sub SetUp
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.SetUp*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.detect_duplicate_route
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.detect_duplicate_route
  id: detect_duplicate_route
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: detect_duplicate_route()
  nameWithType: uri_router_should.detect_duplicate_route()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.detect_duplicate_route()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: detect_duplicate_route
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 68
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void detect_duplicate_route()
    content.vb: Public Sub detect_duplicate_route
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.detect_duplicate_route*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_root
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_root
  id: match_root
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: match_root()
  nameWithType: uri_router_should.match_root()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_root()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: match_root
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 76
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void match_root()
    content.vb: Public Sub match_root
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_root*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_single_segment_path
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_single_segment_path
  id: match_single_segment_path
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: match_single_segment_path()
  nameWithType: uri_router_should.match_single_segment_path()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_single_segment_path()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: match_single_segment_path
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 85
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void match_single_segment_path()
    content.vb: Public Sub match_single_segment_path
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_single_segment_path*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_care_about_trailing_slash
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_care_about_trailing_slash
  id: not_care_about_trailing_slash
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: not_care_about_trailing_slash()
  nameWithType: uri_router_should.not_care_about_trailing_slash()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_care_about_trailing_slash()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: not_care_about_trailing_slash
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 96
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void not_care_about_trailing_slash()
    content.vb: Public Sub not_care_about_trailing_slash
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_care_about_trailing_slash*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_care_about_trailing_slash2
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_care_about_trailing_slash2
  id: not_care_about_trailing_slash2
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: not_care_about_trailing_slash2()
  nameWithType: uri_router_should.not_care_about_trailing_slash2()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_care_about_trailing_slash2()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: not_care_about_trailing_slash2
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 110
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void not_care_about_trailing_slash2()
    content.vb: Public Sub not_care_about_trailing_slash2
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_care_about_trailing_slash2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.care_about_trailing_slash
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.care_about_trailing_slash
  id: care_about_trailing_slash
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: care_about_trailing_slash()
  nameWithType: uri_router_should.care_about_trailing_slash()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.care_about_trailing_slash()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: care_about_trailing_slash
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 124
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void care_about_trailing_slash()
    content.vb: Public Sub care_about_trailing_slash
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.care_about_trailing_slash*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.care_about_trailing_slash2
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.care_about_trailing_slash2
  id: care_about_trailing_slash2
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: care_about_trailing_slash2()
  nameWithType: uri_router_should.care_about_trailing_slash2()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.care_about_trailing_slash2()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: care_about_trailing_slash2
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 136
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void care_about_trailing_slash2()
    content.vb: Public Sub care_about_trailing_slash2
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.care_about_trailing_slash2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_route_with_dollar_sign
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_route_with_dollar_sign
  id: match_route_with_dollar_sign
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: match_route_with_dollar_sign()
  nameWithType: uri_router_should.match_route_with_dollar_sign()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_route_with_dollar_sign()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: match_route_with_dollar_sign
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 148
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void match_route_with_dollar_sign()
    content.vb: Public Sub match_route_with_dollar_sign
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_route_with_dollar_sign*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_complex_route_with_placeholders_and_query_params
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_complex_route_with_placeholders_and_query_params
  id: match_complex_route_with_placeholders_and_query_params
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: match_complex_route_with_placeholders_and_query_params()
  nameWithType: uri_router_should.match_complex_route_with_placeholders_and_query_params()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_complex_route_with_placeholders_and_query_params()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: match_complex_route_with_placeholders_and_query_params
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 162
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void match_complex_route_with_placeholders_and_query_params()
    content.vb: Public Sub match_complex_route_with_placeholders_and_query_params
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_complex_route_with_placeholders_and_query_params*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_complex_route_with_placeholders_and_query_params_when_no_query_params_are_set
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_complex_route_with_placeholders_and_query_params_when_no_query_params_are_set
  id: match_complex_route_with_placeholders_and_query_params_when_no_query_params_are_set
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: match_complex_route_with_placeholders_and_query_params_when_no_query_params_are_set()
  nameWithType: uri_router_should.match_complex_route_with_placeholders_and_query_params_when_no_query_params_are_set()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_complex_route_with_placeholders_and_query_params_when_no_query_params_are_set()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: match_complex_route_with_placeholders_and_query_params_when_no_query_params_are_set
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 171
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void match_complex_route_with_placeholders_and_query_params_when_no_query_params_are_set()
    content.vb: Public Sub match_complex_route_with_placeholders_and_query_params_when_no_query_params_are_set
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_complex_route_with_placeholders_and_query_params_when_no_query_params_are_set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_match_partial_route_match
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_match_partial_route_match
  id: not_match_partial_route_match
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: not_match_partial_route_match()
  nameWithType: uri_router_should.not_match_partial_route_match()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_match_partial_route_match()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: not_match_partial_route_match
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 180
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void not_match_partial_route_match()
    content.vb: Public Sub not_match_partial_route_match
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_match_partial_route_match*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_all_possible_alternatives
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_all_possible_alternatives
  id: match_all_possible_alternatives
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: match_all_possible_alternatives()
  nameWithType: uri_router_should.match_all_possible_alternatives()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_all_possible_alternatives()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: match_all_possible_alternatives
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 187
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void match_all_possible_alternatives()
    content.vb: Public Sub match_all_possible_alternatives
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_all_possible_alternatives*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_same_routes_with_different_http_methods
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_same_routes_with_different_http_methods
  id: match_same_routes_with_different_http_methods
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: match_same_routes_with_different_http_methods()
  nameWithType: uri_router_should.match_same_routes_with_different_http_methods()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_same_routes_with_different_http_methods()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: match_same_routes_with_different_http_methods
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 206
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void match_same_routes_with_different_http_methods()
    content.vb: Public Sub match_same_routes_with_different_http_methods
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_same_routes_with_different_http_methods*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_with_bare_minimum_of_uri
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_with_bare_minimum_of_uri
  id: match_greedy_route_with_bare_minimum_of_uri
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: match_greedy_route_with_bare_minimum_of_uri()
  nameWithType: uri_router_should.match_greedy_route_with_bare_minimum_of_uri()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_with_bare_minimum_of_uri()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: match_greedy_route_with_bare_minimum_of_uri
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 217
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void match_greedy_route_with_bare_minimum_of_uri()
    content.vb: Public Sub match_greedy_route_with_bare_minimum_of_uri
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_with_bare_minimum_of_uri*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_and_catch_long_uri
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_and_catch_long_uri
  id: match_greedy_route_and_catch_long_uri
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: match_greedy_route_and_catch_long_uri()
  nameWithType: uri_router_should.match_greedy_route_and_catch_long_uri()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_and_catch_long_uri()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: match_greedy_route_and_catch_long_uri
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 225
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void match_greedy_route_and_catch_long_uri()
    content.vb: Public Sub match_greedy_route_and_catch_long_uri
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_and_catch_long_uri*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_with_empty_path_part_starting_with_slash
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_with_empty_path_part_starting_with_slash
  id: match_greedy_route_with_empty_path_part_starting_with_slash
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: match_greedy_route_with_empty_path_part_starting_with_slash()
  nameWithType: uri_router_should.match_greedy_route_with_empty_path_part_starting_with_slash()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_with_empty_path_part_starting_with_slash()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: match_greedy_route_with_empty_path_part_starting_with_slash
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 233
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void match_greedy_route_with_empty_path_part_starting_with_slash()
    content.vb: Public Sub match_greedy_route_with_empty_path_part_starting_with_slash
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_with_empty_path_part_starting_with_slash*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_match_greedy_route_with_empty_path_part_without_slash
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_match_greedy_route_with_empty_path_part_without_slash
  id: not_match_greedy_route_with_empty_path_part_without_slash
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: not_match_greedy_route_with_empty_path_part_without_slash()
  nameWithType: uri_router_should.not_match_greedy_route_with_empty_path_part_without_slash()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_match_greedy_route_with_empty_path_part_without_slash()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: not_match_greedy_route_with_empty_path_part_without_slash
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 241
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void not_match_greedy_route_with_empty_path_part_without_slash()
    content.vb: Public Sub not_match_greedy_route_with_empty_path_part_without_slash
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_match_greedy_route_with_empty_path_part_without_slash*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_in_the_root_to_any_path
  commentId: M:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_in_the_root_to_any_path
  id: match_greedy_route_in_the_root_to_any_path
  parent: EventStore.Core.Tests.Services.Transport.Http.uri_router_should
  langs:
  - csharp
  - vb
  name: match_greedy_route_in_the_root_to_any_path()
  nameWithType: uri_router_should.match_greedy_route_in_the_root_to_any_path()
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_in_the_root_to_any_path()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: match_greedy_route_in_the_root_to_any_path
    path: ../EventStore/src/EventStore.Core.Tests/Services/Transport/Http/uri_router_should.cs
    startLine: 248
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.Services.Transport.Http
  syntax:
    content: public void match_greedy_route_in_the_root_to_any_path()
    content.vb: Public Sub match_greedy_route_in_the_root_to_any_path
  overload: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_in_the_root_to_any_path*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.Services.Transport.Http
  commentId: N:EventStore.Core.Tests.Services.Transport.Http
  isExternal: false
  name: EventStore.Core.Tests.Services.Transport.Http
  nameWithType: EventStore.Core.Tests.Services.Transport.Http
  fullName: EventStore.Core.Tests.Services.Transport.Http
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<uri_router_should>()
  nameWithType: ProtobufExtensions.Serialize<uri_router_should>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Transport.Http.uri_router_should>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of uri_router_should)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Transport.Http.uri_router_should)()
  name.vb: Serialize(Of uri_router_should)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<uri_router_should>
    nameWithType: ProtobufExtensions.Serialize<uri_router_should>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.Services.Transport.Http.uri_router_should>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of uri_router_should)
    nameWithType: ProtobufExtensions.Serialize(Of uri_router_should)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.Services.Transport.Http.uri_router_should)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<uri_router_should>()
  nameWithType: ProtobufExtensions.SerializeToArray<uri_router_should>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Transport.Http.uri_router_should>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of uri_router_should)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Transport.Http.uri_router_should)()
  name.vb: SerializeToArray(Of uri_router_should)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<uri_router_should>
    nameWithType: ProtobufExtensions.SerializeToArray<uri_router_should>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.Services.Transport.Http.uri_router_should>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of uri_router_should)
    nameWithType: ProtobufExtensions.SerializeToArray(Of uri_router_should)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.Services.Transport.Http.uri_router_should)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.#ctor*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.#ctor
  isExternal: false
  name: uri_router_should
  nameWithType: uri_router_should.uri_router_should
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.uri_router_should
- uid: Func{EventStore.Core.Services.Transport.Http.IUriRouter}
  commentId: '!:Func{EventStore.Core.Services.Transport.Http.IUriRouter}'
  definition: Func`1
  name: Func<IUriRouter>
  nameWithType: Func<IUriRouter>
  fullName: Func<EventStore.Core.Services.Transport.Http.IUriRouter>
  nameWithType.vb: Func(Of IUriRouter)
  fullName.vb: Func(Of EventStore.Core.Services.Transport.Http.IUriRouter)
  name.vb: Func(Of IUriRouter)
  spec.csharp:
  - uid: Func`1
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.Transport.Http.IUriRouter
    name: IUriRouter
    nameWithType: IUriRouter
    fullName: EventStore.Core.Services.Transport.Http.IUriRouter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`1
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.Transport.Http.IUriRouter
    name: IUriRouter
    nameWithType: IUriRouter
    fullName: EventStore.Core.Services.Transport.Http.IUriRouter
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`1
  isExternal: true
  name: Func<>
  nameWithType: Func<>
  fullName: Func<>
  nameWithType.vb: Func(Of )
  fullName.vb: Func(Of )
  name.vb: Func(Of )
  spec.csharp:
  - uid: Func`1
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`1
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.SetUp*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.SetUp
  isExternal: false
  name: SetUp
  nameWithType: uri_router_should.SetUp
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.SetUp
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.detect_duplicate_route*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.detect_duplicate_route
  isExternal: false
  name: detect_duplicate_route
  nameWithType: uri_router_should.detect_duplicate_route
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.detect_duplicate_route
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_root*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_root
  isExternal: false
  name: match_root
  nameWithType: uri_router_should.match_root
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_root
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_single_segment_path*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_single_segment_path
  isExternal: false
  name: match_single_segment_path
  nameWithType: uri_router_should.match_single_segment_path
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_single_segment_path
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_care_about_trailing_slash*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_care_about_trailing_slash
  isExternal: false
  name: not_care_about_trailing_slash
  nameWithType: uri_router_should.not_care_about_trailing_slash
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_care_about_trailing_slash
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_care_about_trailing_slash2*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_care_about_trailing_slash2
  isExternal: false
  name: not_care_about_trailing_slash2
  nameWithType: uri_router_should.not_care_about_trailing_slash2
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_care_about_trailing_slash2
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.care_about_trailing_slash*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.care_about_trailing_slash
  isExternal: false
  name: care_about_trailing_slash
  nameWithType: uri_router_should.care_about_trailing_slash
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.care_about_trailing_slash
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.care_about_trailing_slash2*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.care_about_trailing_slash2
  isExternal: false
  name: care_about_trailing_slash2
  nameWithType: uri_router_should.care_about_trailing_slash2
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.care_about_trailing_slash2
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_route_with_dollar_sign*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_route_with_dollar_sign
  isExternal: false
  name: match_route_with_dollar_sign
  nameWithType: uri_router_should.match_route_with_dollar_sign
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_route_with_dollar_sign
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_complex_route_with_placeholders_and_query_params*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_complex_route_with_placeholders_and_query_params
  isExternal: false
  name: match_complex_route_with_placeholders_and_query_params
  nameWithType: uri_router_should.match_complex_route_with_placeholders_and_query_params
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_complex_route_with_placeholders_and_query_params
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_complex_route_with_placeholders_and_query_params_when_no_query_params_are_set*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_complex_route_with_placeholders_and_query_params_when_no_query_params_are_set
  isExternal: false
  name: match_complex_route_with_placeholders_and_query_params_when_no_query_params_are_set
  nameWithType: uri_router_should.match_complex_route_with_placeholders_and_query_params_when_no_query_params_are_set
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_complex_route_with_placeholders_and_query_params_when_no_query_params_are_set
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_match_partial_route_match*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_match_partial_route_match
  isExternal: false
  name: not_match_partial_route_match
  nameWithType: uri_router_should.not_match_partial_route_match
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_match_partial_route_match
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_all_possible_alternatives*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_all_possible_alternatives
  isExternal: false
  name: match_all_possible_alternatives
  nameWithType: uri_router_should.match_all_possible_alternatives
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_all_possible_alternatives
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_same_routes_with_different_http_methods*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_same_routes_with_different_http_methods
  isExternal: false
  name: match_same_routes_with_different_http_methods
  nameWithType: uri_router_should.match_same_routes_with_different_http_methods
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_same_routes_with_different_http_methods
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_with_bare_minimum_of_uri*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_with_bare_minimum_of_uri
  isExternal: false
  name: match_greedy_route_with_bare_minimum_of_uri
  nameWithType: uri_router_should.match_greedy_route_with_bare_minimum_of_uri
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_with_bare_minimum_of_uri
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_and_catch_long_uri*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_and_catch_long_uri
  isExternal: false
  name: match_greedy_route_and_catch_long_uri
  nameWithType: uri_router_should.match_greedy_route_and_catch_long_uri
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_and_catch_long_uri
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_with_empty_path_part_starting_with_slash*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_with_empty_path_part_starting_with_slash
  isExternal: false
  name: match_greedy_route_with_empty_path_part_starting_with_slash
  nameWithType: uri_router_should.match_greedy_route_with_empty_path_part_starting_with_slash
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_with_empty_path_part_starting_with_slash
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_match_greedy_route_with_empty_path_part_without_slash*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_match_greedy_route_with_empty_path_part_without_slash
  isExternal: false
  name: not_match_greedy_route_with_empty_path_part_without_slash
  nameWithType: uri_router_should.not_match_greedy_route_with_empty_path_part_without_slash
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.not_match_greedy_route_with_empty_path_part_without_slash
- uid: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_in_the_root_to_any_path*
  commentId: Overload:EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_in_the_root_to_any_path
  isExternal: false
  name: match_greedy_route_in_the_root_to_any_path
  nameWithType: uri_router_should.match_greedy_route_in_the_root_to_any_path
  fullName: EventStore.Core.Tests.Services.Transport.Http.uri_router_should.match_greedy_route_in_the_root_to_any_path

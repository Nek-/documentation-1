### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.SpecificationWithDirectory
  commentId: T:EventStore.Core.Tests.SpecificationWithDirectory
  id: SpecificationWithDirectory
  parent: EventStore.Core.Tests
  children:
  - EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor(System.String)
  - EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
  - EventStore.Core.Tests.SpecificationWithDirectory.PathName
  - EventStore.Core.Tests.SpecificationWithDirectory.SetUp
  - EventStore.Core.Tests.SpecificationWithDirectory.TearDown
  langs:
  - csharp
  - vb
  name: SpecificationWithDirectory
  nameWithType: SpecificationWithDirectory
  fullName: EventStore.Core.Tests.SpecificationWithDirectory
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/SpecificationWithDirectory.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SpecificationWithDirectory
    path: ../EventStore/src/EventStore.Core.Tests/SpecificationWithDirectory.cs
    startLine: 6
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests
  syntax:
    content: 'public class SpecificationWithDirectory : object'
    content.vb: >-
      Public Class SpecificationWithDirectory

          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - EventStore.Core.Tests.ClientAPI.isjson_flag_on_event
  - EventStore.Core.Tests.ClientAPI.subscribe_to_all_catching_up_should
  - EventStore.Core.Tests.ClientAPI.subscribe_to_all_should
  - EventStore.Core.Tests.ClientAPI.when_committing_empty_transaction
  - EventStore.Core.Tests.ClientAPI.when_having_max_count_set_for_stream
  - EventStore.Core.Tests.Index.IndexV1.index_map_should
  - EventStore.Core.Tests.Index.IndexV1.index_map_should_detect_corruption
  - EventStore.Core.Tests.Index.IndexV1.ptable_midpoint_cache_should
  - EventStore.Core.Tests.Index.IndexV1.saving_index_with_six_items_to_a_file
  - EventStore.Core.Tests.Index.IndexV1.when_a_ptable_header_is_corrupt_on_disk
  - EventStore.Core.Tests.Index.IndexV1.when_a_ptable_is_corrupt_on_disk
  - EventStore.Core.Tests.Index.IndexV1.when_a_ptable_is_loaded_from_disk
  - EventStore.Core.Tests.Index.IndexV4.ptable_midpoint_calculations_should
  - EventStore.Core.Tests.TransactionLog.Unbuffered.UnbufferedTests
  - EventStore.Core.Tests.TransactionLog.Validation.when_validating_tfchunk_db
  - EventStore.Core.Tests.TransactionLog.Validation.when_validating_tfchunk_db_with_multi_chunks
  - EventStore.Core.Tests.TransactionLog.Validation.when_validating_tfchunkdb_without_previous_files
  - EventStore.Core.Tests.TransactionLog.versioned_pattern_filenaming_strategy
  - EventStore.Core.Tests.TransactionLog.when_chasing_a_chunked_transaction_log
  - EventStore.Core.Tests.TransactionLog.when_creating_chunked_transaction_chaser
  - EventStore.Core.Tests.TransactionLog.when_creating_chunked_transaction_file_reader
  - EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files
  - EventStore.Core.Tests.TransactionLog.when_reading_an_empty_chunked_transaction_log
  - EventStore.Core.Tests.TransactionLog.when_reading_logical_bytes_bulk_from_a_chunk
  - EventStore.Core.Tests.TransactionLog.when_reading_physical_bytes_bulk_from_a_chunk
  - EventStore.Core.Tests.TransactionLog.when_writing_a_new_chunked_transaction_file
  - EventStore.Core.Tests.TransactionLog.when_writing_an_existing_chunked_transaction_file_with_checksum
  - EventStore.Core.Tests.TransactionLog.when_writing_an_existing_chunked_transaction_file_with_checksum_and_data_bigger_than_buffer
  - EventStore.Core.Tests.TransactionLog.when_writing_an_existing_chunked_transaction_file_with_not_enough_space_in_chunk
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.SpecificationWithDirectory.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.SpecificationWithDirectory.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.SpecificationWithDirectory.PathName
  commentId: F:EventStore.Core.Tests.SpecificationWithDirectory.PathName
  id: PathName
  parent: EventStore.Core.Tests.SpecificationWithDirectory
  langs:
  - csharp
  - vb
  name: PathName
  nameWithType: SpecificationWithDirectory.PathName
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.PathName
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/SpecificationWithDirectory.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PathName
    path: ../EventStore/src/EventStore.Core.Tests/SpecificationWithDirectory.cs
    startLine: 8
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests
  syntax:
    content: protected string PathName
    return:
      type: System.String
    content.vb: Protected PathName As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
  id: GetTempFilePath
  parent: EventStore.Core.Tests.SpecificationWithDirectory
  langs:
  - csharp
  - vb
  name: GetTempFilePath()
  nameWithType: SpecificationWithDirectory.GetTempFilePath()
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/SpecificationWithDirectory.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetTempFilePath
    path: ../EventStore/src/EventStore.Core.Tests/SpecificationWithDirectory.cs
    startLine: 10
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests
  syntax:
    content: protected string GetTempFilePath()
    return:
      type: System.String
    content.vb: Protected Function GetTempFilePath As String
  overload: EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor(System.String)
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor(System.String)
  id: GetFilePathFor(System.String)
  parent: EventStore.Core.Tests.SpecificationWithDirectory
  langs:
  - csharp
  - vb
  name: GetFilePathFor(String)
  nameWithType: SpecificationWithDirectory.GetFilePathFor(String)
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/SpecificationWithDirectory.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetFilePathFor
    path: ../EventStore/src/EventStore.Core.Tests/SpecificationWithDirectory.cs
    startLine: 15
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests
  syntax:
    content: protected string GetFilePathFor(string fileName)
    parameters:
    - id: fileName
      type: System.String
    return:
      type: System.String
    content.vb: Protected Function GetFilePathFor(fileName As String) As String
  overload: EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.SpecificationWithDirectory.SetUp
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectory.SetUp
  id: SetUp
  parent: EventStore.Core.Tests.SpecificationWithDirectory
  langs:
  - csharp
  - vb
  name: SetUp()
  nameWithType: SpecificationWithDirectory.SetUp()
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.SetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/SpecificationWithDirectory.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetUp
    path: ../EventStore/src/EventStore.Core.Tests/SpecificationWithDirectory.cs
    startLine: 20
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests
  syntax:
    content: public virtual void SetUp()
    content.vb: Public Overridable Sub SetUp
  overload: EventStore.Core.Tests.SpecificationWithDirectory.SetUp*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: EventStore.Core.Tests.SpecificationWithDirectory.TearDown
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectory.TearDown
  id: TearDown
  parent: EventStore.Core.Tests.SpecificationWithDirectory
  langs:
  - csharp
  - vb
  name: TearDown()
  nameWithType: SpecificationWithDirectory.TearDown()
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.TearDown()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/SpecificationWithDirectory.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TearDown
    path: ../EventStore/src/EventStore.Core.Tests/SpecificationWithDirectory.cs
    startLine: 28
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests
  syntax:
    content: public virtual void TearDown()
    content.vb: Public Overridable Sub TearDown
  overload: EventStore.Core.Tests.SpecificationWithDirectory.TearDown*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectory.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<SpecificationWithDirectory>()
  nameWithType: ProtobufExtensions.Serialize<SpecificationWithDirectory>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.SpecificationWithDirectory>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of SpecificationWithDirectory)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.SpecificationWithDirectory)()
  name.vb: Serialize(Of SpecificationWithDirectory)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<SpecificationWithDirectory>
    nameWithType: ProtobufExtensions.Serialize<SpecificationWithDirectory>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.SpecificationWithDirectory>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of SpecificationWithDirectory)
    nameWithType: ProtobufExtensions.Serialize(Of SpecificationWithDirectory)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.SpecificationWithDirectory)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectory.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<SpecificationWithDirectory>()
  nameWithType: ProtobufExtensions.SerializeToArray<SpecificationWithDirectory>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.SpecificationWithDirectory>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of SpecificationWithDirectory)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.SpecificationWithDirectory)()
  name.vb: SerializeToArray(Of SpecificationWithDirectory)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<SpecificationWithDirectory>
    nameWithType: ProtobufExtensions.SerializeToArray<SpecificationWithDirectory>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.SpecificationWithDirectory>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of SpecificationWithDirectory)
    nameWithType: ProtobufExtensions.SerializeToArray(Of SpecificationWithDirectory)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.SpecificationWithDirectory)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath*
  commentId: Overload:EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
  isExternal: false
  name: GetTempFilePath
  nameWithType: SpecificationWithDirectory.GetTempFilePath
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
- uid: EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor*
  commentId: Overload:EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor
  isExternal: false
  name: GetFilePathFor
  nameWithType: SpecificationWithDirectory.GetFilePathFor
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor
- uid: EventStore.Core.Tests.SpecificationWithDirectory.SetUp*
  commentId: Overload:EventStore.Core.Tests.SpecificationWithDirectory.SetUp
  isExternal: false
  name: SetUp
  nameWithType: SpecificationWithDirectory.SetUp
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.SetUp
- uid: EventStore.Core.Tests.SpecificationWithDirectory.TearDown*
  commentId: Overload:EventStore.Core.Tests.SpecificationWithDirectory.TearDown
  isExternal: false
  name: TearDown
  nameWithType: SpecificationWithDirectory.TearDown
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.TearDown

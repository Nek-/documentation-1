### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.SpecificationWithFile
  commentId: T:EventStore.Core.Tests.SpecificationWithFile
  id: SpecificationWithFile
  parent: EventStore.Core.Tests
  children:
  - EventStore.Core.Tests.SpecificationWithFile.Filename
  - EventStore.Core.Tests.SpecificationWithFile.SetUp
  - EventStore.Core.Tests.SpecificationWithFile.TearDown
  langs:
  - csharp
  - vb
  name: SpecificationWithFile
  nameWithType: SpecificationWithFile
  fullName: EventStore.Core.Tests.SpecificationWithFile
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/SpecificationWithFile.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SpecificationWithFile
    path: ../EventStore/src/EventStore.Core.Tests/SpecificationWithFile.cs
    startLine: 6
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests
  syntax:
    content: 'public class SpecificationWithFile : object'
    content.vb: >-
      Public Class SpecificationWithFile

          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - EventStore.Core.Tests.Index.IndexV1.destroying_ptable
  - EventStore.Core.Tests.Index.IndexV1.PTableReadScenario
  - EventStore.Core.Tests.Index.IndexV1.when_creating_ptable_from_memtable
  - EventStore.Core.Tests.Index.IndexV1.when_trying_to_get_latest_entry
  - EventStore.Core.Tests.Index.IndexV1.when_trying_to_get_oldest_entry
  - EventStore.Core.Tests.Index.IndexVAny.when_opening_ptable_without_right_flag_in_header
  - EventStore.Core.Tests.TransactionLog.FlushTimeMeter
  - EventStore.Core.Tests.TransactionLog.Scavenging.scavenged_chunk
  - EventStore.Core.Tests.TransactionLog.when_appending_past_end_of_a_tfchunk
  - EventStore.Core.Tests.TransactionLog.when_creating_tfchunk_from_empty_file
  - EventStore.Core.Tests.TransactionLog.when_destroying_a_tfchunk
  - EventStore.Core.Tests.TransactionLog.when_destroying_a_tfchunk_that_is_locked
  - EventStore.Core.Tests.TransactionLog.when_marking_for_deletion_a_tfchunk_that_has_been_locked_and_unlocked
  - EventStore.Core.Tests.TransactionLog.when_opening_tfchunk_from_non_existing_file
  - EventStore.Core.Tests.TransactionLog.when_unlocking_a_tfchunk_that_has_been_marked_for_deletion
  - EventStore.Core.Tests.TransactionLog.when_writing_a_file_checkpoint_to_a_writethroughfile
  - EventStore.Core.Tests.TransactionLog.when_writing_a_file_checksum_to_a_file
  - EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.SpecificationWithFile.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.SpecificationWithFile.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.SpecificationWithFile.Filename
  commentId: F:EventStore.Core.Tests.SpecificationWithFile.Filename
  id: Filename
  parent: EventStore.Core.Tests.SpecificationWithFile
  langs:
  - csharp
  - vb
  name: Filename
  nameWithType: SpecificationWithFile.Filename
  fullName: EventStore.Core.Tests.SpecificationWithFile.Filename
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/SpecificationWithFile.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Filename
    path: ../EventStore/src/EventStore.Core.Tests/SpecificationWithFile.cs
    startLine: 8
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests
  syntax:
    content: protected string Filename
    return:
      type: System.String
    content.vb: Protected Filename As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.SpecificationWithFile.SetUp
  commentId: M:EventStore.Core.Tests.SpecificationWithFile.SetUp
  id: SetUp
  parent: EventStore.Core.Tests.SpecificationWithFile
  langs:
  - csharp
  - vb
  name: SetUp()
  nameWithType: SpecificationWithFile.SetUp()
  fullName: EventStore.Core.Tests.SpecificationWithFile.SetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/SpecificationWithFile.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetUp
    path: ../EventStore/src/EventStore.Core.Tests/SpecificationWithFile.cs
    startLine: 10
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests
  syntax:
    content: public virtual void SetUp()
    content.vb: Public Overridable Sub SetUp
  overload: EventStore.Core.Tests.SpecificationWithFile.SetUp*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: EventStore.Core.Tests.SpecificationWithFile.TearDown
  commentId: M:EventStore.Core.Tests.SpecificationWithFile.TearDown
  id: TearDown
  parent: EventStore.Core.Tests.SpecificationWithFile
  langs:
  - csharp
  - vb
  name: TearDown()
  nameWithType: SpecificationWithFile.TearDown()
  fullName: EventStore.Core.Tests.SpecificationWithFile.TearDown()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/SpecificationWithFile.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TearDown
    path: ../EventStore/src/EventStore.Core.Tests/SpecificationWithFile.cs
    startLine: 17
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests
  syntax:
    content: public virtual void TearDown()
    content.vb: Public Overridable Sub TearDown
  overload: EventStore.Core.Tests.SpecificationWithFile.TearDown*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithFile.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<SpecificationWithFile>()
  nameWithType: ProtobufExtensions.Serialize<SpecificationWithFile>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.SpecificationWithFile>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of SpecificationWithFile)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.SpecificationWithFile)()
  name.vb: Serialize(Of SpecificationWithFile)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<SpecificationWithFile>
    nameWithType: ProtobufExtensions.Serialize<SpecificationWithFile>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.SpecificationWithFile>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of SpecificationWithFile)
    nameWithType: ProtobufExtensions.Serialize(Of SpecificationWithFile)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.SpecificationWithFile)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithFile.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<SpecificationWithFile>()
  nameWithType: ProtobufExtensions.SerializeToArray<SpecificationWithFile>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.SpecificationWithFile>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of SpecificationWithFile)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.SpecificationWithFile)()
  name.vb: SerializeToArray(Of SpecificationWithFile)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<SpecificationWithFile>
    nameWithType: ProtobufExtensions.SerializeToArray<SpecificationWithFile>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.SpecificationWithFile>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of SpecificationWithFile)
    nameWithType: ProtobufExtensions.SerializeToArray(Of SpecificationWithFile)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.SpecificationWithFile)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Tests.SpecificationWithFile.SetUp*
  commentId: Overload:EventStore.Core.Tests.SpecificationWithFile.SetUp
  isExternal: false
  name: SetUp
  nameWithType: SpecificationWithFile.SetUp
  fullName: EventStore.Core.Tests.SpecificationWithFile.SetUp
- uid: EventStore.Core.Tests.SpecificationWithFile.TearDown*
  commentId: Overload:EventStore.Core.Tests.SpecificationWithFile.TearDown
  isExternal: false
  name: TearDown
  nameWithType: SpecificationWithFile.TearDown
  fullName: EventStore.Core.Tests.SpecificationWithFile.TearDown

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  commentId: T:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  id: Rec
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  children:
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.#ctor(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.RecType,System.Int32,System.String,System.String,System.Nullable{DateTime},System.Byte,EventStore.Core.Data.StreamMetadata,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Commit(System.Int32,System.String,System.Nullable{DateTime},System.Byte)
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Delete(System.Int32,System.String,System.Nullable{DateTime},System.Byte)
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.EventType
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Id
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Metadata
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Prepare(System.Int32,System.String,System.String,System.Nullable{DateTime},EventStore.Core.Data.StreamMetadata,EventStore.Core.TransactionLog.LogRecords.PrepareFlags,System.Byte)
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.PrepareFlags
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.StreamId
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TimeStamp
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Transaction
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransEnd(System.Int32,System.String,System.Nullable{DateTime},System.Byte)
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransSt(System.Int32,System.String,System.Nullable{DateTime},System.Byte)
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Type
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Version
  langs:
  - csharp
  - vb
  name: Rec
  nameWithType: Rec
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Rec
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 368
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: 'public class Rec : object'
    content.vb: >-
      Public Class Rec

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Type
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Type
  id: Type
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Rec.Type
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Type
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Type
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 372
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public readonly Rec.RecType Type
    return:
      type: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.RecType
    content.vb: Public ReadOnly Type As Rec.RecType
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Id
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Id
  id: Id
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Rec.Id
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Id
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Id
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 373
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public readonly Guid Id
    return:
      type: Guid
    content.vb: Public ReadOnly Id As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Transaction
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Transaction
  id: Transaction
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  langs:
  - csharp
  - vb
  name: Transaction
  nameWithType: Rec.Transaction
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Transaction
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Transaction
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 374
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public readonly int Transaction
    return:
      type: System.Int32
    content.vb: Public ReadOnly Transaction As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.StreamId
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.StreamId
  id: StreamId
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  langs:
  - csharp
  - vb
  name: StreamId
  nameWithType: Rec.StreamId
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.StreamId
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StreamId
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 375
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public readonly string StreamId
    return:
      type: System.String
    content.vb: Public ReadOnly StreamId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.EventType
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.EventType
  id: EventType
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  langs:
  - csharp
  - vb
  name: EventType
  nameWithType: Rec.EventType
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.EventType
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EventType
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 376
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public readonly string EventType
    return:
      type: System.String
    content.vb: Public ReadOnly EventType As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TimeStamp
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TimeStamp
  id: TimeStamp
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  langs:
  - csharp
  - vb
  name: TimeStamp
  nameWithType: Rec.TimeStamp
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TimeStamp
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TimeStamp
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 377
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public readonly DateTime TimeStamp
    return:
      type: DateTime
    content.vb: Public ReadOnly TimeStamp As DateTime
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Metadata
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Metadata
  id: Metadata
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: Rec.Metadata
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Metadata
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Metadata
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 378
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public readonly StreamMetadata Metadata
    return:
      type: EventStore.Core.Data.StreamMetadata
    content.vb: Public ReadOnly Metadata As StreamMetadata
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.PrepareFlags
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.PrepareFlags
  id: PrepareFlags
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  langs:
  - csharp
  - vb
  name: PrepareFlags
  nameWithType: Rec.PrepareFlags
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.PrepareFlags
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PrepareFlags
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 379
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public readonly PrepareFlags PrepareFlags
    return:
      type: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    content.vb: Public ReadOnly PrepareFlags As PrepareFlags
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Version
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Version
  id: Version
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: Rec.Version
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Version
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Version
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 380
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public readonly byte Version
    return:
      type: System.Byte
    content.vb: Public ReadOnly Version As Byte
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.#ctor(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.RecType,System.Int32,System.String,System.String,System.Nullable{DateTime},System.Byte,EventStore.Core.Data.StreamMetadata,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.#ctor(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.RecType,System.Int32,System.String,System.String,System.Nullable{DateTime},System.Byte,EventStore.Core.Data.StreamMetadata,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  id: '#ctor(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.RecType,System.Int32,System.String,System.String,System.Nullable{DateTime},System.Byte,EventStore.Core.Data.StreamMetadata,EventStore.Core.TransactionLog.LogRecords.PrepareFlags)'
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  langs:
  - csharp
  - vb
  name: Rec(Rec.RecType, Int32, String, String, Nullable<DateTime>, Byte, StreamMetadata, PrepareFlags)
  nameWithType: Rec.Rec(Rec.RecType, Int32, String, String, Nullable<DateTime>, Byte, StreamMetadata, PrepareFlags)
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Rec(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.RecType, System.Int32, System.String, System.String, System.Nullable<DateTime>, System.Byte, EventStore.Core.Data.StreamMetadata, EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 382
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public Rec(Rec.RecType type, int transaction, string streamId, string eventType, DateTime? timestamp, byte version, StreamMetadata metadata = null, PrepareFlags prepareFlags = default (PrepareFlags))
    parameters:
    - id: type
      type: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.RecType
    - id: transaction
      type: System.Int32
    - id: streamId
      type: System.String
    - id: eventType
      type: System.String
    - id: timestamp
      type: System.Nullable{DateTime}
    - id: version
      type: System.Byte
    - id: metadata
      type: EventStore.Core.Data.StreamMetadata
    - id: prepareFlags
      type: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    content.vb: Public Sub New(type As Rec.RecType, transaction As Integer, streamId As String, eventType As String, timestamp As DateTime?, version As Byte, metadata As StreamMetadata = Nothing, prepareFlags As PrepareFlags = Nothing)
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.#ctor*
  nameWithType.vb: Rec.Rec(Rec.RecType, Int32, String, String, Nullable(Of DateTime), Byte, StreamMetadata, PrepareFlags)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Rec(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.RecType, System.Int32, System.String, System.String, System.Nullable(Of DateTime), System.Byte, EventStore.Core.Data.StreamMetadata, EventStore.Core.TransactionLog.LogRecords.PrepareFlags)
  name.vb: Rec(Rec.RecType, Int32, String, String, Nullable(Of DateTime), Byte, StreamMetadata, PrepareFlags)
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Delete(System.Int32,System.String,System.Nullable{DateTime},System.Byte)
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Delete(System.Int32,System.String,System.Nullable{DateTime},System.Byte)
  id: Delete(System.Int32,System.String,System.Nullable{DateTime},System.Byte)
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  langs:
  - csharp
  - vb
  name: Delete(Int32, String, Nullable<DateTime>, Byte)
  nameWithType: Rec.Delete(Int32, String, Nullable<DateTime>, Byte)
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Delete(System.Int32, System.String, System.Nullable<DateTime>, System.Byte)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Delete
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 398
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public static Rec Delete(int transaction, string stream, DateTime? timestamp = null, byte version = null)
    parameters:
    - id: transaction
      type: System.Int32
    - id: stream
      type: System.String
    - id: timestamp
      type: System.Nullable{DateTime}
    - id: version
      type: System.Byte
    return:
      type: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
    content.vb: Public Shared Function Delete(transaction As Integer, stream As String, timestamp As DateTime? = Nothing, version As Byte = Nothing) As Rec
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Delete*
  nameWithType.vb: Rec.Delete(Int32, String, Nullable(Of DateTime), Byte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Delete(System.Int32, System.String, System.Nullable(Of DateTime), System.Byte)
  name.vb: Delete(Int32, String, Nullable(Of DateTime), Byte)
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransSt(System.Int32,System.String,System.Nullable{DateTime},System.Byte)
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransSt(System.Int32,System.String,System.Nullable{DateTime},System.Byte)
  id: TransSt(System.Int32,System.String,System.Nullable{DateTime},System.Byte)
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  langs:
  - csharp
  - vb
  name: TransSt(Int32, String, Nullable<DateTime>, Byte)
  nameWithType: Rec.TransSt(Int32, String, Nullable<DateTime>, Byte)
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransSt(System.Int32, System.String, System.Nullable<DateTime>, System.Byte)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TransSt
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 403
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public static Rec TransSt(int transaction, string stream, DateTime? timestamp = null, byte version = null)
    parameters:
    - id: transaction
      type: System.Int32
    - id: stream
      type: System.String
    - id: timestamp
      type: System.Nullable{DateTime}
    - id: version
      type: System.Byte
    return:
      type: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
    content.vb: Public Shared Function TransSt(transaction As Integer, stream As String, timestamp As DateTime? = Nothing, version As Byte = Nothing) As Rec
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransSt*
  nameWithType.vb: Rec.TransSt(Int32, String, Nullable(Of DateTime), Byte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransSt(System.Int32, System.String, System.Nullable(Of DateTime), System.Byte)
  name.vb: TransSt(Int32, String, Nullable(Of DateTime), Byte)
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Prepare(System.Int32,System.String,System.String,System.Nullable{DateTime},EventStore.Core.Data.StreamMetadata,EventStore.Core.TransactionLog.LogRecords.PrepareFlags,System.Byte)
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Prepare(System.Int32,System.String,System.String,System.Nullable{DateTime},EventStore.Core.Data.StreamMetadata,EventStore.Core.TransactionLog.LogRecords.PrepareFlags,System.Byte)
  id: Prepare(System.Int32,System.String,System.String,System.Nullable{DateTime},EventStore.Core.Data.StreamMetadata,EventStore.Core.TransactionLog.LogRecords.PrepareFlags,System.Byte)
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  langs:
  - csharp
  - vb
  name: Prepare(Int32, String, String, Nullable<DateTime>, StreamMetadata, PrepareFlags, Byte)
  nameWithType: Rec.Prepare(Int32, String, String, Nullable<DateTime>, StreamMetadata, PrepareFlags, Byte)
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Prepare(System.Int32, System.String, System.String, System.Nullable<DateTime>, EventStore.Core.Data.StreamMetadata, EventStore.Core.TransactionLog.LogRecords.PrepareFlags, System.Byte)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Prepare
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 408
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public static Rec Prepare(int transaction, string stream, string eventType = null, DateTime? timestamp = null, StreamMetadata metadata = null, PrepareFlags prepareFlags = default (PrepareFlags), byte version = null)
    parameters:
    - id: transaction
      type: System.Int32
    - id: stream
      type: System.String
    - id: eventType
      type: System.String
    - id: timestamp
      type: System.Nullable{DateTime}
    - id: metadata
      type: EventStore.Core.Data.StreamMetadata
    - id: prepareFlags
      type: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
    - id: version
      type: System.Byte
    return:
      type: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
    content.vb: Public Shared Function Prepare(transaction As Integer, stream As String, eventType As String = Nothing, timestamp As DateTime? = Nothing, metadata As StreamMetadata = Nothing, prepareFlags As PrepareFlags = Nothing, version As Byte = Nothing) As Rec
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Prepare*
  nameWithType.vb: Rec.Prepare(Int32, String, String, Nullable(Of DateTime), StreamMetadata, PrepareFlags, Byte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Prepare(System.Int32, System.String, System.String, System.Nullable(Of DateTime), EventStore.Core.Data.StreamMetadata, EventStore.Core.TransactionLog.LogRecords.PrepareFlags, System.Byte)
  name.vb: Prepare(Int32, String, String, Nullable(Of DateTime), StreamMetadata, PrepareFlags, Byte)
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransEnd(System.Int32,System.String,System.Nullable{DateTime},System.Byte)
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransEnd(System.Int32,System.String,System.Nullable{DateTime},System.Byte)
  id: TransEnd(System.Int32,System.String,System.Nullable{DateTime},System.Byte)
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  langs:
  - csharp
  - vb
  name: TransEnd(Int32, String, Nullable<DateTime>, Byte)
  nameWithType: Rec.TransEnd(Int32, String, Nullable<DateTime>, Byte)
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransEnd(System.Int32, System.String, System.Nullable<DateTime>, System.Byte)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TransEnd
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 413
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public static Rec TransEnd(int transaction, string stream, DateTime? timestamp = null, byte version = null)
    parameters:
    - id: transaction
      type: System.Int32
    - id: stream
      type: System.String
    - id: timestamp
      type: System.Nullable{DateTime}
    - id: version
      type: System.Byte
    return:
      type: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
    content.vb: Public Shared Function TransEnd(transaction As Integer, stream As String, timestamp As DateTime? = Nothing, version As Byte = Nothing) As Rec
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransEnd*
  nameWithType.vb: Rec.TransEnd(Int32, String, Nullable(Of DateTime), Byte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransEnd(System.Int32, System.String, System.Nullable(Of DateTime), System.Byte)
  name.vb: TransEnd(Int32, String, Nullable(Of DateTime), Byte)
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Commit(System.Int32,System.String,System.Nullable{DateTime},System.Byte)
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Commit(System.Int32,System.String,System.Nullable{DateTime},System.Byte)
  id: Commit(System.Int32,System.String,System.Nullable{DateTime},System.Byte)
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  langs:
  - csharp
  - vb
  name: Commit(Int32, String, Nullable<DateTime>, Byte)
  nameWithType: Rec.Commit(Int32, String, Nullable<DateTime>, Byte)
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Commit(System.Int32, System.String, System.Nullable<DateTime>, System.Byte)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Commit
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 418
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public static Rec Commit(int transaction, string stream, DateTime? timestamp = null, byte version = null)
    parameters:
    - id: transaction
      type: System.Int32
    - id: stream
      type: System.String
    - id: timestamp
      type: System.Nullable{DateTime}
    - id: version
      type: System.Byte
    return:
      type: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
    content.vb: Public Shared Function Commit(transaction As Integer, stream As String, timestamp As DateTime? = Nothing, version As Byte = Nothing) As Rec
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Commit*
  nameWithType.vb: Rec.Commit(Int32, String, Nullable(Of DateTime), Byte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Commit(System.Int32, System.String, System.Nullable(Of DateTime), System.Byte)
  name.vb: Commit(Int32, String, Nullable(Of DateTime), Byte)
references:
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  commentId: N:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  isExternal: false
  name: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  nameWithType: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<Rec>()
  nameWithType: ProtobufExtensions.Serialize<Rec>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of Rec)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec)()
  name.vb: Serialize(Of Rec)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<Rec>
    nameWithType: ProtobufExtensions.Serialize<Rec>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of Rec)
    nameWithType: ProtobufExtensions.Serialize(Of Rec)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<Rec>()
  nameWithType: ProtobufExtensions.SerializeToArray<Rec>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of Rec)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec)()
  name.vb: SerializeToArray(Of Rec)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<Rec>
    nameWithType: ProtobufExtensions.SerializeToArray<Rec>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of Rec)
    nameWithType: ProtobufExtensions.SerializeToArray(Of Rec)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.RecType
  commentId: T:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.RecType
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  isExternal: false
  name: Rec.RecType
  nameWithType: Rec.RecType
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.RecType
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: EventStore.Core.Data.StreamMetadata
  commentId: T:EventStore.Core.Data.StreamMetadata
  parent: EventStore.Core.Data
  isExternal: false
  name: StreamMetadata
  nameWithType: StreamMetadata
  fullName: EventStore.Core.Data.StreamMetadata
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  isExternal: false
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  commentId: T:EventStore.Core.TransactionLog.LogRecords.PrepareFlags
  parent: EventStore.Core.TransactionLog.LogRecords
  isExternal: false
  name: PrepareFlags
  nameWithType: PrepareFlags
  fullName: EventStore.Core.TransactionLog.LogRecords.PrepareFlags
- uid: EventStore.Core.TransactionLog.LogRecords
  commentId: N:EventStore.Core.TransactionLog.LogRecords
  isExternal: false
  name: EventStore.Core.TransactionLog.LogRecords
  nameWithType: EventStore.Core.TransactionLog.LogRecords
  fullName: EventStore.Core.TransactionLog.LogRecords
- uid: System.Byte
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.#ctor*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.#ctor
  isExternal: false
  name: Rec
  nameWithType: Rec.Rec
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Rec
- uid: System.Nullable{DateTime}
  commentId: '!:System.Nullable{DateTime}'
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Delete*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Delete
  isExternal: false
  name: Delete
  nameWithType: Rec.Delete
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Delete
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  commentId: T:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  isExternal: false
  name: Rec
  nameWithType: Rec
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransSt*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransSt
  isExternal: false
  name: TransSt
  nameWithType: Rec.TransSt
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransSt
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Prepare*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Prepare
  isExternal: false
  name: Prepare
  nameWithType: Rec.Prepare
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Prepare
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransEnd*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransEnd
  isExternal: false
  name: TransEnd
  nameWithType: Rec.TransEnd
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.TransEnd
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Commit*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Commit
  isExternal: false
  name: Commit
  nameWithType: Rec.Commit
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec.Commit

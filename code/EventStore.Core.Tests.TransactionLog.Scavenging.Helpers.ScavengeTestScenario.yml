### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  commentId: T:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  id: ScavengeTestScenario
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  children:
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.#ctor(System.Int32)
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CheckRecords
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.Db
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.KeptRecords(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult)
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.ReadIndex
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureSetUp
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureTearDown
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.UnsafeIgnoreHardDelete
  langs:
  - csharp
  - vb
  name: ScavengeTestScenario
  nameWithType: ScavengeTestScenario
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ScavengeTestScenario
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
    startLine: 23
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: 'public abstract class ScavengeTestScenario : SpecificationWithDirectoryPerTestFixture'
    content.vb: >-
      Public MustInherit Class ScavengeTestScenario

          Inherits SpecificationWithDirectoryPerTestFixture
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  derivedClasses:
  - EventStore.Core.Tests.Services.Storage.Scavenge.when_scavenging_tfchunk_with_version0_log_records_and_incomplete_chunk
  - EventStore.Core.Tests.Services.Storage.Scavenge.when_stream_is_softdeleted_and_temp_and_all_events_and_metaevents_are_in_one_chunk
  - EventStore.Core.Tests.Services.Storage.Scavenge.when_stream_is_softdeleted_and_temp_but_some_events_are_in_multiple_chunks
  - EventStore.Core.Tests.Services.Storage.Scavenge.when_stream_is_softdeleted_and_temp_but_some_metaevents_are_in_multiple_chunks
  - EventStore.Core.Tests.Services.Storage.Scavenge.when_stream_is_softdeleted_and_temp_with_log_version_0_but_some_events_are_in_multiple_chunks
  - EventStore.Core.Tests.Services.Storage.Scavenge.when_stream_is_softdeleted_with_log_record_version_0
  - EventStore.Core.Tests.Services.Storage.Scavenge.when_stream_is_softdeleted_with_mixed_log_record_version_0_and_version_1
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_deleted_stream_with_a_lot_of_data_is_scavenged
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_deleted_stream_with_a_lot_of_data_is_scavenged_with_ingore_harddelete
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_deleted_stream_with_explicit_transaction_is_scavenged
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_deleted_stream_with_metadata_is_scavenged
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_having_nothing_to_scavenge
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_having_stream_with_both_max_age_and_max_count_with_stricter_max_age_specified
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_having_stream_with_both_max_age_and_max_count_with_stricter_max_count_specified
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_having_stream_with_max_age_specified
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_having_stream_with_max_count_specified
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_having_stream_with_strict_max_age_leaving_no_events_in_stream
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_having_stream_with_truncatebefore_specified
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_metastream_is_scavenged_and_read_index_is_set_to_keep_just_last_metaevent
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_metastream_is_scavenged_and_read_index_is_set_to_keep_last_3_metaevents
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_and_bulk_transaction_spans_chunks_boundary
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_and_explicit_transaction_spans_chunks_boundary
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes
  inheritedMembers:
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.ReadIndex
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.ReadIndex
  id: ReadIndex
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  langs:
  - csharp
  - vb
  name: ReadIndex
  nameWithType: ScavengeTestScenario.ReadIndex
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.ReadIndex
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadIndex
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
    startLine: 26
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: protected IReadIndex ReadIndex
    return:
      type: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
    content.vb: Protected ReadIndex As IReadIndex
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.Db
  commentId: P:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.Db
  id: Db
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  langs:
  - csharp
  - vb
  name: Db
  nameWithType: ScavengeTestScenario.Db
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.Db
  type: Property
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Db
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
    startLine: 27
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: protected TFChunkDb Db { get; }
    parameters: []
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunkDb
    content.vb: Protected ReadOnly Property Db As TFChunkDb
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.Db*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.UnsafeIgnoreHardDelete
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.UnsafeIgnoreHardDelete
  id: UnsafeIgnoreHardDelete
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  langs:
  - csharp
  - vb
  name: UnsafeIgnoreHardDelete()
  nameWithType: ScavengeTestScenario.UnsafeIgnoreHardDelete()
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.UnsafeIgnoreHardDelete()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: UnsafeIgnoreHardDelete
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
    startLine: 34
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: protected virtual bool UnsafeIgnoreHardDelete()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function UnsafeIgnoreHardDelete As Boolean
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.UnsafeIgnoreHardDelete*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.#ctor(System.Int32)
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  langs:
  - csharp
  - vb
  name: ScavengeTestScenario(Int32)
  nameWithType: ScavengeTestScenario.ScavengeTestScenario(Int32)
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.ScavengeTestScenario(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
    startLine: 38
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: protected ScavengeTestScenario(int metastreamMaxCount = 1)
    parameters:
    - id: metastreamMaxCount
      type: System.Int32
    content.vb: Protected Sub New(metastreamMaxCount As Integer = 1)
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureSetUp
  id: TestFixtureSetUp
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  langs:
  - csharp
  - vb
  name: TestFixtureSetUp()
  nameWithType: ScavengeTestScenario.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureSetUp()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureSetUp
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
    startLine: 43
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public override void TestFixtureSetUp()
    content.vb: Public Overrides Sub TestFixtureSetUp
  overridden: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureSetUp*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureTearDown
  id: TestFixtureTearDown
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  langs:
  - csharp
  - vb
  name: TestFixtureTearDown()
  nameWithType: ScavengeTestScenario.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureTearDown()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureTearDown
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
    startLine: 79
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public override void TestFixtureTearDown()
    content.vb: Public Overrides Sub TestFixtureTearDown
  overridden: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureTearDown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
  id: CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  langs:
  - csharp
  - vb
  name: CreateDb(TFChunkDbCreationHelper)
  nameWithType: ScavengeTestScenario.CreateDb(TFChunkDbCreationHelper)
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateDb
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
    startLine: 90
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: protected abstract DbResult CreateDb(TFChunkDbCreationHelper dbCreator)
    parameters:
    - id: dbCreator
      type: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
    return:
      type: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult
    content.vb: Protected MustOverride Function CreateDb(dbCreator As TFChunkDbCreationHelper) As DbResult
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CreateDb*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.KeptRecords(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult)
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.KeptRecords(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult)
  id: KeptRecords(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult)
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  langs:
  - csharp
  - vb
  name: KeptRecords(DbResult)
  nameWithType: ScavengeTestScenario.KeptRecords(DbResult)
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.KeptRecords(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: KeptRecords
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
    startLine: 92
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: protected abstract LogRecord[][] KeptRecords(DbResult dbResult)
    parameters:
    - id: dbResult
      type: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult
    return:
      type: EventStore.Core.TransactionLog.LogRecords.LogRecord[][]
    content.vb: Protected MustOverride Function KeptRecords(dbResult As DbResult) As LogRecord()()
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.KeptRecords*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CheckRecords
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CheckRecords
  id: CheckRecords
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  langs:
  - csharp
  - vb
  name: CheckRecords()
  nameWithType: ScavengeTestScenario.CheckRecords()
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CheckRecords()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CheckRecords
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/ScavengeTestScenario.cs
    startLine: 94
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: protected void CheckRecords()
    content.vb: Protected Sub CheckRecords
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CheckRecords*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  commentId: N:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  isExternal: false
  name: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  nameWithType: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  commentId: T:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithDirectoryPerTestFixture
  nameWithType: SpecificationWithDirectoryPerTestFixture
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  commentId: F:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: PathName
  nameWithType: SpecificationWithDirectoryPerTestFixture.PathName
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: GetTempFilePath()
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: true
  name: GetFilePathFor(String)
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor(String)
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ScavengeTestScenario>()
  nameWithType: ProtobufExtensions.Serialize<ScavengeTestScenario>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ScavengeTestScenario)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario)()
  name.vb: Serialize(Of ScavengeTestScenario)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ScavengeTestScenario>
    nameWithType: ProtobufExtensions.Serialize<ScavengeTestScenario>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ScavengeTestScenario)
    nameWithType: ProtobufExtensions.Serialize(Of ScavengeTestScenario)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ScavengeTestScenario>()
  nameWithType: ProtobufExtensions.SerializeToArray<ScavengeTestScenario>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ScavengeTestScenario)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario)()
  name.vb: SerializeToArray(Of ScavengeTestScenario)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ScavengeTestScenario>
    nameWithType: ProtobufExtensions.SerializeToArray<ScavengeTestScenario>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ScavengeTestScenario)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ScavengeTestScenario)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  commentId: T:EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
  parent: EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: IReadIndex
  nameWithType: IReadIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex.IReadIndex
- uid: EventStore.Core.Services.Storage.ReaderIndex
  commentId: N:EventStore.Core.Services.Storage.ReaderIndex
  isExternal: false
  name: EventStore.Core.Services.Storage.ReaderIndex
  nameWithType: EventStore.Core.Services.Storage.ReaderIndex
  fullName: EventStore.Core.Services.Storage.ReaderIndex
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.Db*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.Db
  isExternal: false
  name: Db
  nameWithType: ScavengeTestScenario.Db
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.Db
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDb
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkDb
  parent: EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: TFChunkDb
  nameWithType: TFChunkDb
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDb
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.UnsafeIgnoreHardDelete*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.UnsafeIgnoreHardDelete
  isExternal: false
  name: UnsafeIgnoreHardDelete
  nameWithType: ScavengeTestScenario.UnsafeIgnoreHardDelete
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.UnsafeIgnoreHardDelete
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.#ctor*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.#ctor
  isExternal: false
  name: ScavengeTestScenario
  nameWithType: ScavengeTestScenario.ScavengeTestScenario
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.ScavengeTestScenario
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureSetUp()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureSetUp*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureSetUp
  isExternal: false
  name: TestFixtureSetUp
  nameWithType: ScavengeTestScenario.TestFixtureSetUp
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureSetUp
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: TestFixtureTearDown()
  nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureTearDown*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureTearDown
  isExternal: false
  name: TestFixtureTearDown
  nameWithType: ScavengeTestScenario.TestFixtureTearDown
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureTearDown
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CreateDb*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CreateDb
  isExternal: false
  name: CreateDb
  nameWithType: ScavengeTestScenario.CreateDb
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CreateDb
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
  commentId: T:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  isExternal: false
  name: TFChunkDbCreationHelper
  nameWithType: TFChunkDbCreationHelper
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult
  commentId: T:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  isExternal: false
  name: DbResult
  nameWithType: DbResult
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.KeptRecords*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.KeptRecords
  isExternal: false
  name: KeptRecords
  nameWithType: ScavengeTestScenario.KeptRecords
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.KeptRecords
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord[][]
  name: LogRecord[][]
  nameWithType: LogRecord[][]
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord[][]
  nameWithType.vb: LogRecord()()
  fullName.vb: EventStore.Core.TransactionLog.LogRecords.LogRecord()()
  name.vb: LogRecord()()
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord
    name: LogRecord
    nameWithType: LogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord
    name: LogRecord
    nameWithType: LogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CheckRecords*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CheckRecords
  isExternal: false
  name: CheckRecords
  nameWithType: ScavengeTestScenario.CheckRecords
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CheckRecords

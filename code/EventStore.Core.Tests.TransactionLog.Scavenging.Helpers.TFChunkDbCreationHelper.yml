### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
  commentId: T:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
  id: TFChunkDbCreationHelper
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  children:
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.#ctor(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig)
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.Chunk(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec[])
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.CompleteLastChunk
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.CreateDb
  langs:
  - csharp
  - vb
  name: TFChunkDbCreationHelper
  nameWithType: TFChunkDbCreationHelper
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TFChunkDbCreationHelper
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 10
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: 'public class TFChunkDbCreationHelper : object'
    content.vb: >-
      Public Class TFChunkDbCreationHelper

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.#ctor(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig)
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.#ctor(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig)
  id: '#ctor(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig)'
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
  langs:
  - csharp
  - vb
  name: TFChunkDbCreationHelper(TFChunkDbConfig)
  nameWithType: TFChunkDbCreationHelper.TFChunkDbCreationHelper(TFChunkDbConfig)
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.TFChunkDbCreationHelper(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 19
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public TFChunkDbCreationHelper(TFChunkDbConfig dbConfig)
    parameters:
    - id: dbConfig
      type: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
    content.vb: Public Sub New(dbConfig As TFChunkDbConfig)
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.Chunk(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec[])
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.Chunk(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec[])
  id: Chunk(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec[])
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
  langs:
  - csharp
  - vb
  name: Chunk(Rec[])
  nameWithType: TFChunkDbCreationHelper.Chunk(Rec[])
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.Chunk(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Chunk
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 31
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public TFChunkDbCreationHelper Chunk(params Rec[] records)
    parameters:
    - id: records
      type: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec[]
    return:
      type: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
    content.vb: Public Function Chunk(ParamArray records As Rec()) As TFChunkDbCreationHelper
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.Chunk*
  nameWithType.vb: TFChunkDbCreationHelper.Chunk(Rec())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.Chunk(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec())
  name.vb: Chunk(Rec())
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.CompleteLastChunk
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.CompleteLastChunk
  id: CompleteLastChunk
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
  langs:
  - csharp
  - vb
  name: CompleteLastChunk()
  nameWithType: TFChunkDbCreationHelper.CompleteLastChunk()
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.CompleteLastChunk()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CompleteLastChunk
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 37
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public TFChunkDbCreationHelper CompleteLastChunk()
    return:
      type: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
    content.vb: Public Function CompleteLastChunk As TFChunkDbCreationHelper
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.CompleteLastChunk*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.CreateDb
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.CreateDb
  id: CreateDb
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
  langs:
  - csharp
  - vb
  name: CreateDb()
  nameWithType: TFChunkDbCreationHelper.CreateDb()
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.CreateDb()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateDb
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 43
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public DbResult CreateDb()
    return:
      type: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult
    content.vb: Public Function CreateDb As DbResult
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.CreateDb*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  commentId: N:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  isExternal: false
  name: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  nameWithType: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TFChunkDbCreationHelper>()
  nameWithType: ProtobufExtensions.Serialize<TFChunkDbCreationHelper>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TFChunkDbCreationHelper)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)()
  name.vb: Serialize(Of TFChunkDbCreationHelper)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TFChunkDbCreationHelper>
    nameWithType: ProtobufExtensions.Serialize<TFChunkDbCreationHelper>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TFChunkDbCreationHelper)
    nameWithType: ProtobufExtensions.Serialize(Of TFChunkDbCreationHelper)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TFChunkDbCreationHelper>()
  nameWithType: ProtobufExtensions.SerializeToArray<TFChunkDbCreationHelper>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TFChunkDbCreationHelper)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)()
  name.vb: SerializeToArray(Of TFChunkDbCreationHelper)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TFChunkDbCreationHelper>
    nameWithType: ProtobufExtensions.SerializeToArray<TFChunkDbCreationHelper>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TFChunkDbCreationHelper)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TFChunkDbCreationHelper)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.#ctor*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.#ctor
  isExternal: false
  name: TFChunkDbCreationHelper
  nameWithType: TFChunkDbCreationHelper.TFChunkDbCreationHelper
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.TFChunkDbCreationHelper
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  parent: EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: TFChunkDbConfig
  nameWithType: TFChunkDbConfig
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.Chunk*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.Chunk
  isExternal: false
  name: Chunk
  nameWithType: TFChunkDbCreationHelper.Chunk
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.Chunk
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec[]
  name: Rec[]
  nameWithType: Rec[]
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec[]
  nameWithType.vb: Rec()
  fullName.vb: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec()
  name.vb: Rec()
  spec.csharp:
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
    name: Rec
    nameWithType: Rec
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
    name: Rec
    nameWithType: Rec
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.Rec
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
  commentId: T:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  isExternal: false
  name: TFChunkDbCreationHelper
  nameWithType: TFChunkDbCreationHelper
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.CompleteLastChunk*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.CompleteLastChunk
  isExternal: false
  name: CompleteLastChunk
  nameWithType: TFChunkDbCreationHelper.CompleteLastChunk
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.CompleteLastChunk
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.CreateDb*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.CreateDb
  isExternal: false
  name: CreateDb
  nameWithType: TFChunkDbCreationHelper.CreateDb
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper.CreateDb
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult
  commentId: T:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  isExternal: false
  name: DbResult
  nameWithType: DbResult
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo
  commentId: T:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo
  id: TransactionInfo
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  children:
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.#ctor(System.String,Guid,Guid)
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.FirstPrepareId
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.IsDelete
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.LastPrepareId
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.StreamId
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.StreamMetadata
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.TransactionEventNumber
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.TransactionOffset
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.TransactionPosition
  langs:
  - csharp
  - vb
  name: TransactionInfo
  nameWithType: TransactionInfo
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TransactionInfo
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 320
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: 'public class TransactionInfo : object'
    content.vb: >-
      Public Class TransactionInfo

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.StreamId
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.StreamId
  id: StreamId
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo
  langs:
  - csharp
  - vb
  name: StreamId
  nameWithType: TransactionInfo.StreamId
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.StreamId
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StreamId
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 322
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public readonly string StreamId
    return:
      type: System.String
    content.vb: Public ReadOnly StreamId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.FirstPrepareId
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.FirstPrepareId
  id: FirstPrepareId
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo
  langs:
  - csharp
  - vb
  name: FirstPrepareId
  nameWithType: TransactionInfo.FirstPrepareId
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.FirstPrepareId
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: FirstPrepareId
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 323
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public readonly Guid FirstPrepareId
    return:
      type: Guid
    content.vb: Public ReadOnly FirstPrepareId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.LastPrepareId
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.LastPrepareId
  id: LastPrepareId
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo
  langs:
  - csharp
  - vb
  name: LastPrepareId
  nameWithType: TransactionInfo.LastPrepareId
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.LastPrepareId
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: LastPrepareId
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 324
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public Guid LastPrepareId
    return:
      type: Guid
    content.vb: Public LastPrepareId As Guid
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.TransactionPosition
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.TransactionPosition
  id: TransactionPosition
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo
  langs:
  - csharp
  - vb
  name: TransactionPosition
  nameWithType: TransactionInfo.TransactionPosition
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.TransactionPosition
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TransactionPosition
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 325
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public long TransactionPosition
    return:
      type: System.Int64
    content.vb: Public TransactionPosition As Long
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.TransactionOffset
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.TransactionOffset
  id: TransactionOffset
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo
  langs:
  - csharp
  - vb
  name: TransactionOffset
  nameWithType: TransactionInfo.TransactionOffset
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.TransactionOffset
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TransactionOffset
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 326
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public int TransactionOffset
    return:
      type: System.Int32
    content.vb: Public TransactionOffset As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.TransactionEventNumber
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.TransactionEventNumber
  id: TransactionEventNumber
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo
  langs:
  - csharp
  - vb
  name: TransactionEventNumber
  nameWithType: TransactionInfo.TransactionEventNumber
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.TransactionEventNumber
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TransactionEventNumber
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 327
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public long TransactionEventNumber
    return:
      type: System.Int64
    content.vb: Public TransactionEventNumber As Long
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.IsDelete
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.IsDelete
  id: IsDelete
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo
  langs:
  - csharp
  - vb
  name: IsDelete
  nameWithType: TransactionInfo.IsDelete
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.IsDelete
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IsDelete
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 328
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public bool IsDelete
    return:
      type: System.Boolean
    content.vb: Public IsDelete As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.StreamMetadata
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.StreamMetadata
  id: StreamMetadata
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo
  langs:
  - csharp
  - vb
  name: StreamMetadata
  nameWithType: TransactionInfo.StreamMetadata
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.StreamMetadata
  type: Field
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StreamMetadata
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 329
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public StreamMetadata StreamMetadata
    return:
      type: EventStore.Core.Data.StreamMetadata
    content.vb: Public StreamMetadata As StreamMetadata
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.#ctor(System.String,Guid,Guid)
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.#ctor(System.String,Guid,Guid)
  id: '#ctor(System.String,Guid,Guid)'
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo
  langs:
  - csharp
  - vb
  name: TransactionInfo(String, Guid, Guid)
  nameWithType: TransactionInfo.TransactionInfo(String, Guid, Guid)
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.TransactionInfo(System.String, Guid, Guid)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/Helpers/TFChunkDbCreationHelper.cs
    startLine: 331
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  syntax:
    content: public TransactionInfo(string streamId, Guid firstPrepareId, Guid lastPrepareId)
    parameters:
    - id: streamId
      type: System.String
    - id: firstPrepareId
      type: Guid
    - id: lastPrepareId
      type: Guid
    content.vb: Public Sub New(streamId As String, firstPrepareId As Guid, lastPrepareId As Guid)
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  commentId: N:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  isExternal: false
  name: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  nameWithType: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TransactionInfo>()
  nameWithType: ProtobufExtensions.Serialize<TransactionInfo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TransactionInfo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo)()
  name.vb: Serialize(Of TransactionInfo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TransactionInfo>
    nameWithType: ProtobufExtensions.Serialize<TransactionInfo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TransactionInfo)
    nameWithType: ProtobufExtensions.Serialize(Of TransactionInfo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TransactionInfo>()
  nameWithType: ProtobufExtensions.SerializeToArray<TransactionInfo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TransactionInfo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo)()
  name.vb: SerializeToArray(Of TransactionInfo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TransactionInfo>
    nameWithType: ProtobufExtensions.SerializeToArray<TransactionInfo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TransactionInfo)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TransactionInfo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Data.StreamMetadata
  commentId: T:EventStore.Core.Data.StreamMetadata
  parent: EventStore.Core.Data
  isExternal: false
  name: StreamMetadata
  nameWithType: StreamMetadata
  fullName: EventStore.Core.Data.StreamMetadata
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  isExternal: false
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.#ctor*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.#ctor
  isExternal: false
  name: TransactionInfo
  nameWithType: TransactionInfo.TransactionInfo
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TransactionInfo.TransactionInfo

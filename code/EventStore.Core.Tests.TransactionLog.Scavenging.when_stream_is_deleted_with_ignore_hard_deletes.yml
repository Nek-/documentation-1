### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes
  commentId: T:EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes
  id: when_stream_is_deleted_with_ignore_hard_deletes
  parent: EventStore.Core.Tests.TransactionLog.Scavenging
  children:
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.KeptRecords(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult)
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.stream_created_and_delete_tombstone_with_corresponding_commits_are_kept
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.UnsafeIgnoreHardDelete
  langs:
  - csharp
  - vb
  name: when_stream_is_deleted_with_ignore_hard_deletes
  nameWithType: when_stream_is_deleted_with_ignore_hard_deletes
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/when_stream_is_deleted.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: when_stream_is_deleted_with_ignore_hard_deletes
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/when_stream_is_deleted.cs
    startLine: 35
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging
  syntax:
    content: 'public class when_stream_is_deleted_with_ignore_hard_deletes : ScavengeTestScenario'
    content.vb: >-
      Public Class when_stream_is_deleted_with_ignore_hard_deletes

          Inherits ScavengeTestScenario
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  inheritedMembers:
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.ReadIndex
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.Db
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureSetUp
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureTearDown
  - EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CheckRecords
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.UnsafeIgnoreHardDelete
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.UnsafeIgnoreHardDelete
  id: UnsafeIgnoreHardDelete
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes
  langs:
  - csharp
  - vb
  name: UnsafeIgnoreHardDelete()
  nameWithType: when_stream_is_deleted_with_ignore_hard_deletes.UnsafeIgnoreHardDelete()
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.UnsafeIgnoreHardDelete()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/when_stream_is_deleted.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: UnsafeIgnoreHardDelete
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/when_stream_is_deleted.cs
    startLine: 39
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging
  syntax:
    content: protected override bool UnsafeIgnoreHardDelete()
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function UnsafeIgnoreHardDelete As Boolean
  overridden: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.UnsafeIgnoreHardDelete
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.UnsafeIgnoreHardDelete*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
  id: CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes
  langs:
  - csharp
  - vb
  name: CreateDb(TFChunkDbCreationHelper)
  nameWithType: when_stream_is_deleted_with_ignore_hard_deletes.CreateDb(TFChunkDbCreationHelper)
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/when_stream_is_deleted.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateDb
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/when_stream_is_deleted.cs
    startLine: 40
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging
  syntax:
    content: protected override DbResult CreateDb(TFChunkDbCreationHelper dbCreator)
    parameters:
    - id: dbCreator
      type: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
    return:
      type: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult
    content.vb: Protected Overrides Function CreateDb(dbCreator As TFChunkDbCreationHelper) As DbResult
  overridden: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.CreateDb*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.KeptRecords(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult)
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.KeptRecords(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult)
  id: KeptRecords(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult)
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes
  langs:
  - csharp
  - vb
  name: KeptRecords(DbResult)
  nameWithType: when_stream_is_deleted_with_ignore_hard_deletes.KeptRecords(DbResult)
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.KeptRecords(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/when_stream_is_deleted.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: KeptRecords
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/when_stream_is_deleted.cs
    startLine: 49
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging
  syntax:
    content: protected override LogRecord[][] KeptRecords(DbResult dbResult)
    parameters:
    - id: dbResult
      type: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult
    return:
      type: EventStore.Core.TransactionLog.LogRecords.LogRecord[][]
    content.vb: Protected Overrides Function KeptRecords(dbResult As DbResult) As LogRecord()()
  overridden: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.KeptRecords(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult)
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.KeptRecords*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.stream_created_and_delete_tombstone_with_corresponding_commits_are_kept
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.stream_created_and_delete_tombstone_with_corresponding_commits_are_kept
  id: stream_created_and_delete_tombstone_with_corresponding_commits_are_kept
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes
  langs:
  - csharp
  - vb
  name: stream_created_and_delete_tombstone_with_corresponding_commits_are_kept()
  nameWithType: when_stream_is_deleted_with_ignore_hard_deletes.stream_created_and_delete_tombstone_with_corresponding_commits_are_kept()
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.stream_created_and_delete_tombstone_with_corresponding_commits_are_kept()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Scavenging/when_stream_is_deleted.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: stream_created_and_delete_tombstone_with_corresponding_commits_are_kept
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Scavenging/when_stream_is_deleted.cs
    startLine: 58
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Scavenging
  syntax:
    content: public void stream_created_and_delete_tombstone_with_corresponding_commits_are_kept()
    content.vb: Public Sub stream_created_and_delete_tombstone_with_corresponding_commits_are_kept
  overload: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.stream_created_and_delete_tombstone_with_corresponding_commits_are_kept*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.TransactionLog.Scavenging
  commentId: N:EventStore.Core.Tests.TransactionLog.Scavenging
  isExternal: false
  name: EventStore.Core.Tests.TransactionLog.Scavenging
  nameWithType: EventStore.Core.Tests.TransactionLog.Scavenging
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  commentId: T:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithDirectoryPerTestFixture
  nameWithType: SpecificationWithDirectoryPerTestFixture
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  commentId: T:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  isExternal: false
  name: ScavengeTestScenario
  nameWithType: ScavengeTestScenario
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.ReadIndex
  commentId: F:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.ReadIndex
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  isExternal: false
  name: ReadIndex
  nameWithType: ScavengeTestScenario.ReadIndex
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.ReadIndex
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.Db
  commentId: P:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.Db
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  isExternal: false
  name: Db
  nameWithType: ScavengeTestScenario.Db
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.Db
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureSetUp
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureSetUp
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  isExternal: false
  name: TestFixtureSetUp()
  nameWithType: ScavengeTestScenario.TestFixtureSetUp()
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureSetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: ScavengeTestScenario.TestFixtureSetUp
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureSetUp
    name: TestFixtureSetUp
    nameWithType: ScavengeTestScenario.TestFixtureSetUp
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureSetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureTearDown
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureTearDown
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  isExternal: false
  name: TestFixtureTearDown()
  nameWithType: ScavengeTestScenario.TestFixtureTearDown()
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureTearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: ScavengeTestScenario.TestFixtureTearDown
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureTearDown
    name: TestFixtureTearDown
    nameWithType: ScavengeTestScenario.TestFixtureTearDown
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.TestFixtureTearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CheckRecords
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CheckRecords
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  isExternal: false
  name: CheckRecords()
  nameWithType: ScavengeTestScenario.CheckRecords()
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CheckRecords()
  spec.csharp:
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CheckRecords
    name: CheckRecords
    nameWithType: ScavengeTestScenario.CheckRecords
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CheckRecords
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CheckRecords
    name: CheckRecords
    nameWithType: ScavengeTestScenario.CheckRecords
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CheckRecords
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  commentId: F:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: PathName
  nameWithType: SpecificationWithDirectoryPerTestFixture.PathName
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.PathName
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: false
  name: GetTempFilePath()
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  parent: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture
  isExternal: true
  name: GetFilePathFor(String)
  nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor(String)
  fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectoryPerTestFixture.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectoryPerTestFixture.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<when_stream_is_deleted_with_ignore_hard_deletes>()
  nameWithType: ProtobufExtensions.Serialize<when_stream_is_deleted_with_ignore_hard_deletes>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of when_stream_is_deleted_with_ignore_hard_deletes)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes)()
  name.vb: Serialize(Of when_stream_is_deleted_with_ignore_hard_deletes)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<when_stream_is_deleted_with_ignore_hard_deletes>
    nameWithType: ProtobufExtensions.Serialize<when_stream_is_deleted_with_ignore_hard_deletes>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of when_stream_is_deleted_with_ignore_hard_deletes)
    nameWithType: ProtobufExtensions.Serialize(Of when_stream_is_deleted_with_ignore_hard_deletes)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<when_stream_is_deleted_with_ignore_hard_deletes>()
  nameWithType: ProtobufExtensions.SerializeToArray<when_stream_is_deleted_with_ignore_hard_deletes>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of when_stream_is_deleted_with_ignore_hard_deletes)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes)()
  name.vb: SerializeToArray(Of when_stream_is_deleted_with_ignore_hard_deletes)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<when_stream_is_deleted_with_ignore_hard_deletes>
    nameWithType: ProtobufExtensions.SerializeToArray<when_stream_is_deleted_with_ignore_hard_deletes>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of when_stream_is_deleted_with_ignore_hard_deletes)
    nameWithType: ProtobufExtensions.SerializeToArray(Of when_stream_is_deleted_with_ignore_hard_deletes)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  commentId: N:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  isExternal: false
  name: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  nameWithType: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.UnsafeIgnoreHardDelete
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.UnsafeIgnoreHardDelete
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  isExternal: false
  name: UnsafeIgnoreHardDelete()
  nameWithType: ScavengeTestScenario.UnsafeIgnoreHardDelete()
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.UnsafeIgnoreHardDelete()
  spec.csharp:
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.UnsafeIgnoreHardDelete
    name: UnsafeIgnoreHardDelete
    nameWithType: ScavengeTestScenario.UnsafeIgnoreHardDelete
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.UnsafeIgnoreHardDelete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.UnsafeIgnoreHardDelete
    name: UnsafeIgnoreHardDelete
    nameWithType: ScavengeTestScenario.UnsafeIgnoreHardDelete
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.UnsafeIgnoreHardDelete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.UnsafeIgnoreHardDelete*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.UnsafeIgnoreHardDelete
  isExternal: false
  name: UnsafeIgnoreHardDelete
  nameWithType: when_stream_is_deleted_with_ignore_hard_deletes.UnsafeIgnoreHardDelete
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.UnsafeIgnoreHardDelete
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  isExternal: false
  name: CreateDb(TFChunkDbCreationHelper)
  nameWithType: ScavengeTestScenario.CreateDb(TFChunkDbCreationHelper)
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
  spec.csharp:
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
    name: CreateDb
    nameWithType: ScavengeTestScenario.CreateDb
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CreateDb
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
    name: TFChunkDbCreationHelper
    nameWithType: TFChunkDbCreationHelper
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CreateDb(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper)
    name: CreateDb
    nameWithType: ScavengeTestScenario.CreateDb
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.CreateDb
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
    name: TFChunkDbCreationHelper
    nameWithType: TFChunkDbCreationHelper
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.CreateDb*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.CreateDb
  isExternal: false
  name: CreateDb
  nameWithType: when_stream_is_deleted_with_ignore_hard_deletes.CreateDb
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.CreateDb
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
  commentId: T:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  isExternal: false
  name: TFChunkDbCreationHelper
  nameWithType: TFChunkDbCreationHelper
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.TFChunkDbCreationHelper
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult
  commentId: T:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers
  isExternal: false
  name: DbResult
  nameWithType: DbResult
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.KeptRecords(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult)
  commentId: M:EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.KeptRecords(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult)
  parent: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario
  isExternal: false
  name: KeptRecords(DbResult)
  nameWithType: ScavengeTestScenario.KeptRecords(DbResult)
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.KeptRecords(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult)
  spec.csharp:
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.KeptRecords(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult)
    name: KeptRecords
    nameWithType: ScavengeTestScenario.KeptRecords
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.KeptRecords
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult
    name: DbResult
    nameWithType: DbResult
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.KeptRecords(EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult)
    name: KeptRecords
    nameWithType: ScavengeTestScenario.KeptRecords
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.ScavengeTestScenario.KeptRecords
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult
    name: DbResult
    nameWithType: DbResult
    fullName: EventStore.Core.Tests.TransactionLog.Scavenging.Helpers.DbResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.KeptRecords*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.KeptRecords
  isExternal: false
  name: KeptRecords
  nameWithType: when_stream_is_deleted_with_ignore_hard_deletes.KeptRecords
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.KeptRecords
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord[][]
  name: LogRecord[][]
  nameWithType: LogRecord[][]
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord[][]
  nameWithType.vb: LogRecord()()
  fullName.vb: EventStore.Core.TransactionLog.LogRecords.LogRecord()()
  name.vb: LogRecord()()
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord
    name: LogRecord
    nameWithType: LogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord
    name: LogRecord
    nameWithType: LogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.stream_created_and_delete_tombstone_with_corresponding_commits_are_kept*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.stream_created_and_delete_tombstone_with_corresponding_commits_are_kept
  isExternal: false
  name: stream_created_and_delete_tombstone_with_corresponding_commits_are_kept
  nameWithType: when_stream_is_deleted_with_ignore_hard_deletes.stream_created_and_delete_tombstone_with_corresponding_commits_are_kept
  fullName: EventStore.Core.Tests.TransactionLog.Scavenging.when_stream_is_deleted_with_ignore_hard_deletes.stream_created_and_delete_tombstone_with_corresponding_commits_are_kept

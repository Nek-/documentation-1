### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.TransactionLog.Validation.DbUtil
  commentId: T:EventStore.Core.Tests.TransactionLog.Validation.DbUtil
  id: DbUtil
  parent: EventStore.Core.Tests.TransactionLog.Validation
  children:
  - EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateMultiChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int64})
  - EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateOngoingChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig,System.Int32,System.String,System.Nullable{System.Int32},System.Byte[])
  - EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateSingleChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig,System.Int32,System.String,System.Nullable{System.Int32},System.Boolean,System.Byte[])
  langs:
  - csharp
  - vb
  name: DbUtil
  nameWithType: DbUtil
  fullName: EventStore.Core.Tests.TransactionLog.Validation.DbUtil
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Validation/TFChunkDbCreationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DbUtil
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Validation/TFChunkDbCreationTestBase.cs
    startLine: 7
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Validation
  syntax:
    content: 'public static class DbUtil : object'
    content.vb: >-
      Public Module DbUtil

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateSingleChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig,System.Int32,System.String,System.Nullable{System.Int32},System.Boolean,System.Byte[])
  commentId: M:EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateSingleChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig,System.Int32,System.String,System.Nullable{System.Int32},System.Boolean,System.Byte[])
  id: CreateSingleChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig,System.Int32,System.String,System.Nullable{System.Int32},System.Boolean,System.Byte[])
  parent: EventStore.Core.Tests.TransactionLog.Validation.DbUtil
  langs:
  - csharp
  - vb
  name: CreateSingleChunk(TFChunkDbConfig, Int32, String, Nullable<Int32>, Boolean, Byte[])
  nameWithType: DbUtil.CreateSingleChunk(TFChunkDbConfig, Int32, String, Nullable<Int32>, Boolean, Byte[])
  fullName: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateSingleChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig, System.Int32, System.String, System.Nullable<System.Int32>, System.Boolean, System.Byte[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Validation/TFChunkDbCreationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateSingleChunk
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Validation/TFChunkDbCreationTestBase.cs
    startLine: 9
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Validation
  syntax:
    content: public static void CreateSingleChunk(TFChunkDbConfig config, int chunkNum, string filename, int ? actualDataSize = null, bool isScavenged = false, byte[] contents = null)
    parameters:
    - id: config
      type: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
    - id: chunkNum
      type: System.Int32
    - id: filename
      type: System.String
    - id: actualDataSize
      type: System.Nullable{System.Int32}
    - id: isScavenged
      type: System.Boolean
    - id: contents
      type: System.Byte[]
    content.vb: Public Shared Sub CreateSingleChunk(config As TFChunkDbConfig, chunkNum As Integer, filename As String, actualDataSize As Integer? = Nothing, isScavenged As Boolean = False, contents As Byte() = Nothing)
  overload: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateSingleChunk*
  nameWithType.vb: DbUtil.CreateSingleChunk(TFChunkDbConfig, Int32, String, Nullable(Of Int32), Boolean, Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateSingleChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig, System.Int32, System.String, System.Nullable(Of System.Int32), System.Boolean, System.Byte())
  name.vb: CreateSingleChunk(TFChunkDbConfig, Int32, String, Nullable(Of Int32), Boolean, Byte())
- uid: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateMultiChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int64})
  commentId: M:EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateMultiChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int64})
  id: CreateMultiChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int64})
  parent: EventStore.Core.Tests.TransactionLog.Validation.DbUtil
  langs:
  - csharp
  - vb
  name: CreateMultiChunk(TFChunkDbConfig, Int32, Int32, String, Nullable<Int32>, Nullable<Int64>)
  nameWithType: DbUtil.CreateMultiChunk(TFChunkDbConfig, Int32, Int32, String, Nullable<Int32>, Nullable<Int64>)
  fullName: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateMultiChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig, System.Int32, System.Int32, System.String, System.Nullable<System.Int32>, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Validation/TFChunkDbCreationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateMultiChunk
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Validation/TFChunkDbCreationTestBase.cs
    startLine: 31
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Validation
  syntax:
    content: public static void CreateMultiChunk(TFChunkDbConfig config, int chunkStartNum, int chunkEndNum, string filename, int ? physicalSize = null, long ? logicalSize = null)
    parameters:
    - id: config
      type: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
    - id: chunkStartNum
      type: System.Int32
    - id: chunkEndNum
      type: System.Int32
    - id: filename
      type: System.String
    - id: physicalSize
      type: System.Nullable{System.Int32}
    - id: logicalSize
      type: System.Nullable{System.Int64}
    content.vb: Public Shared Sub CreateMultiChunk(config As TFChunkDbConfig, chunkStartNum As Integer, chunkEndNum As Integer, filename As String, physicalSize As Integer? = Nothing, logicalSize As Long? = Nothing)
  overload: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateMultiChunk*
  nameWithType.vb: DbUtil.CreateMultiChunk(TFChunkDbConfig, Int32, Int32, String, Nullable(Of Int32), Nullable(Of Int64))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateMultiChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig, System.Int32, System.Int32, System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Int64))
  name.vb: CreateMultiChunk(TFChunkDbConfig, Int32, Int32, String, Nullable(Of Int32), Nullable(Of Int64))
- uid: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateOngoingChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig,System.Int32,System.String,System.Nullable{System.Int32},System.Byte[])
  commentId: M:EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateOngoingChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig,System.Int32,System.String,System.Nullable{System.Int32},System.Byte[])
  id: CreateOngoingChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig,System.Int32,System.String,System.Nullable{System.Int32},System.Byte[])
  parent: EventStore.Core.Tests.TransactionLog.Validation.DbUtil
  langs:
  - csharp
  - vb
  name: CreateOngoingChunk(TFChunkDbConfig, Int32, String, Nullable<Int32>, Byte[])
  nameWithType: DbUtil.CreateOngoingChunk(TFChunkDbConfig, Int32, String, Nullable<Int32>, Byte[])
  fullName: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateOngoingChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig, System.Int32, System.String, System.Nullable<System.Int32>, System.Byte[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/Validation/TFChunkDbCreationTestBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateOngoingChunk
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/Validation/TFChunkDbCreationTestBase.cs
    startLine: 48
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog.Validation
  syntax:
    content: public static void CreateOngoingChunk(TFChunkDbConfig config, int chunkNum, string filename, int ? actualSize = null, byte[] contents = null)
    parameters:
    - id: config
      type: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
    - id: chunkNum
      type: System.Int32
    - id: filename
      type: System.String
    - id: actualSize
      type: System.Nullable{System.Int32}
    - id: contents
      type: System.Byte[]
    content.vb: Public Shared Sub CreateOngoingChunk(config As TFChunkDbConfig, chunkNum As Integer, filename As String, actualSize As Integer? = Nothing, contents As Byte() = Nothing)
  overload: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateOngoingChunk*
  nameWithType.vb: DbUtil.CreateOngoingChunk(TFChunkDbConfig, Int32, String, Nullable(Of Int32), Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateOngoingChunk(EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig, System.Int32, System.String, System.Nullable(Of System.Int32), System.Byte())
  name.vb: CreateOngoingChunk(TFChunkDbConfig, Int32, String, Nullable(Of Int32), Byte())
references:
- uid: EventStore.Core.Tests.TransactionLog.Validation
  commentId: N:EventStore.Core.Tests.TransactionLog.Validation
  isExternal: false
  name: EventStore.Core.Tests.TransactionLog.Validation
  nameWithType: EventStore.Core.Tests.TransactionLog.Validation
  fullName: EventStore.Core.Tests.TransactionLog.Validation
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateSingleChunk*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateSingleChunk
  isExternal: false
  name: CreateSingleChunk
  nameWithType: DbUtil.CreateSingleChunk
  fullName: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateSingleChunk
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  parent: EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: TFChunkDbConfig
  nameWithType: TFChunkDbConfig
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateMultiChunk*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateMultiChunk
  isExternal: false
  name: CreateMultiChunk
  nameWithType: DbUtil.CreateMultiChunk
  fullName: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateMultiChunk
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateOngoingChunk*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateOngoingChunk
  isExternal: false
  name: CreateOngoingChunk
  nameWithType: DbUtil.CreateOngoingChunk
  fullName: EventStore.Core.Tests.TransactionLog.Validation.DbUtil.CreateOngoingChunk

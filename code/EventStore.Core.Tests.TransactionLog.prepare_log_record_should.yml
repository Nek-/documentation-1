### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should
  commentId: T:EventStore.Core.Tests.TransactionLog.prepare_log_record_should
  id: prepare_log_record_should
  parent: EventStore.Core.Tests.TransactionLog
  children:
  - EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_correlationid
  - EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_eventid
  - EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_eventtype
  - EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_empty_eventstreamid
  - EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_data
  - EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_eventstreamid
  - EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_eventtype
  - EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_incorrect_expectedversion
  - EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_logposition
  - EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_transactionposition
  - EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_transaction_offset_less_than_minus_one
  langs:
  - csharp
  - vb
  name: prepare_log_record_should
  nameWithType: prepare_log_record_should
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: prepare_log_record_should
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
    startLine: 6
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: 'public class prepare_log_record_should : object'
    content.vb: >-
      Public Class prepare_log_record_should

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.TransactionLog.prepare_log_record_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.TransactionLog.prepare_log_record_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_logposition
  commentId: M:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_logposition
  id: throw_argumentoutofrangeexception_when_given_negative_logposition
  parent: EventStore.Core.Tests.TransactionLog.prepare_log_record_should
  langs:
  - csharp
  - vb
  name: throw_argumentoutofrangeexception_when_given_negative_logposition()
  nameWithType: prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_logposition()
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_logposition()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_argumentoutofrangeexception_when_given_negative_logposition
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
    startLine: 9
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void throw_argumentoutofrangeexception_when_given_negative_logposition()
    content.vb: Public Sub throw_argumentoutofrangeexception_when_given_negative_logposition
  overload: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_logposition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_transactionposition
  commentId: M:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_transactionposition
  id: throw_argumentoutofrangeexception_when_given_negative_transactionposition
  parent: EventStore.Core.Tests.TransactionLog.prepare_log_record_should
  langs:
  - csharp
  - vb
  name: throw_argumentoutofrangeexception_when_given_negative_transactionposition()
  nameWithType: prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_transactionposition()
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_transactionposition()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_argumentoutofrangeexception_when_given_negative_transactionposition
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
    startLine: 16
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void throw_argumentoutofrangeexception_when_given_negative_transactionposition()
    content.vb: Public Sub throw_argumentoutofrangeexception_when_given_negative_transactionposition
  overload: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_transactionposition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_transaction_offset_less_than_minus_one
  commentId: M:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_transaction_offset_less_than_minus_one
  id: throw_argumentoutofrangeexception_when_given_transaction_offset_less_than_minus_one
  parent: EventStore.Core.Tests.TransactionLog.prepare_log_record_should
  langs:
  - csharp
  - vb
  name: throw_argumentoutofrangeexception_when_given_transaction_offset_less_than_minus_one()
  nameWithType: prepare_log_record_should.throw_argumentoutofrangeexception_when_given_transaction_offset_less_than_minus_one()
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_transaction_offset_less_than_minus_one()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_argumentoutofrangeexception_when_given_transaction_offset_less_than_minus_one
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
    startLine: 23
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void throw_argumentoutofrangeexception_when_given_transaction_offset_less_than_minus_one()
    content.vb: Public Sub throw_argumentoutofrangeexception_when_given_transaction_offset_less_than_minus_one
  overload: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_transaction_offset_less_than_minus_one*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_correlationid
  commentId: M:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_correlationid
  id: throw_argumentexception_when_given_empty_correlationid
  parent: EventStore.Core.Tests.TransactionLog.prepare_log_record_should
  langs:
  - csharp
  - vb
  name: throw_argumentexception_when_given_empty_correlationid()
  nameWithType: prepare_log_record_should.throw_argumentexception_when_given_empty_correlationid()
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_correlationid()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_argumentexception_when_given_empty_correlationid
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
    startLine: 30
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void throw_argumentexception_when_given_empty_correlationid()
    content.vb: Public Sub throw_argumentexception_when_given_empty_correlationid
  overload: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_correlationid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_eventid
  commentId: M:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_eventid
  id: throw_argumentexception_when_given_empty_eventid
  parent: EventStore.Core.Tests.TransactionLog.prepare_log_record_should
  langs:
  - csharp
  - vb
  name: throw_argumentexception_when_given_empty_eventid()
  nameWithType: prepare_log_record_should.throw_argumentexception_when_given_empty_eventid()
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_eventid()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_argumentexception_when_given_empty_eventid
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
    startLine: 37
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void throw_argumentexception_when_given_empty_eventid()
    content.vb: Public Sub throw_argumentexception_when_given_empty_eventid
  overload: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_eventid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_eventstreamid
  commentId: M:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_eventstreamid
  id: throw_argumentnullexception_when_given_null_eventstreamid
  parent: EventStore.Core.Tests.TransactionLog.prepare_log_record_should
  langs:
  - csharp
  - vb
  name: throw_argumentnullexception_when_given_null_eventstreamid()
  nameWithType: prepare_log_record_should.throw_argumentnullexception_when_given_null_eventstreamid()
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_eventstreamid()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_argumentnullexception_when_given_null_eventstreamid
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
    startLine: 44
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void throw_argumentnullexception_when_given_null_eventstreamid()
    content.vb: Public Sub throw_argumentnullexception_when_given_null_eventstreamid
  overload: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_eventstreamid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_empty_eventstreamid
  commentId: M:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_empty_eventstreamid
  id: throw_argumentnullexception_when_given_empty_eventstreamid
  parent: EventStore.Core.Tests.TransactionLog.prepare_log_record_should
  langs:
  - csharp
  - vb
  name: throw_argumentnullexception_when_given_empty_eventstreamid()
  nameWithType: prepare_log_record_should.throw_argumentnullexception_when_given_empty_eventstreamid()
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_empty_eventstreamid()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_argumentnullexception_when_given_empty_eventstreamid
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
    startLine: 51
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void throw_argumentnullexception_when_given_empty_eventstreamid()
    content.vb: Public Sub throw_argumentnullexception_when_given_empty_eventstreamid
  overload: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_empty_eventstreamid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_incorrect_expectedversion
  commentId: M:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_incorrect_expectedversion
  id: throw_argumentoutofrangeexception_when_given_incorrect_expectedversion
  parent: EventStore.Core.Tests.TransactionLog.prepare_log_record_should
  langs:
  - csharp
  - vb
  name: throw_argumentoutofrangeexception_when_given_incorrect_expectedversion()
  nameWithType: prepare_log_record_should.throw_argumentoutofrangeexception_when_given_incorrect_expectedversion()
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_incorrect_expectedversion()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_argumentoutofrangeexception_when_given_incorrect_expectedversion
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
    startLine: 58
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void throw_argumentoutofrangeexception_when_given_incorrect_expectedversion()
    content.vb: Public Sub throw_argumentoutofrangeexception_when_given_incorrect_expectedversion
  overload: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_incorrect_expectedversion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_data
  commentId: M:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_data
  id: throw_argumentnullexception_when_given_null_data
  parent: EventStore.Core.Tests.TransactionLog.prepare_log_record_should
  langs:
  - csharp
  - vb
  name: throw_argumentnullexception_when_given_null_data()
  nameWithType: prepare_log_record_should.throw_argumentnullexception_when_given_null_data()
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_data()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_argumentnullexception_when_given_null_data
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
    startLine: 65
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void throw_argumentnullexception_when_given_null_data()
    content.vb: Public Sub throw_argumentnullexception_when_given_null_data
  overload: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_data*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_eventtype
  commentId: M:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_eventtype
  id: throw_argumentnullexception_when_given_null_eventtype
  parent: EventStore.Core.Tests.TransactionLog.prepare_log_record_should
  langs:
  - csharp
  - vb
  name: throw_argumentnullexception_when_given_null_eventtype()
  nameWithType: prepare_log_record_should.throw_argumentnullexception_when_given_null_eventtype()
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_eventtype()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_argumentnullexception_when_given_null_eventtype
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
    startLine: 72
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void throw_argumentnullexception_when_given_null_eventtype()
    content.vb: Public Sub throw_argumentnullexception_when_given_null_eventtype
  overload: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_eventtype*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_eventtype
  commentId: M:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_eventtype
  id: throw_argumentexception_when_given_empty_eventtype
  parent: EventStore.Core.Tests.TransactionLog.prepare_log_record_should
  langs:
  - csharp
  - vb
  name: throw_argumentexception_when_given_empty_eventtype()
  nameWithType: prepare_log_record_should.throw_argumentexception_when_given_empty_eventtype()
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_eventtype()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throw_argumentexception_when_given_empty_eventtype
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/prepare_log_record_should.cs
    startLine: 80
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void throw_argumentexception_when_given_empty_eventtype()
    content.vb: Public Sub throw_argumentexception_when_given_empty_eventtype
  overload: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_eventtype*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.TransactionLog
  commentId: N:EventStore.Core.Tests.TransactionLog
  isExternal: false
  name: EventStore.Core.Tests.TransactionLog
  nameWithType: EventStore.Core.Tests.TransactionLog
  fullName: EventStore.Core.Tests.TransactionLog
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<prepare_log_record_should>()
  nameWithType: ProtobufExtensions.Serialize<prepare_log_record_should>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.TransactionLog.prepare_log_record_should>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of prepare_log_record_should)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.TransactionLog.prepare_log_record_should)()
  name.vb: Serialize(Of prepare_log_record_should)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<prepare_log_record_should>
    nameWithType: ProtobufExtensions.Serialize<prepare_log_record_should>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.TransactionLog.prepare_log_record_should>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of prepare_log_record_should)
    nameWithType: ProtobufExtensions.Serialize(Of prepare_log_record_should)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.TransactionLog.prepare_log_record_should)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<prepare_log_record_should>()
  nameWithType: ProtobufExtensions.SerializeToArray<prepare_log_record_should>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.TransactionLog.prepare_log_record_should>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of prepare_log_record_should)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.TransactionLog.prepare_log_record_should)()
  name.vb: SerializeToArray(Of prepare_log_record_should)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<prepare_log_record_should>
    nameWithType: ProtobufExtensions.SerializeToArray<prepare_log_record_should>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.TransactionLog.prepare_log_record_should>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of prepare_log_record_should)
    nameWithType: ProtobufExtensions.SerializeToArray(Of prepare_log_record_should)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.TransactionLog.prepare_log_record_should)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_logposition*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_logposition
  isExternal: false
  name: throw_argumentoutofrangeexception_when_given_negative_logposition
  nameWithType: prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_logposition
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_logposition
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_transactionposition*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_transactionposition
  isExternal: false
  name: throw_argumentoutofrangeexception_when_given_negative_transactionposition
  nameWithType: prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_transactionposition
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_negative_transactionposition
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_transaction_offset_less_than_minus_one*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_transaction_offset_less_than_minus_one
  isExternal: false
  name: throw_argumentoutofrangeexception_when_given_transaction_offset_less_than_minus_one
  nameWithType: prepare_log_record_should.throw_argumentoutofrangeexception_when_given_transaction_offset_less_than_minus_one
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_transaction_offset_less_than_minus_one
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_correlationid*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_correlationid
  isExternal: false
  name: throw_argumentexception_when_given_empty_correlationid
  nameWithType: prepare_log_record_should.throw_argumentexception_when_given_empty_correlationid
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_correlationid
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_eventid*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_eventid
  isExternal: false
  name: throw_argumentexception_when_given_empty_eventid
  nameWithType: prepare_log_record_should.throw_argumentexception_when_given_empty_eventid
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_eventid
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_eventstreamid*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_eventstreamid
  isExternal: false
  name: throw_argumentnullexception_when_given_null_eventstreamid
  nameWithType: prepare_log_record_should.throw_argumentnullexception_when_given_null_eventstreamid
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_eventstreamid
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_empty_eventstreamid*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_empty_eventstreamid
  isExternal: false
  name: throw_argumentnullexception_when_given_empty_eventstreamid
  nameWithType: prepare_log_record_should.throw_argumentnullexception_when_given_empty_eventstreamid
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_empty_eventstreamid
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_incorrect_expectedversion*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_incorrect_expectedversion
  isExternal: false
  name: throw_argumentoutofrangeexception_when_given_incorrect_expectedversion
  nameWithType: prepare_log_record_should.throw_argumentoutofrangeexception_when_given_incorrect_expectedversion
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentoutofrangeexception_when_given_incorrect_expectedversion
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_data*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_data
  isExternal: false
  name: throw_argumentnullexception_when_given_null_data
  nameWithType: prepare_log_record_should.throw_argumentnullexception_when_given_null_data
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_data
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_eventtype*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_eventtype
  isExternal: false
  name: throw_argumentnullexception_when_given_null_eventtype
  nameWithType: prepare_log_record_should.throw_argumentnullexception_when_given_null_eventtype
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentnullexception_when_given_null_eventtype
- uid: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_eventtype*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_eventtype
  isExternal: false
  name: throw_argumentexception_when_given_empty_eventtype
  nameWithType: prepare_log_record_should.throw_argumentexception_when_given_empty_eventtype
  fullName: EventStore.Core.Tests.TransactionLog.prepare_log_record_should.throw_argumentexception_when_given_empty_eventtype

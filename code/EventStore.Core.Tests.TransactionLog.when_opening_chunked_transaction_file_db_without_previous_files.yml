### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files
  commentId: T:EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files
  id: when_opening_chunked_transaction_file_db_without_previous_files
  parent: EventStore.Core.Tests.TransactionLog
  children:
  - EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files.with_a_writer_checksum_of_zero_the_first_chunk_is_created_with_correct_name_and_is_aligned
  langs:
  - csharp
  - vb
  name: when_opening_chunked_transaction_file_db_without_previous_files
  nameWithType: when_opening_chunked_transaction_file_db_without_previous_files
  fullName: EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/when_opening_chunked_transaction_file_db_without_previous_files.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: when_opening_chunked_transaction_file_db_without_previous_files
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/when_opening_chunked_transaction_file_db_without_previous_files.cs
    startLine: 10
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: 'public class when_opening_chunked_transaction_file_db_without_previous_files : SpecificationWithDirectory'
    content.vb: >-
      Public Class when_opening_chunked_transaction_file_db_without_previous_files

          Inherits SpecificationWithDirectory
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithDirectory
  inheritedMembers:
  - EventStore.Core.Tests.SpecificationWithDirectory.PathName
  - EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
  - EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor(System.String)
  - EventStore.Core.Tests.SpecificationWithDirectory.SetUp
  - EventStore.Core.Tests.SpecificationWithDirectory.TearDown
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files.with_a_writer_checksum_of_zero_the_first_chunk_is_created_with_correct_name_and_is_aligned
  commentId: M:EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files.with_a_writer_checksum_of_zero_the_first_chunk_is_created_with_correct_name_and_is_aligned
  id: with_a_writer_checksum_of_zero_the_first_chunk_is_created_with_correct_name_and_is_aligned
  parent: EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files
  langs:
  - csharp
  - vb
  name: with_a_writer_checksum_of_zero_the_first_chunk_is_created_with_correct_name_and_is_aligned()
  nameWithType: when_opening_chunked_transaction_file_db_without_previous_files.with_a_writer_checksum_of_zero_the_first_chunk_is_created_with_correct_name_and_is_aligned()
  fullName: EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files.with_a_writer_checksum_of_zero_the_first_chunk_is_created_with_correct_name_and_is_aligned()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/when_opening_chunked_transaction_file_db_without_previous_files.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: with_a_writer_checksum_of_zero_the_first_chunk_is_created_with_correct_name_and_is_aligned
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/when_opening_chunked_transaction_file_db_without_previous_files.cs
    startLine: 13
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void with_a_writer_checksum_of_zero_the_first_chunk_is_created_with_correct_name_and_is_aligned()
    content.vb: Public Sub with_a_writer_checksum_of_zero_the_first_chunk_is_created_with_correct_name_and_is_aligned
  overload: EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files.with_a_writer_checksum_of_zero_the_first_chunk_is_created_with_correct_name_and_is_aligned*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.TransactionLog
  commentId: N:EventStore.Core.Tests.TransactionLog
  isExternal: false
  name: EventStore.Core.Tests.TransactionLog
  nameWithType: EventStore.Core.Tests.TransactionLog
  fullName: EventStore.Core.Tests.TransactionLog
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithDirectory
  commentId: T:EventStore.Core.Tests.SpecificationWithDirectory
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithDirectory
  nameWithType: SpecificationWithDirectory
  fullName: EventStore.Core.Tests.SpecificationWithDirectory
- uid: EventStore.Core.Tests.SpecificationWithDirectory.PathName
  commentId: F:EventStore.Core.Tests.SpecificationWithDirectory.PathName
  parent: EventStore.Core.Tests.SpecificationWithDirectory
  isExternal: false
  name: PathName
  nameWithType: SpecificationWithDirectory.PathName
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.PathName
- uid: EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
  parent: EventStore.Core.Tests.SpecificationWithDirectory
  isExternal: false
  name: GetTempFilePath()
  nameWithType: SpecificationWithDirectory.GetTempFilePath()
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectory.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
    name: GetTempFilePath
    nameWithType: SpecificationWithDirectory.GetTempFilePath
    fullName: EventStore.Core.Tests.SpecificationWithDirectory.GetTempFilePath
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor(System.String)
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor(System.String)
  parent: EventStore.Core.Tests.SpecificationWithDirectory
  isExternal: true
  name: GetFilePathFor(String)
  nameWithType: SpecificationWithDirectory.GetFilePathFor(String)
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectory.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor(System.String)
    name: GetFilePathFor
    nameWithType: SpecificationWithDirectory.GetFilePathFor
    fullName: EventStore.Core.Tests.SpecificationWithDirectory.GetFilePathFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectory.SetUp
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectory.SetUp
  parent: EventStore.Core.Tests.SpecificationWithDirectory
  isExternal: false
  name: SetUp()
  nameWithType: SpecificationWithDirectory.SetUp()
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.SetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectory.SetUp
    name: SetUp
    nameWithType: SpecificationWithDirectory.SetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectory.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectory.SetUp
    name: SetUp
    nameWithType: SpecificationWithDirectory.SetUp
    fullName: EventStore.Core.Tests.SpecificationWithDirectory.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithDirectory.TearDown
  commentId: M:EventStore.Core.Tests.SpecificationWithDirectory.TearDown
  parent: EventStore.Core.Tests.SpecificationWithDirectory
  isExternal: false
  name: TearDown()
  nameWithType: SpecificationWithDirectory.TearDown()
  fullName: EventStore.Core.Tests.SpecificationWithDirectory.TearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithDirectory.TearDown
    name: TearDown
    nameWithType: SpecificationWithDirectory.TearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectory.TearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithDirectory.TearDown
    name: TearDown
    nameWithType: SpecificationWithDirectory.TearDown
    fullName: EventStore.Core.Tests.SpecificationWithDirectory.TearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<when_opening_chunked_transaction_file_db_without_previous_files>()
  nameWithType: ProtobufExtensions.Serialize<when_opening_chunked_transaction_file_db_without_previous_files>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of when_opening_chunked_transaction_file_db_without_previous_files)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files)()
  name.vb: Serialize(Of when_opening_chunked_transaction_file_db_without_previous_files)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<when_opening_chunked_transaction_file_db_without_previous_files>
    nameWithType: ProtobufExtensions.Serialize<when_opening_chunked_transaction_file_db_without_previous_files>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of when_opening_chunked_transaction_file_db_without_previous_files)
    nameWithType: ProtobufExtensions.Serialize(Of when_opening_chunked_transaction_file_db_without_previous_files)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<when_opening_chunked_transaction_file_db_without_previous_files>()
  nameWithType: ProtobufExtensions.SerializeToArray<when_opening_chunked_transaction_file_db_without_previous_files>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of when_opening_chunked_transaction_file_db_without_previous_files)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files)()
  name.vb: SerializeToArray(Of when_opening_chunked_transaction_file_db_without_previous_files)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<when_opening_chunked_transaction_file_db_without_previous_files>
    nameWithType: ProtobufExtensions.SerializeToArray<when_opening_chunked_transaction_file_db_without_previous_files>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of when_opening_chunked_transaction_file_db_without_previous_files)
    nameWithType: ProtobufExtensions.SerializeToArray(Of when_opening_chunked_transaction_file_db_without_previous_files)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files.with_a_writer_checksum_of_zero_the_first_chunk_is_created_with_correct_name_and_is_aligned*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files.with_a_writer_checksum_of_zero_the_first_chunk_is_created_with_correct_name_and_is_aligned
  isExternal: false
  name: with_a_writer_checksum_of_zero_the_first_chunk_is_created_with_correct_name_and_is_aligned
  nameWithType: when_opening_chunked_transaction_file_db_without_previous_files.with_a_writer_checksum_of_zero_the_first_chunk_is_created_with_correct_name_and_is_aligned
  fullName: EventStore.Core.Tests.TransactionLog.when_opening_chunked_transaction_file_db_without_previous_files.with_a_writer_checksum_of_zero_the_first_chunk_is_created_with_correct_name_and_is_aligned

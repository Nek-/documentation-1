### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file
  commentId: T:EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file
  id: when_writing_a_memorymappedpoint_to_a_file
  parent: EventStore.Core.Tests.TransactionLog
  children:
  - EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.a_null_file_throws_argumentnullexception
  - EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.can_read_existing_checksum
  - EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.name_is_set
  - EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.reading_off_same_instance_gives_most_up_to_date_info
  - EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_accessible_after_flush
  - EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_not_accessible_if_not_flushed_even_with_delay
  langs:
  - csharp
  - vb
  name: when_writing_a_memorymappedpoint_to_a_file
  nameWithType: when_writing_a_memorymappedpoint_to_a_file
  fullName: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file
  type: Class
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/when_writing_a_memorymappedpoint_to_a_file.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: when_writing_a_memorymappedpoint_to_a_file
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/when_writing_a_memorymappedpoint_to_a_file.cs
    startLine: 7
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: 'public class when_writing_a_memorymappedpoint_to_a_file : SpecificationWithFile'
    content.vb: >-
      Public Class when_writing_a_memorymappedpoint_to_a_file

          Inherits SpecificationWithFile
  inheritance:
  - System.Object
  - EventStore.Core.Tests.SpecificationWithFile
  inheritedMembers:
  - EventStore.Core.Tests.SpecificationWithFile.Filename
  - EventStore.Core.Tests.SpecificationWithFile.SetUp
  - EventStore.Core.Tests.SpecificationWithFile.TearDown
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.a_null_file_throws_argumentnullexception
  commentId: M:EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.a_null_file_throws_argumentnullexception
  id: a_null_file_throws_argumentnullexception
  parent: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file
  langs:
  - csharp
  - vb
  name: a_null_file_throws_argumentnullexception()
  nameWithType: when_writing_a_memorymappedpoint_to_a_file.a_null_file_throws_argumentnullexception()
  fullName: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.a_null_file_throws_argumentnullexception()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/when_writing_a_memorymappedpoint_to_a_file.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: a_null_file_throws_argumentnullexception
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/when_writing_a_memorymappedpoint_to_a_file.cs
    startLine: 10
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void a_null_file_throws_argumentnullexception()
    content.vb: Public Sub a_null_file_throws_argumentnullexception
  overload: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.a_null_file_throws_argumentnullexception*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.name_is_set
  commentId: M:EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.name_is_set
  id: name_is_set
  parent: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file
  langs:
  - csharp
  - vb
  name: name_is_set()
  nameWithType: when_writing_a_memorymappedpoint_to_a_file.name_is_set()
  fullName: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.name_is_set()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/when_writing_a_memorymappedpoint_to_a_file.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: name_is_set
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/when_writing_a_memorymappedpoint_to_a_file.cs
    startLine: 16
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void name_is_set()
    content.vb: Public Sub name_is_set
  overload: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.name_is_set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.reading_off_same_instance_gives_most_up_to_date_info
  commentId: M:EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.reading_off_same_instance_gives_most_up_to_date_info
  id: reading_off_same_instance_gives_most_up_to_date_info
  parent: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file
  langs:
  - csharp
  - vb
  name: reading_off_same_instance_gives_most_up_to_date_info()
  nameWithType: when_writing_a_memorymappedpoint_to_a_file.reading_off_same_instance_gives_most_up_to_date_info()
  fullName: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.reading_off_same_instance_gives_most_up_to_date_info()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/when_writing_a_memorymappedpoint_to_a_file.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: reading_off_same_instance_gives_most_up_to_date_info
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/when_writing_a_memorymappedpoint_to_a_file.cs
    startLine: 24
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void reading_off_same_instance_gives_most_up_to_date_info()
    content.vb: Public Sub reading_off_same_instance_gives_most_up_to_date_info
  overload: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.reading_off_same_instance_gives_most_up_to_date_info*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.can_read_existing_checksum
  commentId: M:EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.can_read_existing_checksum
  id: can_read_existing_checksum
  parent: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file
  langs:
  - csharp
  - vb
  name: can_read_existing_checksum()
  nameWithType: when_writing_a_memorymappedpoint_to_a_file.can_read_existing_checksum()
  fullName: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.can_read_existing_checksum()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/when_writing_a_memorymappedpoint_to_a_file.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: can_read_existing_checksum
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/when_writing_a_memorymappedpoint_to_a_file.cs
    startLine: 35
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void can_read_existing_checksum()
    content.vb: Public Sub can_read_existing_checksum
  overload: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.can_read_existing_checksum*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_not_accessible_if_not_flushed_even_with_delay
  commentId: M:EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_not_accessible_if_not_flushed_even_with_delay
  id: the_new_value_is_not_accessible_if_not_flushed_even_with_delay
  parent: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file
  langs:
  - csharp
  - vb
  name: the_new_value_is_not_accessible_if_not_flushed_even_with_delay()
  nameWithType: when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_not_accessible_if_not_flushed_even_with_delay()
  fullName: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_not_accessible_if_not_flushed_even_with_delay()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/when_writing_a_memorymappedpoint_to_a_file.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: the_new_value_is_not_accessible_if_not_flushed_even_with_delay
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/when_writing_a_memorymappedpoint_to_a_file.cs
    startLine: 47
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void the_new_value_is_not_accessible_if_not_flushed_even_with_delay()
    content.vb: Public Sub the_new_value_is_not_accessible_if_not_flushed_even_with_delay
  overload: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_not_accessible_if_not_flushed_even_with_delay*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_accessible_after_flush
  commentId: M:EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_accessible_after_flush
  id: the_new_value_is_accessible_after_flush
  parent: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file
  langs:
  - csharp
  - vb
  name: the_new_value_is_accessible_after_flush()
  nameWithType: when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_accessible_after_flush()
  fullName: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_accessible_after_flush()
  type: Method
  source:
    remote:
      path: src/EventStore.Core.Tests/TransactionLog/when_writing_a_memorymappedpoint_to_a_file.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: the_new_value_is_accessible_after_flush
    path: ../EventStore/src/EventStore.Core.Tests/TransactionLog/when_writing_a_memorymappedpoint_to_a_file.cs
    startLine: 59
  assemblies:
  - EventStore.Core.Tests
  namespace: EventStore.Core.Tests.TransactionLog
  syntax:
    content: public void the_new_value_is_accessible_after_flush()
    content.vb: Public Sub the_new_value_is_accessible_after_flush
  overload: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_accessible_after_flush*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Tests.TransactionLog
  commentId: N:EventStore.Core.Tests.TransactionLog
  isExternal: false
  name: EventStore.Core.Tests.TransactionLog
  nameWithType: EventStore.Core.Tests.TransactionLog
  fullName: EventStore.Core.Tests.TransactionLog
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.SpecificationWithFile
  commentId: T:EventStore.Core.Tests.SpecificationWithFile
  parent: EventStore.Core.Tests
  isExternal: false
  name: SpecificationWithFile
  nameWithType: SpecificationWithFile
  fullName: EventStore.Core.Tests.SpecificationWithFile
- uid: EventStore.Core.Tests.SpecificationWithFile.Filename
  commentId: F:EventStore.Core.Tests.SpecificationWithFile.Filename
  parent: EventStore.Core.Tests.SpecificationWithFile
  isExternal: false
  name: Filename
  nameWithType: SpecificationWithFile.Filename
  fullName: EventStore.Core.Tests.SpecificationWithFile.Filename
- uid: EventStore.Core.Tests.SpecificationWithFile.SetUp
  commentId: M:EventStore.Core.Tests.SpecificationWithFile.SetUp
  parent: EventStore.Core.Tests.SpecificationWithFile
  isExternal: false
  name: SetUp()
  nameWithType: SpecificationWithFile.SetUp()
  fullName: EventStore.Core.Tests.SpecificationWithFile.SetUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithFile.SetUp
    name: SetUp
    nameWithType: SpecificationWithFile.SetUp
    fullName: EventStore.Core.Tests.SpecificationWithFile.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithFile.SetUp
    name: SetUp
    nameWithType: SpecificationWithFile.SetUp
    fullName: EventStore.Core.Tests.SpecificationWithFile.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.SpecificationWithFile.TearDown
  commentId: M:EventStore.Core.Tests.SpecificationWithFile.TearDown
  parent: EventStore.Core.Tests.SpecificationWithFile
  isExternal: false
  name: TearDown()
  nameWithType: SpecificationWithFile.TearDown()
  fullName: EventStore.Core.Tests.SpecificationWithFile.TearDown()
  spec.csharp:
  - uid: EventStore.Core.Tests.SpecificationWithFile.TearDown
    name: TearDown
    nameWithType: SpecificationWithFile.TearDown
    fullName: EventStore.Core.Tests.SpecificationWithFile.TearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.SpecificationWithFile.TearDown
    name: TearDown
    nameWithType: SpecificationWithFile.TearDown
    fullName: EventStore.Core.Tests.SpecificationWithFile.TearDown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<when_writing_a_memorymappedpoint_to_a_file>()
  nameWithType: ProtobufExtensions.Serialize<when_writing_a_memorymappedpoint_to_a_file>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of when_writing_a_memorymappedpoint_to_a_file)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file)()
  name.vb: Serialize(Of when_writing_a_memorymappedpoint_to_a_file)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<when_writing_a_memorymappedpoint_to_a_file>
    nameWithType: ProtobufExtensions.Serialize<when_writing_a_memorymappedpoint_to_a_file>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of when_writing_a_memorymappedpoint_to_a_file)
    nameWithType: ProtobufExtensions.Serialize(Of when_writing_a_memorymappedpoint_to_a_file)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<when_writing_a_memorymappedpoint_to_a_file>()
  nameWithType: ProtobufExtensions.SerializeToArray<when_writing_a_memorymappedpoint_to_a_file>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of when_writing_a_memorymappedpoint_to_a_file)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file)()
  name.vb: SerializeToArray(Of when_writing_a_memorymappedpoint_to_a_file)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<when_writing_a_memorymappedpoint_to_a_file>
    nameWithType: ProtobufExtensions.SerializeToArray<when_writing_a_memorymappedpoint_to_a_file>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of when_writing_a_memorymappedpoint_to_a_file)
    nameWithType: ProtobufExtensions.SerializeToArray(Of when_writing_a_memorymappedpoint_to_a_file)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests
  commentId: N:EventStore.Core.Tests
  isExternal: false
  name: EventStore.Core.Tests
  nameWithType: EventStore.Core.Tests
  fullName: EventStore.Core.Tests
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.a_null_file_throws_argumentnullexception*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.a_null_file_throws_argumentnullexception
  isExternal: false
  name: a_null_file_throws_argumentnullexception
  nameWithType: when_writing_a_memorymappedpoint_to_a_file.a_null_file_throws_argumentnullexception
  fullName: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.a_null_file_throws_argumentnullexception
- uid: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.name_is_set*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.name_is_set
  isExternal: false
  name: name_is_set
  nameWithType: when_writing_a_memorymappedpoint_to_a_file.name_is_set
  fullName: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.name_is_set
- uid: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.reading_off_same_instance_gives_most_up_to_date_info*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.reading_off_same_instance_gives_most_up_to_date_info
  isExternal: false
  name: reading_off_same_instance_gives_most_up_to_date_info
  nameWithType: when_writing_a_memorymappedpoint_to_a_file.reading_off_same_instance_gives_most_up_to_date_info
  fullName: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.reading_off_same_instance_gives_most_up_to_date_info
- uid: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.can_read_existing_checksum*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.can_read_existing_checksum
  isExternal: false
  name: can_read_existing_checksum
  nameWithType: when_writing_a_memorymappedpoint_to_a_file.can_read_existing_checksum
  fullName: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.can_read_existing_checksum
- uid: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_not_accessible_if_not_flushed_even_with_delay*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_not_accessible_if_not_flushed_even_with_delay
  isExternal: false
  name: the_new_value_is_not_accessible_if_not_flushed_even_with_delay
  nameWithType: when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_not_accessible_if_not_flushed_even_with_delay
  fullName: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_not_accessible_if_not_flushed_even_with_delay
- uid: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_accessible_after_flush*
  commentId: Overload:EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_accessible_after_flush
  isExternal: false
  name: the_new_value_is_accessible_after_flush
  nameWithType: when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_accessible_after_flush
  fullName: EventStore.Core.Tests.TransactionLog.when_writing_a_memorymappedpoint_to_a_file.the_new_value_is_accessible_after_flush

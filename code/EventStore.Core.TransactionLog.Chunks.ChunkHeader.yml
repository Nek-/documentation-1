### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  commentId: T:EventStore.Core.TransactionLog.Chunks.ChunkHeader
  id: ChunkHeader
  parent: EventStore.Core.TransactionLog.Chunks
  children:
  - EventStore.Core.TransactionLog.Chunks.ChunkHeader.#ctor(System.Byte,System.Int32,System.Int32,System.Int32,System.Boolean,Guid)
  - EventStore.Core.TransactionLog.Chunks.ChunkHeader.AsByteArray
  - EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkEndNumber
  - EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkEndPosition
  - EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkId
  - EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkSize
  - EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkStartNumber
  - EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkStartPosition
  - EventStore.Core.TransactionLog.Chunks.ChunkHeader.FromStream(Stream)
  - EventStore.Core.TransactionLog.Chunks.ChunkHeader.GetLocalLogPosition(System.Int64)
  - EventStore.Core.TransactionLog.Chunks.ChunkHeader.IsScavenged
  - EventStore.Core.TransactionLog.Chunks.ChunkHeader.Size
  - EventStore.Core.TransactionLog.Chunks.ChunkHeader.ToString
  - EventStore.Core.TransactionLog.Chunks.ChunkHeader.Version
  langs:
  - csharp
  - vb
  name: ChunkHeader
  nameWithType: ChunkHeader
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  type: Class
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ChunkHeader
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: 'public class ChunkHeader : object'
    content.vb: >-
      Public Class ChunkHeader
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.Chunks.ChunkHeader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.Chunks.ChunkHeader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.Size
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkHeader.Size
  id: Size
  parent: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: ChunkHeader.Size
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.Size
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Size
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public const int Size = null
    return:
      type: System.Int32
    content.vb: Public Const Size As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkStartPosition
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkStartPosition
  id: ChunkStartPosition
  parent: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  langs:
  - csharp
  - vb
  name: ChunkStartPosition
  nameWithType: ChunkHeader.ChunkStartPosition
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkStartPosition
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ChunkStartPosition
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly long ChunkStartPosition
    return:
      type: System.Int64
    content.vb: Public ReadOnly ChunkStartPosition As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkEndPosition
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkEndPosition
  id: ChunkEndPosition
  parent: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  langs:
  - csharp
  - vb
  name: ChunkEndPosition
  nameWithType: ChunkHeader.ChunkEndPosition
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkEndPosition
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ChunkEndPosition
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly long ChunkEndPosition
    return:
      type: System.Int64
    content.vb: Public ReadOnly ChunkEndPosition As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.Version
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkHeader.Version
  id: Version
  parent: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ChunkHeader.Version
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.Version
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Version
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly byte Version
    return:
      type: System.Byte
    content.vb: Public ReadOnly Version As Byte
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkSize
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkSize
  id: ChunkSize
  parent: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  langs:
  - csharp
  - vb
  name: ChunkSize
  nameWithType: ChunkHeader.ChunkSize
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ChunkSize
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly int ChunkSize
    return:
      type: System.Int32
    content.vb: Public ReadOnly ChunkSize As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkStartNumber
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkStartNumber
  id: ChunkStartNumber
  parent: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  langs:
  - csharp
  - vb
  name: ChunkStartNumber
  nameWithType: ChunkHeader.ChunkStartNumber
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkStartNumber
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ChunkStartNumber
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly int ChunkStartNumber
    return:
      type: System.Int32
    content.vb: Public ReadOnly ChunkStartNumber As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkEndNumber
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkEndNumber
  id: ChunkEndNumber
  parent: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  langs:
  - csharp
  - vb
  name: ChunkEndNumber
  nameWithType: ChunkHeader.ChunkEndNumber
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkEndNumber
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ChunkEndNumber
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly int ChunkEndNumber
    return:
      type: System.Int32
    content.vb: Public ReadOnly ChunkEndNumber As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.IsScavenged
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkHeader.IsScavenged
  id: IsScavenged
  parent: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  langs:
  - csharp
  - vb
  name: IsScavenged
  nameWithType: ChunkHeader.IsScavenged
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.IsScavenged
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: IsScavenged
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly bool IsScavenged
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsScavenged As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkId
  commentId: F:EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkId
  id: ChunkId
  parent: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  langs:
  - csharp
  - vb
  name: ChunkId
  nameWithType: ChunkHeader.ChunkId
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ChunkId
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
    startLine: 20
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly Guid ChunkId
    return:
      type: Guid
    content.vb: Public ReadOnly ChunkId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.#ctor(System.Byte,System.Int32,System.Int32,System.Int32,System.Boolean,Guid)
  commentId: M:EventStore.Core.TransactionLog.Chunks.ChunkHeader.#ctor(System.Byte,System.Int32,System.Int32,System.Int32,System.Boolean,Guid)
  id: '#ctor(System.Byte,System.Int32,System.Int32,System.Int32,System.Boolean,Guid)'
  parent: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  langs:
  - csharp
  - vb
  name: ChunkHeader(Byte, Int32, Int32, Int32, Boolean, Guid)
  nameWithType: ChunkHeader.ChunkHeader(Byte, Int32, Int32, Int32, Boolean, Guid)
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkHeader(System.Byte, System.Int32, System.Int32, System.Int32, System.Boolean, Guid)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public ChunkHeader(byte version, int chunkSize, int chunkStartNumber, int chunkEndNumber, bool isScavenged, Guid chunkId)
    parameters:
    - id: version
      type: System.Byte
    - id: chunkSize
      type: System.Int32
    - id: chunkStartNumber
      type: System.Int32
    - id: chunkEndNumber
      type: System.Int32
    - id: isScavenged
      type: System.Boolean
    - id: chunkId
      type: Guid
    content.vb: Public Sub New(version As Byte, chunkSize As Integer, chunkStartNumber As Integer, chunkEndNumber As Integer, isScavenged As Boolean, chunkId As Guid)
  overload: EventStore.Core.TransactionLog.Chunks.ChunkHeader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.AsByteArray
  commentId: M:EventStore.Core.TransactionLog.Chunks.ChunkHeader.AsByteArray
  id: AsByteArray
  parent: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  langs:
  - csharp
  - vb
  name: AsByteArray()
  nameWithType: ChunkHeader.AsByteArray()
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.AsByteArray()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: AsByteArray
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
    startLine: 42
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public byte[] AsByteArray()
    return:
      type: System.Byte[]
    content.vb: Public Function AsByteArray As Byte()
  overload: EventStore.Core.TransactionLog.Chunks.ChunkHeader.AsByteArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.FromStream(Stream)
  commentId: M:EventStore.Core.TransactionLog.Chunks.ChunkHeader.FromStream(Stream)
  id: FromStream(Stream)
  parent: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  langs:
  - csharp
  - vb
  name: FromStream(Stream)
  nameWithType: ChunkHeader.FromStream(Stream)
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.FromStream(Stream)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: FromStream
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
    startLine: 59
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public static ChunkHeader FromStream(Stream stream)
    parameters:
    - id: stream
      type: Stream
    return:
      type: EventStore.Core.TransactionLog.Chunks.ChunkHeader
    content.vb: Public Shared Function FromStream(stream As Stream) As ChunkHeader
  overload: EventStore.Core.TransactionLog.Chunks.ChunkHeader.FromStream*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.GetLocalLogPosition(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Chunks.ChunkHeader.GetLocalLogPosition(System.Int64)
  id: GetLocalLogPosition(System.Int64)
  parent: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  langs:
  - csharp
  - vb
  name: GetLocalLogPosition(Int64)
  nameWithType: ChunkHeader.GetLocalLogPosition(Int64)
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.GetLocalLogPosition(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: GetLocalLogPosition
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
    startLine: 76
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public long GetLocalLogPosition(long globalLogicalPosition)
    parameters:
    - id: globalLogicalPosition
      type: System.Int64
    return:
      type: System.Int64
    content.vb: Public Function GetLocalLogPosition(globalLogicalPosition As Long) As Long
  overload: EventStore.Core.TransactionLog.Chunks.ChunkHeader.GetLocalLogPosition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ToString
  commentId: M:EventStore.Core.TransactionLog.Chunks.ChunkHeader.ToString
  id: ToString
  parent: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ChunkHeader.ToString()
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/ChunkHeader.cs
    startLine: 86
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ChunkHeader>()
  nameWithType: ProtobufExtensions.Serialize<ChunkHeader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.ChunkHeader>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ChunkHeader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.ChunkHeader)()
  name.vb: Serialize(Of ChunkHeader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ChunkHeader>
    nameWithType: ProtobufExtensions.Serialize<ChunkHeader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.ChunkHeader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ChunkHeader)
    nameWithType: ProtobufExtensions.Serialize(Of ChunkHeader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.ChunkHeader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ChunkHeader>()
  nameWithType: ProtobufExtensions.SerializeToArray<ChunkHeader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.ChunkHeader>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ChunkHeader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.ChunkHeader)()
  name.vb: SerializeToArray(Of ChunkHeader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ChunkHeader>
    nameWithType: ProtobufExtensions.SerializeToArray<ChunkHeader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.ChunkHeader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ChunkHeader)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ChunkHeader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.ChunkHeader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.#ctor*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.ChunkHeader.#ctor
  name: ChunkHeader
  nameWithType: ChunkHeader.ChunkHeader
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ChunkHeader
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.AsByteArray*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.ChunkHeader.AsByteArray
  name: AsByteArray
  nameWithType: ChunkHeader.AsByteArray
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.AsByteArray
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.FromStream*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.ChunkHeader.FromStream
  name: FromStream
  nameWithType: ChunkHeader.FromStream
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.FromStream
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  commentId: T:EventStore.Core.TransactionLog.Chunks.ChunkHeader
  parent: EventStore.Core.TransactionLog.Chunks
  name: ChunkHeader
  nameWithType: ChunkHeader
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.GetLocalLogPosition*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.ChunkHeader.GetLocalLogPosition
  name: GetLocalLogPosition
  nameWithType: ChunkHeader.GetLocalLogPosition
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.GetLocalLogPosition
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ToString*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.ChunkHeader.ToString
  name: ToString
  nameWithType: ChunkHeader.ToString
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader.ToString
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

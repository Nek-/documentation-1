### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide
  id: TFChunk.IChunkReadSide
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk
  children:
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.Cache
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.ExistsAt(System.Int64)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadAt(System.Int64)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadClosestBackward(System.Int64)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadClosestForward(System.Int64)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadFirst
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadLast
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.Uncache
  langs:
  - csharp
  - vb
  name: TFChunk.IChunkReadSide
  nameWithType: TFChunk.IChunkReadSide
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide
  type: Interface
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: IChunkReadSide
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public interface IChunkReadSide
    content.vb: Public Interface IChunkReadSide
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.Cache
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.Cache
  id: Cache
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide
  langs:
  - csharp
  - vb
  name: Cache()
  nameWithType: TFChunk.IChunkReadSide.Cache()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.Cache()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Cache
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: void Cache()
    content.vb: Sub Cache
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.Cache*
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.Uncache
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.Uncache
  id: Uncache
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide
  langs:
  - csharp
  - vb
  name: Uncache()
  nameWithType: TFChunk.IChunkReadSide.Uncache()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.Uncache()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Uncache
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: void Uncache()
    content.vb: Sub Uncache
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.Uncache*
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.ExistsAt(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.ExistsAt(System.Int64)
  id: ExistsAt(System.Int64)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide
  langs:
  - csharp
  - vb
  name: ExistsAt(Int64)
  nameWithType: TFChunk.IChunkReadSide.ExistsAt(Int64)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.ExistsAt(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ExistsAt
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: bool ExistsAt(long logicalPosition)
    parameters:
    - id: logicalPosition
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Function ExistsAt(logicalPosition As Long) As Boolean
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.ExistsAt*
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadAt(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadAt(System.Int64)
  id: TryReadAt(System.Int64)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide
  langs:
  - csharp
  - vb
  name: TryReadAt(Int64)
  nameWithType: TFChunk.IChunkReadSide.TryReadAt(Int64)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadAt(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TryReadAt
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: RecordReadResult TryReadAt(long logicalPosition)
    parameters:
    - id: logicalPosition
      type: System.Int64
    return:
      type: EventStore.Core.TransactionLog.RecordReadResult
    content.vb: Function TryReadAt(logicalPosition As Long) As RecordReadResult
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadAt*
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadFirst
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadFirst
  id: TryReadFirst
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide
  langs:
  - csharp
  - vb
  name: TryReadFirst()
  nameWithType: TFChunk.IChunkReadSide.TryReadFirst()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadFirst()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TryReadFirst
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
    startLine: 20
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: RecordReadResult TryReadFirst()
    return:
      type: EventStore.Core.TransactionLog.RecordReadResult
    content.vb: Function TryReadFirst As RecordReadResult
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadFirst*
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadClosestForward(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadClosestForward(System.Int64)
  id: TryReadClosestForward(System.Int64)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide
  langs:
  - csharp
  - vb
  name: TryReadClosestForward(Int64)
  nameWithType: TFChunk.IChunkReadSide.TryReadClosestForward(Int64)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadClosestForward(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TryReadClosestForward
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: RecordReadResult TryReadClosestForward(long logicalPosition)
    parameters:
    - id: logicalPosition
      type: System.Int64
    return:
      type: EventStore.Core.TransactionLog.RecordReadResult
    content.vb: Function TryReadClosestForward(logicalPosition As Long) As RecordReadResult
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadClosestForward*
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadLast
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadLast
  id: TryReadLast
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide
  langs:
  - csharp
  - vb
  name: TryReadLast()
  nameWithType: TFChunk.IChunkReadSide.TryReadLast()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadLast()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TryReadLast
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: RecordReadResult TryReadLast()
    return:
      type: EventStore.Core.TransactionLog.RecordReadResult
    content.vb: Function TryReadLast As RecordReadResult
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadLast*
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadClosestBackward(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadClosestBackward(System.Int64)
  id: TryReadClosestBackward(System.Int64)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide
  langs:
  - csharp
  - vb
  name: TryReadClosestBackward(Int64)
  nameWithType: TFChunk.IChunkReadSide.TryReadClosestBackward(Int64)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadClosestBackward(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TryReadClosestBackward
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunkReadSide.cs
    startLine: 23
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: RecordReadResult TryReadClosestBackward(long logicalPosition)
    parameters:
    - id: logicalPosition
      type: System.Int64
    return:
      type: EventStore.Core.TransactionLog.RecordReadResult
    content.vb: Function TryReadClosestBackward(logicalPosition As Long) As RecordReadResult
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadClosestBackward*
references:
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk
  commentId: N:EventStore.Core.TransactionLog.Chunks.TFChunk
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks.TFChunk
  nameWithType: EventStore.Core.TransactionLog.Chunks.TFChunk
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TFChunk.IChunkReadSide>()
  nameWithType: ProtobufExtensions.Serialize<TFChunk.IChunkReadSide>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TFChunk.IChunkReadSide)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide)()
  name.vb: Serialize(Of TFChunk.IChunkReadSide)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TFChunk.IChunkReadSide>
    nameWithType: ProtobufExtensions.Serialize<TFChunk.IChunkReadSide>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TFChunk.IChunkReadSide)
    nameWithType: ProtobufExtensions.Serialize(Of TFChunk.IChunkReadSide)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TFChunk.IChunkReadSide>()
  nameWithType: ProtobufExtensions.SerializeToArray<TFChunk.IChunkReadSide>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TFChunk.IChunkReadSide)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide)()
  name.vb: SerializeToArray(Of TFChunk.IChunkReadSide)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TFChunk.IChunkReadSide>
    nameWithType: ProtobufExtensions.SerializeToArray<TFChunk.IChunkReadSide>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TFChunk.IChunkReadSide)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TFChunk.IChunkReadSide)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.Cache*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.Cache
  isExternal: false
  name: Cache
  nameWithType: TFChunk.IChunkReadSide.Cache
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.Cache
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.Uncache*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.Uncache
  isExternal: false
  name: Uncache
  nameWithType: TFChunk.IChunkReadSide.Uncache
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.Uncache
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.ExistsAt*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.ExistsAt
  isExternal: false
  name: ExistsAt
  nameWithType: TFChunk.IChunkReadSide.ExistsAt
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.ExistsAt
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadAt*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadAt
  isExternal: false
  name: TryReadAt
  nameWithType: TFChunk.IChunkReadSide.TryReadAt
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadAt
- uid: EventStore.Core.TransactionLog.RecordReadResult
  commentId: T:EventStore.Core.TransactionLog.RecordReadResult
  parent: EventStore.Core.TransactionLog
  isExternal: false
  name: RecordReadResult
  nameWithType: RecordReadResult
  fullName: EventStore.Core.TransactionLog.RecordReadResult
- uid: EventStore.Core.TransactionLog
  commentId: N:EventStore.Core.TransactionLog
  isExternal: false
  name: EventStore.Core.TransactionLog
  nameWithType: EventStore.Core.TransactionLog
  fullName: EventStore.Core.TransactionLog
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadFirst*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadFirst
  isExternal: false
  name: TryReadFirst
  nameWithType: TFChunk.IChunkReadSide.TryReadFirst
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadFirst
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadClosestForward*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadClosestForward
  isExternal: false
  name: TryReadClosestForward
  nameWithType: TFChunk.IChunkReadSide.TryReadClosestForward
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadClosestForward
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadLast*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadLast
  isExternal: false
  name: TryReadLast
  nameWithType: TFChunk.IChunkReadSide.TryReadLast
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadLast
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadClosestBackward*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadClosestBackward
  isExternal: false
  name: TryReadClosestBackward
  nameWithType: TFChunk.IChunkReadSide.TryReadClosestBackward
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.TryReadClosestBackward

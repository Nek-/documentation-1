### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  id: TFChunk
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk
  children:
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.AcquireReader
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CacheInMemory
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkFooter
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkHeader
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Complete
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CompleteRaw
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CompleteScavenge(ICollection{EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap})
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CreateNew(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CreateWithHeader(System.String,EventStore.Core.TransactionLog.Chunks.ChunkHeader,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CurrentChunkVersion
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.DeOptimizeExistsAt
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Dispose
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ExistsAt(System.Int64)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FileName
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FileSize
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Finalize
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Flush
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FromCompletedFile(System.String,System.Boolean,System.Boolean,System.Int32,System.Boolean)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FromOngoingFile(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.GetAlignedSize(System.Int32)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IsCached
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IsReadOnly
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.LogicalDataSize
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.MarkForDeletion
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.MidpointsDepth
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.OptimizeExistsAt
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.PhysicalDataSize
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.RawWriterPosition
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ReadBufferSize
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ReleaseReader(EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ToString
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryAppend(EventStore.Core.TransactionLog.LogRecords.LogRecord)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryAppendRawData(System.Byte[])
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadAt(System.Int64)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadClosestBackward(System.Int64)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadClosestForward(System.Int64)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadFirst
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadLast
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.UnCacheFromMemory
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.VerifyFileHash
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.WaitForDestroy(System.Int32)
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.WriteBufferSize
  langs:
  - csharp
  - vb
  name: TFChunk
  nameWithType: TFChunk
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  type: Class
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TFChunk
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: 'public class TFChunk : IDisposable'
    content.vb: >-
      Public Class TFChunk
          Inherits IDisposable
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CurrentChunkVersion
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CurrentChunkVersion
  id: CurrentChunkVersion
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: CurrentChunkVersion
  nameWithType: TFChunk.CurrentChunkVersion
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CurrentChunkVersion
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CurrentChunkVersion
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 28
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public const byte CurrentChunkVersion = null
    return:
      type: System.Byte
    content.vb: Public Const CurrentChunkVersion As Byte = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.WriteBufferSize
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.WriteBufferSize
  id: WriteBufferSize
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: WriteBufferSize
  nameWithType: TFChunk.WriteBufferSize
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.WriteBufferSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: WriteBufferSize
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 29
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public const int WriteBufferSize = null
    return:
      type: System.Int32
    content.vb: Public Const WriteBufferSize As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ReadBufferSize
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ReadBufferSize
  id: ReadBufferSize
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: ReadBufferSize
  nameWithType: TFChunk.ReadBufferSize
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ReadBufferSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReadBufferSize
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 30
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public const int ReadBufferSize = null
    return:
      type: System.Int32
    content.vb: Public Const ReadBufferSize As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IsReadOnly
  commentId: P:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IsReadOnly
  id: IsReadOnly
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: TFChunk.IsReadOnly
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IsReadOnly
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: IsReadOnly
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 34
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IsReadOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IsCached
  commentId: P:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IsCached
  id: IsCached
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: IsCached
  nameWithType: TFChunk.IsCached
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IsCached
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: IsCached
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 35
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public bool IsCached { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCached As Boolean
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IsCached*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.LogicalDataSize
  commentId: P:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.LogicalDataSize
  id: LogicalDataSize
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: LogicalDataSize
  nameWithType: TFChunk.LogicalDataSize
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.LogicalDataSize
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: LogicalDataSize
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 38
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public long LogicalDataSize { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property LogicalDataSize As Long
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.LogicalDataSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.PhysicalDataSize
  commentId: P:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.PhysicalDataSize
  id: PhysicalDataSize
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: PhysicalDataSize
  nameWithType: TFChunk.PhysicalDataSize
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.PhysicalDataSize
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: PhysicalDataSize
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 40
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public int PhysicalDataSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PhysicalDataSize As Integer
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.PhysicalDataSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FileName
  commentId: P:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FileName
  id: FileName
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: FileName
  nameWithType: TFChunk.FileName
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FileName
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: FileName
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 42
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public string FileName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FileName As String
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FileName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FileSize
  commentId: P:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FileSize
  id: FileSize
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: FileSize
  nameWithType: TFChunk.FileSize
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FileSize
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: FileSize
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 43
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public int FileSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property FileSize As Integer
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FileSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkHeader
  commentId: P:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkHeader
  id: ChunkHeader
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: ChunkHeader
  nameWithType: TFChunk.ChunkHeader
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkHeader
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ChunkHeader
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 45
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public ChunkHeader ChunkHeader { get; }
    parameters: []
    return:
      type: EventStore.Core.TransactionLog.Chunks.ChunkHeader
    content.vb: Public ReadOnly Property ChunkHeader As ChunkHeader
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkHeader*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkFooter
  commentId: P:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkFooter
  id: ChunkFooter
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: ChunkFooter
  nameWithType: TFChunk.ChunkFooter
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkFooter
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ChunkFooter
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 46
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public ChunkFooter ChunkFooter { get; }
    parameters: []
    return:
      type: EventStore.Core.TransactionLog.Chunks.ChunkFooter
    content.vb: Public ReadOnly Property ChunkFooter As ChunkFooter
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkFooter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.MidpointsDepth
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.MidpointsDepth
  id: MidpointsDepth
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: MidpointsDepth
  nameWithType: TFChunk.MidpointsDepth
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.MidpointsDepth
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MidpointsDepth
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 47
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public readonly int MidpointsDepth
    return:
      type: System.Int32
    content.vb: Public ReadOnly MidpointsDepth As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.RawWriterPosition
  commentId: P:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.RawWriterPosition
  id: RawWriterPosition
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: RawWriterPosition
  nameWithType: TFChunk.RawWriterPosition
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.RawWriterPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: RawWriterPosition
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 49
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public int RawWriterPosition { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property RawWriterPosition As Integer
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.RawWriterPosition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Finalize
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Finalize
  id: Finalize
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: TFChunk.Finalize()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Finalize()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Finalize
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 114
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FromCompletedFile(System.String,System.Boolean,System.Boolean,System.Int32,System.Boolean)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FromCompletedFile(System.String,System.Boolean,System.Boolean,System.Int32,System.Boolean)
  id: FromCompletedFile(System.String,System.Boolean,System.Boolean,System.Int32,System.Boolean)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: FromCompletedFile(String, Boolean, Boolean, Int32, Boolean)
  nameWithType: TFChunk.FromCompletedFile(String, Boolean, Boolean, Int32, Boolean)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FromCompletedFile(System.String, System.Boolean, System.Boolean, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: FromCompletedFile
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 119
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public static TFChunk FromCompletedFile(string filename, bool verifyHash, bool unbufferedRead, int initialReaderCount, bool optimizeReadSideCache = false)
    parameters:
    - id: filename
      type: System.String
    - id: verifyHash
      type: System.Boolean
    - id: unbufferedRead
      type: System.Boolean
    - id: initialReaderCount
      type: System.Int32
    - id: optimizeReadSideCache
      type: System.Boolean
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
    content.vb: Public Shared Function FromCompletedFile(filename As String, verifyHash As Boolean, unbufferedRead As Boolean, initialReaderCount As Integer, optimizeReadSideCache As Boolean = False) As TFChunk
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FromCompletedFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FromOngoingFile(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FromOngoingFile(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  id: FromOngoingFile(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: FromOngoingFile(String, Int32, Boolean, Boolean, Boolean, Int32)
  nameWithType: TFChunk.FromOngoingFile(String, Int32, Boolean, Boolean, Boolean, Int32)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FromOngoingFile(System.String, System.Int32, System.Boolean, System.Boolean, System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: FromOngoingFile
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 135
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public static TFChunk FromOngoingFile(string filename, int writePosition, bool checkSize, bool unbuffered, bool writethrough, int initialReaderCount)
    parameters:
    - id: filename
      type: System.String
    - id: writePosition
      type: System.Int32
    - id: checkSize
      type: System.Boolean
    - id: unbuffered
      type: System.Boolean
    - id: writethrough
      type: System.Boolean
    - id: initialReaderCount
      type: System.Int32
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
    content.vb: Public Shared Function FromOngoingFile(filename As String, writePosition As Integer, checkSize As Boolean, unbuffered As Boolean, writethrough As Boolean, initialReaderCount As Integer) As TFChunk
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FromOngoingFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CreateNew(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CreateNew(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  id: CreateNew(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: CreateNew(String, Int32, Int32, Int32, Boolean, Boolean, Boolean, Boolean, Int32)
  nameWithType: TFChunk.CreateNew(String, Int32, Int32, Int32, Boolean, Boolean, Boolean, Boolean, Int32)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CreateNew(System.String, System.Int32, System.Int32, System.Int32, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CreateNew
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 156
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public static TFChunk CreateNew(string filename, int chunkSize, int chunkStartNumber, int chunkEndNumber, bool isScavenged, bool inMem, bool unbuffered, bool writethrough, int initialReaderCount)
    parameters:
    - id: filename
      type: System.String
    - id: chunkSize
      type: System.Int32
    - id: chunkStartNumber
      type: System.Int32
    - id: chunkEndNumber
      type: System.Int32
    - id: isScavenged
      type: System.Boolean
    - id: inMem
      type: System.Boolean
    - id: unbuffered
      type: System.Boolean
    - id: writethrough
      type: System.Boolean
    - id: initialReaderCount
      type: System.Int32
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
    content.vb: Public Shared Function CreateNew(filename As String, chunkSize As Integer, chunkStartNumber As Integer, chunkEndNumber As Integer, isScavenged As Boolean, inMem As Boolean, unbuffered As Boolean, writethrough As Boolean, initialReaderCount As Integer) As TFChunk
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CreateNew*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CreateWithHeader(System.String,EventStore.Core.TransactionLog.Chunks.ChunkHeader,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CreateWithHeader(System.String,EventStore.Core.TransactionLog.Chunks.ChunkHeader,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  id: CreateWithHeader(System.String,EventStore.Core.TransactionLog.Chunks.ChunkHeader,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: CreateWithHeader(String, ChunkHeader, Int32, Boolean, Boolean, Boolean, Int32)
  nameWithType: TFChunk.CreateWithHeader(String, ChunkHeader, Int32, Boolean, Boolean, Boolean, Int32)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CreateWithHeader(System.String, EventStore.Core.TransactionLog.Chunks.ChunkHeader, System.Int32, System.Boolean, System.Boolean, System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CreateWithHeader
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 171
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public static TFChunk CreateWithHeader(string filename, ChunkHeader header, int fileSize, bool inMem, bool unbuffered, bool writethrough, int initialReaderCount)
    parameters:
    - id: filename
      type: System.String
    - id: header
      type: EventStore.Core.TransactionLog.Chunks.ChunkHeader
    - id: fileSize
      type: System.Int32
    - id: inMem
      type: System.Boolean
    - id: unbuffered
      type: System.Boolean
    - id: writethrough
      type: System.Boolean
    - id: initialReaderCount
      type: System.Int32
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
    content.vb: Public Shared Function CreateWithHeader(filename As String, header As ChunkHeader, fileSize As Integer, inMem As Boolean, unbuffered As Boolean, writethrough As Boolean, initialReaderCount As Integer) As TFChunk
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CreateWithHeader*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.VerifyFileHash
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.VerifyFileHash
  id: VerifyFileHash
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: VerifyFileHash()
  nameWithType: TFChunk.VerifyFileHash()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.VerifyFileHash()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: VerifyFileHash
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 511
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public void VerifyFileHash()
    content.vb: Public Sub VerifyFileHash
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.VerifyFileHash*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CacheInMemory
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CacheInMemory
  id: CacheInMemory
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: CacheInMemory()
  nameWithType: TFChunk.CacheInMemory()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CacheInMemory()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CacheInMemory
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 594
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public void CacheInMemory()
    content.vb: Public Sub CacheInMemory
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CacheInMemory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.UnCacheFromMemory
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.UnCacheFromMemory
  id: UnCacheFromMemory
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: UnCacheFromMemory()
  nameWithType: TFChunk.UnCacheFromMemory()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.UnCacheFromMemory()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: UnCacheFromMemory
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 693
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public void UnCacheFromMemory()
    content.vb: Public Sub UnCacheFromMemory
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.UnCacheFromMemory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ExistsAt(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ExistsAt(System.Int64)
  id: ExistsAt(System.Int64)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: ExistsAt(Int64)
  nameWithType: TFChunk.ExistsAt(Int64)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ExistsAt(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ExistsAt
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 715
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public bool ExistsAt(long logicalPosition)
    parameters:
    - id: logicalPosition
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Public Function ExistsAt(logicalPosition As Long) As Boolean
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ExistsAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.OptimizeExistsAt
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.OptimizeExistsAt
  id: OptimizeExistsAt
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: OptimizeExistsAt()
  nameWithType: TFChunk.OptimizeExistsAt()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.OptimizeExistsAt()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: OptimizeExistsAt
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 720
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public void OptimizeExistsAt()
    content.vb: Public Sub OptimizeExistsAt
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.OptimizeExistsAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.DeOptimizeExistsAt
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.DeOptimizeExistsAt
  id: DeOptimizeExistsAt
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: DeOptimizeExistsAt()
  nameWithType: TFChunk.DeOptimizeExistsAt()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.DeOptimizeExistsAt()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: DeOptimizeExistsAt
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 726
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public void DeOptimizeExistsAt()
    content.vb: Public Sub DeOptimizeExistsAt
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.DeOptimizeExistsAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadAt(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadAt(System.Int64)
  id: TryReadAt(System.Int64)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: TryReadAt(Int64)
  nameWithType: TFChunk.TryReadAt(Int64)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadAt(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TryReadAt
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 732
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public RecordReadResult TryReadAt(long logicalPosition)
    parameters:
    - id: logicalPosition
      type: System.Int64
    return:
      type: EventStore.Core.TransactionLog.RecordReadResult
    content.vb: Public Function TryReadAt(logicalPosition As Long) As RecordReadResult
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadFirst
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadFirst
  id: TryReadFirst
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: TryReadFirst()
  nameWithType: TFChunk.TryReadFirst()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadFirst()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TryReadFirst
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 737
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public RecordReadResult TryReadFirst()
    return:
      type: EventStore.Core.TransactionLog.RecordReadResult
    content.vb: Public Function TryReadFirst As RecordReadResult
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadFirst*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadClosestForward(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadClosestForward(System.Int64)
  id: TryReadClosestForward(System.Int64)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: TryReadClosestForward(Int64)
  nameWithType: TFChunk.TryReadClosestForward(Int64)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadClosestForward(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TryReadClosestForward
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 742
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public RecordReadResult TryReadClosestForward(long logicalPosition)
    parameters:
    - id: logicalPosition
      type: System.Int64
    return:
      type: EventStore.Core.TransactionLog.RecordReadResult
    content.vb: Public Function TryReadClosestForward(logicalPosition As Long) As RecordReadResult
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadClosestForward*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadLast
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadLast
  id: TryReadLast
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: TryReadLast()
  nameWithType: TFChunk.TryReadLast()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadLast()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TryReadLast
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 747
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public RecordReadResult TryReadLast()
    return:
      type: EventStore.Core.TransactionLog.RecordReadResult
    content.vb: Public Function TryReadLast As RecordReadResult
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadLast*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadClosestBackward(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadClosestBackward(System.Int64)
  id: TryReadClosestBackward(System.Int64)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: TryReadClosestBackward(Int64)
  nameWithType: TFChunk.TryReadClosestBackward(Int64)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadClosestBackward(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TryReadClosestBackward
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 752
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public RecordReadResult TryReadClosestBackward(long logicalPosition)
    parameters:
    - id: logicalPosition
      type: System.Int64
    return:
      type: EventStore.Core.TransactionLog.RecordReadResult
    content.vb: Public Function TryReadClosestBackward(logicalPosition As Long) As RecordReadResult
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadClosestBackward*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryAppend(EventStore.Core.TransactionLog.LogRecords.LogRecord)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryAppend(EventStore.Core.TransactionLog.LogRecords.LogRecord)
  id: TryAppend(EventStore.Core.TransactionLog.LogRecords.LogRecord)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: TryAppend(LogRecord)
  nameWithType: TFChunk.TryAppend(LogRecord)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryAppend(EventStore.Core.TransactionLog.LogRecords.LogRecord)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TryAppend
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 757
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public RecordWriteResult TryAppend(LogRecord record)
    parameters:
    - id: record
      type: EventStore.Core.TransactionLog.LogRecords.LogRecord
    return:
      type: EventStore.Core.TransactionLog.RecordWriteResult
    content.vb: Public Function TryAppend(record As LogRecord) As RecordWriteResult
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryAppend*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryAppendRawData(System.Byte[])
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryAppendRawData(System.Byte[])
  id: TryAppendRawData(System.Byte[])
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: TryAppendRawData(Byte[])
  nameWithType: TFChunk.TryAppendRawData(Byte[])
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryAppendRawData(System.Byte[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TryAppendRawData
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 793
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public bool TryAppendRawData(byte[] buffer)
    parameters:
    - id: buffer
      type: System.Byte[]
    return:
      type: System.Boolean
    content.vb: Public Function TryAppendRawData(buffer As Byte()) As Boolean
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryAppendRawData*
  nameWithType.vb: TFChunk.TryAppendRawData(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryAppendRawData(System.Byte())
  name.vb: TryAppendRawData(Byte())
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Flush
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Flush
  id: Flush
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: TFChunk.Flush()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Flush()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Flush
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 817
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Flush*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Complete
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Complete
  id: Complete
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: Complete()
  nameWithType: TFChunk.Complete()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Complete()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Complete
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 826
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public void Complete()
    content.vb: Public Sub Complete
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Complete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CompleteScavenge(ICollection{EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap})
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CompleteScavenge(ICollection{EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap})
  id: CompleteScavenge(ICollection{EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap})
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: CompleteScavenge(ICollection<PosMap>)
  nameWithType: TFChunk.CompleteScavenge(ICollection<PosMap>)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CompleteScavenge(ICollection<EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap>)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CompleteScavenge
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 833
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public void CompleteScavenge(ICollection<PosMap> mapping)
    parameters:
    - id: mapping
      type: ICollection{EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap}
    content.vb: Public Sub CompleteScavenge(mapping As ICollection(Of PosMap))
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CompleteScavenge*
  nameWithType.vb: TFChunk.CompleteScavenge(ICollection(Of PosMap))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CompleteScavenge(ICollection(Of EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap))
  name.vb: CompleteScavenge(ICollection(Of PosMap))
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CompleteRaw
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CompleteRaw
  id: CompleteRaw
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: CompleteRaw()
  nameWithType: TFChunk.CompleteRaw()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CompleteRaw()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CompleteRaw
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 855
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public void CompleteRaw()
    content.vb: Public Sub CompleteRaw
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CompleteRaw*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Dispose
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Dispose
  id: Dispose
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TFChunk.Dispose()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Dispose()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Dispose
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 964
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.MarkForDeletion
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.MarkForDeletion
  id: MarkForDeletion
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: MarkForDeletion()
  nameWithType: TFChunk.MarkForDeletion()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.MarkForDeletion()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MarkForDeletion
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 971
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public void MarkForDeletion()
    content.vb: Public Sub MarkForDeletion
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.MarkForDeletion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.GetAlignedSize(System.Int32)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.GetAlignedSize(System.Int32)
  id: GetAlignedSize(System.Int32)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: GetAlignedSize(Int32)
  nameWithType: TFChunk.GetAlignedSize(Int32)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.GetAlignedSize(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: GetAlignedSize
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 1014
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public static int GetAlignedSize(int size)
    parameters:
    - id: size
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GetAlignedSize(size As Integer) As Integer
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.GetAlignedSize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.WaitForDestroy(System.Int32)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.WaitForDestroy(System.Int32)
  id: WaitForDestroy(System.Int32)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: WaitForDestroy(Int32)
  nameWithType: TFChunk.WaitForDestroy(Int32)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.WaitForDestroy(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: WaitForDestroy
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 1049
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public void WaitForDestroy(int timeoutMs)
    parameters:
    - id: timeoutMs
      type: System.Int32
    content.vb: Public Sub WaitForDestroy(timeoutMs As Integer)
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.WaitForDestroy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.AcquireReader
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.AcquireReader
  id: AcquireReader
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: AcquireReader()
  nameWithType: TFChunk.AcquireReader()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.AcquireReader()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: AcquireReader
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 1107
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public TFChunkBulkReader AcquireReader()
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader
    content.vb: Public Function AcquireReader As TFChunkBulkReader
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.AcquireReader*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ReleaseReader(EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ReleaseReader(EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader)
  id: ReleaseReader(EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: ReleaseReader(TFChunkBulkReader)
  nameWithType: TFChunk.ReleaseReader(TFChunkBulkReader)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ReleaseReader(EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReleaseReader
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 1132
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public void ReleaseReader(TFChunkBulkReader reader)
    parameters:
    - id: reader
      type: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader
    content.vb: Public Sub ReleaseReader(reader As TFChunkBulkReader)
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ReleaseReader*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ToString
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ToString
  id: ToString
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TFChunk.ToString()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunk/TFChunk.cs
    startLine: 1141
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks.TFChunk
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk
  commentId: N:EventStore.Core.TransactionLog.Chunks.TFChunk
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks.TFChunk
  nameWithType: EventStore.Core.TransactionLog.Chunks.TFChunk
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TFChunk>()
  nameWithType: ProtobufExtensions.Serialize<TFChunk>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TFChunk)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)()
  name.vb: Serialize(Of TFChunk)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TFChunk>
    nameWithType: ProtobufExtensions.Serialize<TFChunk>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TFChunk)
    nameWithType: ProtobufExtensions.Serialize(Of TFChunk)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TFChunk>()
  nameWithType: ProtobufExtensions.SerializeToArray<TFChunk>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TFChunk)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)()
  name.vb: SerializeToArray(Of TFChunk)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TFChunk>
    nameWithType: ProtobufExtensions.SerializeToArray<TFChunk>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TFChunk)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TFChunk)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Byte
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IsReadOnly*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IsReadOnly
  isExternal: false
  name: IsReadOnly
  nameWithType: TFChunk.IsReadOnly
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IsReadOnly
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IsCached*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IsCached
  isExternal: false
  name: IsCached
  nameWithType: TFChunk.IsCached
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IsCached
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.LogicalDataSize*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.LogicalDataSize
  isExternal: false
  name: LogicalDataSize
  nameWithType: TFChunk.LogicalDataSize
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.LogicalDataSize
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.PhysicalDataSize*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.PhysicalDataSize
  isExternal: false
  name: PhysicalDataSize
  nameWithType: TFChunk.PhysicalDataSize
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.PhysicalDataSize
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FileName*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FileName
  isExternal: false
  name: FileName
  nameWithType: TFChunk.FileName
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FileName
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FileSize*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FileSize
  isExternal: false
  name: FileSize
  nameWithType: TFChunk.FileSize
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FileSize
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkHeader*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkHeader
  isExternal: false
  name: ChunkHeader
  nameWithType: TFChunk.ChunkHeader
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkHeader
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  commentId: T:EventStore.Core.TransactionLog.Chunks.ChunkHeader
  parent: EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: ChunkHeader
  nameWithType: ChunkHeader
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkFooter*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkFooter
  isExternal: false
  name: ChunkFooter
  nameWithType: TFChunk.ChunkFooter
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkFooter
- uid: EventStore.Core.TransactionLog.Chunks.ChunkFooter
  commentId: T:EventStore.Core.TransactionLog.Chunks.ChunkFooter
  parent: EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: ChunkFooter
  nameWithType: ChunkFooter
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkFooter
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.RawWriterPosition*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.RawWriterPosition
  isExternal: false
  name: RawWriterPosition
  nameWithType: TFChunk.RawWriterPosition
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.RawWriterPosition
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Finalize*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Finalize
  isExternal: false
  name: Finalize
  nameWithType: TFChunk.Finalize
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Finalize
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FromCompletedFile*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FromCompletedFile
  isExternal: false
  name: FromCompletedFile
  nameWithType: TFChunk.FromCompletedFile
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FromCompletedFile
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk
  isExternal: false
  name: TFChunk
  nameWithType: TFChunk
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FromOngoingFile*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FromOngoingFile
  isExternal: false
  name: FromOngoingFile
  nameWithType: TFChunk.FromOngoingFile
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.FromOngoingFile
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CreateNew*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CreateNew
  isExternal: false
  name: CreateNew
  nameWithType: TFChunk.CreateNew
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CreateNew
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CreateWithHeader*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CreateWithHeader
  isExternal: false
  name: CreateWithHeader
  nameWithType: TFChunk.CreateWithHeader
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CreateWithHeader
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.VerifyFileHash*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.VerifyFileHash
  isExternal: false
  name: VerifyFileHash
  nameWithType: TFChunk.VerifyFileHash
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.VerifyFileHash
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CacheInMemory*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CacheInMemory
  isExternal: false
  name: CacheInMemory
  nameWithType: TFChunk.CacheInMemory
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CacheInMemory
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.UnCacheFromMemory*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.UnCacheFromMemory
  isExternal: false
  name: UnCacheFromMemory
  nameWithType: TFChunk.UnCacheFromMemory
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.UnCacheFromMemory
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ExistsAt*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ExistsAt
  isExternal: false
  name: ExistsAt
  nameWithType: TFChunk.ExistsAt
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ExistsAt
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.OptimizeExistsAt*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.OptimizeExistsAt
  isExternal: false
  name: OptimizeExistsAt
  nameWithType: TFChunk.OptimizeExistsAt
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.OptimizeExistsAt
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.DeOptimizeExistsAt*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.DeOptimizeExistsAt
  isExternal: false
  name: DeOptimizeExistsAt
  nameWithType: TFChunk.DeOptimizeExistsAt
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.DeOptimizeExistsAt
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadAt*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadAt
  isExternal: false
  name: TryReadAt
  nameWithType: TFChunk.TryReadAt
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadAt
- uid: EventStore.Core.TransactionLog.RecordReadResult
  commentId: T:EventStore.Core.TransactionLog.RecordReadResult
  parent: EventStore.Core.TransactionLog
  isExternal: false
  name: RecordReadResult
  nameWithType: RecordReadResult
  fullName: EventStore.Core.TransactionLog.RecordReadResult
- uid: EventStore.Core.TransactionLog
  commentId: N:EventStore.Core.TransactionLog
  isExternal: false
  name: EventStore.Core.TransactionLog
  nameWithType: EventStore.Core.TransactionLog
  fullName: EventStore.Core.TransactionLog
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadFirst*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadFirst
  isExternal: false
  name: TryReadFirst
  nameWithType: TFChunk.TryReadFirst
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadFirst
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadClosestForward*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadClosestForward
  isExternal: false
  name: TryReadClosestForward
  nameWithType: TFChunk.TryReadClosestForward
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadClosestForward
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadLast*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadLast
  isExternal: false
  name: TryReadLast
  nameWithType: TFChunk.TryReadLast
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadLast
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadClosestBackward*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadClosestBackward
  isExternal: false
  name: TryReadClosestBackward
  nameWithType: TFChunk.TryReadClosestBackward
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryReadClosestBackward
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryAppend*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryAppend
  isExternal: false
  name: TryAppend
  nameWithType: TFChunk.TryAppend
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryAppend
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord
  commentId: T:EventStore.Core.TransactionLog.LogRecords.LogRecord
  parent: EventStore.Core.TransactionLog.LogRecords
  isExternal: false
  name: LogRecord
  nameWithType: LogRecord
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord
- uid: EventStore.Core.TransactionLog.RecordWriteResult
  commentId: T:EventStore.Core.TransactionLog.RecordWriteResult
  parent: EventStore.Core.TransactionLog
  isExternal: false
  name: RecordWriteResult
  nameWithType: RecordWriteResult
  fullName: EventStore.Core.TransactionLog.RecordWriteResult
- uid: EventStore.Core.TransactionLog.LogRecords
  commentId: N:EventStore.Core.TransactionLog.LogRecords
  isExternal: false
  name: EventStore.Core.TransactionLog.LogRecords
  nameWithType: EventStore.Core.TransactionLog.LogRecords
  fullName: EventStore.Core.TransactionLog.LogRecords
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryAppendRawData*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryAppendRawData
  isExternal: false
  name: TryAppendRawData
  nameWithType: TFChunk.TryAppendRawData
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.TryAppendRawData
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Flush*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Flush
  isExternal: false
  name: Flush
  nameWithType: TFChunk.Flush
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Flush
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Complete*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Complete
  isExternal: false
  name: Complete
  nameWithType: TFChunk.Complete
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Complete
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CompleteScavenge*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CompleteScavenge
  isExternal: false
  name: CompleteScavenge
  nameWithType: TFChunk.CompleteScavenge
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CompleteScavenge
- uid: ICollection{EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap}
  commentId: '!:ICollection{EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap}'
  definition: ICollection`1
  name: ICollection<PosMap>
  nameWithType: ICollection<PosMap>
  fullName: ICollection<EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap>
  nameWithType.vb: ICollection(Of PosMap)
  fullName.vb: ICollection(Of EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap)
  name.vb: ICollection(Of PosMap)
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
    name: PosMap
    nameWithType: PosMap
    fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
    name: PosMap
    nameWithType: PosMap
    fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap
  - name: )
    nameWithType: )
    fullName: )
- uid: ICollection`1
  commentId: '!:ICollection`1'
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CompleteRaw*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CompleteRaw
  isExternal: false
  name: CompleteRaw
  nameWithType: TFChunk.CompleteRaw
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.CompleteRaw
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Dispose*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Dispose
  isExternal: false
  name: Dispose
  nameWithType: TFChunk.Dispose
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.Dispose
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.MarkForDeletion*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.MarkForDeletion
  isExternal: false
  name: MarkForDeletion
  nameWithType: TFChunk.MarkForDeletion
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.MarkForDeletion
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.GetAlignedSize*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.GetAlignedSize
  isExternal: false
  name: GetAlignedSize
  nameWithType: TFChunk.GetAlignedSize
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.GetAlignedSize
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.WaitForDestroy*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.WaitForDestroy
  isExternal: false
  name: WaitForDestroy
  nameWithType: TFChunk.WaitForDestroy
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.WaitForDestroy
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.AcquireReader*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.AcquireReader
  isExternal: false
  name: AcquireReader
  nameWithType: TFChunk.AcquireReader
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.AcquireReader
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader
  parent: EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: TFChunkBulkReader
  nameWithType: TFChunkBulkReader
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ReleaseReader*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ReleaseReader
  isExternal: false
  name: ReleaseReader
  nameWithType: TFChunk.ReleaseReader
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ReleaseReader
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ToString*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ToString
  isExternal: false
  name: ToString
  nameWithType: TFChunk.ToString
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ToString

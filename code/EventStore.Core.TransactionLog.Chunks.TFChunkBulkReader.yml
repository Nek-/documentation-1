### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader
  id: TFChunkBulkReader
  parent: EventStore.Core.TransactionLog.Chunks
  children:
  - EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Chunk
  - EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Dispose
  - EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Finalize
  - EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextDataBytes(System.Int32,System.Byte[])
  - EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextRawBytes(System.Int32,System.Byte[])
  - EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Release
  - EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.SetDataPosition(System.Int64)
  - EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.SetRawPosition(System.Int32)
  langs:
  - csharp
  - vb
  name: TFChunkBulkReader
  nameWithType: TFChunkBulkReader
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader
  type: Class
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TFChunkBulkReader
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: 'public class TFChunkBulkReader : IDisposable'
    content.vb: >-
      Public Class TFChunkBulkReader
          Inherits IDisposable
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Chunk
  commentId: P:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Chunk
  id: Chunk
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader
  langs:
  - csharp
  - vb
  name: Chunk
  nameWithType: TFChunkBulkReader.Chunk
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Chunk
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Chunk
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public TFChunk Chunk { get; }
    parameters: []
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
    content.vb: Public ReadOnly Property Chunk As TFChunk
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Chunk*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Finalize
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Finalize
  id: Finalize
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: TFChunkBulkReader.Finalize()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Finalize()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Finalize
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
    startLine: 25
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.SetRawPosition(System.Int32)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.SetRawPosition(System.Int32)
  id: SetRawPosition(System.Int32)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader
  langs:
  - csharp
  - vb
  name: SetRawPosition(Int32)
  nameWithType: TFChunkBulkReader.SetRawPosition(Int32)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.SetRawPosition(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: SetRawPosition
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
    startLine: 30
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public void SetRawPosition(int rawPosition)
    parameters:
    - id: rawPosition
      type: System.Int32
    content.vb: Public Sub SetRawPosition(rawPosition As Integer)
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.SetRawPosition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.SetDataPosition(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.SetDataPosition(System.Int64)
  id: SetDataPosition(System.Int64)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader
  langs:
  - csharp
  - vb
  name: SetDataPosition(Int64)
  nameWithType: TFChunkBulkReader.SetDataPosition(Int64)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.SetDataPosition(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: SetDataPosition
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
    startLine: 37
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public void SetDataPosition(long dataPosition)
    parameters:
    - id: dataPosition
      type: System.Int64
    content.vb: Public Sub SetDataPosition(dataPosition As Long)
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.SetDataPosition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Release
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Release
  id: Release
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader
  langs:
  - csharp
  - vb
  name: Release()
  nameWithType: TFChunkBulkReader.Release()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Release()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Release
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
    startLine: 45
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public void Release()
    content.vb: Public Sub Release
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Release*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextRawBytes(System.Int32,System.Byte[])
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextRawBytes(System.Int32,System.Byte[])
  id: ReadNextRawBytes(System.Int32,System.Byte[])
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader
  langs:
  - csharp
  - vb
  name: ReadNextRawBytes(Int32, Byte[])
  nameWithType: TFChunkBulkReader.ReadNextRawBytes(Int32, Byte[])
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextRawBytes(System.Int32, System.Byte[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReadNextRawBytes
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
    startLine: 53
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public BulkReadResult ReadNextRawBytes(int count, byte[] buffer)
    parameters:
    - id: count
      type: System.Int32
    - id: buffer
      type: System.Byte[]
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunk.BulkReadResult
    content.vb: Public Function ReadNextRawBytes(count As Integer, buffer As Byte()) As BulkReadResult
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextRawBytes*
  nameWithType.vb: TFChunkBulkReader.ReadNextRawBytes(Int32, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextRawBytes(System.Int32, System.Byte())
  name.vb: ReadNextRawBytes(Int32, Byte())
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextDataBytes(System.Int32,System.Byte[])
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextDataBytes(System.Int32,System.Byte[])
  id: ReadNextDataBytes(System.Int32,System.Byte[])
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader
  langs:
  - csharp
  - vb
  name: ReadNextDataBytes(Int32, Byte[])
  nameWithType: TFChunkBulkReader.ReadNextDataBytes(Int32, Byte[])
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextDataBytes(System.Int32, System.Byte[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReadNextDataBytes
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
    startLine: 66
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public BulkReadResult ReadNextDataBytes(int count, byte[] buffer)
    parameters:
    - id: count
      type: System.Int32
    - id: buffer
      type: System.Byte[]
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunk.BulkReadResult
    content.vb: Public Function ReadNextDataBytes(count As Integer, buffer As Byte()) As BulkReadResult
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextDataBytes*
  nameWithType.vb: TFChunkBulkReader.ReadNextDataBytes(Int32, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextDataBytes(System.Int32, System.Byte())
  name.vb: ReadNextDataBytes(Int32, Byte())
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Dispose
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Dispose
  id: Dispose
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TFChunkBulkReader.Dispose()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Dispose()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Dispose
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkBulkReader.cs
    startLine: 87
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TFChunkBulkReader>()
  nameWithType: ProtobufExtensions.Serialize<TFChunkBulkReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TFChunkBulkReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader)()
  name.vb: Serialize(Of TFChunkBulkReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TFChunkBulkReader>
    nameWithType: ProtobufExtensions.Serialize<TFChunkBulkReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TFChunkBulkReader)
    nameWithType: ProtobufExtensions.Serialize(Of TFChunkBulkReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TFChunkBulkReader>()
  nameWithType: ProtobufExtensions.SerializeToArray<TFChunkBulkReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TFChunkBulkReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader)()
  name.vb: SerializeToArray(Of TFChunkBulkReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TFChunkBulkReader>
    nameWithType: ProtobufExtensions.SerializeToArray<TFChunkBulkReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TFChunkBulkReader)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TFChunkBulkReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Chunk*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Chunk
  isExternal: false
  name: Chunk
  nameWithType: TFChunkBulkReader.Chunk
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Chunk
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk
  isExternal: false
  name: TFChunk
  nameWithType: TFChunk
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk
  commentId: N:EventStore.Core.TransactionLog.Chunks.TFChunk
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks.TFChunk
  nameWithType: EventStore.Core.TransactionLog.Chunks.TFChunk
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Finalize*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Finalize
  isExternal: false
  name: Finalize
  nameWithType: TFChunkBulkReader.Finalize
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Finalize
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.SetRawPosition*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.SetRawPosition
  isExternal: false
  name: SetRawPosition
  nameWithType: TFChunkBulkReader.SetRawPosition
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.SetRawPosition
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.SetDataPosition*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.SetDataPosition
  isExternal: false
  name: SetDataPosition
  nameWithType: TFChunkBulkReader.SetDataPosition
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.SetDataPosition
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Release*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Release
  isExternal: false
  name: Release
  nameWithType: TFChunkBulkReader.Release
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Release
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextRawBytes*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextRawBytes
  isExternal: false
  name: ReadNextRawBytes
  nameWithType: TFChunkBulkReader.ReadNextRawBytes
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextRawBytes
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.BulkReadResult
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunk.BulkReadResult
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk
  isExternal: false
  name: BulkReadResult
  nameWithType: BulkReadResult
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.BulkReadResult
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextDataBytes*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextDataBytes
  isExternal: false
  name: ReadNextDataBytes
  nameWithType: TFChunkBulkReader.ReadNextDataBytes
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.ReadNextDataBytes
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Dispose*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Dispose
  isExternal: false
  name: Dispose
  nameWithType: TFChunkBulkReader.Dispose
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.Dispose

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  id: TFChunkDbConfig
  parent: EventStore.Core.TransactionLog.Chunks
  children:
  - EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.#ctor(System.String,EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy,System.Int32,System.Int64,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  - EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.ChaserCheckpoint
  - EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.ChunkSize
  - EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.EpochCheckpoint
  - EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.FileNamingStrategy
  - EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.InitialReaderCount
  - EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.InMemDb
  - EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.MaxChunksCacheSize
  - EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.Path
  - EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.ReplicationCheckpoint
  - EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.TruncateCheckpoint
  - EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.Unbuffered
  - EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.WriterCheckpoint
  - EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.WriteThrough
  langs:
  - csharp
  - vb
  name: TFChunkDbConfig
  nameWithType: TFChunkDbConfig
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  type: Class
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TFChunkDbConfig
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: 'public class TFChunkDbConfig : object'
    content.vb: >-
      Public Class TFChunkDbConfig
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.Path
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.Path
  id: Path
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: TFChunkDbConfig.Path
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.Path
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Path
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly string Path
    return:
      type: System.String
    content.vb: Public ReadOnly Path As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.ChunkSize
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.ChunkSize
  id: ChunkSize
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  langs:
  - csharp
  - vb
  name: ChunkSize
  nameWithType: TFChunkDbConfig.ChunkSize
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.ChunkSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ChunkSize
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly int ChunkSize
    return:
      type: System.Int32
    content.vb: Public ReadOnly ChunkSize As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.MaxChunksCacheSize
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.MaxChunksCacheSize
  id: MaxChunksCacheSize
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  langs:
  - csharp
  - vb
  name: MaxChunksCacheSize
  nameWithType: TFChunkDbConfig.MaxChunksCacheSize
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.MaxChunksCacheSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MaxChunksCacheSize
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly long MaxChunksCacheSize
    return:
      type: System.Int64
    content.vb: Public ReadOnly MaxChunksCacheSize As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.WriterCheckpoint
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.WriterCheckpoint
  id: WriterCheckpoint
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  langs:
  - csharp
  - vb
  name: WriterCheckpoint
  nameWithType: TFChunkDbConfig.WriterCheckpoint
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.WriterCheckpoint
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WriterCheckpoint
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly ICheckpoint WriterCheckpoint
    return:
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    content.vb: Public ReadOnly WriterCheckpoint As ICheckpoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.ChaserCheckpoint
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.ChaserCheckpoint
  id: ChaserCheckpoint
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  langs:
  - csharp
  - vb
  name: ChaserCheckpoint
  nameWithType: TFChunkDbConfig.ChaserCheckpoint
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.ChaserCheckpoint
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ChaserCheckpoint
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly ICheckpoint ChaserCheckpoint
    return:
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    content.vb: Public ReadOnly ChaserCheckpoint As ICheckpoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.EpochCheckpoint
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.EpochCheckpoint
  id: EpochCheckpoint
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  langs:
  - csharp
  - vb
  name: EpochCheckpoint
  nameWithType: TFChunkDbConfig.EpochCheckpoint
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.EpochCheckpoint
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EpochCheckpoint
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly ICheckpoint EpochCheckpoint
    return:
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    content.vb: Public ReadOnly EpochCheckpoint As ICheckpoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.TruncateCheckpoint
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.TruncateCheckpoint
  id: TruncateCheckpoint
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  langs:
  - csharp
  - vb
  name: TruncateCheckpoint
  nameWithType: TFChunkDbConfig.TruncateCheckpoint
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.TruncateCheckpoint
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TruncateCheckpoint
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly ICheckpoint TruncateCheckpoint
    return:
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    content.vb: Public ReadOnly TruncateCheckpoint As ICheckpoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.ReplicationCheckpoint
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.ReplicationCheckpoint
  id: ReplicationCheckpoint
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  langs:
  - csharp
  - vb
  name: ReplicationCheckpoint
  nameWithType: TFChunkDbConfig.ReplicationCheckpoint
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.ReplicationCheckpoint
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReplicationCheckpoint
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly ICheckpoint ReplicationCheckpoint
    return:
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    content.vb: Public ReadOnly ReplicationCheckpoint As ICheckpoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.FileNamingStrategy
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.FileNamingStrategy
  id: FileNamingStrategy
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  langs:
  - csharp
  - vb
  name: FileNamingStrategy
  nameWithType: TFChunkDbConfig.FileNamingStrategy
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.FileNamingStrategy
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: FileNamingStrategy
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly IFileNamingStrategy FileNamingStrategy
    return:
      type: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
    content.vb: Public ReadOnly FileNamingStrategy As IFileNamingStrategy
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.InMemDb
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.InMemDb
  id: InMemDb
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  langs:
  - csharp
  - vb
  name: InMemDb
  nameWithType: TFChunkDbConfig.InMemDb
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.InMemDb
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InMemDb
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly bool InMemDb
    return:
      type: System.Boolean
    content.vb: Public ReadOnly InMemDb As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.Unbuffered
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.Unbuffered
  id: Unbuffered
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  langs:
  - csharp
  - vb
  name: Unbuffered
  nameWithType: TFChunkDbConfig.Unbuffered
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.Unbuffered
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Unbuffered
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly bool Unbuffered
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Unbuffered As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.WriteThrough
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.WriteThrough
  id: WriteThrough
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  langs:
  - csharp
  - vb
  name: WriteThrough
  nameWithType: TFChunkDbConfig.WriteThrough
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.WriteThrough
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WriteThrough
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly bool WriteThrough
    return:
      type: System.Boolean
    content.vb: Public ReadOnly WriteThrough As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.InitialReaderCount
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.InitialReaderCount
  id: InitialReaderCount
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  langs:
  - csharp
  - vb
  name: InitialReaderCount
  nameWithType: TFChunkDbConfig.InitialReaderCount
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.InitialReaderCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InitialReaderCount
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
    startLine: 20
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public readonly int InitialReaderCount
    return:
      type: System.Int32
    content.vb: Public ReadOnly InitialReaderCount As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.#ctor(System.String,EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy,System.Int32,System.Int64,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.#ctor(System.String,EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy,System.Int32,System.Int64,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.String,EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy,System.Int32,System.Int64,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,System.Int32,System.Boolean,System.Boolean,System.Boolean)'
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  langs:
  - csharp
  - vb
  name: TFChunkDbConfig(String, IFileNamingStrategy, Int32, Int64, ICheckpoint, ICheckpoint, ICheckpoint, ICheckpoint, ICheckpoint, Int32, Boolean, Boolean, Boolean)
  nameWithType: TFChunkDbConfig.TFChunkDbConfig(String, IFileNamingStrategy, Int32, Int64, ICheckpoint, ICheckpoint, ICheckpoint, ICheckpoint, ICheckpoint, Int32, Boolean, Boolean, Boolean)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.TFChunkDbConfig(System.String, EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy, System.Int32, System.Int64, EventStore.Core.TransactionLog.Checkpoint.ICheckpoint, EventStore.Core.TransactionLog.Checkpoint.ICheckpoint, EventStore.Core.TransactionLog.Checkpoint.ICheckpoint, EventStore.Core.TransactionLog.Checkpoint.ICheckpoint, EventStore.Core.TransactionLog.Checkpoint.ICheckpoint, System.Int32, System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkDbConfig.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public TFChunkDbConfig(string path, IFileNamingStrategy fileNamingStrategy, int chunkSize, long maxChunksCacheSize, ICheckpoint writerCheckpoint, ICheckpoint chaserCheckpoint, ICheckpoint epochCheckpoint, ICheckpoint truncateCheckpoint, ICheckpoint replicationCheckpoint, int initialReaderCount, bool inMemDb = false, bool unbuffered = false, bool writethrough = false)
    parameters:
    - id: path
      type: System.String
    - id: fileNamingStrategy
      type: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
    - id: chunkSize
      type: System.Int32
    - id: maxChunksCacheSize
      type: System.Int64
    - id: writerCheckpoint
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    - id: chaserCheckpoint
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    - id: epochCheckpoint
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    - id: truncateCheckpoint
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    - id: replicationCheckpoint
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    - id: initialReaderCount
      type: System.Int32
    - id: inMemDb
      type: System.Boolean
    - id: unbuffered
      type: System.Boolean
    - id: writethrough
      type: System.Boolean
    content.vb: Public Sub New(path As String, fileNamingStrategy As IFileNamingStrategy, chunkSize As Integer, maxChunksCacheSize As Long, writerCheckpoint As ICheckpoint, chaserCheckpoint As ICheckpoint, epochCheckpoint As ICheckpoint, truncateCheckpoint As ICheckpoint, replicationCheckpoint As ICheckpoint, initialReaderCount As Integer, inMemDb As Boolean = False, unbuffered As Boolean = False, writethrough As Boolean = False)
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TFChunkDbConfig>()
  nameWithType: ProtobufExtensions.Serialize<TFChunkDbConfig>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TFChunkDbConfig)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig)()
  name.vb: Serialize(Of TFChunkDbConfig)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TFChunkDbConfig>
    nameWithType: ProtobufExtensions.Serialize<TFChunkDbConfig>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TFChunkDbConfig)
    nameWithType: ProtobufExtensions.Serialize(Of TFChunkDbConfig)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TFChunkDbConfig>()
  nameWithType: ProtobufExtensions.SerializeToArray<TFChunkDbConfig>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TFChunkDbConfig)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig)()
  name.vb: SerializeToArray(Of TFChunkDbConfig)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TFChunkDbConfig>
    nameWithType: ProtobufExtensions.SerializeToArray<TFChunkDbConfig>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TFChunkDbConfig)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TFChunkDbConfig)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  commentId: T:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  parent: EventStore.Core.TransactionLog.Checkpoint
  isExternal: false
  name: ICheckpoint
  nameWithType: ICheckpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
- uid: EventStore.Core.TransactionLog.Checkpoint
  commentId: N:EventStore.Core.TransactionLog.Checkpoint
  isExternal: false
  name: EventStore.Core.TransactionLog.Checkpoint
  nameWithType: EventStore.Core.TransactionLog.Checkpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  commentId: T:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  parent: EventStore.Core.TransactionLog.FileNamingStrategy
  isExternal: false
  name: IFileNamingStrategy
  nameWithType: IFileNamingStrategy
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
- uid: EventStore.Core.TransactionLog.FileNamingStrategy
  commentId: N:EventStore.Core.TransactionLog.FileNamingStrategy
  isExternal: false
  name: EventStore.Core.TransactionLog.FileNamingStrategy
  nameWithType: EventStore.Core.TransactionLog.FileNamingStrategy
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.#ctor*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.#ctor
  isExternal: false
  name: TFChunkDbConfig
  nameWithType: TFChunkDbConfig.TFChunkDbConfig
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.TFChunkDbConfig

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkReader
  id: TFChunkReader
  parent: EventStore.Core.TransactionLog.Chunks
  children:
  - EventStore.Core.TransactionLog.Chunks.TFChunkReader.#ctor(EventStore.Core.TransactionLog.Chunks.TFChunkDb,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,System.Int64,System.Boolean)
  - EventStore.Core.TransactionLog.Chunks.TFChunkReader.CurrentPosition
  - EventStore.Core.TransactionLog.Chunks.TFChunkReader.ExistsAt(System.Int64)
  - EventStore.Core.TransactionLog.Chunks.TFChunkReader.MaxRetries
  - EventStore.Core.TransactionLog.Chunks.TFChunkReader.Reposition(System.Int64)
  - EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadAt(System.Int64)
  - EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadNext
  - EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadPrev
  langs:
  - csharp
  - vb
  name: TFChunkReader
  nameWithType: TFChunkReader
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReader
  type: Class
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TFChunkReader
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: 'public class TFChunkReader : object, ITransactionFileReader'
    content.vb: >-
      Public Class TFChunkReader
          Inherits Object
          Implements ITransactionFileReader
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.TransactionLog.ITransactionFileReader
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.Chunks.TFChunkReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.Chunks.TFChunkReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader.MaxRetries
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFChunkReader.MaxRetries
  id: MaxRetries
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkReader
  langs:
  - csharp
  - vb
  name: MaxRetries
  nameWithType: TFChunkReader.MaxRetries
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReader.MaxRetries
  type: Field
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MaxRetries
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public const int MaxRetries = null
    return:
      type: System.Int32
    content.vb: Public Const MaxRetries As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader.CurrentPosition
  commentId: P:EventStore.Core.TransactionLog.Chunks.TFChunkReader.CurrentPosition
  id: CurrentPosition
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkReader
  langs:
  - csharp
  - vb
  name: CurrentPosition
  nameWithType: TFChunkReader.CurrentPosition
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReader.CurrentPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CurrentPosition
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public long CurrentPosition { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property CurrentPosition As Long
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkReader.CurrentPosition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader.#ctor(EventStore.Core.TransactionLog.Chunks.TFChunkDb,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,System.Int64,System.Boolean)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkReader.#ctor(EventStore.Core.TransactionLog.Chunks.TFChunkDb,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,System.Int64,System.Boolean)
  id: '#ctor(EventStore.Core.TransactionLog.Chunks.TFChunkDb,EventStore.Core.TransactionLog.Checkpoint.ICheckpoint,System.Int64,System.Boolean)'
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkReader
  langs:
  - csharp
  - vb
  name: TFChunkReader(TFChunkDb, ICheckpoint, Int64, Boolean)
  nameWithType: TFChunkReader.TFChunkReader(TFChunkDb, ICheckpoint, Int64, Boolean)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReader.TFChunkReader(EventStore.Core.TransactionLog.Chunks.TFChunkDb, EventStore.Core.TransactionLog.Checkpoint.ICheckpoint, System.Int64, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
    startLine: 23
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public TFChunkReader(TFChunkDb db, ICheckpoint writerCheckpoint, long initialPosition = null, bool optimizeReadSideCache = false)
    parameters:
    - id: db
      type: EventStore.Core.TransactionLog.Chunks.TFChunkDb
    - id: writerCheckpoint
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    - id: initialPosition
      type: System.Int64
    - id: optimizeReadSideCache
      type: System.Boolean
    content.vb: Public Sub New(db As TFChunkDb, writerCheckpoint As ICheckpoint, initialPosition As Long = Nothing, optimizeReadSideCache As Boolean = False)
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader.Reposition(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkReader.Reposition(System.Int64)
  id: Reposition(System.Int64)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkReader
  langs:
  - csharp
  - vb
  name: Reposition(Int64)
  nameWithType: TFChunkReader.Reposition(Int64)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReader.Reposition(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Reposition
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
    startLine: 38
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public void Reposition(long position)
    parameters:
    - id: position
      type: System.Int64
    content.vb: Public Sub Reposition(position As Long)
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkReader.Reposition*
  implements:
  - EventStore.Core.TransactionLog.ITransactionFileReader.Reposition(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadNext
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadNext
  id: TryReadNext
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkReader
  langs:
  - csharp
  - vb
  name: TryReadNext()
  nameWithType: TFChunkReader.TryReadNext()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadNext()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TryReadNext
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
    startLine: 43
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public SeqReadResult TryReadNext()
    return:
      type: EventStore.Core.TransactionLog.SeqReadResult
    content.vb: Public Function TryReadNext As SeqReadResult
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadNext*
  implements:
  - EventStore.Core.TransactionLog.ITransactionFileReader.TryReadNext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadPrev
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadPrev
  id: TryReadPrev
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkReader
  langs:
  - csharp
  - vb
  name: TryReadPrev()
  nameWithType: TFChunkReader.TryReadPrev()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadPrev()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TryReadPrev
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
    startLine: 88
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public SeqReadResult TryReadPrev()
    return:
      type: EventStore.Core.TransactionLog.SeqReadResult
    content.vb: Public Function TryReadPrev As SeqReadResult
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadPrev*
  implements:
  - EventStore.Core.TransactionLog.ITransactionFileReader.TryReadPrev
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadAt(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadAt(System.Int64)
  id: TryReadAt(System.Int64)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkReader
  langs:
  - csharp
  - vb
  name: TryReadAt(Int64)
  nameWithType: TFChunkReader.TryReadAt(Int64)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadAt(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: TryReadAt
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
    startLine: 144
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public RecordReadResult TryReadAt(long position)
    parameters:
    - id: position
      type: System.Int64
    return:
      type: EventStore.Core.TransactionLog.RecordReadResult
    content.vb: Public Function TryReadAt(position As Long) As RecordReadResult
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadAt*
  implements:
  - EventStore.Core.TransactionLog.ITransactionFileReader.TryReadAt(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader.ExistsAt(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkReader.ExistsAt(System.Int64)
  id: ExistsAt(System.Int64)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkReader
  langs:
  - csharp
  - vb
  name: ExistsAt(Int64)
  nameWithType: TFChunkReader.ExistsAt(Int64)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReader.ExistsAt(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ExistsAt
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkReader.cs
    startLine: 169
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public bool ExistsAt(long position)
    parameters:
    - id: position
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Public Function ExistsAt(position As Long) As Boolean
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkReader.ExistsAt*
  implements:
  - EventStore.Core.TransactionLog.ITransactionFileReader.ExistsAt(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.TransactionLog.ITransactionFileReader
  commentId: T:EventStore.Core.TransactionLog.ITransactionFileReader
  parent: EventStore.Core.TransactionLog
  isExternal: false
  name: ITransactionFileReader
  nameWithType: ITransactionFileReader
  fullName: EventStore.Core.TransactionLog.ITransactionFileReader
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TFChunkReader>()
  nameWithType: ProtobufExtensions.Serialize<TFChunkReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.TFChunkReader>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TFChunkReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.TFChunkReader)()
  name.vb: Serialize(Of TFChunkReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TFChunkReader>
    nameWithType: ProtobufExtensions.Serialize<TFChunkReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.TFChunkReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TFChunkReader)
    nameWithType: ProtobufExtensions.Serialize(Of TFChunkReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.TFChunkReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TFChunkReader>()
  nameWithType: ProtobufExtensions.SerializeToArray<TFChunkReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.TFChunkReader>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TFChunkReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.TFChunkReader)()
  name.vb: SerializeToArray(Of TFChunkReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TFChunkReader>
    nameWithType: ProtobufExtensions.SerializeToArray<TFChunkReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.TFChunkReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TFChunkReader)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TFChunkReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.TFChunkReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog
  commentId: N:EventStore.Core.TransactionLog
  isExternal: false
  name: EventStore.Core.TransactionLog
  nameWithType: EventStore.Core.TransactionLog
  fullName: EventStore.Core.TransactionLog
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader.CurrentPosition*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkReader.CurrentPosition
  isExternal: false
  name: CurrentPosition
  nameWithType: TFChunkReader.CurrentPosition
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReader.CurrentPosition
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader.#ctor*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkReader.#ctor
  isExternal: false
  name: TFChunkReader
  nameWithType: TFChunkReader.TFChunkReader
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReader.TFChunkReader
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDb
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkDb
  parent: EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: TFChunkDb
  nameWithType: TFChunkDb
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDb
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  commentId: T:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  parent: EventStore.Core.TransactionLog.Checkpoint
  isExternal: false
  name: ICheckpoint
  nameWithType: ICheckpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.TransactionLog.Checkpoint
  commentId: N:EventStore.Core.TransactionLog.Checkpoint
  isExternal: false
  name: EventStore.Core.TransactionLog.Checkpoint
  nameWithType: EventStore.Core.TransactionLog.Checkpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader.Reposition*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkReader.Reposition
  isExternal: false
  name: Reposition
  nameWithType: TFChunkReader.Reposition
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReader.Reposition
- uid: EventStore.Core.TransactionLog.ITransactionFileReader.Reposition(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileReader.Reposition(System.Int64)
  parent: EventStore.Core.TransactionLog.ITransactionFileReader
  isExternal: true
  name: Reposition(Int64)
  nameWithType: ITransactionFileReader.Reposition(Int64)
  fullName: EventStore.Core.TransactionLog.ITransactionFileReader.Reposition(System.Int64)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.ITransactionFileReader.Reposition(System.Int64)
    name: Reposition
    nameWithType: ITransactionFileReader.Reposition
    fullName: EventStore.Core.TransactionLog.ITransactionFileReader.Reposition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.ITransactionFileReader.Reposition(System.Int64)
    name: Reposition
    nameWithType: ITransactionFileReader.Reposition
    fullName: EventStore.Core.TransactionLog.ITransactionFileReader.Reposition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadNext*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadNext
  isExternal: false
  name: TryReadNext
  nameWithType: TFChunkReader.TryReadNext
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadNext
- uid: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadNext
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileReader.TryReadNext
  parent: EventStore.Core.TransactionLog.ITransactionFileReader
  isExternal: false
  name: TryReadNext()
  nameWithType: ITransactionFileReader.TryReadNext()
  fullName: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadNext()
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadNext
    name: TryReadNext
    nameWithType: ITransactionFileReader.TryReadNext
    fullName: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadNext
    name: TryReadNext
    nameWithType: ITransactionFileReader.TryReadNext
    fullName: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.SeqReadResult
  commentId: T:EventStore.Core.TransactionLog.SeqReadResult
  parent: EventStore.Core.TransactionLog
  isExternal: false
  name: SeqReadResult
  nameWithType: SeqReadResult
  fullName: EventStore.Core.TransactionLog.SeqReadResult
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadPrev*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadPrev
  isExternal: false
  name: TryReadPrev
  nameWithType: TFChunkReader.TryReadPrev
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadPrev
- uid: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadPrev
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileReader.TryReadPrev
  parent: EventStore.Core.TransactionLog.ITransactionFileReader
  isExternal: false
  name: TryReadPrev()
  nameWithType: ITransactionFileReader.TryReadPrev()
  fullName: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadPrev()
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadPrev
    name: TryReadPrev
    nameWithType: ITransactionFileReader.TryReadPrev
    fullName: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadPrev
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadPrev
    name: TryReadPrev
    nameWithType: ITransactionFileReader.TryReadPrev
    fullName: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadPrev
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadAt*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadAt
  isExternal: false
  name: TryReadAt
  nameWithType: TFChunkReader.TryReadAt
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReader.TryReadAt
- uid: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadAt(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileReader.TryReadAt(System.Int64)
  parent: EventStore.Core.TransactionLog.ITransactionFileReader
  isExternal: true
  name: TryReadAt(Int64)
  nameWithType: ITransactionFileReader.TryReadAt(Int64)
  fullName: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadAt(System.Int64)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadAt(System.Int64)
    name: TryReadAt
    nameWithType: ITransactionFileReader.TryReadAt
    fullName: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadAt(System.Int64)
    name: TryReadAt
    nameWithType: ITransactionFileReader.TryReadAt
    fullName: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.RecordReadResult
  commentId: T:EventStore.Core.TransactionLog.RecordReadResult
  parent: EventStore.Core.TransactionLog
  isExternal: false
  name: RecordReadResult
  nameWithType: RecordReadResult
  fullName: EventStore.Core.TransactionLog.RecordReadResult
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkReader.ExistsAt*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkReader.ExistsAt
  isExternal: false
  name: ExistsAt
  nameWithType: TFChunkReader.ExistsAt
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkReader.ExistsAt
- uid: EventStore.Core.TransactionLog.ITransactionFileReader.ExistsAt(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileReader.ExistsAt(System.Int64)
  parent: EventStore.Core.TransactionLog.ITransactionFileReader
  isExternal: true
  name: ExistsAt(Int64)
  nameWithType: ITransactionFileReader.ExistsAt(Int64)
  fullName: EventStore.Core.TransactionLog.ITransactionFileReader.ExistsAt(System.Int64)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.ITransactionFileReader.ExistsAt(System.Int64)
    name: ExistsAt
    nameWithType: ITransactionFileReader.ExistsAt
    fullName: EventStore.Core.TransactionLog.ITransactionFileReader.ExistsAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.ITransactionFileReader.ExistsAt(System.Int64)
    name: ExistsAt
    nameWithType: ITransactionFileReader.ExistsAt
    fullName: EventStore.Core.TransactionLog.ITransactionFileReader.ExistsAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )

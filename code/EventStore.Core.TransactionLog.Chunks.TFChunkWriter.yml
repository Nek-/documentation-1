### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkWriter
  id: TFChunkWriter
  parent: EventStore.Core.TransactionLog.Chunks
  children:
  - EventStore.Core.TransactionLog.Chunks.TFChunkWriter.#ctor(EventStore.Core.TransactionLog.Chunks.TFChunkDb)
  - EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Checkpoint
  - EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Close
  - EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CompleteChunk
  - EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CompleteReplicatedRawChunk(EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)
  - EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CurrentChunk
  - EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Dispose
  - EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Flush
  - EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Open
  - EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Write(EventStore.Core.TransactionLog.LogRecords.LogRecord,System.Int64@)
  langs:
  - csharp
  - vb
  name: TFChunkWriter
  nameWithType: TFChunkWriter
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
  type: Class
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TFChunkWriter
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: 'public class TFChunkWriter : object, ITransactionFileWriter, IDisposable'
    content.vb: >-
      Public Class TFChunkWriter
          Inherits Object
          Implements ITransactionFileWriter, IDisposable
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.TransactionLog.ITransactionFileWriter
  - IDisposable
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.Chunks.TFChunkWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.Chunks.TFChunkWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Checkpoint
  commentId: P:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Checkpoint
  id: Checkpoint
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
  langs:
  - csharp
  - vb
  name: Checkpoint
  nameWithType: TFChunkWriter.Checkpoint
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Checkpoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Checkpoint
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public ICheckpoint Checkpoint { get; }
    parameters: []
    return:
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    content.vb: Public ReadOnly Property Checkpoint As ICheckpoint
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Checkpoint*
  implements:
  - EventStore.Core.TransactionLog.ITransactionFileWriter.Checkpoint
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CurrentChunk
  commentId: P:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CurrentChunk
  id: CurrentChunk
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
  langs:
  - csharp
  - vb
  name: CurrentChunk
  nameWithType: TFChunkWriter.CurrentChunk
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CurrentChunk
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CurrentChunk
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public TFChunk CurrentChunk { get; }
    parameters: []
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
    content.vb: Public ReadOnly Property CurrentChunk As TFChunk
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CurrentChunk*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.#ctor(EventStore.Core.TransactionLog.Chunks.TFChunkDb)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.#ctor(EventStore.Core.TransactionLog.Chunks.TFChunkDb)
  id: '#ctor(EventStore.Core.TransactionLog.Chunks.TFChunkDb)'
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
  langs:
  - csharp
  - vb
  name: TFChunkWriter(TFChunkDb)
  nameWithType: TFChunkWriter.TFChunkWriter(TFChunkDb)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.TFChunkWriter(EventStore.Core.TransactionLog.Chunks.TFChunkDb)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public TFChunkWriter(TFChunkDb db)
    parameters:
    - id: db
      type: EventStore.Core.TransactionLog.Chunks.TFChunkDb
    content.vb: Public Sub New(db As TFChunkDb)
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Open
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Open
  id: Open
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
  langs:
  - csharp
  - vb
  name: Open()
  nameWithType: TFChunkWriter.Open()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Open()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Open
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
    startLine: 28
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public void Open()
    content.vb: Public Sub Open
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Open*
  implements:
  - EventStore.Core.TransactionLog.ITransactionFileWriter.Open
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Write(EventStore.Core.TransactionLog.LogRecords.LogRecord,System.Int64@)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Write(EventStore.Core.TransactionLog.LogRecords.LogRecord,System.Int64@)
  id: Write(EventStore.Core.TransactionLog.LogRecords.LogRecord,System.Int64@)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
  langs:
  - csharp
  - vb
  name: Write(LogRecord, out Int64)
  nameWithType: TFChunkWriter.Write(LogRecord, out Int64)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Write(EventStore.Core.TransactionLog.LogRecords.LogRecord, out System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Write
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
    startLine: 33
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public bool Write(LogRecord record, out long newPos)
    parameters:
    - id: record
      type: EventStore.Core.TransactionLog.LogRecords.LogRecord
    - id: newPos
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Public Function Write(record As LogRecord, ByRef newPos As Long) As Boolean
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Write*
  implements:
  - EventStore.Core.TransactionLog.ITransactionFileWriter.Write(EventStore.Core.TransactionLog.LogRecords.LogRecord,System.Int64@)
  nameWithType.vb: TFChunkWriter.Write(LogRecord, ByRef Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Write(EventStore.Core.TransactionLog.LogRecords.LogRecord, ByRef System.Int64)
  name.vb: Write(LogRecord, ByRef Int64)
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CompleteChunk
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CompleteChunk
  id: CompleteChunk
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
  langs:
  - csharp
  - vb
  name: CompleteChunk()
  nameWithType: TFChunkWriter.CompleteChunk()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CompleteChunk()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CompleteChunk
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
    startLine: 44
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public void CompleteChunk()
    content.vb: Public Sub CompleteChunk
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CompleteChunk*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CompleteReplicatedRawChunk(EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CompleteReplicatedRawChunk(EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)
  id: CompleteReplicatedRawChunk(EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
  langs:
  - csharp
  - vb
  name: CompleteReplicatedRawChunk(TFChunk)
  nameWithType: TFChunkWriter.CompleteReplicatedRawChunk(TFChunk)
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CompleteReplicatedRawChunk(EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CompleteReplicatedRawChunk
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
    startLine: 57
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public void CompleteReplicatedRawChunk(TFChunk rawChunk)
    parameters:
    - id: rawChunk
      type: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
    content.vb: Public Sub CompleteReplicatedRawChunk(rawChunk As TFChunk)
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CompleteReplicatedRawChunk*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Dispose
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Dispose
  id: Dispose
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TFChunkWriter.Dispose()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Dispose()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Dispose
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
    startLine: 70
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Close
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Close
  id: Close
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: TFChunkWriter.Close()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Close()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Close
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
    startLine: 75
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Close*
  implements:
  - EventStore.Core.TransactionLog.ITransactionFileWriter.Close
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Flush
  commentId: M:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Flush
  id: Flush
  parent: EventStore.Core.TransactionLog.Chunks.TFChunkWriter
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: TFChunkWriter.Flush()
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Flush()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Flush
    path: ../EventStore/src/EventStore.Core/TransactionLog/Chunks/TFChunkWriter.cs
    startLine: 80
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.Chunks
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  overload: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Flush*
  implements:
  - EventStore.Core.TransactionLog.ITransactionFileWriter.Flush
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter
  commentId: T:EventStore.Core.TransactionLog.ITransactionFileWriter
  parent: EventStore.Core.TransactionLog
  isExternal: false
  name: ITransactionFileWriter
  nameWithType: ITransactionFileWriter
  fullName: EventStore.Core.TransactionLog.ITransactionFileWriter
- uid: IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TFChunkWriter>()
  nameWithType: ProtobufExtensions.Serialize<TFChunkWriter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.TFChunkWriter>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TFChunkWriter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.TFChunkWriter)()
  name.vb: Serialize(Of TFChunkWriter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TFChunkWriter>
    nameWithType: ProtobufExtensions.Serialize<TFChunkWriter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.Chunks.TFChunkWriter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TFChunkWriter)
    nameWithType: ProtobufExtensions.Serialize(Of TFChunkWriter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.Chunks.TFChunkWriter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TFChunkWriter>()
  nameWithType: ProtobufExtensions.SerializeToArray<TFChunkWriter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.TFChunkWriter>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TFChunkWriter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.TFChunkWriter)()
  name.vb: SerializeToArray(Of TFChunkWriter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TFChunkWriter>
    nameWithType: ProtobufExtensions.SerializeToArray<TFChunkWriter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.Chunks.TFChunkWriter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TFChunkWriter)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TFChunkWriter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.Chunks.TFChunkWriter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog
  commentId: N:EventStore.Core.TransactionLog
  isExternal: false
  name: EventStore.Core.TransactionLog
  nameWithType: EventStore.Core.TransactionLog
  fullName: EventStore.Core.TransactionLog
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Checkpoint*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Checkpoint
  isExternal: false
  name: Checkpoint
  nameWithType: TFChunkWriter.Checkpoint
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Checkpoint
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Checkpoint
  commentId: P:EventStore.Core.TransactionLog.ITransactionFileWriter.Checkpoint
  parent: EventStore.Core.TransactionLog.ITransactionFileWriter
  isExternal: false
  name: Checkpoint
  nameWithType: ITransactionFileWriter.Checkpoint
  fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Checkpoint
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  commentId: T:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  parent: EventStore.Core.TransactionLog.Checkpoint
  isExternal: false
  name: ICheckpoint
  nameWithType: ICheckpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
- uid: EventStore.Core.TransactionLog.Checkpoint
  commentId: N:EventStore.Core.TransactionLog.Checkpoint
  isExternal: false
  name: EventStore.Core.TransactionLog.Checkpoint
  nameWithType: EventStore.Core.TransactionLog.Checkpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CurrentChunk*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CurrentChunk
  isExternal: false
  name: CurrentChunk
  nameWithType: TFChunkWriter.CurrentChunk
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CurrentChunk
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
  parent: EventStore.Core.TransactionLog.Chunks.TFChunk
  isExternal: false
  name: TFChunk
  nameWithType: TFChunk
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk
- uid: EventStore.Core.TransactionLog.Chunks.TFChunk
  commentId: N:EventStore.Core.TransactionLog.Chunks.TFChunk
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks.TFChunk
  nameWithType: EventStore.Core.TransactionLog.Chunks.TFChunk
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunk
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.#ctor*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.#ctor
  isExternal: false
  name: TFChunkWriter
  nameWithType: TFChunkWriter.TFChunkWriter
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.TFChunkWriter
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDb
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkDb
  parent: EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: TFChunkDb
  nameWithType: TFChunkDb
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDb
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Open*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Open
  isExternal: false
  name: Open
  nameWithType: TFChunkWriter.Open
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Open
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Open
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileWriter.Open
  parent: EventStore.Core.TransactionLog.ITransactionFileWriter
  isExternal: false
  name: Open()
  nameWithType: ITransactionFileWriter.Open()
  fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Open()
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Open
    name: Open
    nameWithType: ITransactionFileWriter.Open
    fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Open
    name: Open
    nameWithType: ITransactionFileWriter.Open
    fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Write*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Write
  isExternal: false
  name: Write
  nameWithType: TFChunkWriter.Write
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Write
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Write(EventStore.Core.TransactionLog.LogRecords.LogRecord,System.Int64@)
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileWriter.Write(EventStore.Core.TransactionLog.LogRecords.LogRecord,System.Int64@)
  parent: EventStore.Core.TransactionLog.ITransactionFileWriter
  isExternal: true
  name: Write(LogRecord, Int64)
  nameWithType: ITransactionFileWriter.Write(LogRecord, Int64)
  fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Write(EventStore.Core.TransactionLog.LogRecords.LogRecord, System.Int64)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Write(EventStore.Core.TransactionLog.LogRecords.LogRecord,System.Int64@)
    name: Write
    nameWithType: ITransactionFileWriter.Write
    fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord
    name: LogRecord
    nameWithType: LogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Write(EventStore.Core.TransactionLog.LogRecords.LogRecord,System.Int64@)
    name: Write
    nameWithType: ITransactionFileWriter.Write
    fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.TransactionLog.LogRecords.LogRecord
    name: LogRecord
    nameWithType: LogRecord
    fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord
  commentId: T:EventStore.Core.TransactionLog.LogRecords.LogRecord
  parent: EventStore.Core.TransactionLog.LogRecords
  isExternal: false
  name: LogRecord
  nameWithType: LogRecord
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.TransactionLog.LogRecords
  commentId: N:EventStore.Core.TransactionLog.LogRecords
  isExternal: false
  name: EventStore.Core.TransactionLog.LogRecords
  nameWithType: EventStore.Core.TransactionLog.LogRecords
  fullName: EventStore.Core.TransactionLog.LogRecords
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CompleteChunk*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CompleteChunk
  isExternal: false
  name: CompleteChunk
  nameWithType: TFChunkWriter.CompleteChunk
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CompleteChunk
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CompleteReplicatedRawChunk*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CompleteReplicatedRawChunk
  isExternal: false
  name: CompleteReplicatedRawChunk
  nameWithType: TFChunkWriter.CompleteReplicatedRawChunk
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.CompleteReplicatedRawChunk
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Dispose*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Dispose
  isExternal: false
  name: Dispose
  nameWithType: TFChunkWriter.Dispose
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Dispose
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Close*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Close
  isExternal: false
  name: Close
  nameWithType: TFChunkWriter.Close
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Close
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Close
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileWriter.Close
  parent: EventStore.Core.TransactionLog.ITransactionFileWriter
  isExternal: false
  name: Close()
  nameWithType: ITransactionFileWriter.Close()
  fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Close()
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Close
    name: Close
    nameWithType: ITransactionFileWriter.Close
    fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Close
    name: Close
    nameWithType: ITransactionFileWriter.Close
    fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Flush*
  commentId: Overload:EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Flush
  isExternal: false
  name: Flush
  nameWithType: TFChunkWriter.Flush
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkWriter.Flush
- uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Flush
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileWriter.Flush
  parent: EventStore.Core.TransactionLog.ITransactionFileWriter
  isExternal: false
  name: Flush()
  nameWithType: ITransactionFileWriter.Flush()
  fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Flush()
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Flush
    name: Flush
    nameWithType: ITransactionFileWriter.Flush
    fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.ITransactionFileWriter.Flush
    name: Flush
    nameWithType: ITransactionFileWriter.Flush
    fullName: EventStore.Core.TransactionLog.ITransactionFileWriter.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )

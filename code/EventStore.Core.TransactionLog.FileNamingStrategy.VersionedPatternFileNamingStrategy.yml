### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy
  commentId: T:EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy
  id: VersionedPatternFileNamingStrategy
  parent: EventStore.Core.TransactionLog.FileNamingStrategy
  children:
  - EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.#ctor(System.String,System.String)
  - EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.DetermineBestVersionFilenameFor(System.Int32)
  - EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllPresentFiles
  - EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllTempFiles
  - EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllVersionsFor(System.Int32)
  - EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetFilenameFor(System.Int32,System.Int32)
  - EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetTempFilename
  langs:
  - csharp
  - vb
  name: VersionedPatternFileNamingStrategy
  nameWithType: VersionedPatternFileNamingStrategy
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy
  type: Class
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/FileNamingStrategy/VersionedPatternFileNamingStrategy.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: VersionedPatternFileNamingStrategy
    path: ../EventStore/src/EventStore.Core/TransactionLog/FileNamingStrategy/VersionedPatternFileNamingStrategy.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.FileNamingStrategy
  syntax:
    content: 'public class VersionedPatternFileNamingStrategy : object, IFileNamingStrategy'
    content.vb: >-
      Public Class VersionedPatternFileNamingStrategy

          Inherits Object

          Implements IFileNamingStrategy
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.#ctor(System.String,System.String)
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy
  langs:
  - csharp
  - vb
  name: VersionedPatternFileNamingStrategy(String, String)
  nameWithType: VersionedPatternFileNamingStrategy.VersionedPatternFileNamingStrategy(String, String)
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.VersionedPatternFileNamingStrategy(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/FileNamingStrategy/VersionedPatternFileNamingStrategy.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/TransactionLog/FileNamingStrategy/VersionedPatternFileNamingStrategy.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.FileNamingStrategy
  syntax:
    content: public VersionedPatternFileNamingStrategy(string path, string prefix)
    parameters:
    - id: path
      type: System.String
    - id: prefix
      type: System.String
    content.vb: Public Sub New(path As String, prefix As String)
  overload: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetFilenameFor(System.Int32,System.Int32)
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetFilenameFor(System.Int32,System.Int32)
  id: GetFilenameFor(System.Int32,System.Int32)
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy
  langs:
  - csharp
  - vb
  name: GetFilenameFor(Int32, Int32)
  nameWithType: VersionedPatternFileNamingStrategy.GetFilenameFor(Int32, Int32)
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetFilenameFor(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/FileNamingStrategy/VersionedPatternFileNamingStrategy.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetFilenameFor
    path: ../EventStore/src/EventStore.Core/TransactionLog/FileNamingStrategy/VersionedPatternFileNamingStrategy.cs
    startLine: 24
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.FileNamingStrategy
  syntax:
    content: public string GetFilenameFor(int index, int version)
    parameters:
    - id: index
      type: System.Int32
    - id: version
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function GetFilenameFor(index As Integer, version As Integer) As String
  overload: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetFilenameFor*
  implements:
  - EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetFilenameFor(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.DetermineBestVersionFilenameFor(System.Int32)
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.DetermineBestVersionFilenameFor(System.Int32)
  id: DetermineBestVersionFilenameFor(System.Int32)
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy
  langs:
  - csharp
  - vb
  name: DetermineBestVersionFilenameFor(Int32)
  nameWithType: VersionedPatternFileNamingStrategy.DetermineBestVersionFilenameFor(Int32)
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.DetermineBestVersionFilenameFor(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/FileNamingStrategy/VersionedPatternFileNamingStrategy.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DetermineBestVersionFilenameFor
    path: ../EventStore/src/EventStore.Core/TransactionLog/FileNamingStrategy/VersionedPatternFileNamingStrategy.cs
    startLine: 32
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.FileNamingStrategy
  syntax:
    content: public string DetermineBestVersionFilenameFor(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function DetermineBestVersionFilenameFor(index As Integer) As String
  overload: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.DetermineBestVersionFilenameFor*
  implements:
  - EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.DetermineBestVersionFilenameFor(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllVersionsFor(System.Int32)
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllVersionsFor(System.Int32)
  id: GetAllVersionsFor(System.Int32)
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy
  langs:
  - csharp
  - vb
  name: GetAllVersionsFor(Int32)
  nameWithType: VersionedPatternFileNamingStrategy.GetAllVersionsFor(Int32)
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllVersionsFor(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/FileNamingStrategy/VersionedPatternFileNamingStrategy.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetAllVersionsFor
    path: ../EventStore/src/EventStore.Core/TransactionLog/FileNamingStrategy/VersionedPatternFileNamingStrategy.cs
    startLine: 43
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.FileNamingStrategy
  syntax:
    content: public string[] GetAllVersionsFor(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.String[]
    content.vb: Public Function GetAllVersionsFor(index As Integer) As String()
  overload: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllVersionsFor*
  implements:
  - EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllVersionsFor(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllPresentFiles
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllPresentFiles
  id: GetAllPresentFiles
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy
  langs:
  - csharp
  - vb
  name: GetAllPresentFiles()
  nameWithType: VersionedPatternFileNamingStrategy.GetAllPresentFiles()
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllPresentFiles()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/FileNamingStrategy/VersionedPatternFileNamingStrategy.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetAllPresentFiles
    path: ../EventStore/src/EventStore.Core/TransactionLog/FileNamingStrategy/VersionedPatternFileNamingStrategy.cs
    startLine: 52
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.FileNamingStrategy
  syntax:
    content: public string[] GetAllPresentFiles()
    return:
      type: System.String[]
    content.vb: Public Function GetAllPresentFiles As String()
  overload: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllPresentFiles*
  implements:
  - EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllPresentFiles
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetTempFilename
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetTempFilename
  id: GetTempFilename
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy
  langs:
  - csharp
  - vb
  name: GetTempFilename()
  nameWithType: VersionedPatternFileNamingStrategy.GetTempFilename()
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetTempFilename()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/FileNamingStrategy/VersionedPatternFileNamingStrategy.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetTempFilename
    path: ../EventStore/src/EventStore.Core/TransactionLog/FileNamingStrategy/VersionedPatternFileNamingStrategy.cs
    startLine: 60
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.FileNamingStrategy
  syntax:
    content: public string GetTempFilename()
    return:
      type: System.String
    content.vb: Public Function GetTempFilename As String
  overload: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetTempFilename*
  implements:
  - EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetTempFilename
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllTempFiles
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllTempFiles
  id: GetAllTempFiles
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy
  langs:
  - csharp
  - vb
  name: GetAllTempFiles()
  nameWithType: VersionedPatternFileNamingStrategy.GetAllTempFiles()
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllTempFiles()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/FileNamingStrategy/VersionedPatternFileNamingStrategy.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetAllTempFiles
    path: ../EventStore/src/EventStore.Core/TransactionLog/FileNamingStrategy/VersionedPatternFileNamingStrategy.cs
    startLine: 65
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog.FileNamingStrategy
  syntax:
    content: public string[] GetAllTempFiles()
    return:
      type: System.String[]
    content.vb: Public Function GetAllTempFiles As String()
  overload: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllTempFiles*
  implements:
  - EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllTempFiles
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.TransactionLog.FileNamingStrategy
  commentId: N:EventStore.Core.TransactionLog.FileNamingStrategy
  isExternal: false
  name: EventStore.Core.TransactionLog.FileNamingStrategy
  nameWithType: EventStore.Core.TransactionLog.FileNamingStrategy
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  commentId: T:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  parent: EventStore.Core.TransactionLog.FileNamingStrategy
  isExternal: false
  name: IFileNamingStrategy
  nameWithType: IFileNamingStrategy
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<VersionedPatternFileNamingStrategy>()
  nameWithType: ProtobufExtensions.Serialize<VersionedPatternFileNamingStrategy>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of VersionedPatternFileNamingStrategy)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy)()
  name.vb: Serialize(Of VersionedPatternFileNamingStrategy)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<VersionedPatternFileNamingStrategy>
    nameWithType: ProtobufExtensions.Serialize<VersionedPatternFileNamingStrategy>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of VersionedPatternFileNamingStrategy)
    nameWithType: ProtobufExtensions.Serialize(Of VersionedPatternFileNamingStrategy)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<VersionedPatternFileNamingStrategy>()
  nameWithType: ProtobufExtensions.SerializeToArray<VersionedPatternFileNamingStrategy>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of VersionedPatternFileNamingStrategy)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy)()
  name.vb: SerializeToArray(Of VersionedPatternFileNamingStrategy)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<VersionedPatternFileNamingStrategy>
    nameWithType: ProtobufExtensions.SerializeToArray<VersionedPatternFileNamingStrategy>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of VersionedPatternFileNamingStrategy)
    nameWithType: ProtobufExtensions.SerializeToArray(Of VersionedPatternFileNamingStrategy)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.#ctor*
  commentId: Overload:EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.#ctor
  isExternal: false
  name: VersionedPatternFileNamingStrategy
  nameWithType: VersionedPatternFileNamingStrategy.VersionedPatternFileNamingStrategy
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.VersionedPatternFileNamingStrategy
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetFilenameFor*
  commentId: Overload:EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetFilenameFor
  isExternal: false
  name: GetFilenameFor
  nameWithType: VersionedPatternFileNamingStrategy.GetFilenameFor
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetFilenameFor
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetFilenameFor(System.Int32,System.Int32)
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetFilenameFor(System.Int32,System.Int32)
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  isExternal: true
  name: GetFilenameFor(Int32, Int32)
  nameWithType: IFileNamingStrategy.GetFilenameFor(Int32, Int32)
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetFilenameFor(System.Int32, System.Int32)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetFilenameFor(System.Int32,System.Int32)
    name: GetFilenameFor
    nameWithType: IFileNamingStrategy.GetFilenameFor
    fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetFilenameFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetFilenameFor(System.Int32,System.Int32)
    name: GetFilenameFor
    nameWithType: IFileNamingStrategy.GetFilenameFor
    fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetFilenameFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.DetermineBestVersionFilenameFor*
  commentId: Overload:EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.DetermineBestVersionFilenameFor
  isExternal: false
  name: DetermineBestVersionFilenameFor
  nameWithType: VersionedPatternFileNamingStrategy.DetermineBestVersionFilenameFor
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.DetermineBestVersionFilenameFor
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.DetermineBestVersionFilenameFor(System.Int32)
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.DetermineBestVersionFilenameFor(System.Int32)
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  isExternal: true
  name: DetermineBestVersionFilenameFor(Int32)
  nameWithType: IFileNamingStrategy.DetermineBestVersionFilenameFor(Int32)
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.DetermineBestVersionFilenameFor(System.Int32)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.DetermineBestVersionFilenameFor(System.Int32)
    name: DetermineBestVersionFilenameFor
    nameWithType: IFileNamingStrategy.DetermineBestVersionFilenameFor
    fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.DetermineBestVersionFilenameFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.DetermineBestVersionFilenameFor(System.Int32)
    name: DetermineBestVersionFilenameFor
    nameWithType: IFileNamingStrategy.DetermineBestVersionFilenameFor
    fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.DetermineBestVersionFilenameFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllVersionsFor*
  commentId: Overload:EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllVersionsFor
  isExternal: false
  name: GetAllVersionsFor
  nameWithType: VersionedPatternFileNamingStrategy.GetAllVersionsFor
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllVersionsFor
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllVersionsFor(System.Int32)
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllVersionsFor(System.Int32)
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  isExternal: true
  name: GetAllVersionsFor(Int32)
  nameWithType: IFileNamingStrategy.GetAllVersionsFor(Int32)
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllVersionsFor(System.Int32)
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllVersionsFor(System.Int32)
    name: GetAllVersionsFor
    nameWithType: IFileNamingStrategy.GetAllVersionsFor
    fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllVersionsFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllVersionsFor(System.Int32)
    name: GetAllVersionsFor
    nameWithType: IFileNamingStrategy.GetAllVersionsFor
    fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllVersionsFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllPresentFiles*
  commentId: Overload:EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllPresentFiles
  isExternal: false
  name: GetAllPresentFiles
  nameWithType: VersionedPatternFileNamingStrategy.GetAllPresentFiles
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllPresentFiles
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllPresentFiles
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllPresentFiles
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  isExternal: false
  name: GetAllPresentFiles()
  nameWithType: IFileNamingStrategy.GetAllPresentFiles()
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllPresentFiles()
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllPresentFiles
    name: GetAllPresentFiles
    nameWithType: IFileNamingStrategy.GetAllPresentFiles
    fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllPresentFiles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllPresentFiles
    name: GetAllPresentFiles
    nameWithType: IFileNamingStrategy.GetAllPresentFiles
    fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllPresentFiles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetTempFilename*
  commentId: Overload:EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetTempFilename
  isExternal: false
  name: GetTempFilename
  nameWithType: VersionedPatternFileNamingStrategy.GetTempFilename
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetTempFilename
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetTempFilename
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetTempFilename
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  isExternal: false
  name: GetTempFilename()
  nameWithType: IFileNamingStrategy.GetTempFilename()
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetTempFilename()
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetTempFilename
    name: GetTempFilename
    nameWithType: IFileNamingStrategy.GetTempFilename
    fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetTempFilename
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetTempFilename
    name: GetTempFilename
    nameWithType: IFileNamingStrategy.GetTempFilename
    fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetTempFilename
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllTempFiles*
  commentId: Overload:EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllTempFiles
  isExternal: false
  name: GetAllTempFiles
  nameWithType: VersionedPatternFileNamingStrategy.GetAllTempFiles
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.GetAllTempFiles
- uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllTempFiles
  commentId: M:EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllTempFiles
  parent: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy
  isExternal: false
  name: GetAllTempFiles()
  nameWithType: IFileNamingStrategy.GetAllTempFiles()
  fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllTempFiles()
  spec.csharp:
  - uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllTempFiles
    name: GetAllTempFiles
    nameWithType: IFileNamingStrategy.GetAllTempFiles
    fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllTempFiles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllTempFiles
    name: GetAllTempFiles
    nameWithType: IFileNamingStrategy.GetAllTempFiles
    fullName: EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.GetAllTempFiles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.ITransactionFileChaser
  commentId: T:EventStore.Core.TransactionLog.ITransactionFileChaser
  id: ITransactionFileChaser
  parent: EventStore.Core.TransactionLog
  children:
  - EventStore.Core.TransactionLog.ITransactionFileChaser.Checkpoint
  - EventStore.Core.TransactionLog.ITransactionFileChaser.Close
  - EventStore.Core.TransactionLog.ITransactionFileChaser.Flush
  - EventStore.Core.TransactionLog.ITransactionFileChaser.Open
  - EventStore.Core.TransactionLog.ITransactionFileChaser.TryReadNext
  - EventStore.Core.TransactionLog.ITransactionFileChaser.TryReadNext(EventStore.Core.TransactionLog.LogRecords.LogRecord@)
  langs:
  - csharp
  - vb
  name: ITransactionFileChaser
  nameWithType: ITransactionFileChaser
  fullName: EventStore.Core.TransactionLog.ITransactionFileChaser
  type: Interface
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/ITransactionFileChaser.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ITransactionFileChaser
    path: ../EventStore/src/EventStore.Core/TransactionLog/ITransactionFileChaser.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: 'public interface ITransactionFileChaser : IDisposable'
    content.vb: >-
      Public Interface ITransactionFileChaser
          Inherits IDisposable
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.TransactionLog.ITransactionFileChaser.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.ITransactionFileChaser.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Core.TransactionLog.ITransactionFileChaser.Checkpoint
  commentId: P:EventStore.Core.TransactionLog.ITransactionFileChaser.Checkpoint
  id: Checkpoint
  parent: EventStore.Core.TransactionLog.ITransactionFileChaser
  langs:
  - csharp
  - vb
  name: Checkpoint
  nameWithType: ITransactionFileChaser.Checkpoint
  fullName: EventStore.Core.TransactionLog.ITransactionFileChaser.Checkpoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/ITransactionFileChaser.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Checkpoint
    path: ../EventStore/src/EventStore.Core/TransactionLog/ITransactionFileChaser.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: ICheckpoint Checkpoint { get; }
    parameters: []
    return:
      type: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
    content.vb: ReadOnly Property Checkpoint As ICheckpoint
  overload: EventStore.Core.TransactionLog.ITransactionFileChaser.Checkpoint*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Core.TransactionLog.ITransactionFileChaser.Open
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileChaser.Open
  id: Open
  parent: EventStore.Core.TransactionLog.ITransactionFileChaser
  langs:
  - csharp
  - vb
  name: Open()
  nameWithType: ITransactionFileChaser.Open()
  fullName: EventStore.Core.TransactionLog.ITransactionFileChaser.Open()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/ITransactionFileChaser.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Open
    path: ../EventStore/src/EventStore.Core/TransactionLog/ITransactionFileChaser.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: void Open()
    content.vb: Sub Open
  overload: EventStore.Core.TransactionLog.ITransactionFileChaser.Open*
- uid: EventStore.Core.TransactionLog.ITransactionFileChaser.TryReadNext
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileChaser.TryReadNext
  id: TryReadNext
  parent: EventStore.Core.TransactionLog.ITransactionFileChaser
  langs:
  - csharp
  - vb
  name: TryReadNext()
  nameWithType: ITransactionFileChaser.TryReadNext()
  fullName: EventStore.Core.TransactionLog.ITransactionFileChaser.TryReadNext()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/ITransactionFileChaser.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TryReadNext
    path: ../EventStore/src/EventStore.Core/TransactionLog/ITransactionFileChaser.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: SeqReadResult TryReadNext()
    return:
      type: EventStore.Core.TransactionLog.SeqReadResult
    content.vb: Function TryReadNext As SeqReadResult
  overload: EventStore.Core.TransactionLog.ITransactionFileChaser.TryReadNext*
- uid: EventStore.Core.TransactionLog.ITransactionFileChaser.TryReadNext(EventStore.Core.TransactionLog.LogRecords.LogRecord@)
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileChaser.TryReadNext(EventStore.Core.TransactionLog.LogRecords.LogRecord@)
  id: TryReadNext(EventStore.Core.TransactionLog.LogRecords.LogRecord@)
  parent: EventStore.Core.TransactionLog.ITransactionFileChaser
  langs:
  - csharp
  - vb
  name: TryReadNext(out LogRecord)
  nameWithType: ITransactionFileChaser.TryReadNext(out LogRecord)
  fullName: EventStore.Core.TransactionLog.ITransactionFileChaser.TryReadNext(out EventStore.Core.TransactionLog.LogRecords.LogRecord)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/ITransactionFileChaser.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TryReadNext
    path: ../EventStore/src/EventStore.Core/TransactionLog/ITransactionFileChaser.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: bool TryReadNext(out LogRecord record)
    parameters:
    - id: record
      type: EventStore.Core.TransactionLog.LogRecords.LogRecord
    return:
      type: System.Boolean
    content.vb: Function TryReadNext(ByRef record As LogRecord) As Boolean
  overload: EventStore.Core.TransactionLog.ITransactionFileChaser.TryReadNext*
  nameWithType.vb: ITransactionFileChaser.TryReadNext(ByRef LogRecord)
  fullName.vb: EventStore.Core.TransactionLog.ITransactionFileChaser.TryReadNext(ByRef EventStore.Core.TransactionLog.LogRecords.LogRecord)
  name.vb: TryReadNext(ByRef LogRecord)
- uid: EventStore.Core.TransactionLog.ITransactionFileChaser.Close
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileChaser.Close
  id: Close
  parent: EventStore.Core.TransactionLog.ITransactionFileChaser
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: ITransactionFileChaser.Close()
  fullName: EventStore.Core.TransactionLog.ITransactionFileChaser.Close()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/ITransactionFileChaser.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Close
    path: ../EventStore/src/EventStore.Core/TransactionLog/ITransactionFileChaser.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: void Close()
    content.vb: Sub Close
  overload: EventStore.Core.TransactionLog.ITransactionFileChaser.Close*
- uid: EventStore.Core.TransactionLog.ITransactionFileChaser.Flush
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileChaser.Flush
  id: Flush
  parent: EventStore.Core.TransactionLog.ITransactionFileChaser
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: ITransactionFileChaser.Flush()
  fullName: EventStore.Core.TransactionLog.ITransactionFileChaser.Flush()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/ITransactionFileChaser.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Flush
    path: ../EventStore/src/EventStore.Core/TransactionLog/ITransactionFileChaser.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: void Flush()
    content.vb: Sub Flush
  overload: EventStore.Core.TransactionLog.ITransactionFileChaser.Flush*
references:
- uid: EventStore.Core.TransactionLog
  commentId: N:EventStore.Core.TransactionLog
  isExternal: false
  name: EventStore.Core.TransactionLog
  nameWithType: EventStore.Core.TransactionLog
  fullName: EventStore.Core.TransactionLog
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.ITransactionFileChaser.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ITransactionFileChaser>()
  nameWithType: ProtobufExtensions.Serialize<ITransactionFileChaser>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.ITransactionFileChaser>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ITransactionFileChaser)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.ITransactionFileChaser)()
  name.vb: Serialize(Of ITransactionFileChaser)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ITransactionFileChaser>
    nameWithType: ProtobufExtensions.Serialize<ITransactionFileChaser>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.ITransactionFileChaser>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ITransactionFileChaser)
    nameWithType: ProtobufExtensions.Serialize(Of ITransactionFileChaser)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.ITransactionFileChaser)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.ITransactionFileChaser.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ITransactionFileChaser>()
  nameWithType: ProtobufExtensions.SerializeToArray<ITransactionFileChaser>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.ITransactionFileChaser>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ITransactionFileChaser)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.ITransactionFileChaser)()
  name.vb: SerializeToArray(Of ITransactionFileChaser)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ITransactionFileChaser>
    nameWithType: ProtobufExtensions.SerializeToArray<ITransactionFileChaser>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.ITransactionFileChaser>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ITransactionFileChaser)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ITransactionFileChaser)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.ITransactionFileChaser)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.TransactionLog.ITransactionFileChaser.Checkpoint*
  commentId: Overload:EventStore.Core.TransactionLog.ITransactionFileChaser.Checkpoint
  isExternal: false
  name: Checkpoint
  nameWithType: ITransactionFileChaser.Checkpoint
  fullName: EventStore.Core.TransactionLog.ITransactionFileChaser.Checkpoint
- uid: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  commentId: T:EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
  parent: EventStore.Core.TransactionLog.Checkpoint
  isExternal: false
  name: ICheckpoint
  nameWithType: ICheckpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint.ICheckpoint
- uid: EventStore.Core.TransactionLog.Checkpoint
  commentId: N:EventStore.Core.TransactionLog.Checkpoint
  isExternal: false
  name: EventStore.Core.TransactionLog.Checkpoint
  nameWithType: EventStore.Core.TransactionLog.Checkpoint
  fullName: EventStore.Core.TransactionLog.Checkpoint
- uid: EventStore.Core.TransactionLog.ITransactionFileChaser.Open*
  commentId: Overload:EventStore.Core.TransactionLog.ITransactionFileChaser.Open
  isExternal: false
  name: Open
  nameWithType: ITransactionFileChaser.Open
  fullName: EventStore.Core.TransactionLog.ITransactionFileChaser.Open
- uid: EventStore.Core.TransactionLog.ITransactionFileChaser.TryReadNext*
  commentId: Overload:EventStore.Core.TransactionLog.ITransactionFileChaser.TryReadNext
  isExternal: false
  name: TryReadNext
  nameWithType: ITransactionFileChaser.TryReadNext
  fullName: EventStore.Core.TransactionLog.ITransactionFileChaser.TryReadNext
- uid: EventStore.Core.TransactionLog.SeqReadResult
  commentId: T:EventStore.Core.TransactionLog.SeqReadResult
  parent: EventStore.Core.TransactionLog
  isExternal: false
  name: SeqReadResult
  nameWithType: SeqReadResult
  fullName: EventStore.Core.TransactionLog.SeqReadResult
- uid: EventStore.Core.TransactionLog.LogRecords.LogRecord
  commentId: T:EventStore.Core.TransactionLog.LogRecords.LogRecord
  parent: EventStore.Core.TransactionLog.LogRecords
  isExternal: false
  name: LogRecord
  nameWithType: LogRecord
  fullName: EventStore.Core.TransactionLog.LogRecords.LogRecord
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.TransactionLog.LogRecords
  commentId: N:EventStore.Core.TransactionLog.LogRecords
  isExternal: false
  name: EventStore.Core.TransactionLog.LogRecords
  nameWithType: EventStore.Core.TransactionLog.LogRecords
  fullName: EventStore.Core.TransactionLog.LogRecords
- uid: EventStore.Core.TransactionLog.ITransactionFileChaser.Close*
  commentId: Overload:EventStore.Core.TransactionLog.ITransactionFileChaser.Close
  isExternal: false
  name: Close
  nameWithType: ITransactionFileChaser.Close
  fullName: EventStore.Core.TransactionLog.ITransactionFileChaser.Close
- uid: EventStore.Core.TransactionLog.ITransactionFileChaser.Flush*
  commentId: Overload:EventStore.Core.TransactionLog.ITransactionFileChaser.Flush
  isExternal: false
  name: Flush
  nameWithType: ITransactionFileChaser.Flush
  fullName: EventStore.Core.TransactionLog.ITransactionFileChaser.Flush

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.TransactionLog.ITransactionFileReader
  commentId: T:EventStore.Core.TransactionLog.ITransactionFileReader
  id: ITransactionFileReader
  parent: EventStore.Core.TransactionLog
  children:
  - EventStore.Core.TransactionLog.ITransactionFileReader.ExistsAt(System.Int64)
  - EventStore.Core.TransactionLog.ITransactionFileReader.Reposition(System.Int64)
  - EventStore.Core.TransactionLog.ITransactionFileReader.TryReadAt(System.Int64)
  - EventStore.Core.TransactionLog.ITransactionFileReader.TryReadNext
  - EventStore.Core.TransactionLog.ITransactionFileReader.TryReadPrev
  langs:
  - csharp
  - vb
  name: ITransactionFileReader
  nameWithType: ITransactionFileReader
  fullName: EventStore.Core.TransactionLog.ITransactionFileReader
  type: Interface
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/ITransactionFileReader.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ITransactionFileReader
    path: ../EventStore/src/EventStore.Core/TransactionLog/ITransactionFileReader.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: public interface ITransactionFileReader
    content.vb: Public Interface ITransactionFileReader
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.TransactionLog.ITransactionFileReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.TransactionLog.ITransactionFileReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Core.TransactionLog.ITransactionFileReader.Reposition(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileReader.Reposition(System.Int64)
  id: Reposition(System.Int64)
  parent: EventStore.Core.TransactionLog.ITransactionFileReader
  langs:
  - csharp
  - vb
  name: Reposition(Int64)
  nameWithType: ITransactionFileReader.Reposition(Int64)
  fullName: EventStore.Core.TransactionLog.ITransactionFileReader.Reposition(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/ITransactionFileReader.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Reposition
    path: ../EventStore/src/EventStore.Core/TransactionLog/ITransactionFileReader.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: void Reposition(long position)
    parameters:
    - id: position
      type: System.Int64
    content.vb: Sub Reposition(position As Long)
  overload: EventStore.Core.TransactionLog.ITransactionFileReader.Reposition*
- uid: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadNext
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileReader.TryReadNext
  id: TryReadNext
  parent: EventStore.Core.TransactionLog.ITransactionFileReader
  langs:
  - csharp
  - vb
  name: TryReadNext()
  nameWithType: ITransactionFileReader.TryReadNext()
  fullName: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadNext()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/ITransactionFileReader.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TryReadNext
    path: ../EventStore/src/EventStore.Core/TransactionLog/ITransactionFileReader.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: SeqReadResult TryReadNext()
    return:
      type: EventStore.Core.TransactionLog.SeqReadResult
    content.vb: Function TryReadNext As SeqReadResult
  overload: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadNext*
- uid: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadPrev
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileReader.TryReadPrev
  id: TryReadPrev
  parent: EventStore.Core.TransactionLog.ITransactionFileReader
  langs:
  - csharp
  - vb
  name: TryReadPrev()
  nameWithType: ITransactionFileReader.TryReadPrev()
  fullName: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadPrev()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/ITransactionFileReader.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TryReadPrev
    path: ../EventStore/src/EventStore.Core/TransactionLog/ITransactionFileReader.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: SeqReadResult TryReadPrev()
    return:
      type: EventStore.Core.TransactionLog.SeqReadResult
    content.vb: Function TryReadPrev As SeqReadResult
  overload: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadPrev*
- uid: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadAt(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileReader.TryReadAt(System.Int64)
  id: TryReadAt(System.Int64)
  parent: EventStore.Core.TransactionLog.ITransactionFileReader
  langs:
  - csharp
  - vb
  name: TryReadAt(Int64)
  nameWithType: ITransactionFileReader.TryReadAt(Int64)
  fullName: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadAt(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/ITransactionFileReader.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TryReadAt
    path: ../EventStore/src/EventStore.Core/TransactionLog/ITransactionFileReader.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: RecordReadResult TryReadAt(long position)
    parameters:
    - id: position
      type: System.Int64
    return:
      type: EventStore.Core.TransactionLog.RecordReadResult
    content.vb: Function TryReadAt(position As Long) As RecordReadResult
  overload: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadAt*
- uid: EventStore.Core.TransactionLog.ITransactionFileReader.ExistsAt(System.Int64)
  commentId: M:EventStore.Core.TransactionLog.ITransactionFileReader.ExistsAt(System.Int64)
  id: ExistsAt(System.Int64)
  parent: EventStore.Core.TransactionLog.ITransactionFileReader
  langs:
  - csharp
  - vb
  name: ExistsAt(Int64)
  nameWithType: ITransactionFileReader.ExistsAt(Int64)
  fullName: EventStore.Core.TransactionLog.ITransactionFileReader.ExistsAt(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/TransactionLog/ITransactionFileReader.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExistsAt
    path: ../EventStore/src/EventStore.Core/TransactionLog/ITransactionFileReader.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.TransactionLog
  syntax:
    content: bool ExistsAt(long position)
    parameters:
    - id: position
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Function ExistsAt(position As Long) As Boolean
  overload: EventStore.Core.TransactionLog.ITransactionFileReader.ExistsAt*
references:
- uid: EventStore.Core.TransactionLog
  commentId: N:EventStore.Core.TransactionLog
  isExternal: false
  name: EventStore.Core.TransactionLog
  nameWithType: EventStore.Core.TransactionLog
  fullName: EventStore.Core.TransactionLog
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.ITransactionFileReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ITransactionFileReader>()
  nameWithType: ProtobufExtensions.Serialize<ITransactionFileReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.ITransactionFileReader>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ITransactionFileReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.ITransactionFileReader)()
  name.vb: Serialize(Of ITransactionFileReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ITransactionFileReader>
    nameWithType: ProtobufExtensions.Serialize<ITransactionFileReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.TransactionLog.ITransactionFileReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ITransactionFileReader)
    nameWithType: ProtobufExtensions.Serialize(Of ITransactionFileReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.TransactionLog.ITransactionFileReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.ITransactionFileReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ITransactionFileReader>()
  nameWithType: ProtobufExtensions.SerializeToArray<ITransactionFileReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.ITransactionFileReader>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ITransactionFileReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.ITransactionFileReader)()
  name.vb: SerializeToArray(Of ITransactionFileReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ITransactionFileReader>
    nameWithType: ProtobufExtensions.SerializeToArray<ITransactionFileReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.TransactionLog.ITransactionFileReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ITransactionFileReader)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ITransactionFileReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.TransactionLog.ITransactionFileReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.TransactionLog.ITransactionFileReader.Reposition*
  commentId: Overload:EventStore.Core.TransactionLog.ITransactionFileReader.Reposition
  isExternal: false
  name: Reposition
  nameWithType: ITransactionFileReader.Reposition
  fullName: EventStore.Core.TransactionLog.ITransactionFileReader.Reposition
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadNext*
  commentId: Overload:EventStore.Core.TransactionLog.ITransactionFileReader.TryReadNext
  isExternal: false
  name: TryReadNext
  nameWithType: ITransactionFileReader.TryReadNext
  fullName: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadNext
- uid: EventStore.Core.TransactionLog.SeqReadResult
  commentId: T:EventStore.Core.TransactionLog.SeqReadResult
  parent: EventStore.Core.TransactionLog
  isExternal: false
  name: SeqReadResult
  nameWithType: SeqReadResult
  fullName: EventStore.Core.TransactionLog.SeqReadResult
- uid: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadPrev*
  commentId: Overload:EventStore.Core.TransactionLog.ITransactionFileReader.TryReadPrev
  isExternal: false
  name: TryReadPrev
  nameWithType: ITransactionFileReader.TryReadPrev
  fullName: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadPrev
- uid: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadAt*
  commentId: Overload:EventStore.Core.TransactionLog.ITransactionFileReader.TryReadAt
  isExternal: false
  name: TryReadAt
  nameWithType: ITransactionFileReader.TryReadAt
  fullName: EventStore.Core.TransactionLog.ITransactionFileReader.TryReadAt
- uid: EventStore.Core.TransactionLog.RecordReadResult
  commentId: T:EventStore.Core.TransactionLog.RecordReadResult
  parent: EventStore.Core.TransactionLog
  isExternal: false
  name: RecordReadResult
  nameWithType: RecordReadResult
  fullName: EventStore.Core.TransactionLog.RecordReadResult
- uid: EventStore.Core.TransactionLog.ITransactionFileReader.ExistsAt*
  commentId: Overload:EventStore.Core.TransactionLog.ITransactionFileReader.ExistsAt
  isExternal: false
  name: ExistsAt
  nameWithType: ITransactionFileReader.ExistsAt
  fullName: EventStore.Core.TransactionLog.ITransactionFileReader.ExistsAt
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean

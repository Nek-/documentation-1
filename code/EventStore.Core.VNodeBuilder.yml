### YamlMime:ManagedReference
items:
- uid: EventStore.Core.VNodeBuilder
  commentId: T:EventStore.Core.VNodeBuilder
  id: VNodeBuilder
  parent: EventStore.Core
  children:
  - EventStore.Core.VNodeBuilder.#ctor
  - EventStore.Core.VNodeBuilder._addInterfacePrefixes
  - EventStore.Core.VNodeBuilder._adminOnPublic
  - EventStore.Core.VNodeBuilder._alwaysKeepScavenged
  - EventStore.Core.VNodeBuilder._authenticationProviderFactory
  - EventStore.Core.VNodeBuilder._betterOrdering
  - EventStore.Core.VNodeBuilder._cachedChunks
  - EventStore.Core.VNodeBuilder._certificate
  - EventStore.Core.VNodeBuilder._chunkInitialReaderCount
  - EventStore.Core.VNodeBuilder._chunksCacheSize
  - EventStore.Core.VNodeBuilder._chunkSize
  - EventStore.Core.VNodeBuilder._clusterDns
  - EventStore.Core.VNodeBuilder._clusterGossipPort
  - EventStore.Core.VNodeBuilder._clusterNodeCount
  - EventStore.Core.VNodeBuilder._commitAckCount
  - EventStore.Core.VNodeBuilder._commitTimeout
  - EventStore.Core.VNodeBuilder._connectionPendingSendBytesThreshold
  - EventStore.Core.VNodeBuilder._db
  - EventStore.Core.VNodeBuilder._dbConfig
  - EventStore.Core.VNodeBuilder._dbPath
  - EventStore.Core.VNodeBuilder._disableHTTPCaching
  - EventStore.Core.VNodeBuilder._disableInsecureTCP
  - EventStore.Core.VNodeBuilder._disableScavengeMerging
  - EventStore.Core.VNodeBuilder._discoverViaDns
  - EventStore.Core.VNodeBuilder._enableHistograms
  - EventStore.Core.VNodeBuilder._enableTrustedAuth
  - EventStore.Core.VNodeBuilder._externalHttp
  - EventStore.Core.VNodeBuilder._externalSecureTcp
  - EventStore.Core.VNodeBuilder._externalTcp
  - EventStore.Core.VNodeBuilder._extHttpPrefixes
  - EventStore.Core.VNodeBuilder._extTcpHeartbeatInterval
  - EventStore.Core.VNodeBuilder._extTcpHeartbeatTimeout
  - EventStore.Core.VNodeBuilder._gossipAdvertiseInfo
  - EventStore.Core.VNodeBuilder._gossipAllowedTimeDifference
  - EventStore.Core.VNodeBuilder._gossipInterval
  - EventStore.Core.VNodeBuilder._gossipOnPublic
  - EventStore.Core.VNodeBuilder._gossipSeeds
  - EventStore.Core.VNodeBuilder._gossipTimeout
  - EventStore.Core.VNodeBuilder._hashCollisionReadLimit
  - EventStore.Core.VNodeBuilder._index
  - EventStore.Core.VNodeBuilder._indexBitnessVersion
  - EventStore.Core.VNodeBuilder._indexCacheDepth
  - EventStore.Core.VNodeBuilder._inMemoryDb
  - EventStore.Core.VNodeBuilder._internalHttp
  - EventStore.Core.VNodeBuilder._internalSecureTcp
  - EventStore.Core.VNodeBuilder._internalTcp
  - EventStore.Core.VNodeBuilder._intHttpPrefixes
  - EventStore.Core.VNodeBuilder._intTcpHeartbeatInterval
  - EventStore.Core.VNodeBuilder._intTcpHeartbeatTimeout
  - EventStore.Core.VNodeBuilder._log
  - EventStore.Core.VNodeBuilder._logHttpRequests
  - EventStore.Core.VNodeBuilder._maxMemtableSize
  - EventStore.Core.VNodeBuilder._minFlushDelay
  - EventStore.Core.VNodeBuilder._nodePriority
  - EventStore.Core.VNodeBuilder._prepareAckCount
  - EventStore.Core.VNodeBuilder._prepareTimeout
  - EventStore.Core.VNodeBuilder._projectionsQueryExpiry
  - EventStore.Core.VNodeBuilder._projectionsThreads
  - EventStore.Core.VNodeBuilder._projectionType
  - EventStore.Core.VNodeBuilder._readerThreadsCount
  - EventStore.Core.VNodeBuilder._scavengeHistoryMaxAge
  - EventStore.Core.VNodeBuilder._skipIndexScanOnReads
  - EventStore.Core.VNodeBuilder._skipIndexVerify
  - EventStore.Core.VNodeBuilder._skipVerifyDbHashes
  - EventStore.Core.VNodeBuilder._sslTargetHost
  - EventStore.Core.VNodeBuilder._sslValidateServer
  - EventStore.Core.VNodeBuilder._startStandardProjections
  - EventStore.Core.VNodeBuilder._statsOnPublic
  - EventStore.Core.VNodeBuilder._statsPeriod
  - EventStore.Core.VNodeBuilder._statsStorage
  - EventStore.Core.VNodeBuilder._subsystems
  - EventStore.Core.VNodeBuilder._unbuffered
  - EventStore.Core.VNodeBuilder._unsafeDisableFlushToDisk
  - EventStore.Core.VNodeBuilder._unsafeIgnoreHardDelete
  - EventStore.Core.VNodeBuilder._useSsl
  - EventStore.Core.VNodeBuilder._vNodeSettings
  - EventStore.Core.VNodeBuilder._workerThreads
  - EventStore.Core.VNodeBuilder._writethrough
  - EventStore.Core.VNodeBuilder.AddCustomSubsystem(EventStore.Core.ISubsystem)
  - EventStore.Core.VNodeBuilder.AddExternalHttpPrefix(System.String)
  - EventStore.Core.VNodeBuilder.AddInternalHttpPrefix(System.String)
  - EventStore.Core.VNodeBuilder.AdvertiseExternalHttpPortAs(System.Int32)
  - EventStore.Core.VNodeBuilder.AdvertiseExternalIPAs(IPAddress)
  - EventStore.Core.VNodeBuilder.AdvertiseExternalSecureTCPPortAs(System.Int32)
  - EventStore.Core.VNodeBuilder.AdvertiseExternalTCPPortAs(System.Int32)
  - EventStore.Core.VNodeBuilder.AdvertiseInternalHttpPortAs(System.Int32)
  - EventStore.Core.VNodeBuilder.AdvertiseInternalIPAs(IPAddress)
  - EventStore.Core.VNodeBuilder.AdvertiseInternalSecureTCPPortAs(System.Int32)
  - EventStore.Core.VNodeBuilder.AdvertiseInternalTCPPortAs(System.Int32)
  - EventStore.Core.VNodeBuilder.AlwaysKeepScavenged
  - EventStore.Core.VNodeBuilder.Build(EventStore.Common.Options.IOptions,EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory[])
  - EventStore.Core.VNodeBuilder.DisableDnsDiscovery
  - EventStore.Core.VNodeBuilder.DisableHTTPCaching
  - EventStore.Core.VNodeBuilder.DisableInsecureTCP
  - EventStore.Core.VNodeBuilder.DisableScavengeMerging
  - EventStore.Core.VNodeBuilder.DoNotVerifyDbHashes
  - EventStore.Core.VNodeBuilder.DontAddInterfacePrefixes
  - EventStore.Core.VNodeBuilder.EnableHistograms
  - EventStore.Core.VNodeBuilder.EnableLoggingOfHttpRequests
  - EventStore.Core.VNodeBuilder.EnableSsl
  - EventStore.Core.VNodeBuilder.EnableTrustedAuth
  - EventStore.Core.VNodeBuilder.EnableUnbuffered
  - EventStore.Core.VNodeBuilder.EnableWriteThrough
  - EventStore.Core.VNodeBuilder.GossipAsSingleNode
  - EventStore.Core.VNodeBuilder.HavingReaderThreads(System.Int32)
  - EventStore.Core.VNodeBuilder.MaximumMemoryTableSizeOf(System.Int32)
  - EventStore.Core.VNodeBuilder.NoAdminOnPublicInterface
  - EventStore.Core.VNodeBuilder.NoGossipOnPublicInterface
  - EventStore.Core.VNodeBuilder.NoStatsOnPublicInterface
  - EventStore.Core.VNodeBuilder.OnDefaultEndpoints
  - EventStore.Core.VNodeBuilder.op_Implicit(EventStore.Core.VNodeBuilder)~EventStore.Core.ClusterVNode
  - EventStore.Core.VNodeBuilder.RunInMemory
  - EventStore.Core.VNodeBuilder.RunOnDisk(System.String)
  - EventStore.Core.VNodeBuilder.RunProjections(EventStore.ClientAPI.Embedded.ProjectionsMode,System.Int32)
  - EventStore.Core.VNodeBuilder.RunProjections(EventStore.Common.Options.ProjectionType,System.Int32)
  - EventStore.Core.VNodeBuilder.SetUpProjectionsIfNeeded
  - EventStore.Core.VNodeBuilder.SkipIndexScanOnReads
  - EventStore.Core.VNodeBuilder.StartStandardProjections
  - EventStore.Core.VNodeBuilder.ValidateSslServer
  - EventStore.Core.VNodeBuilder.VerifyDbHashes
  - EventStore.Core.VNodeBuilder.WithAuthenticationProvider(EventStore.Core.Authentication.IAuthenticationProviderFactory)
  - EventStore.Core.VNodeBuilder.WithBetterOrdering
  - EventStore.Core.VNodeBuilder.WithChunkInitialReaderCount(System.Int32)
  - EventStore.Core.VNodeBuilder.WithClusterDnsName(System.String)
  - EventStore.Core.VNodeBuilder.WithClusterGossipPort(System.Int32)
  - EventStore.Core.VNodeBuilder.WithClusterNodeSettings(System.Int32)
  - EventStore.Core.VNodeBuilder.WithCommitCount(System.Int32)
  - EventStore.Core.VNodeBuilder.WithCommitTimeout(TimeSpan)
  - EventStore.Core.VNodeBuilder.WithConnectionPendingSendBytesThreshold(System.Int32)
  - EventStore.Core.VNodeBuilder.WithExternalHeartbeatInterval(TimeSpan)
  - EventStore.Core.VNodeBuilder.WithExternalHeartbeatTimeout(TimeSpan)
  - EventStore.Core.VNodeBuilder.WithExternalHttpOn(IPEndPoint)
  - EventStore.Core.VNodeBuilder.WithExternalSecureTcpOn(IPEndPoint)
  - EventStore.Core.VNodeBuilder.WithExternalTcpOn(IPEndPoint)
  - EventStore.Core.VNodeBuilder.WithGossipAllowedTimeDifference(TimeSpan)
  - EventStore.Core.VNodeBuilder.WithGossipInterval(TimeSpan)
  - EventStore.Core.VNodeBuilder.WithGossipSeeds(IPEndPoint[])
  - EventStore.Core.VNodeBuilder.WithGossipTimeout(TimeSpan)
  - EventStore.Core.VNodeBuilder.WithHashCollisionReadLimitOf(System.Int32)
  - EventStore.Core.VNodeBuilder.WithIndexBitnessVersion(System.Byte)
  - EventStore.Core.VNodeBuilder.WithIndexCacheDepth(System.Int32)
  - EventStore.Core.VNodeBuilder.WithIndexPath(System.String)
  - EventStore.Core.VNodeBuilder.WithIndexVerification(System.Boolean)
  - EventStore.Core.VNodeBuilder.WithInternalHeartbeatInterval(TimeSpan)
  - EventStore.Core.VNodeBuilder.WithInternalHeartbeatTimeout(TimeSpan)
  - EventStore.Core.VNodeBuilder.WithInternalHttpOn(IPEndPoint)
  - EventStore.Core.VNodeBuilder.WithInternalSecureTcpOn(IPEndPoint)
  - EventStore.Core.VNodeBuilder.WithInternalTcpOn(IPEndPoint)
  - EventStore.Core.VNodeBuilder.WithMinFlushDelay(TimeSpan)
  - EventStore.Core.VNodeBuilder.WithNodePriority(System.Int32)
  - EventStore.Core.VNodeBuilder.WithPrepareCount(System.Int32)
  - EventStore.Core.VNodeBuilder.WithPrepareTimeout(TimeSpan)
  - EventStore.Core.VNodeBuilder.WithProjectionQueryExpirationOf(TimeSpan)
  - EventStore.Core.VNodeBuilder.WithScavengeHistoryMaxAge(System.Int32)
  - EventStore.Core.VNodeBuilder.WithServerCertificate(X509Certificate2)
  - EventStore.Core.VNodeBuilder.WithServerCertificateFromFile(System.String,System.String)
  - EventStore.Core.VNodeBuilder.WithServerCertificateFromStore(StoreLocation,StoreName,System.String,System.String)
  - EventStore.Core.VNodeBuilder.WithServerCertificateFromStore(StoreName,System.String,System.String)
  - EventStore.Core.VNodeBuilder.WithSingleNodeSettings
  - EventStore.Core.VNodeBuilder.WithSslTargetHost(System.String)
  - EventStore.Core.VNodeBuilder.WithStatsPeriod(TimeSpan)
  - EventStore.Core.VNodeBuilder.WithStatsStorage(EventStore.Core.Services.Monitoring.StatsStorage)
  - EventStore.Core.VNodeBuilder.WithTfCachedChunks(System.Int32)
  - EventStore.Core.VNodeBuilder.WithTfChunksCacheSize(System.Int64)
  - EventStore.Core.VNodeBuilder.WithTfChunkSize(System.Int32)
  - EventStore.Core.VNodeBuilder.WithUnsafeDisableFlushToDisk
  - EventStore.Core.VNodeBuilder.WithUnsafeIgnoreHardDelete
  - EventStore.Core.VNodeBuilder.WithWorkerThreads(System.Int32)
  langs:
  - csharp
  - vb
  name: VNodeBuilder
  nameWithType: VNodeBuilder
  fullName: EventStore.Core.VNodeBuilder
  type: Class
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: VNodeBuilder
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 27
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nAllows a client to build a <xref href=\"EventStore.Core.ClusterVNode\" data-throw-if-not-resolved=\"false\"></xref> for use with the Embedded client API by specifying\nhigh level options rather than using the constructor of <xref href=\"EventStore.Core.ClusterVNode\" data-throw-if-not-resolved=\"false\"></xref> directly.\n"
  example: []
  syntax:
    content: 'public abstract class VNodeBuilder : object'
    content.vb: >-
      Public MustInherit Class VNodeBuilder

          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - EventStore.ClientAPI.Embedded.EmbeddedVNodeBuilder
  - EventStore.ClusterNode.ClusterVNodeBuilder
  - EventStore.Core.Tests.Common.VNodeBuilderTests.TestVNodeBuilder
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Core.VNodeBuilder.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.VNodeBuilder.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Core.VNodeBuilder._log
  commentId: F:EventStore.Core.VNodeBuilder._log
  id: _log
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _log
  nameWithType: VNodeBuilder._log
  fullName: EventStore.Core.VNodeBuilder._log
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _log
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 30
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected ILogger _log
    return:
      type: EventStore.Common.Log.ILogger
    content.vb: Protected _log As ILogger
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._chunkSize
  commentId: F:EventStore.Core.VNodeBuilder._chunkSize
  id: _chunkSize
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _chunkSize
  nameWithType: VNodeBuilder._chunkSize
  fullName: EventStore.Core.VNodeBuilder._chunkSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _chunkSize
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 32
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected int _chunkSize
    return:
      type: System.Int32
    content.vb: Protected _chunkSize As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._dbPath
  commentId: F:EventStore.Core.VNodeBuilder._dbPath
  id: _dbPath
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _dbPath
  nameWithType: VNodeBuilder._dbPath
  fullName: EventStore.Core.VNodeBuilder._dbPath
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _dbPath
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 33
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected string _dbPath
    return:
      type: System.String
    content.vb: Protected _dbPath As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._chunksCacheSize
  commentId: F:EventStore.Core.VNodeBuilder._chunksCacheSize
  id: _chunksCacheSize
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _chunksCacheSize
  nameWithType: VNodeBuilder._chunksCacheSize
  fullName: EventStore.Core.VNodeBuilder._chunksCacheSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _chunksCacheSize
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 34
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected long _chunksCacheSize
    return:
      type: System.Int64
    content.vb: Protected _chunksCacheSize As Long
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._cachedChunks
  commentId: F:EventStore.Core.VNodeBuilder._cachedChunks
  id: _cachedChunks
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _cachedChunks
  nameWithType: VNodeBuilder._cachedChunks
  fullName: EventStore.Core.VNodeBuilder._cachedChunks
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _cachedChunks
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 35
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected int _cachedChunks
    return:
      type: System.Int32
    content.vb: Protected _cachedChunks As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._inMemoryDb
  commentId: F:EventStore.Core.VNodeBuilder._inMemoryDb
  id: _inMemoryDb
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _inMemoryDb
  nameWithType: VNodeBuilder._inMemoryDb
  fullName: EventStore.Core.VNodeBuilder._inMemoryDb
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _inMemoryDb
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 36
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _inMemoryDb
    return:
      type: System.Boolean
    content.vb: Protected _inMemoryDb As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._startStandardProjections
  commentId: F:EventStore.Core.VNodeBuilder._startStandardProjections
  id: _startStandardProjections
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _startStandardProjections
  nameWithType: VNodeBuilder._startStandardProjections
  fullName: EventStore.Core.VNodeBuilder._startStandardProjections
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _startStandardProjections
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 37
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _startStandardProjections
    return:
      type: System.Boolean
    content.vb: Protected _startStandardProjections As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._disableHTTPCaching
  commentId: F:EventStore.Core.VNodeBuilder._disableHTTPCaching
  id: _disableHTTPCaching
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _disableHTTPCaching
  nameWithType: VNodeBuilder._disableHTTPCaching
  fullName: EventStore.Core.VNodeBuilder._disableHTTPCaching
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _disableHTTPCaching
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 38
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _disableHTTPCaching
    return:
      type: System.Boolean
    content.vb: Protected _disableHTTPCaching As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._logHttpRequests
  commentId: F:EventStore.Core.VNodeBuilder._logHttpRequests
  id: _logHttpRequests
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _logHttpRequests
  nameWithType: VNodeBuilder._logHttpRequests
  fullName: EventStore.Core.VNodeBuilder._logHttpRequests
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _logHttpRequests
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 39
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _logHttpRequests
    return:
      type: System.Boolean
    content.vb: Protected _logHttpRequests As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._enableHistograms
  commentId: F:EventStore.Core.VNodeBuilder._enableHistograms
  id: _enableHistograms
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _enableHistograms
  nameWithType: VNodeBuilder._enableHistograms
  fullName: EventStore.Core.VNodeBuilder._enableHistograms
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _enableHistograms
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 40
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _enableHistograms
    return:
      type: System.Boolean
    content.vb: Protected _enableHistograms As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._internalTcp
  commentId: F:EventStore.Core.VNodeBuilder._internalTcp
  id: _internalTcp
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _internalTcp
  nameWithType: VNodeBuilder._internalTcp
  fullName: EventStore.Core.VNodeBuilder._internalTcp
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _internalTcp
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 42
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected IPEndPoint _internalTcp
    return:
      type: IPEndPoint
    content.vb: Protected _internalTcp As IPEndPoint
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._internalSecureTcp
  commentId: F:EventStore.Core.VNodeBuilder._internalSecureTcp
  id: _internalSecureTcp
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _internalSecureTcp
  nameWithType: VNodeBuilder._internalSecureTcp
  fullName: EventStore.Core.VNodeBuilder._internalSecureTcp
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _internalSecureTcp
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 43
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected IPEndPoint _internalSecureTcp
    return:
      type: IPEndPoint
    content.vb: Protected _internalSecureTcp As IPEndPoint
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._externalTcp
  commentId: F:EventStore.Core.VNodeBuilder._externalTcp
  id: _externalTcp
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _externalTcp
  nameWithType: VNodeBuilder._externalTcp
  fullName: EventStore.Core.VNodeBuilder._externalTcp
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _externalTcp
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 44
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected IPEndPoint _externalTcp
    return:
      type: IPEndPoint
    content.vb: Protected _externalTcp As IPEndPoint
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._externalSecureTcp
  commentId: F:EventStore.Core.VNodeBuilder._externalSecureTcp
  id: _externalSecureTcp
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _externalSecureTcp
  nameWithType: VNodeBuilder._externalSecureTcp
  fullName: EventStore.Core.VNodeBuilder._externalSecureTcp
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _externalSecureTcp
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 45
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected IPEndPoint _externalSecureTcp
    return:
      type: IPEndPoint
    content.vb: Protected _externalSecureTcp As IPEndPoint
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._internalHttp
  commentId: F:EventStore.Core.VNodeBuilder._internalHttp
  id: _internalHttp
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _internalHttp
  nameWithType: VNodeBuilder._internalHttp
  fullName: EventStore.Core.VNodeBuilder._internalHttp
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _internalHttp
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 46
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected IPEndPoint _internalHttp
    return:
      type: IPEndPoint
    content.vb: Protected _internalHttp As IPEndPoint
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._externalHttp
  commentId: F:EventStore.Core.VNodeBuilder._externalHttp
  id: _externalHttp
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _externalHttp
  nameWithType: VNodeBuilder._externalHttp
  fullName: EventStore.Core.VNodeBuilder._externalHttp
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _externalHttp
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 47
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected IPEndPoint _externalHttp
    return:
      type: IPEndPoint
    content.vb: Protected _externalHttp As IPEndPoint
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._intHttpPrefixes
  commentId: F:EventStore.Core.VNodeBuilder._intHttpPrefixes
  id: _intHttpPrefixes
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _intHttpPrefixes
  nameWithType: VNodeBuilder._intHttpPrefixes
  fullName: EventStore.Core.VNodeBuilder._intHttpPrefixes
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _intHttpPrefixes
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 49
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected List<string> _intHttpPrefixes
    return:
      type: List{System.String}
    content.vb: Protected _intHttpPrefixes As List(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._extHttpPrefixes
  commentId: F:EventStore.Core.VNodeBuilder._extHttpPrefixes
  id: _extHttpPrefixes
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _extHttpPrefixes
  nameWithType: VNodeBuilder._extHttpPrefixes
  fullName: EventStore.Core.VNodeBuilder._extHttpPrefixes
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _extHttpPrefixes
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 50
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected List<string> _extHttpPrefixes
    return:
      type: List{System.String}
    content.vb: Protected _extHttpPrefixes As List(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._addInterfacePrefixes
  commentId: F:EventStore.Core.VNodeBuilder._addInterfacePrefixes
  id: _addInterfacePrefixes
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _addInterfacePrefixes
  nameWithType: VNodeBuilder._addInterfacePrefixes
  fullName: EventStore.Core.VNodeBuilder._addInterfacePrefixes
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _addInterfacePrefixes
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 51
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _addInterfacePrefixes
    return:
      type: System.Boolean
    content.vb: Protected _addInterfacePrefixes As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._enableTrustedAuth
  commentId: F:EventStore.Core.VNodeBuilder._enableTrustedAuth
  id: _enableTrustedAuth
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _enableTrustedAuth
  nameWithType: VNodeBuilder._enableTrustedAuth
  fullName: EventStore.Core.VNodeBuilder._enableTrustedAuth
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _enableTrustedAuth
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 52
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _enableTrustedAuth
    return:
      type: System.Boolean
    content.vb: Protected _enableTrustedAuth As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._certificate
  commentId: F:EventStore.Core.VNodeBuilder._certificate
  id: _certificate
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _certificate
  nameWithType: VNodeBuilder._certificate
  fullName: EventStore.Core.VNodeBuilder._certificate
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _certificate
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 53
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected X509Certificate2 _certificate
    return:
      type: X509Certificate2
    content.vb: Protected _certificate As X509Certificate2
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._workerThreads
  commentId: F:EventStore.Core.VNodeBuilder._workerThreads
  id: _workerThreads
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _workerThreads
  nameWithType: VNodeBuilder._workerThreads
  fullName: EventStore.Core.VNodeBuilder._workerThreads
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _workerThreads
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 54
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected int _workerThreads
    return:
      type: System.Int32
    content.vb: Protected _workerThreads As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._discoverViaDns
  commentId: F:EventStore.Core.VNodeBuilder._discoverViaDns
  id: _discoverViaDns
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _discoverViaDns
  nameWithType: VNodeBuilder._discoverViaDns
  fullName: EventStore.Core.VNodeBuilder._discoverViaDns
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _discoverViaDns
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 56
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _discoverViaDns
    return:
      type: System.Boolean
    content.vb: Protected _discoverViaDns As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._clusterDns
  commentId: F:EventStore.Core.VNodeBuilder._clusterDns
  id: _clusterDns
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _clusterDns
  nameWithType: VNodeBuilder._clusterDns
  fullName: EventStore.Core.VNodeBuilder._clusterDns
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _clusterDns
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 57
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected string _clusterDns
    return:
      type: System.String
    content.vb: Protected _clusterDns As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._gossipSeeds
  commentId: F:EventStore.Core.VNodeBuilder._gossipSeeds
  id: _gossipSeeds
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _gossipSeeds
  nameWithType: VNodeBuilder._gossipSeeds
  fullName: EventStore.Core.VNodeBuilder._gossipSeeds
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _gossipSeeds
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 58
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected List<IPEndPoint> _gossipSeeds
    return:
      type: List{IPEndPoint}
    content.vb: Protected _gossipSeeds As List(Of IPEndPoint)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._minFlushDelay
  commentId: F:EventStore.Core.VNodeBuilder._minFlushDelay
  id: _minFlushDelay
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _minFlushDelay
  nameWithType: VNodeBuilder._minFlushDelay
  fullName: EventStore.Core.VNodeBuilder._minFlushDelay
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _minFlushDelay
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 60
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected TimeSpan _minFlushDelay
    return:
      type: TimeSpan
    content.vb: Protected _minFlushDelay As TimeSpan
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._clusterNodeCount
  commentId: F:EventStore.Core.VNodeBuilder._clusterNodeCount
  id: _clusterNodeCount
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _clusterNodeCount
  nameWithType: VNodeBuilder._clusterNodeCount
  fullName: EventStore.Core.VNodeBuilder._clusterNodeCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _clusterNodeCount
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 62
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected int _clusterNodeCount
    return:
      type: System.Int32
    content.vb: Protected _clusterNodeCount As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._prepareAckCount
  commentId: F:EventStore.Core.VNodeBuilder._prepareAckCount
  id: _prepareAckCount
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _prepareAckCount
  nameWithType: VNodeBuilder._prepareAckCount
  fullName: EventStore.Core.VNodeBuilder._prepareAckCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _prepareAckCount
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 63
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected int _prepareAckCount
    return:
      type: System.Int32
    content.vb: Protected _prepareAckCount As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._commitAckCount
  commentId: F:EventStore.Core.VNodeBuilder._commitAckCount
  id: _commitAckCount
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _commitAckCount
  nameWithType: VNodeBuilder._commitAckCount
  fullName: EventStore.Core.VNodeBuilder._commitAckCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _commitAckCount
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 64
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected int _commitAckCount
    return:
      type: System.Int32
    content.vb: Protected _commitAckCount As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._prepareTimeout
  commentId: F:EventStore.Core.VNodeBuilder._prepareTimeout
  id: _prepareTimeout
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _prepareTimeout
  nameWithType: VNodeBuilder._prepareTimeout
  fullName: EventStore.Core.VNodeBuilder._prepareTimeout
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _prepareTimeout
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 65
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected TimeSpan _prepareTimeout
    return:
      type: TimeSpan
    content.vb: Protected _prepareTimeout As TimeSpan
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._commitTimeout
  commentId: F:EventStore.Core.VNodeBuilder._commitTimeout
  id: _commitTimeout
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _commitTimeout
  nameWithType: VNodeBuilder._commitTimeout
  fullName: EventStore.Core.VNodeBuilder._commitTimeout
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _commitTimeout
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 66
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected TimeSpan _commitTimeout
    return:
      type: TimeSpan
    content.vb: Protected _commitTimeout As TimeSpan
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._nodePriority
  commentId: F:EventStore.Core.VNodeBuilder._nodePriority
  id: _nodePriority
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _nodePriority
  nameWithType: VNodeBuilder._nodePriority
  fullName: EventStore.Core.VNodeBuilder._nodePriority
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _nodePriority
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 68
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected int _nodePriority
    return:
      type: System.Int32
    content.vb: Protected _nodePriority As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._useSsl
  commentId: F:EventStore.Core.VNodeBuilder._useSsl
  id: _useSsl
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _useSsl
  nameWithType: VNodeBuilder._useSsl
  fullName: EventStore.Core.VNodeBuilder._useSsl
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _useSsl
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 70
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _useSsl
    return:
      type: System.Boolean
    content.vb: Protected _useSsl As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._disableInsecureTCP
  commentId: F:EventStore.Core.VNodeBuilder._disableInsecureTCP
  id: _disableInsecureTCP
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _disableInsecureTCP
  nameWithType: VNodeBuilder._disableInsecureTCP
  fullName: EventStore.Core.VNodeBuilder._disableInsecureTCP
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _disableInsecureTCP
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 71
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _disableInsecureTCP
    return:
      type: System.Boolean
    content.vb: Protected _disableInsecureTCP As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._sslTargetHost
  commentId: F:EventStore.Core.VNodeBuilder._sslTargetHost
  id: _sslTargetHost
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _sslTargetHost
  nameWithType: VNodeBuilder._sslTargetHost
  fullName: EventStore.Core.VNodeBuilder._sslTargetHost
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _sslTargetHost
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 72
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected string _sslTargetHost
    return:
      type: System.String
    content.vb: Protected _sslTargetHost As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._sslValidateServer
  commentId: F:EventStore.Core.VNodeBuilder._sslValidateServer
  id: _sslValidateServer
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _sslValidateServer
  nameWithType: VNodeBuilder._sslValidateServer
  fullName: EventStore.Core.VNodeBuilder._sslValidateServer
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _sslValidateServer
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 73
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _sslValidateServer
    return:
      type: System.Boolean
    content.vb: Protected _sslValidateServer As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._statsPeriod
  commentId: F:EventStore.Core.VNodeBuilder._statsPeriod
  id: _statsPeriod
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _statsPeriod
  nameWithType: VNodeBuilder._statsPeriod
  fullName: EventStore.Core.VNodeBuilder._statsPeriod
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _statsPeriod
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 75
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected TimeSpan _statsPeriod
    return:
      type: TimeSpan
    content.vb: Protected _statsPeriod As TimeSpan
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._statsStorage
  commentId: F:EventStore.Core.VNodeBuilder._statsStorage
  id: _statsStorage
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _statsStorage
  nameWithType: VNodeBuilder._statsStorage
  fullName: EventStore.Core.VNodeBuilder._statsStorage
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _statsStorage
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 76
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected StatsStorage _statsStorage
    return:
      type: EventStore.Core.Services.Monitoring.StatsStorage
    content.vb: Protected _statsStorage As StatsStorage
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._authenticationProviderFactory
  commentId: F:EventStore.Core.VNodeBuilder._authenticationProviderFactory
  id: _authenticationProviderFactory
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _authenticationProviderFactory
  nameWithType: VNodeBuilder._authenticationProviderFactory
  fullName: EventStore.Core.VNodeBuilder._authenticationProviderFactory
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _authenticationProviderFactory
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 78
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected IAuthenticationProviderFactory _authenticationProviderFactory
    return:
      type: EventStore.Core.Authentication.IAuthenticationProviderFactory
    content.vb: Protected _authenticationProviderFactory As IAuthenticationProviderFactory
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._disableScavengeMerging
  commentId: F:EventStore.Core.VNodeBuilder._disableScavengeMerging
  id: _disableScavengeMerging
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _disableScavengeMerging
  nameWithType: VNodeBuilder._disableScavengeMerging
  fullName: EventStore.Core.VNodeBuilder._disableScavengeMerging
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _disableScavengeMerging
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 79
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _disableScavengeMerging
    return:
      type: System.Boolean
    content.vb: Protected _disableScavengeMerging As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._scavengeHistoryMaxAge
  commentId: F:EventStore.Core.VNodeBuilder._scavengeHistoryMaxAge
  id: _scavengeHistoryMaxAge
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _scavengeHistoryMaxAge
  nameWithType: VNodeBuilder._scavengeHistoryMaxAge
  fullName: EventStore.Core.VNodeBuilder._scavengeHistoryMaxAge
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _scavengeHistoryMaxAge
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 80
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected int _scavengeHistoryMaxAge
    return:
      type: System.Int32
    content.vb: Protected _scavengeHistoryMaxAge As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._adminOnPublic
  commentId: F:EventStore.Core.VNodeBuilder._adminOnPublic
  id: _adminOnPublic
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _adminOnPublic
  nameWithType: VNodeBuilder._adminOnPublic
  fullName: EventStore.Core.VNodeBuilder._adminOnPublic
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _adminOnPublic
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 81
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _adminOnPublic
    return:
      type: System.Boolean
    content.vb: Protected _adminOnPublic As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._statsOnPublic
  commentId: F:EventStore.Core.VNodeBuilder._statsOnPublic
  id: _statsOnPublic
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _statsOnPublic
  nameWithType: VNodeBuilder._statsOnPublic
  fullName: EventStore.Core.VNodeBuilder._statsOnPublic
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _statsOnPublic
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 82
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _statsOnPublic
    return:
      type: System.Boolean
    content.vb: Protected _statsOnPublic As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._gossipOnPublic
  commentId: F:EventStore.Core.VNodeBuilder._gossipOnPublic
  id: _gossipOnPublic
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _gossipOnPublic
  nameWithType: VNodeBuilder._gossipOnPublic
  fullName: EventStore.Core.VNodeBuilder._gossipOnPublic
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _gossipOnPublic
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 83
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _gossipOnPublic
    return:
      type: System.Boolean
    content.vb: Protected _gossipOnPublic As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._gossipInterval
  commentId: F:EventStore.Core.VNodeBuilder._gossipInterval
  id: _gossipInterval
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _gossipInterval
  nameWithType: VNodeBuilder._gossipInterval
  fullName: EventStore.Core.VNodeBuilder._gossipInterval
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _gossipInterval
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 84
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected TimeSpan _gossipInterval
    return:
      type: TimeSpan
    content.vb: Protected _gossipInterval As TimeSpan
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._gossipAllowedTimeDifference
  commentId: F:EventStore.Core.VNodeBuilder._gossipAllowedTimeDifference
  id: _gossipAllowedTimeDifference
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _gossipAllowedTimeDifference
  nameWithType: VNodeBuilder._gossipAllowedTimeDifference
  fullName: EventStore.Core.VNodeBuilder._gossipAllowedTimeDifference
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _gossipAllowedTimeDifference
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 85
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected TimeSpan _gossipAllowedTimeDifference
    return:
      type: TimeSpan
    content.vb: Protected _gossipAllowedTimeDifference As TimeSpan
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._gossipTimeout
  commentId: F:EventStore.Core.VNodeBuilder._gossipTimeout
  id: _gossipTimeout
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _gossipTimeout
  nameWithType: VNodeBuilder._gossipTimeout
  fullName: EventStore.Core.VNodeBuilder._gossipTimeout
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _gossipTimeout
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 86
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected TimeSpan _gossipTimeout
    return:
      type: TimeSpan
    content.vb: Protected _gossipTimeout As TimeSpan
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._gossipAdvertiseInfo
  commentId: F:EventStore.Core.VNodeBuilder._gossipAdvertiseInfo
  id: _gossipAdvertiseInfo
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _gossipAdvertiseInfo
  nameWithType: VNodeBuilder._gossipAdvertiseInfo
  fullName: EventStore.Core.VNodeBuilder._gossipAdvertiseInfo
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _gossipAdvertiseInfo
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 87
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected GossipAdvertiseInfo _gossipAdvertiseInfo
    return:
      type: EventStore.Core.Data.GossipAdvertiseInfo
    content.vb: Protected _gossipAdvertiseInfo As GossipAdvertiseInfo
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._intTcpHeartbeatTimeout
  commentId: F:EventStore.Core.VNodeBuilder._intTcpHeartbeatTimeout
  id: _intTcpHeartbeatTimeout
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _intTcpHeartbeatTimeout
  nameWithType: VNodeBuilder._intTcpHeartbeatTimeout
  fullName: EventStore.Core.VNodeBuilder._intTcpHeartbeatTimeout
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _intTcpHeartbeatTimeout
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 89
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected TimeSpan _intTcpHeartbeatTimeout
    return:
      type: TimeSpan
    content.vb: Protected _intTcpHeartbeatTimeout As TimeSpan
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._intTcpHeartbeatInterval
  commentId: F:EventStore.Core.VNodeBuilder._intTcpHeartbeatInterval
  id: _intTcpHeartbeatInterval
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _intTcpHeartbeatInterval
  nameWithType: VNodeBuilder._intTcpHeartbeatInterval
  fullName: EventStore.Core.VNodeBuilder._intTcpHeartbeatInterval
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _intTcpHeartbeatInterval
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 90
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected TimeSpan _intTcpHeartbeatInterval
    return:
      type: TimeSpan
    content.vb: Protected _intTcpHeartbeatInterval As TimeSpan
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._extTcpHeartbeatTimeout
  commentId: F:EventStore.Core.VNodeBuilder._extTcpHeartbeatTimeout
  id: _extTcpHeartbeatTimeout
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _extTcpHeartbeatTimeout
  nameWithType: VNodeBuilder._extTcpHeartbeatTimeout
  fullName: EventStore.Core.VNodeBuilder._extTcpHeartbeatTimeout
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _extTcpHeartbeatTimeout
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 91
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected TimeSpan _extTcpHeartbeatTimeout
    return:
      type: TimeSpan
    content.vb: Protected _extTcpHeartbeatTimeout As TimeSpan
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._extTcpHeartbeatInterval
  commentId: F:EventStore.Core.VNodeBuilder._extTcpHeartbeatInterval
  id: _extTcpHeartbeatInterval
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _extTcpHeartbeatInterval
  nameWithType: VNodeBuilder._extTcpHeartbeatInterval
  fullName: EventStore.Core.VNodeBuilder._extTcpHeartbeatInterval
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _extTcpHeartbeatInterval
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 92
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected TimeSpan _extTcpHeartbeatInterval
    return:
      type: TimeSpan
    content.vb: Protected _extTcpHeartbeatInterval As TimeSpan
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._connectionPendingSendBytesThreshold
  commentId: F:EventStore.Core.VNodeBuilder._connectionPendingSendBytesThreshold
  id: _connectionPendingSendBytesThreshold
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _connectionPendingSendBytesThreshold
  nameWithType: VNodeBuilder._connectionPendingSendBytesThreshold
  fullName: EventStore.Core.VNodeBuilder._connectionPendingSendBytesThreshold
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _connectionPendingSendBytesThreshold
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 93
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected int _connectionPendingSendBytesThreshold
    return:
      type: System.Int32
    content.vb: Protected _connectionPendingSendBytesThreshold As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._skipVerifyDbHashes
  commentId: F:EventStore.Core.VNodeBuilder._skipVerifyDbHashes
  id: _skipVerifyDbHashes
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _skipVerifyDbHashes
  nameWithType: VNodeBuilder._skipVerifyDbHashes
  fullName: EventStore.Core.VNodeBuilder._skipVerifyDbHashes
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _skipVerifyDbHashes
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 95
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _skipVerifyDbHashes
    return:
      type: System.Boolean
    content.vb: Protected _skipVerifyDbHashes As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._maxMemtableSize
  commentId: F:EventStore.Core.VNodeBuilder._maxMemtableSize
  id: _maxMemtableSize
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _maxMemtableSize
  nameWithType: VNodeBuilder._maxMemtableSize
  fullName: EventStore.Core.VNodeBuilder._maxMemtableSize
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _maxMemtableSize
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 96
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected int _maxMemtableSize
    return:
      type: System.Int32
    content.vb: Protected _maxMemtableSize As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._hashCollisionReadLimit
  commentId: F:EventStore.Core.VNodeBuilder._hashCollisionReadLimit
  id: _hashCollisionReadLimit
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _hashCollisionReadLimit
  nameWithType: VNodeBuilder._hashCollisionReadLimit
  fullName: EventStore.Core.VNodeBuilder._hashCollisionReadLimit
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _hashCollisionReadLimit
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 97
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected int _hashCollisionReadLimit
    return:
      type: System.Int32
    content.vb: Protected _hashCollisionReadLimit As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._subsystems
  commentId: F:EventStore.Core.VNodeBuilder._subsystems
  id: _subsystems
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _subsystems
  nameWithType: VNodeBuilder._subsystems
  fullName: EventStore.Core.VNodeBuilder._subsystems
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _subsystems
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 98
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected List<ISubsystem> _subsystems
    return:
      type: List{EventStore.Core.ISubsystem}
    content.vb: Protected _subsystems As List(Of ISubsystem)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._clusterGossipPort
  commentId: F:EventStore.Core.VNodeBuilder._clusterGossipPort
  id: _clusterGossipPort
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _clusterGossipPort
  nameWithType: VNodeBuilder._clusterGossipPort
  fullName: EventStore.Core.VNodeBuilder._clusterGossipPort
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _clusterGossipPort
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 99
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected int _clusterGossipPort
    return:
      type: System.Int32
    content.vb: Protected _clusterGossipPort As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._readerThreadsCount
  commentId: F:EventStore.Core.VNodeBuilder._readerThreadsCount
  id: _readerThreadsCount
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _readerThreadsCount
  nameWithType: VNodeBuilder._readerThreadsCount
  fullName: EventStore.Core.VNodeBuilder._readerThreadsCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _readerThreadsCount
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 100
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected int _readerThreadsCount
    return:
      type: System.Int32
    content.vb: Protected _readerThreadsCount As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._unbuffered
  commentId: F:EventStore.Core.VNodeBuilder._unbuffered
  id: _unbuffered
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _unbuffered
  nameWithType: VNodeBuilder._unbuffered
  fullName: EventStore.Core.VNodeBuilder._unbuffered
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _unbuffered
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 101
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _unbuffered
    return:
      type: System.Boolean
    content.vb: Protected _unbuffered As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._writethrough
  commentId: F:EventStore.Core.VNodeBuilder._writethrough
  id: _writethrough
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _writethrough
  nameWithType: VNodeBuilder._writethrough
  fullName: EventStore.Core.VNodeBuilder._writethrough
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _writethrough
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 102
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _writethrough
    return:
      type: System.Boolean
    content.vb: Protected _writethrough As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._chunkInitialReaderCount
  commentId: F:EventStore.Core.VNodeBuilder._chunkInitialReaderCount
  id: _chunkInitialReaderCount
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _chunkInitialReaderCount
  nameWithType: VNodeBuilder._chunkInitialReaderCount
  fullName: EventStore.Core.VNodeBuilder._chunkInitialReaderCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _chunkInitialReaderCount
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 103
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected int _chunkInitialReaderCount
    return:
      type: System.Int32
    content.vb: Protected _chunkInitialReaderCount As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._index
  commentId: F:EventStore.Core.VNodeBuilder._index
  id: _index
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _index
  nameWithType: VNodeBuilder._index
  fullName: EventStore.Core.VNodeBuilder._index
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _index
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 105
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected string _index
    return:
      type: System.String
    content.vb: Protected _index As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._skipIndexVerify
  commentId: F:EventStore.Core.VNodeBuilder._skipIndexVerify
  id: _skipIndexVerify
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _skipIndexVerify
  nameWithType: VNodeBuilder._skipIndexVerify
  fullName: EventStore.Core.VNodeBuilder._skipIndexVerify
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _skipIndexVerify
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 106
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _skipIndexVerify
    return:
      type: System.Boolean
    content.vb: Protected _skipIndexVerify As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._indexCacheDepth
  commentId: F:EventStore.Core.VNodeBuilder._indexCacheDepth
  id: _indexCacheDepth
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _indexCacheDepth
  nameWithType: VNodeBuilder._indexCacheDepth
  fullName: EventStore.Core.VNodeBuilder._indexCacheDepth
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _indexCacheDepth
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 107
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected int _indexCacheDepth
    return:
      type: System.Int32
    content.vb: Protected _indexCacheDepth As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._unsafeIgnoreHardDelete
  commentId: F:EventStore.Core.VNodeBuilder._unsafeIgnoreHardDelete
  id: _unsafeIgnoreHardDelete
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _unsafeIgnoreHardDelete
  nameWithType: VNodeBuilder._unsafeIgnoreHardDelete
  fullName: EventStore.Core.VNodeBuilder._unsafeIgnoreHardDelete
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _unsafeIgnoreHardDelete
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 108
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _unsafeIgnoreHardDelete
    return:
      type: System.Boolean
    content.vb: Protected _unsafeIgnoreHardDelete As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._unsafeDisableFlushToDisk
  commentId: F:EventStore.Core.VNodeBuilder._unsafeDisableFlushToDisk
  id: _unsafeDisableFlushToDisk
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _unsafeDisableFlushToDisk
  nameWithType: VNodeBuilder._unsafeDisableFlushToDisk
  fullName: EventStore.Core.VNodeBuilder._unsafeDisableFlushToDisk
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _unsafeDisableFlushToDisk
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 109
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _unsafeDisableFlushToDisk
    return:
      type: System.Boolean
    content.vb: Protected _unsafeDisableFlushToDisk As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._betterOrdering
  commentId: F:EventStore.Core.VNodeBuilder._betterOrdering
  id: _betterOrdering
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _betterOrdering
  nameWithType: VNodeBuilder._betterOrdering
  fullName: EventStore.Core.VNodeBuilder._betterOrdering
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _betterOrdering
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 110
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _betterOrdering
    return:
      type: System.Boolean
    content.vb: Protected _betterOrdering As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._projectionType
  commentId: F:EventStore.Core.VNodeBuilder._projectionType
  id: _projectionType
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _projectionType
  nameWithType: VNodeBuilder._projectionType
  fullName: EventStore.Core.VNodeBuilder._projectionType
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _projectionType
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 111
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected ProjectionType _projectionType
    return:
      type: EventStore.Common.Options.ProjectionType
    content.vb: Protected _projectionType As ProjectionType
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._projectionsThreads
  commentId: F:EventStore.Core.VNodeBuilder._projectionsThreads
  id: _projectionsThreads
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _projectionsThreads
  nameWithType: VNodeBuilder._projectionsThreads
  fullName: EventStore.Core.VNodeBuilder._projectionsThreads
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _projectionsThreads
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 112
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected int _projectionsThreads
    return:
      type: System.Int32
    content.vb: Protected _projectionsThreads As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._projectionsQueryExpiry
  commentId: F:EventStore.Core.VNodeBuilder._projectionsQueryExpiry
  id: _projectionsQueryExpiry
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _projectionsQueryExpiry
  nameWithType: VNodeBuilder._projectionsQueryExpiry
  fullName: EventStore.Core.VNodeBuilder._projectionsQueryExpiry
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _projectionsQueryExpiry
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 113
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected TimeSpan _projectionsQueryExpiry
    return:
      type: TimeSpan
    content.vb: Protected _projectionsQueryExpiry As TimeSpan
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._db
  commentId: F:EventStore.Core.VNodeBuilder._db
  id: _db
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _db
  nameWithType: VNodeBuilder._db
  fullName: EventStore.Core.VNodeBuilder._db
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _db
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 115
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected TFChunkDb _db
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunkDb
    content.vb: Protected _db As TFChunkDb
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._vNodeSettings
  commentId: F:EventStore.Core.VNodeBuilder._vNodeSettings
  id: _vNodeSettings
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _vNodeSettings
  nameWithType: VNodeBuilder._vNodeSettings
  fullName: EventStore.Core.VNodeBuilder._vNodeSettings
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _vNodeSettings
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 116
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected ClusterVNodeSettings _vNodeSettings
    return:
      type: EventStore.Core.Cluster.Settings.ClusterVNodeSettings
    content.vb: Protected _vNodeSettings As ClusterVNodeSettings
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._dbConfig
  commentId: F:EventStore.Core.VNodeBuilder._dbConfig
  id: _dbConfig
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _dbConfig
  nameWithType: VNodeBuilder._dbConfig
  fullName: EventStore.Core.VNodeBuilder._dbConfig
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _dbConfig
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 117
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected TFChunkDbConfig _dbConfig
    return:
      type: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
    content.vb: Protected _dbConfig As TFChunkDbConfig
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._indexBitnessVersion
  commentId: F:EventStore.Core.VNodeBuilder._indexBitnessVersion
  id: _indexBitnessVersion
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _indexBitnessVersion
  nameWithType: VNodeBuilder._indexBitnessVersion
  fullName: EventStore.Core.VNodeBuilder._indexBitnessVersion
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _indexBitnessVersion
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 126
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected byte _indexBitnessVersion
    return:
      type: System.Byte
    content.vb: Protected _indexBitnessVersion As Byte
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._alwaysKeepScavenged
  commentId: F:EventStore.Core.VNodeBuilder._alwaysKeepScavenged
  id: _alwaysKeepScavenged
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _alwaysKeepScavenged
  nameWithType: VNodeBuilder._alwaysKeepScavenged
  fullName: EventStore.Core.VNodeBuilder._alwaysKeepScavenged
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _alwaysKeepScavenged
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 127
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _alwaysKeepScavenged
    return:
      type: System.Boolean
    content.vb: Protected _alwaysKeepScavenged As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder._skipIndexScanOnReads
  commentId: F:EventStore.Core.VNodeBuilder._skipIndexScanOnReads
  id: _skipIndexScanOnReads
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: _skipIndexScanOnReads
  nameWithType: VNodeBuilder._skipIndexScanOnReads
  fullName: EventStore.Core.VNodeBuilder._skipIndexScanOnReads
  type: Field
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _skipIndexScanOnReads
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 128
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected bool _skipIndexScanOnReads
    return:
      type: System.Boolean
    content.vb: Protected _skipIndexScanOnReads As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder.#ctor
  commentId: M:EventStore.Core.VNodeBuilder.#ctor
  id: '#ctor'
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: VNodeBuilder()
  nameWithType: VNodeBuilder.VNodeBuilder()
  fullName: EventStore.Core.VNodeBuilder.VNodeBuilder()
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 133
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected VNodeBuilder()
    content.vb: Protected Sub New
  overload: EventStore.Core.VNodeBuilder.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder.WithSingleNodeSettings
  commentId: M:EventStore.Core.VNodeBuilder.WithSingleNodeSettings
  id: WithSingleNodeSettings
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithSingleNodeSettings()
  nameWithType: VNodeBuilder.WithSingleNodeSettings()
  fullName: EventStore.Core.VNodeBuilder.WithSingleNodeSettings()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithSingleNodeSettings
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 219
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected VNodeBuilder WithSingleNodeSettings()
    return:
      type: EventStore.Core.VNodeBuilder
    content.vb: Protected Function WithSingleNodeSettings As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithSingleNodeSettings*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder.WithClusterNodeSettings(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.WithClusterNodeSettings(System.Int32)
  id: WithClusterNodeSettings(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithClusterNodeSettings(Int32)
  nameWithType: VNodeBuilder.WithClusterNodeSettings(Int32)
  fullName: EventStore.Core.VNodeBuilder.WithClusterNodeSettings(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithClusterNodeSettings
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 227
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected VNodeBuilder WithClusterNodeSettings(int clusterNodeCount)
    parameters:
    - id: clusterNodeCount
      type: System.Int32
    return:
      type: EventStore.Core.VNodeBuilder
    content.vb: Protected Function WithClusterNodeSettings(clusterNodeCount As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithClusterNodeSettings*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Core.VNodeBuilder.StartStandardProjections
  commentId: M:EventStore.Core.VNodeBuilder.StartStandardProjections
  id: StartStandardProjections
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: StartStandardProjections()
  nameWithType: VNodeBuilder.StartStandardProjections()
  fullName: EventStore.Core.VNodeBuilder.StartStandardProjections()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StartStandardProjections
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 240
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nStart standard projections.\n"
  example: []
  syntax:
    content: public VNodeBuilder StartStandardProjections()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function StartStandardProjections As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.StartStandardProjections*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.DisableHTTPCaching
  commentId: M:EventStore.Core.VNodeBuilder.DisableHTTPCaching
  id: DisableHTTPCaching
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: DisableHTTPCaching()
  nameWithType: VNodeBuilder.DisableHTTPCaching()
  fullName: EventStore.Core.VNodeBuilder.DisableHTTPCaching()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DisableHTTPCaching
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 250
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nDisable HTTP Caching.\n"
  example: []
  syntax:
    content: public VNodeBuilder DisableHTTPCaching()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function DisableHTTPCaching As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.DisableHTTPCaching*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.RunProjections(EventStore.Common.Options.ProjectionType,System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.RunProjections(EventStore.Common.Options.ProjectionType,System.Int32)
  id: RunProjections(EventStore.Common.Options.ProjectionType,System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: RunProjections(ProjectionType, Int32)
  nameWithType: VNodeBuilder.RunProjections(ProjectionType, Int32)
  fullName: EventStore.Core.VNodeBuilder.RunProjections(EventStore.Common.Options.ProjectionType, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RunProjections
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 262
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the mode and the number of threads on which to run projections.\n"
  example: []
  syntax:
    content: public VNodeBuilder RunProjections(ProjectionType projectionType, int numberOfThreads = null)
    parameters:
    - id: projectionType
      type: EventStore.Common.Options.ProjectionType
      description: The mode in which to run the projections system
    - id: numberOfThreads
      type: System.Int32
      description: The number of threads to use for projections. Defaults to 3.
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function RunProjections(projectionType As ProjectionType, numberOfThreads As Integer = Nothing) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.RunProjections*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithProjectionQueryExpirationOf(TimeSpan)
  commentId: M:EventStore.Core.VNodeBuilder.WithProjectionQueryExpirationOf(TimeSpan)
  id: WithProjectionQueryExpirationOf(TimeSpan)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithProjectionQueryExpirationOf(TimeSpan)
  nameWithType: VNodeBuilder.WithProjectionQueryExpirationOf(TimeSpan)
  fullName: EventStore.Core.VNodeBuilder.WithProjectionQueryExpirationOf(TimeSpan)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithProjectionQueryExpirationOf
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 274
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets how long a projection query can be idle before it expires.\n"
  example: []
  syntax:
    content: public VNodeBuilder WithProjectionQueryExpirationOf(TimeSpan projectionQueryExpiry)
    parameters:
    - id: projectionQueryExpiry
      type: TimeSpan
      description: The length of time a projection query can be idle before it expires.
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithProjectionQueryExpirationOf(projectionQueryExpiry As TimeSpan) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithProjectionQueryExpirationOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.AddCustomSubsystem(EventStore.Core.ISubsystem)
  commentId: M:EventStore.Core.VNodeBuilder.AddCustomSubsystem(EventStore.Core.ISubsystem)
  id: AddCustomSubsystem(EventStore.Core.ISubsystem)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: AddCustomSubsystem(ISubsystem)
  nameWithType: VNodeBuilder.AddCustomSubsystem(ISubsystem)
  fullName: EventStore.Core.VNodeBuilder.AddCustomSubsystem(EventStore.Core.ISubsystem)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AddCustomSubsystem
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 286
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nAdds a custom subsystem to the builder. NOTE: This is an advanced use case that most people will never need!\n"
  example: []
  syntax:
    content: public VNodeBuilder AddCustomSubsystem(ISubsystem subsystem)
    parameters:
    - id: subsystem
      type: EventStore.Core.ISubsystem
      description: The subsystem to add
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function AddCustomSubsystem(subsystem As ISubsystem) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.AddCustomSubsystem*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.RunInMemory
  commentId: M:EventStore.Core.VNodeBuilder.RunInMemory
  id: RunInMemory
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: RunInMemory()
  nameWithType: VNodeBuilder.RunInMemory()
  fullName: EventStore.Core.VNodeBuilder.RunInMemory()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RunInMemory
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 296
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nReturns a builder set to run in memory only\n"
  example: []
  syntax:
    content: public VNodeBuilder RunInMemory()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function RunInMemory As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.RunInMemory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.RunOnDisk(System.String)
  commentId: M:EventStore.Core.VNodeBuilder.RunOnDisk(System.String)
  id: RunOnDisk(System.String)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: RunOnDisk(String)
  nameWithType: VNodeBuilder.RunOnDisk(String)
  fullName: EventStore.Core.VNodeBuilder.RunOnDisk(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RunOnDisk
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 308
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nReturns a builder set to write database files to the specified path\n"
  example: []
  syntax:
    content: public VNodeBuilder RunOnDisk(string path)
    parameters:
    - id: path
      type: System.String
      description: The path on disk in which to write the database files
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function RunOnDisk(path As String) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.RunOnDisk*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.OnDefaultEndpoints
  commentId: M:EventStore.Core.VNodeBuilder.OnDefaultEndpoints
  id: OnDefaultEndpoints
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: OnDefaultEndpoints()
  nameWithType: VNodeBuilder.OnDefaultEndpoints()
  fullName: EventStore.Core.VNodeBuilder.OnDefaultEndpoints()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: OnDefaultEndpoints
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 319
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the default endpoints on localhost (1113 tcp, 2113 http)\n"
  example: []
  syntax:
    content: public VNodeBuilder OnDefaultEndpoints()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function OnDefaultEndpoints As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.OnDefaultEndpoints*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.AdvertiseInternalIPAs(IPAddress)
  commentId: M:EventStore.Core.VNodeBuilder.AdvertiseInternalIPAs(IPAddress)
  id: AdvertiseInternalIPAs(IPAddress)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: AdvertiseInternalIPAs(IPAddress)
  nameWithType: VNodeBuilder.AdvertiseInternalIPAs(IPAddress)
  fullName: EventStore.Core.VNodeBuilder.AdvertiseInternalIPAs(IPAddress)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AdvertiseInternalIPAs
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 332
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets up the Internal IP that would be advertised \n"
  example: []
  syntax:
    content: public VNodeBuilder AdvertiseInternalIPAs(IPAddress intIpAdvertiseAs)
    parameters:
    - id: intIpAdvertiseAs
      type: IPAddress
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function AdvertiseInternalIPAs(intIpAdvertiseAs As IPAddress) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.AdvertiseInternalIPAs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.AdvertiseExternalIPAs(IPAddress)
  commentId: M:EventStore.Core.VNodeBuilder.AdvertiseExternalIPAs(IPAddress)
  id: AdvertiseExternalIPAs(IPAddress)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: AdvertiseExternalIPAs(IPAddress)
  nameWithType: VNodeBuilder.AdvertiseExternalIPAs(IPAddress)
  fullName: EventStore.Core.VNodeBuilder.AdvertiseExternalIPAs(IPAddress)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AdvertiseExternalIPAs
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 342
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets up the External IP that would be advertised \n"
  example: []
  syntax:
    content: public VNodeBuilder AdvertiseExternalIPAs(IPAddress extIpAdvertiseAs)
    parameters:
    - id: extIpAdvertiseAs
      type: IPAddress
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function AdvertiseExternalIPAs(extIpAdvertiseAs As IPAddress) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.AdvertiseExternalIPAs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.AdvertiseInternalHttpPortAs(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.AdvertiseInternalHttpPortAs(System.Int32)
  id: AdvertiseInternalHttpPortAs(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: AdvertiseInternalHttpPortAs(Int32)
  nameWithType: VNodeBuilder.AdvertiseInternalHttpPortAs(Int32)
  fullName: EventStore.Core.VNodeBuilder.AdvertiseInternalHttpPortAs(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AdvertiseInternalHttpPortAs
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 352
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets up the Internal Http Port that would be advertised \n"
  example: []
  syntax:
    content: public VNodeBuilder AdvertiseInternalHttpPortAs(int intHttpPortAdvertiseAs)
    parameters:
    - id: intHttpPortAdvertiseAs
      type: System.Int32
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function AdvertiseInternalHttpPortAs(intHttpPortAdvertiseAs As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.AdvertiseInternalHttpPortAs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.HavingReaderThreads(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.HavingReaderThreads(System.Int32)
  id: HavingReaderThreads(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: HavingReaderThreads(Int32)
  nameWithType: VNodeBuilder.HavingReaderThreads(Int32)
  fullName: EventStore.Core.VNodeBuilder.HavingReaderThreads(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HavingReaderThreads
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 363
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the number of reader threads to process read requests.\n"
  example: []
  syntax:
    content: public VNodeBuilder HavingReaderThreads(int readerThreadsCount)
    parameters:
    - id: readerThreadsCount
      type: System.Int32
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function HavingReaderThreads(readerThreadsCount As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.HavingReaderThreads*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.AdvertiseExternalHttpPortAs(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.AdvertiseExternalHttpPortAs(System.Int32)
  id: AdvertiseExternalHttpPortAs(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: AdvertiseExternalHttpPortAs(Int32)
  nameWithType: VNodeBuilder.AdvertiseExternalHttpPortAs(Int32)
  fullName: EventStore.Core.VNodeBuilder.AdvertiseExternalHttpPortAs(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AdvertiseExternalHttpPortAs
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 375
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets up the External Http Port that would be advertised \n"
  example: []
  syntax:
    content: public VNodeBuilder AdvertiseExternalHttpPortAs(int extHttpPortAdvertiseAs)
    parameters:
    - id: extHttpPortAdvertiseAs
      type: System.Int32
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function AdvertiseExternalHttpPortAs(extHttpPortAdvertiseAs As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.AdvertiseExternalHttpPortAs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.AdvertiseInternalSecureTCPPortAs(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.AdvertiseInternalSecureTCPPortAs(System.Int32)
  id: AdvertiseInternalSecureTCPPortAs(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: AdvertiseInternalSecureTCPPortAs(Int32)
  nameWithType: VNodeBuilder.AdvertiseInternalSecureTCPPortAs(Int32)
  fullName: EventStore.Core.VNodeBuilder.AdvertiseInternalSecureTCPPortAs(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AdvertiseInternalSecureTCPPortAs
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 385
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets up the Internal Secure TCP Port that would be advertised \n"
  example: []
  syntax:
    content: public VNodeBuilder AdvertiseInternalSecureTCPPortAs(int intSecureTcpPortAdvertiseAs)
    parameters:
    - id: intSecureTcpPortAdvertiseAs
      type: System.Int32
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function AdvertiseInternalSecureTCPPortAs(intSecureTcpPortAdvertiseAs As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.AdvertiseInternalSecureTCPPortAs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.AdvertiseExternalSecureTCPPortAs(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.AdvertiseExternalSecureTCPPortAs(System.Int32)
  id: AdvertiseExternalSecureTCPPortAs(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: AdvertiseExternalSecureTCPPortAs(Int32)
  nameWithType: VNodeBuilder.AdvertiseExternalSecureTCPPortAs(Int32)
  fullName: EventStore.Core.VNodeBuilder.AdvertiseExternalSecureTCPPortAs(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AdvertiseExternalSecureTCPPortAs
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 395
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets up the External Secure TCP Port that would be advertised \n"
  example: []
  syntax:
    content: public VNodeBuilder AdvertiseExternalSecureTCPPortAs(int extSecureTcpPortAdvertiseAs)
    parameters:
    - id: extSecureTcpPortAdvertiseAs
      type: System.Int32
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function AdvertiseExternalSecureTCPPortAs(extSecureTcpPortAdvertiseAs As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.AdvertiseExternalSecureTCPPortAs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.AdvertiseInternalTCPPortAs(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.AdvertiseInternalTCPPortAs(System.Int32)
  id: AdvertiseInternalTCPPortAs(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: AdvertiseInternalTCPPortAs(Int32)
  nameWithType: VNodeBuilder.AdvertiseInternalTCPPortAs(Int32)
  fullName: EventStore.Core.VNodeBuilder.AdvertiseInternalTCPPortAs(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AdvertiseInternalTCPPortAs
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 405
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets up the Internal TCP Port that would be advertised \n"
  example: []
  syntax:
    content: public VNodeBuilder AdvertiseInternalTCPPortAs(int intTcpPortAdvertiseAs)
    parameters:
    - id: intTcpPortAdvertiseAs
      type: System.Int32
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function AdvertiseInternalTCPPortAs(intTcpPortAdvertiseAs As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.AdvertiseInternalTCPPortAs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.GossipAsSingleNode
  commentId: M:EventStore.Core.VNodeBuilder.GossipAsSingleNode
  id: GossipAsSingleNode
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: GossipAsSingleNode()
  nameWithType: VNodeBuilder.GossipAsSingleNode()
  fullName: EventStore.Core.VNodeBuilder.GossipAsSingleNode()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GossipAsSingleNode
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 415
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nEnables gossip when running on a single node for testing purposes\n"
  example: []
  syntax:
    content: public VNodeBuilder GossipAsSingleNode()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function GossipAsSingleNode As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.GossipAsSingleNode*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.AdvertiseExternalTCPPortAs(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.AdvertiseExternalTCPPortAs(System.Int32)
  id: AdvertiseExternalTCPPortAs(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: AdvertiseExternalTCPPortAs(Int32)
  nameWithType: VNodeBuilder.AdvertiseExternalTCPPortAs(Int32)
  fullName: EventStore.Core.VNodeBuilder.AdvertiseExternalTCPPortAs(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AdvertiseExternalTCPPortAs
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 426
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets up the External TCP Port that would be advertised \n"
  example: []
  syntax:
    content: public VNodeBuilder AdvertiseExternalTCPPortAs(int extTcpPortAdvertiseAs)
    parameters:
    - id: extTcpPortAdvertiseAs
      type: System.Int32
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function AdvertiseExternalTCPPortAs(extTcpPortAdvertiseAs As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.AdvertiseExternalTCPPortAs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithClusterGossipPort(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.WithClusterGossipPort(System.Int32)
  id: WithClusterGossipPort(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithClusterGossipPort(Int32)
  nameWithType: VNodeBuilder.WithClusterGossipPort(Int32)
  fullName: EventStore.Core.VNodeBuilder.WithClusterGossipPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithClusterGossipPort
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 438
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the internal gossip port (used when using cluster dns, this should point to a known port gossip will be running on)\n"
  example: []
  syntax:
    content: public VNodeBuilder WithClusterGossipPort(int port)
    parameters:
    - id: port
      type: System.Int32
      description: The cluster gossip to use
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithClusterGossipPort(port As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithClusterGossipPort*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithInternalHttpOn(IPEndPoint)
  commentId: M:EventStore.Core.VNodeBuilder.WithInternalHttpOn(IPEndPoint)
  id: WithInternalHttpOn(IPEndPoint)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithInternalHttpOn(IPEndPoint)
  nameWithType: VNodeBuilder.WithInternalHttpOn(IPEndPoint)
  fullName: EventStore.Core.VNodeBuilder.WithInternalHttpOn(IPEndPoint)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithInternalHttpOn
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 449
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the internal http endpoint to the specified value\n"
  example: []
  syntax:
    content: public VNodeBuilder WithInternalHttpOn(IPEndPoint endpoint)
    parameters:
    - id: endpoint
      type: IPEndPoint
      description: The internal endpoint to use
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithInternalHttpOn(endpoint As IPEndPoint) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithInternalHttpOn*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithExternalHttpOn(IPEndPoint)
  commentId: M:EventStore.Core.VNodeBuilder.WithExternalHttpOn(IPEndPoint)
  id: WithExternalHttpOn(IPEndPoint)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithExternalHttpOn(IPEndPoint)
  nameWithType: VNodeBuilder.WithExternalHttpOn(IPEndPoint)
  fullName: EventStore.Core.VNodeBuilder.WithExternalHttpOn(IPEndPoint)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithExternalHttpOn
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 460
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the external http endpoint to the specified value\n"
  example: []
  syntax:
    content: public VNodeBuilder WithExternalHttpOn(IPEndPoint endpoint)
    parameters:
    - id: endpoint
      type: IPEndPoint
      description: The external endpoint to use
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithExternalHttpOn(endpoint As IPEndPoint) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithExternalHttpOn*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithInternalTcpOn(IPEndPoint)
  commentId: M:EventStore.Core.VNodeBuilder.WithInternalTcpOn(IPEndPoint)
  id: WithInternalTcpOn(IPEndPoint)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithInternalTcpOn(IPEndPoint)
  nameWithType: VNodeBuilder.WithInternalTcpOn(IPEndPoint)
  fullName: EventStore.Core.VNodeBuilder.WithInternalTcpOn(IPEndPoint)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithInternalTcpOn
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 471
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the internal tcp endpoint to the specified value\n"
  example: []
  syntax:
    content: public VNodeBuilder WithInternalTcpOn(IPEndPoint endpoint)
    parameters:
    - id: endpoint
      type: IPEndPoint
      description: The internal endpoint to use
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithInternalTcpOn(endpoint As IPEndPoint) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithInternalTcpOn*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithInternalSecureTcpOn(IPEndPoint)
  commentId: M:EventStore.Core.VNodeBuilder.WithInternalSecureTcpOn(IPEndPoint)
  id: WithInternalSecureTcpOn(IPEndPoint)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithInternalSecureTcpOn(IPEndPoint)
  nameWithType: VNodeBuilder.WithInternalSecureTcpOn(IPEndPoint)
  fullName: EventStore.Core.VNodeBuilder.WithInternalSecureTcpOn(IPEndPoint)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithInternalSecureTcpOn
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 482
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the internal secure tcp endpoint to the specified value\n"
  example: []
  syntax:
    content: public VNodeBuilder WithInternalSecureTcpOn(IPEndPoint endpoint)
    parameters:
    - id: endpoint
      type: IPEndPoint
      description: The internal secure endpoint to use
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithInternalSecureTcpOn(endpoint As IPEndPoint) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithInternalSecureTcpOn*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithExternalTcpOn(IPEndPoint)
  commentId: M:EventStore.Core.VNodeBuilder.WithExternalTcpOn(IPEndPoint)
  id: WithExternalTcpOn(IPEndPoint)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithExternalTcpOn(IPEndPoint)
  nameWithType: VNodeBuilder.WithExternalTcpOn(IPEndPoint)
  fullName: EventStore.Core.VNodeBuilder.WithExternalTcpOn(IPEndPoint)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithExternalTcpOn
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 493
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the external tcp endpoint to the specified value\n"
  example: []
  syntax:
    content: public VNodeBuilder WithExternalTcpOn(IPEndPoint endpoint)
    parameters:
    - id: endpoint
      type: IPEndPoint
      description: The external endpoint to use
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithExternalTcpOn(endpoint As IPEndPoint) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithExternalTcpOn*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithExternalSecureTcpOn(IPEndPoint)
  commentId: M:EventStore.Core.VNodeBuilder.WithExternalSecureTcpOn(IPEndPoint)
  id: WithExternalSecureTcpOn(IPEndPoint)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithExternalSecureTcpOn(IPEndPoint)
  nameWithType: VNodeBuilder.WithExternalSecureTcpOn(IPEndPoint)
  fullName: EventStore.Core.VNodeBuilder.WithExternalSecureTcpOn(IPEndPoint)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithExternalSecureTcpOn
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 504
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the external secure tcp endpoint to the specified value\n"
  example: []
  syntax:
    content: public VNodeBuilder WithExternalSecureTcpOn(IPEndPoint endpoint)
    parameters:
    - id: endpoint
      type: IPEndPoint
      description: The external secure endpoint to use
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithExternalSecureTcpOn(endpoint As IPEndPoint) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithExternalSecureTcpOn*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.EnableSsl
  commentId: M:EventStore.Core.VNodeBuilder.EnableSsl
  id: EnableSsl
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: EnableSsl()
  nameWithType: VNodeBuilder.EnableSsl()
  fullName: EventStore.Core.VNodeBuilder.EnableSsl()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EnableSsl
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 514
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets that SSL should be used on connections\n"
  example: []
  syntax:
    content: public VNodeBuilder EnableSsl()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function EnableSsl As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.EnableSsl*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.DisableInsecureTCP
  commentId: M:EventStore.Core.VNodeBuilder.DisableInsecureTCP
  id: DisableInsecureTCP
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: DisableInsecureTCP()
  nameWithType: VNodeBuilder.DisableInsecureTCP()
  fullName: EventStore.Core.VNodeBuilder.DisableInsecureTCP()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DisableInsecureTCP
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 524
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nDisable Insecure TCP Communication\n"
  example: []
  syntax:
    content: public VNodeBuilder DisableInsecureTCP()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function DisableInsecureTCP As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.DisableInsecureTCP*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithSslTargetHost(System.String)
  commentId: M:EventStore.Core.VNodeBuilder.WithSslTargetHost(System.String)
  id: WithSslTargetHost(System.String)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithSslTargetHost(String)
  nameWithType: VNodeBuilder.WithSslTargetHost(String)
  fullName: EventStore.Core.VNodeBuilder.WithSslTargetHost(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithSslTargetHost
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 535
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the target host of the server&apos;s SSL certificate. \n"
  example: []
  syntax:
    content: public VNodeBuilder WithSslTargetHost(string targetHost)
    parameters:
    - id: targetHost
      type: System.String
      description: The target host of the server&apos;s SSL certificate
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithSslTargetHost(targetHost As String) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithSslTargetHost*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.ValidateSslServer
  commentId: M:EventStore.Core.VNodeBuilder.ValidateSslServer
  id: ValidateSslServer
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: ValidateSslServer()
  nameWithType: VNodeBuilder.ValidateSslServer()
  fullName: EventStore.Core.VNodeBuilder.ValidateSslServer()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ValidateSslServer
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 545
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets whether to validate that the server&apos;s certificate is trusted.  \n"
  example: []
  syntax:
    content: public VNodeBuilder ValidateSslServer()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function ValidateSslServer As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.ValidateSslServer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithGossipSeeds(IPEndPoint[])
  commentId: M:EventStore.Core.VNodeBuilder.WithGossipSeeds(IPEndPoint[])
  id: WithGossipSeeds(IPEndPoint[])
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithGossipSeeds(IPEndPoint[])
  nameWithType: VNodeBuilder.WithGossipSeeds(IPEndPoint[])
  fullName: EventStore.Core.VNodeBuilder.WithGossipSeeds(IPEndPoint[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithGossipSeeds
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 556
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the gossip seeds this node should talk to\n"
  example: []
  syntax:
    content: public VNodeBuilder WithGossipSeeds(params IPEndPoint[] endpoints)
    parameters:
    - id: endpoints
      type: IPEndPoint[]
      description: The gossip seeds this node should try to talk to
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithGossipSeeds(ParamArray endpoints As IPEndPoint()) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithGossipSeeds*
  nameWithType.vb: VNodeBuilder.WithGossipSeeds(IPEndPoint())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.VNodeBuilder.WithGossipSeeds(IPEndPoint())
  name.vb: WithGossipSeeds(IPEndPoint())
- uid: EventStore.Core.VNodeBuilder.MaximumMemoryTableSizeOf(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.MaximumMemoryTableSizeOf(System.Int32)
  id: MaximumMemoryTableSizeOf(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: MaximumMemoryTableSizeOf(Int32)
  nameWithType: VNodeBuilder.MaximumMemoryTableSizeOf(Int32)
  fullName: EventStore.Core.VNodeBuilder.MaximumMemoryTableSizeOf(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MaximumMemoryTableSizeOf
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 569
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the maximum size a memtable is allowed to reach (in count) before being moved to be a ptable\n"
  example: []
  syntax:
    content: public VNodeBuilder MaximumMemoryTableSizeOf(int size)
    parameters:
    - id: size
      type: System.Int32
      description: The maximum count
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function MaximumMemoryTableSizeOf(size As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.MaximumMemoryTableSizeOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithHashCollisionReadLimitOf(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.WithHashCollisionReadLimitOf(System.Int32)
  id: WithHashCollisionReadLimitOf(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithHashCollisionReadLimitOf(Int32)
  nameWithType: VNodeBuilder.WithHashCollisionReadLimitOf(Int32)
  fullName: EventStore.Core.VNodeBuilder.WithHashCollisionReadLimitOf(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithHashCollisionReadLimitOf
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 580
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the maximum number of events to read in case of a stream Id hash collision\n"
  example: []
  syntax:
    content: public VNodeBuilder WithHashCollisionReadLimitOf(int hashCollisionReadLimit)
    parameters:
    - id: hashCollisionReadLimit
      type: System.Int32
      description: The maximum count
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithHashCollisionReadLimitOf(hashCollisionReadLimit As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithHashCollisionReadLimitOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.DoNotVerifyDbHashes
  commentId: M:EventStore.Core.VNodeBuilder.DoNotVerifyDbHashes
  id: DoNotVerifyDbHashes
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: DoNotVerifyDbHashes()
  nameWithType: VNodeBuilder.DoNotVerifyDbHashes()
  fullName: EventStore.Core.VNodeBuilder.DoNotVerifyDbHashes()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DoNotVerifyDbHashes
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 591
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nMarks that the existing database files should not be checked for checksums on startup.\n"
  example: []
  syntax:
    content: public VNodeBuilder DoNotVerifyDbHashes()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function DoNotVerifyDbHashes As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.DoNotVerifyDbHashes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.NoGossipOnPublicInterface
  commentId: M:EventStore.Core.VNodeBuilder.NoGossipOnPublicInterface
  id: NoGossipOnPublicInterface
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: NoGossipOnPublicInterface()
  nameWithType: VNodeBuilder.NoGossipOnPublicInterface()
  fullName: EventStore.Core.VNodeBuilder.NoGossipOnPublicInterface()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: NoGossipOnPublicInterface
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 601
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nDisables gossip on the public (client) interface\n"
  example: []
  syntax:
    content: public VNodeBuilder NoGossipOnPublicInterface()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function NoGossipOnPublicInterface As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.NoGossipOnPublicInterface*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.NoAdminOnPublicInterface
  commentId: M:EventStore.Core.VNodeBuilder.NoAdminOnPublicInterface
  id: NoAdminOnPublicInterface
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: NoAdminOnPublicInterface()
  nameWithType: VNodeBuilder.NoAdminOnPublicInterface()
  fullName: EventStore.Core.VNodeBuilder.NoAdminOnPublicInterface()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: NoAdminOnPublicInterface
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 611
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nDisables the admin interface on the public (client) interface\n"
  example: []
  syntax:
    content: public VNodeBuilder NoAdminOnPublicInterface()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function NoAdminOnPublicInterface As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.NoAdminOnPublicInterface*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.NoStatsOnPublicInterface
  commentId: M:EventStore.Core.VNodeBuilder.NoStatsOnPublicInterface
  id: NoStatsOnPublicInterface
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: NoStatsOnPublicInterface()
  nameWithType: VNodeBuilder.NoStatsOnPublicInterface()
  fullName: EventStore.Core.VNodeBuilder.NoStatsOnPublicInterface()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: NoStatsOnPublicInterface
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 621
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nDisables statistics screens on the public (client) interface\n"
  example: []
  syntax:
    content: public VNodeBuilder NoStatsOnPublicInterface()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function NoStatsOnPublicInterface As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.NoStatsOnPublicInterface*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.VerifyDbHashes
  commentId: M:EventStore.Core.VNodeBuilder.VerifyDbHashes
  id: VerifyDbHashes
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: VerifyDbHashes()
  nameWithType: VNodeBuilder.VerifyDbHashes()
  fullName: EventStore.Core.VNodeBuilder.VerifyDbHashes()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: VerifyDbHashes
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 631
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nMarks that the existing database files should be checked for checksums on startup.\n"
  example: []
  syntax:
    content: public VNodeBuilder VerifyDbHashes()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function VerifyDbHashes As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.VerifyDbHashes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithClusterDnsName(System.String)
  commentId: M:EventStore.Core.VNodeBuilder.WithClusterDnsName(System.String)
  id: WithClusterDnsName(System.String)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithClusterDnsName(String)
  nameWithType: VNodeBuilder.WithClusterDnsName(String)
  fullName: EventStore.Core.VNodeBuilder.WithClusterDnsName(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithClusterDnsName
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 642
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the dns name used for the discovery of other cluster nodes\n"
  example: []
  syntax:
    content: public VNodeBuilder WithClusterDnsName(string name)
    parameters:
    - id: name
      type: System.String
      description: The dns name the node should use to discover gossip partners
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithClusterDnsName(name As String) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithClusterDnsName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.DisableDnsDiscovery
  commentId: M:EventStore.Core.VNodeBuilder.DisableDnsDiscovery
  id: DisableDnsDiscovery
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: DisableDnsDiscovery()
  nameWithType: VNodeBuilder.DisableDnsDiscovery()
  fullName: EventStore.Core.VNodeBuilder.DisableDnsDiscovery()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DisableDnsDiscovery
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 654
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nDisable dns discovery for the cluster\n"
  example: []
  syntax:
    content: public VNodeBuilder DisableDnsDiscovery()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function DisableDnsDiscovery As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.DisableDnsDiscovery*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithWorkerThreads(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.WithWorkerThreads(System.Int32)
  id: WithWorkerThreads(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithWorkerThreads(Int32)
  nameWithType: VNodeBuilder.WithWorkerThreads(Int32)
  fullName: EventStore.Core.VNodeBuilder.WithWorkerThreads(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithWorkerThreads
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 665
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the number of worker threads to use in shared threadpool\n"
  example: []
  syntax:
    content: public VNodeBuilder WithWorkerThreads(int count)
    parameters:
    - id: count
      type: System.Int32
      description: The number of worker threads
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithWorkerThreads(count As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithWorkerThreads*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.AddInternalHttpPrefix(System.String)
  commentId: M:EventStore.Core.VNodeBuilder.AddInternalHttpPrefix(System.String)
  id: AddInternalHttpPrefix(System.String)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: AddInternalHttpPrefix(String)
  nameWithType: VNodeBuilder.AddInternalHttpPrefix(String)
  fullName: EventStore.Core.VNodeBuilder.AddInternalHttpPrefix(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AddInternalHttpPrefix
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 676
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nAdds a http prefix for the internal http endpoint\n"
  example: []
  syntax:
    content: public VNodeBuilder AddInternalHttpPrefix(string prefix)
    parameters:
    - id: prefix
      type: System.String
      description: The prefix to add
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function AddInternalHttpPrefix(prefix As String) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.AddInternalHttpPrefix*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.AddExternalHttpPrefix(System.String)
  commentId: M:EventStore.Core.VNodeBuilder.AddExternalHttpPrefix(System.String)
  id: AddExternalHttpPrefix(System.String)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: AddExternalHttpPrefix(String)
  nameWithType: VNodeBuilder.AddExternalHttpPrefix(String)
  fullName: EventStore.Core.VNodeBuilder.AddExternalHttpPrefix(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AddExternalHttpPrefix
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 687
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nAdds a http prefix for the external http endpoint\n"
  example: []
  syntax:
    content: public VNodeBuilder AddExternalHttpPrefix(string prefix)
    parameters:
    - id: prefix
      type: System.String
      description: The prefix to add
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function AddExternalHttpPrefix(prefix As String) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.AddExternalHttpPrefix*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.DontAddInterfacePrefixes
  commentId: M:EventStore.Core.VNodeBuilder.DontAddInterfacePrefixes
  id: DontAddInterfacePrefixes
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: DontAddInterfacePrefixes()
  nameWithType: VNodeBuilder.DontAddInterfacePrefixes()
  fullName: EventStore.Core.VNodeBuilder.DontAddInterfacePrefixes()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DontAddInterfacePrefixes
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 697
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nDon&apos;t add the interface prefixes (e.g. If the External IP is set to the Loopback address, we&apos;ll add http://localhost:2113/ as a prefix) \n"
  example: []
  syntax:
    content: public VNodeBuilder DontAddInterfacePrefixes()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function DontAddInterfacePrefixes As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.DontAddInterfacePrefixes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithServerCertificateFromFile(System.String,System.String)
  commentId: M:EventStore.Core.VNodeBuilder.WithServerCertificateFromFile(System.String,System.String)
  id: WithServerCertificateFromFile(System.String,System.String)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithServerCertificateFromFile(String, String)
  nameWithType: VNodeBuilder.WithServerCertificateFromFile(String, String)
  fullName: EventStore.Core.VNodeBuilder.WithServerCertificateFromFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithServerCertificateFromFile
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 709
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the Server SSL Certificate to be loaded from a file\n"
  example: []
  syntax:
    content: public VNodeBuilder WithServerCertificateFromFile(string path, string password)
    parameters:
    - id: path
      type: System.String
      description: The path to the certificate file
    - id: password
      type: System.String
      description: The password for the certificate
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithServerCertificateFromFile(path As String, password As String) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithServerCertificateFromFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithInternalHeartbeatInterval(TimeSpan)
  commentId: M:EventStore.Core.VNodeBuilder.WithInternalHeartbeatInterval(TimeSpan)
  id: WithInternalHeartbeatInterval(TimeSpan)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithInternalHeartbeatInterval(TimeSpan)
  nameWithType: VNodeBuilder.WithInternalHeartbeatInterval(TimeSpan)
  fullName: EventStore.Core.VNodeBuilder.WithInternalHeartbeatInterval(TimeSpan)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithInternalHeartbeatInterval
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 722
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the heartbeat interval for the internal network interface.\n"
  example: []
  syntax:
    content: public VNodeBuilder WithInternalHeartbeatInterval(TimeSpan heartbeatInterval)
    parameters:
    - id: heartbeatInterval
      type: TimeSpan
      description: The heartbeat interval
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithInternalHeartbeatInterval(heartbeatInterval As TimeSpan) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithInternalHeartbeatInterval*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithExternalHeartbeatInterval(TimeSpan)
  commentId: M:EventStore.Core.VNodeBuilder.WithExternalHeartbeatInterval(TimeSpan)
  id: WithExternalHeartbeatInterval(TimeSpan)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithExternalHeartbeatInterval(TimeSpan)
  nameWithType: VNodeBuilder.WithExternalHeartbeatInterval(TimeSpan)
  fullName: EventStore.Core.VNodeBuilder.WithExternalHeartbeatInterval(TimeSpan)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithExternalHeartbeatInterval
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 733
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the heartbeat interval for the external network interface.\n"
  example: []
  syntax:
    content: public VNodeBuilder WithExternalHeartbeatInterval(TimeSpan heartbeatInterval)
    parameters:
    - id: heartbeatInterval
      type: TimeSpan
      description: The heartbeat interval
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithExternalHeartbeatInterval(heartbeatInterval As TimeSpan) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithExternalHeartbeatInterval*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithInternalHeartbeatTimeout(TimeSpan)
  commentId: M:EventStore.Core.VNodeBuilder.WithInternalHeartbeatTimeout(TimeSpan)
  id: WithInternalHeartbeatTimeout(TimeSpan)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithInternalHeartbeatTimeout(TimeSpan)
  nameWithType: VNodeBuilder.WithInternalHeartbeatTimeout(TimeSpan)
  fullName: EventStore.Core.VNodeBuilder.WithInternalHeartbeatTimeout(TimeSpan)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithInternalHeartbeatTimeout
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 744
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the heartbeat timeout for the internal network interface.\n"
  example: []
  syntax:
    content: public VNodeBuilder WithInternalHeartbeatTimeout(TimeSpan heartbeatTimeout)
    parameters:
    - id: heartbeatTimeout
      type: TimeSpan
      description: The heartbeat timeout
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithInternalHeartbeatTimeout(heartbeatTimeout As TimeSpan) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithInternalHeartbeatTimeout*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithExternalHeartbeatTimeout(TimeSpan)
  commentId: M:EventStore.Core.VNodeBuilder.WithExternalHeartbeatTimeout(TimeSpan)
  id: WithExternalHeartbeatTimeout(TimeSpan)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithExternalHeartbeatTimeout(TimeSpan)
  nameWithType: VNodeBuilder.WithExternalHeartbeatTimeout(TimeSpan)
  fullName: EventStore.Core.VNodeBuilder.WithExternalHeartbeatTimeout(TimeSpan)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithExternalHeartbeatTimeout
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 755
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the heartbeat timeout for the external network interface.\n"
  example: []
  syntax:
    content: public VNodeBuilder WithExternalHeartbeatTimeout(TimeSpan heartbeatTimeout)
    parameters:
    - id: heartbeatTimeout
      type: TimeSpan
      description: The heartbeat timeout
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithExternalHeartbeatTimeout(heartbeatTimeout As TimeSpan) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithExternalHeartbeatTimeout*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithConnectionPendingSendBytesThreshold(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.WithConnectionPendingSendBytesThreshold(System.Int32)
  id: WithConnectionPendingSendBytesThreshold(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithConnectionPendingSendBytesThreshold(Int32)
  nameWithType: VNodeBuilder.WithConnectionPendingSendBytesThreshold(Int32)
  fullName: EventStore.Core.VNodeBuilder.WithConnectionPendingSendBytesThreshold(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithConnectionPendingSendBytesThreshold
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 766
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the maximum number of pending send bytes allowed before a connection is closed.\n"
  example: []
  syntax:
    content: public VNodeBuilder WithConnectionPendingSendBytesThreshold(int connectionPendingSendBytesThreshold)
    parameters:
    - id: connectionPendingSendBytesThreshold
      type: System.Int32
      description: The number of pending send bytes allowed
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithConnectionPendingSendBytesThreshold(connectionPendingSendBytesThreshold As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithConnectionPendingSendBytesThreshold*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithGossipInterval(TimeSpan)
  commentId: M:EventStore.Core.VNodeBuilder.WithGossipInterval(TimeSpan)
  id: WithGossipInterval(TimeSpan)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithGossipInterval(TimeSpan)
  nameWithType: VNodeBuilder.WithGossipInterval(TimeSpan)
  fullName: EventStore.Core.VNodeBuilder.WithGossipInterval(TimeSpan)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithGossipInterval
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 777
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the gossip interval\n"
  example: []
  syntax:
    content: public VNodeBuilder WithGossipInterval(TimeSpan gossipInterval)
    parameters:
    - id: gossipInterval
      type: TimeSpan
      description: The gossip interval
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithGossipInterval(gossipInterval As TimeSpan) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithGossipInterval*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithGossipAllowedTimeDifference(TimeSpan)
  commentId: M:EventStore.Core.VNodeBuilder.WithGossipAllowedTimeDifference(TimeSpan)
  id: WithGossipAllowedTimeDifference(TimeSpan)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithGossipAllowedTimeDifference(TimeSpan)
  nameWithType: VNodeBuilder.WithGossipAllowedTimeDifference(TimeSpan)
  fullName: EventStore.Core.VNodeBuilder.WithGossipAllowedTimeDifference(TimeSpan)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithGossipAllowedTimeDifference
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 788
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the allowed gossip time difference\n"
  example: []
  syntax:
    content: public VNodeBuilder WithGossipAllowedTimeDifference(TimeSpan gossipAllowedDifference)
    parameters:
    - id: gossipAllowedDifference
      type: TimeSpan
      description: The allowed gossip time difference
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithGossipAllowedTimeDifference(gossipAllowedDifference As TimeSpan) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithGossipAllowedTimeDifference*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithGossipTimeout(TimeSpan)
  commentId: M:EventStore.Core.VNodeBuilder.WithGossipTimeout(TimeSpan)
  id: WithGossipTimeout(TimeSpan)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithGossipTimeout(TimeSpan)
  nameWithType: VNodeBuilder.WithGossipTimeout(TimeSpan)
  fullName: EventStore.Core.VNodeBuilder.WithGossipTimeout(TimeSpan)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithGossipTimeout
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 799
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the gossip timeout\n"
  example: []
  syntax:
    content: public VNodeBuilder WithGossipTimeout(TimeSpan gossipTimeout)
    parameters:
    - id: gossipTimeout
      type: TimeSpan
      description: The gossip timeout
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithGossipTimeout(gossipTimeout As TimeSpan) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithGossipTimeout*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithMinFlushDelay(TimeSpan)
  commentId: M:EventStore.Core.VNodeBuilder.WithMinFlushDelay(TimeSpan)
  id: WithMinFlushDelay(TimeSpan)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithMinFlushDelay(TimeSpan)
  nameWithType: VNodeBuilder.WithMinFlushDelay(TimeSpan)
  fullName: EventStore.Core.VNodeBuilder.WithMinFlushDelay(TimeSpan)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithMinFlushDelay
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 810
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the minimum flush delay \n"
  example: []
  syntax:
    content: public VNodeBuilder WithMinFlushDelay(TimeSpan minFlushDelay)
    parameters:
    - id: minFlushDelay
      type: TimeSpan
      description: The minimum flush delay
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithMinFlushDelay(minFlushDelay As TimeSpan) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithMinFlushDelay*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithPrepareTimeout(TimeSpan)
  commentId: M:EventStore.Core.VNodeBuilder.WithPrepareTimeout(TimeSpan)
  id: WithPrepareTimeout(TimeSpan)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithPrepareTimeout(TimeSpan)
  nameWithType: VNodeBuilder.WithPrepareTimeout(TimeSpan)
  fullName: EventStore.Core.VNodeBuilder.WithPrepareTimeout(TimeSpan)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithPrepareTimeout
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 821
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the prepare timeout \n"
  example: []
  syntax:
    content: public VNodeBuilder WithPrepareTimeout(TimeSpan prepareTimeout)
    parameters:
    - id: prepareTimeout
      type: TimeSpan
      description: The prepare timeout
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithPrepareTimeout(prepareTimeout As TimeSpan) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithPrepareTimeout*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithCommitTimeout(TimeSpan)
  commentId: M:EventStore.Core.VNodeBuilder.WithCommitTimeout(TimeSpan)
  id: WithCommitTimeout(TimeSpan)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithCommitTimeout(TimeSpan)
  nameWithType: VNodeBuilder.WithCommitTimeout(TimeSpan)
  fullName: EventStore.Core.VNodeBuilder.WithCommitTimeout(TimeSpan)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithCommitTimeout
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 832
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the commit timeout \n"
  example: []
  syntax:
    content: public VNodeBuilder WithCommitTimeout(TimeSpan commitTimeout)
    parameters:
    - id: commitTimeout
      type: TimeSpan
      description: The commit timeout
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithCommitTimeout(commitTimeout As TimeSpan) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithCommitTimeout*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithStatsPeriod(TimeSpan)
  commentId: M:EventStore.Core.VNodeBuilder.WithStatsPeriod(TimeSpan)
  id: WithStatsPeriod(TimeSpan)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithStatsPeriod(TimeSpan)
  nameWithType: VNodeBuilder.WithStatsPeriod(TimeSpan)
  fullName: EventStore.Core.VNodeBuilder.WithStatsPeriod(TimeSpan)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithStatsPeriod
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 843
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the period between statistics gathers\n"
  example: []
  syntax:
    content: public VNodeBuilder WithStatsPeriod(TimeSpan statsPeriod)
    parameters:
    - id: statsPeriod
      type: TimeSpan
      description: The period between statistics gathers
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithStatsPeriod(statsPeriod As TimeSpan) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithStatsPeriod*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithStatsStorage(EventStore.Core.Services.Monitoring.StatsStorage)
  commentId: M:EventStore.Core.VNodeBuilder.WithStatsStorage(EventStore.Core.Services.Monitoring.StatsStorage)
  id: WithStatsStorage(EventStore.Core.Services.Monitoring.StatsStorage)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithStatsStorage(StatsStorage)
  nameWithType: VNodeBuilder.WithStatsStorage(StatsStorage)
  fullName: EventStore.Core.VNodeBuilder.WithStatsStorage(EventStore.Core.Services.Monitoring.StatsStorage)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithStatsStorage
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 854
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets how stats are stored. Default is Stream\n"
  example: []
  syntax:
    content: public VNodeBuilder WithStatsStorage(StatsStorage statsStorage)
    parameters:
    - id: statsStorage
      type: EventStore.Core.Services.Monitoring.StatsStorage
      description: The storage method to use
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithStatsStorage(statsStorage As StatsStorage) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithStatsStorage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithPrepareCount(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.WithPrepareCount(System.Int32)
  id: WithPrepareCount(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithPrepareCount(Int32)
  nameWithType: VNodeBuilder.WithPrepareCount(Int32)
  fullName: EventStore.Core.VNodeBuilder.WithPrepareCount(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithPrepareCount
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 866
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the number of nodes which must acknowledge prepares. \nThe minimum allowed value is one greater than half the cluster size.\n"
  example: []
  syntax:
    content: public VNodeBuilder WithPrepareCount(int prepareCount)
    parameters:
    - id: prepareCount
      type: System.Int32
      description: The number of nodes which must acknowledge prepares
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithPrepareCount(prepareCount As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithPrepareCount*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithCommitCount(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.WithCommitCount(System.Int32)
  id: WithCommitCount(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithCommitCount(Int32)
  nameWithType: VNodeBuilder.WithCommitCount(Int32)
  fullName: EventStore.Core.VNodeBuilder.WithCommitCount(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithCommitCount
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 878
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the number of nodes which must acknowledge commits before acknowledging to a client.  \nThe minimum allowed value is one greater than half the cluster size.\n"
  example: []
  syntax:
    content: public VNodeBuilder WithCommitCount(int commitCount)
    parameters:
    - id: commitCount
      type: System.Int32
      description: The number of nodes which must acknowledge commits
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithCommitCount(commitCount As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithCommitCount*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithNodePriority(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.WithNodePriority(System.Int32)
  id: WithNodePriority(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithNodePriority(Int32)
  nameWithType: VNodeBuilder.WithNodePriority(Int32)
  fullName: EventStore.Core.VNodeBuilder.WithNodePriority(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithNodePriority
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 889
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the node priority used during master election\n"
  example: []
  syntax:
    content: public VNodeBuilder WithNodePriority(int nodePriority)
    parameters:
    - id: nodePriority
      type: System.Int32
      description: The node priority used during master election
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithNodePriority(nodePriority As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithNodePriority*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.DisableScavengeMerging
  commentId: M:EventStore.Core.VNodeBuilder.DisableScavengeMerging
  id: DisableScavengeMerging
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: DisableScavengeMerging()
  nameWithType: VNodeBuilder.DisableScavengeMerging()
  fullName: EventStore.Core.VNodeBuilder.DisableScavengeMerging()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DisableScavengeMerging
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 899
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nDisables the merging of chunks when scavenge is running \n"
  example: []
  syntax:
    content: public VNodeBuilder DisableScavengeMerging()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function DisableScavengeMerging As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.DisableScavengeMerging*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithScavengeHistoryMaxAge(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.WithScavengeHistoryMaxAge(System.Int32)
  id: WithScavengeHistoryMaxAge(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithScavengeHistoryMaxAge(Int32)
  nameWithType: VNodeBuilder.WithScavengeHistoryMaxAge(Int32)
  fullName: EventStore.Core.VNodeBuilder.WithScavengeHistoryMaxAge(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithScavengeHistoryMaxAge
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 910
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nThe number of days to keep scavenge history (Default: 30)\n"
  example: []
  syntax:
    content: public VNodeBuilder WithScavengeHistoryMaxAge(int scavengeHistoryMaxAge)
    parameters:
    - id: scavengeHistoryMaxAge
      type: System.Int32
      description: The number of days to keep scavenge history
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithScavengeHistoryMaxAge(scavengeHistoryMaxAge As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithScavengeHistoryMaxAge*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithIndexPath(System.String)
  commentId: M:EventStore.Core.VNodeBuilder.WithIndexPath(System.String)
  id: WithIndexPath(System.String)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithIndexPath(String)
  nameWithType: VNodeBuilder.WithIndexPath(String)
  fullName: EventStore.Core.VNodeBuilder.WithIndexPath(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithIndexPath
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 921
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the path the index should be loaded/saved to\n"
  example: []
  syntax:
    content: public VNodeBuilder WithIndexPath(string indexPath)
    parameters:
    - id: indexPath
      type: System.String
      description: The index path
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithIndexPath(indexPath As String) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithIndexPath*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.EnableLoggingOfHttpRequests
  commentId: M:EventStore.Core.VNodeBuilder.EnableLoggingOfHttpRequests
  id: EnableLoggingOfHttpRequests
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: EnableLoggingOfHttpRequests()
  nameWithType: VNodeBuilder.EnableLoggingOfHttpRequests()
  fullName: EventStore.Core.VNodeBuilder.EnableLoggingOfHttpRequests()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EnableLoggingOfHttpRequests
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 931
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nEnable logging of Http Requests and Responses before they are processed\n"
  example: []
  syntax:
    content: public VNodeBuilder EnableLoggingOfHttpRequests()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function EnableLoggingOfHttpRequests As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.EnableLoggingOfHttpRequests*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.EnableHistograms
  commentId: M:EventStore.Core.VNodeBuilder.EnableHistograms
  id: EnableHistograms
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: EnableHistograms()
  nameWithType: VNodeBuilder.EnableHistograms()
  fullName: EventStore.Core.VNodeBuilder.EnableHistograms()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EnableHistograms
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 941
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nEnable the tracking of various histograms in the backend, typically only used for debugging\n"
  example: []
  syntax:
    content: public VNodeBuilder EnableHistograms()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function EnableHistograms As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.EnableHistograms*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithIndexVerification(System.Boolean)
  commentId: M:EventStore.Core.VNodeBuilder.WithIndexVerification(System.Boolean)
  id: WithIndexVerification(System.Boolean)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithIndexVerification(Boolean)
  nameWithType: VNodeBuilder.WithIndexVerification(Boolean)
  fullName: EventStore.Core.VNodeBuilder.WithIndexVerification(System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithIndexVerification
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 952
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nVerifies the index integrity using the specified method on startup\n"
  example: []
  syntax:
    content: public VNodeBuilder WithIndexVerification(bool skipIndexVerify)
    parameters:
    - id: skipIndexVerify
      type: System.Boolean
      description: The index verification method
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithIndexVerification(skipIndexVerify As Boolean) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithIndexVerification*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithIndexCacheDepth(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.WithIndexCacheDepth(System.Int32)
  id: WithIndexCacheDepth(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithIndexCacheDepth(Int32)
  nameWithType: VNodeBuilder.WithIndexCacheDepth(Int32)
  fullName: EventStore.Core.VNodeBuilder.WithIndexCacheDepth(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithIndexCacheDepth
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 963
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the depth to cache for the mid point cache in index\n"
  example: []
  syntax:
    content: public VNodeBuilder WithIndexCacheDepth(int indexCacheDepth)
    parameters:
    - id: indexCacheDepth
      type: System.Int32
      description: The index cache depth
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithIndexCacheDepth(indexCacheDepth As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithIndexCacheDepth*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithUnsafeIgnoreHardDelete
  commentId: M:EventStore.Core.VNodeBuilder.WithUnsafeIgnoreHardDelete
  id: WithUnsafeIgnoreHardDelete
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithUnsafeIgnoreHardDelete()
  nameWithType: VNodeBuilder.WithUnsafeIgnoreHardDelete()
  fullName: EventStore.Core.VNodeBuilder.WithUnsafeIgnoreHardDelete()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithUnsafeIgnoreHardDelete
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 973
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nDisables Hard Deletes (UNSAFE: use to remove hard deletes)\n"
  example: []
  syntax:
    content: public VNodeBuilder WithUnsafeIgnoreHardDelete()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithUnsafeIgnoreHardDelete As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithUnsafeIgnoreHardDelete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithUnsafeDisableFlushToDisk
  commentId: M:EventStore.Core.VNodeBuilder.WithUnsafeDisableFlushToDisk
  id: WithUnsafeDisableFlushToDisk
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithUnsafeDisableFlushToDisk()
  nameWithType: VNodeBuilder.WithUnsafeDisableFlushToDisk()
  fullName: EventStore.Core.VNodeBuilder.WithUnsafeDisableFlushToDisk()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithUnsafeDisableFlushToDisk
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 983
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nDisables Hard Deletes (UNSAFE: use to remove hard deletes)\n"
  example: []
  syntax:
    content: public VNodeBuilder WithUnsafeDisableFlushToDisk()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithUnsafeDisableFlushToDisk As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithUnsafeDisableFlushToDisk*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithBetterOrdering
  commentId: M:EventStore.Core.VNodeBuilder.WithBetterOrdering
  id: WithBetterOrdering
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithBetterOrdering()
  nameWithType: VNodeBuilder.WithBetterOrdering()
  fullName: EventStore.Core.VNodeBuilder.WithBetterOrdering()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithBetterOrdering
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 993
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nEnable Queue affinity on reads during write process to try to get better ordering.\n"
  example: []
  syntax:
    content: public VNodeBuilder WithBetterOrdering()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithBetterOrdering As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithBetterOrdering*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.EnableTrustedAuth
  commentId: M:EventStore.Core.VNodeBuilder.EnableTrustedAuth
  id: EnableTrustedAuth
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: EnableTrustedAuth()
  nameWithType: VNodeBuilder.EnableTrustedAuth()
  fullName: EventStore.Core.VNodeBuilder.EnableTrustedAuth()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EnableTrustedAuth
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1003
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nEnable trusted authentication by an intermediary in the HTTP\n"
  example: []
  syntax:
    content: public VNodeBuilder EnableTrustedAuth()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function EnableTrustedAuth As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.EnableTrustedAuth*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithAuthenticationProvider(EventStore.Core.Authentication.IAuthenticationProviderFactory)
  commentId: M:EventStore.Core.VNodeBuilder.WithAuthenticationProvider(EventStore.Core.Authentication.IAuthenticationProviderFactory)
  id: WithAuthenticationProvider(EventStore.Core.Authentication.IAuthenticationProviderFactory)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithAuthenticationProvider(IAuthenticationProviderFactory)
  nameWithType: VNodeBuilder.WithAuthenticationProvider(IAuthenticationProviderFactory)
  fullName: EventStore.Core.VNodeBuilder.WithAuthenticationProvider(EventStore.Core.Authentication.IAuthenticationProviderFactory)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithAuthenticationProvider
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1014
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the authentication provider factory to use\n"
  example: []
  syntax:
    content: public VNodeBuilder WithAuthenticationProvider(IAuthenticationProviderFactory authenticationProviderFactory)
    parameters:
    - id: authenticationProviderFactory
      type: EventStore.Core.Authentication.IAuthenticationProviderFactory
      description: 'The authentication provider factory to use '
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithAuthenticationProvider(authenticationProviderFactory As IAuthenticationProviderFactory) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithAuthenticationProvider*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.EnableUnbuffered
  commentId: M:EventStore.Core.VNodeBuilder.EnableUnbuffered
  id: EnableUnbuffered
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: EnableUnbuffered()
  nameWithType: VNodeBuilder.EnableUnbuffered()
  fullName: EventStore.Core.VNodeBuilder.EnableUnbuffered()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EnableUnbuffered
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1024
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets whether or not to use unbuffered/directio\n"
  example: []
  syntax:
    content: public VNodeBuilder EnableUnbuffered()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function EnableUnbuffered As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.EnableUnbuffered*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.EnableWriteThrough
  commentId: M:EventStore.Core.VNodeBuilder.EnableWriteThrough
  id: EnableWriteThrough
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: EnableWriteThrough()
  nameWithType: VNodeBuilder.EnableWriteThrough()
  fullName: EventStore.Core.VNodeBuilder.EnableWriteThrough()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EnableWriteThrough
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1034
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets whether or not to set the write-through flag on writes to the filesystem\n"
  example: []
  syntax:
    content: public VNodeBuilder EnableWriteThrough()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function EnableWriteThrough As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.EnableWriteThrough*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithChunkInitialReaderCount(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.WithChunkInitialReaderCount(System.Int32)
  id: WithChunkInitialReaderCount(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithChunkInitialReaderCount(Int32)
  nameWithType: VNodeBuilder.WithChunkInitialReaderCount(Int32)
  fullName: EventStore.Core.VNodeBuilder.WithChunkInitialReaderCount(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithChunkInitialReaderCount
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1045
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the initial number of readers to open per TFChunk\n"
  example: []
  syntax:
    content: public VNodeBuilder WithChunkInitialReaderCount(int chunkInitialReaderCount)
    parameters:
    - id: chunkInitialReaderCount
      type: System.Int32
      description: The initial number of readers to open per TFChunk
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithChunkInitialReaderCount(chunkInitialReaderCount As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithChunkInitialReaderCount*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithServerCertificate(X509Certificate2)
  commentId: M:EventStore.Core.VNodeBuilder.WithServerCertificate(X509Certificate2)
  id: WithServerCertificate(X509Certificate2)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithServerCertificate(X509Certificate2)
  nameWithType: VNodeBuilder.WithServerCertificate(X509Certificate2)
  fullName: EventStore.Core.VNodeBuilder.WithServerCertificate(X509Certificate2)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithServerCertificate
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1056
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the Server SSL Certificate\n"
  example: []
  syntax:
    content: public VNodeBuilder WithServerCertificate(X509Certificate2 sslCertificate)
    parameters:
    - id: sslCertificate
      type: X509Certificate2
      description: The server SSL certificate to use
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithServerCertificate(sslCertificate As X509Certificate2) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithServerCertificate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithServerCertificateFromStore(StoreLocation,StoreName,System.String,System.String)
  commentId: M:EventStore.Core.VNodeBuilder.WithServerCertificateFromStore(StoreLocation,StoreName,System.String,System.String)
  id: WithServerCertificateFromStore(StoreLocation,StoreName,System.String,System.String)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithServerCertificateFromStore(StoreLocation, StoreName, String, String)
  nameWithType: VNodeBuilder.WithServerCertificateFromStore(StoreLocation, StoreName, String, String)
  fullName: EventStore.Core.VNodeBuilder.WithServerCertificateFromStore(StoreLocation, StoreName, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithServerCertificateFromStore
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1070
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the Server SSL Certificate to be loaded from a certificate store\n"
  example: []
  syntax:
    content: public VNodeBuilder WithServerCertificateFromStore(StoreLocation storeLocation, StoreName storeName, string certificateSubjectName, string certificateThumbprint)
    parameters:
    - id: storeLocation
      type: StoreLocation
      description: The location of the certificate store
    - id: storeName
      type: StoreName
      description: The name of the certificate store
    - id: certificateSubjectName
      type: System.String
      description: The subject name of the certificate
    - id: certificateThumbprint
      type: System.String
      description: The thumbpreint of the certificate
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithServerCertificateFromStore(storeLocation As StoreLocation, storeName As StoreName, certificateSubjectName As String, certificateThumbprint As String) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithServerCertificateFromStore*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithServerCertificateFromStore(StoreName,System.String,System.String)
  commentId: M:EventStore.Core.VNodeBuilder.WithServerCertificateFromStore(StoreName,System.String,System.String)
  id: WithServerCertificateFromStore(StoreName,System.String,System.String)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithServerCertificateFromStore(StoreName, String, String)
  nameWithType: VNodeBuilder.WithServerCertificateFromStore(StoreName, String, String)
  fullName: EventStore.Core.VNodeBuilder.WithServerCertificateFromStore(StoreName, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithServerCertificateFromStore
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1084
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the Server SSL Certificate to be loaded from a certificate store\n"
  example: []
  syntax:
    content: public VNodeBuilder WithServerCertificateFromStore(StoreName storeName, string certificateSubjectName, string certificateThumbprint)
    parameters:
    - id: storeName
      type: StoreName
      description: The name of the certificate store
    - id: certificateSubjectName
      type: System.String
      description: The subject name of the certificate
    - id: certificateThumbprint
      type: System.String
      description: The thumbpreint of the certificate
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithServerCertificateFromStore(storeName As StoreName, certificateSubjectName As String, certificateThumbprint As String) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithServerCertificateFromStore*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithTfChunkSize(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.WithTfChunkSize(System.Int32)
  id: WithTfChunkSize(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithTfChunkSize(Int32)
  nameWithType: VNodeBuilder.WithTfChunkSize(Int32)
  fullName: EventStore.Core.VNodeBuilder.WithTfChunkSize(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithTfChunkSize
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1137
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the transaction file chunk size. Default is <xref href=\"EventStore.Core.TransactionLog.Chunks.TFConsts.ChunkSize\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public VNodeBuilder WithTfChunkSize(int chunkSize)
    parameters:
    - id: chunkSize
      type: System.Int32
      description: The size of the chunk, in bytes
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithTfChunkSize(chunkSize As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithTfChunkSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithTfChunksCacheSize(System.Int64)
  commentId: M:EventStore.Core.VNodeBuilder.WithTfChunksCacheSize(System.Int64)
  id: WithTfChunksCacheSize(System.Int64)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithTfChunksCacheSize(Int64)
  nameWithType: VNodeBuilder.WithTfChunksCacheSize(Int64)
  fullName: EventStore.Core.VNodeBuilder.WithTfChunksCacheSize(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithTfChunksCacheSize
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1149
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the transaction file chunk cache size. Default is <xref href=\"EventStore.Core.TransactionLog.Chunks.TFConsts.ChunksCacheSize\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public VNodeBuilder WithTfChunksCacheSize(long chunksCacheSize)
    parameters:
    - id: chunksCacheSize
      type: System.Int64
      description: The size of the cache
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithTfChunksCacheSize(chunksCacheSize As Long) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithTfChunksCacheSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithTfCachedChunks(System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.WithTfCachedChunks(System.Int32)
  id: WithTfCachedChunks(System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithTfCachedChunks(Int32)
  nameWithType: VNodeBuilder.WithTfCachedChunks(Int32)
  fullName: EventStore.Core.VNodeBuilder.WithTfCachedChunks(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithTfCachedChunks
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1162
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nThe number of chunks to cache in unmanaged memory.        \n"
  example: []
  syntax:
    content: public VNodeBuilder WithTfCachedChunks(int cachedChunks)
    parameters:
    - id: cachedChunks
      type: System.Int32
      description: The number of chunks to cache
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithTfCachedChunks(cachedChunks As Integer) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithTfCachedChunks*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.WithIndexBitnessVersion(System.Byte)
  commentId: M:EventStore.Core.VNodeBuilder.WithIndexBitnessVersion(System.Byte)
  id: WithIndexBitnessVersion(System.Byte)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: WithIndexBitnessVersion(Byte)
  nameWithType: VNodeBuilder.WithIndexBitnessVersion(Byte)
  fullName: EventStore.Core.VNodeBuilder.WithIndexBitnessVersion(System.Byte)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WithIndexBitnessVersion
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1174
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nThe bitness version of the indexes\n"
  example: []
  syntax:
    content: public VNodeBuilder WithIndexBitnessVersion(byte indexBitnessVersion)
    parameters:
    - id: indexBitnessVersion
      type: System.Byte
      description: The version of the bitness <xref href="EventStore.Core.Index.PTableVersions" data-throw-if-not-resolved="false"></xref>
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function WithIndexBitnessVersion(indexBitnessVersion As Byte) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.WithIndexBitnessVersion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.AlwaysKeepScavenged
  commentId: M:EventStore.Core.VNodeBuilder.AlwaysKeepScavenged
  id: AlwaysKeepScavenged
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: AlwaysKeepScavenged()
  nameWithType: VNodeBuilder.AlwaysKeepScavenged()
  fullName: EventStore.Core.VNodeBuilder.AlwaysKeepScavenged()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AlwaysKeepScavenged
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1184
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nThe newer chunks during a scavenge are always kept\n"
  example: []
  syntax:
    content: public VNodeBuilder AlwaysKeepScavenged()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function AlwaysKeepScavenged As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.AlwaysKeepScavenged*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.SkipIndexScanOnReads
  commentId: M:EventStore.Core.VNodeBuilder.SkipIndexScanOnReads
  id: SkipIndexScanOnReads
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: SkipIndexScanOnReads()
  nameWithType: VNodeBuilder.SkipIndexScanOnReads()
  fullName: EventStore.Core.VNodeBuilder.SkipIndexScanOnReads()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SkipIndexScanOnReads
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1194
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSkip index scan on reads.\n"
  example: []
  syntax:
    content: public VNodeBuilder SkipIndexScanOnReads()
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function SkipIndexScanOnReads As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.SkipIndexScanOnReads*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.VNodeBuilder.SetUpProjectionsIfNeeded
  commentId: M:EventStore.Core.VNodeBuilder.SetUpProjectionsIfNeeded
  id: SetUpProjectionsIfNeeded
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: SetUpProjectionsIfNeeded()
  nameWithType: VNodeBuilder.SetUpProjectionsIfNeeded()
  fullName: EventStore.Core.VNodeBuilder.SetUpProjectionsIfNeeded()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SetUpProjectionsIfNeeded
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1294
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: protected abstract void SetUpProjectionsIfNeeded()
    content.vb: Protected MustOverride Sub SetUpProjectionsIfNeeded
  overload: EventStore.Core.VNodeBuilder.SetUpProjectionsIfNeeded*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: EventStore.Core.VNodeBuilder.op_Implicit(EventStore.Core.VNodeBuilder)~EventStore.Core.ClusterVNode
  commentId: M:EventStore.Core.VNodeBuilder.op_Implicit(EventStore.Core.VNodeBuilder)~EventStore.Core.ClusterVNode
  id: op_Implicit(EventStore.Core.VNodeBuilder)~EventStore.Core.ClusterVNode
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: Implicit(VNodeBuilder to ClusterVNode)
  nameWithType: VNodeBuilder.Implicit(VNodeBuilder to ClusterVNode)
  fullName: EventStore.Core.VNodeBuilder.Implicit(EventStore.Core.VNodeBuilder to EventStore.Core.ClusterVNode)
  type: Operator
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: op_Implicit
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1301
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nConverts an <xref href=\"EventStore.Core.VNodeBuilder\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"EventStore.Core.ClusterVNode\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static implicit operator ClusterVNode(VNodeBuilder builder)
    parameters:
    - id: builder
      type: EventStore.Core.VNodeBuilder
      description: ''
    return:
      type: EventStore.Core.ClusterVNode
      description: A <xref href="EventStore.Core.ClusterVNode" data-throw-if-not-resolved="false"></xref> built with the options that were set on the <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Widening Operator CType(builder As VNodeBuilder) As ClusterVNode
  overload: EventStore.Core.VNodeBuilder.op_Implicit*
  nameWithType.vb: VNodeBuilder.Widening(VNodeBuilder to ClusterVNode)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.VNodeBuilder.Widening(EventStore.Core.VNodeBuilder to EventStore.Core.ClusterVNode)
  name.vb: Widening(VNodeBuilder to ClusterVNode)
- uid: EventStore.Core.VNodeBuilder.Build(EventStore.Common.Options.IOptions,EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory[])
  commentId: M:EventStore.Core.VNodeBuilder.Build(EventStore.Common.Options.IOptions,EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory[])
  id: Build(EventStore.Common.Options.IOptions,EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory[])
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: Build(IOptions, IPersistentSubscriptionConsumerStrategyFactory[])
  nameWithType: VNodeBuilder.Build(IOptions, IPersistentSubscriptionConsumerStrategyFactory[])
  fullName: EventStore.Core.VNodeBuilder.Build(EventStore.Common.Options.IOptions, EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Build
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1312
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nConverts an <xref href=\"EventStore.Core.VNodeBuilder\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"EventStore.Core.ClusterVNode\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ClusterVNode Build(IOptions options = null, IPersistentSubscriptionConsumerStrategyFactory[] consumerStrategies = null)
    parameters:
    - id: options
      type: EventStore.Common.Options.IOptions
      description: The options with which to build the infoController
    - id: consumerStrategies
      type: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory[]
      description: The consumer strategies with which to build the node
    return:
      type: EventStore.Core.ClusterVNode
      description: A <xref href="EventStore.Core.ClusterVNode" data-throw-if-not-resolved="false"></xref> built with the options that were set on the <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function Build(options As IOptions = Nothing, consumerStrategies As IPersistentSubscriptionConsumerStrategyFactory() = Nothing) As ClusterVNode
  overload: EventStore.Core.VNodeBuilder.Build*
  nameWithType.vb: VNodeBuilder.Build(IOptions, IPersistentSubscriptionConsumerStrategyFactory())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.VNodeBuilder.Build(EventStore.Common.Options.IOptions, EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory())
  name.vb: Build(IOptions, IPersistentSubscriptionConsumerStrategyFactory())
- uid: EventStore.Core.VNodeBuilder.RunProjections(EventStore.ClientAPI.Embedded.ProjectionsMode,System.Int32)
  commentId: M:EventStore.Core.VNodeBuilder.RunProjections(EventStore.ClientAPI.Embedded.ProjectionsMode,System.Int32)
  id: RunProjections(EventStore.ClientAPI.Embedded.ProjectionsMode,System.Int32)
  parent: EventStore.Core.VNodeBuilder
  langs:
  - csharp
  - vb
  name: RunProjections(ProjectionsMode, Int32)
  nameWithType: VNodeBuilder.RunProjections(ProjectionsMode, Int32)
  fullName: EventStore.Core.VNodeBuilder.RunProjections(EventStore.ClientAPI.Embedded.ProjectionsMode, System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/VNodeBuilder.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RunProjections
    path: ../EventStore/src/EventStore.Core/VNodeBuilder.cs
    startLine: 1521
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  summary: "\nSets the mode and the number of threads on which to run projections.\n"
  example: []
  syntax:
    content: public VNodeBuilder RunProjections(ProjectionsMode projectionsMode, int numberOfThreads = null)
    parameters:
    - id: projectionsMode
      type: EventStore.ClientAPI.Embedded.ProjectionsMode
      description: The mode in which to run the projections system
    - id: numberOfThreads
      type: System.Int32
      description: The number of threads to use for projections. Defaults to 3.
    return:
      type: EventStore.Core.VNodeBuilder
      description: A <xref href="EventStore.Core.VNodeBuilder" data-throw-if-not-resolved="false"></xref> with the options set
    content.vb: Public Function RunProjections(projectionsMode As ProjectionsMode, numberOfThreads As Integer = Nothing) As VNodeBuilder
  overload: EventStore.Core.VNodeBuilder.RunProjections*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.ClusterVNode
  commentId: T:EventStore.Core.ClusterVNode
  parent: EventStore.Core
  isExternal: false
  name: ClusterVNode
  nameWithType: ClusterVNode
  fullName: EventStore.Core.ClusterVNode
- uid: EventStore.Core
  commentId: N:EventStore.Core
  isExternal: false
  name: EventStore.Core
  nameWithType: EventStore.Core
  fullName: EventStore.Core
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.VNodeBuilder.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<VNodeBuilder>()
  nameWithType: ProtobufExtensions.Serialize<VNodeBuilder>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.VNodeBuilder>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of VNodeBuilder)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.VNodeBuilder)()
  name.vb: Serialize(Of VNodeBuilder)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<VNodeBuilder>
    nameWithType: ProtobufExtensions.Serialize<VNodeBuilder>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.VNodeBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of VNodeBuilder)
    nameWithType: ProtobufExtensions.Serialize(Of VNodeBuilder)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.VNodeBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.VNodeBuilder.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<VNodeBuilder>()
  nameWithType: ProtobufExtensions.SerializeToArray<VNodeBuilder>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.VNodeBuilder>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of VNodeBuilder)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.VNodeBuilder)()
  name.vb: SerializeToArray(Of VNodeBuilder)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<VNodeBuilder>
    nameWithType: ProtobufExtensions.SerializeToArray<VNodeBuilder>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.VNodeBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of VNodeBuilder)
    nameWithType: ProtobufExtensions.SerializeToArray(Of VNodeBuilder)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.VNodeBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Common.Log.ILogger
  commentId: T:EventStore.Common.Log.ILogger
  parent: EventStore.Common.Log
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: EventStore.Common.Log.ILogger
- uid: EventStore.Common.Log
  commentId: N:EventStore.Common.Log
  isExternal: false
  name: EventStore.Common.Log
  nameWithType: EventStore.Common.Log
  fullName: EventStore.Common.Log
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: IPEndPoint
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: IPEndPoint
- uid: List{System.String}
  commentId: '!:List{System.String}'
  definition: List`1
  name: List<String>
  nameWithType: List<String>
  fullName: List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: X509Certificate2
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: X509Certificate2
- uid: List{IPEndPoint}
  commentId: '!:List{IPEndPoint}'
  definition: List`1
  name: List<IPEndPoint>
  nameWithType: List<IPEndPoint>
  fullName: List<IPEndPoint>
  nameWithType.vb: List(Of IPEndPoint)
  fullName.vb: List(Of IPEndPoint)
  name.vb: List(Of IPEndPoint)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: IPEndPoint
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: IPEndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan
- uid: EventStore.Core.Services.Monitoring.StatsStorage
  commentId: T:EventStore.Core.Services.Monitoring.StatsStorage
  parent: EventStore.Core.Services.Monitoring
  isExternal: false
  name: StatsStorage
  nameWithType: StatsStorage
  fullName: EventStore.Core.Services.Monitoring.StatsStorage
- uid: EventStore.Core.Services.Monitoring
  commentId: N:EventStore.Core.Services.Monitoring
  isExternal: false
  name: EventStore.Core.Services.Monitoring
  nameWithType: EventStore.Core.Services.Monitoring
  fullName: EventStore.Core.Services.Monitoring
- uid: EventStore.Core.Authentication.IAuthenticationProviderFactory
  commentId: T:EventStore.Core.Authentication.IAuthenticationProviderFactory
  parent: EventStore.Core.Authentication
  isExternal: false
  name: IAuthenticationProviderFactory
  nameWithType: IAuthenticationProviderFactory
  fullName: EventStore.Core.Authentication.IAuthenticationProviderFactory
- uid: EventStore.Core.Authentication
  commentId: N:EventStore.Core.Authentication
  isExternal: false
  name: EventStore.Core.Authentication
  nameWithType: EventStore.Core.Authentication
  fullName: EventStore.Core.Authentication
- uid: EventStore.Core.Data.GossipAdvertiseInfo
  commentId: T:EventStore.Core.Data.GossipAdvertiseInfo
  parent: EventStore.Core.Data
  isExternal: false
  name: GossipAdvertiseInfo
  nameWithType: GossipAdvertiseInfo
  fullName: EventStore.Core.Data.GossipAdvertiseInfo
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  isExternal: false
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: List{EventStore.Core.ISubsystem}
  commentId: '!:List{EventStore.Core.ISubsystem}'
  definition: List`1
  name: List<ISubsystem>
  nameWithType: List<ISubsystem>
  fullName: List<EventStore.Core.ISubsystem>
  nameWithType.vb: List(Of ISubsystem)
  fullName.vb: List(Of EventStore.Core.ISubsystem)
  name.vb: List(Of ISubsystem)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.ISubsystem
    name: ISubsystem
    nameWithType: ISubsystem
    fullName: EventStore.Core.ISubsystem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.ISubsystem
    name: ISubsystem
    nameWithType: ISubsystem
    fullName: EventStore.Core.ISubsystem
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Options.ProjectionType
  commentId: T:EventStore.Common.Options.ProjectionType
  parent: EventStore.Common.Options
  isExternal: false
  name: ProjectionType
  nameWithType: ProjectionType
  fullName: EventStore.Common.Options.ProjectionType
- uid: EventStore.Common.Options
  commentId: N:EventStore.Common.Options
  isExternal: false
  name: EventStore.Common.Options
  nameWithType: EventStore.Common.Options
  fullName: EventStore.Common.Options
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDb
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkDb
  parent: EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: TFChunkDb
  nameWithType: TFChunkDb
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDb
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: EventStore.Core.Cluster.Settings.ClusterVNodeSettings
  commentId: T:EventStore.Core.Cluster.Settings.ClusterVNodeSettings
  parent: EventStore.Core.Cluster.Settings
  isExternal: false
  name: ClusterVNodeSettings
  nameWithType: ClusterVNodeSettings
  fullName: EventStore.Core.Cluster.Settings.ClusterVNodeSettings
- uid: EventStore.Core.Cluster.Settings
  commentId: N:EventStore.Core.Cluster.Settings
  isExternal: false
  name: EventStore.Core.Cluster.Settings
  nameWithType: EventStore.Core.Cluster.Settings
  fullName: EventStore.Core.Cluster.Settings
- uid: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  commentId: T:EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
  parent: EventStore.Core.TransactionLog.Chunks
  isExternal: false
  name: TFChunkDbConfig
  nameWithType: TFChunkDbConfig
  fullName: EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig
- uid: System.Byte
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: EventStore.Core.VNodeBuilder.#ctor*
  commentId: Overload:EventStore.Core.VNodeBuilder.#ctor
  isExternal: false
  name: VNodeBuilder
  nameWithType: VNodeBuilder.VNodeBuilder
  fullName: EventStore.Core.VNodeBuilder.VNodeBuilder
- uid: EventStore.Core.VNodeBuilder.WithSingleNodeSettings*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithSingleNodeSettings
  isExternal: false
  name: WithSingleNodeSettings
  nameWithType: VNodeBuilder.WithSingleNodeSettings
  fullName: EventStore.Core.VNodeBuilder.WithSingleNodeSettings
- uid: EventStore.Core.VNodeBuilder
  commentId: T:EventStore.Core.VNodeBuilder
  parent: EventStore.Core
  isExternal: false
  name: VNodeBuilder
  nameWithType: VNodeBuilder
  fullName: EventStore.Core.VNodeBuilder
- uid: EventStore.Core.VNodeBuilder.WithClusterNodeSettings*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithClusterNodeSettings
  isExternal: false
  name: WithClusterNodeSettings
  nameWithType: VNodeBuilder.WithClusterNodeSettings
  fullName: EventStore.Core.VNodeBuilder.WithClusterNodeSettings
- uid: EventStore.Core.VNodeBuilder.StartStandardProjections*
  commentId: Overload:EventStore.Core.VNodeBuilder.StartStandardProjections
  isExternal: false
  name: StartStandardProjections
  nameWithType: VNodeBuilder.StartStandardProjections
  fullName: EventStore.Core.VNodeBuilder.StartStandardProjections
- uid: EventStore.Core.VNodeBuilder.DisableHTTPCaching*
  commentId: Overload:EventStore.Core.VNodeBuilder.DisableHTTPCaching
  isExternal: false
  name: DisableHTTPCaching
  nameWithType: VNodeBuilder.DisableHTTPCaching
  fullName: EventStore.Core.VNodeBuilder.DisableHTTPCaching
- uid: EventStore.Core.VNodeBuilder.RunProjections*
  commentId: Overload:EventStore.Core.VNodeBuilder.RunProjections
  isExternal: false
  name: RunProjections
  nameWithType: VNodeBuilder.RunProjections
  fullName: EventStore.Core.VNodeBuilder.RunProjections
- uid: EventStore.Core.VNodeBuilder.WithProjectionQueryExpirationOf*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithProjectionQueryExpirationOf
  isExternal: false
  name: WithProjectionQueryExpirationOf
  nameWithType: VNodeBuilder.WithProjectionQueryExpirationOf
  fullName: EventStore.Core.VNodeBuilder.WithProjectionQueryExpirationOf
- uid: EventStore.Core.VNodeBuilder.AddCustomSubsystem*
  commentId: Overload:EventStore.Core.VNodeBuilder.AddCustomSubsystem
  isExternal: false
  name: AddCustomSubsystem
  nameWithType: VNodeBuilder.AddCustomSubsystem
  fullName: EventStore.Core.VNodeBuilder.AddCustomSubsystem
- uid: EventStore.Core.ISubsystem
  commentId: T:EventStore.Core.ISubsystem
  parent: EventStore.Core
  isExternal: false
  name: ISubsystem
  nameWithType: ISubsystem
  fullName: EventStore.Core.ISubsystem
- uid: EventStore.Core.VNodeBuilder.RunInMemory*
  commentId: Overload:EventStore.Core.VNodeBuilder.RunInMemory
  isExternal: false
  name: RunInMemory
  nameWithType: VNodeBuilder.RunInMemory
  fullName: EventStore.Core.VNodeBuilder.RunInMemory
- uid: EventStore.Core.VNodeBuilder.RunOnDisk*
  commentId: Overload:EventStore.Core.VNodeBuilder.RunOnDisk
  isExternal: false
  name: RunOnDisk
  nameWithType: VNodeBuilder.RunOnDisk
  fullName: EventStore.Core.VNodeBuilder.RunOnDisk
- uid: EventStore.Core.VNodeBuilder.OnDefaultEndpoints*
  commentId: Overload:EventStore.Core.VNodeBuilder.OnDefaultEndpoints
  isExternal: false
  name: OnDefaultEndpoints
  nameWithType: VNodeBuilder.OnDefaultEndpoints
  fullName: EventStore.Core.VNodeBuilder.OnDefaultEndpoints
- uid: EventStore.Core.VNodeBuilder.AdvertiseInternalIPAs*
  commentId: Overload:EventStore.Core.VNodeBuilder.AdvertiseInternalIPAs
  isExternal: false
  name: AdvertiseInternalIPAs
  nameWithType: VNodeBuilder.AdvertiseInternalIPAs
  fullName: EventStore.Core.VNodeBuilder.AdvertiseInternalIPAs
- uid: IPAddress
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: IPAddress
- uid: EventStore.Core.VNodeBuilder.AdvertiseExternalIPAs*
  commentId: Overload:EventStore.Core.VNodeBuilder.AdvertiseExternalIPAs
  isExternal: false
  name: AdvertiseExternalIPAs
  nameWithType: VNodeBuilder.AdvertiseExternalIPAs
  fullName: EventStore.Core.VNodeBuilder.AdvertiseExternalIPAs
- uid: EventStore.Core.VNodeBuilder.AdvertiseInternalHttpPortAs*
  commentId: Overload:EventStore.Core.VNodeBuilder.AdvertiseInternalHttpPortAs
  isExternal: false
  name: AdvertiseInternalHttpPortAs
  nameWithType: VNodeBuilder.AdvertiseInternalHttpPortAs
  fullName: EventStore.Core.VNodeBuilder.AdvertiseInternalHttpPortAs
- uid: EventStore.Core.VNodeBuilder.HavingReaderThreads*
  commentId: Overload:EventStore.Core.VNodeBuilder.HavingReaderThreads
  isExternal: false
  name: HavingReaderThreads
  nameWithType: VNodeBuilder.HavingReaderThreads
  fullName: EventStore.Core.VNodeBuilder.HavingReaderThreads
- uid: EventStore.Core.VNodeBuilder.AdvertiseExternalHttpPortAs*
  commentId: Overload:EventStore.Core.VNodeBuilder.AdvertiseExternalHttpPortAs
  isExternal: false
  name: AdvertiseExternalHttpPortAs
  nameWithType: VNodeBuilder.AdvertiseExternalHttpPortAs
  fullName: EventStore.Core.VNodeBuilder.AdvertiseExternalHttpPortAs
- uid: EventStore.Core.VNodeBuilder.AdvertiseInternalSecureTCPPortAs*
  commentId: Overload:EventStore.Core.VNodeBuilder.AdvertiseInternalSecureTCPPortAs
  isExternal: false
  name: AdvertiseInternalSecureTCPPortAs
  nameWithType: VNodeBuilder.AdvertiseInternalSecureTCPPortAs
  fullName: EventStore.Core.VNodeBuilder.AdvertiseInternalSecureTCPPortAs
- uid: EventStore.Core.VNodeBuilder.AdvertiseExternalSecureTCPPortAs*
  commentId: Overload:EventStore.Core.VNodeBuilder.AdvertiseExternalSecureTCPPortAs
  isExternal: false
  name: AdvertiseExternalSecureTCPPortAs
  nameWithType: VNodeBuilder.AdvertiseExternalSecureTCPPortAs
  fullName: EventStore.Core.VNodeBuilder.AdvertiseExternalSecureTCPPortAs
- uid: EventStore.Core.VNodeBuilder.AdvertiseInternalTCPPortAs*
  commentId: Overload:EventStore.Core.VNodeBuilder.AdvertiseInternalTCPPortAs
  isExternal: false
  name: AdvertiseInternalTCPPortAs
  nameWithType: VNodeBuilder.AdvertiseInternalTCPPortAs
  fullName: EventStore.Core.VNodeBuilder.AdvertiseInternalTCPPortAs
- uid: EventStore.Core.VNodeBuilder.GossipAsSingleNode*
  commentId: Overload:EventStore.Core.VNodeBuilder.GossipAsSingleNode
  isExternal: false
  name: GossipAsSingleNode
  nameWithType: VNodeBuilder.GossipAsSingleNode
  fullName: EventStore.Core.VNodeBuilder.GossipAsSingleNode
- uid: EventStore.Core.VNodeBuilder.AdvertiseExternalTCPPortAs*
  commentId: Overload:EventStore.Core.VNodeBuilder.AdvertiseExternalTCPPortAs
  isExternal: false
  name: AdvertiseExternalTCPPortAs
  nameWithType: VNodeBuilder.AdvertiseExternalTCPPortAs
  fullName: EventStore.Core.VNodeBuilder.AdvertiseExternalTCPPortAs
- uid: EventStore.Core.VNodeBuilder.WithClusterGossipPort*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithClusterGossipPort
  isExternal: false
  name: WithClusterGossipPort
  nameWithType: VNodeBuilder.WithClusterGossipPort
  fullName: EventStore.Core.VNodeBuilder.WithClusterGossipPort
- uid: EventStore.Core.VNodeBuilder.WithInternalHttpOn*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithInternalHttpOn
  isExternal: false
  name: WithInternalHttpOn
  nameWithType: VNodeBuilder.WithInternalHttpOn
  fullName: EventStore.Core.VNodeBuilder.WithInternalHttpOn
- uid: EventStore.Core.VNodeBuilder.WithExternalHttpOn*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithExternalHttpOn
  isExternal: false
  name: WithExternalHttpOn
  nameWithType: VNodeBuilder.WithExternalHttpOn
  fullName: EventStore.Core.VNodeBuilder.WithExternalHttpOn
- uid: EventStore.Core.VNodeBuilder.WithInternalTcpOn*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithInternalTcpOn
  isExternal: false
  name: WithInternalTcpOn
  nameWithType: VNodeBuilder.WithInternalTcpOn
  fullName: EventStore.Core.VNodeBuilder.WithInternalTcpOn
- uid: EventStore.Core.VNodeBuilder.WithInternalSecureTcpOn*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithInternalSecureTcpOn
  isExternal: false
  name: WithInternalSecureTcpOn
  nameWithType: VNodeBuilder.WithInternalSecureTcpOn
  fullName: EventStore.Core.VNodeBuilder.WithInternalSecureTcpOn
- uid: EventStore.Core.VNodeBuilder.WithExternalTcpOn*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithExternalTcpOn
  isExternal: false
  name: WithExternalTcpOn
  nameWithType: VNodeBuilder.WithExternalTcpOn
  fullName: EventStore.Core.VNodeBuilder.WithExternalTcpOn
- uid: EventStore.Core.VNodeBuilder.WithExternalSecureTcpOn*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithExternalSecureTcpOn
  isExternal: false
  name: WithExternalSecureTcpOn
  nameWithType: VNodeBuilder.WithExternalSecureTcpOn
  fullName: EventStore.Core.VNodeBuilder.WithExternalSecureTcpOn
- uid: EventStore.Core.VNodeBuilder.EnableSsl*
  commentId: Overload:EventStore.Core.VNodeBuilder.EnableSsl
  isExternal: false
  name: EnableSsl
  nameWithType: VNodeBuilder.EnableSsl
  fullName: EventStore.Core.VNodeBuilder.EnableSsl
- uid: EventStore.Core.VNodeBuilder.DisableInsecureTCP*
  commentId: Overload:EventStore.Core.VNodeBuilder.DisableInsecureTCP
  isExternal: false
  name: DisableInsecureTCP
  nameWithType: VNodeBuilder.DisableInsecureTCP
  fullName: EventStore.Core.VNodeBuilder.DisableInsecureTCP
- uid: EventStore.Core.VNodeBuilder.WithSslTargetHost*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithSslTargetHost
  isExternal: false
  name: WithSslTargetHost
  nameWithType: VNodeBuilder.WithSslTargetHost
  fullName: EventStore.Core.VNodeBuilder.WithSslTargetHost
- uid: EventStore.Core.VNodeBuilder.ValidateSslServer*
  commentId: Overload:EventStore.Core.VNodeBuilder.ValidateSslServer
  isExternal: false
  name: ValidateSslServer
  nameWithType: VNodeBuilder.ValidateSslServer
  fullName: EventStore.Core.VNodeBuilder.ValidateSslServer
- uid: EventStore.Core.VNodeBuilder.WithGossipSeeds*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithGossipSeeds
  isExternal: false
  name: WithGossipSeeds
  nameWithType: VNodeBuilder.WithGossipSeeds
  fullName: EventStore.Core.VNodeBuilder.WithGossipSeeds
- uid: IPEndPoint[]
  name: IPEndPoint[]
  nameWithType: IPEndPoint[]
  fullName: IPEndPoint[]
  nameWithType.vb: IPEndPoint()
  fullName.vb: IPEndPoint()
  name.vb: IPEndPoint()
  spec.csharp:
  - uid: IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: IPEndPoint
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: IPEndPoint
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.VNodeBuilder.MaximumMemoryTableSizeOf*
  commentId: Overload:EventStore.Core.VNodeBuilder.MaximumMemoryTableSizeOf
  isExternal: false
  name: MaximumMemoryTableSizeOf
  nameWithType: VNodeBuilder.MaximumMemoryTableSizeOf
  fullName: EventStore.Core.VNodeBuilder.MaximumMemoryTableSizeOf
- uid: EventStore.Core.VNodeBuilder.WithHashCollisionReadLimitOf*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithHashCollisionReadLimitOf
  isExternal: false
  name: WithHashCollisionReadLimitOf
  nameWithType: VNodeBuilder.WithHashCollisionReadLimitOf
  fullName: EventStore.Core.VNodeBuilder.WithHashCollisionReadLimitOf
- uid: EventStore.Core.VNodeBuilder.DoNotVerifyDbHashes*
  commentId: Overload:EventStore.Core.VNodeBuilder.DoNotVerifyDbHashes
  isExternal: false
  name: DoNotVerifyDbHashes
  nameWithType: VNodeBuilder.DoNotVerifyDbHashes
  fullName: EventStore.Core.VNodeBuilder.DoNotVerifyDbHashes
- uid: EventStore.Core.VNodeBuilder.NoGossipOnPublicInterface*
  commentId: Overload:EventStore.Core.VNodeBuilder.NoGossipOnPublicInterface
  isExternal: false
  name: NoGossipOnPublicInterface
  nameWithType: VNodeBuilder.NoGossipOnPublicInterface
  fullName: EventStore.Core.VNodeBuilder.NoGossipOnPublicInterface
- uid: EventStore.Core.VNodeBuilder.NoAdminOnPublicInterface*
  commentId: Overload:EventStore.Core.VNodeBuilder.NoAdminOnPublicInterface
  isExternal: false
  name: NoAdminOnPublicInterface
  nameWithType: VNodeBuilder.NoAdminOnPublicInterface
  fullName: EventStore.Core.VNodeBuilder.NoAdminOnPublicInterface
- uid: EventStore.Core.VNodeBuilder.NoStatsOnPublicInterface*
  commentId: Overload:EventStore.Core.VNodeBuilder.NoStatsOnPublicInterface
  isExternal: false
  name: NoStatsOnPublicInterface
  nameWithType: VNodeBuilder.NoStatsOnPublicInterface
  fullName: EventStore.Core.VNodeBuilder.NoStatsOnPublicInterface
- uid: EventStore.Core.VNodeBuilder.VerifyDbHashes*
  commentId: Overload:EventStore.Core.VNodeBuilder.VerifyDbHashes
  isExternal: false
  name: VerifyDbHashes
  nameWithType: VNodeBuilder.VerifyDbHashes
  fullName: EventStore.Core.VNodeBuilder.VerifyDbHashes
- uid: EventStore.Core.VNodeBuilder.WithClusterDnsName*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithClusterDnsName
  isExternal: false
  name: WithClusterDnsName
  nameWithType: VNodeBuilder.WithClusterDnsName
  fullName: EventStore.Core.VNodeBuilder.WithClusterDnsName
- uid: EventStore.Core.VNodeBuilder.DisableDnsDiscovery*
  commentId: Overload:EventStore.Core.VNodeBuilder.DisableDnsDiscovery
  isExternal: false
  name: DisableDnsDiscovery
  nameWithType: VNodeBuilder.DisableDnsDiscovery
  fullName: EventStore.Core.VNodeBuilder.DisableDnsDiscovery
- uid: EventStore.Core.VNodeBuilder.WithWorkerThreads*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithWorkerThreads
  isExternal: false
  name: WithWorkerThreads
  nameWithType: VNodeBuilder.WithWorkerThreads
  fullName: EventStore.Core.VNodeBuilder.WithWorkerThreads
- uid: EventStore.Core.VNodeBuilder.AddInternalHttpPrefix*
  commentId: Overload:EventStore.Core.VNodeBuilder.AddInternalHttpPrefix
  isExternal: false
  name: AddInternalHttpPrefix
  nameWithType: VNodeBuilder.AddInternalHttpPrefix
  fullName: EventStore.Core.VNodeBuilder.AddInternalHttpPrefix
- uid: EventStore.Core.VNodeBuilder.AddExternalHttpPrefix*
  commentId: Overload:EventStore.Core.VNodeBuilder.AddExternalHttpPrefix
  isExternal: false
  name: AddExternalHttpPrefix
  nameWithType: VNodeBuilder.AddExternalHttpPrefix
  fullName: EventStore.Core.VNodeBuilder.AddExternalHttpPrefix
- uid: EventStore.Core.VNodeBuilder.DontAddInterfacePrefixes*
  commentId: Overload:EventStore.Core.VNodeBuilder.DontAddInterfacePrefixes
  isExternal: false
  name: DontAddInterfacePrefixes
  nameWithType: VNodeBuilder.DontAddInterfacePrefixes
  fullName: EventStore.Core.VNodeBuilder.DontAddInterfacePrefixes
- uid: EventStore.Core.VNodeBuilder.WithServerCertificateFromFile*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithServerCertificateFromFile
  isExternal: false
  name: WithServerCertificateFromFile
  nameWithType: VNodeBuilder.WithServerCertificateFromFile
  fullName: EventStore.Core.VNodeBuilder.WithServerCertificateFromFile
- uid: EventStore.Core.VNodeBuilder.WithInternalHeartbeatInterval*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithInternalHeartbeatInterval
  isExternal: false
  name: WithInternalHeartbeatInterval
  nameWithType: VNodeBuilder.WithInternalHeartbeatInterval
  fullName: EventStore.Core.VNodeBuilder.WithInternalHeartbeatInterval
- uid: EventStore.Core.VNodeBuilder.WithExternalHeartbeatInterval*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithExternalHeartbeatInterval
  isExternal: false
  name: WithExternalHeartbeatInterval
  nameWithType: VNodeBuilder.WithExternalHeartbeatInterval
  fullName: EventStore.Core.VNodeBuilder.WithExternalHeartbeatInterval
- uid: EventStore.Core.VNodeBuilder.WithInternalHeartbeatTimeout*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithInternalHeartbeatTimeout
  isExternal: false
  name: WithInternalHeartbeatTimeout
  nameWithType: VNodeBuilder.WithInternalHeartbeatTimeout
  fullName: EventStore.Core.VNodeBuilder.WithInternalHeartbeatTimeout
- uid: EventStore.Core.VNodeBuilder.WithExternalHeartbeatTimeout*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithExternalHeartbeatTimeout
  isExternal: false
  name: WithExternalHeartbeatTimeout
  nameWithType: VNodeBuilder.WithExternalHeartbeatTimeout
  fullName: EventStore.Core.VNodeBuilder.WithExternalHeartbeatTimeout
- uid: EventStore.Core.VNodeBuilder.WithConnectionPendingSendBytesThreshold*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithConnectionPendingSendBytesThreshold
  isExternal: false
  name: WithConnectionPendingSendBytesThreshold
  nameWithType: VNodeBuilder.WithConnectionPendingSendBytesThreshold
  fullName: EventStore.Core.VNodeBuilder.WithConnectionPendingSendBytesThreshold
- uid: EventStore.Core.VNodeBuilder.WithGossipInterval*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithGossipInterval
  isExternal: false
  name: WithGossipInterval
  nameWithType: VNodeBuilder.WithGossipInterval
  fullName: EventStore.Core.VNodeBuilder.WithGossipInterval
- uid: EventStore.Core.VNodeBuilder.WithGossipAllowedTimeDifference*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithGossipAllowedTimeDifference
  isExternal: false
  name: WithGossipAllowedTimeDifference
  nameWithType: VNodeBuilder.WithGossipAllowedTimeDifference
  fullName: EventStore.Core.VNodeBuilder.WithGossipAllowedTimeDifference
- uid: EventStore.Core.VNodeBuilder.WithGossipTimeout*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithGossipTimeout
  isExternal: false
  name: WithGossipTimeout
  nameWithType: VNodeBuilder.WithGossipTimeout
  fullName: EventStore.Core.VNodeBuilder.WithGossipTimeout
- uid: EventStore.Core.VNodeBuilder.WithMinFlushDelay*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithMinFlushDelay
  isExternal: false
  name: WithMinFlushDelay
  nameWithType: VNodeBuilder.WithMinFlushDelay
  fullName: EventStore.Core.VNodeBuilder.WithMinFlushDelay
- uid: EventStore.Core.VNodeBuilder.WithPrepareTimeout*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithPrepareTimeout
  isExternal: false
  name: WithPrepareTimeout
  nameWithType: VNodeBuilder.WithPrepareTimeout
  fullName: EventStore.Core.VNodeBuilder.WithPrepareTimeout
- uid: EventStore.Core.VNodeBuilder.WithCommitTimeout*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithCommitTimeout
  isExternal: false
  name: WithCommitTimeout
  nameWithType: VNodeBuilder.WithCommitTimeout
  fullName: EventStore.Core.VNodeBuilder.WithCommitTimeout
- uid: EventStore.Core.VNodeBuilder.WithStatsPeriod*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithStatsPeriod
  isExternal: false
  name: WithStatsPeriod
  nameWithType: VNodeBuilder.WithStatsPeriod
  fullName: EventStore.Core.VNodeBuilder.WithStatsPeriod
- uid: EventStore.Core.VNodeBuilder.WithStatsStorage*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithStatsStorage
  isExternal: false
  name: WithStatsStorage
  nameWithType: VNodeBuilder.WithStatsStorage
  fullName: EventStore.Core.VNodeBuilder.WithStatsStorage
- uid: EventStore.Core.VNodeBuilder.WithPrepareCount*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithPrepareCount
  isExternal: false
  name: WithPrepareCount
  nameWithType: VNodeBuilder.WithPrepareCount
  fullName: EventStore.Core.VNodeBuilder.WithPrepareCount
- uid: EventStore.Core.VNodeBuilder.WithCommitCount*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithCommitCount
  isExternal: false
  name: WithCommitCount
  nameWithType: VNodeBuilder.WithCommitCount
  fullName: EventStore.Core.VNodeBuilder.WithCommitCount
- uid: EventStore.Core.VNodeBuilder.WithNodePriority*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithNodePriority
  isExternal: false
  name: WithNodePriority
  nameWithType: VNodeBuilder.WithNodePriority
  fullName: EventStore.Core.VNodeBuilder.WithNodePriority
- uid: EventStore.Core.VNodeBuilder.DisableScavengeMerging*
  commentId: Overload:EventStore.Core.VNodeBuilder.DisableScavengeMerging
  isExternal: false
  name: DisableScavengeMerging
  nameWithType: VNodeBuilder.DisableScavengeMerging
  fullName: EventStore.Core.VNodeBuilder.DisableScavengeMerging
- uid: EventStore.Core.VNodeBuilder.WithScavengeHistoryMaxAge*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithScavengeHistoryMaxAge
  isExternal: false
  name: WithScavengeHistoryMaxAge
  nameWithType: VNodeBuilder.WithScavengeHistoryMaxAge
  fullName: EventStore.Core.VNodeBuilder.WithScavengeHistoryMaxAge
- uid: EventStore.Core.VNodeBuilder.WithIndexPath*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithIndexPath
  isExternal: false
  name: WithIndexPath
  nameWithType: VNodeBuilder.WithIndexPath
  fullName: EventStore.Core.VNodeBuilder.WithIndexPath
- uid: EventStore.Core.VNodeBuilder.EnableLoggingOfHttpRequests*
  commentId: Overload:EventStore.Core.VNodeBuilder.EnableLoggingOfHttpRequests
  isExternal: false
  name: EnableLoggingOfHttpRequests
  nameWithType: VNodeBuilder.EnableLoggingOfHttpRequests
  fullName: EventStore.Core.VNodeBuilder.EnableLoggingOfHttpRequests
- uid: EventStore.Core.VNodeBuilder.EnableHistograms*
  commentId: Overload:EventStore.Core.VNodeBuilder.EnableHistograms
  isExternal: false
  name: EnableHistograms
  nameWithType: VNodeBuilder.EnableHistograms
  fullName: EventStore.Core.VNodeBuilder.EnableHistograms
- uid: EventStore.Core.VNodeBuilder.WithIndexVerification*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithIndexVerification
  isExternal: false
  name: WithIndexVerification
  nameWithType: VNodeBuilder.WithIndexVerification
  fullName: EventStore.Core.VNodeBuilder.WithIndexVerification
- uid: EventStore.Core.VNodeBuilder.WithIndexCacheDepth*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithIndexCacheDepth
  isExternal: false
  name: WithIndexCacheDepth
  nameWithType: VNodeBuilder.WithIndexCacheDepth
  fullName: EventStore.Core.VNodeBuilder.WithIndexCacheDepth
- uid: EventStore.Core.VNodeBuilder.WithUnsafeIgnoreHardDelete*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithUnsafeIgnoreHardDelete
  isExternal: false
  name: WithUnsafeIgnoreHardDelete
  nameWithType: VNodeBuilder.WithUnsafeIgnoreHardDelete
  fullName: EventStore.Core.VNodeBuilder.WithUnsafeIgnoreHardDelete
- uid: EventStore.Core.VNodeBuilder.WithUnsafeDisableFlushToDisk*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithUnsafeDisableFlushToDisk
  isExternal: false
  name: WithUnsafeDisableFlushToDisk
  nameWithType: VNodeBuilder.WithUnsafeDisableFlushToDisk
  fullName: EventStore.Core.VNodeBuilder.WithUnsafeDisableFlushToDisk
- uid: EventStore.Core.VNodeBuilder.WithBetterOrdering*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithBetterOrdering
  isExternal: false
  name: WithBetterOrdering
  nameWithType: VNodeBuilder.WithBetterOrdering
  fullName: EventStore.Core.VNodeBuilder.WithBetterOrdering
- uid: EventStore.Core.VNodeBuilder.EnableTrustedAuth*
  commentId: Overload:EventStore.Core.VNodeBuilder.EnableTrustedAuth
  isExternal: false
  name: EnableTrustedAuth
  nameWithType: VNodeBuilder.EnableTrustedAuth
  fullName: EventStore.Core.VNodeBuilder.EnableTrustedAuth
- uid: EventStore.Core.VNodeBuilder.WithAuthenticationProvider*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithAuthenticationProvider
  isExternal: false
  name: WithAuthenticationProvider
  nameWithType: VNodeBuilder.WithAuthenticationProvider
  fullName: EventStore.Core.VNodeBuilder.WithAuthenticationProvider
- uid: EventStore.Core.VNodeBuilder.EnableUnbuffered*
  commentId: Overload:EventStore.Core.VNodeBuilder.EnableUnbuffered
  isExternal: false
  name: EnableUnbuffered
  nameWithType: VNodeBuilder.EnableUnbuffered
  fullName: EventStore.Core.VNodeBuilder.EnableUnbuffered
- uid: EventStore.Core.VNodeBuilder.EnableWriteThrough*
  commentId: Overload:EventStore.Core.VNodeBuilder.EnableWriteThrough
  isExternal: false
  name: EnableWriteThrough
  nameWithType: VNodeBuilder.EnableWriteThrough
  fullName: EventStore.Core.VNodeBuilder.EnableWriteThrough
- uid: EventStore.Core.VNodeBuilder.WithChunkInitialReaderCount*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithChunkInitialReaderCount
  isExternal: false
  name: WithChunkInitialReaderCount
  nameWithType: VNodeBuilder.WithChunkInitialReaderCount
  fullName: EventStore.Core.VNodeBuilder.WithChunkInitialReaderCount
- uid: EventStore.Core.VNodeBuilder.WithServerCertificate*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithServerCertificate
  isExternal: false
  name: WithServerCertificate
  nameWithType: VNodeBuilder.WithServerCertificate
  fullName: EventStore.Core.VNodeBuilder.WithServerCertificate
- uid: EventStore.Core.VNodeBuilder.WithServerCertificateFromStore*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithServerCertificateFromStore
  isExternal: false
  name: WithServerCertificateFromStore
  nameWithType: VNodeBuilder.WithServerCertificateFromStore
  fullName: EventStore.Core.VNodeBuilder.WithServerCertificateFromStore
- uid: StoreLocation
  isExternal: true
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: StoreLocation
- uid: StoreName
  isExternal: true
  name: StoreName
  nameWithType: StoreName
  fullName: StoreName
- uid: EventStore.Core.TransactionLog.Chunks.TFConsts.ChunkSize
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFConsts.ChunkSize
- uid: EventStore.Core.VNodeBuilder.WithTfChunkSize*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithTfChunkSize
  isExternal: false
  name: WithTfChunkSize
  nameWithType: VNodeBuilder.WithTfChunkSize
  fullName: EventStore.Core.VNodeBuilder.WithTfChunkSize
- uid: EventStore.Core.TransactionLog.Chunks.TFConsts.ChunksCacheSize
  commentId: F:EventStore.Core.TransactionLog.Chunks.TFConsts.ChunksCacheSize
- uid: EventStore.Core.VNodeBuilder.WithTfChunksCacheSize*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithTfChunksCacheSize
  isExternal: false
  name: WithTfChunksCacheSize
  nameWithType: VNodeBuilder.WithTfChunksCacheSize
  fullName: EventStore.Core.VNodeBuilder.WithTfChunksCacheSize
- uid: EventStore.Core.VNodeBuilder.WithTfCachedChunks*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithTfCachedChunks
  isExternal: false
  name: WithTfCachedChunks
  nameWithType: VNodeBuilder.WithTfCachedChunks
  fullName: EventStore.Core.VNodeBuilder.WithTfCachedChunks
- uid: EventStore.Core.Index.PTableVersions
  commentId: T:EventStore.Core.Index.PTableVersions
  isExternal: false
  name: PTableVersions
  nameWithType: PTableVersions
  fullName: EventStore.Core.Index.PTableVersions
- uid: EventStore.Core.VNodeBuilder.WithIndexBitnessVersion*
  commentId: Overload:EventStore.Core.VNodeBuilder.WithIndexBitnessVersion
  isExternal: false
  name: WithIndexBitnessVersion
  nameWithType: VNodeBuilder.WithIndexBitnessVersion
  fullName: EventStore.Core.VNodeBuilder.WithIndexBitnessVersion
- uid: EventStore.Core.VNodeBuilder.AlwaysKeepScavenged*
  commentId: Overload:EventStore.Core.VNodeBuilder.AlwaysKeepScavenged
  isExternal: false
  name: AlwaysKeepScavenged
  nameWithType: VNodeBuilder.AlwaysKeepScavenged
  fullName: EventStore.Core.VNodeBuilder.AlwaysKeepScavenged
- uid: EventStore.Core.VNodeBuilder.SkipIndexScanOnReads*
  commentId: Overload:EventStore.Core.VNodeBuilder.SkipIndexScanOnReads
  isExternal: false
  name: SkipIndexScanOnReads
  nameWithType: VNodeBuilder.SkipIndexScanOnReads
  fullName: EventStore.Core.VNodeBuilder.SkipIndexScanOnReads
- uid: EventStore.Core.VNodeBuilder.SetUpProjectionsIfNeeded*
  commentId: Overload:EventStore.Core.VNodeBuilder.SetUpProjectionsIfNeeded
  isExternal: false
  name: SetUpProjectionsIfNeeded
  nameWithType: VNodeBuilder.SetUpProjectionsIfNeeded
  fullName: EventStore.Core.VNodeBuilder.SetUpProjectionsIfNeeded
- uid: EventStore.Core.VNodeBuilder.op_Implicit*
  commentId: Overload:EventStore.Core.VNodeBuilder.op_Implicit
  isExternal: false
  name: Implicit
  nameWithType: VNodeBuilder.Implicit
  fullName: EventStore.Core.VNodeBuilder.Implicit
  nameWithType.vb: VNodeBuilder.Widening
  fullName.vb: EventStore.Core.VNodeBuilder.Widening
  name.vb: Widening
- uid: EventStore.Core.VNodeBuilder.Build*
  commentId: Overload:EventStore.Core.VNodeBuilder.Build
  isExternal: false
  name: Build
  nameWithType: VNodeBuilder.Build
  fullName: EventStore.Core.VNodeBuilder.Build
- uid: EventStore.Common.Options.IOptions
  commentId: T:EventStore.Common.Options.IOptions
  parent: EventStore.Common.Options
  isExternal: false
  name: IOptions
  nameWithType: IOptions
  fullName: EventStore.Common.Options.IOptions
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory[]
  name: IPersistentSubscriptionConsumerStrategyFactory[]
  nameWithType: IPersistentSubscriptionConsumerStrategyFactory[]
  fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory[]
  nameWithType.vb: IPersistentSubscriptionConsumerStrategyFactory()
  fullName.vb: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory()
  name.vb: IPersistentSubscriptionConsumerStrategyFactory()
  spec.csharp:
  - uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory
    name: IPersistentSubscriptionConsumerStrategyFactory
    nameWithType: IPersistentSubscriptionConsumerStrategyFactory
    fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory
    name: IPersistentSubscriptionConsumerStrategyFactory
    nameWithType: IPersistentSubscriptionConsumerStrategyFactory
    fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.ClientAPI.Embedded.ProjectionsMode
  commentId: T:EventStore.ClientAPI.Embedded.ProjectionsMode
  parent: EventStore.ClientAPI.Embedded
  isExternal: false
  name: ProjectionsMode
  nameWithType: ProjectionsMode
  fullName: EventStore.ClientAPI.Embedded.ProjectionsMode
- uid: EventStore.ClientAPI.Embedded
  commentId: N:EventStore.ClientAPI.Embedded
  isExternal: false
  name: EventStore.ClientAPI.Embedded
  nameWithType: EventStore.ClientAPI.Embedded
  fullName: EventStore.ClientAPI.Embedded

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Common.ProjectionConsts
  commentId: T:EventStore.Projections.Core.Common.ProjectionConsts
  id: ProjectionConsts
  parent: EventStore.Projections.Core.Common
  children:
  - EventStore.Projections.Core.Common.ProjectionConsts.CheckpointAfterMs
  - EventStore.Projections.Core.Common.ProjectionConsts.CheckpointHandledThreshold
  - EventStore.Projections.Core.Common.ProjectionConsts.CheckpointUnhandledBytesThreshold
  - EventStore.Projections.Core.Common.ProjectionConsts.MaxAllowedWritesInFlight
  - EventStore.Projections.Core.Common.ProjectionConsts.MaxWriteBatchLength
  - EventStore.Projections.Core.Common.ProjectionConsts.PendingEventsThreshold
  langs:
  - csharp
  - vb
  name: ProjectionConsts
  nameWithType: ProjectionConsts
  fullName: EventStore.Projections.Core.Common.ProjectionConsts
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Common/ProjectionConsts.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ProjectionConsts
    path: ../EventStore/src/EventStore.Projections.Core/Common/ProjectionConsts.cs
    startLine: 4
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Common
  syntax:
    content: 'public static class ProjectionConsts : object'
    content.vb: >-
      Public Module ProjectionConsts
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Projections.Core.Common.ProjectionConsts.CheckpointHandledThreshold
  commentId: F:EventStore.Projections.Core.Common.ProjectionConsts.CheckpointHandledThreshold
  id: CheckpointHandledThreshold
  parent: EventStore.Projections.Core.Common.ProjectionConsts
  langs:
  - csharp
  - vb
  name: CheckpointHandledThreshold
  nameWithType: ProjectionConsts.CheckpointHandledThreshold
  fullName: EventStore.Projections.Core.Common.ProjectionConsts.CheckpointHandledThreshold
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Common/ProjectionConsts.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CheckpointHandledThreshold
    path: ../EventStore/src/EventStore.Projections.Core/Common/ProjectionConsts.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Common
  syntax:
    content: public const int CheckpointHandledThreshold = null
    return:
      type: System.Int32
    content.vb: Public Const CheckpointHandledThreshold As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Common.ProjectionConsts.PendingEventsThreshold
  commentId: F:EventStore.Projections.Core.Common.ProjectionConsts.PendingEventsThreshold
  id: PendingEventsThreshold
  parent: EventStore.Projections.Core.Common.ProjectionConsts
  langs:
  - csharp
  - vb
  name: PendingEventsThreshold
  nameWithType: ProjectionConsts.PendingEventsThreshold
  fullName: EventStore.Projections.Core.Common.ProjectionConsts.PendingEventsThreshold
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Common/ProjectionConsts.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PendingEventsThreshold
    path: ../EventStore/src/EventStore.Projections.Core/Common/ProjectionConsts.cs
    startLine: 7
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Common
  syntax:
    content: public const int PendingEventsThreshold = null
    return:
      type: System.Int32
    content.vb: Public Const PendingEventsThreshold As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Common.ProjectionConsts.MaxWriteBatchLength
  commentId: F:EventStore.Projections.Core.Common.ProjectionConsts.MaxWriteBatchLength
  id: MaxWriteBatchLength
  parent: EventStore.Projections.Core.Common.ProjectionConsts
  langs:
  - csharp
  - vb
  name: MaxWriteBatchLength
  nameWithType: ProjectionConsts.MaxWriteBatchLength
  fullName: EventStore.Projections.Core.Common.ProjectionConsts.MaxWriteBatchLength
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Common/ProjectionConsts.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MaxWriteBatchLength
    path: ../EventStore/src/EventStore.Projections.Core/Common/ProjectionConsts.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Common
  syntax:
    content: public const int MaxWriteBatchLength = null
    return:
      type: System.Int32
    content.vb: Public Const MaxWriteBatchLength As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Common.ProjectionConsts.CheckpointUnhandledBytesThreshold
  commentId: F:EventStore.Projections.Core.Common.ProjectionConsts.CheckpointUnhandledBytesThreshold
  id: CheckpointUnhandledBytesThreshold
  parent: EventStore.Projections.Core.Common.ProjectionConsts
  langs:
  - csharp
  - vb
  name: CheckpointUnhandledBytesThreshold
  nameWithType: ProjectionConsts.CheckpointUnhandledBytesThreshold
  fullName: EventStore.Projections.Core.Common.ProjectionConsts.CheckpointUnhandledBytesThreshold
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Common/ProjectionConsts.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CheckpointUnhandledBytesThreshold
    path: ../EventStore/src/EventStore.Projections.Core/Common/ProjectionConsts.cs
    startLine: 9
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Common
  syntax:
    content: public const int CheckpointUnhandledBytesThreshold = null
    return:
      type: System.Int32
    content.vb: Public Const CheckpointUnhandledBytesThreshold As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Common.ProjectionConsts.MaxAllowedWritesInFlight
  commentId: F:EventStore.Projections.Core.Common.ProjectionConsts.MaxAllowedWritesInFlight
  id: MaxAllowedWritesInFlight
  parent: EventStore.Projections.Core.Common.ProjectionConsts
  langs:
  - csharp
  - vb
  name: MaxAllowedWritesInFlight
  nameWithType: ProjectionConsts.MaxAllowedWritesInFlight
  fullName: EventStore.Projections.Core.Common.ProjectionConsts.MaxAllowedWritesInFlight
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Common/ProjectionConsts.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MaxAllowedWritesInFlight
    path: ../EventStore/src/EventStore.Projections.Core/Common/ProjectionConsts.cs
    startLine: 10
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Common
  syntax:
    content: public const int MaxAllowedWritesInFlight = null
    return:
      type: System.Int32
    content.vb: Public Const MaxAllowedWritesInFlight As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Common.ProjectionConsts.CheckpointAfterMs
  commentId: F:EventStore.Projections.Core.Common.ProjectionConsts.CheckpointAfterMs
  id: CheckpointAfterMs
  parent: EventStore.Projections.Core.Common.ProjectionConsts
  langs:
  - csharp
  - vb
  name: CheckpointAfterMs
  nameWithType: ProjectionConsts.CheckpointAfterMs
  fullName: EventStore.Projections.Core.Common.ProjectionConsts.CheckpointAfterMs
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Common/ProjectionConsts.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CheckpointAfterMs
    path: ../EventStore/src/EventStore.Projections.Core/Common/ProjectionConsts.cs
    startLine: 11
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Common
  syntax:
    content: public static TimeSpan CheckpointAfterMs
    return:
      type: TimeSpan
    content.vb: Public Shared CheckpointAfterMs As TimeSpan
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Projections.Core.Common
  commentId: N:EventStore.Projections.Core.Common
  isExternal: false
  name: EventStore.Projections.Core.Common
  nameWithType: EventStore.Projections.Core.Common
  fullName: EventStore.Projections.Core.Common
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan

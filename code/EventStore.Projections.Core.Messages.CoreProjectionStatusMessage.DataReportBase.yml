### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase
  id: CoreProjectionStatusMessage.DataReportBase
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.#ctor(Guid,Guid,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.CorrelationId
  - EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.MsgTypeId
  - EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.Partition
  - EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.Position
  langs:
  - csharp
  - vb
  name: CoreProjectionStatusMessage.DataReportBase
  nameWithType: CoreProjectionStatusMessage.DataReportBase
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/CoreProjectionStatusMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DataReportBase
    path: ../EventStore/src/EventStore.Projections.Core/Messages/CoreProjectionStatusMessage.cs
    startLine: 64
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: 'public abstract class DataReportBase : CoreProjectionStatusMessage.CoreProjectionStatusMessageBase'
    content.vb: >-
      Public MustInherit Class DataReportBase

          Inherits CoreProjectionStatusMessage.CoreProjectionStatusMessageBase
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  - EventStore.Projections.Core.Messages.CoreProjectionManagementMessageBase
  - EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.CoreProjectionStatusMessageBase
  derivedClasses:
  - EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport
  - EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport
  inheritedMembers:
  - EventStore.Projections.Core.Messages.CoreProjectionManagementMessageBase.ProjectionId
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.MsgTypeId
  commentId: P:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: CoreProjectionStatusMessage.DataReportBase.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/CoreProjectionStatusMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/CoreProjectionStatusMessage.cs
    startLine: 68
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.CoreProjectionStatusMessageBase.MsgTypeId
  overload: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.#ctor(Guid,Guid,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.#ctor(Guid,Guid,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: '#ctor(Guid,Guid,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)'
  parent: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase
  langs:
  - csharp
  - vb
  name: DataReportBase(Guid, Guid, String, CheckpointTag)
  nameWithType: CoreProjectionStatusMessage.DataReportBase.DataReportBase(Guid, Guid, String, CheckpointTag)
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.DataReportBase(Guid, Guid, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/CoreProjectionStatusMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Messages/CoreProjectionStatusMessage.cs
    startLine: 77
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: protected DataReportBase(Guid correlationId, Guid projectionId, string partition, CheckpointTag position)
    parameters:
    - id: correlationId
      type: Guid
    - id: projectionId
      type: Guid
    - id: partition
      type: System.String
    - id: position
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Protected Sub New(correlationId As Guid, projectionId As Guid, partition As String, position As CheckpointTag)
  overload: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.Partition
  commentId: P:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.Partition
  id: Partition
  parent: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase
  langs:
  - csharp
  - vb
  name: Partition
  nameWithType: CoreProjectionStatusMessage.DataReportBase.Partition
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.Partition
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/CoreProjectionStatusMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Partition
    path: ../EventStore/src/EventStore.Projections.Core/Messages/CoreProjectionStatusMessage.cs
    startLine: 85
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string Partition { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Partition As String
  overload: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.Partition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.CorrelationId
  commentId: P:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.CorrelationId
  id: CorrelationId
  parent: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: CoreProjectionStatusMessage.DataReportBase.CorrelationId
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.CorrelationId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/CoreProjectionStatusMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CorrelationId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/CoreProjectionStatusMessage.cs
    startLine: 90
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public Guid CorrelationId { get; }
    parameters: []
    return:
      type: Guid
    content.vb: Public ReadOnly Property CorrelationId As Guid
  overload: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.CorrelationId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.Position
  commentId: P:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.Position
  id: Position
  parent: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: CoreProjectionStatusMessage.DataReportBase.Position
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.Position
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/CoreProjectionStatusMessage.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Position
    path: ../EventStore/src/EventStore.Projections.Core/Messages/CoreProjectionStatusMessage.cs
    startLine: 95
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public CheckpointTag Position { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public ReadOnly Property Position As CheckpointTag
  overload: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.Position*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  isExternal: false
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessageBase
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionManagementMessageBase
  parent: EventStore.Projections.Core.Messages
  isExternal: false
  name: CoreProjectionManagementMessageBase
  nameWithType: CoreProjectionManagementMessageBase
  fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessageBase
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.CoreProjectionStatusMessageBase
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.CoreProjectionStatusMessageBase
  parent: EventStore.Projections.Core.Messages
  isExternal: false
  name: CoreProjectionStatusMessage.CoreProjectionStatusMessageBase
  nameWithType: CoreProjectionStatusMessage.CoreProjectionStatusMessageBase
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.CoreProjectionStatusMessageBase
- uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessageBase.ProjectionId
  commentId: P:EventStore.Projections.Core.Messages.CoreProjectionManagementMessageBase.ProjectionId
  parent: EventStore.Projections.Core.Messages.CoreProjectionManagementMessageBase
  isExternal: false
  name: ProjectionId
  nameWithType: CoreProjectionManagementMessageBase.ProjectionId
  fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessageBase.ProjectionId
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<CoreProjectionStatusMessage.DataReportBase>()
  nameWithType: ProtobufExtensions.Serialize<CoreProjectionStatusMessage.DataReportBase>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of CoreProjectionStatusMessage.DataReportBase)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase)()
  name.vb: Serialize(Of CoreProjectionStatusMessage.DataReportBase)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<CoreProjectionStatusMessage.DataReportBase>
    nameWithType: ProtobufExtensions.Serialize<CoreProjectionStatusMessage.DataReportBase>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of CoreProjectionStatusMessage.DataReportBase)
    nameWithType: ProtobufExtensions.Serialize(Of CoreProjectionStatusMessage.DataReportBase)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<CoreProjectionStatusMessage.DataReportBase>()
  nameWithType: ProtobufExtensions.SerializeToArray<CoreProjectionStatusMessage.DataReportBase>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of CoreProjectionStatusMessage.DataReportBase)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase)()
  name.vb: SerializeToArray(Of CoreProjectionStatusMessage.DataReportBase)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<CoreProjectionStatusMessage.DataReportBase>
    nameWithType: ProtobufExtensions.SerializeToArray<CoreProjectionStatusMessage.DataReportBase>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of CoreProjectionStatusMessage.DataReportBase)
    nameWithType: ProtobufExtensions.SerializeToArray(Of CoreProjectionStatusMessage.DataReportBase)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.CoreProjectionStatusMessageBase.MsgTypeId
  commentId: P:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.CoreProjectionStatusMessageBase.MsgTypeId
  parent: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.CoreProjectionStatusMessageBase
  isExternal: false
  name: MsgTypeId
  nameWithType: CoreProjectionStatusMessage.CoreProjectionStatusMessageBase.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.CoreProjectionStatusMessageBase.MsgTypeId
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.MsgTypeId*
  commentId: Overload:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.MsgTypeId
  isExternal: false
  name: MsgTypeId
  nameWithType: CoreProjectionStatusMessage.DataReportBase.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.MsgTypeId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.#ctor*
  commentId: Overload:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.#ctor
  isExternal: false
  name: DataReportBase
  nameWithType: CoreProjectionStatusMessage.DataReportBase.DataReportBase
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.DataReportBase
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.Partition*
  commentId: Overload:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.Partition
  isExternal: false
  name: Partition
  nameWithType: CoreProjectionStatusMessage.DataReportBase.Partition
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.Partition
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.CorrelationId*
  commentId: Overload:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.CorrelationId
  isExternal: false
  name: CorrelationId
  nameWithType: CoreProjectionStatusMessage.DataReportBase.CorrelationId
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.CorrelationId
- uid: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.Position*
  commentId: Overload:EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.Position
  isExternal: false
  name: Position
  nameWithType: CoreProjectionStatusMessage.DataReportBase.Position
  fullName: EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.Position

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  commentId: T:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  id: EventReaderSubscriptionMessage.CommittedEventReceived
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Data
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.EventCategory
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.FromCommittedEventDistributed(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,Guid,System.Int64)
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.MsgTypeId
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Sample(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.Int64)
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Sample(EventStore.Projections.Core.Services.Processing.ResolvedEvent,Guid,System.Int64)
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.ToString
  langs:
  - csharp
  - vb
  name: EventReaderSubscriptionMessage.CommittedEventReceived
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CommittedEventReceived
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 181
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: 'public class CommittedEventReceived : EventReaderSubscriptionMessageBase'
    content.vb: >-
      Public Class CommittedEventReceived
          Inherits EventReaderSubscriptionMessageBase
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  inheritedMembers:
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.MsgTypeId
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 184
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Sample(EventStore.Projections.Core.Services.Processing.ResolvedEvent,Guid,System.Int64)
  commentId: M:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Sample(EventStore.Projections.Core.Services.Processing.ResolvedEvent,Guid,System.Int64)
  id: Sample(EventStore.Projections.Core.Services.Processing.ResolvedEvent,Guid,System.Int64)
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  langs:
  - csharp
  - vb
  name: Sample(ResolvedEvent, Guid, Int64)
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived.Sample(ResolvedEvent, Guid, Int64)
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Sample(EventStore.Projections.Core.Services.Processing.ResolvedEvent, Guid, System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Sample
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 186
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public static EventReaderSubscriptionMessage.CommittedEventReceived Sample(ResolvedEvent data, Guid subscriptionId, long subscriptionMessageSequenceNumber)
    parameters:
    - id: data
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    - id: subscriptionId
      type: Guid
    - id: subscriptionMessageSequenceNumber
      type: System.Int64
    return:
      type: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
    content.vb: Public Shared Function Sample(data As ResolvedEvent, subscriptionId As Guid, subscriptionMessageSequenceNumber As Long) As EventReaderSubscriptionMessage.CommittedEventReceived
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Sample*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Sample(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.Int64)
  commentId: M:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Sample(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.Int64)
  id: Sample(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.Int64)
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  langs:
  - csharp
  - vb
  name: Sample(ResolvedEvent, CheckpointTag, Guid, Int64)
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived.Sample(ResolvedEvent, CheckpointTag, Guid, Int64)
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Sample(EventStore.Projections.Core.Services.Processing.ResolvedEvent, EventStore.Projections.Core.Services.Processing.CheckpointTag, Guid, System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Sample
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 193
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public static EventReaderSubscriptionMessage.CommittedEventReceived Sample(ResolvedEvent data, CheckpointTag checkpointTag, Guid subscriptionId, long subscriptionMessageSequenceNumber)
    parameters:
    - id: data
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: subscriptionId
      type: Guid
    - id: subscriptionMessageSequenceNumber
      type: System.Int64
    return:
      type: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
    content.vb: Public Shared Function Sample(data As ResolvedEvent, checkpointTag As CheckpointTag, subscriptionId As Guid, subscriptionMessageSequenceNumber As Long) As EventReaderSubscriptionMessage.CommittedEventReceived
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Sample*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Data
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Data
  id: Data
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived.Data
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Data
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Data
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 224
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public ResolvedEvent Data { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    content.vb: Public ReadOnly Property Data As ResolvedEvent
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Data*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.EventCategory
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.EventCategory
  id: EventCategory
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  langs:
  - csharp
  - vb
  name: EventCategory
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived.EventCategory
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.EventCategory
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EventCategory
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 229
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string EventCategory { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property EventCategory As String
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.EventCategory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.FromCommittedEventDistributed(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,Guid,System.Int64)
  commentId: M:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.FromCommittedEventDistributed(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,Guid,System.Int64)
  id: FromCommittedEventDistributed(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,Guid,System.Int64)
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  langs:
  - csharp
  - vb
  name: FromCommittedEventDistributed(ReaderSubscriptionMessage.CommittedEventDistributed, CheckpointTag, String, Guid, Int64)
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived.FromCommittedEventDistributed(ReaderSubscriptionMessage.CommittedEventDistributed, CheckpointTag, String, Guid, Int64)
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.FromCommittedEventDistributed(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, Guid, System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: FromCommittedEventDistributed
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 234
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public static EventReaderSubscriptionMessage.CommittedEventReceived FromCommittedEventDistributed(ReaderSubscriptionMessage.CommittedEventDistributed message, CheckpointTag checkpointTag, string eventCategory, Guid subscriptionId, long subscriptionMessageSequenceNumber)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: eventCategory
      type: System.String
    - id: subscriptionId
      type: Guid
    - id: subscriptionMessageSequenceNumber
      type: System.Int64
    return:
      type: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
    content.vb: Public Shared Function FromCommittedEventDistributed(message As ReaderSubscriptionMessage.CommittedEventDistributed, checkpointTag As CheckpointTag, eventCategory As String, subscriptionId As Guid, subscriptionMessageSequenceNumber As Long) As EventReaderSubscriptionMessage.CommittedEventReceived
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.FromCommittedEventDistributed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.ToString
  commentId: M:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.ToString
  id: ToString
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived.ToString()
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.Projections.Core/Messages/EventReaderSubscriptionMessageBase.cs
    startLine: 243
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  isExternal: false
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  commentId: T:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  parent: EventStore.Projections.Core.Messages
  isExternal: false
  name: EventReaderSubscriptionMessageBase
  nameWithType: EventReaderSubscriptionMessageBase
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  isExternal: false
  name: CheckpointTag
  nameWithType: EventReaderSubscriptionMessageBase.CheckpointTag
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.CheckpointTag
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  isExternal: false
  name: Progress
  nameWithType: EventReaderSubscriptionMessageBase.Progress
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Progress
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  isExternal: false
  name: SubscriptionMessageSequenceNumber
  nameWithType: EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  isExternal: false
  name: SubscriptionId
  nameWithType: EventReaderSubscriptionMessageBase.SubscriptionId
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.SubscriptionId
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  isExternal: false
  name: Source
  nameWithType: EventReaderSubscriptionMessageBase.Source
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.Source
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<EventReaderSubscriptionMessage.CommittedEventReceived>()
  nameWithType: ProtobufExtensions.Serialize<EventReaderSubscriptionMessage.CommittedEventReceived>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of EventReaderSubscriptionMessage.CommittedEventReceived)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)()
  name.vb: Serialize(Of EventReaderSubscriptionMessage.CommittedEventReceived)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<EventReaderSubscriptionMessage.CommittedEventReceived>
    nameWithType: ProtobufExtensions.Serialize<EventReaderSubscriptionMessage.CommittedEventReceived>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of EventReaderSubscriptionMessage.CommittedEventReceived)
    nameWithType: ProtobufExtensions.Serialize(Of EventReaderSubscriptionMessage.CommittedEventReceived)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<EventReaderSubscriptionMessage.CommittedEventReceived>()
  nameWithType: ProtobufExtensions.SerializeToArray<EventReaderSubscriptionMessage.CommittedEventReceived>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of EventReaderSubscriptionMessage.CommittedEventReceived)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)()
  name.vb: SerializeToArray(Of EventReaderSubscriptionMessage.CommittedEventReceived)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<EventReaderSubscriptionMessage.CommittedEventReceived>
    nameWithType: ProtobufExtensions.SerializeToArray<EventReaderSubscriptionMessage.CommittedEventReceived>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of EventReaderSubscriptionMessage.CommittedEventReceived)
    nameWithType: ProtobufExtensions.SerializeToArray(Of EventReaderSubscriptionMessage.CommittedEventReceived)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId
  commentId: P:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId
  parent: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase
  isExternal: false
  name: MsgTypeId
  nameWithType: EventReaderSubscriptionMessageBase.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.MsgTypeId
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.MsgTypeId*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.MsgTypeId
  isExternal: false
  name: MsgTypeId
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.MsgTypeId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Sample*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Sample
  isExternal: false
  name: Sample
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived.Sample
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Sample
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  commentId: T:EventStore.Projections.Core.Services.Processing.ResolvedEvent
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  commentId: T:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  parent: EventStore.Projections.Core.Messages
  isExternal: false
  name: EventReaderSubscriptionMessage.CommittedEventReceived
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Data*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Data
  isExternal: false
  name: Data
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived.Data
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.Data
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.EventCategory*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.EventCategory
  isExternal: false
  name: EventCategory
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived.EventCategory
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.EventCategory
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.FromCommittedEventDistributed*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.FromCommittedEventDistributed
  isExternal: false
  name: FromCommittedEventDistributed
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived.FromCommittedEventDistributed
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.FromCommittedEventDistributed
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
  commentId: T:EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
  parent: EventStore.Projections.Core.Messages
  isExternal: false
  name: ReaderSubscriptionMessage.CommittedEventDistributed
  nameWithType: ReaderSubscriptionMessage.CommittedEventDistributed
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.ToString*
  commentId: Overload:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.ToString
  isExternal: false
  name: ToString
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived.ToString
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.ToString

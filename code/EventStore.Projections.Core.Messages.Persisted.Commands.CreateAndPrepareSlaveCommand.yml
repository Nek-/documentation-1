### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand
  commentId: T:EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand
  id: CreateAndPrepareSlaveCommand
  parent: EventStore.Projections.Core.Messages.Persisted.Commands
  children:
  - EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Config
  - EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.HandlerType
  - EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Id
  - EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.MasterCoreProjectionId
  - EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.MasterWorkerId
  - EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Name
  - EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Query
  - EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Version
  langs:
  - csharp
  - vb
  name: CreateAndPrepareSlaveCommand
  nameWithType: CreateAndPrepareSlaveCommand
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateAndPrepareSlaveCommand
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
    startLine: 2
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Commands
  syntax:
    content: 'public class CreateAndPrepareSlaveCommand : object'
    content.vb: >-
      Public Class CreateAndPrepareSlaveCommand
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Id
  commentId: P:EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Id
  id: Id
  parent: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: CreateAndPrepareSlaveCommand.Id
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Id
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Id
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
    startLine: 4
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Commands
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.MasterCoreProjectionId
  commentId: P:EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.MasterCoreProjectionId
  id: MasterCoreProjectionId
  parent: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand
  langs:
  - csharp
  - vb
  name: MasterCoreProjectionId
  nameWithType: CreateAndPrepareSlaveCommand.MasterCoreProjectionId
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.MasterCoreProjectionId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MasterCoreProjectionId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
    startLine: 5
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Commands
  syntax:
    content: public string MasterCoreProjectionId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MasterCoreProjectionId As String
  overload: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.MasterCoreProjectionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.MasterWorkerId
  commentId: P:EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.MasterWorkerId
  id: MasterWorkerId
  parent: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand
  langs:
  - csharp
  - vb
  name: MasterWorkerId
  nameWithType: CreateAndPrepareSlaveCommand.MasterWorkerId
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.MasterWorkerId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MasterWorkerId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Commands
  syntax:
    content: public string MasterWorkerId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MasterWorkerId As String
  overload: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.MasterWorkerId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Config
  commentId: P:EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Config
  id: Config
  parent: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: CreateAndPrepareSlaveCommand.Config
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Config
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Config
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
    startLine: 7
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Commands
  syntax:
    content: public PersistedProjectionConfig Config { get; set; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Messages.Persisted.Commands.PersistedProjectionConfig
    content.vb: Public Property Config As PersistedProjectionConfig
  overload: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Config*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Version
  commentId: P:EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Version
  id: Version
  parent: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: CreateAndPrepareSlaveCommand.Version
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Version
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Version
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Commands
  syntax:
    content: public PersistedProjectionVersion Version { get; set; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Messages.Persisted.Commands.PersistedProjectionVersion
    content.vb: Public Property Version As PersistedProjectionVersion
  overload: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.HandlerType
  commentId: P:EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.HandlerType
  id: HandlerType
  parent: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand
  langs:
  - csharp
  - vb
  name: HandlerType
  nameWithType: CreateAndPrepareSlaveCommand.HandlerType
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.HandlerType
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HandlerType
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
    startLine: 9
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Commands
  syntax:
    content: public string HandlerType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property HandlerType As String
  overload: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.HandlerType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Query
  commentId: P:EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Query
  id: Query
  parent: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: CreateAndPrepareSlaveCommand.Query
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Query
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Query
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
    startLine: 10
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Commands
  syntax:
    content: public string Query { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Query As String
  overload: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Query*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Name
  commentId: P:EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Name
  id: Name
  parent: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CreateAndPrepareSlaveCommand.Name
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Name
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Name
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Commands/CreateAndPrepareSlaveCommand.cs
    startLine: 11
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Commands
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Messages.Persisted.Commands
  commentId: N:EventStore.Projections.Core.Messages.Persisted.Commands
  isExternal: false
  name: EventStore.Projections.Core.Messages.Persisted.Commands
  nameWithType: EventStore.Projections.Core.Messages.Persisted.Commands
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<CreateAndPrepareSlaveCommand>()
  nameWithType: ProtobufExtensions.Serialize<CreateAndPrepareSlaveCommand>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of CreateAndPrepareSlaveCommand)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand)()
  name.vb: Serialize(Of CreateAndPrepareSlaveCommand)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<CreateAndPrepareSlaveCommand>
    nameWithType: ProtobufExtensions.Serialize<CreateAndPrepareSlaveCommand>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of CreateAndPrepareSlaveCommand)
    nameWithType: ProtobufExtensions.Serialize(Of CreateAndPrepareSlaveCommand)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<CreateAndPrepareSlaveCommand>()
  nameWithType: ProtobufExtensions.SerializeToArray<CreateAndPrepareSlaveCommand>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of CreateAndPrepareSlaveCommand)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand)()
  name.vb: SerializeToArray(Of CreateAndPrepareSlaveCommand)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<CreateAndPrepareSlaveCommand>
    nameWithType: ProtobufExtensions.SerializeToArray<CreateAndPrepareSlaveCommand>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of CreateAndPrepareSlaveCommand)
    nameWithType: ProtobufExtensions.SerializeToArray(Of CreateAndPrepareSlaveCommand)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Id*
  commentId: Overload:EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Id
  isExternal: false
  name: Id
  nameWithType: CreateAndPrepareSlaveCommand.Id
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Id
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.MasterCoreProjectionId*
  commentId: Overload:EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.MasterCoreProjectionId
  isExternal: false
  name: MasterCoreProjectionId
  nameWithType: CreateAndPrepareSlaveCommand.MasterCoreProjectionId
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.MasterCoreProjectionId
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.MasterWorkerId*
  commentId: Overload:EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.MasterWorkerId
  isExternal: false
  name: MasterWorkerId
  nameWithType: CreateAndPrepareSlaveCommand.MasterWorkerId
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.MasterWorkerId
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Config*
  commentId: Overload:EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Config
  isExternal: false
  name: Config
  nameWithType: CreateAndPrepareSlaveCommand.Config
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Config
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.PersistedProjectionConfig
  commentId: T:EventStore.Projections.Core.Messages.Persisted.Commands.PersistedProjectionConfig
  parent: EventStore.Projections.Core.Messages.Persisted.Commands
  isExternal: false
  name: PersistedProjectionConfig
  nameWithType: PersistedProjectionConfig
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.PersistedProjectionConfig
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Version*
  commentId: Overload:EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Version
  isExternal: false
  name: Version
  nameWithType: CreateAndPrepareSlaveCommand.Version
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Version
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.PersistedProjectionVersion
  commentId: T:EventStore.Projections.Core.Messages.Persisted.Commands.PersistedProjectionVersion
  parent: EventStore.Projections.Core.Messages.Persisted.Commands
  isExternal: false
  name: PersistedProjectionVersion
  nameWithType: PersistedProjectionVersion
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.PersistedProjectionVersion
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.HandlerType*
  commentId: Overload:EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.HandlerType
  isExternal: false
  name: HandlerType
  nameWithType: CreateAndPrepareSlaveCommand.HandlerType
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.HandlerType
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Query*
  commentId: Overload:EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Query
  isExternal: false
  name: Query
  nameWithType: CreateAndPrepareSlaveCommand.Query
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Query
- uid: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Name*
  commentId: Overload:EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Name
  isExternal: false
  name: Name
  nameWithType: CreateAndPrepareSlaveCommand.Name
  fullName: EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.Name

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse
  commentId: T:EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse
  id: PartitionProcessingResultResponse
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  children:
  - EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.CausedBy
  - EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.Partition
  - EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.Position
  - EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.Result
  - EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.SubscriptionId
  langs:
  - csharp
  - vb
  name: PartitionProcessingResultResponse
  nameWithType: PartitionProcessingResultResponse
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingResultResponse.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: PartitionProcessingResultResponse
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingResultResponse.cs
    startLine: 5
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  syntax:
    content: 'public class PartitionProcessingResultResponse : object'
    content.vb: >-
      Public Class PartitionProcessingResultResponse
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.SubscriptionId
  commentId: F:EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.SubscriptionId
  id: SubscriptionId
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: PartitionProcessingResultResponse.SubscriptionId
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.SubscriptionId
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingResultResponse.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SubscriptionId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingResultResponse.cs
    startLine: 7
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  syntax:
    content: public string SubscriptionId
    return:
      type: System.String
    content.vb: Public SubscriptionId As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.Partition
  commentId: F:EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.Partition
  id: Partition
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse
  langs:
  - csharp
  - vb
  name: Partition
  nameWithType: PartitionProcessingResultResponse.Partition
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.Partition
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingResultResponse.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Partition
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingResultResponse.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  syntax:
    content: public string Partition
    return:
      type: System.String
    content.vb: Public Partition As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.CausedBy
  commentId: F:EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.CausedBy
  id: CausedBy
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse
  langs:
  - csharp
  - vb
  name: CausedBy
  nameWithType: PartitionProcessingResultResponse.CausedBy
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.CausedBy
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingResultResponse.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: CausedBy
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingResultResponse.cs
    startLine: 9
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  syntax:
    content: public string CausedBy
    return:
      type: System.String
    content.vb: Public CausedBy As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.Position
  commentId: F:EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.Position
  id: Position
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: PartitionProcessingResultResponse.Position
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.Position
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingResultResponse.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Position
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingResultResponse.cs
    startLine: 12
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  syntax:
    content: public CheckpointTag Position
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Position As CheckpointTag
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.Result
  commentId: F:EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.Result
  id: Result
  parent: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: PartitionProcessingResultResponse.Result
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.Result
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingResultResponse.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Result
    path: ../EventStore/src/EventStore.Projections.Core/Messages/Persisted/Responses/Slave/PartitionProcessingResultResponse.cs
    startLine: 13
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  syntax:
    content: public string Result
    return:
      type: System.String
    content.vb: Public Result As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  commentId: N:EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  name: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  nameWithType: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
  fullName: EventStore.Projections.Core.Messages.Persisted.Responses.Slave
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PartitionProcessingResultResponse>()
  nameWithType: ProtobufExtensions.Serialize<PartitionProcessingResultResponse>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PartitionProcessingResultResponse)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse)()
  name.vb: Serialize(Of PartitionProcessingResultResponse)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PartitionProcessingResultResponse>
    nameWithType: ProtobufExtensions.Serialize<PartitionProcessingResultResponse>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PartitionProcessingResultResponse)
    nameWithType: ProtobufExtensions.Serialize(Of PartitionProcessingResultResponse)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PartitionProcessingResultResponse>()
  nameWithType: ProtobufExtensions.SerializeToArray<PartitionProcessingResultResponse>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PartitionProcessingResultResponse)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse)()
  name.vb: SerializeToArray(Of PartitionProcessingResultResponse)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PartitionProcessingResultResponse>
    nameWithType: ProtobufExtensions.SerializeToArray<PartitionProcessingResultResponse>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PartitionProcessingResultResponse)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PartitionProcessingResultResponse)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing

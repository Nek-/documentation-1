### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  commentId: T:EventStore.Projections.Core.Messages.QuerySourcesDefinition
  id: QuerySourcesDefinition
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.AllEvents
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.AllStreams
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.ByCustomPartitions
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.ByStreams
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.CatalogStream
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.Categories
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.Events
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesCatalogTransform
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesFold
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesStateTransform
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DisableParallelismOption
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#HandlesDeletedNotifications
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#IncludeLinksOption
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#IsBiState
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#PartitionResultStreamNamePatternOption
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ProcessingLagOption
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ProducesResults
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ReorderEventsOption
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ResultStreamNameOption
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.From(EventStore.Projections.Core.Messages.IQuerySources)
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.LimitingCommitPosition
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.Options
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.Streams
  langs:
  - csharp
  - vb
  name: QuerySourcesDefinition
  nameWithType: QuerySourcesDefinition
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: QuerySourcesDefinition
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 5
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: 'public class QuerySourcesDefinition : object, IQuerySources'
    content.vb: >-
      Public Class QuerySourcesDefinition
          Inherits Object
          Implements IQuerySources
  inheritance:
  - System.Object
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.AllStreams
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.AllStreams
  id: AllStreams
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: AllStreams
  nameWithType: QuerySourcesDefinition.AllStreams
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.AllStreams
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: AllStreams
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool AllStreams { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllStreams As Boolean
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.AllStreams*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.AllStreams
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Categories
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.Categories
  id: Categories
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: Categories
  nameWithType: QuerySourcesDefinition.Categories
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Categories
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Categories
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 11
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string[] Categories { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property Categories As String()
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Categories*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.Categories
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Streams
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.Streams
  id: Streams
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: Streams
  nameWithType: QuerySourcesDefinition.Streams
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Streams
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Streams
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 14
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string[] Streams { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property Streams As String()
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Streams*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.Streams
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.CatalogStream
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.CatalogStream
  id: CatalogStream
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: CatalogStream
  nameWithType: QuerySourcesDefinition.CatalogStream
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.CatalogStream
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CatalogStream
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 17
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string CatalogStream { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CatalogStream As String
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.CatalogStream*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.CatalogStream
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.AllEvents
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.AllEvents
  id: AllEvents
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: AllEvents
  nameWithType: QuerySourcesDefinition.AllEvents
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.AllEvents
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: AllEvents
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 20
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool AllEvents { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllEvents As Boolean
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.AllEvents*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.AllEvents
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Events
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.Events
  id: Events
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: QuerySourcesDefinition.Events
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Events
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Events
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 23
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string[] Events { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property Events As String()
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Events*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.Events
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.ByStreams
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.ByStreams
  id: ByStreams
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: ByStreams
  nameWithType: QuerySourcesDefinition.ByStreams
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.ByStreams
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ByStreams
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 26
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool ByStreams { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ByStreams As Boolean
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.ByStreams*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.ByStreams
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.ByCustomPartitions
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.ByCustomPartitions
  id: ByCustomPartitions
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: ByCustomPartitions
  nameWithType: QuerySourcesDefinition.ByCustomPartitions
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.ByCustomPartitions
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ByCustomPartitions
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 29
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public bool ByCustomPartitions { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ByCustomPartitions As Boolean
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.ByCustomPartitions*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.ByCustomPartitions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.LimitingCommitPosition
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.LimitingCommitPosition
  id: LimitingCommitPosition
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: LimitingCommitPosition
  nameWithType: QuerySourcesDefinition.LimitingCommitPosition
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.LimitingCommitPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: LimitingCommitPosition
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 32
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public long? LimitingCommitPosition { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Property LimitingCommitPosition As Long?
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.LimitingCommitPosition*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.LimitingCommitPosition
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesStateTransform
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesStateTransform
  id: EventStore#Projections#Core#Messages#IQuerySources#DefinesStateTransform
  isEii: true
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: IQuerySources.DefinesStateTransform
  nameWithType: QuerySourcesDefinition.IQuerySources.DefinesStateTransform
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 35
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool IQuerySources.DefinesStateTransform { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform As Boolean Implements IQuerySources.DefinesStateTransform
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesStateTransform*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesCatalogTransform
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesCatalogTransform
  id: EventStore#Projections#Core#Messages#IQuerySources#DefinesCatalogTransform
  isEii: true
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: IQuerySources.DefinesCatalogTransform
  nameWithType: QuerySourcesDefinition.IQuerySources.DefinesCatalogTransform
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 40
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool IQuerySources.DefinesCatalogTransform { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform As Boolean Implements IQuerySources.DefinesCatalogTransform
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesCatalogTransform*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ProducesResults
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ProducesResults
  id: EventStore#Projections#Core#Messages#IQuerySources#ProducesResults
  isEii: true
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: IQuerySources.ProducesResults
  nameWithType: QuerySourcesDefinition.IQuerySources.ProducesResults
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.ProducesResults
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EventStore.Projections.Core.Messages.IQuerySources.ProducesResults
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 45
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool IQuerySources.ProducesResults { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property EventStore.Projections.Core.Messages.IQuerySources.ProducesResults As Boolean Implements IQuerySources.ProducesResults
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ProducesResults*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.ProducesResults
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.ProducesResults
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.ProducesResults
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesFold
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesFold
  id: EventStore#Projections#Core#Messages#IQuerySources#DefinesFold
  isEii: true
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: IQuerySources.DefinesFold
  nameWithType: QuerySourcesDefinition.IQuerySources.DefinesFold
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.DefinesFold
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EventStore.Projections.Core.Messages.IQuerySources.DefinesFold
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 50
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool IQuerySources.DefinesFold { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property EventStore.Projections.Core.Messages.IQuerySources.DefinesFold As Boolean Implements IQuerySources.DefinesFold
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesFold*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.DefinesFold
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.DefinesFold
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.DefinesFold
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#HandlesDeletedNotifications
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#HandlesDeletedNotifications
  id: EventStore#Projections#Core#Messages#IQuerySources#HandlesDeletedNotifications
  isEii: true
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: IQuerySources.HandlesDeletedNotifications
  nameWithType: QuerySourcesDefinition.IQuerySources.HandlesDeletedNotifications
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 55
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool IQuerySources.HandlesDeletedNotifications { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications As Boolean Implements IQuerySources.HandlesDeletedNotifications
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#HandlesDeletedNotifications*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#IncludeLinksOption
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#IncludeLinksOption
  id: EventStore#Projections#Core#Messages#IQuerySources#IncludeLinksOption
  isEii: true
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: IQuerySources.IncludeLinksOption
  nameWithType: QuerySourcesDefinition.IQuerySources.IncludeLinksOption
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 60
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool IQuerySources.IncludeLinksOption { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption As Boolean Implements IQuerySources.IncludeLinksOption
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#IncludeLinksOption*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DisableParallelismOption
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DisableParallelismOption
  id: EventStore#Projections#Core#Messages#IQuerySources#DisableParallelismOption
  isEii: true
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: IQuerySources.DisableParallelismOption
  nameWithType: QuerySourcesDefinition.IQuerySources.DisableParallelismOption
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 65
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool IQuerySources.DisableParallelismOption { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption As Boolean Implements IQuerySources.DisableParallelismOption
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DisableParallelismOption*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ResultStreamNameOption
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ResultStreamNameOption
  id: EventStore#Projections#Core#Messages#IQuerySources#ResultStreamNameOption
  isEii: true
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: IQuerySources.ResultStreamNameOption
  nameWithType: QuerySourcesDefinition.IQuerySources.ResultStreamNameOption
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 70
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: string IQuerySources.ResultStreamNameOption { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly WriteOnly Property EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption As String Implements IQuerySources.ResultStreamNameOption
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ResultStreamNameOption*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#PartitionResultStreamNamePatternOption
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#PartitionResultStreamNamePatternOption
  id: EventStore#Projections#Core#Messages#IQuerySources#PartitionResultStreamNamePatternOption
  isEii: true
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: IQuerySources.PartitionResultStreamNamePatternOption
  nameWithType: QuerySourcesDefinition.IQuerySources.PartitionResultStreamNamePatternOption
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 75
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: string IQuerySources.PartitionResultStreamNamePatternOption { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly WriteOnly Property EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption As String Implements IQuerySources.PartitionResultStreamNamePatternOption
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#PartitionResultStreamNamePatternOption*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ReorderEventsOption
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ReorderEventsOption
  id: EventStore#Projections#Core#Messages#IQuerySources#ReorderEventsOption
  isEii: true
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: IQuerySources.ReorderEventsOption
  nameWithType: QuerySourcesDefinition.IQuerySources.ReorderEventsOption
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 80
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool IQuerySources.ReorderEventsOption { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption As Boolean Implements IQuerySources.ReorderEventsOption
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ReorderEventsOption*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ProcessingLagOption
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ProcessingLagOption
  id: EventStore#Projections#Core#Messages#IQuerySources#ProcessingLagOption
  isEii: true
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: IQuerySources.ProcessingLagOption
  nameWithType: QuerySourcesDefinition.IQuerySources.ProcessingLagOption
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 88
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: int? IQuerySources.ProcessingLagOption { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: ReadOnly WriteOnly Property EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption As Integer? Implements IQuerySources.ProcessingLagOption
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ProcessingLagOption*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#IsBiState
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#IsBiState
  id: EventStore#Projections#Core#Messages#IQuerySources#IsBiState
  isEii: true
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: IQuerySources.IsBiState
  nameWithType: QuerySourcesDefinition.IQuerySources.IsBiState
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.IsBiState
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EventStore.Projections.Core.Messages.IQuerySources.IsBiState
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 93
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: bool IQuerySources.IsBiState { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property EventStore.Projections.Core.Messages.IQuerySources.IsBiState As Boolean Implements IQuerySources.IsBiState
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#IsBiState*
  implements:
  - EventStore.Projections.Core.Messages.IQuerySources.IsBiState
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.IsBiState
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.IsBiState
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Options
  commentId: P:EventStore.Projections.Core.Messages.QuerySourcesDefinition.Options
  id: Options
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: QuerySourcesDefinition.Options
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Options
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Options
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 98
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public QuerySourcesDefinitionOptions Options { get; set; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
    content.vb: Public Property Options As QuerySourcesDefinitionOptions
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Options*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.From(EventStore.Projections.Core.Messages.IQuerySources)
  commentId: M:EventStore.Projections.Core.Messages.QuerySourcesDefinition.From(EventStore.Projections.Core.Messages.IQuerySources)
  id: From(EventStore.Projections.Core.Messages.IQuerySources)
  parent: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  langs:
  - csharp
  - vb
  name: From(IQuerySources)
  nameWithType: QuerySourcesDefinition.From(IQuerySources)
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.From(EventStore.Projections.Core.Messages.IQuerySources)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: From
    path: ../EventStore/src/EventStore.Projections.Core/Messages/QuerySourcesDefinition.cs
    startLine: 101
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public static QuerySourcesDefinition From(IQuerySources sources)
    parameters:
    - id: sources
      type: EventStore.Projections.Core.Messages.IQuerySources
    return:
      type: EventStore.Projections.Core.Messages.QuerySourcesDefinition
    content.vb: Public Shared Function From(sources As IQuerySources) As QuerySourcesDefinition
  overload: EventStore.Projections.Core.Messages.QuerySourcesDefinition.From*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  isExternal: false
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Messages.IQuerySources
  commentId: T:EventStore.Projections.Core.Messages.IQuerySources
  parent: EventStore.Projections.Core.Messages
  isExternal: false
  name: IQuerySources
  nameWithType: IQuerySources
  fullName: EventStore.Projections.Core.Messages.IQuerySources
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<QuerySourcesDefinition>()
  nameWithType: ProtobufExtensions.Serialize<QuerySourcesDefinition>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.QuerySourcesDefinition>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of QuerySourcesDefinition)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.QuerySourcesDefinition)()
  name.vb: Serialize(Of QuerySourcesDefinition)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<QuerySourcesDefinition>
    nameWithType: ProtobufExtensions.Serialize<QuerySourcesDefinition>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.QuerySourcesDefinition>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of QuerySourcesDefinition)
    nameWithType: ProtobufExtensions.Serialize(Of QuerySourcesDefinition)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.QuerySourcesDefinition)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<QuerySourcesDefinition>()
  nameWithType: ProtobufExtensions.SerializeToArray<QuerySourcesDefinition>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.QuerySourcesDefinition>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of QuerySourcesDefinition)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.QuerySourcesDefinition)()
  name.vb: SerializeToArray(Of QuerySourcesDefinition)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<QuerySourcesDefinition>
    nameWithType: ProtobufExtensions.SerializeToArray<QuerySourcesDefinition>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.QuerySourcesDefinition>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of QuerySourcesDefinition)
    nameWithType: ProtobufExtensions.SerializeToArray(Of QuerySourcesDefinition)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.QuerySourcesDefinition)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.AllStreams*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.AllStreams
  isExternal: false
  name: AllStreams
  nameWithType: QuerySourcesDefinition.AllStreams
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.AllStreams
- uid: EventStore.Projections.Core.Messages.IQuerySources.AllStreams
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.AllStreams
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: AllStreams
  nameWithType: IQuerySources.AllStreams
  fullName: EventStore.Projections.Core.Messages.IQuerySources.AllStreams
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Categories*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.Categories
  isExternal: false
  name: Categories
  nameWithType: QuerySourcesDefinition.Categories
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Categories
- uid: EventStore.Projections.Core.Messages.IQuerySources.Categories
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.Categories
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: Categories
  nameWithType: IQuerySources.Categories
  fullName: EventStore.Projections.Core.Messages.IQuerySources.Categories
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Streams*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.Streams
  isExternal: false
  name: Streams
  nameWithType: QuerySourcesDefinition.Streams
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Streams
- uid: EventStore.Projections.Core.Messages.IQuerySources.Streams
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.Streams
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: Streams
  nameWithType: IQuerySources.Streams
  fullName: EventStore.Projections.Core.Messages.IQuerySources.Streams
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.CatalogStream*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.CatalogStream
  isExternal: false
  name: CatalogStream
  nameWithType: QuerySourcesDefinition.CatalogStream
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.CatalogStream
- uid: EventStore.Projections.Core.Messages.IQuerySources.CatalogStream
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.CatalogStream
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: CatalogStream
  nameWithType: IQuerySources.CatalogStream
  fullName: EventStore.Projections.Core.Messages.IQuerySources.CatalogStream
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.AllEvents*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.AllEvents
  isExternal: false
  name: AllEvents
  nameWithType: QuerySourcesDefinition.AllEvents
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.AllEvents
- uid: EventStore.Projections.Core.Messages.IQuerySources.AllEvents
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.AllEvents
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: AllEvents
  nameWithType: IQuerySources.AllEvents
  fullName: EventStore.Projections.Core.Messages.IQuerySources.AllEvents
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Events*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.Events
  isExternal: false
  name: Events
  nameWithType: QuerySourcesDefinition.Events
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Events
- uid: EventStore.Projections.Core.Messages.IQuerySources.Events
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.Events
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: Events
  nameWithType: IQuerySources.Events
  fullName: EventStore.Projections.Core.Messages.IQuerySources.Events
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.ByStreams*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.ByStreams
  isExternal: false
  name: ByStreams
  nameWithType: QuerySourcesDefinition.ByStreams
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.ByStreams
- uid: EventStore.Projections.Core.Messages.IQuerySources.ByStreams
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.ByStreams
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: ByStreams
  nameWithType: IQuerySources.ByStreams
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ByStreams
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.ByCustomPartitions*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.ByCustomPartitions
  isExternal: false
  name: ByCustomPartitions
  nameWithType: QuerySourcesDefinition.ByCustomPartitions
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.ByCustomPartitions
- uid: EventStore.Projections.Core.Messages.IQuerySources.ByCustomPartitions
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.ByCustomPartitions
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: ByCustomPartitions
  nameWithType: IQuerySources.ByCustomPartitions
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ByCustomPartitions
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.LimitingCommitPosition*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.LimitingCommitPosition
  isExternal: false
  name: LimitingCommitPosition
  nameWithType: QuerySourcesDefinition.LimitingCommitPosition
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.LimitingCommitPosition
- uid: EventStore.Projections.Core.Messages.IQuerySources.LimitingCommitPosition
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.LimitingCommitPosition
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: LimitingCommitPosition
  nameWithType: IQuerySources.LimitingCommitPosition
  fullName: EventStore.Projections.Core.Messages.IQuerySources.LimitingCommitPosition
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesStateTransform*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesStateTransform
  isExternal: false
  name: IQuerySources.DefinesStateTransform
  nameWithType: QuerySourcesDefinition.IQuerySources.DefinesStateTransform
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform
- uid: EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: DefinesStateTransform
  nameWithType: IQuerySources.DefinesStateTransform
  fullName: EventStore.Projections.Core.Messages.IQuerySources.DefinesStateTransform
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesCatalogTransform*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesCatalogTransform
  isExternal: false
  name: IQuerySources.DefinesCatalogTransform
  nameWithType: QuerySourcesDefinition.IQuerySources.DefinesCatalogTransform
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform
- uid: EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: DefinesCatalogTransform
  nameWithType: IQuerySources.DefinesCatalogTransform
  fullName: EventStore.Projections.Core.Messages.IQuerySources.DefinesCatalogTransform
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ProducesResults*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ProducesResults
  isExternal: false
  name: IQuerySources.ProducesResults
  nameWithType: QuerySourcesDefinition.IQuerySources.ProducesResults
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.ProducesResults
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.ProducesResults
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.ProducesResults
- uid: EventStore.Projections.Core.Messages.IQuerySources.ProducesResults
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.ProducesResults
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: ProducesResults
  nameWithType: IQuerySources.ProducesResults
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ProducesResults
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesFold*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DefinesFold
  isExternal: false
  name: IQuerySources.DefinesFold
  nameWithType: QuerySourcesDefinition.IQuerySources.DefinesFold
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.DefinesFold
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.DefinesFold
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.DefinesFold
- uid: EventStore.Projections.Core.Messages.IQuerySources.DefinesFold
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.DefinesFold
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: DefinesFold
  nameWithType: IQuerySources.DefinesFold
  fullName: EventStore.Projections.Core.Messages.IQuerySources.DefinesFold
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#HandlesDeletedNotifications*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#HandlesDeletedNotifications
  isExternal: false
  name: IQuerySources.HandlesDeletedNotifications
  nameWithType: QuerySourcesDefinition.IQuerySources.HandlesDeletedNotifications
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications
- uid: EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: HandlesDeletedNotifications
  nameWithType: IQuerySources.HandlesDeletedNotifications
  fullName: EventStore.Projections.Core.Messages.IQuerySources.HandlesDeletedNotifications
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#IncludeLinksOption*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#IncludeLinksOption
  isExternal: false
  name: IQuerySources.IncludeLinksOption
  nameWithType: QuerySourcesDefinition.IQuerySources.IncludeLinksOption
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption
- uid: EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: IncludeLinksOption
  nameWithType: IQuerySources.IncludeLinksOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.IncludeLinksOption
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DisableParallelismOption*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#DisableParallelismOption
  isExternal: false
  name: IQuerySources.DisableParallelismOption
  nameWithType: QuerySourcesDefinition.IQuerySources.DisableParallelismOption
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption
- uid: EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: DisableParallelismOption
  nameWithType: IQuerySources.DisableParallelismOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.DisableParallelismOption
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ResultStreamNameOption*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ResultStreamNameOption
  isExternal: false
  name: IQuerySources.ResultStreamNameOption
  nameWithType: QuerySourcesDefinition.IQuerySources.ResultStreamNameOption
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption
- uid: EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: ResultStreamNameOption
  nameWithType: IQuerySources.ResultStreamNameOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ResultStreamNameOption
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#PartitionResultStreamNamePatternOption*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#PartitionResultStreamNamePatternOption
  isExternal: false
  name: IQuerySources.PartitionResultStreamNamePatternOption
  nameWithType: QuerySourcesDefinition.IQuerySources.PartitionResultStreamNamePatternOption
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption
- uid: EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: PartitionResultStreamNamePatternOption
  nameWithType: IQuerySources.PartitionResultStreamNamePatternOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.PartitionResultStreamNamePatternOption
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ReorderEventsOption*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ReorderEventsOption
  isExternal: false
  name: IQuerySources.ReorderEventsOption
  nameWithType: QuerySourcesDefinition.IQuerySources.ReorderEventsOption
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption
- uid: EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: ReorderEventsOption
  nameWithType: IQuerySources.ReorderEventsOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ReorderEventsOption
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ProcessingLagOption*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#ProcessingLagOption
  isExternal: false
  name: IQuerySources.ProcessingLagOption
  nameWithType: QuerySourcesDefinition.IQuerySources.ProcessingLagOption
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption
- uid: EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: ProcessingLagOption
  nameWithType: IQuerySources.ProcessingLagOption
  fullName: EventStore.Projections.Core.Messages.IQuerySources.ProcessingLagOption
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#IsBiState*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore#Projections#Core#Messages#IQuerySources#IsBiState
  isExternal: false
  name: IQuerySources.IsBiState
  nameWithType: QuerySourcesDefinition.IQuerySources.IsBiState
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.IsBiState
  nameWithType.vb: QuerySourcesDefinition.EventStore.Projections.Core.Messages.IQuerySources.IsBiState
  name.vb: EventStore.Projections.Core.Messages.IQuerySources.IsBiState
- uid: EventStore.Projections.Core.Messages.IQuerySources.IsBiState
  commentId: P:EventStore.Projections.Core.Messages.IQuerySources.IsBiState
  parent: EventStore.Projections.Core.Messages.IQuerySources
  isExternal: false
  name: IsBiState
  nameWithType: IQuerySources.IsBiState
  fullName: EventStore.Projections.Core.Messages.IQuerySources.IsBiState
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Options*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.Options
  isExternal: false
  name: Options
  nameWithType: QuerySourcesDefinition.Options
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.Options
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
  commentId: T:EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
  parent: EventStore.Projections.Core.Messages
  isExternal: false
  name: QuerySourcesDefinitionOptions
  nameWithType: QuerySourcesDefinitionOptions
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition.From*
  commentId: Overload:EventStore.Projections.Core.Messages.QuerySourcesDefinition.From
  isExternal: false
  name: From
  nameWithType: QuerySourcesDefinition.From
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition.From
- uid: EventStore.Projections.Core.Messages.QuerySourcesDefinition
  commentId: T:EventStore.Projections.Core.Messages.QuerySourcesDefinition
  parent: EventStore.Projections.Core.Messages
  isExternal: false
  name: QuerySourcesDefinition
  nameWithType: QuerySourcesDefinition
  fullName: EventStore.Projections.Core.Messages.QuerySourcesDefinition

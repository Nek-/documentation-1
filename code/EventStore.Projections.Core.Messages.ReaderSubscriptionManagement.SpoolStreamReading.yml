### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  commentId: T:EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  id: ReaderSubscriptionManagement.SpoolStreamReading
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.#ctor(Guid,Guid,System.String,System.Int64,System.Int64)
  - EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.CatalogSequenceNumber
  - EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.LimitingCommitPosition
  - EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.MsgTypeId
  - EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.StreamId
  - EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.SubscriptionId
  - EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.WorkerId
  langs:
  - csharp
  - vb
  name: ReaderSubscriptionManagement.SpoolStreamReading
  nameWithType: ReaderSubscriptionManagement.SpoolStreamReading
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ReaderSubscriptionManagement.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SpoolStreamReading
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ReaderSubscriptionManagement.cs
    startLine: 99
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: 'public sealed class SpoolStreamReading : Message'
    content.vb: >-
      Public NotInheritable Class SpoolStreamReading
          Inherits Message
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.MsgTypeId
  commentId: P:EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: ReaderSubscriptionManagement.SpoolStreamReading.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ReaderSubscriptionManagement.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ReaderSubscriptionManagement.cs
    startLine: 102
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messaging.Message.MsgTypeId
  overload: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.LimitingCommitPosition
  commentId: P:EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.LimitingCommitPosition
  id: LimitingCommitPosition
  parent: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  langs:
  - csharp
  - vb
  name: LimitingCommitPosition
  nameWithType: ReaderSubscriptionManagement.SpoolStreamReading.LimitingCommitPosition
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.LimitingCommitPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ReaderSubscriptionManagement.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: LimitingCommitPosition
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ReaderSubscriptionManagement.cs
    startLine: 104
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public long LimitingCommitPosition { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property LimitingCommitPosition As Long
  overload: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.LimitingCommitPosition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.WorkerId
  commentId: P:EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.WorkerId
  id: WorkerId
  parent: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  langs:
  - csharp
  - vb
  name: WorkerId
  nameWithType: ReaderSubscriptionManagement.SpoolStreamReading.WorkerId
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.WorkerId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ReaderSubscriptionManagement.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WorkerId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ReaderSubscriptionManagement.cs
    startLine: 109
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public Guid WorkerId { get; }
    parameters: []
    return:
      type: Guid
    content.vb: Public ReadOnly Property WorkerId As Guid
  overload: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.WorkerId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.SubscriptionId
  commentId: F:EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.SubscriptionId
  id: SubscriptionId
  parent: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: ReaderSubscriptionManagement.SpoolStreamReading.SubscriptionId
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.SubscriptionId
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ReaderSubscriptionManagement.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SubscriptionId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ReaderSubscriptionManagement.cs
    startLine: 115
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public readonly Guid SubscriptionId
    return:
      type: Guid
    content.vb: Public ReadOnly SubscriptionId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.StreamId
  commentId: F:EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.StreamId
  id: StreamId
  parent: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  langs:
  - csharp
  - vb
  name: StreamId
  nameWithType: ReaderSubscriptionManagement.SpoolStreamReading.StreamId
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.StreamId
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ReaderSubscriptionManagement.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StreamId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ReaderSubscriptionManagement.cs
    startLine: 116
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public readonly string StreamId
    return:
      type: System.String
    content.vb: Public ReadOnly StreamId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.CatalogSequenceNumber
  commentId: F:EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.CatalogSequenceNumber
  id: CatalogSequenceNumber
  parent: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  langs:
  - csharp
  - vb
  name: CatalogSequenceNumber
  nameWithType: ReaderSubscriptionManagement.SpoolStreamReading.CatalogSequenceNumber
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.CatalogSequenceNumber
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ReaderSubscriptionManagement.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CatalogSequenceNumber
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ReaderSubscriptionManagement.cs
    startLine: 117
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public readonly long CatalogSequenceNumber
    return:
      type: System.Int64
    content.vb: Public ReadOnly CatalogSequenceNumber As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.#ctor(Guid,Guid,System.String,System.Int64,System.Int64)
  commentId: M:EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.#ctor(Guid,Guid,System.String,System.Int64,System.Int64)
  id: '#ctor(Guid,Guid,System.String,System.Int64,System.Int64)'
  parent: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading
  langs:
  - csharp
  - vb
  name: SpoolStreamReading(Guid, Guid, String, Int64, Int64)
  nameWithType: ReaderSubscriptionManagement.SpoolStreamReading.SpoolStreamReading(Guid, Guid, String, Int64, Int64)
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.SpoolStreamReading(Guid, Guid, System.String, System.Int64, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/ReaderSubscriptionManagement.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Messages/ReaderSubscriptionManagement.cs
    startLine: 120
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public SpoolStreamReading(Guid workerId, Guid subscriptionId, string streamId, long catalogSequenceNumber, long limitingCommitPosition)
    parameters:
    - id: workerId
      type: Guid
    - id: subscriptionId
      type: Guid
    - id: streamId
      type: System.String
    - id: catalogSequenceNumber
      type: System.Int64
    - id: limitingCommitPosition
      type: System.Int64
    content.vb: Public Sub New(workerId As Guid, subscriptionId As Guid, streamId As String, catalogSequenceNumber As Long, limitingCommitPosition As Long)
  overload: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  isExternal: false
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ReaderSubscriptionManagement.SpoolStreamReading>()
  nameWithType: ProtobufExtensions.Serialize<ReaderSubscriptionManagement.SpoolStreamReading>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ReaderSubscriptionManagement.SpoolStreamReading)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading)()
  name.vb: Serialize(Of ReaderSubscriptionManagement.SpoolStreamReading)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ReaderSubscriptionManagement.SpoolStreamReading>
    nameWithType: ProtobufExtensions.Serialize<ReaderSubscriptionManagement.SpoolStreamReading>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ReaderSubscriptionManagement.SpoolStreamReading)
    nameWithType: ProtobufExtensions.Serialize(Of ReaderSubscriptionManagement.SpoolStreamReading)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ReaderSubscriptionManagement.SpoolStreamReading>()
  nameWithType: ProtobufExtensions.SerializeToArray<ReaderSubscriptionManagement.SpoolStreamReading>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ReaderSubscriptionManagement.SpoolStreamReading)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading)()
  name.vb: SerializeToArray(Of ReaderSubscriptionManagement.SpoolStreamReading)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ReaderSubscriptionManagement.SpoolStreamReading>
    nameWithType: ProtobufExtensions.SerializeToArray<ReaderSubscriptionManagement.SpoolStreamReading>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ReaderSubscriptionManagement.SpoolStreamReading)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ReaderSubscriptionManagement.SpoolStreamReading)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  isExternal: false
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messaging.Message.MsgTypeId
  commentId: P:EventStore.Core.Messaging.Message.MsgTypeId
  parent: EventStore.Core.Messaging.Message
  isExternal: false
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.MsgTypeId*
  commentId: Overload:EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.MsgTypeId
  isExternal: false
  name: MsgTypeId
  nameWithType: ReaderSubscriptionManagement.SpoolStreamReading.MsgTypeId
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.MsgTypeId
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.LimitingCommitPosition*
  commentId: Overload:EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.LimitingCommitPosition
  isExternal: false
  name: LimitingCommitPosition
  nameWithType: ReaderSubscriptionManagement.SpoolStreamReading.LimitingCommitPosition
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.LimitingCommitPosition
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.WorkerId*
  commentId: Overload:EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.WorkerId
  isExternal: false
  name: WorkerId
  nameWithType: ReaderSubscriptionManagement.SpoolStreamReading.WorkerId
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.WorkerId
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.#ctor*
  commentId: Overload:EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.#ctor
  isExternal: false
  name: SpoolStreamReading
  nameWithType: ReaderSubscriptionManagement.SpoolStreamReading.SpoolStreamReading
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.SpoolStreamReading

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel
  commentId: T:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel
  id: SlaveProjectionCommunicationChannel
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.#ctor(System.String,Guid,Guid)
  - EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.ManagedProjectionName
  - EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.SubscriptionId
  - EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.WorkerId
  langs:
  - csharp
  - vb
  name: SlaveProjectionCommunicationChannel
  nameWithType: SlaveProjectionCommunicationChannel
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/SlaveProjectionCommunicationChannel.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: SlaveProjectionCommunicationChannel
    path: ../EventStore/src/EventStore.Projections.Core/Messages/SlaveProjectionCommunicationChannel.cs
    startLine: 4
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: 'public sealed class SlaveProjectionCommunicationChannel : object'
    content.vb: >-
      Public NotInheritable Class SlaveProjectionCommunicationChannel
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.#ctor(System.String,Guid,Guid)
  commentId: M:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.#ctor(System.String,Guid,Guid)
  id: '#ctor(System.String,Guid,Guid)'
  parent: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel
  langs:
  - csharp
  - vb
  name: SlaveProjectionCommunicationChannel(String, Guid, Guid)
  nameWithType: SlaveProjectionCommunicationChannel.SlaveProjectionCommunicationChannel(String, Guid, Guid)
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.SlaveProjectionCommunicationChannel(System.String, Guid, Guid)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/SlaveProjectionCommunicationChannel.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Messages/SlaveProjectionCommunicationChannel.cs
    startLine: 10
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public SlaveProjectionCommunicationChannel(string managedProjectionName, Guid workerId, Guid subscriptionId)
    parameters:
    - id: managedProjectionName
      type: System.String
    - id: workerId
      type: Guid
    - id: subscriptionId
      type: Guid
    content.vb: Public Sub New(managedProjectionName As String, workerId As Guid, subscriptionId As Guid)
  overload: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.SubscriptionId
  commentId: P:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.SubscriptionId
  id: SubscriptionId
  parent: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: SlaveProjectionCommunicationChannel.SubscriptionId
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.SubscriptionId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/SlaveProjectionCommunicationChannel.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: SubscriptionId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/SlaveProjectionCommunicationChannel.cs
    startLine: 20
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public Guid SubscriptionId { get; }
    parameters: []
    return:
      type: Guid
    content.vb: Public ReadOnly Property SubscriptionId As Guid
  overload: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.SubscriptionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.ManagedProjectionName
  commentId: P:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.ManagedProjectionName
  id: ManagedProjectionName
  parent: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel
  langs:
  - csharp
  - vb
  name: ManagedProjectionName
  nameWithType: SlaveProjectionCommunicationChannel.ManagedProjectionName
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.ManagedProjectionName
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/SlaveProjectionCommunicationChannel.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ManagedProjectionName
    path: ../EventStore/src/EventStore.Projections.Core/Messages/SlaveProjectionCommunicationChannel.cs
    startLine: 25
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public string ManagedProjectionName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ManagedProjectionName As String
  overload: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.ManagedProjectionName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.WorkerId
  commentId: P:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.WorkerId
  id: WorkerId
  parent: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel
  langs:
  - csharp
  - vb
  name: WorkerId
  nameWithType: SlaveProjectionCommunicationChannel.WorkerId
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.WorkerId
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/SlaveProjectionCommunicationChannel.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: WorkerId
    path: ../EventStore/src/EventStore.Projections.Core/Messages/SlaveProjectionCommunicationChannel.cs
    startLine: 30
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public Guid WorkerId { get; }
    parameters: []
    return:
      type: Guid
    content.vb: Public ReadOnly Property WorkerId As Guid
  overload: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.WorkerId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  isExternal: false
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<SlaveProjectionCommunicationChannel>()
  nameWithType: ProtobufExtensions.Serialize<SlaveProjectionCommunicationChannel>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of SlaveProjectionCommunicationChannel)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel)()
  name.vb: Serialize(Of SlaveProjectionCommunicationChannel)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<SlaveProjectionCommunicationChannel>
    nameWithType: ProtobufExtensions.Serialize<SlaveProjectionCommunicationChannel>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of SlaveProjectionCommunicationChannel)
    nameWithType: ProtobufExtensions.Serialize(Of SlaveProjectionCommunicationChannel)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<SlaveProjectionCommunicationChannel>()
  nameWithType: ProtobufExtensions.SerializeToArray<SlaveProjectionCommunicationChannel>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of SlaveProjectionCommunicationChannel)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel)()
  name.vb: SerializeToArray(Of SlaveProjectionCommunicationChannel)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<SlaveProjectionCommunicationChannel>
    nameWithType: ProtobufExtensions.SerializeToArray<SlaveProjectionCommunicationChannel>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of SlaveProjectionCommunicationChannel)
    nameWithType: ProtobufExtensions.SerializeToArray(Of SlaveProjectionCommunicationChannel)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.#ctor*
  commentId: Overload:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.#ctor
  isExternal: false
  name: SlaveProjectionCommunicationChannel
  nameWithType: SlaveProjectionCommunicationChannel.SlaveProjectionCommunicationChannel
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.SlaveProjectionCommunicationChannel
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.SubscriptionId*
  commentId: Overload:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.SubscriptionId
  isExternal: false
  name: SubscriptionId
  nameWithType: SlaveProjectionCommunicationChannel.SubscriptionId
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.SubscriptionId
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.ManagedProjectionName*
  commentId: Overload:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.ManagedProjectionName
  isExternal: false
  name: ManagedProjectionName
  nameWithType: SlaveProjectionCommunicationChannel.ManagedProjectionName
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.ManagedProjectionName
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.WorkerId*
  commentId: Overload:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.WorkerId
  isExternal: false
  name: WorkerId
  nameWithType: SlaveProjectionCommunicationChannel.WorkerId
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.WorkerId

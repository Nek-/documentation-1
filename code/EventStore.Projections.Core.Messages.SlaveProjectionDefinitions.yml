### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions
  commentId: T:EventStore.Projections.Core.Messages.SlaveProjectionDefinitions
  id: SlaveProjectionDefinitions
  parent: EventStore.Projections.Core.Messages
  children:
  - EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.#ctor(EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definition[])
  - EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definitions
  langs:
  - csharp
  - vb
  name: SlaveProjectionDefinitions
  nameWithType: SlaveProjectionDefinitions
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/SlaveProjectionDefinitions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SlaveProjectionDefinitions
    path: ../EventStore/src/EventStore.Projections.Core/Messages/SlaveProjectionDefinitions.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: 'public sealed class SlaveProjectionDefinitions : object'
    content.vb: >-
      Public NotInheritable Class SlaveProjectionDefinitions
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.#ctor(EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definition[])
  commentId: M:EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.#ctor(EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definition[])
  id: '#ctor(EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definition[])'
  parent: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions
  langs:
  - csharp
  - vb
  name: SlaveProjectionDefinitions(SlaveProjectionDefinitions.Definition[])
  nameWithType: SlaveProjectionDefinitions.SlaveProjectionDefinitions(SlaveProjectionDefinitions.Definition[])
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.SlaveProjectionDefinitions(EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definition[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/SlaveProjectionDefinitions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Messages/SlaveProjectionDefinitions.cs
    startLine: 56
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public SlaveProjectionDefinitions(params SlaveProjectionDefinitions.Definition[] definitions)
    parameters:
    - id: definitions
      type: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definition[]
    content.vb: Public Sub New(ParamArray definitions As SlaveProjectionDefinitions.Definition())
  overload: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.#ctor*
  nameWithType.vb: SlaveProjectionDefinitions.SlaveProjectionDefinitions(SlaveProjectionDefinitions.Definition())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.SlaveProjectionDefinitions(EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definition())
  name.vb: SlaveProjectionDefinitions(SlaveProjectionDefinitions.Definition())
- uid: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definitions
  commentId: F:EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definitions
  id: Definitions
  parent: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions
  langs:
  - csharp
  - vb
  name: Definitions
  nameWithType: SlaveProjectionDefinitions.Definitions
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definitions
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Messages/SlaveProjectionDefinitions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Definitions
    path: ../EventStore/src/EventStore.Projections.Core/Messages/SlaveProjectionDefinitions.cs
    startLine: 61
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Messages
  syntax:
    content: public SlaveProjectionDefinitions.Definition[] Definitions
    return:
      type: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definition[]
    content.vb: Public Definitions As SlaveProjectionDefinitions.Definition()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  isExternal: false
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<SlaveProjectionDefinitions>()
  nameWithType: ProtobufExtensions.Serialize<SlaveProjectionDefinitions>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.SlaveProjectionDefinitions>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of SlaveProjectionDefinitions)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.SlaveProjectionDefinitions)()
  name.vb: Serialize(Of SlaveProjectionDefinitions)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<SlaveProjectionDefinitions>
    nameWithType: ProtobufExtensions.Serialize<SlaveProjectionDefinitions>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Messages.SlaveProjectionDefinitions>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of SlaveProjectionDefinitions)
    nameWithType: ProtobufExtensions.Serialize(Of SlaveProjectionDefinitions)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Messages.SlaveProjectionDefinitions)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<SlaveProjectionDefinitions>()
  nameWithType: ProtobufExtensions.SerializeToArray<SlaveProjectionDefinitions>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.SlaveProjectionDefinitions>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of SlaveProjectionDefinitions)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.SlaveProjectionDefinitions)()
  name.vb: SerializeToArray(Of SlaveProjectionDefinitions)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<SlaveProjectionDefinitions>
    nameWithType: ProtobufExtensions.SerializeToArray<SlaveProjectionDefinitions>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Messages.SlaveProjectionDefinitions>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of SlaveProjectionDefinitions)
    nameWithType: ProtobufExtensions.SerializeToArray(Of SlaveProjectionDefinitions)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Messages.SlaveProjectionDefinitions)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.#ctor*
  commentId: Overload:EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.#ctor
  isExternal: false
  name: SlaveProjectionDefinitions
  nameWithType: SlaveProjectionDefinitions.SlaveProjectionDefinitions
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.SlaveProjectionDefinitions
- uid: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definition[]
  name: SlaveProjectionDefinitions.Definition[]
  nameWithType: SlaveProjectionDefinitions.Definition[]
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definition[]
  nameWithType.vb: SlaveProjectionDefinitions.Definition()
  fullName.vb: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definition()
  name.vb: SlaveProjectionDefinitions.Definition()
  spec.csharp:
  - uid: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definition
    name: SlaveProjectionDefinitions.Definition
    nameWithType: SlaveProjectionDefinitions.Definition
    fullName: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definition
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definition
    name: SlaveProjectionDefinitions.Definition
    nameWithType: SlaveProjectionDefinitions.Definition
    fullName: EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definition
  - name: ()
    nameWithType: ()
    fullName: ()

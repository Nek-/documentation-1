### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs
  commentId: T:EventStore.Projections.Core.Services.Management.SerializedRunAs
  id: SerializedRunAs
  parent: EventStore.Projections.Core.Services.Management
  children:
  - EventStore.Projections.Core.Services.Management.SerializedRunAs.DeserializePrincipal(EventStore.Projections.Core.Services.Management.SerializedRunAs)
  - EventStore.Projections.Core.Services.Management.SerializedRunAs.Name
  - EventStore.Projections.Core.Services.Management.SerializedRunAs.op_Implicit(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs)~EventStore.Projections.Core.Services.Management.SerializedRunAs
  - EventStore.Projections.Core.Services.Management.SerializedRunAs.op_Implicit(EventStore.Projections.Core.Services.Management.SerializedRunAs)~EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
  - EventStore.Projections.Core.Services.Management.SerializedRunAs.Roles
  - EventStore.Projections.Core.Services.Management.SerializedRunAs.SerializePrincipal(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs)
  langs:
  - csharp
  - vb
  name: SerializedRunAs
  nameWithType: SerializedRunAs
  fullName: EventStore.Projections.Core.Services.Management.SerializedRunAs
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SerializedRunAs
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 1118
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: 'public class SerializedRunAs : object'
    content.vb: >-
      Public Class SerializedRunAs

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Projections.Core.Services.Management.SerializedRunAs.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Management.SerializedRunAs.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs.Name
  commentId: P:EventStore.Projections.Core.Services.Management.SerializedRunAs.Name
  id: Name
  parent: EventStore.Projections.Core.Services.Management.SerializedRunAs
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SerializedRunAs.Name
  fullName: EventStore.Projections.Core.Services.Management.SerializedRunAs.Name
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Name
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 1120
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: EventStore.Projections.Core.Services.Management.SerializedRunAs.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs.Roles
  commentId: P:EventStore.Projections.Core.Services.Management.SerializedRunAs.Roles
  id: Roles
  parent: EventStore.Projections.Core.Services.Management.SerializedRunAs
  langs:
  - csharp
  - vb
  name: Roles
  nameWithType: SerializedRunAs.Roles
  fullName: EventStore.Projections.Core.Services.Management.SerializedRunAs.Roles
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Roles
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 1121
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public string[] Roles { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property Roles As String()
  overload: EventStore.Projections.Core.Services.Management.SerializedRunAs.Roles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs.op_Implicit(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs)~EventStore.Projections.Core.Services.Management.SerializedRunAs
  commentId: M:EventStore.Projections.Core.Services.Management.SerializedRunAs.op_Implicit(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs)~EventStore.Projections.Core.Services.Management.SerializedRunAs
  id: op_Implicit(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs)~EventStore.Projections.Core.Services.Management.SerializedRunAs
  parent: EventStore.Projections.Core.Services.Management.SerializedRunAs
  langs:
  - csharp
  - vb
  name: Implicit(ProjectionManagementMessage.RunAs to SerializedRunAs)
  nameWithType: SerializedRunAs.Implicit(ProjectionManagementMessage.RunAs to SerializedRunAs)
  fullName: EventStore.Projections.Core.Services.Management.SerializedRunAs.Implicit(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs to EventStore.Projections.Core.Services.Management.SerializedRunAs)
  type: Operator
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: op_Implicit
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 1123
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public static implicit operator SerializedRunAs(ProjectionManagementMessage.RunAs runAs)
    parameters:
    - id: runAs
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
    return:
      type: EventStore.Projections.Core.Services.Management.SerializedRunAs
    content.vb: Public Shared Widening Operator CType(runAs As ProjectionManagementMessage.RunAs) As SerializedRunAs
  overload: EventStore.Projections.Core.Services.Management.SerializedRunAs.op_Implicit*
  nameWithType.vb: SerializedRunAs.Widening(ProjectionManagementMessage.RunAs to SerializedRunAs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Projections.Core.Services.Management.SerializedRunAs.Widening(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs to EventStore.Projections.Core.Services.Management.SerializedRunAs)
  name.vb: Widening(ProjectionManagementMessage.RunAs to SerializedRunAs)
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs.op_Implicit(EventStore.Projections.Core.Services.Management.SerializedRunAs)~EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
  commentId: M:EventStore.Projections.Core.Services.Management.SerializedRunAs.op_Implicit(EventStore.Projections.Core.Services.Management.SerializedRunAs)~EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
  id: op_Implicit(EventStore.Projections.Core.Services.Management.SerializedRunAs)~EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
  parent: EventStore.Projections.Core.Services.Management.SerializedRunAs
  langs:
  - csharp
  - vb
  name: Implicit(SerializedRunAs to ProjectionManagementMessage.RunAs)
  nameWithType: SerializedRunAs.Implicit(SerializedRunAs to ProjectionManagementMessage.RunAs)
  fullName: EventStore.Projections.Core.Services.Management.SerializedRunAs.Implicit(EventStore.Projections.Core.Services.Management.SerializedRunAs to EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs)
  type: Operator
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: op_Implicit
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 1128
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public static implicit operator ProjectionManagementMessage.RunAs(SerializedRunAs runAs)
    parameters:
    - id: runAs
      type: EventStore.Projections.Core.Services.Management.SerializedRunAs
    return:
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
    content.vb: Public Shared Widening Operator CType(runAs As SerializedRunAs) As ProjectionManagementMessage.RunAs
  overload: EventStore.Projections.Core.Services.Management.SerializedRunAs.op_Implicit*
  nameWithType.vb: SerializedRunAs.Widening(SerializedRunAs to ProjectionManagementMessage.RunAs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Projections.Core.Services.Management.SerializedRunAs.Widening(EventStore.Projections.Core.Services.Management.SerializedRunAs to EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs)
  name.vb: Widening(SerializedRunAs to ProjectionManagementMessage.RunAs)
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs.SerializePrincipal(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs)
  commentId: M:EventStore.Projections.Core.Services.Management.SerializedRunAs.SerializePrincipal(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs)
  id: SerializePrincipal(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs)
  parent: EventStore.Projections.Core.Services.Management.SerializedRunAs
  langs:
  - csharp
  - vb
  name: SerializePrincipal(ProjectionManagementMessage.RunAs)
  nameWithType: SerializedRunAs.SerializePrincipal(ProjectionManagementMessage.RunAs)
  fullName: EventStore.Projections.Core.Services.Management.SerializedRunAs.SerializePrincipal(EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SerializePrincipal
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 1141
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public static SerializedRunAs SerializePrincipal(ProjectionManagementMessage.RunAs runAs)
    parameters:
    - id: runAs
      type: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
    return:
      type: EventStore.Projections.Core.Services.Management.SerializedRunAs
    content.vb: Public Shared Function SerializePrincipal(runAs As ProjectionManagementMessage.RunAs) As SerializedRunAs
  overload: EventStore.Projections.Core.Services.Management.SerializedRunAs.SerializePrincipal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs.DeserializePrincipal(EventStore.Projections.Core.Services.Management.SerializedRunAs)
  commentId: M:EventStore.Projections.Core.Services.Management.SerializedRunAs.DeserializePrincipal(EventStore.Projections.Core.Services.Management.SerializedRunAs)
  id: DeserializePrincipal(EventStore.Projections.Core.Services.Management.SerializedRunAs)
  parent: EventStore.Projections.Core.Services.Management.SerializedRunAs
  langs:
  - csharp
  - vb
  name: DeserializePrincipal(SerializedRunAs)
  nameWithType: SerializedRunAs.DeserializePrincipal(SerializedRunAs)
  fullName: EventStore.Projections.Core.Services.Management.SerializedRunAs.DeserializePrincipal(EventStore.Projections.Core.Services.Management.SerializedRunAs)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DeserializePrincipal
    path: ../EventStore/src/EventStore.Projections.Core/Services/Management/ManagedProjection.cs
    startLine: 1157
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Management
  syntax:
    content: public static IPrincipal DeserializePrincipal(SerializedRunAs runAs)
    parameters:
    - id: runAs
      type: EventStore.Projections.Core.Services.Management.SerializedRunAs
    return:
      type: IPrincipal
    content.vb: Public Shared Function DeserializePrincipal(runAs As SerializedRunAs) As IPrincipal
  overload: EventStore.Projections.Core.Services.Management.SerializedRunAs.DeserializePrincipal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Projections.Core.Services.Management
  commentId: N:EventStore.Projections.Core.Services.Management
  isExternal: false
  name: EventStore.Projections.Core.Services.Management
  nameWithType: EventStore.Projections.Core.Services.Management
  fullName: EventStore.Projections.Core.Services.Management
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<SerializedRunAs>()
  nameWithType: ProtobufExtensions.Serialize<SerializedRunAs>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Management.SerializedRunAs>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of SerializedRunAs)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Management.SerializedRunAs)()
  name.vb: Serialize(Of SerializedRunAs)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<SerializedRunAs>
    nameWithType: ProtobufExtensions.Serialize<SerializedRunAs>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Management.SerializedRunAs>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of SerializedRunAs)
    nameWithType: ProtobufExtensions.Serialize(Of SerializedRunAs)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Management.SerializedRunAs)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<SerializedRunAs>()
  nameWithType: ProtobufExtensions.SerializeToArray<SerializedRunAs>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Management.SerializedRunAs>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of SerializedRunAs)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Management.SerializedRunAs)()
  name.vb: SerializeToArray(Of SerializedRunAs)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<SerializedRunAs>
    nameWithType: ProtobufExtensions.SerializeToArray<SerializedRunAs>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Management.SerializedRunAs>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of SerializedRunAs)
    nameWithType: ProtobufExtensions.SerializeToArray(Of SerializedRunAs)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Management.SerializedRunAs)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs.Name*
  commentId: Overload:EventStore.Projections.Core.Services.Management.SerializedRunAs.Name
  isExternal: false
  name: Name
  nameWithType: SerializedRunAs.Name
  fullName: EventStore.Projections.Core.Services.Management.SerializedRunAs.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs.Roles*
  commentId: Overload:EventStore.Projections.Core.Services.Management.SerializedRunAs.Roles
  isExternal: false
  name: Roles
  nameWithType: SerializedRunAs.Roles
  fullName: EventStore.Projections.Core.Services.Management.SerializedRunAs.Roles
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs.op_Implicit*
  commentId: Overload:EventStore.Projections.Core.Services.Management.SerializedRunAs.op_Implicit
  isExternal: false
  name: Implicit
  nameWithType: SerializedRunAs.Implicit
  fullName: EventStore.Projections.Core.Services.Management.SerializedRunAs.Implicit
  nameWithType.vb: SerializedRunAs.Widening
  fullName.vb: EventStore.Projections.Core.Services.Management.SerializedRunAs.Widening
  name.vb: Widening
- uid: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
  commentId: T:EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
  parent: EventStore.Projections.Core.Messages
  isExternal: false
  name: ProjectionManagementMessage.RunAs
  nameWithType: ProjectionManagementMessage.RunAs
  fullName: EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs
  commentId: T:EventStore.Projections.Core.Services.Management.SerializedRunAs
  parent: EventStore.Projections.Core.Services.Management
  isExternal: false
  name: SerializedRunAs
  nameWithType: SerializedRunAs
  fullName: EventStore.Projections.Core.Services.Management.SerializedRunAs
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  isExternal: false
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs.SerializePrincipal*
  commentId: Overload:EventStore.Projections.Core.Services.Management.SerializedRunAs.SerializePrincipal
  isExternal: false
  name: SerializePrincipal
  nameWithType: SerializedRunAs.SerializePrincipal
  fullName: EventStore.Projections.Core.Services.Management.SerializedRunAs.SerializePrincipal
- uid: EventStore.Projections.Core.Services.Management.SerializedRunAs.DeserializePrincipal*
  commentId: Overload:EventStore.Projections.Core.Services.Management.SerializedRunAs.DeserializePrincipal
  isExternal: false
  name: DeserializePrincipal
  nameWithType: SerializedRunAs.DeserializePrincipal
  fullName: EventStore.Projections.Core.Services.Management.SerializedRunAs.DeserializePrincipal
- uid: IPrincipal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: IPrincipal

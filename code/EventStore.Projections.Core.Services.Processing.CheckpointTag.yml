### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  id: CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.CatalogPosition
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.CatalogStream
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.Check(JsonToken,JsonReader)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.Check(System.Boolean,JsonReader)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.CommitPosition
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.CompareTo(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.Completed
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.DataPosition
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.DataStream
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.Empty
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.Equals(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.Equals(System.Object)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.FromByStreamPosition(System.Int32,System.String,System.Int64,System.String,System.Int64,System.Int64)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.FromEventTypeIndexPositions(System.Int32,EventStore.Core.Data.TFPos,IDictionary{System.String,System.Int64})
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.FromJson(JsonReader,EventStore.Projections.Core.Services.Processing.ProjectionVersion,System.Boolean)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPhase(System.Int32,System.Boolean)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPosition(System.Int32,EventStore.Core.Data.TFPos)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPosition(System.Int32,System.Int64,System.Int64)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPreparePosition(System.Int32,System.Int64)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.FromStreamPosition(System.Int32,System.String,System.Int64)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.FromStreamPositions(System.Int32,IDictionary{System.String,System.Int64})
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.GetHashCode
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.op_Equality(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.op_GreaterThan(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.op_GreaterThanOrEqual(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.op_Inequality(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.op_LessThan(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.op_LessThanOrEqual(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.Phase
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.Position
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.PreparePosition
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.Streams
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonBytes(EventStore.Projections.Core.Services.Processing.ProjectionVersion,IEnumerable{KeyValuePair{System.String,JToken}})
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonRaw(IEnumerable{KeyValuePair{System.String,JToken}})
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonString(EventStore.Projections.Core.Services.Processing.ProjectionVersion,IEnumerable{KeyValuePair{System.String,JToken}})
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonString(IEnumerable{KeyValuePair{System.String,JToken}})
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.ToString
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateEventTypeIndexPosition(EventStore.Core.Data.TFPos)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateEventTypeIndexPosition(EventStore.Core.Data.TFPos,System.String,System.Int64)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateStreamPosition(System.String,System.Int64)
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.WriteTo(EventStore.Projections.Core.Services.Processing.ProjectionVersion,IEnumerable{KeyValuePair{System.String,JToken}},JsonWriter)
  langs:
  - csharp
  - vb
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CheckpointTag
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 13
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public class CheckpointTag : IComparable<CheckpointTag>'
    content.vb: >-
      Public Class CheckpointTag
          Inherits IComparable(Of CheckpointTag)
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Processing.CheckpointTag.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.Phase
  commentId: F:EventStore.Projections.Core.Services.Processing.CheckpointTag.Phase
  id: Phase
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: Phase
  nameWithType: CheckpointTag.Phase
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.Phase
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Phase
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 15
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly int Phase
    return:
      type: System.Int32
    content.vb: Public ReadOnly Phase As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.Position
  commentId: F:EventStore.Projections.Core.Services.Processing.CheckpointTag.Position
  id: Position
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: CheckpointTag.Position
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.Position
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Position
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 16
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly TFPos Position
    return:
      type: EventStore.Core.Data.TFPos
    content.vb: Public ReadOnly Position As TFPos
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.Streams
  commentId: F:EventStore.Projections.Core.Services.Processing.CheckpointTag.Streams
  id: Streams
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: Streams
  nameWithType: CheckpointTag.Streams
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.Streams
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Streams
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 18
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly Dictionary<string, long> Streams
    return:
      type: Dictionary{System.String,System.Int64}
    content.vb: Public ReadOnly Streams As Dictionary(Of String, Long)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.CatalogStream
  commentId: F:EventStore.Projections.Core.Services.Processing.CheckpointTag.CatalogStream
  id: CatalogStream
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: CatalogStream
  nameWithType: CheckpointTag.CatalogStream
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.CatalogStream
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CatalogStream
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 20
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly string CatalogStream
    return:
      type: System.String
    content.vb: Public ReadOnly CatalogStream As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.DataStream
  commentId: F:EventStore.Projections.Core.Services.Processing.CheckpointTag.DataStream
  id: DataStream
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: DataStream
  nameWithType: CheckpointTag.DataStream
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.DataStream
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: DataStream
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 21
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly string DataStream
    return:
      type: System.String
    content.vb: Public ReadOnly DataStream As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.CatalogPosition
  commentId: F:EventStore.Projections.Core.Services.Processing.CheckpointTag.CatalogPosition
  id: CatalogPosition
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: CatalogPosition
  nameWithType: CheckpointTag.CatalogPosition
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.CatalogPosition
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CatalogPosition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 22
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly long CatalogPosition
    return:
      type: System.Int64
    content.vb: Public ReadOnly CatalogPosition As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.DataPosition
  commentId: F:EventStore.Projections.Core.Services.Processing.CheckpointTag.DataPosition
  id: DataPosition
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: DataPosition
  nameWithType: CheckpointTag.DataPosition
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.DataPosition
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: DataPosition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 23
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly long DataPosition
    return:
      type: System.Int64
    content.vb: Public ReadOnly DataPosition As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_GreaterThan(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.op_GreaterThan(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: op_GreaterThan(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: GreaterThan(CheckpointTag, CheckpointTag)
  nameWithType: CheckpointTag.GreaterThan(CheckpointTag, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.GreaterThan(EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Operator
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: op_GreaterThan
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 134
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static bool operator>(CheckpointTag left, CheckpointTag right)
    parameters:
    - id: left
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: right
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: System.Boolean
    content.vb: Public Shared Operator>(left As CheckpointTag, right As CheckpointTag) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_GreaterThanOrEqual(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.op_GreaterThanOrEqual(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: op_GreaterThanOrEqual(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(CheckpointTag, CheckpointTag)
  nameWithType: CheckpointTag.GreaterThanOrEqual(CheckpointTag, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.GreaterThanOrEqual(EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Operator
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: op_GreaterThanOrEqual
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 196
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static bool operator >=(CheckpointTag left, CheckpointTag right)
    parameters:
    - id: left
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: right
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: System.Boolean
    content.vb: Public Shared Operator >=(left As CheckpointTag, right As CheckpointTag) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_LessThan(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.op_LessThan(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: op_LessThan(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: LessThan(CheckpointTag, CheckpointTag)
  nameWithType: CheckpointTag.LessThan(CheckpointTag, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.LessThan(EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Operator
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: op_LessThan
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 246
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static bool operator <(CheckpointTag left, CheckpointTag right)
    parameters:
    - id: left
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: right
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <(left As CheckpointTag, right As CheckpointTag) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_LessThanOrEqual(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.op_LessThanOrEqual(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: op_LessThanOrEqual(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(CheckpointTag, CheckpointTag)
  nameWithType: CheckpointTag.LessThanOrEqual(CheckpointTag, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.LessThanOrEqual(EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Operator
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: op_LessThanOrEqual
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 251
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static bool operator <=(CheckpointTag left, CheckpointTag right)
    parameters:
    - id: left
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: right
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <=(left As CheckpointTag, right As CheckpointTag) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_Equality(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.op_Equality(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: op_Equality(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: Equality(CheckpointTag, CheckpointTag)
  nameWithType: CheckpointTag.Equality(CheckpointTag, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.Equality(EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Operator
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: op_Equality
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 256
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static bool operator ==(CheckpointTag left, CheckpointTag right)
    parameters:
    - id: left
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: right
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As CheckpointTag, right As CheckpointTag) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_Inequality(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.op_Inequality(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: op_Inequality(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: Inequality(CheckpointTag, CheckpointTag)
  nameWithType: CheckpointTag.Inequality(CheckpointTag, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.Inequality(EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Operator
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: op_Inequality
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 261
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static bool operator !=(CheckpointTag left, CheckpointTag right)
    parameters:
    - id: left
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: right
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As CheckpointTag, right As CheckpointTag) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.Equals(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.Equals(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: Equals(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: Equals(CheckpointTag)
  nameWithType: CheckpointTag.Equals(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.Equals(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Equals
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 266
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected bool Equals(CheckpointTag other)
    parameters:
    - id: other
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: System.Boolean
    content.vb: Protected Function Equals(other As CheckpointTag) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.Equals*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.Equals(System.Object)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.Equals(System.Object)
  id: Equals(System.Object)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: CheckpointTag.Equals(Object)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Equals
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 305
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.GetHashCode
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.GetHashCode
  id: GetHashCode
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: CheckpointTag.GetHashCode()
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.GetHashCode()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: GetHashCode
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 313
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.CommitPosition
  commentId: P:EventStore.Projections.Core.Services.Processing.CheckpointTag.CommitPosition
  id: CommitPosition
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: CommitPosition
  nameWithType: CheckpointTag.CommitPosition
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.CommitPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CommitPosition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 319
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public long? CommitPosition { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public ReadOnly Property CommitPosition As Long?
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.CommitPosition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.PreparePosition
  commentId: P:EventStore.Projections.Core.Services.Processing.CheckpointTag.PreparePosition
  id: PreparePosition
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: PreparePosition
  nameWithType: CheckpointTag.PreparePosition
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.PreparePosition
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: PreparePosition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 337
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public long? PreparePosition { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public ReadOnly Property PreparePosition As Long?
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.PreparePosition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.Empty
  commentId: P:EventStore.Projections.Core.Services.Processing.CheckpointTag.Empty
  id: Empty
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: CheckpointTag.Empty
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.Empty
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Empty
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 353
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static CheckpointTag Empty { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Shared ReadOnly Property Empty As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.Empty*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPhase(System.Int32,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPhase(System.Int32,System.Boolean)
  id: FromPhase(System.Int32,System.Boolean)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: FromPhase(Int32, Boolean)
  nameWithType: CheckpointTag.FromPhase(Int32, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPhase(System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: FromPhase
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 360
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static CheckpointTag FromPhase(int phase, bool completed)
    parameters:
    - id: phase
      type: System.Int32
    - id: completed
      type: System.Boolean
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Shared Function FromPhase(phase As Integer, completed As Boolean) As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPhase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPosition(System.Int32,System.Int64,System.Int64)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPosition(System.Int32,System.Int64,System.Int64)
  id: FromPosition(System.Int32,System.Int64,System.Int64)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: FromPosition(Int32, Int64, Int64)
  nameWithType: CheckpointTag.FromPosition(Int32, Int64, Int64)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPosition(System.Int32, System.Int64, System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: FromPosition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 365
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static CheckpointTag FromPosition(int phase, long commitPosition, long preparePosition)
    parameters:
    - id: phase
      type: System.Int32
    - id: commitPosition
      type: System.Int64
    - id: preparePosition
      type: System.Int64
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Shared Function FromPosition(phase As Integer, commitPosition As Long, preparePosition As Long) As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPosition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPosition(System.Int32,EventStore.Core.Data.TFPos)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPosition(System.Int32,EventStore.Core.Data.TFPos)
  id: FromPosition(System.Int32,EventStore.Core.Data.TFPos)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: FromPosition(Int32, TFPos)
  nameWithType: CheckpointTag.FromPosition(Int32, TFPos)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPosition(System.Int32, EventStore.Core.Data.TFPos)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: FromPosition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 370
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static CheckpointTag FromPosition(int phase, TFPos position)
    parameters:
    - id: phase
      type: System.Int32
    - id: position
      type: EventStore.Core.Data.TFPos
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Shared Function FromPosition(phase As Integer, position As TFPos) As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPosition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPreparePosition(System.Int32,System.Int64)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPreparePosition(System.Int32,System.Int64)
  id: FromPreparePosition(System.Int32,System.Int64)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: FromPreparePosition(Int32, Int64)
  nameWithType: CheckpointTag.FromPreparePosition(Int32, Int64)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPreparePosition(System.Int32, System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: FromPreparePosition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 375
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static CheckpointTag FromPreparePosition(int phase, long preparePosition)
    parameters:
    - id: phase
      type: System.Int32
    - id: preparePosition
      type: System.Int64
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Shared Function FromPreparePosition(phase As Integer, preparePosition As Long) As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPreparePosition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromStreamPosition(System.Int32,System.String,System.Int64)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.FromStreamPosition(System.Int32,System.String,System.Int64)
  id: FromStreamPosition(System.Int32,System.String,System.Int64)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: FromStreamPosition(Int32, String, Int64)
  nameWithType: CheckpointTag.FromStreamPosition(Int32, String, Int64)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromStreamPosition(System.Int32, System.String, System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: FromStreamPosition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 380
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static CheckpointTag FromStreamPosition(int phase, string stream, long sequenceNumber)
    parameters:
    - id: phase
      type: System.Int32
    - id: stream
      type: System.String
    - id: sequenceNumber
      type: System.Int64
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Shared Function FromStreamPosition(phase As Integer, stream As String, sequenceNumber As Long) As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromStreamPosition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromStreamPositions(System.Int32,IDictionary{System.String,System.Int64})
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.FromStreamPositions(System.Int32,IDictionary{System.String,System.Int64})
  id: FromStreamPositions(System.Int32,IDictionary{System.String,System.Int64})
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: FromStreamPositions(Int32, IDictionary<String, Int64>)
  nameWithType: CheckpointTag.FromStreamPositions(Int32, IDictionary<String, Int64>)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromStreamPositions(System.Int32, IDictionary<System.String, System.Int64>)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: FromStreamPositions
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 385
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static CheckpointTag FromStreamPositions(int phase, IDictionary<string, long> streams)
    parameters:
    - id: phase
      type: System.Int32
    - id: streams
      type: IDictionary{System.String,System.Int64}
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Shared Function FromStreamPositions(phase As Integer, streams As IDictionary(Of String, Long)) As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromStreamPositions*
  nameWithType.vb: CheckpointTag.FromStreamPositions(Int32, IDictionary(Of String, Int64))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromStreamPositions(System.Int32, IDictionary(Of System.String, System.Int64))
  name.vb: FromStreamPositions(Int32, IDictionary(Of String, Int64))
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromEventTypeIndexPositions(System.Int32,EventStore.Core.Data.TFPos,IDictionary{System.String,System.Int64})
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.FromEventTypeIndexPositions(System.Int32,EventStore.Core.Data.TFPos,IDictionary{System.String,System.Int64})
  id: FromEventTypeIndexPositions(System.Int32,EventStore.Core.Data.TFPos,IDictionary{System.String,System.Int64})
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: FromEventTypeIndexPositions(Int32, TFPos, IDictionary<String, Int64>)
  nameWithType: CheckpointTag.FromEventTypeIndexPositions(Int32, TFPos, IDictionary<String, Int64>)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromEventTypeIndexPositions(System.Int32, EventStore.Core.Data.TFPos, IDictionary<System.String, System.Int64>)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: FromEventTypeIndexPositions
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 391
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static CheckpointTag FromEventTypeIndexPositions(int phase, TFPos position, IDictionary<string, long> streams)
    parameters:
    - id: phase
      type: System.Int32
    - id: position
      type: EventStore.Core.Data.TFPos
    - id: streams
      type: IDictionary{System.String,System.Int64}
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Shared Function FromEventTypeIndexPositions(phase As Integer, position As TFPos, streams As IDictionary(Of String, Long)) As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromEventTypeIndexPositions*
  nameWithType.vb: CheckpointTag.FromEventTypeIndexPositions(Int32, TFPos, IDictionary(Of String, Int64))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromEventTypeIndexPositions(System.Int32, EventStore.Core.Data.TFPos, IDictionary(Of System.String, System.Int64))
  name.vb: FromEventTypeIndexPositions(Int32, TFPos, IDictionary(Of String, Int64))
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromByStreamPosition(System.Int32,System.String,System.Int64,System.String,System.Int64,System.Int64)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.FromByStreamPosition(System.Int32,System.String,System.Int64,System.String,System.Int64,System.Int64)
  id: FromByStreamPosition(System.Int32,System.String,System.Int64,System.String,System.Int64,System.Int64)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: FromByStreamPosition(Int32, String, Int64, String, Int64, Int64)
  nameWithType: CheckpointTag.FromByStreamPosition(Int32, String, Int64, String, Int64, Int64)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromByStreamPosition(System.Int32, System.String, System.Int64, System.String, System.Int64, System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: FromByStreamPosition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 397
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static CheckpointTag FromByStreamPosition(int phase, string catalogStream, long catalogPosition, string dataStream, long dataPosition, long commitPosition)
    parameters:
    - id: phase
      type: System.Int32
    - id: catalogStream
      type: System.String
    - id: catalogPosition
      type: System.Int64
    - id: dataStream
      type: System.String
    - id: dataPosition
      type: System.Int64
    - id: commitPosition
      type: System.Int64
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Shared Function FromByStreamPosition(phase As Integer, catalogStream As String, catalogPosition As Long, dataStream As String, dataPosition As Long, commitPosition As Long) As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromByStreamPosition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.CompareTo(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.CompareTo(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: CompareTo(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: CompareTo(CheckpointTag)
  nameWithType: CheckpointTag.CompareTo(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.CompareTo(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CompareTo
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 404
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public int CompareTo(CheckpointTag other)
    parameters:
    - id: other
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As CheckpointTag) As Integer
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.CompareTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToString
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.ToString
  id: ToString
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CheckpointTag.ToString()
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 409
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.Completed
  commentId: P:EventStore.Projections.Core.Services.Processing.CheckpointTag.Completed
  id: Completed
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: Completed
  nameWithType: CheckpointTag.Completed
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.Completed
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Completed
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 454
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool Completed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Completed As Boolean
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.Completed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateStreamPosition(System.String,System.Int64)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateStreamPosition(System.String,System.Int64)
  id: UpdateStreamPosition(System.String,System.Int64)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: UpdateStreamPosition(String, Int64)
  nameWithType: CheckpointTag.UpdateStreamPosition(String, Int64)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateStreamPosition(System.String, System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: UpdateStreamPosition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 483
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public CheckpointTag UpdateStreamPosition(string streamId, long eventSequenceNumber)
    parameters:
    - id: streamId
      type: System.String
    - id: eventSequenceNumber
      type: System.Int64
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Function UpdateStreamPosition(streamId As String, eventSequenceNumber As Long) As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateStreamPosition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateEventTypeIndexPosition(EventStore.Core.Data.TFPos,System.String,System.Int64)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateEventTypeIndexPosition(EventStore.Core.Data.TFPos,System.String,System.Int64)
  id: UpdateEventTypeIndexPosition(EventStore.Core.Data.TFPos,System.String,System.Int64)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: UpdateEventTypeIndexPosition(TFPos, String, Int64)
  nameWithType: CheckpointTag.UpdateEventTypeIndexPosition(TFPos, String, Int64)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateEventTypeIndexPosition(EventStore.Core.Data.TFPos, System.String, System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: UpdateEventTypeIndexPosition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 491
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public CheckpointTag UpdateEventTypeIndexPosition(TFPos position, string eventType, long eventSequenceNumber)
    parameters:
    - id: position
      type: EventStore.Core.Data.TFPos
    - id: eventType
      type: System.String
    - id: eventSequenceNumber
      type: System.Int64
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Function UpdateEventTypeIndexPosition(position As TFPos, eventType As String, eventSequenceNumber As Long) As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateEventTypeIndexPosition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateEventTypeIndexPosition(EventStore.Core.Data.TFPos)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateEventTypeIndexPosition(EventStore.Core.Data.TFPos)
  id: UpdateEventTypeIndexPosition(EventStore.Core.Data.TFPos)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: UpdateEventTypeIndexPosition(TFPos)
  nameWithType: CheckpointTag.UpdateEventTypeIndexPosition(TFPos)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateEventTypeIndexPosition(EventStore.Core.Data.TFPos)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: UpdateEventTypeIndexPosition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 499
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public CheckpointTag UpdateEventTypeIndexPosition(TFPos position)
    parameters:
    - id: position
      type: EventStore.Core.Data.TFPos
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Function UpdateEventTypeIndexPosition(position As TFPos) As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateEventTypeIndexPosition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonBytes(EventStore.Projections.Core.Services.Processing.ProjectionVersion,IEnumerable{KeyValuePair{System.String,JToken}})
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonBytes(EventStore.Projections.Core.Services.Processing.ProjectionVersion,IEnumerable{KeyValuePair{System.String,JToken}})
  id: ToJsonBytes(EventStore.Projections.Core.Services.Processing.ProjectionVersion,IEnumerable{KeyValuePair{System.String,JToken}})
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: ToJsonBytes(ProjectionVersion, IEnumerable<KeyValuePair<String, JToken>>)
  nameWithType: CheckpointTag.ToJsonBytes(ProjectionVersion, IEnumerable<KeyValuePair<String, JToken>>)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonBytes(EventStore.Projections.Core.Services.Processing.ProjectionVersion, IEnumerable<KeyValuePair<System.String, JToken>>)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ToJsonBytes
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 532
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public byte[] ToJsonBytes(ProjectionVersion projectionVersion, IEnumerable<KeyValuePair<string, JToken>> extraMetaData = null)
    parameters:
    - id: projectionVersion
      type: EventStore.Projections.Core.Services.Processing.ProjectionVersion
    - id: extraMetaData
      type: IEnumerable{KeyValuePair{System.String,JToken}}
    return:
      type: System.Byte[]
    content.vb: Public Function ToJsonBytes(projectionVersion As ProjectionVersion, extraMetaData As IEnumerable(Of KeyValuePair(Of String, JToken)) = Nothing) As Byte()
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonBytes*
  nameWithType.vb: CheckpointTag.ToJsonBytes(ProjectionVersion, IEnumerable(Of KeyValuePair(Of String, JToken)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonBytes(EventStore.Projections.Core.Services.Processing.ProjectionVersion, IEnumerable(Of KeyValuePair(Of System.String, JToken)))
  name.vb: ToJsonBytes(ProjectionVersion, IEnumerable(Of KeyValuePair(Of String, JToken)))
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonString(EventStore.Projections.Core.Services.Processing.ProjectionVersion,IEnumerable{KeyValuePair{System.String,JToken}})
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonString(EventStore.Projections.Core.Services.Processing.ProjectionVersion,IEnumerable{KeyValuePair{System.String,JToken}})
  id: ToJsonString(EventStore.Projections.Core.Services.Processing.ProjectionVersion,IEnumerable{KeyValuePair{System.String,JToken}})
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: ToJsonString(ProjectionVersion, IEnumerable<KeyValuePair<String, JToken>>)
  nameWithType: CheckpointTag.ToJsonString(ProjectionVersion, IEnumerable<KeyValuePair<String, JToken>>)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonString(EventStore.Projections.Core.Services.Processing.ProjectionVersion, IEnumerable<KeyValuePair<System.String, JToken>>)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ToJsonString
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 547
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public string ToJsonString(ProjectionVersion projectionVersion, IEnumerable<KeyValuePair<string, JToken>> extraMetaData = null)
    parameters:
    - id: projectionVersion
      type: EventStore.Projections.Core.Services.Processing.ProjectionVersion
    - id: extraMetaData
      type: IEnumerable{KeyValuePair{System.String,JToken}}
    return:
      type: System.String
    content.vb: Public Function ToJsonString(projectionVersion As ProjectionVersion, extraMetaData As IEnumerable(Of KeyValuePair(Of String, JToken)) = Nothing) As String
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonString*
  nameWithType.vb: CheckpointTag.ToJsonString(ProjectionVersion, IEnumerable(Of KeyValuePair(Of String, JToken)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonString(EventStore.Projections.Core.Services.Processing.ProjectionVersion, IEnumerable(Of KeyValuePair(Of System.String, JToken)))
  name.vb: ToJsonString(ProjectionVersion, IEnumerable(Of KeyValuePair(Of String, JToken)))
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonString(IEnumerable{KeyValuePair{System.String,JToken}})
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonString(IEnumerable{KeyValuePair{System.String,JToken}})
  id: ToJsonString(IEnumerable{KeyValuePair{System.String,JToken}})
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: ToJsonString(IEnumerable<KeyValuePair<String, JToken>>)
  nameWithType: CheckpointTag.ToJsonString(IEnumerable<KeyValuePair<String, JToken>>)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonString(IEnumerable<KeyValuePair<System.String, JToken>>)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ToJsonString
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 561
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public string ToJsonString(IEnumerable<KeyValuePair<string, JToken>> extraMetaData = null)
    parameters:
    - id: extraMetaData
      type: IEnumerable{KeyValuePair{System.String,JToken}}
    return:
      type: System.String
    content.vb: Public Function ToJsonString(extraMetaData As IEnumerable(Of KeyValuePair(Of String, JToken)) = Nothing) As String
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonString*
  nameWithType.vb: CheckpointTag.ToJsonString(IEnumerable(Of KeyValuePair(Of String, JToken)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonString(IEnumerable(Of KeyValuePair(Of System.String, JToken)))
  name.vb: ToJsonString(IEnumerable(Of KeyValuePair(Of String, JToken)))
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonRaw(IEnumerable{KeyValuePair{System.String,JToken}})
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonRaw(IEnumerable{KeyValuePair{System.String,JToken}})
  id: ToJsonRaw(IEnumerable{KeyValuePair{System.String,JToken}})
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: ToJsonRaw(IEnumerable<KeyValuePair<String, JToken>>)
  nameWithType: CheckpointTag.ToJsonRaw(IEnumerable<KeyValuePair<String, JToken>>)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonRaw(IEnumerable<KeyValuePair<System.String, JToken>>)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ToJsonRaw
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 573
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public JRaw ToJsonRaw(IEnumerable<KeyValuePair<string, JToken>> extraMetaData = null)
    parameters:
    - id: extraMetaData
      type: IEnumerable{KeyValuePair{System.String,JToken}}
    return:
      type: JRaw
    content.vb: Public Function ToJsonRaw(extraMetaData As IEnumerable(Of KeyValuePair(Of String, JToken)) = Nothing) As JRaw
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonRaw*
  nameWithType.vb: CheckpointTag.ToJsonRaw(IEnumerable(Of KeyValuePair(Of String, JToken)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonRaw(IEnumerable(Of KeyValuePair(Of System.String, JToken)))
  name.vb: ToJsonRaw(IEnumerable(Of KeyValuePair(Of String, JToken)))
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.WriteTo(EventStore.Projections.Core.Services.Processing.ProjectionVersion,IEnumerable{KeyValuePair{System.String,JToken}},JsonWriter)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.WriteTo(EventStore.Projections.Core.Services.Processing.ProjectionVersion,IEnumerable{KeyValuePair{System.String,JToken}},JsonWriter)
  id: WriteTo(EventStore.Projections.Core.Services.Processing.ProjectionVersion,IEnumerable{KeyValuePair{System.String,JToken}},JsonWriter)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: WriteTo(ProjectionVersion, IEnumerable<KeyValuePair<String, JToken>>, JsonWriter)
  nameWithType: CheckpointTag.WriteTo(ProjectionVersion, IEnumerable<KeyValuePair<String, JToken>>, JsonWriter)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.WriteTo(EventStore.Projections.Core.Services.Processing.ProjectionVersion, IEnumerable<KeyValuePair<System.String, JToken>>, JsonWriter)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: WriteTo
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 585
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void WriteTo(ProjectionVersion projectionVersion, IEnumerable<KeyValuePair<string, JToken>> extraMetaData, JsonWriter jsonWriter)
    parameters:
    - id: projectionVersion
      type: EventStore.Projections.Core.Services.Processing.ProjectionVersion
    - id: extraMetaData
      type: IEnumerable{KeyValuePair{System.String,JToken}}
    - id: jsonWriter
      type: JsonWriter
    content.vb: Public Sub WriteTo(projectionVersion As ProjectionVersion, extraMetaData As IEnumerable(Of KeyValuePair(Of String, JToken)), jsonWriter As JsonWriter)
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.WriteTo*
  nameWithType.vb: CheckpointTag.WriteTo(ProjectionVersion, IEnumerable(Of KeyValuePair(Of String, JToken)), JsonWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Processing.CheckpointTag.WriteTo(EventStore.Projections.Core.Services.Processing.ProjectionVersion, IEnumerable(Of KeyValuePair(Of System.String, JToken)), JsonWriter)
  name.vb: WriteTo(ProjectionVersion, IEnumerable(Of KeyValuePair(Of String, JToken)), JsonWriter)
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromJson(JsonReader,EventStore.Projections.Core.Services.Processing.ProjectionVersion,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.FromJson(JsonReader,EventStore.Projections.Core.Services.Processing.ProjectionVersion,System.Boolean)
  id: FromJson(JsonReader,EventStore.Projections.Core.Services.Processing.ProjectionVersion,System.Boolean)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: FromJson(JsonReader, ProjectionVersion, Boolean)
  nameWithType: CheckpointTag.FromJson(JsonReader, ProjectionVersion, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromJson(JsonReader, EventStore.Projections.Core.Services.Processing.ProjectionVersion, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: FromJson
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 667
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static CheckpointTagVersion FromJson(JsonReader reader, ProjectionVersion current, bool skipStartObject = false)
    parameters:
    - id: reader
      type: JsonReader
    - id: current
      type: EventStore.Projections.Core.Services.Processing.ProjectionVersion
    - id: skipStartObject
      type: System.Boolean
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTagVersion
    content.vb: Public Shared Function FromJson(reader As JsonReader, current As ProjectionVersion, skipStartObject As Boolean = False) As CheckpointTagVersion
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromJson*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.Check(JsonToken,JsonReader)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.Check(JsonToken,JsonReader)
  id: Check(JsonToken,JsonReader)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: Check(JsonToken, JsonReader)
  nameWithType: CheckpointTag.Check(JsonToken, JsonReader)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.Check(JsonToken, JsonReader)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Check
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 824
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static void Check(JsonToken type, JsonReader reader)
    parameters:
    - id: type
      type: JsonToken
    - id: reader
      type: JsonReader
    content.vb: Public Shared Sub Check(type As JsonToken, reader As JsonReader)
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.Check*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.Check(System.Boolean,JsonReader)
  commentId: M:EventStore.Projections.Core.Services.Processing.CheckpointTag.Check(System.Boolean,JsonReader)
  id: Check(System.Boolean,JsonReader)
  parent: EventStore.Projections.Core.Services.Processing.CheckpointTag
  langs:
  - csharp
  - vb
  name: Check(Boolean, JsonReader)
  nameWithType: CheckpointTag.Check(Boolean, JsonReader)
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.Check(System.Boolean, JsonReader)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Check
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/CheckpointTag.cs
    startLine: 830
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public static void Check(bool read, JsonReader reader)
    parameters:
    - id: read
      type: System.Boolean
    - id: reader
      type: JsonReader
    content.vb: Public Shared Sub Check(read As Boolean, reader As JsonReader)
  overload: EventStore.Projections.Core.Services.Processing.CheckpointTag.Check*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<CheckpointTag>()
  nameWithType: ProtobufExtensions.Serialize<CheckpointTag>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.CheckpointTag>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of CheckpointTag)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.CheckpointTag)()
  name.vb: Serialize(Of CheckpointTag)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<CheckpointTag>
    nameWithType: ProtobufExtensions.Serialize<CheckpointTag>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.CheckpointTag>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of CheckpointTag)
    nameWithType: ProtobufExtensions.Serialize(Of CheckpointTag)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<CheckpointTag>()
  nameWithType: ProtobufExtensions.SerializeToArray<CheckpointTag>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.CheckpointTag>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of CheckpointTag)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.CheckpointTag)()
  name.vb: SerializeToArray(Of CheckpointTag)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<CheckpointTag>
    nameWithType: ProtobufExtensions.SerializeToArray<CheckpointTag>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.CheckpointTag>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of CheckpointTag)
    nameWithType: ProtobufExtensions.SerializeToArray(Of CheckpointTag)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Data.TFPos
  commentId: T:EventStore.Core.Data.TFPos
  parent: EventStore.Core.Data
  isExternal: false
  name: TFPos
  nameWithType: TFPos
  fullName: EventStore.Core.Data.TFPos
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  isExternal: false
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: Dictionary{System.String,System.Int64}
  commentId: '!:Dictionary{System.String,System.Int64}'
  definition: Dictionary`2
  name: Dictionary<String, Int64>
  nameWithType: Dictionary<String, Int64>
  fullName: Dictionary<System.String, System.Int64>
  nameWithType.vb: Dictionary(Of String, Int64)
  fullName.vb: Dictionary(Of System.String, System.Int64)
  name.vb: Dictionary(Of String, Int64)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_GreaterThan*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.op_GreaterThan
  isExternal: false
  name: GreaterThan
  nameWithType: CheckpointTag.GreaterThan
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.GreaterThan
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_GreaterThanOrEqual*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.op_GreaterThanOrEqual
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: CheckpointTag.GreaterThanOrEqual
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.GreaterThanOrEqual
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_LessThan*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.op_LessThan
  isExternal: false
  name: LessThan
  nameWithType: CheckpointTag.LessThan
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.LessThan
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_LessThanOrEqual*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.op_LessThanOrEqual
  isExternal: false
  name: LessThanOrEqual
  nameWithType: CheckpointTag.LessThanOrEqual
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.LessThanOrEqual
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_Equality*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.op_Equality
  isExternal: false
  name: Equality
  nameWithType: CheckpointTag.Equality
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.Equality
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.op_Inequality*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.op_Inequality
  isExternal: false
  name: Inequality
  nameWithType: CheckpointTag.Inequality
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.Inequality
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.Equals*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.Equals
  isExternal: false
  name: Equals
  nameWithType: CheckpointTag.Equals
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.Equals
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.GetHashCode*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: CheckpointTag.GetHashCode
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.GetHashCode
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.CommitPosition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.CommitPosition
  isExternal: false
  name: CommitPosition
  nameWithType: CheckpointTag.CommitPosition
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.CommitPosition
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.PreparePosition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.PreparePosition
  isExternal: false
  name: PreparePosition
  nameWithType: CheckpointTag.PreparePosition
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.PreparePosition
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.Empty*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.Empty
  isExternal: false
  name: Empty
  nameWithType: CheckpointTag.Empty
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.Empty
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPhase*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPhase
  isExternal: false
  name: FromPhase
  nameWithType: CheckpointTag.FromPhase
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPhase
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPosition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPosition
  isExternal: false
  name: FromPosition
  nameWithType: CheckpointTag.FromPosition
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPosition
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPreparePosition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPreparePosition
  isExternal: false
  name: FromPreparePosition
  nameWithType: CheckpointTag.FromPreparePosition
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromPreparePosition
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromStreamPosition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.FromStreamPosition
  isExternal: false
  name: FromStreamPosition
  nameWithType: CheckpointTag.FromStreamPosition
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromStreamPosition
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromStreamPositions*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.FromStreamPositions
  isExternal: false
  name: FromStreamPositions
  nameWithType: CheckpointTag.FromStreamPositions
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromStreamPositions
- uid: IDictionary{System.String,System.Int64}
  commentId: '!:IDictionary{System.String,System.Int64}'
  definition: IDictionary`2
  name: IDictionary<String, Int64>
  nameWithType: IDictionary<String, Int64>
  fullName: IDictionary<System.String, System.Int64>
  nameWithType.vb: IDictionary(Of String, Int64)
  fullName.vb: IDictionary(Of System.String, System.Int64)
  name.vb: IDictionary(Of String, Int64)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullName.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromEventTypeIndexPositions*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.FromEventTypeIndexPositions
  isExternal: false
  name: FromEventTypeIndexPositions
  nameWithType: CheckpointTag.FromEventTypeIndexPositions
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromEventTypeIndexPositions
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromByStreamPosition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.FromByStreamPosition
  isExternal: false
  name: FromByStreamPosition
  nameWithType: CheckpointTag.FromByStreamPosition
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromByStreamPosition
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.CompareTo*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.CompareTo
  isExternal: false
  name: CompareTo
  nameWithType: CheckpointTag.CompareTo
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.CompareTo
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToString*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.ToString
  isExternal: false
  name: ToString
  nameWithType: CheckpointTag.ToString
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToString
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.Completed*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.Completed
  isExternal: false
  name: Completed
  nameWithType: CheckpointTag.Completed
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.Completed
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateStreamPosition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateStreamPosition
  isExternal: false
  name: UpdateStreamPosition
  nameWithType: CheckpointTag.UpdateStreamPosition
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateStreamPosition
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateEventTypeIndexPosition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateEventTypeIndexPosition
  isExternal: false
  name: UpdateEventTypeIndexPosition
  nameWithType: CheckpointTag.UpdateEventTypeIndexPosition
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.UpdateEventTypeIndexPosition
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonBytes*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonBytes
  isExternal: false
  name: ToJsonBytes
  nameWithType: CheckpointTag.ToJsonBytes
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonBytes
- uid: EventStore.Projections.Core.Services.Processing.ProjectionVersion
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionVersion
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: ProjectionVersion
  nameWithType: ProjectionVersion
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionVersion
- uid: IEnumerable{KeyValuePair{System.String,JToken}}
  commentId: '!:IEnumerable{KeyValuePair{System.String,JToken}}'
  definition: IEnumerable`1
  name: IEnumerable<KeyValuePair<String, JToken>>
  nameWithType: IEnumerable<KeyValuePair<String, JToken>>
  fullName: IEnumerable<KeyValuePair<System.String, JToken>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, JToken))
  fullName.vb: IEnumerable(Of KeyValuePair(Of System.String, JToken))
  name.vb: IEnumerable(Of KeyValuePair(Of String, JToken))
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: JToken
    name: JToken
    nameWithType: JToken
    fullName: JToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: JToken
    name: JToken
    nameWithType: JToken
    fullName: JToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonString*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonString
  isExternal: false
  name: ToJsonString
  nameWithType: CheckpointTag.ToJsonString
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonString
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonRaw*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonRaw
  isExternal: false
  name: ToJsonRaw
  nameWithType: CheckpointTag.ToJsonRaw
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.ToJsonRaw
- uid: JRaw
  commentId: '!:JRaw'
  isExternal: true
  name: JRaw
  nameWithType: JRaw
  fullName: JRaw
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.WriteTo*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.WriteTo
  isExternal: false
  name: WriteTo
  nameWithType: CheckpointTag.WriteTo
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.WriteTo
- uid: JsonWriter
  isExternal: true
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: JsonWriter
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromJson*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.FromJson
  isExternal: false
  name: FromJson
  nameWithType: CheckpointTag.FromJson
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.FromJson
- uid: JsonReader
  isExternal: true
  name: JsonReader
  nameWithType: JsonReader
  fullName: JsonReader
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTagVersion
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTagVersion
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: CheckpointTagVersion
  nameWithType: CheckpointTagVersion
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTagVersion
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag.Check*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.CheckpointTag.Check
  isExternal: false
  name: Check
  nameWithType: CheckpointTag.Check
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag.Check
- uid: JsonToken
  commentId: '!:JsonToken'
  isExternal: true
  name: JsonToken
  nameWithType: JsonToken
  fullName: JsonToken

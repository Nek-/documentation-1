### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.EventReader
  commentId: T:EventStore.Projections.Core.Services.Processing.EventReader
  id: EventReader
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.EventReader.#ctor(EventStore.Core.Bus.IPublisher,Guid,IPrincipal,System.Boolean)
  - EventStore.Projections.Core.Services.Processing.EventReader._disposed
  - EventStore.Projections.Core.Services.Processing.EventReader._publisher
  - EventStore.Projections.Core.Services.Processing.EventReader._stopOnEof
  - EventStore.Projections.Core.Services.Processing.EventReader.AreEventsRequested
  - EventStore.Projections.Core.Services.Processing.EventReader.Dispose
  - EventStore.Projections.Core.Services.Processing.EventReader.EventReaderCorrelationId
  - EventStore.Projections.Core.Services.Processing.EventReader.GetLastCommitPositionFrom(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted)
  - EventStore.Projections.Core.Services.Processing.EventReader.NotifyIfStarting(System.Int64)
  - EventStore.Projections.Core.Services.Processing.EventReader.Pause
  - EventStore.Projections.Core.Services.Processing.EventReader.Paused
  - EventStore.Projections.Core.Services.Processing.EventReader.PauseOrContinueProcessing
  - EventStore.Projections.Core.Services.Processing.EventReader.PauseRequested
  - EventStore.Projections.Core.Services.Processing.EventReader.ReadAs
  - EventStore.Projections.Core.Services.Processing.EventReader.RequestEvents
  - EventStore.Projections.Core.Services.Processing.EventReader.Resume
  - EventStore.Projections.Core.Services.Processing.EventReader.SendEof
  - EventStore.Projections.Core.Services.Processing.EventReader.SendNotAuthorized
  - EventStore.Projections.Core.Services.Processing.EventReader.SendPartitionDeleted_WhenReadingDataStream(System.String,System.Nullable{System.Int64},System.Nullable{EventStore.Core.Data.TFPos},System.Nullable{EventStore.Core.Data.TFPos},System.String,System.Nullable{System.Int32},EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.EventReader.SendPartitionEof(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  langs:
  - csharp
  - vb
  name: EventReader
  nameWithType: EventReader
  fullName: EventStore.Projections.Core.Services.Processing.EventReader
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EventReader
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 10
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public abstract class EventReader : object, IEventReader, IDisposable'
    content.vb: >-
      Public MustInherit Class EventReader
          Inherits Object
          Implements IEventReader, IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - EventStore.Projections.Core.Services.Processing.AllStreamsCatalogEventReader
  - EventStore.Projections.Core.Services.Processing.ByStreamCatalogEventReader
  - EventStore.Projections.Core.Services.Processing.EventByTypeIndexEventReader
  - EventStore.Projections.Core.Services.Processing.ExternallyFedByStreamEventReader
  - EventStore.Projections.Core.Services.Processing.MultiStreamEventReader
  - EventStore.Projections.Core.Services.Processing.StreamEventReader
  - EventStore.Projections.Core.Services.Processing.TransactionFileEventReader
  implements:
  - EventStore.Projections.Core.Services.Processing.IEventReader
  - IDisposable
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Processing.EventReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Processing.EventReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Projections.Core.Services.Processing.EventReader.EventReaderCorrelationId
  commentId: F:EventStore.Projections.Core.Services.Processing.EventReader.EventReaderCorrelationId
  id: EventReaderCorrelationId
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: EventReaderCorrelationId
  nameWithType: EventReader.EventReaderCorrelationId
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.EventReaderCorrelationId
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EventReaderCorrelationId
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 12
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly Guid EventReaderCorrelationId
    return:
      type: Guid
    content.vb: Protected ReadOnly EventReaderCorrelationId As Guid
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventReader._publisher
  commentId: F:EventStore.Projections.Core.Services.Processing.EventReader._publisher
  id: _publisher
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: _publisher
  nameWithType: EventReader._publisher
  fullName: EventStore.Projections.Core.Services.Processing.EventReader._publisher
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: _publisher
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 14
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly IPublisher _publisher
    return:
      type: EventStore.Core.Bus.IPublisher
    content.vb: Protected ReadOnly _publisher As IPublisher
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventReader._stopOnEof
  commentId: F:EventStore.Projections.Core.Services.Processing.EventReader._stopOnEof
  id: _stopOnEof
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: _stopOnEof
  nameWithType: EventReader._stopOnEof
  fullName: EventStore.Projections.Core.Services.Processing.EventReader._stopOnEof
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: _stopOnEof
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 16
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly bool _stopOnEof
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly _stopOnEof As Boolean
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventReader._disposed
  commentId: F:EventStore.Projections.Core.Services.Processing.EventReader._disposed
  id: _disposed
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: _disposed
  nameWithType: EventReader._disposed
  fullName: EventStore.Projections.Core.Services.Processing.EventReader._disposed
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: _disposed
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 19
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected bool _disposed
    return:
      type: System.Boolean
    content.vb: Protected _disposed As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventReader.#ctor(EventStore.Core.Bus.IPublisher,Guid,IPrincipal,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReader.#ctor(EventStore.Core.Bus.IPublisher,Guid,IPrincipal,System.Boolean)
  id: '#ctor(EventStore.Core.Bus.IPublisher,Guid,IPrincipal,System.Boolean)'
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: EventReader(IPublisher, Guid, IPrincipal, Boolean)
  nameWithType: EventReader.EventReader(IPublisher, Guid, IPrincipal, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.EventReader(EventStore.Core.Bus.IPublisher, Guid, IPrincipal, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 22
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected EventReader(IPublisher publisher, Guid eventReaderCorrelationId, IPrincipal readAs, bool stopOnEof)
    parameters:
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    - id: eventReaderCorrelationId
      type: Guid
    - id: readAs
      type: IPrincipal
    - id: stopOnEof
      type: System.Boolean
    content.vb: Protected Sub New(publisher As IPublisher, eventReaderCorrelationId As Guid, readAs As IPrincipal, stopOnEof As Boolean)
  overload: EventStore.Projections.Core.Services.Processing.EventReader.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventReader.PauseRequested
  commentId: P:EventStore.Projections.Core.Services.Processing.EventReader.PauseRequested
  id: PauseRequested
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: PauseRequested
  nameWithType: EventReader.PauseRequested
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.PauseRequested
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: PauseRequested
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 33
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected bool PauseRequested { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly Property PauseRequested As Boolean
  overload: EventStore.Projections.Core.Services.Processing.EventReader.PauseRequested*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventReader.Paused
  commentId: P:EventStore.Projections.Core.Services.Processing.EventReader.Paused
  id: Paused
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: Paused
  nameWithType: EventReader.Paused
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.Paused
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Paused
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 38
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected bool Paused { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly Property Paused As Boolean
  overload: EventStore.Projections.Core.Services.Processing.EventReader.Paused*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventReader.ReadAs
  commentId: P:EventStore.Projections.Core.Services.Processing.EventReader.ReadAs
  id: ReadAs
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: ReadAs
  nameWithType: EventReader.ReadAs
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.ReadAs
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReadAs
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 43
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected IPrincipal ReadAs { get; }
    parameters: []
    return:
      type: IPrincipal
    content.vb: Protected ReadOnly Property ReadAs As IPrincipal
  overload: EventStore.Projections.Core.Services.Processing.EventReader.ReadAs*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.EventReader.Resume
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReader.Resume
  id: Resume
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: Resume()
  nameWithType: EventReader.Resume()
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.Resume()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Resume
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 48
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Resume()
    content.vb: Public Sub Resume
  overload: EventStore.Projections.Core.Services.Processing.EventReader.Resume*
  implements:
  - EventStore.Projections.Core.Services.Processing.IEventReader.Resume
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventReader.Pause
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReader.Pause
  id: Pause
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: Pause()
  nameWithType: EventReader.Pause()
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.Pause()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Pause
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 65
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Pause()
    content.vb: Public Sub Pause
  overload: EventStore.Projections.Core.Services.Processing.EventReader.Pause*
  implements:
  - EventStore.Projections.Core.Services.Processing.IEventReader.Pause
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventReader.Dispose
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReader.Dispose
  id: Dispose
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: EventReader.Dispose()
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.Dispose()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Dispose
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 78
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose
  overload: EventStore.Projections.Core.Services.Processing.EventReader.Dispose*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: EventStore.Projections.Core.Services.Processing.EventReader.AreEventsRequested
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReader.AreEventsRequested
  id: AreEventsRequested
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: AreEventsRequested()
  nameWithType: EventReader.AreEventsRequested()
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.AreEventsRequested()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: AreEventsRequested
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 83
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected abstract bool AreEventsRequested()
    return:
      type: System.Boolean
    content.vb: Protected MustOverride Function AreEventsRequested As Boolean
  overload: EventStore.Projections.Core.Services.Processing.EventReader.AreEventsRequested*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: EventStore.Projections.Core.Services.Processing.EventReader.RequestEvents
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReader.RequestEvents
  id: RequestEvents
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: RequestEvents()
  nameWithType: EventReader.RequestEvents()
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.RequestEvents()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: RequestEvents
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 84
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected abstract void RequestEvents()
    content.vb: Protected MustOverride Sub RequestEvents
  overload: EventStore.Projections.Core.Services.Processing.EventReader.RequestEvents*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: EventStore.Projections.Core.Services.Processing.EventReader.SendEof
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReader.SendEof
  id: SendEof
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: SendEof()
  nameWithType: EventReader.SendEof()
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.SendEof()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: SendEof
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 86
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected void SendEof()
    content.vb: Protected Sub SendEof
  overload: EventStore.Projections.Core.Services.Processing.EventReader.SendEof*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventReader.SendPartitionEof(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReader.SendPartitionEof(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: SendPartitionEof(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: SendPartitionEof(String, CheckpointTag)
  nameWithType: EventReader.SendPartitionEof(String, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.SendPartitionEof(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: SendPartitionEof
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 95
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected void SendPartitionEof(string partition, CheckpointTag preTagged)
    parameters:
    - id: partition
      type: System.String
    - id: preTagged
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Protected Sub SendPartitionEof(partition As String, preTagged As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.EventReader.SendPartitionEof*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventReader.SendPartitionDeleted_WhenReadingDataStream(System.String,System.Nullable{System.Int64},System.Nullable{EventStore.Core.Data.TFPos},System.Nullable{EventStore.Core.Data.TFPos},System.String,System.Nullable{System.Int32},EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReader.SendPartitionDeleted_WhenReadingDataStream(System.String,System.Nullable{System.Int64},System.Nullable{EventStore.Core.Data.TFPos},System.Nullable{EventStore.Core.Data.TFPos},System.String,System.Nullable{System.Int32},EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: SendPartitionDeleted_WhenReadingDataStream(System.String,System.Nullable{System.Int64},System.Nullable{EventStore.Core.Data.TFPos},System.Nullable{EventStore.Core.Data.TFPos},System.String,System.Nullable{System.Int32},EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: SendPartitionDeleted_WhenReadingDataStream(String, Nullable<Int64>, Nullable<TFPos>, Nullable<TFPos>, String, Nullable<Int32>, CheckpointTag)
  nameWithType: EventReader.SendPartitionDeleted_WhenReadingDataStream(String, Nullable<Int64>, Nullable<TFPos>, Nullable<TFPos>, String, Nullable<Int32>, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.SendPartitionDeleted_WhenReadingDataStream(System.String, System.Nullable<System.Int64>, System.Nullable<EventStore.Core.Data.TFPos>, System.Nullable<EventStore.Core.Data.TFPos>, System.String, System.Nullable<System.Int32>, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: SendPartitionDeleted_WhenReadingDataStream
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 103
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected void SendPartitionDeleted_WhenReadingDataStream(string partition, long? lastEventNumber, TFPos? deletedLinkOrEventPosition, TFPos? deletedEventPosition, string positionStreamId, int? positionEventNumber, CheckpointTag preTagged = null)
    parameters:
    - id: partition
      type: System.String
    - id: lastEventNumber
      type: System.Nullable{System.Int64}
    - id: deletedLinkOrEventPosition
      type: System.Nullable{EventStore.Core.Data.TFPos}
    - id: deletedEventPosition
      type: System.Nullable{EventStore.Core.Data.TFPos}
    - id: positionStreamId
      type: System.String
    - id: positionEventNumber
      type: System.Nullable{System.Int32}
    - id: preTagged
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Protected Sub SendPartitionDeleted_WhenReadingDataStream(partition As String, lastEventNumber As Long?, deletedLinkOrEventPosition As TFPos?, deletedEventPosition As TFPos?, positionStreamId As String, positionEventNumber As Integer?, preTagged As CheckpointTag = Nothing)
  overload: EventStore.Projections.Core.Services.Processing.EventReader.SendPartitionDeleted_WhenReadingDataStream*
  nameWithType.vb: EventReader.SendPartitionDeleted_WhenReadingDataStream(String, Nullable(Of Int64), Nullable(Of TFPos), Nullable(Of TFPos), String, Nullable(Of Int32), CheckpointTag)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: EventStore.Projections.Core.Services.Processing.EventReader.SendPartitionDeleted_WhenReadingDataStream(System.String, System.Nullable(Of System.Int64), System.Nullable(Of EventStore.Core.Data.TFPos), System.Nullable(Of EventStore.Core.Data.TFPos), System.String, System.Nullable(Of System.Int32), EventStore.Projections.Core.Services.Processing.CheckpointTag)
  name.vb: SendPartitionDeleted_WhenReadingDataStream(String, Nullable(Of Int64), Nullable(Of TFPos), Nullable(Of TFPos), String, Nullable(Of Int32), CheckpointTag)
- uid: EventStore.Projections.Core.Services.Processing.EventReader.SendNotAuthorized
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReader.SendNotAuthorized
  id: SendNotAuthorized
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: SendNotAuthorized()
  nameWithType: EventReader.SendNotAuthorized()
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.SendNotAuthorized()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: SendNotAuthorized
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 115
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void SendNotAuthorized()
    content.vb: Public Sub SendNotAuthorized
  overload: EventStore.Projections.Core.Services.Processing.EventReader.SendNotAuthorized*
  implements:
  - EventStore.Projections.Core.Services.Processing.IEventReader.SendNotAuthorized
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventReader.GetLastCommitPositionFrom(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReader.GetLastCommitPositionFrom(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted)
  id: GetLastCommitPositionFrom(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted)
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: GetLastCommitPositionFrom(ClientMessage.ReadStreamEventsForwardCompleted)
  nameWithType: EventReader.GetLastCommitPositionFrom(ClientMessage.ReadStreamEventsForwardCompleted)
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.GetLastCommitPositionFrom(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: GetLastCommitPositionFrom
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 123
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected static long? GetLastCommitPositionFrom(ClientMessage.ReadStreamEventsForwardCompleted msg)
    parameters:
    - id: msg
      type: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
    return:
      type: System.Nullable{System.Int64}
    content.vb: Protected Shared Function GetLastCommitPositionFrom(msg As ClientMessage.ReadStreamEventsForwardCompleted) As Long?
  overload: EventStore.Projections.Core.Services.Processing.EventReader.GetLastCommitPositionFrom*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: EventStore.Projections.Core.Services.Processing.EventReader.PauseOrContinueProcessing
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReader.PauseOrContinueProcessing
  id: PauseOrContinueProcessing
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: PauseOrContinueProcessing()
  nameWithType: EventReader.PauseOrContinueProcessing()
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.PauseOrContinueProcessing()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: PauseOrContinueProcessing
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 132
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected void PauseOrContinueProcessing()
    content.vb: Protected Sub PauseOrContinueProcessing
  overload: EventStore.Projections.Core.Services.Processing.EventReader.PauseOrContinueProcessing*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Services.Processing.EventReader.NotifyIfStarting(System.Int64)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReader.NotifyIfStarting(System.Int64)
  id: NotifyIfStarting(System.Int64)
  parent: EventStore.Projections.Core.Services.Processing.EventReader
  langs:
  - csharp
  - vb
  name: NotifyIfStarting(Int64)
  nameWithType: EventReader.NotifyIfStarting(Int64)
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.NotifyIfStarting(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReader.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: NotifyIfStarting
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReader.cs
    startLine: 148
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected void NotifyIfStarting(long startingLastCommitPosition)
    parameters:
    - id: startingLastCommitPosition
      type: System.Int64
    content.vb: Protected Sub NotifyIfStarting(startingLastCommitPosition As Long)
  overload: EventStore.Projections.Core.Services.Processing.EventReader.NotifyIfStarting*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.Processing.IEventReader
  commentId: T:EventStore.Projections.Core.Services.Processing.IEventReader
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: IEventReader
  nameWithType: IEventReader
  fullName: EventStore.Projections.Core.Services.Processing.IEventReader
- uid: IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<EventReader>()
  nameWithType: ProtobufExtensions.Serialize<EventReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.EventReader>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of EventReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.EventReader)()
  name.vb: Serialize(Of EventReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<EventReader>
    nameWithType: ProtobufExtensions.Serialize<EventReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.EventReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of EventReader)
    nameWithType: ProtobufExtensions.Serialize(Of EventReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.EventReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventReader.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<EventReader>()
  nameWithType: ProtobufExtensions.SerializeToArray<EventReader>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.EventReader>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of EventReader)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.EventReader)()
  name.vb: SerializeToArray(Of EventReader)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<EventReader>
    nameWithType: ProtobufExtensions.SerializeToArray<EventReader>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.EventReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of EventReader)
    nameWithType: ProtobufExtensions.SerializeToArray(Of EventReader)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.EventReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  isExternal: false
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.Processing.EventReader.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReader.#ctor
  isExternal: false
  name: EventReader
  nameWithType: EventReader.EventReader
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.EventReader
- uid: IPrincipal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: IPrincipal
- uid: EventStore.Projections.Core.Services.Processing.EventReader.PauseRequested*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReader.PauseRequested
  isExternal: false
  name: PauseRequested
  nameWithType: EventReader.PauseRequested
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.PauseRequested
- uid: EventStore.Projections.Core.Services.Processing.EventReader.Paused*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReader.Paused
  isExternal: false
  name: Paused
  nameWithType: EventReader.Paused
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.Paused
- uid: EventStore.Projections.Core.Services.Processing.EventReader.ReadAs*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReader.ReadAs
  isExternal: false
  name: ReadAs
  nameWithType: EventReader.ReadAs
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.ReadAs
- uid: EventStore.Projections.Core.Services.Processing.EventReader.Resume*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReader.Resume
  isExternal: false
  name: Resume
  nameWithType: EventReader.Resume
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.Resume
- uid: EventStore.Projections.Core.Services.Processing.IEventReader.Resume
  commentId: M:EventStore.Projections.Core.Services.Processing.IEventReader.Resume
  parent: EventStore.Projections.Core.Services.Processing.IEventReader
  isExternal: false
  name: Resume()
  nameWithType: IEventReader.Resume()
  fullName: EventStore.Projections.Core.Services.Processing.IEventReader.Resume()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IEventReader.Resume
    name: Resume
    nameWithType: IEventReader.Resume
    fullName: EventStore.Projections.Core.Services.Processing.IEventReader.Resume
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IEventReader.Resume
    name: Resume
    nameWithType: IEventReader.Resume
    fullName: EventStore.Projections.Core.Services.Processing.IEventReader.Resume
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventReader.Pause*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReader.Pause
  isExternal: false
  name: Pause
  nameWithType: EventReader.Pause
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.Pause
- uid: EventStore.Projections.Core.Services.Processing.IEventReader.Pause
  commentId: M:EventStore.Projections.Core.Services.Processing.IEventReader.Pause
  parent: EventStore.Projections.Core.Services.Processing.IEventReader
  isExternal: false
  name: Pause()
  nameWithType: IEventReader.Pause()
  fullName: EventStore.Projections.Core.Services.Processing.IEventReader.Pause()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IEventReader.Pause
    name: Pause
    nameWithType: IEventReader.Pause
    fullName: EventStore.Projections.Core.Services.Processing.IEventReader.Pause
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IEventReader.Pause
    name: Pause
    nameWithType: IEventReader.Pause
    fullName: EventStore.Projections.Core.Services.Processing.IEventReader.Pause
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventReader.Dispose*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReader.Dispose
  isExternal: false
  name: Dispose
  nameWithType: EventReader.Dispose
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.Dispose
- uid: EventStore.Projections.Core.Services.Processing.EventReader.AreEventsRequested*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReader.AreEventsRequested
  isExternal: false
  name: AreEventsRequested
  nameWithType: EventReader.AreEventsRequested
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.AreEventsRequested
- uid: EventStore.Projections.Core.Services.Processing.EventReader.RequestEvents*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReader.RequestEvents
  isExternal: false
  name: RequestEvents
  nameWithType: EventReader.RequestEvents
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.RequestEvents
- uid: EventStore.Projections.Core.Services.Processing.EventReader.SendEof*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReader.SendEof
  isExternal: false
  name: SendEof
  nameWithType: EventReader.SendEof
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.SendEof
- uid: EventStore.Projections.Core.Services.Processing.EventReader.SendPartitionEof*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReader.SendPartitionEof
  isExternal: false
  name: SendPartitionEof
  nameWithType: EventReader.SendPartitionEof
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.SendPartitionEof
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.EventReader.SendPartitionDeleted_WhenReadingDataStream*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReader.SendPartitionDeleted_WhenReadingDataStream
  isExternal: false
  name: SendPartitionDeleted_WhenReadingDataStream
  nameWithType: EventReader.SendPartitionDeleted_WhenReadingDataStream
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.SendPartitionDeleted_WhenReadingDataStream
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{EventStore.Core.Data.TFPos}
  commentId: '!:System.Nullable{EventStore.Core.Data.TFPos}'
  definition: System.Nullable`1
  name: Nullable<TFPos>
  nameWithType: Nullable<TFPos>
  fullName: System.Nullable<EventStore.Core.Data.TFPos>
  nameWithType.vb: Nullable(Of TFPos)
  fullName.vb: System.Nullable(Of EventStore.Core.Data.TFPos)
  name.vb: Nullable(Of TFPos)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Data.TFPos
    name: TFPos
    nameWithType: TFPos
    fullName: EventStore.Core.Data.TFPos
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Data.TFPos
    name: TFPos
    nameWithType: TFPos
    fullName: EventStore.Core.Data.TFPos
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventReader.SendNotAuthorized*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReader.SendNotAuthorized
  isExternal: false
  name: SendNotAuthorized
  nameWithType: EventReader.SendNotAuthorized
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.SendNotAuthorized
- uid: EventStore.Projections.Core.Services.Processing.IEventReader.SendNotAuthorized
  commentId: M:EventStore.Projections.Core.Services.Processing.IEventReader.SendNotAuthorized
  parent: EventStore.Projections.Core.Services.Processing.IEventReader
  isExternal: false
  name: SendNotAuthorized()
  nameWithType: IEventReader.SendNotAuthorized()
  fullName: EventStore.Projections.Core.Services.Processing.IEventReader.SendNotAuthorized()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IEventReader.SendNotAuthorized
    name: SendNotAuthorized
    nameWithType: IEventReader.SendNotAuthorized
    fullName: EventStore.Projections.Core.Services.Processing.IEventReader.SendNotAuthorized
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IEventReader.SendNotAuthorized
    name: SendNotAuthorized
    nameWithType: IEventReader.SendNotAuthorized
    fullName: EventStore.Projections.Core.Services.Processing.IEventReader.SendNotAuthorized
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventReader.GetLastCommitPositionFrom*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReader.GetLastCommitPositionFrom
  isExternal: false
  name: GetLastCommitPositionFrom
  nameWithType: EventReader.GetLastCommitPositionFrom
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.GetLastCommitPositionFrom
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
  commentId: T:EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
  parent: EventStore.Core.Messages
  isExternal: false
  name: ClientMessage.ReadStreamEventsForwardCompleted
  nameWithType: ClientMessage.ReadStreamEventsForwardCompleted
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  isExternal: false
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: EventStore.Projections.Core.Services.Processing.EventReader.PauseOrContinueProcessing*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReader.PauseOrContinueProcessing
  isExternal: false
  name: PauseOrContinueProcessing
  nameWithType: EventReader.PauseOrContinueProcessing
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.PauseOrContinueProcessing
- uid: EventStore.Projections.Core.Services.Processing.EventReader.NotifyIfStarting*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReader.NotifyIfStarting
  isExternal: false
  name: NotifyIfStarting
  nameWithType: EventReader.NotifyIfStarting
  fullName: EventStore.Projections.Core.Services.Processing.EventReader.NotifyIfStarting
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64

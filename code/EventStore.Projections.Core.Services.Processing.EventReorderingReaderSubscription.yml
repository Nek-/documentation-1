### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription
  commentId: T:EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription
  id: EventReorderingReaderSubscription
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.#ctor(EventStore.Core.Bus.IPublisher,Guid,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.IReaderStrategy,EventStore.Core.Services.TimerService.ITimeProvider,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Int32,System.Int32,System.Boolean,System.Nullable{System.Int32})
  - EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.EofReached
  - EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  - EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle)
  - EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  - EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof)
  langs:
  - csharp
  - vb
  name: EventReorderingReaderSubscription
  nameWithType: EventReorderingReaderSubscription
  fullName: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReorderingReaderSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EventReorderingReaderSubscription
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReorderingReaderSubscription.cs
    startLine: 9
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public class EventReorderingReaderSubscription : ReaderSubscriptionBase, IReaderSubscription, IHandle<ReaderSubscriptionMessage.CommittedEventDistributed>, IHandle<ReaderSubscriptionMessage.EventReaderIdle>, IHandle<ReaderSubscriptionMessage.EventReaderStarting>, IHandle<ReaderSubscriptionMessage.EventReaderEof>, IHandle<ReaderSubscriptionMessage.EventReaderPartitionEof>, IHandle<ReaderSubscriptionMessage.EventReaderPartitionDeleted>, IHandle<ReaderSubscriptionMessage.EventReaderPartitionMeasured>, IHandle<ReaderSubscriptionMessage.EventReaderNotAuthorized>'
    content.vb: >-
      Public Class EventReorderingReaderSubscription
          Inherits ReaderSubscriptionBase
          Implements IReaderSubscription, IHandle(Of ReaderSubscriptionMessage.CommittedEventDistributed), IHandle(Of ReaderSubscriptionMessage.EventReaderIdle), IHandle(Of ReaderSubscriptionMessage.EventReaderStarting), IHandle(Of ReaderSubscriptionMessage.EventReaderEof), IHandle(Of ReaderSubscriptionMessage.EventReaderPartitionEof), IHandle(Of ReaderSubscriptionMessage.EventReaderPartitionDeleted), IHandle(Of ReaderSubscriptionMessage.EventReaderPartitionMeasured), IHandle(Of ReaderSubscriptionMessage.EventReaderNotAuthorized)
  inheritance:
  - System.Object
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
  implements:
  - EventStore.Projections.Core.Services.Processing.IReaderSubscription
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized}
  inheritedMembers:
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase._eventFilter
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase._positionTagger
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase._positionTracker
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase._tag
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Tag
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.SubscriptionId
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.ProcessOne(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.PublishPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.CreatePausedEventReader(EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,Guid)
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof)
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured)
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized)
  - EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.#ctor(EventStore.Core.Bus.IPublisher,Guid,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.IReaderStrategy,EventStore.Core.Services.TimerService.ITimeProvider,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Int32,System.Int32,System.Boolean,System.Nullable{System.Int32})
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.#ctor(EventStore.Core.Bus.IPublisher,Guid,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.IReaderStrategy,EventStore.Core.Services.TimerService.ITimeProvider,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Int32,System.Int32,System.Boolean,System.Nullable{System.Int32})
  id: '#ctor(EventStore.Core.Bus.IPublisher,Guid,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.IReaderStrategy,EventStore.Core.Services.TimerService.ITimeProvider,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Int32,System.Int32,System.Boolean,System.Nullable{System.Int32})'
  parent: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription
  langs:
  - csharp
  - vb
  name: EventReorderingReaderSubscription(IPublisher, Guid, CheckpointTag, IReaderStrategy, ITimeProvider, Nullable<Int64>, Nullable<Int32>, Int32, Int32, Boolean, Nullable<Int32>)
  nameWithType: EventReorderingReaderSubscription.EventReorderingReaderSubscription(IPublisher, Guid, CheckpointTag, IReaderStrategy, ITimeProvider, Nullable<Int64>, Nullable<Int32>, Int32, Int32, Boolean, Nullable<Int32>)
  fullName: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.EventReorderingReaderSubscription(EventStore.Core.Bus.IPublisher, Guid, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.IReaderStrategy, EventStore.Core.Services.TimerService.ITimeProvider, System.Nullable<System.Int64>, System.Nullable<System.Int32>, System.Int32, System.Int32, System.Boolean, System.Nullable<System.Int32>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReorderingReaderSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReorderingReaderSubscription.cs
    startLine: 16
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public EventReorderingReaderSubscription(IPublisher publisher, Guid subscriptionId, CheckpointTag from, IReaderStrategy readerStrategy, ITimeProvider timeProvider, long ? checkpointUnhandledBytesThreshold, int ? checkpointProcessedEventsThreshold, int checkpointAfterMs, int processingLagMs, bool stopOnEof = false, int ? stopAfterNEvents = null)
    parameters:
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    - id: subscriptionId
      type: Guid
    - id: from
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: readerStrategy
      type: EventStore.Projections.Core.Services.Processing.IReaderStrategy
    - id: timeProvider
      type: EventStore.Core.Services.TimerService.ITimeProvider
    - id: checkpointUnhandledBytesThreshold
      type: System.Nullable{System.Int64}
    - id: checkpointProcessedEventsThreshold
      type: System.Nullable{System.Int32}
    - id: checkpointAfterMs
      type: System.Int32
    - id: processingLagMs
      type: System.Int32
    - id: stopOnEof
      type: System.Boolean
    - id: stopAfterNEvents
      type: System.Nullable{System.Int32}
    content.vb: Public Sub New(publisher As IPublisher, subscriptionId As Guid, from As CheckpointTag, readerStrategy As IReaderStrategy, timeProvider As ITimeProvider, checkpointUnhandledBytesThreshold As Long?, checkpointProcessedEventsThreshold As Integer?, checkpointAfterMs As Integer, processingLagMs As Integer, stopOnEof As Boolean = False, stopAfterNEvents As Integer? = Nothing)
  overload: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.#ctor*
  nameWithType.vb: EventReorderingReaderSubscription.EventReorderingReaderSubscription(IPublisher, Guid, CheckpointTag, IReaderStrategy, ITimeProvider, Nullable(Of Int64), Nullable(Of Int32), Int32, Int32, Boolean, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.EventReorderingReaderSubscription(EventStore.Core.Bus.IPublisher, Guid, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.IReaderStrategy, EventStore.Core.Services.TimerService.ITimeProvider, System.Nullable(Of System.Int64), System.Nullable(Of System.Int32), System.Int32, System.Int32, System.Boolean, System.Nullable(Of System.Int32))
  name.vb: EventReorderingReaderSubscription(IPublisher, Guid, CheckpointTag, IReaderStrategy, ITimeProvider, Nullable(Of Int64), Nullable(Of Int32), Int32, Int32, Boolean, Nullable(Of Int32))
- uid: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  id: Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  parent: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription
  langs:
  - csharp
  - vb
  name: Handle(ReaderSubscriptionMessage.CommittedEventDistributed)
  nameWithType: EventReorderingReaderSubscription.Handle(ReaderSubscriptionMessage.CommittedEventDistributed)
  fullName: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReorderingReaderSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReorderingReaderSubscription.cs
    startLine: 43
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(ReaderSubscriptionMessage.CommittedEventDistributed message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
    content.vb: Public Sub Handle(message As ReaderSubscriptionMessage.CommittedEventDistributed)
  overload: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed}.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle)
  id: Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle)
  parent: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription
  langs:
  - csharp
  - vb
  name: Handle(ReaderSubscriptionMessage.EventReaderIdle)
  nameWithType: EventReorderingReaderSubscription.Handle(ReaderSubscriptionMessage.EventReaderIdle)
  fullName: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReorderingReaderSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReorderingReaderSubscription.cs
    startLine: 83
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(ReaderSubscriptionMessage.EventReaderIdle message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle
    content.vb: Public Sub Handle(message As ReaderSubscriptionMessage.EventReaderIdle)
  overload: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle}.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.EofReached
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.EofReached
  id: EofReached
  parent: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription
  langs:
  - csharp
  - vb
  name: EofReached()
  nameWithType: EventReorderingReaderSubscription.EofReached()
  fullName: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.EofReached()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReorderingReaderSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EofReached
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReorderingReaderSubscription.cs
    startLine: 89
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected override void EofReached()
    content.vb: Protected Overrides Sub EofReached
  overridden: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.EofReached
  overload: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.EofReached*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof)
  id: Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof)
  parent: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription
  langs:
  - csharp
  - vb
  name: Handle(ReaderSubscriptionMessage.EventReaderPartitionEof)
  nameWithType: EventReorderingReaderSubscription.Handle(ReaderSubscriptionMessage.EventReaderPartitionEof)
  fullName: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReorderingReaderSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReorderingReaderSubscription.cs
    startLine: 95
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(ReaderSubscriptionMessage.EventReaderPartitionEof message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof
    content.vb: Public Sub Handle(message As ReaderSubscriptionMessage.EventReaderPartitionEof)
  overload: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof}.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  commentId: M:EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  id: Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  parent: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription
  langs:
  - csharp
  - vb
  name: Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  nameWithType: EventReorderingReaderSubscription.Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  fullName: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/EventReorderingReaderSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/EventReorderingReaderSubscription.cs
    startLine: 100
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted
    content.vb: Public Sub Handle(message As ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  overload: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted}.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
  commentId: T:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: ReaderSubscriptionBase
  nameWithType: ReaderSubscriptionBase
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
- uid: EventStore.Projections.Core.Services.Processing.IReaderSubscription
  commentId: T:EventStore.Projections.Core.Services.Processing.IReaderSubscription
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: IReaderSubscription
  nameWithType: IReaderSubscription
  fullName: EventStore.Projections.Core.Services.Processing.IReaderSubscription
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ReaderSubscriptionMessage.CommittedEventDistributed>
  nameWithType: IHandle<ReaderSubscriptionMessage.CommittedEventDistributed>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed>
  nameWithType.vb: IHandle(Of ReaderSubscriptionMessage.CommittedEventDistributed)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  name.vb: IHandle(Of ReaderSubscriptionMessage.CommittedEventDistributed)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
    name: ReaderSubscriptionMessage.CommittedEventDistributed
    nameWithType: ReaderSubscriptionMessage.CommittedEventDistributed
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
    name: ReaderSubscriptionMessage.CommittedEventDistributed
    nameWithType: ReaderSubscriptionMessage.CommittedEventDistributed
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ReaderSubscriptionMessage.EventReaderIdle>
  nameWithType: IHandle<ReaderSubscriptionMessage.EventReaderIdle>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle>
  nameWithType.vb: IHandle(Of ReaderSubscriptionMessage.EventReaderIdle)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle)
  name.vb: IHandle(Of ReaderSubscriptionMessage.EventReaderIdle)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle
    name: ReaderSubscriptionMessage.EventReaderIdle
    nameWithType: ReaderSubscriptionMessage.EventReaderIdle
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle
    name: ReaderSubscriptionMessage.EventReaderIdle
    nameWithType: ReaderSubscriptionMessage.EventReaderIdle
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ReaderSubscriptionMessage.EventReaderStarting>
  nameWithType: IHandle<ReaderSubscriptionMessage.EventReaderStarting>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting>
  nameWithType.vb: IHandle(Of ReaderSubscriptionMessage.EventReaderStarting)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting)
  name.vb: IHandle(Of ReaderSubscriptionMessage.EventReaderStarting)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting
    name: ReaderSubscriptionMessage.EventReaderStarting
    nameWithType: ReaderSubscriptionMessage.EventReaderStarting
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting
    name: ReaderSubscriptionMessage.EventReaderStarting
    nameWithType: ReaderSubscriptionMessage.EventReaderStarting
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ReaderSubscriptionMessage.EventReaderEof>
  nameWithType: IHandle<ReaderSubscriptionMessage.EventReaderEof>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof>
  nameWithType.vb: IHandle(Of ReaderSubscriptionMessage.EventReaderEof)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof)
  name.vb: IHandle(Of ReaderSubscriptionMessage.EventReaderEof)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof
    name: ReaderSubscriptionMessage.EventReaderEof
    nameWithType: ReaderSubscriptionMessage.EventReaderEof
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof
    name: ReaderSubscriptionMessage.EventReaderEof
    nameWithType: ReaderSubscriptionMessage.EventReaderEof
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ReaderSubscriptionMessage.EventReaderPartitionEof>
  nameWithType: IHandle<ReaderSubscriptionMessage.EventReaderPartitionEof>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof>
  nameWithType.vb: IHandle(Of ReaderSubscriptionMessage.EventReaderPartitionEof)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof)
  name.vb: IHandle(Of ReaderSubscriptionMessage.EventReaderPartitionEof)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof
    name: ReaderSubscriptionMessage.EventReaderPartitionEof
    nameWithType: ReaderSubscriptionMessage.EventReaderPartitionEof
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof
    name: ReaderSubscriptionMessage.EventReaderPartitionEof
    nameWithType: ReaderSubscriptionMessage.EventReaderPartitionEof
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ReaderSubscriptionMessage.EventReaderPartitionDeleted>
  nameWithType: IHandle<ReaderSubscriptionMessage.EventReaderPartitionDeleted>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted>
  nameWithType.vb: IHandle(Of ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  name.vb: IHandle(Of ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted
    name: ReaderSubscriptionMessage.EventReaderPartitionDeleted
    nameWithType: ReaderSubscriptionMessage.EventReaderPartitionDeleted
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted
    name: ReaderSubscriptionMessage.EventReaderPartitionDeleted
    nameWithType: ReaderSubscriptionMessage.EventReaderPartitionDeleted
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ReaderSubscriptionMessage.EventReaderPartitionMeasured>
  nameWithType: IHandle<ReaderSubscriptionMessage.EventReaderPartitionMeasured>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured>
  nameWithType.vb: IHandle(Of ReaderSubscriptionMessage.EventReaderPartitionMeasured)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured)
  name.vb: IHandle(Of ReaderSubscriptionMessage.EventReaderPartitionMeasured)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured
    name: ReaderSubscriptionMessage.EventReaderPartitionMeasured
    nameWithType: ReaderSubscriptionMessage.EventReaderPartitionMeasured
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured
    name: ReaderSubscriptionMessage.EventReaderPartitionMeasured
    nameWithType: ReaderSubscriptionMessage.EventReaderPartitionMeasured
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ReaderSubscriptionMessage.EventReaderNotAuthorized>
  nameWithType: IHandle<ReaderSubscriptionMessage.EventReaderNotAuthorized>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized>
  nameWithType.vb: IHandle(Of ReaderSubscriptionMessage.EventReaderNotAuthorized)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized)
  name.vb: IHandle(Of ReaderSubscriptionMessage.EventReaderNotAuthorized)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized
    name: ReaderSubscriptionMessage.EventReaderNotAuthorized
    nameWithType: ReaderSubscriptionMessage.EventReaderNotAuthorized
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized
    name: ReaderSubscriptionMessage.EventReaderNotAuthorized
    nameWithType: ReaderSubscriptionMessage.EventReaderNotAuthorized
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase._eventFilter
  commentId: F:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase._eventFilter
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
  isExternal: false
  name: _eventFilter
  nameWithType: ReaderSubscriptionBase._eventFilter
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase._eventFilter
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase._positionTagger
  commentId: F:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase._positionTagger
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
  isExternal: false
  name: _positionTagger
  nameWithType: ReaderSubscriptionBase._positionTagger
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase._positionTagger
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase._positionTracker
  commentId: F:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase._positionTracker
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
  isExternal: false
  name: _positionTracker
  nameWithType: ReaderSubscriptionBase._positionTracker
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase._positionTracker
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase._tag
  commentId: F:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase._tag
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
  isExternal: false
  name: _tag
  nameWithType: ReaderSubscriptionBase._tag
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase._tag
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Tag
  commentId: P:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Tag
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
  isExternal: false
  name: Tag
  nameWithType: ReaderSubscriptionBase.Tag
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Tag
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.SubscriptionId
  commentId: P:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.SubscriptionId
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
  isExternal: false
  name: SubscriptionId
  nameWithType: ReaderSubscriptionBase.SubscriptionId
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.SubscriptionId
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.ProcessOne(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  commentId: M:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.ProcessOne(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
  isExternal: false
  name: ProcessOne(ReaderSubscriptionMessage.CommittedEventDistributed)
  nameWithType: ReaderSubscriptionBase.ProcessOne(ReaderSubscriptionMessage.CommittedEventDistributed)
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.ProcessOne(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.ProcessOne(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
    name: ProcessOne
    nameWithType: ReaderSubscriptionBase.ProcessOne
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.ProcessOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
    name: ReaderSubscriptionMessage.CommittedEventDistributed
    nameWithType: ReaderSubscriptionMessage.CommittedEventDistributed
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.ProcessOne(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
    name: ProcessOne
    nameWithType: ReaderSubscriptionBase.ProcessOne
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.ProcessOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
    name: ReaderSubscriptionMessage.CommittedEventDistributed
    nameWithType: ReaderSubscriptionMessage.CommittedEventDistributed
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.PublishPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.PublishPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
  isExternal: true
  name: PublishPartitionDeleted(String, CheckpointTag)
  nameWithType: ReaderSubscriptionBase.PublishPartitionDeleted(String, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.PublishPartitionDeleted(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.PublishPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: PublishPartitionDeleted
    nameWithType: ReaderSubscriptionBase.PublishPartitionDeleted
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.PublishPartitionDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.PublishPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: PublishPartitionDeleted
    nameWithType: ReaderSubscriptionBase.PublishPartitionDeleted
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.PublishPartitionDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.CreatePausedEventReader(EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,Guid)
  commentId: M:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.CreatePausedEventReader(EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,Guid)
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
  isExternal: true
  name: CreatePausedEventReader(IPublisher, IODispatcher, Guid)
  nameWithType: ReaderSubscriptionBase.CreatePausedEventReader(IPublisher, IODispatcher, Guid)
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.CreatePausedEventReader(EventStore.Core.Bus.IPublisher, EventStore.Core.Helpers.IODispatcher, Guid)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.CreatePausedEventReader(EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,Guid)
    name: CreatePausedEventReader
    nameWithType: ReaderSubscriptionBase.CreatePausedEventReader
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.CreatePausedEventReader
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Helpers.IODispatcher
    name: IODispatcher
    nameWithType: IODispatcher
    fullName: EventStore.Core.Helpers.IODispatcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.CreatePausedEventReader(EventStore.Core.Bus.IPublisher,EventStore.Core.Helpers.IODispatcher,Guid)
    name: CreatePausedEventReader
    nameWithType: ReaderSubscriptionBase.CreatePausedEventReader
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.CreatePausedEventReader
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IPublisher
    name: IPublisher
    nameWithType: IPublisher
    fullName: EventStore.Core.Bus.IPublisher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Core.Helpers.IODispatcher
    name: IODispatcher
    nameWithType: IODispatcher
    fullName: EventStore.Core.Helpers.IODispatcher
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof)
  commentId: M:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof)
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
  isExternal: false
  name: Handle(ReaderSubscriptionMessage.EventReaderEof)
  nameWithType: ReaderSubscriptionBase.Handle(ReaderSubscriptionMessage.EventReaderEof)
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof)
    name: Handle
    nameWithType: ReaderSubscriptionBase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof
    name: ReaderSubscriptionMessage.EventReaderEof
    nameWithType: ReaderSubscriptionMessage.EventReaderEof
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof)
    name: Handle
    nameWithType: ReaderSubscriptionBase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof
    name: ReaderSubscriptionMessage.EventReaderEof
    nameWithType: ReaderSubscriptionMessage.EventReaderEof
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured)
  commentId: M:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured)
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
  isExternal: false
  name: Handle(ReaderSubscriptionMessage.EventReaderPartitionMeasured)
  nameWithType: ReaderSubscriptionBase.Handle(ReaderSubscriptionMessage.EventReaderPartitionMeasured)
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured)
    name: Handle
    nameWithType: ReaderSubscriptionBase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured
    name: ReaderSubscriptionMessage.EventReaderPartitionMeasured
    nameWithType: ReaderSubscriptionMessage.EventReaderPartitionMeasured
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured)
    name: Handle
    nameWithType: ReaderSubscriptionBase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured
    name: ReaderSubscriptionMessage.EventReaderPartitionMeasured
    nameWithType: ReaderSubscriptionMessage.EventReaderPartitionMeasured
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized)
  commentId: M:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized)
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
  isExternal: false
  name: Handle(ReaderSubscriptionMessage.EventReaderNotAuthorized)
  nameWithType: ReaderSubscriptionBase.Handle(ReaderSubscriptionMessage.EventReaderNotAuthorized)
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized)
    name: Handle
    nameWithType: ReaderSubscriptionBase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized
    name: ReaderSubscriptionMessage.EventReaderNotAuthorized
    nameWithType: ReaderSubscriptionMessage.EventReaderNotAuthorized
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized)
    name: Handle
    nameWithType: ReaderSubscriptionBase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized
    name: ReaderSubscriptionMessage.EventReaderNotAuthorized
    nameWithType: ReaderSubscriptionMessage.EventReaderNotAuthorized
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting)
  commentId: M:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting)
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
  isExternal: false
  name: Handle(ReaderSubscriptionMessage.EventReaderStarting)
  nameWithType: ReaderSubscriptionBase.Handle(ReaderSubscriptionMessage.EventReaderStarting)
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting)
    name: Handle
    nameWithType: ReaderSubscriptionBase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting
    name: ReaderSubscriptionMessage.EventReaderStarting
    nameWithType: ReaderSubscriptionMessage.EventReaderStarting
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting)
    name: Handle
    nameWithType: ReaderSubscriptionBase.Handle
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting
    name: ReaderSubscriptionMessage.EventReaderStarting
    nameWithType: ReaderSubscriptionMessage.EventReaderStarting
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<EventReorderingReaderSubscription>()
  nameWithType: ProtobufExtensions.Serialize<EventReorderingReaderSubscription>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of EventReorderingReaderSubscription)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription)()
  name.vb: Serialize(Of EventReorderingReaderSubscription)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<EventReorderingReaderSubscription>
    nameWithType: ProtobufExtensions.Serialize<EventReorderingReaderSubscription>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of EventReorderingReaderSubscription)
    nameWithType: ProtobufExtensions.Serialize(Of EventReorderingReaderSubscription)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<EventReorderingReaderSubscription>()
  nameWithType: ProtobufExtensions.SerializeToArray<EventReorderingReaderSubscription>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of EventReorderingReaderSubscription)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription)()
  name.vb: SerializeToArray(Of EventReorderingReaderSubscription)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<EventReorderingReaderSubscription>
    nameWithType: ProtobufExtensions.SerializeToArray<EventReorderingReaderSubscription>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of EventReorderingReaderSubscription)
    nameWithType: ProtobufExtensions.SerializeToArray(Of EventReorderingReaderSubscription)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  isExternal: false
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.#ctor
  isExternal: false
  name: EventReorderingReaderSubscription
  nameWithType: EventReorderingReaderSubscription.EventReorderingReaderSubscription
  fullName: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.EventReorderingReaderSubscription
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  isExternal: false
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.IReaderStrategy
  commentId: T:EventStore.Projections.Core.Services.Processing.IReaderStrategy
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: IReaderStrategy
  nameWithType: IReaderStrategy
  fullName: EventStore.Projections.Core.Services.Processing.IReaderStrategy
- uid: EventStore.Core.Services.TimerService.ITimeProvider
  commentId: T:EventStore.Core.Services.TimerService.ITimeProvider
  parent: EventStore.Core.Services.TimerService
  isExternal: false
  name: ITimeProvider
  nameWithType: ITimeProvider
  fullName: EventStore.Core.Services.TimerService.ITimeProvider
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Services.TimerService
  commentId: N:EventStore.Core.Services.TimerService
  isExternal: false
  name: EventStore.Core.Services.TimerService
  nameWithType: EventStore.Core.Services.TimerService
  fullName: EventStore.Core.Services.TimerService
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle
  isExternal: false
  name: Handle
  nameWithType: EventReorderingReaderSubscription.Handle
  fullName: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed}.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed}.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ReaderSubscriptionMessage.CommittedEventDistributed)
  nameWithType: IHandle<ReaderSubscriptionMessage.CommittedEventDistributed>.Handle(ReaderSubscriptionMessage.CommittedEventDistributed)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed>.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  nameWithType.vb: IHandle(Of ReaderSubscriptionMessage.CommittedEventDistributed).Handle(ReaderSubscriptionMessage.CommittedEventDistributed)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed).Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ReaderSubscriptionMessage.CommittedEventDistributed>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
    name: ReaderSubscriptionMessage.CommittedEventDistributed
    nameWithType: ReaderSubscriptionMessage.CommittedEventDistributed
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ReaderSubscriptionMessage.CommittedEventDistributed).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
    name: ReaderSubscriptionMessage.CommittedEventDistributed
    nameWithType: ReaderSubscriptionMessage.CommittedEventDistributed
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
  commentId: T:EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
  parent: EventStore.Projections.Core.Messages
  isExternal: false
  name: ReaderSubscriptionMessage.CommittedEventDistributed
  nameWithType: ReaderSubscriptionMessage.CommittedEventDistributed
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  isExternal: false
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  isExternal: false
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle}.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle}.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ReaderSubscriptionMessage.EventReaderIdle)
  nameWithType: IHandle<ReaderSubscriptionMessage.EventReaderIdle>.Handle(ReaderSubscriptionMessage.EventReaderIdle)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle>.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle)
  nameWithType.vb: IHandle(Of ReaderSubscriptionMessage.EventReaderIdle).Handle(ReaderSubscriptionMessage.EventReaderIdle)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle).Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ReaderSubscriptionMessage.EventReaderIdle>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle
    name: ReaderSubscriptionMessage.EventReaderIdle
    nameWithType: ReaderSubscriptionMessage.EventReaderIdle
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ReaderSubscriptionMessage.EventReaderIdle).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle
    name: ReaderSubscriptionMessage.EventReaderIdle
    nameWithType: ReaderSubscriptionMessage.EventReaderIdle
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle
  commentId: T:EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle
  parent: EventStore.Projections.Core.Messages
  isExternal: false
  name: ReaderSubscriptionMessage.EventReaderIdle
  nameWithType: ReaderSubscriptionMessage.EventReaderIdle
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle
- uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.EofReached
  commentId: M:EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.EofReached
  parent: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase
  isExternal: false
  name: EofReached()
  nameWithType: ReaderSubscriptionBase.EofReached()
  fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.EofReached()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.EofReached
    name: EofReached
    nameWithType: ReaderSubscriptionBase.EofReached
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.EofReached
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.EofReached
    name: EofReached
    nameWithType: ReaderSubscriptionBase.EofReached
    fullName: EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.EofReached
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.EofReached*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.EofReached
  isExternal: false
  name: EofReached
  nameWithType: EventReorderingReaderSubscription.EofReached
  fullName: EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.EofReached
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof}.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof}.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ReaderSubscriptionMessage.EventReaderPartitionEof)
  nameWithType: IHandle<ReaderSubscriptionMessage.EventReaderPartitionEof>.Handle(ReaderSubscriptionMessage.EventReaderPartitionEof)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof>.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof)
  nameWithType.vb: IHandle(Of ReaderSubscriptionMessage.EventReaderPartitionEof).Handle(ReaderSubscriptionMessage.EventReaderPartitionEof)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof).Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ReaderSubscriptionMessage.EventReaderPartitionEof>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof
    name: ReaderSubscriptionMessage.EventReaderPartitionEof
    nameWithType: ReaderSubscriptionMessage.EventReaderPartitionEof
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ReaderSubscriptionMessage.EventReaderPartitionEof).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof
    name: ReaderSubscriptionMessage.EventReaderPartitionEof
    nameWithType: ReaderSubscriptionMessage.EventReaderPartitionEof
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof
  commentId: T:EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof
  parent: EventStore.Projections.Core.Messages
  isExternal: false
  name: ReaderSubscriptionMessage.EventReaderPartitionEof
  nameWithType: ReaderSubscriptionMessage.EventReaderPartitionEof
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted}.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted}.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  nameWithType: IHandle<ReaderSubscriptionMessage.EventReaderPartitionDeleted>.Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted>.Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  nameWithType.vb: IHandle(Of ReaderSubscriptionMessage.EventReaderPartitionDeleted).Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted).Handle(EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<ReaderSubscriptionMessage.EventReaderPartitionDeleted>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted
    name: ReaderSubscriptionMessage.EventReaderPartitionDeleted
    nameWithType: ReaderSubscriptionMessage.EventReaderPartitionDeleted
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of ReaderSubscriptionMessage.EventReaderPartitionDeleted).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted
    name: ReaderSubscriptionMessage.EventReaderPartitionDeleted
    nameWithType: ReaderSubscriptionMessage.EventReaderPartitionDeleted
    fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted
  commentId: T:EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted
  parent: EventStore.Projections.Core.Messages
  isExternal: false
  name: ReaderSubscriptionMessage.EventReaderPartitionDeleted
  nameWithType: ReaderSubscriptionMessage.EventReaderPartitionDeleted
  fullName: EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted

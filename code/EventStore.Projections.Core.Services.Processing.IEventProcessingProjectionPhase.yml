### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase
  commentId: T:EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase
  id: IEventProcessingProjectionPhase
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.EmitEofResult(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  - EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.FinalizeEventProcessing(EventStore.Projections.Core.Services.Processing.EventProcessedResult,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  - EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.ProcessCommittedEvent(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived,System.String)
  - EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  - EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.TransformCatalogEvent(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  langs:
  - csharp
  - vb
  name: IEventProcessingProjectionPhase
  nameWithType: IEventProcessingProjectionPhase
  fullName: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase
  type: Interface
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: IEventProcessingProjectionPhase
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
    startLine: 27
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public interface IEventProcessingProjectionPhase : IProjectionPhaseStateManager'
    content.vb: >-
      Public Interface IEventProcessingProjectionPhase
          Inherits IProjectionPhaseStateManager
  inheritedMembers:
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.LastProcessedEventPosition
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.TransformCatalogEvent(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  commentId: M:EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.TransformCatalogEvent(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  id: TransformCatalogEvent(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  parent: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase
  langs:
  - csharp
  - vb
  name: TransformCatalogEvent(EventReaderSubscriptionMessage.CommittedEventReceived)
  nameWithType: IEventProcessingProjectionPhase.TransformCatalogEvent(EventReaderSubscriptionMessage.CommittedEventReceived)
  fullName: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.TransformCatalogEvent(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: TransformCatalogEvent
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
    startLine: 29
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: string TransformCatalogEvent(EventReaderSubscriptionMessage.CommittedEventReceived message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
    return:
      type: System.String
    content.vb: Function TransformCatalogEvent(message As EventReaderSubscriptionMessage.CommittedEventReceived) As String
  overload: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.TransformCatalogEvent*
- uid: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.ProcessCommittedEvent(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived,System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.ProcessCommittedEvent(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived,System.String)
  id: ProcessCommittedEvent(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived,System.String)
  parent: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase
  langs:
  - csharp
  - vb
  name: ProcessCommittedEvent(EventReaderSubscriptionMessage.CommittedEventReceived, String)
  nameWithType: IEventProcessingProjectionPhase.ProcessCommittedEvent(EventReaderSubscriptionMessage.CommittedEventReceived, String)
  fullName: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.ProcessCommittedEvent(EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ProcessCommittedEvent
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
    startLine: 30
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: EventProcessedResult ProcessCommittedEvent(EventReaderSubscriptionMessage.CommittedEventReceived message, string partition)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
    - id: partition
      type: System.String
    return:
      type: EventStore.Projections.Core.Services.Processing.EventProcessedResult
    content.vb: Function ProcessCommittedEvent(message As EventReaderSubscriptionMessage.CommittedEventReceived, partition As String) As EventProcessedResult
  overload: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.ProcessCommittedEvent*
- uid: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.FinalizeEventProcessing(EventStore.Projections.Core.Services.Processing.EventProcessedResult,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  commentId: M:EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.FinalizeEventProcessing(EventStore.Projections.Core.Services.Processing.EventProcessedResult,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  id: FinalizeEventProcessing(EventStore.Projections.Core.Services.Processing.EventProcessedResult,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  parent: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase
  langs:
  - csharp
  - vb
  name: FinalizeEventProcessing(EventProcessedResult, CheckpointTag, Single)
  nameWithType: IEventProcessingProjectionPhase.FinalizeEventProcessing(EventProcessedResult, CheckpointTag, Single)
  fullName: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.FinalizeEventProcessing(EventStore.Projections.Core.Services.Processing.EventProcessedResult, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Single)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: FinalizeEventProcessing
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
    startLine: 33
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: void FinalizeEventProcessing(EventProcessedResult result, CheckpointTag eventCheckpointTag, float progress)
    parameters:
    - id: result
      type: EventStore.Projections.Core.Services.Processing.EventProcessedResult
    - id: eventCheckpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: progress
      type: System.Single
    content.vb: Sub FinalizeEventProcessing(result As EventProcessedResult, eventCheckpointTag As CheckpointTag, progress As Single)
  overload: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.FinalizeEventProcessing*
- uid: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  commentId: M:EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  id: RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  parent: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase
  langs:
  - csharp
  - vb
  name: RecordEventOrder(ResolvedEvent, CheckpointTag, Action)
  nameWithType: IEventProcessingProjectionPhase.RecordEventOrder(ResolvedEvent, CheckpointTag, Action)
  fullName: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: RecordEventOrder
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
    startLine: 36
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: void RecordEventOrder(ResolvedEvent resolvedEvent, CheckpointTag orderCheckpointTag, Action completed)
    parameters:
    - id: resolvedEvent
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    - id: orderCheckpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: completed
      type: Action
    content.vb: Sub RecordEventOrder(resolvedEvent As ResolvedEvent, orderCheckpointTag As CheckpointTag, completed As Action)
  overload: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.RecordEventOrder*
- uid: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.EmitEofResult(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.EmitEofResult(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  id: EmitEofResult(System.String,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Guid,System.String)
  parent: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase
  langs:
  - csharp
  - vb
  name: EmitEofResult(String, String, CheckpointTag, Guid, String)
  nameWithType: IEventProcessingProjectionPhase.EmitEofResult(String, String, CheckpointTag, Guid, String)
  fullName: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.EmitEofResult(System.String, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Guid, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: EmitEofResult
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
    startLine: 38
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: void EmitEofResult(string partition, string resultBody, CheckpointTag causedBy, Guid causedByGuid, string correlationId)
    parameters:
    - id: partition
      type: System.String
    - id: resultBody
      type: System.String
    - id: causedBy
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: causedByGuid
      type: Guid
    - id: correlationId
      type: System.String
    content.vb: Sub EmitEofResult(partition As String, resultBody As String, causedBy As CheckpointTag, causedByGuid As Guid, correlationId As String)
  overload: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.EmitEofResult*
- uid: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase
  langs:
  - csharp
  - vb
  name: ProcessPartitionDeleted(String, CheckpointTag)
  nameWithType: IEventProcessingProjectionPhase.ProcessPartitionDeleted(String, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.ProcessPartitionDeleted(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ProcessPartitionDeleted
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IEventProcessingPhase.cs
    startLine: 41
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: EventProcessedResult ProcessPartitionDeleted(string partition, CheckpointTag deletedPosition)
    parameters:
    - id: partition
      type: System.String
    - id: deletedPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: EventStore.Projections.Core.Services.Processing.EventProcessedResult
    content.vb: Function ProcessPartitionDeleted(partition As String, deletedPosition As CheckpointTag) As EventProcessedResult
  overload: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.ProcessPartitionDeleted*
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  isExternal: true
  name: BeginGetPartitionStateAt(String, CheckpointTag, Action<PartitionState>, Boolean)
  nameWithType: IProjectionPhaseStateManager.BeginGetPartitionStateAt(String, CheckpointTag, Action<PartitionState>, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action<EventStore.Projections.Core.Services.Processing.PartitionState>, System.Boolean)
  nameWithType.vb: IProjectionPhaseStateManager.BeginGetPartitionStateAt(String, CheckpointTag, Action(Of PartitionState), Boolean)
  fullName.vb: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action(Of EventStore.Projections.Core.Services.Processing.PartitionState), System.Boolean)
  name.vb: BeginGetPartitionStateAt(String, CheckpointTag, Action(Of PartitionState), Boolean)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
    name: BeginGetPartitionStateAt
    nameWithType: IProjectionPhaseStateManager.BeginGetPartitionStateAt
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState},System.Boolean)
    name: BeginGetPartitionStateAt
    nameWithType: IProjectionPhaseStateManager.BeginGetPartitionStateAt
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.BeginGetPartitionStateAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  name: UnlockAndForgetBefore(CheckpointTag)
  nameWithType: IProjectionPhaseStateManager.UnlockAndForgetBefore(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: UnlockAndForgetBefore
    nameWithType: IProjectionPhaseStateManager.UnlockAndForgetBefore
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: UnlockAndForgetBefore
    nameWithType: IProjectionPhaseStateManager.UnlockAndForgetBefore
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.UnlockAndForgetBefore
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.LastProcessedEventPosition
  commentId: P:EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.LastProcessedEventPosition
  parent: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  name: LastProcessedEventPosition
  nameWithType: IProjectionPhaseStateManager.LastProcessedEventPosition
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.LastProcessedEventPosition
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IEventProcessingProjectionPhase>()
  nameWithType: ProtobufExtensions.Serialize<IEventProcessingProjectionPhase>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IEventProcessingProjectionPhase)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase)()
  name.vb: Serialize(Of IEventProcessingProjectionPhase)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IEventProcessingProjectionPhase>
    nameWithType: ProtobufExtensions.Serialize<IEventProcessingProjectionPhase>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IEventProcessingProjectionPhase)
    nameWithType: ProtobufExtensions.Serialize(Of IEventProcessingProjectionPhase)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IEventProcessingProjectionPhase>()
  nameWithType: ProtobufExtensions.SerializeToArray<IEventProcessingProjectionPhase>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IEventProcessingProjectionPhase)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase)()
  name.vb: SerializeToArray(Of IEventProcessingProjectionPhase)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IEventProcessingProjectionPhase>
    nameWithType: ProtobufExtensions.SerializeToArray<IEventProcessingProjectionPhase>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IEventProcessingProjectionPhase)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IEventProcessingProjectionPhase)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  commentId: T:EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
  parent: EventStore.Projections.Core.Services.Processing
  name: IProjectionPhaseStateManager
  nameWithType: IProjectionPhaseStateManager
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.TransformCatalogEvent*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.TransformCatalogEvent
  name: TransformCatalogEvent
  nameWithType: IEventProcessingProjectionPhase.TransformCatalogEvent
  fullName: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.TransformCatalogEvent
- uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  commentId: T:EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  parent: EventStore.Projections.Core.Messages
  name: EventReaderSubscriptionMessage.CommittedEventReceived
  nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived
  fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.ProcessCommittedEvent*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.ProcessCommittedEvent
  name: ProcessCommittedEvent
  nameWithType: IEventProcessingProjectionPhase.ProcessCommittedEvent
  fullName: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.ProcessCommittedEvent
- uid: EventStore.Projections.Core.Services.Processing.EventProcessedResult
  commentId: T:EventStore.Projections.Core.Services.Processing.EventProcessedResult
  parent: EventStore.Projections.Core.Services.Processing
  name: EventProcessedResult
  nameWithType: EventProcessedResult
  fullName: EventStore.Projections.Core.Services.Processing.EventProcessedResult
- uid: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.FinalizeEventProcessing*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.FinalizeEventProcessing
  name: FinalizeEventProcessing
  nameWithType: IEventProcessingProjectionPhase.FinalizeEventProcessing
  fullName: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.FinalizeEventProcessing
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.RecordEventOrder*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.RecordEventOrder
  name: RecordEventOrder
  nameWithType: IEventProcessingProjectionPhase.RecordEventOrder
  fullName: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.RecordEventOrder
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  commentId: T:EventStore.Projections.Core.Services.Processing.ResolvedEvent
  parent: EventStore.Projections.Core.Services.Processing
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
- uid: Action
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: Action
- uid: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.EmitEofResult*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.EmitEofResult
  name: EmitEofResult
  nameWithType: IEventProcessingProjectionPhase.EmitEofResult
  fullName: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.EmitEofResult
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.ProcessPartitionDeleted*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.ProcessPartitionDeleted
  name: ProcessPartitionDeleted
  nameWithType: IEventProcessingProjectionPhase.ProcessPartitionDeleted
  fullName: EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.ProcessPartitionDeleted

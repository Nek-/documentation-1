### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  commentId: T:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  id: IProjectionProcessingPhase
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.CheckpointManager
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EmittedStreamsTracker
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  langs:
  - csharp
  - vb
  name: IProjectionProcessingPhase
  nameWithType: IProjectionProcessingPhase
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  type: Interface
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: IProjectionProcessingPhase
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
    startLine: 16
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public interface IProjectionProcessingPhase : IDisposable, IHandle<CoreProjectionManagementMessage.GetState>, IHandle<CoreProjectionManagementMessage.GetResult>, IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>'
    content.vb: >-
      Public Interface IProjectionProcessingPhase
          Inherits IDisposable, IHandle(Of CoreProjectionManagementMessage.GetState), IHandle(Of CoreProjectionManagementMessage.GetResult), IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  inheritedMembers:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  - EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: AdjustTag(CheckpointTag)
  nameWithType: IProjectionProcessingPhase.AdjustTag(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: AdjustTag
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
    startLine: 21
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: CheckpointTag AdjustTag(CheckpointTag tag)
    parameters:
    - id: tag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Function AdjustTag(tag As CheckpointTag) As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag*
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: InitializeFromCheckpoint(CheckpointTag)
  nameWithType: IProjectionProcessingPhase.InitializeFromCheckpoint(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: InitializeFromCheckpoint
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
    startLine: 23
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: void InitializeFromCheckpoint(CheckpointTag checkpointTag)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Sub InitializeFromCheckpoint(checkpointTag As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint*
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  id: Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: Subscribe(CheckpointTag, Boolean)
  nameWithType: IProjectionProcessingPhase.Subscribe(CheckpointTag, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Subscribe
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
    startLine: 25
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: void Subscribe(CheckpointTag from, bool fromCheckpoint)
    parameters:
    - id: from
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: fromCheckpoint
      type: System.Boolean
    content.vb: Sub Subscribe(from As CheckpointTag, fromCheckpoint As Boolean)
  overload: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe*
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  id: AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: AssignSlaves(SlaveProjectionCommunicationChannels)
  nameWithType: IProjectionProcessingPhase.AssignSlaves(SlaveProjectionCommunicationChannels)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: AssignSlaves
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
    startLine: 26
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: void AssignSlaves(SlaveProjectionCommunicationChannels slaveProjections)
    parameters:
    - id: slaveProjections
      type: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
    content.vb: Sub AssignSlaves(slaveProjections As SlaveProjectionCommunicationChannels)
  overload: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves*
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
  id: ProcessEvent
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: ProcessEvent()
  nameWithType: IProjectionProcessingPhase.ProcessEvent()
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ProcessEvent
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
    startLine: 28
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: void ProcessEvent()
    content.vb: Sub ProcessEvent
  overload: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent*
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
  id: EnsureUnsubscribed
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: EnsureUnsubscribed()
  nameWithType: IProjectionProcessingPhase.EnsureUnsubscribed()
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EnsureUnsubscribed
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
    startLine: 30
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: void EnsureUnsubscribed()
    content.vb: Sub EnsureUnsubscribed
  overload: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed*
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  id: SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: SetProjectionState(PhaseState)
  nameWithType: IProjectionProcessingPhase.SetProjectionState(PhaseState)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: SetProjectionState
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
    startLine: 32
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: void SetProjectionState(PhaseState state)
    parameters:
    - id: state
      type: EventStore.Projections.Core.Services.Processing.PhaseState
    content.vb: Sub SetProjectionState(state As PhaseState)
  overload: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState*
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  id: GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: GetStatistics(ProjectionStatistics)
  nameWithType: IProjectionProcessingPhase.GetStatistics(ProjectionStatistics)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: GetStatistics
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
    startLine: 34
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: void GetStatistics(ProjectionStatistics info)
    parameters:
    - id: info
      type: EventStore.Projections.Core.Services.ProjectionStatistics
    content.vb: Sub GetStatistics(info As ProjectionStatistics)
  overload: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics*
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
  id: MakeZeroCheckpointTag
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: MakeZeroCheckpointTag()
  nameWithType: IProjectionProcessingPhase.MakeZeroCheckpointTag()
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: MakeZeroCheckpointTag
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
    startLine: 36
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: CheckpointTag MakeZeroCheckpointTag()
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Function MakeZeroCheckpointTag As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag*
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.CheckpointManager
  commentId: P:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.CheckpointManager
  id: CheckpointManager
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: CheckpointManager
  nameWithType: IProjectionProcessingPhase.CheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.CheckpointManager
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CheckpointManager
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
    startLine: 37
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: ICoreProjectionCheckpointManager CheckpointManager { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
    content.vb: ReadOnly Property CheckpointManager As ICoreProjectionCheckpointManager
  overload: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.CheckpointManager*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EmittedStreamsTracker
  commentId: P:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EmittedStreamsTracker
  id: EmittedStreamsTracker
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  langs:
  - csharp
  - vb
  name: EmittedStreamsTracker
  nameWithType: IProjectionProcessingPhase.EmittedStreamsTracker
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EmittedStreamsTracker
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EmittedStreamsTracker
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/IProjectionProcessingPhase.cs
    startLine: 38
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: IEmittedStreamsTracker EmittedStreamsTracker { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
    content.vb: ReadOnly Property EmittedStreamsTracker As IEmittedStreamsTracker
  overload: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EmittedStreamsTracker*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionManagementMessage.GetState)
  nameWithType: IHandle<CoreProjectionManagementMessage.GetState>.Handle(CoreProjectionManagementMessage.GetState)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState>.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetState).Handle(CoreProjectionManagementMessage.GetState)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState).Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionManagementMessage.GetState>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionManagementMessage.GetState).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionManagementMessage.GetResult)
  nameWithType: IHandle<CoreProjectionManagementMessage.GetResult>.Handle(CoreProjectionManagementMessage.GetResult)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult>.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetResult).Handle(CoreProjectionManagementMessage.GetResult)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult).Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionManagementMessage.GetResult>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionManagementMessage.GetResult).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  commentId: M:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  parent: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  nameWithType: IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded).Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded).Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>.Handle
    fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded).Handle
    fullName: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IProjectionProcessingPhase>()
  nameWithType: ProtobufExtensions.Serialize<IProjectionProcessingPhase>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IProjectionProcessingPhase)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase)()
  name.vb: Serialize(Of IProjectionProcessingPhase)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IProjectionProcessingPhase>
    nameWithType: ProtobufExtensions.Serialize<IProjectionProcessingPhase>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IProjectionProcessingPhase)
    nameWithType: ProtobufExtensions.Serialize(Of IProjectionProcessingPhase)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IProjectionProcessingPhase>()
  nameWithType: ProtobufExtensions.SerializeToArray<IProjectionProcessingPhase>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IProjectionProcessingPhase)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase)()
  name.vb: SerializeToArray(Of IProjectionProcessingPhase)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IProjectionProcessingPhase>
    nameWithType: ProtobufExtensions.SerializeToArray<IProjectionProcessingPhase>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IProjectionProcessingPhase)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IProjectionProcessingPhase)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  isExternal: false
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.GetState>
  nameWithType: IHandle<CoreProjectionManagementMessage.GetState>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetState)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  name.vb: IHandle(Of CoreProjectionManagementMessage.GetState)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.GetResult>
  nameWithType: IHandle<CoreProjectionManagementMessage.GetResult>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetResult)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  name.vb: IHandle(Of CoreProjectionManagementMessage.GetResult)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}
  commentId: T:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>
  nameWithType: IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  name.vb: IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  isExternal: false
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag
  isExternal: false
  name: AdjustTag
  nameWithType: IProjectionProcessingPhase.AdjustTag
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint
  isExternal: false
  name: InitializeFromCheckpoint
  nameWithType: IProjectionProcessingPhase.InitializeFromCheckpoint
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe
  isExternal: false
  name: Subscribe
  nameWithType: IProjectionProcessingPhase.Subscribe
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves
  isExternal: false
  name: AssignSlaves
  nameWithType: IProjectionProcessingPhase.AssignSlaves
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  commentId: T:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  parent: EventStore.Projections.Core.Messages
  isExternal: false
  name: SlaveProjectionCommunicationChannels
  nameWithType: SlaveProjectionCommunicationChannels
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  isExternal: false
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
  isExternal: false
  name: ProcessEvent
  nameWithType: IProjectionProcessingPhase.ProcessEvent
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
  isExternal: false
  name: EnsureUnsubscribed
  nameWithType: IProjectionProcessingPhase.EnsureUnsubscribed
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState
  isExternal: false
  name: SetProjectionState
  nameWithType: IProjectionProcessingPhase.SetProjectionState
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState
- uid: EventStore.Projections.Core.Services.Processing.PhaseState
  commentId: T:EventStore.Projections.Core.Services.Processing.PhaseState
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: PhaseState
  nameWithType: PhaseState
  fullName: EventStore.Projections.Core.Services.Processing.PhaseState
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics
  isExternal: false
  name: GetStatistics
  nameWithType: IProjectionProcessingPhase.GetStatistics
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics
- uid: EventStore.Projections.Core.Services.ProjectionStatistics
  commentId: T:EventStore.Projections.Core.Services.ProjectionStatistics
  parent: EventStore.Projections.Core.Services
  isExternal: false
  name: ProjectionStatistics
  nameWithType: ProjectionStatistics
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  isExternal: false
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
  isExternal: false
  name: MakeZeroCheckpointTag
  nameWithType: IProjectionProcessingPhase.MakeZeroCheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.CheckpointManager*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.CheckpointManager
  isExternal: false
  name: CheckpointManager
  nameWithType: IProjectionProcessingPhase.CheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.CheckpointManager
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  commentId: T:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: ICoreProjectionCheckpointManager
  nameWithType: ICoreProjectionCheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EmittedStreamsTracker*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EmittedStreamsTracker
  isExternal: false
  name: EmittedStreamsTracker
  nameWithType: IProjectionProcessingPhase.EmittedStreamsTracker
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EmittedStreamsTracker
- uid: EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
  commentId: T:EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: IEmittedStreamsTracker
  nameWithType: IEmittedStreamsTracker
  fullName: EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker

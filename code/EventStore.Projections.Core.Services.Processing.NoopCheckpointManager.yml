### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  commentId: T:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  id: NoopCheckpointManager
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.#ctor(EventStore.Core.Bus.IPublisher,Guid,EventStore.Projections.Core.Services.ProjectionConfig,System.String,EventStore.Projections.Core.Services.Processing.PositionTagger,EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder)
  - EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
  - EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  - EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  - EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  - EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Initialize
  - EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.LastProcessedEventPosition
  - EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.PartitionCompleted(System.String)
  - EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Progress(System.Single)
  - EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  - EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  - EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Stopped
  - EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Stopping
  langs:
  - csharp
  - vb
  name: NoopCheckpointManager
  nameWithType: NoopCheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: NoopCheckpointManager
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
    startLine: 5
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public sealed class NoopCheckpointManager : object, ICoreProjectionCheckpointManager'
    content.vb: >-
      Public NotInheritable Class NoopCheckpointManager

          Inherits Object

          Implements ICoreProjectionCheckpointManager
  inheritance:
  - System.Object
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.#ctor(EventStore.Core.Bus.IPublisher,Guid,EventStore.Projections.Core.Services.ProjectionConfig,System.String,EventStore.Projections.Core.Services.Processing.PositionTagger,EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder)
  commentId: M:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.#ctor(EventStore.Core.Bus.IPublisher,Guid,EventStore.Projections.Core.Services.ProjectionConfig,System.String,EventStore.Projections.Core.Services.Processing.PositionTagger,EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder)
  id: '#ctor(EventStore.Core.Bus.IPublisher,Guid,EventStore.Projections.Core.Services.ProjectionConfig,System.String,EventStore.Projections.Core.Services.Processing.PositionTagger,EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder)'
  parent: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  langs:
  - csharp
  - vb
  name: NoopCheckpointManager(IPublisher, Guid, ProjectionConfig, String, PositionTagger, ProjectionNamesBuilder)
  nameWithType: NoopCheckpointManager.NoopCheckpointManager(IPublisher, Guid, ProjectionConfig, String, PositionTagger, ProjectionNamesBuilder)
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.NoopCheckpointManager(EventStore.Core.Bus.IPublisher, Guid, EventStore.Projections.Core.Services.ProjectionConfig, System.String, EventStore.Projections.Core.Services.Processing.PositionTagger, EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
    startLine: 20
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public NoopCheckpointManager(IPublisher publisher, Guid projectionCorrelationId, ProjectionConfig projectionConfig, string name, PositionTagger positionTagger, ProjectionNamesBuilder namingBuilder)
    parameters:
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    - id: projectionCorrelationId
      type: Guid
    - id: projectionConfig
      type: EventStore.Projections.Core.Services.ProjectionConfig
    - id: name
      type: System.String
    - id: positionTagger
      type: EventStore.Projections.Core.Services.Processing.PositionTagger
    - id: namingBuilder
      type: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder
    content.vb: Public Sub New(publisher As IPublisher, projectionCorrelationId As Guid, projectionConfig As ProjectionConfig, name As String, positionTagger As PositionTagger, namingBuilder As ProjectionNamesBuilder)
  overload: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  commentId: M:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  id: RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  parent: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  langs:
  - csharp
  - vb
  name: RecordEventOrder(ResolvedEvent, CheckpointTag, Action)
  nameWithType: NoopCheckpointManager.RecordEventOrder(ResolvedEvent, CheckpointTag, Action)
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RecordEventOrder
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
    startLine: 38
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void RecordEventOrder(ResolvedEvent resolvedEvent, CheckpointTag orderCheckpointTag, Action committed)
    parameters:
    - id: resolvedEvent
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    - id: orderCheckpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: committed
      type: Action
    content.vb: Public Sub RecordEventOrder(resolvedEvent As ResolvedEvent, orderCheckpointTag As CheckpointTag, committed As Action)
  overload: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.RecordEventOrder*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
  commentId: M:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
  id: BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
  parent: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  langs:
  - csharp
  - vb
  name: BeginLoadPartitionStateAt(String, CheckpointTag, Action<PartitionState>)
  nameWithType: NoopCheckpointManager.BeginLoadPartitionStateAt(String, CheckpointTag, Action<PartitionState>)
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.BeginLoadPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action<EventStore.Projections.Core.Services.Processing.PartitionState>)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: BeginLoadPartitionStateAt
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
    startLine: 43
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void BeginLoadPartitionStateAt(string statePartition, CheckpointTag requestedStateCheckpointTag, Action<PartitionState> loadCompleted)
    parameters:
    - id: statePartition
      type: System.String
    - id: requestedStateCheckpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: loadCompleted
      type: Action{EventStore.Projections.Core.Services.Processing.PartitionState}
    content.vb: Public Sub BeginLoadPartitionStateAt(statePartition As String, requestedStateCheckpointTag As CheckpointTag, loadCompleted As Action(Of PartitionState))
  overload: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.BeginLoadPartitionStateAt*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
  nameWithType.vb: NoopCheckpointManager.BeginLoadPartitionStateAt(String, CheckpointTag, Action(Of PartitionState))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.BeginLoadPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action(Of EventStore.Projections.Core.Services.Processing.PartitionState))
  name.vb: BeginLoadPartitionStateAt(String, CheckpointTag, Action(Of PartitionState))
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Initialize
  commentId: M:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Initialize
  id: Initialize
  parent: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: NoopCheckpointManager.Initialize()
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Initialize()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Initialize
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
    startLine: 49
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Initialize()
    content.vb: Public Sub Initialize
  overload: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Initialize*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Initialize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: Start(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  langs:
  - csharp
  - vb
  name: Start(CheckpointTag)
  nameWithType: NoopCheckpointManager.Start(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Start
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
    startLine: 61
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Start(CheckpointTag checkpointTag)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Sub Start(checkpointTag As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Start*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Stopping
  commentId: M:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Stopping
  id: Stopping
  parent: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  langs:
  - csharp
  - vb
  name: Stopping()
  nameWithType: NoopCheckpointManager.Stopping()
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Stopping()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Stopping
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
    startLine: 71
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Stopping()
    content.vb: Public Sub Stopping
  overload: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Stopping*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopping
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Stopped
  commentId: M:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Stopped
  id: Stopped
  parent: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  langs:
  - csharp
  - vb
  name: Stopped()
  nameWithType: NoopCheckpointManager.Stopped()
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Stopped()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Stopped
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
    startLine: 82
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Stopped()
    content.vb: Public Sub Stopped
  overload: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Stopped*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopped
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  commentId: M:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  id: GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  parent: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  langs:
  - csharp
  - vb
  name: GetStatistics(ProjectionStatistics)
  nameWithType: NoopCheckpointManager.GetStatistics(ProjectionStatistics)
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetStatistics
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
    startLine: 89
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void GetStatistics(ProjectionStatistics info)
    parameters:
    - id: info
      type: EventStore.Projections.Core.Services.ProjectionStatistics
    content.vb: Public Sub GetStatistics(info As ProjectionStatistics)
  overload: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.GetStatistics*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  commentId: M:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  id: StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  parent: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  langs:
  - csharp
  - vb
  name: StateUpdated(String, PartitionState, PartitionState)
  nameWithType: NoopCheckpointManager.StateUpdated(String, PartitionState, PartitionState)
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.StateUpdated(System.String, EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.PartitionState)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: StateUpdated
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
    startLine: 104
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void StateUpdated(string partition, PartitionState oldState, PartitionState newState)
    parameters:
    - id: partition
      type: System.String
    - id: oldState
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    - id: newState
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    content.vb: Public Sub StateUpdated(partition As String, oldState As PartitionState, newState As PartitionState)
  overload: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.StateUpdated*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.PartitionCompleted(System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.PartitionCompleted(System.String)
  id: PartitionCompleted(System.String)
  parent: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  langs:
  - csharp
  - vb
  name: PartitionCompleted(String)
  nameWithType: NoopCheckpointManager.PartitionCompleted(String)
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.PartitionCompleted(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PartitionCompleted
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
    startLine: 116
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void PartitionCompleted(string partition)
    parameters:
    - id: partition
      type: System.String
    content.vb: Public Sub PartitionCompleted(partition As String)
  overload: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.PartitionCompleted*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.PartitionCompleted(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  commentId: M:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  id: EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  parent: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  langs:
  - csharp
  - vb
  name: EventProcessed(CheckpointTag, Single)
  nameWithType: NoopCheckpointManager.EventProcessed(CheckpointTag, Single)
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Single)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EventProcessed
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
    startLine: 120
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void EventProcessed(CheckpointTag checkpointTag, float progress)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: progress
      type: System.Single
    content.vb: Public Sub EventProcessed(checkpointTag As CheckpointTag, progress As Single)
  overload: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.EventProcessed*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  commentId: M:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  id: CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  parent: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  langs:
  - csharp
  - vb
  name: CheckpointSuggested(CheckpointTag, Single)
  nameWithType: NoopCheckpointManager.CheckpointSuggested(CheckpointTag, Single)
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Single)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CheckpointSuggested
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
    startLine: 133
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public bool CheckpointSuggested(CheckpointTag checkpointTag, float progress)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: progress
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function CheckpointSuggested(checkpointTag As CheckpointTag, progress As Single) As Boolean
  overload: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.CheckpointSuggested*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Progress(System.Single)
  commentId: M:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Progress(System.Single)
  id: Progress(System.Single)
  parent: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  langs:
  - csharp
  - vb
  name: Progress(Single)
  nameWithType: NoopCheckpointManager.Progress(Single)
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Progress(System.Single)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Progress
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
    startLine: 138
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Progress(float progress)
    parameters:
    - id: progress
      type: System.Single
    content.vb: Public Sub Progress(progress As Single)
  overload: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Progress*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Progress(System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.LastProcessedEventPosition
  commentId: P:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.LastProcessedEventPosition
  id: LastProcessedEventPosition
  parent: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  langs:
  - csharp
  - vb
  name: LastProcessedEventPosition
  nameWithType: NoopCheckpointManager.LastProcessedEventPosition
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.LastProcessedEventPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: LastProcessedEventPosition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
    startLine: 146
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public CheckpointTag LastProcessedEventPosition { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public ReadOnly Property LastProcessedEventPosition As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.LastProcessedEventPosition*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.LastProcessedEventPosition
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager
  langs:
  - csharp
  - vb
  name: BeginLoadPrerecordedEvents(CheckpointTag)
  nameWithType: NoopCheckpointManager.BeginLoadPrerecordedEvents(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: BeginLoadPrerecordedEvents
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/NoopCheckpointManager.cs
    startLine: 164
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void BeginLoadPrerecordedEvents(CheckpointTag checkpointTag)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Sub BeginLoadPrerecordedEvents(checkpointTag As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.BeginLoadPrerecordedEvents*
  implements:
  - EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  commentId: T:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: ICoreProjectionCheckpointManager
  nameWithType: ICoreProjectionCheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<NoopCheckpointManager>()
  nameWithType: ProtobufExtensions.Serialize<NoopCheckpointManager>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.NoopCheckpointManager>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of NoopCheckpointManager)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.NoopCheckpointManager)()
  name.vb: Serialize(Of NoopCheckpointManager)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<NoopCheckpointManager>
    nameWithType: ProtobufExtensions.Serialize<NoopCheckpointManager>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.NoopCheckpointManager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of NoopCheckpointManager)
    nameWithType: ProtobufExtensions.Serialize(Of NoopCheckpointManager)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.NoopCheckpointManager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<NoopCheckpointManager>()
  nameWithType: ProtobufExtensions.SerializeToArray<NoopCheckpointManager>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.NoopCheckpointManager>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of NoopCheckpointManager)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.NoopCheckpointManager)()
  name.vb: SerializeToArray(Of NoopCheckpointManager)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<NoopCheckpointManager>
    nameWithType: ProtobufExtensions.SerializeToArray<NoopCheckpointManager>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.NoopCheckpointManager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of NoopCheckpointManager)
    nameWithType: ProtobufExtensions.SerializeToArray(Of NoopCheckpointManager)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.NoopCheckpointManager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.#ctor
  isExternal: false
  name: NoopCheckpointManager
  nameWithType: NoopCheckpointManager.NoopCheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.NoopCheckpointManager
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  isExternal: false
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Projections.Core.Services.ProjectionConfig
  commentId: T:EventStore.Projections.Core.Services.ProjectionConfig
  parent: EventStore.Projections.Core.Services
  isExternal: false
  name: ProjectionConfig
  nameWithType: ProjectionConfig
  fullName: EventStore.Projections.Core.Services.ProjectionConfig
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.PositionTagger
  commentId: T:EventStore.Projections.Core.Services.Processing.PositionTagger
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: PositionTagger
  nameWithType: PositionTagger
  fullName: EventStore.Projections.Core.Services.Processing.PositionTagger
- uid: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: ProjectionNamesBuilder
  nameWithType: ProjectionNamesBuilder
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  isExternal: false
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.RecordEventOrder*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.RecordEventOrder
  isExternal: false
  name: RecordEventOrder
  nameWithType: NoopCheckpointManager.RecordEventOrder
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.RecordEventOrder
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: true
  name: RecordEventOrder(ResolvedEvent, CheckpointTag, Action)
  nameWithType: ICoreProjectionCheckpointManager.RecordEventOrder(ResolvedEvent, CheckpointTag, Action)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
    name: RecordEventOrder
    nameWithType: ICoreProjectionCheckpointManager.RecordEventOrder
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.RecordEventOrder
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.RecordEventOrder(EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action)
    name: RecordEventOrder
    nameWithType: ICoreProjectionCheckpointManager.RecordEventOrder
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.RecordEventOrder
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  commentId: T:EventStore.Projections.Core.Services.Processing.ResolvedEvent
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: Action
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: Action
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.BeginLoadPartitionStateAt*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.BeginLoadPartitionStateAt
  isExternal: false
  name: BeginLoadPartitionStateAt
  nameWithType: NoopCheckpointManager.BeginLoadPartitionStateAt
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.BeginLoadPartitionStateAt
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: true
  name: BeginLoadPartitionStateAt(String, CheckpointTag, Action<PartitionState>)
  nameWithType: ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(String, CheckpointTag, Action<PartitionState>)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action<EventStore.Projections.Core.Services.Processing.PartitionState>)
  nameWithType.vb: ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(String, CheckpointTag, Action(Of PartitionState))
  fullName.vb: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, Action(Of EventStore.Projections.Core.Services.Processing.PartitionState))
  name.vb: BeginLoadPartitionStateAt(String, CheckpointTag, Action(Of PartitionState))
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
    name: BeginLoadPartitionStateAt
    nameWithType: ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,Action{EventStore.Projections.Core.Services.Processing.PartitionState})
    name: BeginLoadPartitionStateAt
    nameWithType: ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPartitionStateAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Action{EventStore.Projections.Core.Services.Processing.PartitionState}
  commentId: '!:Action{EventStore.Projections.Core.Services.Processing.PartitionState}'
  definition: Action`1
  name: Action<PartitionState>
  nameWithType: Action<PartitionState>
  fullName: Action<EventStore.Projections.Core.Services.Processing.PartitionState>
  nameWithType.vb: Action(Of PartitionState)
  fullName.vb: Action(Of EventStore.Projections.Core.Services.Processing.PartitionState)
  name.vb: Action(Of PartitionState)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Initialize*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Initialize
  isExternal: false
  name: Initialize
  nameWithType: NoopCheckpointManager.Initialize
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Initialize
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Initialize
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Initialize
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: false
  name: Initialize()
  nameWithType: ICoreProjectionCheckpointManager.Initialize()
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Initialize()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Initialize
    name: Initialize
    nameWithType: ICoreProjectionCheckpointManager.Initialize
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Initialize
    name: Initialize
    nameWithType: ICoreProjectionCheckpointManager.Initialize
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Start*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Start
  isExternal: false
  name: Start
  nameWithType: NoopCheckpointManager.Start
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Start
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: false
  name: Start(CheckpointTag)
  nameWithType: ICoreProjectionCheckpointManager.Start(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: Start
    nameWithType: ICoreProjectionCheckpointManager.Start
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Start(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: Start
    nameWithType: ICoreProjectionCheckpointManager.Start
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Stopping*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Stopping
  isExternal: false
  name: Stopping
  nameWithType: NoopCheckpointManager.Stopping
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Stopping
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopping
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopping
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: false
  name: Stopping()
  nameWithType: ICoreProjectionCheckpointManager.Stopping()
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopping()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopping
    name: Stopping
    nameWithType: ICoreProjectionCheckpointManager.Stopping
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopping
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopping
    name: Stopping
    nameWithType: ICoreProjectionCheckpointManager.Stopping
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopping
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Stopped*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Stopped
  isExternal: false
  name: Stopped
  nameWithType: NoopCheckpointManager.Stopped
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Stopped
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopped
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopped
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: false
  name: Stopped()
  nameWithType: ICoreProjectionCheckpointManager.Stopped()
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopped()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopped
    name: Stopped
    nameWithType: ICoreProjectionCheckpointManager.Stopped
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopped
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopped
    name: Stopped
    nameWithType: ICoreProjectionCheckpointManager.Stopped
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Stopped
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.GetStatistics*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.GetStatistics
  isExternal: false
  name: GetStatistics
  nameWithType: NoopCheckpointManager.GetStatistics
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.GetStatistics
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: false
  name: GetStatistics(ProjectionStatistics)
  nameWithType: ICoreProjectionCheckpointManager.GetStatistics(ProjectionStatistics)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
    name: GetStatistics
    nameWithType: ICoreProjectionCheckpointManager.GetStatistics
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.GetStatistics
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.ProjectionStatistics
    name: ProjectionStatistics
    nameWithType: ProjectionStatistics
    fullName: EventStore.Projections.Core.Services.ProjectionStatistics
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
    name: GetStatistics
    nameWithType: ICoreProjectionCheckpointManager.GetStatistics
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.GetStatistics
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.ProjectionStatistics
    name: ProjectionStatistics
    nameWithType: ProjectionStatistics
    fullName: EventStore.Projections.Core.Services.ProjectionStatistics
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.ProjectionStatistics
  commentId: T:EventStore.Projections.Core.Services.ProjectionStatistics
  parent: EventStore.Projections.Core.Services
  isExternal: false
  name: ProjectionStatistics
  nameWithType: ProjectionStatistics
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.StateUpdated*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.StateUpdated
  isExternal: false
  name: StateUpdated
  nameWithType: NoopCheckpointManager.StateUpdated
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.StateUpdated
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: true
  name: StateUpdated(String, PartitionState, PartitionState)
  nameWithType: ICoreProjectionCheckpointManager.StateUpdated(String, PartitionState, PartitionState)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.StateUpdated(System.String, EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.PartitionState)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
    name: StateUpdated
    nameWithType: ICoreProjectionCheckpointManager.StateUpdated
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.StateUpdated
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.PartitionState)
    name: StateUpdated
    nameWithType: ICoreProjectionCheckpointManager.StateUpdated
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.StateUpdated
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.PartitionState
    name: PartitionState
    nameWithType: PartitionState
    fullName: EventStore.Projections.Core.Services.Processing.PartitionState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.PartitionState
  commentId: T:EventStore.Projections.Core.Services.Processing.PartitionState
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: PartitionState
  nameWithType: PartitionState
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.PartitionCompleted*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.PartitionCompleted
  isExternal: false
  name: PartitionCompleted
  nameWithType: NoopCheckpointManager.PartitionCompleted
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.PartitionCompleted
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.PartitionCompleted(System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.PartitionCompleted(System.String)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: true
  name: PartitionCompleted(String)
  nameWithType: ICoreProjectionCheckpointManager.PartitionCompleted(String)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.PartitionCompleted(System.String)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.PartitionCompleted(System.String)
    name: PartitionCompleted
    nameWithType: ICoreProjectionCheckpointManager.PartitionCompleted
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.PartitionCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.PartitionCompleted(System.String)
    name: PartitionCompleted
    nameWithType: ICoreProjectionCheckpointManager.PartitionCompleted
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.PartitionCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.EventProcessed*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.EventProcessed
  isExternal: false
  name: EventProcessed
  nameWithType: NoopCheckpointManager.EventProcessed
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.EventProcessed
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: true
  name: EventProcessed(CheckpointTag, Single)
  nameWithType: ICoreProjectionCheckpointManager.EventProcessed(CheckpointTag, Single)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Single)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
    name: EventProcessed
    nameWithType: ICoreProjectionCheckpointManager.EventProcessed
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.EventProcessed
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.EventProcessed(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
    name: EventProcessed
    nameWithType: ICoreProjectionCheckpointManager.EventProcessed
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.EventProcessed
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.CheckpointSuggested*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.CheckpointSuggested
  isExternal: false
  name: CheckpointSuggested
  nameWithType: NoopCheckpointManager.CheckpointSuggested
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.CheckpointSuggested
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: true
  name: CheckpointSuggested(CheckpointTag, Single)
  nameWithType: ICoreProjectionCheckpointManager.CheckpointSuggested(CheckpointTag, Single)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Single)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
    name: CheckpointSuggested
    nameWithType: ICoreProjectionCheckpointManager.CheckpointSuggested
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.CheckpointSuggested
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.CheckpointSuggested(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Single)
    name: CheckpointSuggested
    nameWithType: ICoreProjectionCheckpointManager.CheckpointSuggested
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.CheckpointSuggested
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Progress*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Progress
  isExternal: false
  name: Progress
  nameWithType: NoopCheckpointManager.Progress
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.Progress
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Progress(System.Single)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Progress(System.Single)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: true
  name: Progress(Single)
  nameWithType: ICoreProjectionCheckpointManager.Progress(Single)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Progress(System.Single)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Progress(System.Single)
    name: Progress
    nameWithType: ICoreProjectionCheckpointManager.Progress
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Progress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Progress(System.Single)
    name: Progress
    nameWithType: ICoreProjectionCheckpointManager.Progress
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.Progress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.LastProcessedEventPosition*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.LastProcessedEventPosition
  isExternal: false
  name: LastProcessedEventPosition
  nameWithType: NoopCheckpointManager.LastProcessedEventPosition
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.LastProcessedEventPosition
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.LastProcessedEventPosition
  commentId: P:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.LastProcessedEventPosition
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: false
  name: LastProcessedEventPosition
  nameWithType: ICoreProjectionCheckpointManager.LastProcessedEventPosition
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.LastProcessedEventPosition
- uid: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.BeginLoadPrerecordedEvents*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.BeginLoadPrerecordedEvents
  isExternal: false
  name: BeginLoadPrerecordedEvents
  nameWithType: NoopCheckpointManager.BeginLoadPrerecordedEvents
  fullName: EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.BeginLoadPrerecordedEvents
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  isExternal: false
  name: BeginLoadPrerecordedEvents(CheckpointTag)
  nameWithType: ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: BeginLoadPrerecordedEvents
    nameWithType: ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: BeginLoadPrerecordedEvents
    nameWithType: ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents
    fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.BeginLoadPrerecordedEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )

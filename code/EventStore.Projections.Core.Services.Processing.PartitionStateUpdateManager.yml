### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager
  commentId: T:EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager
  id: PartitionStateUpdateManager
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.#ctor(EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder)
  - EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.EmitEvents(EventStore.Projections.Core.Services.Processing.IEventWriter)
  - EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.PartitionCompleted(System.String)
  - EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  langs:
  - csharp
  - vb
  name: PartitionStateUpdateManager
  nameWithType: PartitionStateUpdateManager
  fullName: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionStateUpdateManager.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: PartitionStateUpdateManager
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionStateUpdateManager.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public class PartitionStateUpdateManager : object'
    content.vb: >-
      Public Class PartitionStateUpdateManager
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.#ctor(EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder)
  commentId: M:EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.#ctor(EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder)
  id: '#ctor(EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder)'
  parent: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager
  langs:
  - csharp
  - vb
  name: PartitionStateUpdateManager(ProjectionNamesBuilder)
  nameWithType: PartitionStateUpdateManager.PartitionStateUpdateManager(ProjectionNamesBuilder)
  fullName: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.PartitionStateUpdateManager(EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionStateUpdateManager.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionStateUpdateManager.cs
    startLine: 20
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public PartitionStateUpdateManager(ProjectionNamesBuilder namingBuilder)
    parameters:
    - id: namingBuilder
      type: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder
    content.vb: Public Sub New(namingBuilder As ProjectionNamesBuilder)
  overload: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: StateUpdated(System.String,EventStore.Projections.Core.Services.Processing.PartitionState,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager
  langs:
  - csharp
  - vb
  name: StateUpdated(String, PartitionState, CheckpointTag)
  nameWithType: PartitionStateUpdateManager.StateUpdated(String, PartitionState, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.StateUpdated(System.String, EventStore.Projections.Core.Services.Processing.PartitionState, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionStateUpdateManager.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: StateUpdated
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionStateUpdateManager.cs
    startLine: 26
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void StateUpdated(string partition, PartitionState state, CheckpointTag basedOn)
    parameters:
    - id: partition
      type: System.String
    - id: state
      type: EventStore.Projections.Core.Services.Processing.PartitionState
    - id: basedOn
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Sub StateUpdated(partition As String, state As PartitionState, basedOn As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.StateUpdated*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.EmitEvents(EventStore.Projections.Core.Services.Processing.IEventWriter)
  commentId: M:EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.EmitEvents(EventStore.Projections.Core.Services.Processing.IEventWriter)
  id: EmitEvents(EventStore.Projections.Core.Services.Processing.IEventWriter)
  parent: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager
  langs:
  - csharp
  - vb
  name: EmitEvents(IEventWriter)
  nameWithType: PartitionStateUpdateManager.EmitEvents(IEventWriter)
  fullName: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.EmitEvents(EventStore.Projections.Core.Services.Processing.IEventWriter)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionStateUpdateManager.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: EmitEvents
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionStateUpdateManager.cs
    startLine: 39
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void EmitEvents(IEventWriter eventWriter)
    parameters:
    - id: eventWriter
      type: EventStore.Projections.Core.Services.Processing.IEventWriter
    content.vb: Public Sub EmitEvents(eventWriter As IEventWriter)
  overload: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.EmitEvents*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.PartitionCompleted(System.String)
  commentId: M:EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.PartitionCompleted(System.String)
  id: PartitionCompleted(System.String)
  parent: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager
  langs:
  - csharp
  - vb
  name: PartitionCompleted(String)
  nameWithType: PartitionStateUpdateManager.PartitionCompleted(String)
  fullName: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.PartitionCompleted(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PartitionStateUpdateManager.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: PartitionCompleted
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PartitionStateUpdateManager.cs
    startLine: 64
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void PartitionCompleted(string partition)
    parameters:
    - id: partition
      type: System.String
    content.vb: Public Sub PartitionCompleted(partition As String)
  overload: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.PartitionCompleted*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PartitionStateUpdateManager>()
  nameWithType: ProtobufExtensions.Serialize<PartitionStateUpdateManager>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PartitionStateUpdateManager)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager)()
  name.vb: Serialize(Of PartitionStateUpdateManager)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PartitionStateUpdateManager>
    nameWithType: ProtobufExtensions.Serialize<PartitionStateUpdateManager>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PartitionStateUpdateManager)
    nameWithType: ProtobufExtensions.Serialize(Of PartitionStateUpdateManager)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PartitionStateUpdateManager>()
  nameWithType: ProtobufExtensions.SerializeToArray<PartitionStateUpdateManager>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PartitionStateUpdateManager)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager)()
  name.vb: SerializeToArray(Of PartitionStateUpdateManager)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PartitionStateUpdateManager>
    nameWithType: ProtobufExtensions.SerializeToArray<PartitionStateUpdateManager>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PartitionStateUpdateManager)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PartitionStateUpdateManager)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.#ctor
  isExternal: false
  name: PartitionStateUpdateManager
  nameWithType: PartitionStateUpdateManager.PartitionStateUpdateManager
  fullName: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.PartitionStateUpdateManager
- uid: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: ProjectionNamesBuilder
  nameWithType: ProjectionNamesBuilder
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder
- uid: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.StateUpdated*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.StateUpdated
  isExternal: false
  name: StateUpdated
  nameWithType: PartitionStateUpdateManager.StateUpdated
  fullName: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.StateUpdated
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.PartitionState
  commentId: T:EventStore.Projections.Core.Services.Processing.PartitionState
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: PartitionState
  nameWithType: PartitionState
  fullName: EventStore.Projections.Core.Services.Processing.PartitionState
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.EmitEvents*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.EmitEvents
  isExternal: false
  name: EmitEvents
  nameWithType: PartitionStateUpdateManager.EmitEvents
  fullName: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.EmitEvents
- uid: EventStore.Projections.Core.Services.Processing.IEventWriter
  commentId: T:EventStore.Projections.Core.Services.Processing.IEventWriter
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: IEventWriter
  nameWithType: IEventWriter
  fullName: EventStore.Projections.Core.Services.Processing.IEventWriter
- uid: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.PartitionCompleted*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.PartitionCompleted
  isExternal: false
  name: PartitionCompleted
  nameWithType: PartitionStateUpdateManager.PartitionCompleted
  fullName: EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.PartitionCompleted

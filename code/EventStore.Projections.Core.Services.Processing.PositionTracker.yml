### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.PositionTracker
  commentId: T:EventStore.Projections.Core.Services.Processing.PositionTracker
  id: PositionTracker
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.PositionTracker.#ctor(EventStore.Projections.Core.Services.Processing.PositionTagger)
  - EventStore.Projections.Core.Services.Processing.PositionTracker.Initialize
  - EventStore.Projections.Core.Services.Processing.PositionTracker.LastTag
  - EventStore.Projections.Core.Services.Processing.PositionTracker.UpdateByCheckpointTagForward(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.PositionTracker.UpdateByCheckpointTagInitial(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  langs:
  - csharp
  - vb
  name: PositionTracker
  nameWithType: PositionTracker
  fullName: EventStore.Projections.Core.Services.Processing.PositionTracker
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PositionTracker.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: PositionTracker
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PositionTracker.cs
    startLine: 4
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public class PositionTracker : object'
    content.vb: >-
      Public Class PositionTracker
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Processing.PositionTracker.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Processing.PositionTracker.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Services.Processing.PositionTracker.#ctor(EventStore.Projections.Core.Services.Processing.PositionTagger)
  commentId: M:EventStore.Projections.Core.Services.Processing.PositionTracker.#ctor(EventStore.Projections.Core.Services.Processing.PositionTagger)
  id: '#ctor(EventStore.Projections.Core.Services.Processing.PositionTagger)'
  parent: EventStore.Projections.Core.Services.Processing.PositionTracker
  langs:
  - csharp
  - vb
  name: PositionTracker(PositionTagger)
  nameWithType: PositionTracker.PositionTracker(PositionTagger)
  fullName: EventStore.Projections.Core.Services.Processing.PositionTracker.PositionTracker(EventStore.Projections.Core.Services.Processing.PositionTagger)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PositionTracker.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PositionTracker.cs
    startLine: 9
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public PositionTracker(PositionTagger positionTagger)
    parameters:
    - id: positionTagger
      type: EventStore.Projections.Core.Services.Processing.PositionTagger
    content.vb: Public Sub New(positionTagger As PositionTagger)
  overload: EventStore.Projections.Core.Services.Processing.PositionTracker.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.PositionTracker.LastTag
  commentId: P:EventStore.Projections.Core.Services.Processing.PositionTracker.LastTag
  id: LastTag
  parent: EventStore.Projections.Core.Services.Processing.PositionTracker
  langs:
  - csharp
  - vb
  name: LastTag
  nameWithType: PositionTracker.LastTag
  fullName: EventStore.Projections.Core.Services.Processing.PositionTracker.LastTag
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PositionTracker.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: LastTag
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PositionTracker.cs
    startLine: 14
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public CheckpointTag LastTag { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public ReadOnly Property LastTag As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.PositionTracker.LastTag*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.PositionTracker.UpdateByCheckpointTagForward(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.PositionTracker.UpdateByCheckpointTagForward(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: UpdateByCheckpointTagForward(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.PositionTracker
  langs:
  - csharp
  - vb
  name: UpdateByCheckpointTagForward(CheckpointTag)
  nameWithType: PositionTracker.UpdateByCheckpointTagForward(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.PositionTracker.UpdateByCheckpointTagForward(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PositionTracker.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: UpdateByCheckpointTagForward
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PositionTracker.cs
    startLine: 19
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void UpdateByCheckpointTagForward(CheckpointTag newTag)
    parameters:
    - id: newTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Sub UpdateByCheckpointTagForward(newTag As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.PositionTracker.UpdateByCheckpointTagForward*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.PositionTracker.UpdateByCheckpointTagInitial(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.PositionTracker.UpdateByCheckpointTagInitial(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: UpdateByCheckpointTagInitial(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.PositionTracker
  langs:
  - csharp
  - vb
  name: UpdateByCheckpointTagInitial(CheckpointTag)
  nameWithType: PositionTracker.UpdateByCheckpointTagInitial(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.PositionTracker.UpdateByCheckpointTagInitial(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PositionTracker.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: UpdateByCheckpointTagInitial
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PositionTracker.cs
    startLine: 29
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void UpdateByCheckpointTagInitial(CheckpointTag checkpointTag)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Sub UpdateByCheckpointTagInitial(checkpointTag As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.PositionTracker.UpdateByCheckpointTagInitial*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.PositionTracker.Initialize
  commentId: M:EventStore.Projections.Core.Services.Processing.PositionTracker.Initialize
  id: Initialize
  parent: EventStore.Projections.Core.Services.Processing.PositionTracker
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: PositionTracker.Initialize()
  fullName: EventStore.Projections.Core.Services.Processing.PositionTracker.Initialize()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/PositionTracker.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Initialize
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/PositionTracker.cs
    startLine: 43
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Initialize()
    content.vb: Public Sub Initialize
  overload: EventStore.Projections.Core.Services.Processing.PositionTracker.Initialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.PositionTracker.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PositionTracker>()
  nameWithType: ProtobufExtensions.Serialize<PositionTracker>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.PositionTracker>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PositionTracker)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.PositionTracker)()
  name.vb: Serialize(Of PositionTracker)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PositionTracker>
    nameWithType: ProtobufExtensions.Serialize<PositionTracker>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.PositionTracker>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PositionTracker)
    nameWithType: ProtobufExtensions.Serialize(Of PositionTracker)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.PositionTracker)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.PositionTracker.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PositionTracker>()
  nameWithType: ProtobufExtensions.SerializeToArray<PositionTracker>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.PositionTracker>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PositionTracker)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.PositionTracker)()
  name.vb: SerializeToArray(Of PositionTracker)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PositionTracker>
    nameWithType: ProtobufExtensions.SerializeToArray<PositionTracker>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.PositionTracker>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PositionTracker)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PositionTracker)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.PositionTracker)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Processing.PositionTracker.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PositionTracker.#ctor
  isExternal: false
  name: PositionTracker
  nameWithType: PositionTracker.PositionTracker
  fullName: EventStore.Projections.Core.Services.Processing.PositionTracker.PositionTracker
- uid: EventStore.Projections.Core.Services.Processing.PositionTagger
  commentId: T:EventStore.Projections.Core.Services.Processing.PositionTagger
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: PositionTagger
  nameWithType: PositionTagger
  fullName: EventStore.Projections.Core.Services.Processing.PositionTagger
- uid: EventStore.Projections.Core.Services.Processing.PositionTracker.LastTag*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PositionTracker.LastTag
  isExternal: false
  name: LastTag
  nameWithType: PositionTracker.LastTag
  fullName: EventStore.Projections.Core.Services.Processing.PositionTracker.LastTag
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.PositionTracker.UpdateByCheckpointTagForward*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PositionTracker.UpdateByCheckpointTagForward
  isExternal: false
  name: UpdateByCheckpointTagForward
  nameWithType: PositionTracker.UpdateByCheckpointTagForward
  fullName: EventStore.Projections.Core.Services.Processing.PositionTracker.UpdateByCheckpointTagForward
- uid: EventStore.Projections.Core.Services.Processing.PositionTracker.UpdateByCheckpointTagInitial*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PositionTracker.UpdateByCheckpointTagInitial
  isExternal: false
  name: UpdateByCheckpointTagInitial
  nameWithType: PositionTracker.UpdateByCheckpointTagInitial
  fullName: EventStore.Projections.Core.Services.Processing.PositionTracker.UpdateByCheckpointTagInitial
- uid: EventStore.Projections.Core.Services.Processing.PositionTracker.Initialize*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.PositionTracker.Initialize
  isExternal: false
  name: Initialize
  nameWithType: PositionTracker.Initialize
  fullName: EventStore.Projections.Core.Services.Processing.PositionTracker.Initialize

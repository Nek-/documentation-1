### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent
  commentId: T:EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent
  id: TaggedResolvedEvent
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.#ctor(EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.EventCategory
  - EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.ReaderPosition
  - EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.ResolvedEvent
  langs:
  - csharp
  - vb
  name: TaggedResolvedEvent
  nameWithType: TaggedResolvedEvent
  fullName: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/TaggedResolvedEvent.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TaggedResolvedEvent
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/TaggedResolvedEvent.cs
    startLine: 2
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public sealed class TaggedResolvedEvent : object'
    content.vb: >-
      Public NotInheritable Class TaggedResolvedEvent
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.ResolvedEvent
  commentId: F:EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.ResolvedEvent
  id: ResolvedEvent
  parent: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent
  langs:
  - csharp
  - vb
  name: ResolvedEvent
  nameWithType: TaggedResolvedEvent.ResolvedEvent
  fullName: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.ResolvedEvent
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/TaggedResolvedEvent.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ResolvedEvent
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/TaggedResolvedEvent.cs
    startLine: 4
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly ResolvedEvent ResolvedEvent
    return:
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    content.vb: Public ReadOnly ResolvedEvent As ResolvedEvent
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.EventCategory
  commentId: F:EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.EventCategory
  id: EventCategory
  parent: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent
  langs:
  - csharp
  - vb
  name: EventCategory
  nameWithType: TaggedResolvedEvent.EventCategory
  fullName: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.EventCategory
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/TaggedResolvedEvent.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EventCategory
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/TaggedResolvedEvent.cs
    startLine: 5
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly string EventCategory
    return:
      type: System.String
    content.vb: Public ReadOnly EventCategory As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.ReaderPosition
  commentId: F:EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.ReaderPosition
  id: ReaderPosition
  parent: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent
  langs:
  - csharp
  - vb
  name: ReaderPosition
  nameWithType: TaggedResolvedEvent.ReaderPosition
  fullName: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.ReaderPosition
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/TaggedResolvedEvent.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReaderPosition
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/TaggedResolvedEvent.cs
    startLine: 6
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public readonly CheckpointTag ReaderPosition
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public ReadOnly ReaderPosition As CheckpointTag
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.#ctor(EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.#ctor(EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: '#ctor(EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag)'
  parent: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent
  langs:
  - csharp
  - vb
  name: TaggedResolvedEvent(ResolvedEvent, String, CheckpointTag)
  nameWithType: TaggedResolvedEvent.TaggedResolvedEvent(ResolvedEvent, String, CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.TaggedResolvedEvent(EventStore.Projections.Core.Services.Processing.ResolvedEvent, System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/TaggedResolvedEvent.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/TaggedResolvedEvent.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public TaggedResolvedEvent(ResolvedEvent resolvedEvent, string eventCategory, CheckpointTag readerPosition)
    parameters:
    - id: resolvedEvent
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    - id: eventCategory
      type: System.String
    - id: readerPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Sub New(resolvedEvent As ResolvedEvent, eventCategory As String, readerPosition As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TaggedResolvedEvent>()
  nameWithType: ProtobufExtensions.Serialize<TaggedResolvedEvent>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TaggedResolvedEvent)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent)()
  name.vb: Serialize(Of TaggedResolvedEvent)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TaggedResolvedEvent>
    nameWithType: ProtobufExtensions.Serialize<TaggedResolvedEvent>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TaggedResolvedEvent)
    nameWithType: ProtobufExtensions.Serialize(Of TaggedResolvedEvent)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TaggedResolvedEvent>()
  nameWithType: ProtobufExtensions.SerializeToArray<TaggedResolvedEvent>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TaggedResolvedEvent)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent)()
  name.vb: SerializeToArray(Of TaggedResolvedEvent)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TaggedResolvedEvent>
    nameWithType: ProtobufExtensions.SerializeToArray<TaggedResolvedEvent>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TaggedResolvedEvent)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TaggedResolvedEvent)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  commentId: T:EventStore.Projections.Core.Services.Processing.ResolvedEvent
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.#ctor
  isExternal: false
  name: TaggedResolvedEvent
  nameWithType: TaggedResolvedEvent.TaggedResolvedEvent
  fullName: EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.TaggedResolvedEvent

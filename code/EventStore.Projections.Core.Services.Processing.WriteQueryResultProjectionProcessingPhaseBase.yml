### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  commentId: T:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  id: WriteQueryResultProjectionProcessingPhaseBase
  parent: EventStore.Projections.Core.Services.Processing
  children:
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.#ctor(EventStore.Core.Bus.IPublisher,System.Int32,System.String,EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase,EventStore.Projections.Core.Services.Processing.PartitionStateCache,EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager,EventStore.Projections.Core.Services.Processing.IEmittedEventWriter,EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker)
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._checkpointManager
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._emittedEventWriter
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._emittedStreamsTracker
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._resultStream
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._stateCache
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.CheckpointManager
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Dispose
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EmittedStreamsTracker
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EnsureUnsubscribed
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.MakeZeroCheckpointTag
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.ProcessEvent
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.WriteResults(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  langs:
  - csharp
  - vb
  name: WriteQueryResultProjectionProcessingPhaseBase
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: WriteQueryResultProjectionProcessingPhaseBase
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: 'public abstract class WriteQueryResultProjectionProcessingPhaseBase : object, IProjectionProcessingPhase, IDisposable, IHandle<CoreProjectionManagementMessage.GetState>, IHandle<CoreProjectionManagementMessage.GetResult>, IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>'
    content.vb: >-
      Public MustInherit Class WriteQueryResultProjectionProcessingPhaseBase
          Inherits Object
          Implements IProjectionProcessingPhase, IDisposable, IHandle(Of CoreProjectionManagementMessage.GetState), IHandle(Of CoreProjectionManagementMessage.GetResult), IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  inheritance:
  - System.Object
  derivedClasses:
  - EventStore.Projections.Core.Services.Processing.WriteQueryEofProjectionProcessingPhase
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhase
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  - IDisposable
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  - EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._resultStream
  commentId: F:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._resultStream
  id: _resultStream
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: _resultStream
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase._resultStream
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._resultStream
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: _resultStream
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 12
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly string _resultStream
    return:
      type: System.String
    content.vb: Protected ReadOnly _resultStream As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._stateCache
  commentId: F:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._stateCache
  id: _stateCache
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: _stateCache
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase._stateCache
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._stateCache
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: _stateCache
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 14
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly PartitionStateCache _stateCache
    return:
      type: EventStore.Projections.Core.Services.Processing.PartitionStateCache
    content.vb: Protected ReadOnly _stateCache As PartitionStateCache
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._checkpointManager
  commentId: F:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._checkpointManager
  id: _checkpointManager
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: _checkpointManager
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase._checkpointManager
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._checkpointManager
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: _checkpointManager
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 15
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly ICoreProjectionCheckpointManager _checkpointManager
    return:
      type: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
    content.vb: Protected ReadOnly _checkpointManager As ICoreProjectionCheckpointManager
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._emittedEventWriter
  commentId: F:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._emittedEventWriter
  id: _emittedEventWriter
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: _emittedEventWriter
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase._emittedEventWriter
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._emittedEventWriter
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: _emittedEventWriter
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 16
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly IEmittedEventWriter _emittedEventWriter
    return:
      type: EventStore.Projections.Core.Services.Processing.IEmittedEventWriter
    content.vb: Protected ReadOnly _emittedEventWriter As IEmittedEventWriter
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._emittedStreamsTracker
  commentId: F:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._emittedStreamsTracker
  id: _emittedStreamsTracker
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: _emittedStreamsTracker
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase._emittedStreamsTracker
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase._emittedStreamsTracker
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: _emittedStreamsTracker
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 17
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected readonly IEmittedStreamsTracker _emittedStreamsTracker
    return:
      type: EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
    content.vb: Protected ReadOnly _emittedStreamsTracker As IEmittedStreamsTracker
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.#ctor(EventStore.Core.Bus.IPublisher,System.Int32,System.String,EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase,EventStore.Projections.Core.Services.Processing.PartitionStateCache,EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager,EventStore.Projections.Core.Services.Processing.IEmittedEventWriter,EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker)
  commentId: M:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.#ctor(EventStore.Core.Bus.IPublisher,System.Int32,System.String,EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase,EventStore.Projections.Core.Services.Processing.PartitionStateCache,EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager,EventStore.Projections.Core.Services.Processing.IEmittedEventWriter,EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker)
  id: '#ctor(EventStore.Core.Bus.IPublisher,System.Int32,System.String,EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase,EventStore.Projections.Core.Services.Processing.PartitionStateCache,EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager,EventStore.Projections.Core.Services.Processing.IEmittedEventWriter,EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker)'
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: WriteQueryResultProjectionProcessingPhaseBase(IPublisher, Int32, String, ICoreProjectionForProcessingPhase, PartitionStateCache, ICoreProjectionCheckpointManager, IEmittedEventWriter, IEmittedStreamsTracker)
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.WriteQueryResultProjectionProcessingPhaseBase(IPublisher, Int32, String, ICoreProjectionForProcessingPhase, PartitionStateCache, ICoreProjectionCheckpointManager, IEmittedEventWriter, IEmittedStreamsTracker)
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.WriteQueryResultProjectionProcessingPhaseBase(EventStore.Core.Bus.IPublisher, System.Int32, System.String, EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase, EventStore.Projections.Core.Services.Processing.PartitionStateCache, EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager, EventStore.Projections.Core.Services.Processing.IEmittedEventWriter, EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 21
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public WriteQueryResultProjectionProcessingPhaseBase(IPublisher publisher, int phase, string resultStream, ICoreProjectionForProcessingPhase coreProjection, PartitionStateCache stateCache, ICoreProjectionCheckpointManager checkpointManager, IEmittedEventWriter emittedEventWriter, IEmittedStreamsTracker emittedStreamsTracker)
    parameters:
    - id: publisher
      type: EventStore.Core.Bus.IPublisher
    - id: phase
      type: System.Int32
    - id: resultStream
      type: System.String
    - id: coreProjection
      type: EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase
    - id: stateCache
      type: EventStore.Projections.Core.Services.Processing.PartitionStateCache
    - id: checkpointManager
      type: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
    - id: emittedEventWriter
      type: EventStore.Projections.Core.Services.Processing.IEmittedEventWriter
    - id: emittedStreamsTracker
      type: EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
    content.vb: Public Sub New(publisher As IPublisher, phase As Integer, resultStream As String, coreProjection As ICoreProjectionForProcessingPhase, stateCache As PartitionStateCache, checkpointManager As ICoreProjectionCheckpointManager, emittedEventWriter As IEmittedEventWriter, emittedStreamsTracker As IEmittedStreamsTracker)
  overload: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.CheckpointManager
  commentId: P:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.CheckpointManager
  id: CheckpointManager
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: CheckpointManager
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.CheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.CheckpointManager
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: CheckpointManager
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 49
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public ICoreProjectionCheckpointManager CheckpointManager { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
    content.vb: Public ReadOnly Property CheckpointManager As ICoreProjectionCheckpointManager
  overload: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.CheckpointManager*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.CheckpointManager
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EmittedStreamsTracker
  commentId: P:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EmittedStreamsTracker
  id: EmittedStreamsTracker
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: EmittedStreamsTracker
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.EmittedStreamsTracker
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EmittedStreamsTracker
  type: Property
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: EmittedStreamsTracker
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 54
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public IEmittedStreamsTracker EmittedStreamsTracker { get; }
    parameters: []
    return:
      type: EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
    content.vb: Public ReadOnly Property EmittedStreamsTracker As IEmittedStreamsTracker
  overload: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EmittedStreamsTracker*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EmittedStreamsTracker
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Dispose
  commentId: M:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Dispose
  id: Dispose
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.Dispose()
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Dispose()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Dispose
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 59
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  commentId: M:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionManagementMessage.GetState)
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.Handle(CoreProjectionManagementMessage.GetState)
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 63
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(CoreProjectionManagementMessage.GetState message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    content.vb: Public Sub Handle(message As CoreProjectionManagementMessage.GetState)
  overload: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  commentId: M:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  id: Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionManagementMessage.GetResult)
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.Handle(CoreProjectionManagementMessage.GetResult)
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 76
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(CoreProjectionManagementMessage.GetResult message)
    parameters:
    - id: message
      type: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    content.vb: Public Sub Handle(message As CoreProjectionManagementMessage.GetResult)
  overload: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  commentId: M:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  id: Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 90
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded message)
    parameters:
    - id: message
      type: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    content.vb: Public Sub Handle(message As CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  overload: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: AdjustTag(CheckpointTag)
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.AdjustTag(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: AdjustTag
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 95
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public CheckpointTag AdjustTag(CheckpointTag tag)
    parameters:
    - id: tag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Function AdjustTag(tag As CheckpointTag) As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.AdjustTag*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: InitializeFromCheckpoint(CheckpointTag)
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.InitializeFromCheckpoint(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: InitializeFromCheckpoint
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 100
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void InitializeFromCheckpoint(CheckpointTag checkpointTag)
    parameters:
    - id: checkpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Sub InitializeFromCheckpoint(checkpointTag As CheckpointTag)
  overload: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.InitializeFromCheckpoint*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  commentId: M:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  id: AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: AssignSlaves(SlaveProjectionCommunicationChannels)
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.AssignSlaves(SlaveProjectionCommunicationChannels)
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: AssignSlaves
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 105
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void AssignSlaves(SlaveProjectionCommunicationChannels slaveProjections)
    parameters:
    - id: slaveProjections
      type: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
    content.vb: Public Sub AssignSlaves(slaveProjections As SlaveProjectionCommunicationChannels)
  overload: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.AssignSlaves*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.ProcessEvent
  commentId: M:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.ProcessEvent
  id: ProcessEvent
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: ProcessEvent()
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.ProcessEvent()
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.ProcessEvent()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ProcessEvent
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 110
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void ProcessEvent()
    content.vb: Public Sub ProcessEvent
  overload: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.ProcessEvent*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.WriteResults(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.WriteResults(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  id: WriteResults(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: WriteResults(CheckpointTag)
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.WriteResults(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.WriteResults(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: WriteResults
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 145
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: protected abstract IEnumerable<EmittedEventEnvelope> WriteResults(CheckpointTag phaseCheckpointTag)
    parameters:
    - id: phaseCheckpointTag
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    return:
      type: IEnumerable{EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope}
    content.vb: Protected MustOverride Function WriteResults(phaseCheckpointTag As CheckpointTag) As IEnumerable(Of EmittedEventEnvelope)
  overload: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.WriteResults*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  id: Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: Subscribe(CheckpointTag, Boolean)
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.Subscribe(CheckpointTag, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Subscribe
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 147
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void Subscribe(CheckpointTag from, bool fromCheckpoint)
    parameters:
    - id: from
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: fromCheckpoint
      type: System.Boolean
    content.vb: Public Sub Subscribe(from As CheckpointTag, fromCheckpoint As Boolean)
  overload: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Subscribe*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  commentId: M:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  id: SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: SetProjectionState(PhaseState)
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.SetProjectionState(PhaseState)
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SetProjectionState
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 153
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void SetProjectionState(PhaseState state)
    parameters:
    - id: state
      type: EventStore.Projections.Core.Services.Processing.PhaseState
    content.vb: Public Sub SetProjectionState(state As PhaseState)
  overload: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.SetProjectionState*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  commentId: M:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  id: GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: GetStatistics(ProjectionStatistics)
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.GetStatistics(ProjectionStatistics)
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: GetStatistics
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 158
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void GetStatistics(ProjectionStatistics info)
    parameters:
    - id: info
      type: EventStore.Projections.Core.Services.ProjectionStatistics
    content.vb: Public Sub GetStatistics(info As ProjectionStatistics)
  overload: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.GetStatistics*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.MakeZeroCheckpointTag
  commentId: M:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.MakeZeroCheckpointTag
  id: MakeZeroCheckpointTag
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: MakeZeroCheckpointTag()
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.MakeZeroCheckpointTag()
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.MakeZeroCheckpointTag()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: MakeZeroCheckpointTag
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 163
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public CheckpointTag MakeZeroCheckpointTag()
    return:
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    content.vb: Public Function MakeZeroCheckpointTag As CheckpointTag
  overload: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.MakeZeroCheckpointTag*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EnsureUnsubscribed
  commentId: M:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EnsureUnsubscribed
  id: EnsureUnsubscribed
  parent: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase
  langs:
  - csharp
  - vb
  name: EnsureUnsubscribed()
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.EnsureUnsubscribed()
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EnsureUnsubscribed()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: EnsureUnsubscribed
    path: ../EventStore/src/EventStore.Projections.Core/Services/Processing/WriteQueryResultProjectionProcessingPhaseBase.cs
    startLine: 168
  assemblies:
  - EventStore.Projections.Core
  namespace: EventStore.Projections.Core.Services.Processing
  syntax:
    content: public void EnsureUnsubscribed()
    content.vb: Public Sub EnsureUnsubscribed
  overload: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EnsureUnsubscribed*
  implements:
  - EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  commentId: T:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  parent: EventStore.Projections.Core.Services.Processing
  name: IProjectionProcessingPhase
  nameWithType: IProjectionProcessingPhase
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
- uid: IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.GetState>
  nameWithType: IHandle<CoreProjectionManagementMessage.GetState>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetState)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  name.vb: IHandle(Of CoreProjectionManagementMessage.GetState)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionManagementMessage.GetResult>
  nameWithType: IHandle<CoreProjectionManagementMessage.GetResult>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult>
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetResult)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  name.vb: IHandle(Of CoreProjectionManagementMessage.GetResult)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}
  commentId: T:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>
  nameWithType: IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  name.vb: IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<WriteQueryResultProjectionProcessingPhaseBase>()
  nameWithType: ProtobufExtensions.Serialize<WriteQueryResultProjectionProcessingPhaseBase>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of WriteQueryResultProjectionProcessingPhaseBase)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase)()
  name.vb: Serialize(Of WriteQueryResultProjectionProcessingPhaseBase)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<WriteQueryResultProjectionProcessingPhaseBase>
    nameWithType: ProtobufExtensions.Serialize<WriteQueryResultProjectionProcessingPhaseBase>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of WriteQueryResultProjectionProcessingPhaseBase)
    nameWithType: ProtobufExtensions.Serialize(Of WriteQueryResultProjectionProcessingPhaseBase)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<WriteQueryResultProjectionProcessingPhaseBase>()
  nameWithType: ProtobufExtensions.SerializeToArray<WriteQueryResultProjectionProcessingPhaseBase>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of WriteQueryResultProjectionProcessingPhaseBase)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase)()
  name.vb: SerializeToArray(Of WriteQueryResultProjectionProcessingPhaseBase)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<WriteQueryResultProjectionProcessingPhaseBase>
    nameWithType: ProtobufExtensions.SerializeToArray<WriteQueryResultProjectionProcessingPhaseBase>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of WriteQueryResultProjectionProcessingPhaseBase)
    nameWithType: ProtobufExtensions.SerializeToArray(Of WriteQueryResultProjectionProcessingPhaseBase)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Projections.Core.Services.Processing.PartitionStateCache
  commentId: T:EventStore.Projections.Core.Services.Processing.PartitionStateCache
  parent: EventStore.Projections.Core.Services.Processing
  name: PartitionStateCache
  nameWithType: PartitionStateCache
  fullName: EventStore.Projections.Core.Services.Processing.PartitionStateCache
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  commentId: T:EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
  parent: EventStore.Projections.Core.Services.Processing
  name: ICoreProjectionCheckpointManager
  nameWithType: ICoreProjectionCheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager
- uid: EventStore.Projections.Core.Services.Processing.IEmittedEventWriter
  commentId: T:EventStore.Projections.Core.Services.Processing.IEmittedEventWriter
  parent: EventStore.Projections.Core.Services.Processing
  name: IEmittedEventWriter
  nameWithType: IEmittedEventWriter
  fullName: EventStore.Projections.Core.Services.Processing.IEmittedEventWriter
- uid: EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
  commentId: T:EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
  parent: EventStore.Projections.Core.Services.Processing
  name: IEmittedStreamsTracker
  nameWithType: IEmittedStreamsTracker
  fullName: EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.#ctor*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.#ctor
  name: WriteQueryResultProjectionProcessingPhaseBase
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.WriteQueryResultProjectionProcessingPhaseBase
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.WriteQueryResultProjectionProcessingPhaseBase
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase
  commentId: T:EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase
  parent: EventStore.Projections.Core.Services.Processing
  name: ICoreProjectionForProcessingPhase
  nameWithType: ICoreProjectionForProcessingPhase
  fullName: EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.CheckpointManager*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.CheckpointManager
  name: CheckpointManager
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.CheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.CheckpointManager
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.CheckpointManager
  commentId: P:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.CheckpointManager
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: CheckpointManager
  nameWithType: IProjectionProcessingPhase.CheckpointManager
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.CheckpointManager
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EmittedStreamsTracker*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EmittedStreamsTracker
  name: EmittedStreamsTracker
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.EmittedStreamsTracker
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EmittedStreamsTracker
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EmittedStreamsTracker
  commentId: P:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EmittedStreamsTracker
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: EmittedStreamsTracker
  nameWithType: IProjectionProcessingPhase.EmittedStreamsTracker
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EmittedStreamsTracker
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Dispose*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Dispose
  name: Dispose
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.Dispose
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Dispose
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle
  name: Handle
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.Handle
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionManagementMessage.GetState)
  nameWithType: IHandle<CoreProjectionManagementMessage.GetState>.Handle(CoreProjectionManagementMessage.GetState)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState>.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetState).Handle(CoreProjectionManagementMessage.GetState)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState).Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionManagementMessage.GetState>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionManagementMessage.GetState).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
    name: CoreProjectionManagementMessage.GetState
    nameWithType: CoreProjectionManagementMessage.GetState
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionManagementMessage.GetState
  nameWithType: CoreProjectionManagementMessage.GetState
  fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  parent: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionManagementMessage.GetResult)
  nameWithType: IHandle<CoreProjectionManagementMessage.GetResult>.Handle(CoreProjectionManagementMessage.GetResult)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult>.Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  nameWithType.vb: IHandle(Of CoreProjectionManagementMessage.GetResult).Handle(CoreProjectionManagementMessage.GetResult)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult).Handle(EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionManagementMessage.GetResult>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionManagementMessage.GetResult).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
    name: CoreProjectionManagementMessage.GetResult
    nameWithType: CoreProjectionManagementMessage.GetResult
    fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  commentId: T:EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
  parent: EventStore.Projections.Core.Messages
  name: CoreProjectionManagementMessage.GetResult
  nameWithType: CoreProjectionManagementMessage.GetResult
  fullName: EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult
- uid: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  commentId: M:EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  parent: EventStore.Core.Bus.IHandle{CoreProjectionProcessingMessage.PrerecordedEventsLoaded}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  nameWithType: IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  nameWithType.vb: IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded).Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  fullName.vb: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded).Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>.Handle
    fullName: EventStore.Core.Bus.IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded).Handle
    fullName: EventStore.Core.Bus.IHandle(Of CoreProjectionProcessingMessage.PrerecordedEventsLoaded).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
    fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  commentId: T:CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  name: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  nameWithType: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
  fullName: CoreProjectionProcessingMessage.PrerecordedEventsLoaded
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.AdjustTag*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.AdjustTag
  name: AdjustTag
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.AdjustTag
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.AdjustTag
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: AdjustTag(CheckpointTag)
  nameWithType: IProjectionProcessingPhase.AdjustTag(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: AdjustTag
    nameWithType: IProjectionProcessingPhase.AdjustTag
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: AdjustTag
    nameWithType: IProjectionProcessingPhase.AdjustTag
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AdjustTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.InitializeFromCheckpoint*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.InitializeFromCheckpoint
  name: InitializeFromCheckpoint
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.InitializeFromCheckpoint
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.InitializeFromCheckpoint
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: InitializeFromCheckpoint(CheckpointTag)
  nameWithType: IProjectionProcessingPhase.InitializeFromCheckpoint(CheckpointTag)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: InitializeFromCheckpoint
    nameWithType: IProjectionProcessingPhase.InitializeFromCheckpoint
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint(EventStore.Projections.Core.Services.Processing.CheckpointTag)
    name: InitializeFromCheckpoint
    nameWithType: IProjectionProcessingPhase.InitializeFromCheckpoint
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.InitializeFromCheckpoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.AssignSlaves*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.AssignSlaves
  name: AssignSlaves
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.AssignSlaves
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.AssignSlaves
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: AssignSlaves(SlaveProjectionCommunicationChannels)
  nameWithType: IProjectionProcessingPhase.AssignSlaves(SlaveProjectionCommunicationChannels)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
    name: AssignSlaves
    nameWithType: IProjectionProcessingPhase.AssignSlaves
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
    name: SlaveProjectionCommunicationChannels
    nameWithType: SlaveProjectionCommunicationChannels
    fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves(EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels)
    name: AssignSlaves
    nameWithType: IProjectionProcessingPhase.AssignSlaves
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.AssignSlaves
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
    name: SlaveProjectionCommunicationChannels
    nameWithType: SlaveProjectionCommunicationChannels
    fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  commentId: T:EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
  parent: EventStore.Projections.Core.Messages
  name: SlaveProjectionCommunicationChannels
  nameWithType: SlaveProjectionCommunicationChannels
  fullName: EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.ProcessEvent*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.ProcessEvent
  name: ProcessEvent
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.ProcessEvent
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.ProcessEvent
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: ProcessEvent()
  nameWithType: IProjectionProcessingPhase.ProcessEvent()
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
    name: ProcessEvent
    nameWithType: IProjectionProcessingPhase.ProcessEvent
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
    name: ProcessEvent
    nameWithType: IProjectionProcessingPhase.ProcessEvent
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.WriteResults*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.WriteResults
  name: WriteResults
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.WriteResults
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.WriteResults
- uid: IEnumerable{EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope}
  commentId: '!:IEnumerable{EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope}'
  definition: IEnumerable`1
  name: IEnumerable<EmittedEventEnvelope>
  nameWithType: IEnumerable<EmittedEventEnvelope>
  fullName: IEnumerable<EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope>
  nameWithType.vb: IEnumerable(Of EmittedEventEnvelope)
  fullName.vb: IEnumerable(Of EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope)
  name.vb: IEnumerable(Of EmittedEventEnvelope)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Subscribe*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Subscribe
  name: Subscribe
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.Subscribe
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.Subscribe
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  isExternal: true
  name: Subscribe(CheckpointTag, Boolean)
  nameWithType: IProjectionProcessingPhase.Subscribe(CheckpointTag, Boolean)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.Boolean)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
    name: Subscribe
    nameWithType: IProjectionProcessingPhase.Subscribe
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.Boolean)
    name: Subscribe
    nameWithType: IProjectionProcessingPhase.Subscribe
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.SetProjectionState*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.SetProjectionState
  name: SetProjectionState
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.SetProjectionState
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.SetProjectionState
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: SetProjectionState(PhaseState)
  nameWithType: IProjectionProcessingPhase.SetProjectionState(PhaseState)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
    name: SetProjectionState
    nameWithType: IProjectionProcessingPhase.SetProjectionState
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.PhaseState
    name: PhaseState
    nameWithType: PhaseState
    fullName: EventStore.Projections.Core.Services.Processing.PhaseState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState(EventStore.Projections.Core.Services.Processing.PhaseState)
    name: SetProjectionState
    nameWithType: IProjectionProcessingPhase.SetProjectionState
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.SetProjectionState
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.PhaseState
    name: PhaseState
    nameWithType: PhaseState
    fullName: EventStore.Projections.Core.Services.Processing.PhaseState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.PhaseState
  commentId: T:EventStore.Projections.Core.Services.Processing.PhaseState
  parent: EventStore.Projections.Core.Services.Processing
  name: PhaseState
  nameWithType: PhaseState
  fullName: EventStore.Projections.Core.Services.Processing.PhaseState
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.GetStatistics*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.GetStatistics
  name: GetStatistics
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.GetStatistics
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.GetStatistics
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: GetStatistics(ProjectionStatistics)
  nameWithType: IProjectionProcessingPhase.GetStatistics(ProjectionStatistics)
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
    name: GetStatistics
    nameWithType: IProjectionProcessingPhase.GetStatistics
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.ProjectionStatistics
    name: ProjectionStatistics
    nameWithType: ProjectionStatistics
    fullName: EventStore.Projections.Core.Services.ProjectionStatistics
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics(EventStore.Projections.Core.Services.ProjectionStatistics)
    name: GetStatistics
    nameWithType: IProjectionProcessingPhase.GetStatistics
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.GetStatistics
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.ProjectionStatistics
    name: ProjectionStatistics
    nameWithType: ProjectionStatistics
    fullName: EventStore.Projections.Core.Services.ProjectionStatistics
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.ProjectionStatistics
  commentId: T:EventStore.Projections.Core.Services.ProjectionStatistics
  parent: EventStore.Projections.Core.Services
  name: ProjectionStatistics
  nameWithType: ProjectionStatistics
  fullName: EventStore.Projections.Core.Services.ProjectionStatistics
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.MakeZeroCheckpointTag*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.MakeZeroCheckpointTag
  name: MakeZeroCheckpointTag
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.MakeZeroCheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.MakeZeroCheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: MakeZeroCheckpointTag()
  nameWithType: IProjectionProcessingPhase.MakeZeroCheckpointTag()
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
    name: MakeZeroCheckpointTag
    nameWithType: IProjectionProcessingPhase.MakeZeroCheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
    name: MakeZeroCheckpointTag
    nameWithType: IProjectionProcessingPhase.MakeZeroCheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.MakeZeroCheckpointTag
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EnsureUnsubscribed*
  commentId: Overload:EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EnsureUnsubscribed
  name: EnsureUnsubscribed
  nameWithType: WriteQueryResultProjectionProcessingPhaseBase.EnsureUnsubscribed
  fullName: EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.EnsureUnsubscribed
- uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
  commentId: M:EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
  parent: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase
  name: EnsureUnsubscribed()
  nameWithType: IProjectionProcessingPhase.EnsureUnsubscribed()
  fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
    name: EnsureUnsubscribed
    nameWithType: IProjectionProcessingPhase.EnsureUnsubscribed
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
    name: EnsureUnsubscribed
    nameWithType: IProjectionProcessingPhase.EnsureUnsubscribed
    fullName: EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.EnsureUnsubscribed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )

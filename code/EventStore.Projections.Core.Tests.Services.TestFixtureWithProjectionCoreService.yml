### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService
  commentId: T:EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService
  id: TestFixtureWithProjectionCoreService
  parent: EventStore.Projections.Core.Tests.Services
  children:
  - EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._bus
  - EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._consumer
  - EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._readerService
  - EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._service
  - EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._workerId
  - EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.CreateEvent
  - EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.CreateReaderStrategy
  - EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.Setup
  langs:
  - csharp
  - vb
  name: TestFixtureWithProjectionCoreService
  nameWithType: TestFixtureWithProjectionCoreService
  fullName: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureWithProjectionCoreService
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
    startLine: 20
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services
  syntax:
    content: 'public class TestFixtureWithProjectionCoreService : object'
    content.vb: >-
      Public Class TestFixtureWithProjectionCoreService

          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - EventStore.Projections.Core.Tests.Services.core_service.when_a_subscribed_projection_handler_throws
  - EventStore.Projections.Core.Tests.Services.core_service.when_unsubscribing_a_subscribed_projection
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._consumer
  commentId: F:EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._consumer
  id: _consumer
  parent: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService
  langs:
  - csharp
  - vb
  name: _consumer
  nameWithType: TestFixtureWithProjectionCoreService._consumer
  fullName: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._consumer
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _consumer
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
    startLine: 54
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services
  syntax:
    content: protected TestHandler<Message> _consumer
    return:
      type: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Core.Messaging.Message}
    content.vb: Protected _consumer As TestHandler(Of Message)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._bus
  commentId: F:EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._bus
  id: _bus
  parent: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService
  langs:
  - csharp
  - vb
  name: _bus
  nameWithType: TestFixtureWithProjectionCoreService._bus
  fullName: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._bus
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _bus
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
    startLine: 55
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services
  syntax:
    content: protected InMemoryBus _bus
    return:
      type: EventStore.Core.Bus.InMemoryBus
    content.vb: Protected _bus As InMemoryBus
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._service
  commentId: F:EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._service
  id: _service
  parent: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService
  langs:
  - csharp
  - vb
  name: _service
  nameWithType: TestFixtureWithProjectionCoreService._service
  fullName: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._service
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _service
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
    startLine: 56
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services
  syntax:
    content: protected ProjectionCoreService _service
    return:
      type: EventStore.Projections.Core.Services.Processing.ProjectionCoreService
    content.vb: Protected _service As ProjectionCoreService
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._readerService
  commentId: F:EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._readerService
  id: _readerService
  parent: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService
  langs:
  - csharp
  - vb
  name: _readerService
  nameWithType: TestFixtureWithProjectionCoreService._readerService
  fullName: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._readerService
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _readerService
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
    startLine: 57
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services
  syntax:
    content: protected EventReaderCoreService _readerService
    return:
      type: EventStore.Projections.Core.Services.Processing.EventReaderCoreService
    content.vb: Protected _readerService As EventReaderCoreService
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._workerId
  commentId: F:EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._workerId
  id: _workerId
  parent: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService
  langs:
  - csharp
  - vb
  name: _workerId
  nameWithType: TestFixtureWithProjectionCoreService._workerId
  fullName: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService._workerId
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _workerId
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
    startLine: 65
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services
  syntax:
    content: protected Guid _workerId
    return:
      type: Guid
    content.vb: Protected _workerId As Guid
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.Setup
  commentId: M:EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.Setup
  id: Setup
  parent: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService
  langs:
  - csharp
  - vb
  name: Setup()
  nameWithType: TestFixtureWithProjectionCoreService.Setup()
  fullName: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.Setup()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Setup
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
    startLine: 67
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services
  syntax:
    content: public void Setup()
    content.vb: Public Sub Setup
  overload: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.Setup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.CreateReaderStrategy
  commentId: M:EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.CreateReaderStrategy
  id: CreateReaderStrategy
  parent: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService
  langs:
  - csharp
  - vb
  name: CreateReaderStrategy()
  nameWithType: TestFixtureWithProjectionCoreService.CreateReaderStrategy()
  fullName: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.CreateReaderStrategy()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateReaderStrategy
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
    startLine: 99
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services
  syntax:
    content: protected IReaderStrategy CreateReaderStrategy()
    return:
      type: EventStore.Projections.Core.Services.Processing.IReaderStrategy
    content.vb: Protected Function CreateReaderStrategy As IReaderStrategy
  overload: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.CreateReaderStrategy*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.CreateEvent
  commentId: M:EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.CreateEvent
  id: CreateEvent
  parent: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService
  langs:
  - csharp
  - vb
  name: CreateEvent()
  nameWithType: TestFixtureWithProjectionCoreService.CreateEvent()
  fullName: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.CreateEvent()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateEvent
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/TestFixtureWithProjectionCoreService.cs
    startLine: 113
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services
  syntax:
    content: protected static ResolvedEvent CreateEvent()
    return:
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    content.vb: Protected Shared Function CreateEvent As ResolvedEvent
  overload: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.CreateEvent*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
references:
- uid: EventStore.Projections.Core.Tests.Services
  commentId: N:EventStore.Projections.Core.Tests.Services
  isExternal: false
  name: EventStore.Projections.Core.Tests.Services
  nameWithType: EventStore.Projections.Core.Tests.Services
  fullName: EventStore.Projections.Core.Tests.Services
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TestFixtureWithProjectionCoreService>()
  nameWithType: ProtobufExtensions.Serialize<TestFixtureWithProjectionCoreService>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TestFixtureWithProjectionCoreService)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService)()
  name.vb: Serialize(Of TestFixtureWithProjectionCoreService)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TestFixtureWithProjectionCoreService>
    nameWithType: ProtobufExtensions.Serialize<TestFixtureWithProjectionCoreService>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TestFixtureWithProjectionCoreService)
    nameWithType: ProtobufExtensions.Serialize(Of TestFixtureWithProjectionCoreService)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TestFixtureWithProjectionCoreService>()
  nameWithType: ProtobufExtensions.SerializeToArray<TestFixtureWithProjectionCoreService>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TestFixtureWithProjectionCoreService)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService)()
  name.vb: SerializeToArray(Of TestFixtureWithProjectionCoreService)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TestFixtureWithProjectionCoreService>
    nameWithType: ProtobufExtensions.SerializeToArray<TestFixtureWithProjectionCoreService>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TestFixtureWithProjectionCoreService)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TestFixtureWithProjectionCoreService)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Core.Messaging.Message}
  commentId: T:EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Core.Messaging.Message}
  parent: EventStore.Core.Tests.Bus.Helpers
  definition: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
  name: TestHandler<Message>
  nameWithType: TestHandler<Message>
  fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler<EventStore.Core.Messaging.Message>
  nameWithType.vb: TestHandler(Of Message)
  fullName.vb: EventStore.Core.Tests.Bus.Helpers.TestHandler(Of EventStore.Core.Messaging.Message)
  name.vb: TestHandler(Of Message)
  spec.csharp:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
  commentId: T:EventStore.Core.Tests.Bus.Helpers.TestHandler`1
  isExternal: false
  name: TestHandler<T>
  nameWithType: TestHandler<T>
  fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler<T>
  nameWithType.vb: TestHandler(Of T)
  fullName.vb: EventStore.Core.Tests.Bus.Helpers.TestHandler(Of T)
  name.vb: TestHandler(Of T)
  spec.csharp:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers
  commentId: N:EventStore.Core.Tests.Bus.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Bus.Helpers
  nameWithType: EventStore.Core.Tests.Bus.Helpers
  fullName: EventStore.Core.Tests.Bus.Helpers
- uid: EventStore.Core.Bus.InMemoryBus
  commentId: T:EventStore.Core.Bus.InMemoryBus
  parent: EventStore.Core.Bus
  isExternal: false
  name: InMemoryBus
  nameWithType: InMemoryBus
  fullName: EventStore.Core.Bus.InMemoryBus
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Projections.Core.Services.Processing.ProjectionCoreService
  commentId: T:EventStore.Projections.Core.Services.Processing.ProjectionCoreService
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: ProjectionCoreService
  nameWithType: ProjectionCoreService
  fullName: EventStore.Projections.Core.Services.Processing.ProjectionCoreService
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Services.Processing.EventReaderCoreService
  commentId: T:EventStore.Projections.Core.Services.Processing.EventReaderCoreService
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: EventReaderCoreService
  nameWithType: EventReaderCoreService
  fullName: EventStore.Projections.Core.Services.Processing.EventReaderCoreService
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.Setup*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.Setup
  isExternal: false
  name: Setup
  nameWithType: TestFixtureWithProjectionCoreService.Setup
  fullName: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.Setup
- uid: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.CreateReaderStrategy*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.CreateReaderStrategy
  isExternal: false
  name: CreateReaderStrategy
  nameWithType: TestFixtureWithProjectionCoreService.CreateReaderStrategy
  fullName: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.CreateReaderStrategy
- uid: EventStore.Projections.Core.Services.Processing.IReaderStrategy
  commentId: T:EventStore.Projections.Core.Services.Processing.IReaderStrategy
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: IReaderStrategy
  nameWithType: IReaderStrategy
  fullName: EventStore.Projections.Core.Services.Processing.IReaderStrategy
- uid: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.CreateEvent*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.CreateEvent
  isExternal: false
  name: CreateEvent
  nameWithType: TestFixtureWithProjectionCoreService.CreateEvent
  fullName: EventStore.Projections.Core.Tests.Services.TestFixtureWithProjectionCoreService.CreateEvent
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  commentId: T:EventStore.Projections.Core.Services.Processing.ResolvedEvent
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent

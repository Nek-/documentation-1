### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  commentId: T:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  id: FakeProjectionStateHandler
  parent: EventStore.Projections.Core.Tests.Services.core_projection
  children:
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,Action{EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder})
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.#ctor(System.String,Action{System.String,System.Object[]})
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit1Data
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit1EventType
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit1StreamId
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit2Data
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit2EventType
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit2StreamId
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit3Data
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._eventsProcessed
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._initializeCalled
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._initializeSharedCalled
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastPartition
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedData
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedEventId
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedEventType
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedMetadata
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedSequencenumber
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedStreamId
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._loadCalled
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._loadedState
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._partitionCreatedProcessed
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ConfigureSourceProcessingStrategy(EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder)
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Dispose
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.GetSourceDefinition
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Initialize
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.InitializeShared
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Load(System.String)
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.LoadShared(System.String)
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.TransformStateToResult
  langs:
  - csharp
  - vb
  name: FakeProjectionStateHandler
  nameWithType: FakeProjectionStateHandler
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: FakeProjectionStateHandler
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: 'public class FakeProjectionStateHandler : object, IProjectionStateHandler, IDisposable, ISourceDefinitionSource'
    content.vb: >-
      Public Class FakeProjectionStateHandler

          Inherits Object

          Implements IProjectionStateHandler, IDisposable, ISourceDefinitionSource
  inheritance:
  - System.Object
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler
  - IDisposable
  - EventStore.Projections.Core.Services.ISourceDefinitionSource
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._initializeCalled
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._initializeCalled
  id: _initializeCalled
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _initializeCalled
  nameWithType: FakeProjectionStateHandler._initializeCalled
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._initializeCalled
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _initializeCalled
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 10
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public int _initializeCalled
    return:
      type: System.Int32
    content.vb: Public _initializeCalled As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._initializeSharedCalled
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._initializeSharedCalled
  id: _initializeSharedCalled
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _initializeSharedCalled
  nameWithType: FakeProjectionStateHandler._initializeSharedCalled
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._initializeSharedCalled
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _initializeSharedCalled
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 11
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public int _initializeSharedCalled
    return:
      type: System.Int32
    content.vb: Public _initializeSharedCalled As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._loadCalled
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._loadCalled
  id: _loadCalled
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _loadCalled
  nameWithType: FakeProjectionStateHandler._loadCalled
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._loadCalled
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _loadCalled
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 12
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public int _loadCalled
    return:
      type: System.Int32
    content.vb: Public _loadCalled As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._eventsProcessed
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._eventsProcessed
  id: _eventsProcessed
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _eventsProcessed
  nameWithType: FakeProjectionStateHandler._eventsProcessed
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._eventsProcessed
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _eventsProcessed
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 13
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public int _eventsProcessed
    return:
      type: System.Int32
    content.vb: Public _eventsProcessed As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._partitionCreatedProcessed
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._partitionCreatedProcessed
  id: _partitionCreatedProcessed
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _partitionCreatedProcessed
  nameWithType: FakeProjectionStateHandler._partitionCreatedProcessed
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._partitionCreatedProcessed
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _partitionCreatedProcessed
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 14
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public int _partitionCreatedProcessed
    return:
      type: System.Int32
    content.vb: Public _partitionCreatedProcessed As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._loadedState
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._loadedState
  id: _loadedState
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _loadedState
  nameWithType: FakeProjectionStateHandler._loadedState
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._loadedState
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _loadedState
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 15
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public string _loadedState
    return:
      type: System.String
    content.vb: Public _loadedState As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedStreamId
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedStreamId
  id: _lastProcessedStreamId
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _lastProcessedStreamId
  nameWithType: FakeProjectionStateHandler._lastProcessedStreamId
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedStreamId
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _lastProcessedStreamId
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 16
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public string _lastProcessedStreamId
    return:
      type: System.String
    content.vb: Public _lastProcessedStreamId As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedEventType
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedEventType
  id: _lastProcessedEventType
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _lastProcessedEventType
  nameWithType: FakeProjectionStateHandler._lastProcessedEventType
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedEventType
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _lastProcessedEventType
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 17
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public string _lastProcessedEventType
    return:
      type: System.String
    content.vb: Public _lastProcessedEventType As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedEventId
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedEventId
  id: _lastProcessedEventId
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _lastProcessedEventId
  nameWithType: FakeProjectionStateHandler._lastProcessedEventId
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedEventId
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _lastProcessedEventId
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 18
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public Guid _lastProcessedEventId
    return:
      type: Guid
    content.vb: Public _lastProcessedEventId As Guid
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedSequencenumber
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedSequencenumber
  id: _lastProcessedSequencenumber
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _lastProcessedSequencenumber
  nameWithType: FakeProjectionStateHandler._lastProcessedSequencenumber
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedSequencenumber
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _lastProcessedSequencenumber
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 19
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public long _lastProcessedSequencenumber
    return:
      type: System.Int64
    content.vb: Public _lastProcessedSequencenumber As Long
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedMetadata
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedMetadata
  id: _lastProcessedMetadata
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _lastProcessedMetadata
  nameWithType: FakeProjectionStateHandler._lastProcessedMetadata
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedMetadata
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _lastProcessedMetadata
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 20
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public string _lastProcessedMetadata
    return:
      type: System.String
    content.vb: Public _lastProcessedMetadata As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedData
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedData
  id: _lastProcessedData
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _lastProcessedData
  nameWithType: FakeProjectionStateHandler._lastProcessedData
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastProcessedData
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _lastProcessedData
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 21
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public string _lastProcessedData
    return:
      type: System.String
    content.vb: Public _lastProcessedData As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastPartition
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastPartition
  id: _lastPartition
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _lastPartition
  nameWithType: FakeProjectionStateHandler._lastPartition
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._lastPartition
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _lastPartition
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 22
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public string _lastPartition
    return:
      type: System.String
    content.vb: Public _lastPartition As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit1Data
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit1Data
  id: _emit1Data
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _emit1Data
  nameWithType: FakeProjectionStateHandler._emit1Data
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit1Data
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _emit1Data
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 23
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public const string _emit1Data = null
    return:
      type: System.String
    content.vb: Public Const _emit1Data As String = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit2Data
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit2Data
  id: _emit2Data
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _emit2Data
  nameWithType: FakeProjectionStateHandler._emit2Data
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit2Data
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _emit2Data
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 24
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public const string _emit2Data = null
    return:
      type: System.String
    content.vb: Public Const _emit2Data As String = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit3Data
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit3Data
  id: _emit3Data
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _emit3Data
  nameWithType: FakeProjectionStateHandler._emit3Data
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit3Data
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _emit3Data
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 25
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public const string _emit3Data = null
    return:
      type: System.String
    content.vb: Public Const _emit3Data As String = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit1StreamId
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit1StreamId
  id: _emit1StreamId
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _emit1StreamId
  nameWithType: FakeProjectionStateHandler._emit1StreamId
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit1StreamId
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _emit1StreamId
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 26
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public const string _emit1StreamId = null
    return:
      type: System.String
    content.vb: Public Const _emit1StreamId As String = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit2StreamId
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit2StreamId
  id: _emit2StreamId
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _emit2StreamId
  nameWithType: FakeProjectionStateHandler._emit2StreamId
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit2StreamId
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _emit2StreamId
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 27
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public const string _emit2StreamId = null
    return:
      type: System.String
    content.vb: Public Const _emit2StreamId As String = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit1EventType
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit1EventType
  id: _emit1EventType
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _emit1EventType
  nameWithType: FakeProjectionStateHandler._emit1EventType
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit1EventType
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _emit1EventType
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 28
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public const string _emit1EventType = null
    return:
      type: System.String
    content.vb: Public Const _emit1EventType As String = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit2EventType
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit2EventType
  id: _emit2EventType
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: _emit2EventType
  nameWithType: FakeProjectionStateHandler._emit2EventType
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler._emit2EventType
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _emit2EventType
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 29
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public const string _emit2EventType = null
    return:
      type: System.String
    content.vb: Public Const _emit2EventType As String = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.#ctor(System.String,Action{System.String,System.Object[]})
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.#ctor(System.String,Action{System.String,System.Object[]})
  id: '#ctor(System.String,Action{System.String,System.Object[]})'
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: FakeProjectionStateHandler(String, Action<String, Object[]>)
  nameWithType: FakeProjectionStateHandler.FakeProjectionStateHandler(String, Action<String, Object[]>)
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.FakeProjectionStateHandler(System.String, Action<System.String, System.Object[]>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 38
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public FakeProjectionStateHandler(string source, Action<string, object[]> logger)
    parameters:
    - id: source
      type: System.String
    - id: logger
      type: Action{System.String,System.Object[]}
    content.vb: Public Sub New(source As String, logger As Action(Of String, Object()))
  overload: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.#ctor*
  nameWithType.vb: FakeProjectionStateHandler.FakeProjectionStateHandler(String, Action(Of String, Object()))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.FakeProjectionStateHandler(System.String, Action(Of System.String, System.Object()))
  name.vb: FakeProjectionStateHandler(String, Action(Of String, Object()))
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,Action{EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder})
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,Action{EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder})
  id: '#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,Action{EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder})'
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: FakeProjectionStateHandler(Boolean, Boolean, Boolean, Boolean, Action<SourceDefinitionBuilder>)
  nameWithType: FakeProjectionStateHandler.FakeProjectionStateHandler(Boolean, Boolean, Boolean, Boolean, Action<SourceDefinitionBuilder>)
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.FakeProjectionStateHandler(System.Boolean, System.Boolean, System.Boolean, System.Boolean, Action<EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 43
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public FakeProjectionStateHandler(bool failOnInitialize = false, bool failOnLoad = false, bool failOnProcessEvent = false, bool failOnGetPartition = true, Action<SourceDefinitionBuilder> configureBuilder = null)
    parameters:
    - id: failOnInitialize
      type: System.Boolean
    - id: failOnLoad
      type: System.Boolean
    - id: failOnProcessEvent
      type: System.Boolean
    - id: failOnGetPartition
      type: System.Boolean
    - id: configureBuilder
      type: Action{EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder}
    content.vb: Public Sub New(failOnInitialize As Boolean = False, failOnLoad As Boolean = False, failOnProcessEvent As Boolean = False, failOnGetPartition As Boolean = True, configureBuilder As Action(Of SourceDefinitionBuilder) = Nothing)
  overload: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.#ctor*
  nameWithType.vb: FakeProjectionStateHandler.FakeProjectionStateHandler(Boolean, Boolean, Boolean, Boolean, Action(Of SourceDefinitionBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.FakeProjectionStateHandler(System.Boolean, System.Boolean, System.Boolean, System.Boolean, Action(Of EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder))
  name.vb: FakeProjectionStateHandler(Boolean, Boolean, Boolean, Boolean, Action(Of SourceDefinitionBuilder))
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ConfigureSourceProcessingStrategy(EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder)
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ConfigureSourceProcessingStrategy(EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder)
  id: ConfigureSourceProcessingStrategy(EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder)
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: ConfigureSourceProcessingStrategy(SourceDefinitionBuilder)
  nameWithType: FakeProjectionStateHandler.ConfigureSourceProcessingStrategy(SourceDefinitionBuilder)
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ConfigureSourceProcessingStrategy(EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ConfigureSourceProcessingStrategy
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 55
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public void ConfigureSourceProcessingStrategy(SourceDefinitionBuilder builder)
    parameters:
    - id: builder
      type: EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
    content.vb: Public Sub ConfigureSourceProcessingStrategy(builder As SourceDefinitionBuilder)
  overload: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ConfigureSourceProcessingStrategy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Load(System.String)
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Load(System.String)
  id: Load(System.String)
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: Load(String)
  nameWithType: FakeProjectionStateHandler.Load(String)
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Load(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Load
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 67
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public void Load(string state)
    parameters:
    - id: state
      type: System.String
    content.vb: Public Sub Load(state As String)
  overload: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Load*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.Load(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.LoadShared(System.String)
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.LoadShared(System.String)
  id: LoadShared(System.String)
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: LoadShared(String)
  nameWithType: FakeProjectionStateHandler.LoadShared(String)
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.LoadShared(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: LoadShared
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 75
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public void LoadShared(string state)
    parameters:
    - id: state
      type: System.String
    content.vb: Public Sub LoadShared(state As String)
  overload: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.LoadShared*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Initialize
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Initialize
  id: Initialize
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: FakeProjectionStateHandler.Initialize()
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Initialize()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Initialize
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 80
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public void Initialize()
    content.vb: Public Sub Initialize
  overload: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Initialize*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.InitializeShared
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.InitializeShared
  id: InitializeShared
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: InitializeShared()
  nameWithType: FakeProjectionStateHandler.InitializeShared()
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.InitializeShared()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InitializeShared
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 87
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public void InitializeShared()
    content.vb: Public Sub InitializeShared
  overload: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.InitializeShared*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  id: GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: GetStatePartition(CheckpointTag, String, ResolvedEvent)
  nameWithType: FakeProjectionStateHandler.GetStatePartition(CheckpointTag, String, ResolvedEvent)
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetStatePartition
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 96
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public string GetStatePartition(CheckpointTag eventPosition, string category, ResolvedEvent data)
    parameters:
    - id: eventPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: category
      type: System.String
    - id: data
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    return:
      type: System.String
    content.vb: Public Function GetStatePartition(eventPosition As CheckpointTag, category As String, data As ResolvedEvent) As String
  overload: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.GetStatePartition*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  id: TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: TransformCatalogEvent(CheckpointTag, ResolvedEvent)
  nameWithType: FakeProjectionStateHandler.TransformCatalogEvent(CheckpointTag, ResolvedEvent)
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TransformCatalogEvent
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 103
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public string TransformCatalogEvent(CheckpointTag eventPosition, ResolvedEvent data)
    parameters:
    - id: eventPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: data
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    return:
      type: System.String
    content.vb: Public Function TransformCatalogEvent(eventPosition As CheckpointTag, data As ResolvedEvent) As String
  overload: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.TransformCatalogEvent*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  id: ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: ProcessEvent(String, CheckpointTag, String, ResolvedEvent, out String, out String, out EmittedEventEnvelope[])
  nameWithType: FakeProjectionStateHandler.ProcessEvent(String, CheckpointTag, String, ResolvedEvent, out String, out String, out EmittedEventEnvelope[])
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessEvent(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, EventStore.Projections.Core.Services.Processing.ResolvedEvent, out System.String, out System.String, out EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ProcessEvent
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 108
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public bool ProcessEvent(string partition, CheckpointTag eventPosition, string category1, ResolvedEvent data, out string newState, out string newSharedState, out EmittedEventEnvelope[] emittedEvents)
    parameters:
    - id: partition
      type: System.String
    - id: eventPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: category1
      type: System.String
    - id: data
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    - id: newState
      type: System.String
    - id: newSharedState
      type: System.String
    - id: emittedEvents
      type: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
    return:
      type: System.Boolean
    content.vb: Public Function ProcessEvent(partition As String, eventPosition As CheckpointTag, category1 As String, data As ResolvedEvent, ByRef newState As String, ByRef newSharedState As String, ByRef emittedEvents As EmittedEventEnvelope()) As Boolean
  overload: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessEvent*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  nameWithType.vb: FakeProjectionStateHandler.ProcessEvent(String, CheckpointTag, String, ResolvedEvent, ByRef String, ByRef String, ByRef EmittedEventEnvelope())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessEvent(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, EventStore.Projections.Core.Services.Processing.ResolvedEvent, ByRef System.String, ByRef System.String, ByRef EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope())
  name.vb: ProcessEvent(String, CheckpointTag, String, ResolvedEvent, ByRef String, ByRef String, ByRef EmittedEventEnvelope())
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  id: ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, out EmittedEventEnvelope[])
  nameWithType: FakeProjectionStateHandler.ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, out EmittedEventEnvelope[])
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionCreated(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ResolvedEvent, out EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ProcessPartitionCreated
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 209
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public bool ProcessPartitionCreated(string partition, CheckpointTag createPosition, ResolvedEvent data, out EmittedEventEnvelope[] emittedEvents)
    parameters:
    - id: partition
      type: System.String
    - id: createPosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: data
      type: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    - id: emittedEvents
      type: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
    return:
      type: System.Boolean
    content.vb: Public Function ProcessPartitionCreated(partition As String, createPosition As CheckpointTag, data As ResolvedEvent, ByRef emittedEvents As EmittedEventEnvelope()) As Boolean
  overload: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionCreated*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  nameWithType.vb: FakeProjectionStateHandler.ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, ByRef EmittedEventEnvelope())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionCreated(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ResolvedEvent, ByRef EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope())
  name.vb: ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, ByRef EmittedEventEnvelope())
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  id: ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: ProcessPartitionDeleted(String, CheckpointTag, out String)
  nameWithType: FakeProjectionStateHandler.ProcessPartitionDeleted(String, CheckpointTag, out String)
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionDeleted(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, out System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ProcessPartitionDeleted
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 216
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public bool ProcessPartitionDeleted(string partition, CheckpointTag deletePosition, out string newState)
    parameters:
    - id: partition
      type: System.String
    - id: deletePosition
      type: EventStore.Projections.Core.Services.Processing.CheckpointTag
    - id: newState
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function ProcessPartitionDeleted(partition As String, deletePosition As CheckpointTag, ByRef newState As String) As Boolean
  overload: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionDeleted*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  nameWithType.vb: FakeProjectionStateHandler.ProcessPartitionDeleted(String, CheckpointTag, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionDeleted(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, ByRef System.String)
  name.vb: ProcessPartitionDeleted(String, CheckpointTag, ByRef String)
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.TransformStateToResult
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.TransformStateToResult
  id: TransformStateToResult
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: TransformStateToResult()
  nameWithType: FakeProjectionStateHandler.TransformStateToResult()
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.TransformStateToResult()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TransformStateToResult
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 221
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public string TransformStateToResult()
    return:
      type: System.String
    content.vb: Public Function TransformStateToResult As String
  overload: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.TransformStateToResult*
  implements:
  - EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Dispose
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Dispose
  id: Dispose
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: FakeProjectionStateHandler.Dispose()
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Dispose()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Dispose
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 226
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.GetSourceDefinition
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.GetSourceDefinition
  id: GetSourceDefinition
  parent: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler
  langs:
  - csharp
  - vb
  name: GetSourceDefinition()
  nameWithType: FakeProjectionStateHandler.GetSourceDefinition()
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.GetSourceDefinition()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetSourceDefinition
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/FakeProjectionHandler.cs
    startLine: 230
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection
  syntax:
    content: public IQuerySources GetSourceDefinition()
    return:
      type: EventStore.Projections.Core.Messages.IQuerySources
    content.vb: Public Function GetSourceDefinition As IQuerySources
  overload: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.GetSourceDefinition*
  implements:
  - EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Tests.Services.core_projection
  commentId: N:EventStore.Projections.Core.Tests.Services.core_projection
  isExternal: false
  name: EventStore.Projections.Core.Tests.Services.core_projection
  nameWithType: EventStore.Projections.Core.Tests.Services.core_projection
  fullName: EventStore.Projections.Core.Tests.Services.core_projection
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler
  commentId: T:EventStore.Projections.Core.Services.IProjectionStateHandler
  parent: EventStore.Projections.Core.Services
  isExternal: false
  name: IProjectionStateHandler
  nameWithType: IProjectionStateHandler
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler
- uid: IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
- uid: EventStore.Projections.Core.Services.ISourceDefinitionSource
  commentId: T:EventStore.Projections.Core.Services.ISourceDefinitionSource
  parent: EventStore.Projections.Core.Services
  isExternal: false
  name: ISourceDefinitionSource
  nameWithType: ISourceDefinitionSource
  fullName: EventStore.Projections.Core.Services.ISourceDefinitionSource
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<FakeProjectionStateHandler>()
  nameWithType: ProtobufExtensions.Serialize<FakeProjectionStateHandler>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of FakeProjectionStateHandler)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler)()
  name.vb: Serialize(Of FakeProjectionStateHandler)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<FakeProjectionStateHandler>
    nameWithType: ProtobufExtensions.Serialize<FakeProjectionStateHandler>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of FakeProjectionStateHandler)
    nameWithType: ProtobufExtensions.Serialize(Of FakeProjectionStateHandler)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<FakeProjectionStateHandler>()
  nameWithType: ProtobufExtensions.SerializeToArray<FakeProjectionStateHandler>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of FakeProjectionStateHandler)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler)()
  name.vb: SerializeToArray(Of FakeProjectionStateHandler)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<FakeProjectionStateHandler>
    nameWithType: ProtobufExtensions.SerializeToArray<FakeProjectionStateHandler>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of FakeProjectionStateHandler)
    nameWithType: ProtobufExtensions.SerializeToArray(Of FakeProjectionStateHandler)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services
  commentId: N:EventStore.Projections.Core.Services
  isExternal: false
  name: EventStore.Projections.Core.Services
  nameWithType: EventStore.Projections.Core.Services
  fullName: EventStore.Projections.Core.Services
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.#ctor*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.#ctor
  isExternal: false
  name: FakeProjectionStateHandler
  nameWithType: FakeProjectionStateHandler.FakeProjectionStateHandler
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.FakeProjectionStateHandler
- uid: Action{System.String,System.Object[]}
  commentId: '!:Action{System.String,System.Object[]}'
  definition: Action`2
  name: Action<String, Object[]>
  nameWithType: Action<String, Object[]>
  fullName: Action<System.String, System.Object[]>
  nameWithType.vb: Action(Of String, Object())
  fullName.vb: Action(Of System.String, System.Object())
  name.vb: Action(Of String, Object())
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`2
  isExternal: true
  name: Action<, >
  nameWithType: Action<, >
  fullName: Action<, >
  nameWithType.vb: Action(Of , )
  fullName.vb: Action(Of , )
  name.vb: Action(Of , )
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Action{EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder}
  commentId: '!:Action{EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder}'
  definition: Action`1
  name: Action<SourceDefinitionBuilder>
  nameWithType: Action<SourceDefinitionBuilder>
  fullName: Action<EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder>
  nameWithType.vb: Action(Of SourceDefinitionBuilder)
  fullName.vb: Action(Of EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder)
  name.vb: Action(Of SourceDefinitionBuilder)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
    name: SourceDefinitionBuilder
    nameWithType: SourceDefinitionBuilder
    fullName: EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
    name: SourceDefinitionBuilder
    nameWithType: SourceDefinitionBuilder
    fullName: EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ConfigureSourceProcessingStrategy*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ConfigureSourceProcessingStrategy
  isExternal: false
  name: ConfigureSourceProcessingStrategy
  nameWithType: FakeProjectionStateHandler.ConfigureSourceProcessingStrategy
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ConfigureSourceProcessingStrategy
- uid: EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
  commentId: T:EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: SourceDefinitionBuilder
  nameWithType: SourceDefinitionBuilder
  fullName: EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Load*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Load
  isExternal: false
  name: Load
  nameWithType: FakeProjectionStateHandler.Load
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Load
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.Load(System.String)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.Load(System.String)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  isExternal: true
  name: Load(String)
  nameWithType: IProjectionStateHandler.Load(String)
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.Load(System.String)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.Load(System.String)
    name: Load
    nameWithType: IProjectionStateHandler.Load
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.Load(System.String)
    name: Load
    nameWithType: IProjectionStateHandler.Load
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.LoadShared*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.LoadShared
  isExternal: false
  name: LoadShared
  nameWithType: FakeProjectionStateHandler.LoadShared
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.LoadShared
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared(System.String)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared(System.String)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  isExternal: true
  name: LoadShared(String)
  nameWithType: IProjectionStateHandler.LoadShared(String)
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared(System.String)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared(System.String)
    name: LoadShared
    nameWithType: IProjectionStateHandler.LoadShared
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared(System.String)
    name: LoadShared
    nameWithType: IProjectionStateHandler.LoadShared
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.LoadShared
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Initialize*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Initialize
  isExternal: false
  name: Initialize
  nameWithType: FakeProjectionStateHandler.Initialize
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Initialize
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  isExternal: false
  name: Initialize()
  nameWithType: IProjectionStateHandler.Initialize()
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
    name: Initialize
    nameWithType: IProjectionStateHandler.Initialize
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
    name: Initialize
    nameWithType: IProjectionStateHandler.Initialize
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.InitializeShared*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.InitializeShared
  isExternal: false
  name: InitializeShared
  nameWithType: FakeProjectionStateHandler.InitializeShared
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.InitializeShared
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  isExternal: false
  name: InitializeShared()
  nameWithType: IProjectionStateHandler.InitializeShared()
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
    name: InitializeShared
    nameWithType: IProjectionStateHandler.InitializeShared
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
    name: InitializeShared
    nameWithType: IProjectionStateHandler.InitializeShared
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.InitializeShared
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.GetStatePartition*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.GetStatePartition
  isExternal: false
  name: GetStatePartition
  nameWithType: FakeProjectionStateHandler.GetStatePartition
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.GetStatePartition
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  isExternal: true
  name: GetStatePartition(CheckpointTag, String, ResolvedEvent)
  nameWithType: IProjectionStateHandler.GetStatePartition(CheckpointTag, String, ResolvedEvent)
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
    name: GetStatePartition
    nameWithType: IProjectionStateHandler.GetStatePartition
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition(EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
    name: GetStatePartition
    nameWithType: IProjectionStateHandler.GetStatePartition
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.GetStatePartition
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
  commentId: T:EventStore.Projections.Core.Services.Processing.CheckpointTag
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: CheckpointTag
  nameWithType: CheckpointTag
  fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
- uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  commentId: T:EventStore.Projections.Core.Services.Processing.ResolvedEvent
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.TransformCatalogEvent*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.TransformCatalogEvent
  isExternal: false
  name: TransformCatalogEvent
  nameWithType: FakeProjectionStateHandler.TransformCatalogEvent
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.TransformCatalogEvent
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  isExternal: false
  name: TransformCatalogEvent(CheckpointTag, ResolvedEvent)
  nameWithType: IProjectionStateHandler.TransformCatalogEvent(CheckpointTag, ResolvedEvent)
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ResolvedEvent)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
    name: TransformCatalogEvent
    nameWithType: IProjectionStateHandler.TransformCatalogEvent
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent(EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent)
    name: TransformCatalogEvent
    nameWithType: IProjectionStateHandler.TransformCatalogEvent
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformCatalogEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessEvent*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessEvent
  isExternal: false
  name: ProcessEvent
  nameWithType: FakeProjectionStateHandler.ProcessEvent
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessEvent
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  isExternal: true
  name: ProcessEvent(String, CheckpointTag, String, ResolvedEvent, String, String, EmittedEventEnvelope[])
  nameWithType: IProjectionStateHandler.ProcessEvent(String, CheckpointTag, String, ResolvedEvent, String, String, EmittedEventEnvelope[])
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, EventStore.Projections.Core.Services.Processing.ResolvedEvent, System.String, System.String, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  nameWithType.vb: IProjectionStateHandler.ProcessEvent(String, CheckpointTag, String, ResolvedEvent, String, String, EmittedEventEnvelope())
  fullName.vb: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String, EventStore.Projections.Core.Services.Processing.ResolvedEvent, System.String, System.String, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope())
  name.vb: ProcessEvent(String, CheckpointTag, String, ResolvedEvent, String, String, EmittedEventEnvelope())
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
    name: ProcessEvent
    nameWithType: IProjectionStateHandler.ProcessEvent
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String,EventStore.Projections.Core.Services.Processing.ResolvedEvent,System.String@,System.String@,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
    name: ProcessEvent
    nameWithType: IProjectionStateHandler.ProcessEvent
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  name: EmittedEventEnvelope[]
  nameWithType: EmittedEventEnvelope[]
  fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]
  nameWithType.vb: EmittedEventEnvelope()
  fullName.vb: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope()
  name.vb: EmittedEventEnvelope()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionCreated*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionCreated
  isExternal: false
  name: ProcessPartitionCreated
  nameWithType: FakeProjectionStateHandler.ProcessPartitionCreated
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionCreated
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  isExternal: true
  name: ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, EmittedEventEnvelope[])
  nameWithType: IProjectionStateHandler.ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, EmittedEventEnvelope[])
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ResolvedEvent, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[])
  nameWithType.vb: IProjectionStateHandler.ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, EmittedEventEnvelope())
  fullName.vb: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, EventStore.Projections.Core.Services.Processing.ResolvedEvent, EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope())
  name.vb: ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, EmittedEventEnvelope())
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
    name: ProcessPartitionCreated
    nameWithType: IProjectionStateHandler.ProcessPartitionCreated
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,EventStore.Projections.Core.Services.Processing.ResolvedEvent,EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope[]@)
    name: ProcessPartitionCreated
    nameWithType: IProjectionStateHandler.ProcessPartitionCreated
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.Projections.Core.Services.Processing.ResolvedEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
    name: EmittedEventEnvelope
    nameWithType: EmittedEventEnvelope
    fullName: EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionDeleted*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionDeleted
  isExternal: false
  name: ProcessPartitionDeleted
  nameWithType: FakeProjectionStateHandler.ProcessPartitionDeleted
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.ProcessPartitionDeleted
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  isExternal: true
  name: ProcessPartitionDeleted(String, CheckpointTag, String)
  nameWithType: IProjectionStateHandler.ProcessPartitionDeleted(String, CheckpointTag, String)
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted(System.String, EventStore.Projections.Core.Services.Processing.CheckpointTag, System.String)
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
    name: ProcessPartitionDeleted
    nameWithType: IProjectionStateHandler.ProcessPartitionDeleted
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted(System.String,EventStore.Projections.Core.Services.Processing.CheckpointTag,System.String@)
    name: ProcessPartitionDeleted
    nameWithType: IProjectionStateHandler.ProcessPartitionDeleted
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.ProcessPartitionDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.Projections.Core.Services.Processing.CheckpointTag
    name: CheckpointTag
    nameWithType: CheckpointTag
    fullName: EventStore.Projections.Core.Services.Processing.CheckpointTag
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.TransformStateToResult*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.TransformStateToResult
  isExternal: false
  name: TransformStateToResult
  nameWithType: FakeProjectionStateHandler.TransformStateToResult
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.TransformStateToResult
- uid: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
  commentId: M:EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
  parent: EventStore.Projections.Core.Services.IProjectionStateHandler
  isExternal: false
  name: TransformStateToResult()
  nameWithType: IProjectionStateHandler.TransformStateToResult()
  fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
    name: TransformStateToResult
    nameWithType: IProjectionStateHandler.TransformStateToResult
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
    name: TransformStateToResult
    nameWithType: IProjectionStateHandler.TransformStateToResult
    fullName: EventStore.Projections.Core.Services.IProjectionStateHandler.TransformStateToResult
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Dispose*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Dispose
  isExternal: false
  name: Dispose
  nameWithType: FakeProjectionStateHandler.Dispose
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.Dispose
- uid: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.GetSourceDefinition*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.GetSourceDefinition
  isExternal: false
  name: GetSourceDefinition
  nameWithType: FakeProjectionStateHandler.GetSourceDefinition
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.FakeProjectionStateHandler.GetSourceDefinition
- uid: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
  commentId: M:EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
  parent: EventStore.Projections.Core.Services.ISourceDefinitionSource
  isExternal: false
  name: GetSourceDefinition()
  nameWithType: ISourceDefinitionSource.GetSourceDefinition()
  fullName: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition()
  spec.csharp:
  - uid: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
    name: GetSourceDefinition
    nameWithType: ISourceDefinitionSource.GetSourceDefinition
    fullName: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
    name: GetSourceDefinition
    nameWithType: ISourceDefinitionSource.GetSourceDefinition
    fullName: EventStore.Projections.Core.Services.ISourceDefinitionSource.GetSourceDefinition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Messages.IQuerySources
  commentId: T:EventStore.Projections.Core.Messages.IQuerySources
  parent: EventStore.Projections.Core.Messages
  isExternal: false
  name: IQuerySources
  nameWithType: IQuerySources
  fullName: EventStore.Projections.Core.Messages.IQuerySources
- uid: EventStore.Projections.Core.Messages
  commentId: N:EventStore.Projections.Core.Messages
  isExternal: false
  name: EventStore.Projections.Core.Messages
  nameWithType: EventStore.Projections.Core.Messages
  fullName: EventStore.Projections.Core.Messages

### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint
  commentId: T:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint
  id: when_starting_with_prerecorded_events_before_the_last_checkpoint
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream
  children:
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.Given
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.stops_reading_prerecorded_events_after_found_checkpoint
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.When
  langs:
  - csharp
  - vb
  name: when_starting_with_prerecorded_events_before_the_last_checkpoint
  nameWithType: when_starting_with_prerecorded_events_before_the_last_checkpoint
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/checkpoint_manager/multi_stream/when_starting_with_prerecorded_events_before_the_last_checkpoint.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: when_starting_with_prerecorded_events_before_the_last_checkpoint
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/checkpoint_manager/multi_stream/when_starting_with_prerecorded_events_before_the_last_checkpoint.cs
    startLine: 7
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream
  syntax:
    content: 'public class when_starting_with_prerecorded_events_before_the_last_checkpoint : TestFixtureWithMultiStreamCheckpointManager, IHandle<ClientMessage.ReadStreamEventsBackward>, IHandle<ClientMessage.ReadStreamEventsForward>, IHandle<ClientMessage.ReadAllEventsForward>, IHandle<ClientMessage.WriteEvents>, IHandle<ClientMessage.TransactionStart>, IHandle<ClientMessage.TransactionWrite>, IHandle<ClientMessage.TransactionCommit>, IHandle<ClientMessage.DeleteStream>, IHandle<ProjectionCoreServiceMessage.CoreTick>, IHandle<ReaderCoreServiceMessage.ReaderTick>'
    content.vb: >-
      Public Class when_starting_with_prerecorded_events_before_the_last_checkpoint

          Inherits TestFixtureWithMultiStreamCheckpointManager

          Implements IHandle(Of ClientMessage.ReadStreamEventsBackward), IHandle(Of ClientMessage.ReadStreamEventsForward), IHandle(Of ClientMessage.ReadAllEventsForward), IHandle(Of ClientMessage.WriteEvents), IHandle(Of ClientMessage.TransactionStart), IHandle(Of ClientMessage.TransactionWrite), IHandle(Of ClientMessage.TransactionCommit), IHandle(Of ClientMessage.DeleteStream), IHandle(Of ProjectionCoreServiceMessage.CoreTick), IHandle(Of ReaderCoreServiceMessage.ReaderTick)
  inheritance:
  - System.Object
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  - EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadAllEventsForward}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.WriteEvents}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.TransactionStart}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.TransactionWrite}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.TransactionCommit}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.DeleteStream}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick}
  - EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick}
  inheritedMembers:
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager._streams
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager.GivenCheckpointManager
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._manager
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._projection
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._config
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointHandledThreshold
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointUnhandledBytesThreshold
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._pendingEventsThreshold
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._maxWriteBatchLength
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._emitEventEnabled
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointsEnabled
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._trackEmittedStreams
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointAfterMs
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._maximumAllowedWritesInFlight
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._producesResults
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._definesFold
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._projectionCorrelationId
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._createTempStreams
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._stopOnEof
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._namingBuilder
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointWriter
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointReader
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._projectionName
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._projectionVersion
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager.setup
  - EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents._subscriptionDispatcher
  - EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.AwakeService
  - EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Given1
  - EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.SetUp
  - EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick)
  - EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Handle(EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick)
  - EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.TicksAreHandledImmediately
  - EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.CreateWriteEvent(System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{Guid})
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents._listEventsHandler
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents._all
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents._deletedStreams
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents._activeTransactions
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ExistingStreamMetadata(System.String,System.String)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ExistingEvent(System.String,System.String,System.String,System.String,System.Boolean)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllReadsTimeOut
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.EnableReadAll
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ReadsBackwardQueuesUp
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.CompleteOneReadBackwards
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.NoStream(System.String)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.NoOtherStreams
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.DeletedStream(System.String)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesSucceed
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesToSucceed(System.String)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesQueueUp
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.OneWriteCompletes
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.CompleteWriteWithResult(EventStore.Core.Messages.OperationResult)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWriteComplete
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.setup1
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.WriteEvents)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.DeleteStream)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadAllEventsForward)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionStart)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionWrite)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionCommit)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.GetTfPos(System.String,System.Int64)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEvent(System.String,System.String,System.String,System.Int32)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson``1(System.String,{T},System.String,System.Int32)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventIs(System.String,System.String,System.String,System.Int32)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTail(System.String,System.String[])
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTailWithLinks(System.String,System.String[])
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamContains(System.String,System.String[])
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEvent(System.String,System.Int64,System.String)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEmptyStream(System.String)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEmptyOrNoStream(System.String)
  - EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.DumpStream(System.String)
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._bus
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._streamDispatcher
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._writeDispatcher
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._readDispatcher
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._consumer
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._ioDispatcher
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._queue
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._otherQueues
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._timeProvider
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.Envelope
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.HandledMessages
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.setup0
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.GiveInputQueue
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.GetInputQueue
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.DisableTimer
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EnableTimer
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.WhenLoop
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.WhenLoop(IEnumerable{`0})
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException``1(Func{`0},{T})
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.PreWhen
  - EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.Yield
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.Given
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.Given
  id: Given
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint
  langs:
  - csharp
  - vb
  name: Given()
  nameWithType: when_starting_with_prerecorded_events_before_the_last_checkpoint.Given()
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.Given()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/checkpoint_manager/multi_stream/when_starting_with_prerecorded_events_before_the_last_checkpoint.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Given
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/checkpoint_manager/multi_stream/when_starting_with_prerecorded_events_before_the_last_checkpoint.cs
    startLine: 11
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream
  syntax:
    content: protected override void Given()
    content.vb: Protected Overrides Sub Given
  overridden: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager.Given
  overload: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.Given*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.When
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.When
  id: When
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint
  langs:
  - csharp
  - vb
  name: When()
  nameWithType: when_starting_with_prerecorded_events_before_the_last_checkpoint.When()
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.When()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/checkpoint_manager/multi_stream/when_starting_with_prerecorded_events_before_the_last_checkpoint.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: When
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/checkpoint_manager/multi_stream/when_starting_with_prerecorded_events_before_the_last_checkpoint.cs
    startLine: 39
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream
  syntax:
    content: protected override void When()
    content.vb: Protected Overrides Sub When
  overridden: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager.When
  overload: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.When*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.stops_reading_prerecorded_events_after_found_checkpoint
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.stops_reading_prerecorded_events_after_found_checkpoint
  id: stops_reading_prerecorded_events_after_found_checkpoint
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint
  langs:
  - csharp
  - vb
  name: stops_reading_prerecorded_events_after_found_checkpoint()
  nameWithType: when_starting_with_prerecorded_events_before_the_last_checkpoint.stops_reading_prerecorded_events_after_found_checkpoint()
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.stops_reading_prerecorded_events_after_found_checkpoint()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/core_projection/checkpoint_manager/multi_stream/when_starting_with_prerecorded_events_before_the_last_checkpoint.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: stops_reading_prerecorded_events_after_found_checkpoint
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/core_projection/checkpoint_manager/multi_stream/when_starting_with_prerecorded_events_before_the_last_checkpoint.cs
    startLine: 50
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream
  syntax:
    content: public void stops_reading_prerecorded_events_after_found_checkpoint()
    content.vb: Public Sub stops_reading_prerecorded_events_after_found_checkpoint
  overload: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.stops_reading_prerecorded_events_after_found_checkpoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream
  commentId: N:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream
  isExternal: false
  name: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream
  nameWithType: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  commentId: T:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: TestFixtureWithReadWriteDispatchers
  nameWithType: TestFixtureWithReadWriteDispatchers
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  commentId: T:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: TestFixtureWithExistingEvents
  nameWithType: TestFixtureWithExistingEvents
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
- uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents
  commentId: T:EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents
  parent: EventStore.Projections.Core.Tests.Services.core_projection
  isExternal: false
  name: TestFixtureWithExistingEvents
  nameWithType: TestFixtureWithExistingEvents
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  commentId: T:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager
  isExternal: false
  name: TestFixtureWithCoreProjectionCheckpointManager
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager
  commentId: T:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream
  isExternal: false
  name: TestFixtureWithMultiStreamCheckpointManager
  nameWithType: TestFixtureWithMultiStreamCheckpointManager
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ClientMessage.ReadStreamEventsBackward>
  nameWithType: IHandle<ClientMessage.ReadStreamEventsBackward>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward>
  nameWithType.vb: IHandle(Of ClientMessage.ReadStreamEventsBackward)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward)
  name.vb: IHandle(Of ClientMessage.ReadStreamEventsBackward)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
    name: ClientMessage.ReadStreamEventsBackward
    nameWithType: ClientMessage.ReadStreamEventsBackward
    fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
    name: ClientMessage.ReadStreamEventsBackward
    nameWithType: ClientMessage.ReadStreamEventsBackward
    fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ClientMessage.ReadStreamEventsForward>
  nameWithType: IHandle<ClientMessage.ReadStreamEventsForward>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward>
  nameWithType.vb: IHandle(Of ClientMessage.ReadStreamEventsForward)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward)
  name.vb: IHandle(Of ClientMessage.ReadStreamEventsForward)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward
    name: ClientMessage.ReadStreamEventsForward
    nameWithType: ClientMessage.ReadStreamEventsForward
    fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward
    name: ClientMessage.ReadStreamEventsForward
    nameWithType: ClientMessage.ReadStreamEventsForward
    fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadAllEventsForward}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.ReadAllEventsForward}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ClientMessage.ReadAllEventsForward>
  nameWithType: IHandle<ClientMessage.ReadAllEventsForward>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.ReadAllEventsForward>
  nameWithType.vb: IHandle(Of ClientMessage.ReadAllEventsForward)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.ReadAllEventsForward)
  name.vb: IHandle(Of ClientMessage.ReadAllEventsForward)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.ClientMessage.ReadAllEventsForward
    name: ClientMessage.ReadAllEventsForward
    nameWithType: ClientMessage.ReadAllEventsForward
    fullName: EventStore.Core.Messages.ClientMessage.ReadAllEventsForward
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.ClientMessage.ReadAllEventsForward
    name: ClientMessage.ReadAllEventsForward
    nameWithType: ClientMessage.ReadAllEventsForward
    fullName: EventStore.Core.Messages.ClientMessage.ReadAllEventsForward
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.WriteEvents}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.WriteEvents}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ClientMessage.WriteEvents>
  nameWithType: IHandle<ClientMessage.WriteEvents>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.WriteEvents>
  nameWithType.vb: IHandle(Of ClientMessage.WriteEvents)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.WriteEvents)
  name.vb: IHandle(Of ClientMessage.WriteEvents)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.ClientMessage.WriteEvents
    name: ClientMessage.WriteEvents
    nameWithType: ClientMessage.WriteEvents
    fullName: EventStore.Core.Messages.ClientMessage.WriteEvents
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.ClientMessage.WriteEvents
    name: ClientMessage.WriteEvents
    nameWithType: ClientMessage.WriteEvents
    fullName: EventStore.Core.Messages.ClientMessage.WriteEvents
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.TransactionStart}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.TransactionStart}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ClientMessage.TransactionStart>
  nameWithType: IHandle<ClientMessage.TransactionStart>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.TransactionStart>
  nameWithType.vb: IHandle(Of ClientMessage.TransactionStart)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.TransactionStart)
  name.vb: IHandle(Of ClientMessage.TransactionStart)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.ClientMessage.TransactionStart
    name: ClientMessage.TransactionStart
    nameWithType: ClientMessage.TransactionStart
    fullName: EventStore.Core.Messages.ClientMessage.TransactionStart
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.ClientMessage.TransactionStart
    name: ClientMessage.TransactionStart
    nameWithType: ClientMessage.TransactionStart
    fullName: EventStore.Core.Messages.ClientMessage.TransactionStart
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.TransactionWrite}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.TransactionWrite}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ClientMessage.TransactionWrite>
  nameWithType: IHandle<ClientMessage.TransactionWrite>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.TransactionWrite>
  nameWithType.vb: IHandle(Of ClientMessage.TransactionWrite)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.TransactionWrite)
  name.vb: IHandle(Of ClientMessage.TransactionWrite)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.ClientMessage.TransactionWrite
    name: ClientMessage.TransactionWrite
    nameWithType: ClientMessage.TransactionWrite
    fullName: EventStore.Core.Messages.ClientMessage.TransactionWrite
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.ClientMessage.TransactionWrite
    name: ClientMessage.TransactionWrite
    nameWithType: ClientMessage.TransactionWrite
    fullName: EventStore.Core.Messages.ClientMessage.TransactionWrite
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.TransactionCommit}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.TransactionCommit}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ClientMessage.TransactionCommit>
  nameWithType: IHandle<ClientMessage.TransactionCommit>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.TransactionCommit>
  nameWithType.vb: IHandle(Of ClientMessage.TransactionCommit)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.TransactionCommit)
  name.vb: IHandle(Of ClientMessage.TransactionCommit)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.ClientMessage.TransactionCommit
    name: ClientMessage.TransactionCommit
    nameWithType: ClientMessage.TransactionCommit
    fullName: EventStore.Core.Messages.ClientMessage.TransactionCommit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.ClientMessage.TransactionCommit
    name: ClientMessage.TransactionCommit
    nameWithType: ClientMessage.TransactionCommit
    fullName: EventStore.Core.Messages.ClientMessage.TransactionCommit
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.DeleteStream}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.ClientMessage.DeleteStream}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ClientMessage.DeleteStream>
  nameWithType: IHandle<ClientMessage.DeleteStream>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.ClientMessage.DeleteStream>
  nameWithType.vb: IHandle(Of ClientMessage.DeleteStream)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.ClientMessage.DeleteStream)
  name.vb: IHandle(Of ClientMessage.DeleteStream)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.ClientMessage.DeleteStream
    name: ClientMessage.DeleteStream
    nameWithType: ClientMessage.DeleteStream
    fullName: EventStore.Core.Messages.ClientMessage.DeleteStream
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.ClientMessage.DeleteStream
    name: ClientMessage.DeleteStream
    nameWithType: ClientMessage.DeleteStream
    fullName: EventStore.Core.Messages.ClientMessage.DeleteStream
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ProjectionCoreServiceMessage.CoreTick>
  nameWithType: IHandle<ProjectionCoreServiceMessage.CoreTick>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick>
  nameWithType.vb: IHandle(Of ProjectionCoreServiceMessage.CoreTick)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick)
  name.vb: IHandle(Of ProjectionCoreServiceMessage.CoreTick)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick
    name: ProjectionCoreServiceMessage.CoreTick
    nameWithType: ProjectionCoreServiceMessage.CoreTick
    fullName: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick
    name: ProjectionCoreServiceMessage.CoreTick
    nameWithType: ProjectionCoreServiceMessage.CoreTick
    fullName: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<ReaderCoreServiceMessage.ReaderTick>
  nameWithType: IHandle<ReaderCoreServiceMessage.ReaderTick>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick>
  nameWithType.vb: IHandle(Of ReaderCoreServiceMessage.ReaderTick)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick)
  name.vb: IHandle(Of ReaderCoreServiceMessage.ReaderTick)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick
    name: ReaderCoreServiceMessage.ReaderTick
    nameWithType: ReaderCoreServiceMessage.ReaderTick
    fullName: EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick
    name: ReaderCoreServiceMessage.ReaderTick
    nameWithType: ReaderCoreServiceMessage.ReaderTick
    fullName: EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager._streams
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager._streams
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager
  isExternal: false
  name: _streams
  nameWithType: TestFixtureWithMultiStreamCheckpointManager._streams
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager._streams
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager.GivenCheckpointManager
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager.GivenCheckpointManager
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager
  isExternal: false
  name: GivenCheckpointManager()
  nameWithType: TestFixtureWithMultiStreamCheckpointManager.GivenCheckpointManager()
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager.GivenCheckpointManager()
  spec.csharp:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager.GivenCheckpointManager
    name: GivenCheckpointManager
    nameWithType: TestFixtureWithMultiStreamCheckpointManager.GivenCheckpointManager
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager.GivenCheckpointManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager.GivenCheckpointManager
    name: GivenCheckpointManager
    nameWithType: TestFixtureWithMultiStreamCheckpointManager.GivenCheckpointManager
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager.GivenCheckpointManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._manager
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._manager
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _manager
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._manager
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._manager
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._projection
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._projection
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _projection
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._projection
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._projection
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._config
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._config
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _config
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._config
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._config
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointHandledThreshold
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointHandledThreshold
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _checkpointHandledThreshold
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._checkpointHandledThreshold
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointHandledThreshold
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointUnhandledBytesThreshold
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointUnhandledBytesThreshold
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _checkpointUnhandledBytesThreshold
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._checkpointUnhandledBytesThreshold
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointUnhandledBytesThreshold
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._pendingEventsThreshold
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._pendingEventsThreshold
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _pendingEventsThreshold
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._pendingEventsThreshold
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._pendingEventsThreshold
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._maxWriteBatchLength
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._maxWriteBatchLength
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _maxWriteBatchLength
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._maxWriteBatchLength
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._maxWriteBatchLength
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._emitEventEnabled
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._emitEventEnabled
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _emitEventEnabled
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._emitEventEnabled
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._emitEventEnabled
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointsEnabled
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointsEnabled
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _checkpointsEnabled
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._checkpointsEnabled
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointsEnabled
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._trackEmittedStreams
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._trackEmittedStreams
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _trackEmittedStreams
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._trackEmittedStreams
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._trackEmittedStreams
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointAfterMs
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointAfterMs
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _checkpointAfterMs
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._checkpointAfterMs
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointAfterMs
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._maximumAllowedWritesInFlight
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._maximumAllowedWritesInFlight
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _maximumAllowedWritesInFlight
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._maximumAllowedWritesInFlight
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._maximumAllowedWritesInFlight
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._producesResults
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._producesResults
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _producesResults
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._producesResults
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._producesResults
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._definesFold
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._definesFold
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _definesFold
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._definesFold
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._definesFold
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._projectionCorrelationId
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._projectionCorrelationId
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _projectionCorrelationId
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._projectionCorrelationId
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._projectionCorrelationId
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._createTempStreams
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._createTempStreams
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _createTempStreams
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._createTempStreams
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._createTempStreams
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._stopOnEof
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._stopOnEof
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _stopOnEof
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._stopOnEof
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._stopOnEof
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._namingBuilder
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._namingBuilder
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _namingBuilder
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._namingBuilder
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._namingBuilder
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointWriter
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointWriter
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _checkpointWriter
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._checkpointWriter
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointWriter
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointReader
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointReader
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _checkpointReader
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._checkpointReader
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._checkpointReader
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._projectionName
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._projectionName
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _projectionName
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._projectionName
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._projectionName
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._projectionVersion
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._projectionVersion
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: _projectionVersion
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager._projectionVersion
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager._projectionVersion
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager.setup
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager.setup
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: setup()
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager.setup()
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager.setup()
  spec.csharp:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager.setup
    name: setup
    nameWithType: TestFixtureWithCoreProjectionCheckpointManager.setup
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager.setup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager.setup
    name: setup
    nameWithType: TestFixtureWithCoreProjectionCheckpointManager.setup
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager.setup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents._subscriptionDispatcher
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents._subscriptionDispatcher
  parent: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents
  isExternal: false
  name: _subscriptionDispatcher
  nameWithType: TestFixtureWithExistingEvents._subscriptionDispatcher
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents._subscriptionDispatcher
- uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.AwakeService
  commentId: F:EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.AwakeService
  parent: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents
  isExternal: false
  name: AwakeService
  nameWithType: TestFixtureWithExistingEvents.AwakeService
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.AwakeService
- uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Given1
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Given1
  parent: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents
  isExternal: false
  name: Given1()
  nameWithType: TestFixtureWithExistingEvents.Given1()
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Given1()
  spec.csharp:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Given1
    name: Given1
    nameWithType: TestFixtureWithExistingEvents.Given1
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Given1
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Given1
    name: Given1
    nameWithType: TestFixtureWithExistingEvents.Given1
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Given1
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.SetUp
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.SetUp
  parent: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents
  isExternal: false
  name: SetUp()
  nameWithType: TestFixtureWithExistingEvents.SetUp()
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.SetUp()
  spec.csharp:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.SetUp
    name: SetUp
    nameWithType: TestFixtureWithExistingEvents.SetUp
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.SetUp
    name: SetUp
    nameWithType: TestFixtureWithExistingEvents.SetUp
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick)
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick)
  parent: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents
  isExternal: false
  name: Handle(ProjectionCoreServiceMessage.CoreTick)
  nameWithType: TestFixtureWithExistingEvents.Handle(ProjectionCoreServiceMessage.CoreTick)
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick)
  spec.csharp:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick
    name: ProjectionCoreServiceMessage.CoreTick
    nameWithType: ProjectionCoreServiceMessage.CoreTick
    fullName: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Handle(EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick
    name: ProjectionCoreServiceMessage.CoreTick
    nameWithType: ProjectionCoreServiceMessage.CoreTick
    fullName: EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Handle(EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick)
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Handle(EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick)
  parent: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents
  isExternal: false
  name: Handle(ReaderCoreServiceMessage.ReaderTick)
  nameWithType: TestFixtureWithExistingEvents.Handle(ReaderCoreServiceMessage.ReaderTick)
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Handle(EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick)
  spec.csharp:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Handle(EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick
    name: ReaderCoreServiceMessage.ReaderTick
    nameWithType: ReaderCoreServiceMessage.ReaderTick
    fullName: EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Handle(EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick
    name: ReaderCoreServiceMessage.ReaderTick
    nameWithType: ReaderCoreServiceMessage.ReaderTick
    fullName: EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.TicksAreHandledImmediately
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.TicksAreHandledImmediately
  parent: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents
  isExternal: false
  name: TicksAreHandledImmediately()
  nameWithType: TestFixtureWithExistingEvents.TicksAreHandledImmediately()
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.TicksAreHandledImmediately()
  spec.csharp:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.TicksAreHandledImmediately
    name: TicksAreHandledImmediately
    nameWithType: TestFixtureWithExistingEvents.TicksAreHandledImmediately
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.TicksAreHandledImmediately
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.TicksAreHandledImmediately
    name: TicksAreHandledImmediately
    nameWithType: TestFixtureWithExistingEvents.TicksAreHandledImmediately
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.TicksAreHandledImmediately
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.CreateWriteEvent(System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{Guid})
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.CreateWriteEvent(System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{Guid})
  parent: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents
  isExternal: true
  name: CreateWriteEvent(String, String, String, String, Boolean, Nullable<Guid>)
  nameWithType: TestFixtureWithExistingEvents.CreateWriteEvent(String, String, String, String, Boolean, Nullable<Guid>)
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.CreateWriteEvent(System.String, System.String, System.String, System.String, System.Boolean, System.Nullable<Guid>)
  nameWithType.vb: TestFixtureWithExistingEvents.CreateWriteEvent(String, String, String, String, Boolean, Nullable(Of Guid))
  fullName.vb: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.CreateWriteEvent(System.String, System.String, System.String, System.String, System.Boolean, System.Nullable(Of Guid))
  name.vb: CreateWriteEvent(String, String, String, String, Boolean, Nullable(Of Guid))
  spec.csharp:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.CreateWriteEvent(System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{Guid})
    name: CreateWriteEvent
    nameWithType: TestFixtureWithExistingEvents.CreateWriteEvent
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.CreateWriteEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.CreateWriteEvent(System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{Guid})
    name: CreateWriteEvent
    nameWithType: TestFixtureWithExistingEvents.CreateWriteEvent
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.TestFixtureWithExistingEvents.CreateWriteEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents._listEventsHandler
  commentId: F:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents._listEventsHandler
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: _listEventsHandler
  nameWithType: TestFixtureWithExistingEvents._listEventsHandler
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents._listEventsHandler
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents._all
  commentId: F:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents._all
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: _all
  nameWithType: TestFixtureWithExistingEvents._all
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents._all
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents._deletedStreams
  commentId: F:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents._deletedStreams
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: _deletedStreams
  nameWithType: TestFixtureWithExistingEvents._deletedStreams
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents._deletedStreams
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents._activeTransactions
  commentId: F:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents._activeTransactions
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: _activeTransactions
  nameWithType: TestFixtureWithExistingEvents._activeTransactions
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents._activeTransactions
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ExistingStreamMetadata(System.String,System.String)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ExistingStreamMetadata(System.String,System.String)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: true
  name: ExistingStreamMetadata(String, String)
  nameWithType: TestFixtureWithExistingEvents.ExistingStreamMetadata(String, String)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ExistingStreamMetadata(System.String, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ExistingStreamMetadata(System.String,System.String)
    name: ExistingStreamMetadata
    nameWithType: TestFixtureWithExistingEvents.ExistingStreamMetadata
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ExistingStreamMetadata
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ExistingStreamMetadata(System.String,System.String)
    name: ExistingStreamMetadata
    nameWithType: TestFixtureWithExistingEvents.ExistingStreamMetadata
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ExistingStreamMetadata
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ExistingEvent(System.String,System.String,System.String,System.String,System.Boolean)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ExistingEvent(System.String,System.String,System.String,System.String,System.Boolean)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: true
  name: ExistingEvent(String, String, String, String, Boolean)
  nameWithType: TestFixtureWithExistingEvents.ExistingEvent(String, String, String, String, Boolean)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ExistingEvent(System.String, System.String, System.String, System.String, System.Boolean)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ExistingEvent(System.String,System.String,System.String,System.String,System.Boolean)
    name: ExistingEvent
    nameWithType: TestFixtureWithExistingEvents.ExistingEvent
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ExistingEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ExistingEvent(System.String,System.String,System.String,System.String,System.Boolean)
    name: ExistingEvent
    nameWithType: TestFixtureWithExistingEvents.ExistingEvent
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ExistingEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllReadsTimeOut
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllReadsTimeOut
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: AllReadsTimeOut()
  nameWithType: TestFixtureWithExistingEvents.AllReadsTimeOut()
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllReadsTimeOut()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllReadsTimeOut
    name: AllReadsTimeOut
    nameWithType: TestFixtureWithExistingEvents.AllReadsTimeOut
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllReadsTimeOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllReadsTimeOut
    name: AllReadsTimeOut
    nameWithType: TestFixtureWithExistingEvents.AllReadsTimeOut
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllReadsTimeOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.EnableReadAll
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.EnableReadAll
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: EnableReadAll()
  nameWithType: TestFixtureWithExistingEvents.EnableReadAll()
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.EnableReadAll()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.EnableReadAll
    name: EnableReadAll
    nameWithType: TestFixtureWithExistingEvents.EnableReadAll
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.EnableReadAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.EnableReadAll
    name: EnableReadAll
    nameWithType: TestFixtureWithExistingEvents.EnableReadAll
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.EnableReadAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ReadsBackwardQueuesUp
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ReadsBackwardQueuesUp
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: ReadsBackwardQueuesUp()
  nameWithType: TestFixtureWithExistingEvents.ReadsBackwardQueuesUp()
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ReadsBackwardQueuesUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ReadsBackwardQueuesUp
    name: ReadsBackwardQueuesUp
    nameWithType: TestFixtureWithExistingEvents.ReadsBackwardQueuesUp
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ReadsBackwardQueuesUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ReadsBackwardQueuesUp
    name: ReadsBackwardQueuesUp
    nameWithType: TestFixtureWithExistingEvents.ReadsBackwardQueuesUp
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.ReadsBackwardQueuesUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.CompleteOneReadBackwards
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.CompleteOneReadBackwards
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: CompleteOneReadBackwards()
  nameWithType: TestFixtureWithExistingEvents.CompleteOneReadBackwards()
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.CompleteOneReadBackwards()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.CompleteOneReadBackwards
    name: CompleteOneReadBackwards
    nameWithType: TestFixtureWithExistingEvents.CompleteOneReadBackwards
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.CompleteOneReadBackwards
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.CompleteOneReadBackwards
    name: CompleteOneReadBackwards
    nameWithType: TestFixtureWithExistingEvents.CompleteOneReadBackwards
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.CompleteOneReadBackwards
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.NoStream(System.String)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.NoStream(System.String)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: true
  name: NoStream(String)
  nameWithType: TestFixtureWithExistingEvents.NoStream(String)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.NoStream(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.NoStream(System.String)
    name: NoStream
    nameWithType: TestFixtureWithExistingEvents.NoStream
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.NoStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.NoStream(System.String)
    name: NoStream
    nameWithType: TestFixtureWithExistingEvents.NoStream
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.NoStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.NoOtherStreams
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.NoOtherStreams
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: NoOtherStreams()
  nameWithType: TestFixtureWithExistingEvents.NoOtherStreams()
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.NoOtherStreams()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.NoOtherStreams
    name: NoOtherStreams
    nameWithType: TestFixtureWithExistingEvents.NoOtherStreams
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.NoOtherStreams
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.NoOtherStreams
    name: NoOtherStreams
    nameWithType: TestFixtureWithExistingEvents.NoOtherStreams
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.NoOtherStreams
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.DeletedStream(System.String)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.DeletedStream(System.String)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: true
  name: DeletedStream(String)
  nameWithType: TestFixtureWithExistingEvents.DeletedStream(String)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.DeletedStream(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.DeletedStream(System.String)
    name: DeletedStream
    nameWithType: TestFixtureWithExistingEvents.DeletedStream
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.DeletedStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.DeletedStream(System.String)
    name: DeletedStream
    nameWithType: TestFixtureWithExistingEvents.DeletedStream
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.DeletedStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesSucceed
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesSucceed
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: AllWritesSucceed()
  nameWithType: TestFixtureWithExistingEvents.AllWritesSucceed()
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesSucceed()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesSucceed
    name: AllWritesSucceed
    nameWithType: TestFixtureWithExistingEvents.AllWritesSucceed
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesSucceed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesSucceed
    name: AllWritesSucceed
    nameWithType: TestFixtureWithExistingEvents.AllWritesSucceed
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesSucceed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesToSucceed(System.String)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesToSucceed(System.String)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: true
  name: AllWritesToSucceed(String)
  nameWithType: TestFixtureWithExistingEvents.AllWritesToSucceed(String)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesToSucceed(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesToSucceed(System.String)
    name: AllWritesToSucceed
    nameWithType: TestFixtureWithExistingEvents.AllWritesToSucceed
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesToSucceed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesToSucceed(System.String)
    name: AllWritesToSucceed
    nameWithType: TestFixtureWithExistingEvents.AllWritesToSucceed
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesToSucceed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesQueueUp
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesQueueUp
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: AllWritesQueueUp()
  nameWithType: TestFixtureWithExistingEvents.AllWritesQueueUp()
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesQueueUp()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesQueueUp
    name: AllWritesQueueUp
    nameWithType: TestFixtureWithExistingEvents.AllWritesQueueUp
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesQueueUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesQueueUp
    name: AllWritesQueueUp
    nameWithType: TestFixtureWithExistingEvents.AllWritesQueueUp
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWritesQueueUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.OneWriteCompletes
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.OneWriteCompletes
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: OneWriteCompletes()
  nameWithType: TestFixtureWithExistingEvents.OneWriteCompletes()
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.OneWriteCompletes()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.OneWriteCompletes
    name: OneWriteCompletes
    nameWithType: TestFixtureWithExistingEvents.OneWriteCompletes
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.OneWriteCompletes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.OneWriteCompletes
    name: OneWriteCompletes
    nameWithType: TestFixtureWithExistingEvents.OneWriteCompletes
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.OneWriteCompletes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.CompleteWriteWithResult(EventStore.Core.Messages.OperationResult)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.CompleteWriteWithResult(EventStore.Core.Messages.OperationResult)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: CompleteWriteWithResult(OperationResult)
  nameWithType: TestFixtureWithExistingEvents.CompleteWriteWithResult(OperationResult)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.CompleteWriteWithResult(EventStore.Core.Messages.OperationResult)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.CompleteWriteWithResult(EventStore.Core.Messages.OperationResult)
    name: CompleteWriteWithResult
    nameWithType: TestFixtureWithExistingEvents.CompleteWriteWithResult
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.CompleteWriteWithResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.OperationResult
    name: OperationResult
    nameWithType: OperationResult
    fullName: EventStore.Core.Messages.OperationResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.CompleteWriteWithResult(EventStore.Core.Messages.OperationResult)
    name: CompleteWriteWithResult
    nameWithType: TestFixtureWithExistingEvents.CompleteWriteWithResult
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.CompleteWriteWithResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.OperationResult
    name: OperationResult
    nameWithType: OperationResult
    fullName: EventStore.Core.Messages.OperationResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWriteComplete
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWriteComplete
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: AllWriteComplete()
  nameWithType: TestFixtureWithExistingEvents.AllWriteComplete()
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWriteComplete()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWriteComplete
    name: AllWriteComplete
    nameWithType: TestFixtureWithExistingEvents.AllWriteComplete
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWriteComplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWriteComplete
    name: AllWriteComplete
    nameWithType: TestFixtureWithExistingEvents.AllWriteComplete
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AllWriteComplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.setup1
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.setup1
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: setup1()
  nameWithType: TestFixtureWithExistingEvents.setup1()
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.setup1()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.setup1
    name: setup1
    nameWithType: TestFixtureWithExistingEvents.setup1
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.setup1
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.setup1
    name: setup1
    nameWithType: TestFixtureWithExistingEvents.setup1
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.setup1
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: Handle(ClientMessage.ReadStreamEventsBackward)
  nameWithType: TestFixtureWithExistingEvents.Handle(ClientMessage.ReadStreamEventsBackward)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
    name: ClientMessage.ReadStreamEventsBackward
    nameWithType: ClientMessage.ReadStreamEventsBackward
    fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
    name: ClientMessage.ReadStreamEventsBackward
    nameWithType: ClientMessage.ReadStreamEventsBackward
    fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: Handle(ClientMessage.ReadStreamEventsForward)
  nameWithType: TestFixtureWithExistingEvents.Handle(ClientMessage.ReadStreamEventsForward)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward
    name: ClientMessage.ReadStreamEventsForward
    nameWithType: ClientMessage.ReadStreamEventsForward
    fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward
    name: ClientMessage.ReadStreamEventsForward
    nameWithType: ClientMessage.ReadStreamEventsForward
    fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.WriteEvents)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.WriteEvents)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: Handle(ClientMessage.WriteEvents)
  nameWithType: TestFixtureWithExistingEvents.Handle(ClientMessage.WriteEvents)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.WriteEvents)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.WriteEvents)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.WriteEvents
    name: ClientMessage.WriteEvents
    nameWithType: ClientMessage.WriteEvents
    fullName: EventStore.Core.Messages.ClientMessage.WriteEvents
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.WriteEvents)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.WriteEvents
    name: ClientMessage.WriteEvents
    nameWithType: ClientMessage.WriteEvents
    fullName: EventStore.Core.Messages.ClientMessage.WriteEvents
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.DeleteStream)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.DeleteStream)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: Handle(ClientMessage.DeleteStream)
  nameWithType: TestFixtureWithExistingEvents.Handle(ClientMessage.DeleteStream)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.DeleteStream)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.DeleteStream)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.DeleteStream
    name: ClientMessage.DeleteStream
    nameWithType: ClientMessage.DeleteStream
    fullName: EventStore.Core.Messages.ClientMessage.DeleteStream
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.DeleteStream)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.DeleteStream
    name: ClientMessage.DeleteStream
    nameWithType: ClientMessage.DeleteStream
    fullName: EventStore.Core.Messages.ClientMessage.DeleteStream
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadAllEventsForward)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadAllEventsForward)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: Handle(ClientMessage.ReadAllEventsForward)
  nameWithType: TestFixtureWithExistingEvents.Handle(ClientMessage.ReadAllEventsForward)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadAllEventsForward)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadAllEventsForward)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.ReadAllEventsForward
    name: ClientMessage.ReadAllEventsForward
    nameWithType: ClientMessage.ReadAllEventsForward
    fullName: EventStore.Core.Messages.ClientMessage.ReadAllEventsForward
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.ReadAllEventsForward)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.ReadAllEventsForward
    name: ClientMessage.ReadAllEventsForward
    nameWithType: ClientMessage.ReadAllEventsForward
    fullName: EventStore.Core.Messages.ClientMessage.ReadAllEventsForward
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionStart)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionStart)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: Handle(ClientMessage.TransactionStart)
  nameWithType: TestFixtureWithExistingEvents.Handle(ClientMessage.TransactionStart)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionStart)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionStart)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.TransactionStart
    name: ClientMessage.TransactionStart
    nameWithType: ClientMessage.TransactionStart
    fullName: EventStore.Core.Messages.ClientMessage.TransactionStart
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionStart)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.TransactionStart
    name: ClientMessage.TransactionStart
    nameWithType: ClientMessage.TransactionStart
    fullName: EventStore.Core.Messages.ClientMessage.TransactionStart
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionWrite)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionWrite)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: Handle(ClientMessage.TransactionWrite)
  nameWithType: TestFixtureWithExistingEvents.Handle(ClientMessage.TransactionWrite)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionWrite)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionWrite)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.TransactionWrite
    name: ClientMessage.TransactionWrite
    nameWithType: ClientMessage.TransactionWrite
    fullName: EventStore.Core.Messages.ClientMessage.TransactionWrite
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionWrite)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.TransactionWrite
    name: ClientMessage.TransactionWrite
    nameWithType: ClientMessage.TransactionWrite
    fullName: EventStore.Core.Messages.ClientMessage.TransactionWrite
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionCommit)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionCommit)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: false
  name: Handle(ClientMessage.TransactionCommit)
  nameWithType: TestFixtureWithExistingEvents.Handle(ClientMessage.TransactionCommit)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionCommit)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionCommit)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.TransactionCommit
    name: ClientMessage.TransactionCommit
    nameWithType: ClientMessage.TransactionCommit
    fullName: EventStore.Core.Messages.ClientMessage.TransactionCommit
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle(EventStore.Core.Messages.ClientMessage.TransactionCommit)
    name: Handle
    nameWithType: TestFixtureWithExistingEvents.Handle
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.ClientMessage.TransactionCommit
    name: ClientMessage.TransactionCommit
    nameWithType: ClientMessage.TransactionCommit
    fullName: EventStore.Core.Messages.ClientMessage.TransactionCommit
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.GetTfPos(System.String,System.Int64)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.GetTfPos(System.String,System.Int64)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: true
  name: GetTfPos(String, Int64)
  nameWithType: TestFixtureWithExistingEvents.GetTfPos(String, Int64)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.GetTfPos(System.String, System.Int64)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.GetTfPos(System.String,System.Int64)
    name: GetTfPos
    nameWithType: TestFixtureWithExistingEvents.GetTfPos
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.GetTfPos
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.GetTfPos(System.String,System.Int64)
    name: GetTfPos
    nameWithType: TestFixtureWithExistingEvents.GetTfPos
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.GetTfPos
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEvent(System.String,System.String,System.String,System.Int32)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEvent(System.String,System.String,System.String,System.Int32)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: true
  name: AssertLastEvent(String, String, String, Int32)
  nameWithType: TestFixtureWithExistingEvents.AssertLastEvent(String, String, String, Int32)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEvent(System.String, System.String, System.String, System.Int32)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEvent(System.String,System.String,System.String,System.Int32)
    name: AssertLastEvent
    nameWithType: TestFixtureWithExistingEvents.AssertLastEvent
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEvent(System.String,System.String,System.String,System.Int32)
    name: AssertLastEvent
    nameWithType: TestFixtureWithExistingEvents.AssertLastEvent
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson``1(System.String,{T},System.String,System.Int32)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson``1(System.String,``0,System.String,System.Int32)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  definition: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson``1(System.String,``0,System.String,System.Int32)
  name: AssertLastEventJson<T>(String, T, String, Int32)
  nameWithType: TestFixtureWithExistingEvents.AssertLastEventJson<T>(String, T, String, Int32)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson<T>(System.String, T, System.String, System.Int32)
  nameWithType.vb: TestFixtureWithExistingEvents.AssertLastEventJson(Of T)(String, T, String, Int32)
  fullName.vb: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson(Of T)(System.String, T, System.String, System.Int32)
  name.vb: AssertLastEventJson(Of T)(String, T, String, Int32)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson``1(System.String,``0,System.String,System.Int32)
    name: AssertLastEventJson<T>
    nameWithType: TestFixtureWithExistingEvents.AssertLastEventJson<T>
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson``1(System.String,``0,System.String,System.Int32)
    name: AssertLastEventJson(Of T)
    nameWithType: TestFixtureWithExistingEvents.AssertLastEventJson(Of T)
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventIs(System.String,System.String,System.String,System.Int32)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventIs(System.String,System.String,System.String,System.Int32)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: true
  name: AssertLastEventIs(String, String, String, Int32)
  nameWithType: TestFixtureWithExistingEvents.AssertLastEventIs(String, String, String, Int32)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventIs(System.String, System.String, System.String, System.Int32)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventIs(System.String,System.String,System.String,System.Int32)
    name: AssertLastEventIs
    nameWithType: TestFixtureWithExistingEvents.AssertLastEventIs
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventIs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventIs(System.String,System.String,System.String,System.Int32)
    name: AssertLastEventIs
    nameWithType: TestFixtureWithExistingEvents.AssertLastEventIs
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventIs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTail(System.String,System.String[])
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTail(System.String,System.String[])
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: true
  name: AssertStreamTail(String, String[])
  nameWithType: TestFixtureWithExistingEvents.AssertStreamTail(String, String[])
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTail(System.String, System.String[])
  nameWithType.vb: TestFixtureWithExistingEvents.AssertStreamTail(String, String())
  fullName.vb: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTail(System.String, System.String())
  name.vb: AssertStreamTail(String, String())
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTail(System.String,System.String[])
    name: AssertStreamTail
    nameWithType: TestFixtureWithExistingEvents.AssertStreamTail
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTail
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTail(System.String,System.String[])
    name: AssertStreamTail
    nameWithType: TestFixtureWithExistingEvents.AssertStreamTail
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTail
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTailWithLinks(System.String,System.String[])
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTailWithLinks(System.String,System.String[])
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: true
  name: AssertStreamTailWithLinks(String, String[])
  nameWithType: TestFixtureWithExistingEvents.AssertStreamTailWithLinks(String, String[])
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTailWithLinks(System.String, System.String[])
  nameWithType.vb: TestFixtureWithExistingEvents.AssertStreamTailWithLinks(String, String())
  fullName.vb: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTailWithLinks(System.String, System.String())
  name.vb: AssertStreamTailWithLinks(String, String())
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTailWithLinks(System.String,System.String[])
    name: AssertStreamTailWithLinks
    nameWithType: TestFixtureWithExistingEvents.AssertStreamTailWithLinks
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTailWithLinks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTailWithLinks(System.String,System.String[])
    name: AssertStreamTailWithLinks
    nameWithType: TestFixtureWithExistingEvents.AssertStreamTailWithLinks
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamTailWithLinks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamContains(System.String,System.String[])
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamContains(System.String,System.String[])
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: true
  name: AssertStreamContains(String, String[])
  nameWithType: TestFixtureWithExistingEvents.AssertStreamContains(String, String[])
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamContains(System.String, System.String[])
  nameWithType.vb: TestFixtureWithExistingEvents.AssertStreamContains(String, String())
  fullName.vb: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamContains(System.String, System.String())
  name.vb: AssertStreamContains(String, String())
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamContains(System.String,System.String[])
    name: AssertStreamContains
    nameWithType: TestFixtureWithExistingEvents.AssertStreamContains
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamContains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamContains(System.String,System.String[])
    name: AssertStreamContains
    nameWithType: TestFixtureWithExistingEvents.AssertStreamContains
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertStreamContains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEvent(System.String,System.Int64,System.String)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEvent(System.String,System.Int64,System.String)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: true
  name: AssertEvent(String, Int64, String)
  nameWithType: TestFixtureWithExistingEvents.AssertEvent(String, Int64, String)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEvent(System.String, System.Int64, System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEvent(System.String,System.Int64,System.String)
    name: AssertEvent
    nameWithType: TestFixtureWithExistingEvents.AssertEvent
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEvent(System.String,System.Int64,System.String)
    name: AssertEvent
    nameWithType: TestFixtureWithExistingEvents.AssertEvent
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEmptyStream(System.String)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEmptyStream(System.String)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: true
  name: AssertEmptyStream(String)
  nameWithType: TestFixtureWithExistingEvents.AssertEmptyStream(String)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEmptyStream(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEmptyStream(System.String)
    name: AssertEmptyStream
    nameWithType: TestFixtureWithExistingEvents.AssertEmptyStream
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEmptyStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEmptyStream(System.String)
    name: AssertEmptyStream
    nameWithType: TestFixtureWithExistingEvents.AssertEmptyStream
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEmptyStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEmptyOrNoStream(System.String)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEmptyOrNoStream(System.String)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: true
  name: AssertEmptyOrNoStream(String)
  nameWithType: TestFixtureWithExistingEvents.AssertEmptyOrNoStream(String)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEmptyOrNoStream(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEmptyOrNoStream(System.String)
    name: AssertEmptyOrNoStream
    nameWithType: TestFixtureWithExistingEvents.AssertEmptyOrNoStream
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEmptyOrNoStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEmptyOrNoStream(System.String)
    name: AssertEmptyOrNoStream
    nameWithType: TestFixtureWithExistingEvents.AssertEmptyOrNoStream
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertEmptyOrNoStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.DumpStream(System.String)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.DumpStream(System.String)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents
  isExternal: true
  name: DumpStream(String)
  nameWithType: TestFixtureWithExistingEvents.DumpStream(String)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.DumpStream(System.String)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.DumpStream(System.String)
    name: DumpStream
    nameWithType: TestFixtureWithExistingEvents.DumpStream
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.DumpStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.DumpStream(System.String)
    name: DumpStream
    nameWithType: TestFixtureWithExistingEvents.DumpStream
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.DumpStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._bus
  commentId: F:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._bus
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: _bus
  nameWithType: TestFixtureWithReadWriteDispatchers._bus
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._bus
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._streamDispatcher
  commentId: F:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._streamDispatcher
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: _streamDispatcher
  nameWithType: TestFixtureWithReadWriteDispatchers._streamDispatcher
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._streamDispatcher
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._writeDispatcher
  commentId: F:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._writeDispatcher
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: _writeDispatcher
  nameWithType: TestFixtureWithReadWriteDispatchers._writeDispatcher
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._writeDispatcher
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._readDispatcher
  commentId: F:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._readDispatcher
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: _readDispatcher
  nameWithType: TestFixtureWithReadWriteDispatchers._readDispatcher
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._readDispatcher
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._consumer
  commentId: F:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._consumer
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: _consumer
  nameWithType: TestFixtureWithReadWriteDispatchers._consumer
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._consumer
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._ioDispatcher
  commentId: F:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._ioDispatcher
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: _ioDispatcher
  nameWithType: TestFixtureWithReadWriteDispatchers._ioDispatcher
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._ioDispatcher
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._queue
  commentId: F:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._queue
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: _queue
  nameWithType: TestFixtureWithReadWriteDispatchers._queue
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._queue
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._otherQueues
  commentId: F:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._otherQueues
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: _otherQueues
  nameWithType: TestFixtureWithReadWriteDispatchers._otherQueues
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._otherQueues
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._timeProvider
  commentId: F:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._timeProvider
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: _timeProvider
  nameWithType: TestFixtureWithReadWriteDispatchers._timeProvider
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers._timeProvider
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.Envelope
  commentId: P:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.Envelope
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: Envelope
  nameWithType: TestFixtureWithReadWriteDispatchers.Envelope
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.Envelope
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.HandledMessages
  commentId: P:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.HandledMessages
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: HandledMessages
  nameWithType: TestFixtureWithReadWriteDispatchers.HandledMessages
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.HandledMessages
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.setup0
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.setup0
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: setup0()
  nameWithType: TestFixtureWithReadWriteDispatchers.setup0()
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.setup0()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.setup0
    name: setup0
    nameWithType: TestFixtureWithReadWriteDispatchers.setup0
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.setup0
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.setup0
    name: setup0
    nameWithType: TestFixtureWithReadWriteDispatchers.setup0
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.setup0
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.GiveInputQueue
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.GiveInputQueue
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: GiveInputQueue()
  nameWithType: TestFixtureWithReadWriteDispatchers.GiveInputQueue()
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.GiveInputQueue()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.GiveInputQueue
    name: GiveInputQueue
    nameWithType: TestFixtureWithReadWriteDispatchers.GiveInputQueue
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.GiveInputQueue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.GiveInputQueue
    name: GiveInputQueue
    nameWithType: TestFixtureWithReadWriteDispatchers.GiveInputQueue
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.GiveInputQueue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.GetInputQueue
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.GetInputQueue
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: GetInputQueue()
  nameWithType: TestFixtureWithReadWriteDispatchers.GetInputQueue()
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.GetInputQueue()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.GetInputQueue
    name: GetInputQueue
    nameWithType: TestFixtureWithReadWriteDispatchers.GetInputQueue
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.GetInputQueue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.GetInputQueue
    name: GetInputQueue
    nameWithType: TestFixtureWithReadWriteDispatchers.GetInputQueue
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.GetInputQueue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.DisableTimer
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.DisableTimer
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: DisableTimer()
  nameWithType: TestFixtureWithReadWriteDispatchers.DisableTimer()
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.DisableTimer()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.DisableTimer
    name: DisableTimer
    nameWithType: TestFixtureWithReadWriteDispatchers.DisableTimer
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.DisableTimer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.DisableTimer
    name: DisableTimer
    nameWithType: TestFixtureWithReadWriteDispatchers.DisableTimer
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.DisableTimer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EnableTimer
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EnableTimer
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: EnableTimer()
  nameWithType: TestFixtureWithReadWriteDispatchers.EnableTimer()
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EnableTimer()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EnableTimer
    name: EnableTimer
    nameWithType: TestFixtureWithReadWriteDispatchers.EnableTimer
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EnableTimer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EnableTimer
    name: EnableTimer
    nameWithType: TestFixtureWithReadWriteDispatchers.EnableTimer
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EnableTimer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.WhenLoop
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.WhenLoop
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: WhenLoop()
  nameWithType: TestFixtureWithReadWriteDispatchers.WhenLoop()
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.WhenLoop()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.WhenLoop
    name: WhenLoop
    nameWithType: TestFixtureWithReadWriteDispatchers.WhenLoop
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.WhenLoop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.WhenLoop
    name: WhenLoop
    nameWithType: TestFixtureWithReadWriteDispatchers.WhenLoop
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.WhenLoop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.WhenLoop(IEnumerable{`0})
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.WhenLoop(IEnumerable{`0})
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: true
  name: WhenLoop(IEnumerable<>)
  nameWithType: TestFixtureWithReadWriteDispatchers.WhenLoop(IEnumerable<>)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.WhenLoop(IEnumerable<>)
  nameWithType.vb: TestFixtureWithReadWriteDispatchers.WhenLoop(IEnumerable(Of ))
  fullName.vb: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.WhenLoop(IEnumerable(Of ))
  name.vb: WhenLoop(IEnumerable(Of ))
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.WhenLoop(IEnumerable{`0})
    name: WhenLoop
    nameWithType: TestFixtureWithReadWriteDispatchers.WhenLoop
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.WhenLoop
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.WhenLoop(IEnumerable{`0})
    name: WhenLoop
    nameWithType: TestFixtureWithReadWriteDispatchers.WhenLoop
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.WhenLoop
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException``1(Func{`0},{T})
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException``1(Func{`0},``0)
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  definition: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException``1(Func{`0},``0)
  name: EatException<T>(Func<>, T)
  nameWithType: TestFixtureWithReadWriteDispatchers.EatException<T>(Func<>, T)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException<T>(Func<>, T)
  nameWithType.vb: TestFixtureWithReadWriteDispatchers.EatException(Of T)(Func(Of ), T)
  fullName.vb: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException(Of T)(Func(Of ), T)
  name.vb: EatException(Of T)(Func(Of ), T)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException``1(Func{`0},``0)
    name: EatException<T>
    nameWithType: TestFixtureWithReadWriteDispatchers.EatException<T>
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Func`1
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException``1(Func{`0},``0)
    name: EatException(Of T)
    nameWithType: TestFixtureWithReadWriteDispatchers.EatException(Of T)
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Func`1
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.PreWhen
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.PreWhen
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: PreWhen()
  nameWithType: TestFixtureWithReadWriteDispatchers.PreWhen()
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.PreWhen()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.PreWhen
    name: PreWhen
    nameWithType: TestFixtureWithReadWriteDispatchers.PreWhen
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.PreWhen
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.PreWhen
    name: PreWhen
    nameWithType: TestFixtureWithReadWriteDispatchers.PreWhen
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.PreWhen
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.Yield
  commentId: F:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.Yield
  parent: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers
  isExternal: false
  name: Yield
  nameWithType: TestFixtureWithReadWriteDispatchers.Yield
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.Yield
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<when_starting_with_prerecorded_events_before_the_last_checkpoint>()
  nameWithType: ProtobufExtensions.Serialize<when_starting_with_prerecorded_events_before_the_last_checkpoint>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of when_starting_with_prerecorded_events_before_the_last_checkpoint)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint)()
  name.vb: Serialize(Of when_starting_with_prerecorded_events_before_the_last_checkpoint)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<when_starting_with_prerecorded_events_before_the_last_checkpoint>
    nameWithType: ProtobufExtensions.Serialize<when_starting_with_prerecorded_events_before_the_last_checkpoint>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of when_starting_with_prerecorded_events_before_the_last_checkpoint)
    nameWithType: ProtobufExtensions.Serialize(Of when_starting_with_prerecorded_events_before_the_last_checkpoint)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<when_starting_with_prerecorded_events_before_the_last_checkpoint>()
  nameWithType: ProtobufExtensions.SerializeToArray<when_starting_with_prerecorded_events_before_the_last_checkpoint>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of when_starting_with_prerecorded_events_before_the_last_checkpoint)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint)()
  name.vb: SerializeToArray(Of when_starting_with_prerecorded_events_before_the_last_checkpoint)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<when_starting_with_prerecorded_events_before_the_last_checkpoint>
    nameWithType: ProtobufExtensions.SerializeToArray<when_starting_with_prerecorded_events_before_the_last_checkpoint>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of when_starting_with_prerecorded_events_before_the_last_checkpoint)
    nameWithType: ProtobufExtensions.SerializeToArray(Of when_starting_with_prerecorded_events_before_the_last_checkpoint)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Projections.Core.Tests.Services.core_projection
  commentId: N:EventStore.Projections.Core.Tests.Services.core_projection
  isExternal: false
  name: EventStore.Projections.Core.Tests.Services.core_projection
  nameWithType: EventStore.Projections.Core.Tests.Services.core_projection
  fullName: EventStore.Projections.Core.Tests.Services.core_projection
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager
  commentId: N:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager
  isExternal: false
  name: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager
  nameWithType: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  isExternal: false
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson``1(System.String,``0,System.String,System.Int32)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson``1(System.String,``0,System.String,System.Int32)
  isExternal: true
  name: AssertLastEventJson<T>(String, T, String, Int32)
  nameWithType: TestFixtureWithExistingEvents.AssertLastEventJson<T>(String, T, String, Int32)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson<T>(System.String, T, System.String, System.Int32)
  nameWithType.vb: TestFixtureWithExistingEvents.AssertLastEventJson(Of T)(String, T, String, Int32)
  fullName.vb: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson(Of T)(System.String, T, System.String, System.Int32)
  name.vb: AssertLastEventJson(Of T)(String, T, String, Int32)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson``1(System.String,``0,System.String,System.Int32)
    name: AssertLastEventJson<T>
    nameWithType: TestFixtureWithExistingEvents.AssertLastEventJson<T>
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson``1(System.String,``0,System.String,System.Int32)
    name: AssertLastEventJson(Of T)
    nameWithType: TestFixtureWithExistingEvents.AssertLastEventJson(Of T)
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithExistingEvents.AssertLastEventJson(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException``1(Func{`0},``0)
  commentId: M:EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException``1(Func{`0},``0)
  isExternal: true
  name: EatException<T>(Func<>, T)
  nameWithType: TestFixtureWithReadWriteDispatchers.EatException<T>(Func<>, T)
  fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException<T>(Func<>, T)
  nameWithType.vb: TestFixtureWithReadWriteDispatchers.EatException(Of T)(Func(Of ), T)
  fullName.vb: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException(Of T)(Func(Of ), T)
  name.vb: EatException(Of T)(Func(Of ), T)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException``1(Func{`0},``0)
    name: EatException<T>
    nameWithType: TestFixtureWithReadWriteDispatchers.EatException<T>
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Func`1
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException``1(Func{`0},``0)
    name: EatException(Of T)
    nameWithType: TestFixtureWithReadWriteDispatchers.EatException(Of T)
    fullName: EventStore.Core.Tests.Helpers.TestFixtureWithReadWriteDispatchers.EatException(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Func`1
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager.Given
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager.Given
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager
  isExternal: false
  name: Given()
  nameWithType: TestFixtureWithMultiStreamCheckpointManager.Given()
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager.Given()
  spec.csharp:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager.Given
    name: Given
    nameWithType: TestFixtureWithMultiStreamCheckpointManager.Given
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager.Given
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager.Given
    name: Given
    nameWithType: TestFixtureWithMultiStreamCheckpointManager.Given
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.TestFixtureWithMultiStreamCheckpointManager.Given
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.Given*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.Given
  isExternal: false
  name: Given
  nameWithType: when_starting_with_prerecorded_events_before_the_last_checkpoint.Given
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.Given
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager.When
  commentId: M:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager.When
  parent: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager
  isExternal: false
  name: When()
  nameWithType: TestFixtureWithCoreProjectionCheckpointManager.When()
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager.When()
  spec.csharp:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager.When
    name: When
    nameWithType: TestFixtureWithCoreProjectionCheckpointManager.When
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager.When
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager.When
    name: When
    nameWithType: TestFixtureWithCoreProjectionCheckpointManager.When
    fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.TestFixtureWithCoreProjectionCheckpointManager.When
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.When*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.When
  isExternal: false
  name: When
  nameWithType: when_starting_with_prerecorded_events_before_the_last_checkpoint.When
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.When
- uid: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.stops_reading_prerecorded_events_after_found_checkpoint*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.stops_reading_prerecorded_events_after_found_checkpoint
  isExternal: false
  name: stops_reading_prerecorded_events_after_found_checkpoint
  nameWithType: when_starting_with_prerecorded_events_before_the_last_checkpoint.stops_reading_prerecorded_events_after_found_checkpoint
  fullName: EventStore.Projections.Core.Tests.Services.core_projection.checkpoint_manager.multi_stream.when_starting_with_prerecorded_events_before_the_last_checkpoint.stops_reading_prerecorded_events_after_found_checkpoint

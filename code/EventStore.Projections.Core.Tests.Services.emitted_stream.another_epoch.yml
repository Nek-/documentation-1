### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch
  commentId: N:EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch
  id: EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch
  children:
  - EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch.when_handling_a_timeout
  - EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch.when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream
  - EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch.when_handling_emits_with_previously_written_events_at_the_same_position
  - EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch.when_handling_emits_with_previously_written_events_in_different_epochs
  langs:
  - csharp
  - vb
  name: EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch
  nameWithType: EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch
  fullName: EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch
  type: Namespace
  assemblies:
  - EventStore.Projections.Core.Tests
references:
- uid: EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch.when_handling_a_timeout
  commentId: T:EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch.when_handling_a_timeout
  isExternal: false
  name: when_handling_a_timeout
  nameWithType: when_handling_a_timeout
  fullName: EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch.when_handling_a_timeout
- uid: EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch.when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream
  commentId: T:EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch.when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream
  isExternal: false
  name: when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream
  nameWithType: when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream
  fullName: EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch.when_handling_an_emit_with_expected_tag_the_started_in_recovery_stream
- uid: EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch.when_handling_emits_with_previously_written_events_at_the_same_position
  commentId: T:EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch.when_handling_emits_with_previously_written_events_at_the_same_position
  isExternal: false
  name: when_handling_emits_with_previously_written_events_at_the_same_position
  nameWithType: when_handling_emits_with_previously_written_events_at_the_same_position
  fullName: EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch.when_handling_emits_with_previously_written_events_at_the_same_position
- uid: EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch.when_handling_emits_with_previously_written_events_in_different_epochs
  commentId: T:EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch.when_handling_emits_with_previously_written_events_in_different_epochs
  isExternal: false
  name: when_handling_emits_with_previously_written_events_in_different_epochs
  nameWithType: when_handling_emits_with_previously_written_events_in_different_epochs
  fullName: EventStore.Projections.Core.Tests.Services.emitted_stream.another_epoch.when_handling_emits_with_previously_written_events_in_different_epochs

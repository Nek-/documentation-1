### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter
  commentId: T:EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter
  id: TestFixtureWithEventFilter
  parent: EventStore.Projections.Core.Tests.Services.event_filter
  children:
  - EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter._builder
  - EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter._ef
  - EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter._exception
  - EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.Given
  - EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.Setup
  - EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.When
  langs:
  - csharp
  - vb
  name: TestFixtureWithEventFilter
  nameWithType: TestFixtureWithEventFilter
  fullName: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/event_filter/TestFixtureWithEventFilter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureWithEventFilter
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/event_filter/TestFixtureWithEventFilter.cs
    startLine: 7
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.event_filter
  syntax:
    content: 'public class TestFixtureWithEventFilter : object'
    content.vb: >-
      Public Class TestFixtureWithEventFilter

          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - EventStore.Projections.Core.Tests.Services.event_filter.empty_event_filter
  - EventStore.Projections.Core.Tests.Services.event_filter.include_everything_event_filter
  - EventStore.Projections.Core.Tests.Services.event_filter.include_everything_handling_deleted_notifications_event_filter
  - EventStore.Projections.Core.Tests.Services.event_filter.just_all_events_event_filter
  - EventStore.Projections.Core.Tests.Services.event_filter.just_from_all_event_filter
  - EventStore.Projections.Core.Tests.Services.event_filter.specific_category_event_filter
  - EventStore.Projections.Core.Tests.Services.event_filter.specific_event_event_filter
  - EventStore.Projections.Core.Tests.Services.event_filter.specific_events_event_filter
  - EventStore.Projections.Core.Tests.Services.event_filter.specific_stream_and_category_event_filter
  - EventStore.Projections.Core.Tests.Services.event_filter.specific_stream_event_filter
  - EventStore.Projections.Core.Tests.Services.event_filter.specific_streams_event_filter
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter._builder
  commentId: F:EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter._builder
  id: _builder
  parent: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter
  langs:
  - csharp
  - vb
  name: _builder
  nameWithType: TestFixtureWithEventFilter._builder
  fullName: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter._builder
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/event_filter/TestFixtureWithEventFilter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _builder
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/event_filter/TestFixtureWithEventFilter.cs
    startLine: 9
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.event_filter
  syntax:
    content: protected SourceDefinitionBuilder _builder
    return:
      type: EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
    content.vb: Protected _builder As SourceDefinitionBuilder
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter._ef
  commentId: F:EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter._ef
  id: _ef
  parent: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter
  langs:
  - csharp
  - vb
  name: _ef
  nameWithType: TestFixtureWithEventFilter._ef
  fullName: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter._ef
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/event_filter/TestFixtureWithEventFilter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _ef
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/event_filter/TestFixtureWithEventFilter.cs
    startLine: 10
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.event_filter
  syntax:
    content: protected EventFilter _ef
    return:
      type: EventStore.Projections.Core.Services.Processing.EventFilter
    content.vb: Protected _ef As EventFilter
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter._exception
  commentId: F:EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter._exception
  id: _exception
  parent: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter
  langs:
  - csharp
  - vb
  name: _exception
  nameWithType: TestFixtureWithEventFilter._exception
  fullName: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter._exception
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/event_filter/TestFixtureWithEventFilter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _exception
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/event_filter/TestFixtureWithEventFilter.cs
    startLine: 11
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.event_filter
  syntax:
    content: protected Exception _exception
    return:
      type: Exception
    content.vb: Protected _exception As Exception
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.Setup
  commentId: M:EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.Setup
  id: Setup
  parent: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter
  langs:
  - csharp
  - vb
  name: Setup()
  nameWithType: TestFixtureWithEventFilter.Setup()
  fullName: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.Setup()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/event_filter/TestFixtureWithEventFilter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Setup
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/event_filter/TestFixtureWithEventFilter.cs
    startLine: 13
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.event_filter
  syntax:
    content: public void Setup()
    content.vb: Public Sub Setup
  overload: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.Setup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.Given
  commentId: M:EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.Given
  id: Given
  parent: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter
  langs:
  - csharp
  - vb
  name: Given()
  nameWithType: TestFixtureWithEventFilter.Given()
  fullName: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.Given()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/event_filter/TestFixtureWithEventFilter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Given
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/event_filter/TestFixtureWithEventFilter.cs
    startLine: 21
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.event_filter
  syntax:
    content: protected virtual void Given()
    content.vb: Protected Overridable Sub Given
  overload: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.Given*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.When
  commentId: M:EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.When
  id: When
  parent: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter
  langs:
  - csharp
  - vb
  name: When()
  nameWithType: TestFixtureWithEventFilter.When()
  fullName: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.When()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/event_filter/TestFixtureWithEventFilter.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: When
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/event_filter/TestFixtureWithEventFilter.cs
    startLine: 25
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.event_filter
  syntax:
    content: protected virtual void When()
    content.vb: Protected Overridable Sub When
  overload: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.When*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: EventStore.Projections.Core.Tests.Services.event_filter
  commentId: N:EventStore.Projections.Core.Tests.Services.event_filter
  isExternal: false
  name: EventStore.Projections.Core.Tests.Services.event_filter
  nameWithType: EventStore.Projections.Core.Tests.Services.event_filter
  fullName: EventStore.Projections.Core.Tests.Services.event_filter
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TestFixtureWithEventFilter>()
  nameWithType: ProtobufExtensions.Serialize<TestFixtureWithEventFilter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TestFixtureWithEventFilter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter)()
  name.vb: Serialize(Of TestFixtureWithEventFilter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TestFixtureWithEventFilter>
    nameWithType: ProtobufExtensions.Serialize<TestFixtureWithEventFilter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TestFixtureWithEventFilter)
    nameWithType: ProtobufExtensions.Serialize(Of TestFixtureWithEventFilter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TestFixtureWithEventFilter>()
  nameWithType: ProtobufExtensions.SerializeToArray<TestFixtureWithEventFilter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TestFixtureWithEventFilter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter)()
  name.vb: SerializeToArray(Of TestFixtureWithEventFilter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TestFixtureWithEventFilter>
    nameWithType: ProtobufExtensions.SerializeToArray<TestFixtureWithEventFilter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TestFixtureWithEventFilter)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TestFixtureWithEventFilter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
  commentId: T:EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: SourceDefinitionBuilder
  nameWithType: SourceDefinitionBuilder
  fullName: EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Projections.Core.Services.Processing.EventFilter
  commentId: T:EventStore.Projections.Core.Services.Processing.EventFilter
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: EventFilter
  nameWithType: EventFilter
  fullName: EventStore.Projections.Core.Services.Processing.EventFilter
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.Setup*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.Setup
  isExternal: false
  name: Setup
  nameWithType: TestFixtureWithEventFilter.Setup
  fullName: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.Setup
- uid: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.Given*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.Given
  isExternal: false
  name: Given
  nameWithType: TestFixtureWithEventFilter.Given
  fullName: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.Given
- uid: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.When*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.When
  isExternal: false
  name: When
  nameWithType: TestFixtureWithEventFilter.When
  fullName: EventStore.Projections.Core.Tests.Services.event_filter.TestFixtureWithEventFilter.When

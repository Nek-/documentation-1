### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating
  commentId: T:EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating
  id: partition_state.when_creating
  parent: EventStore.Projections.Core.Tests.Services.partition_state
  children:
  - EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.can_be_created
  - EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.throws_argument_null_exception_if_caused_by_is_null
  - EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.throws_argument_null_exception_if_state_is_null
  langs:
  - csharp
  - vb
  name: partition_state.when_creating
  nameWithType: partition_state.when_creating
  fullName: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/partition_state/partition_state.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: when_creating
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/partition_state/partition_state.cs
    startLine: 8
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.partition_state
  syntax:
    content: 'public class when_creating : object'
    content.vb: >-
      Public Class when_creating

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.throws_argument_null_exception_if_state_is_null
  commentId: M:EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.throws_argument_null_exception_if_state_is_null
  id: throws_argument_null_exception_if_state_is_null
  parent: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating
  langs:
  - csharp
  - vb
  name: throws_argument_null_exception_if_state_is_null()
  nameWithType: partition_state.when_creating.throws_argument_null_exception_if_state_is_null()
  fullName: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.throws_argument_null_exception_if_state_is_null()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/partition_state/partition_state.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throws_argument_null_exception_if_state_is_null
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/partition_state/partition_state.cs
    startLine: 11
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.partition_state
  syntax:
    content: public void throws_argument_null_exception_if_state_is_null()
    content.vb: Public Sub throws_argument_null_exception_if_state_is_null
  overload: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.throws_argument_null_exception_if_state_is_null*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.throws_argument_null_exception_if_caused_by_is_null
  commentId: M:EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.throws_argument_null_exception_if_caused_by_is_null
  id: throws_argument_null_exception_if_caused_by_is_null
  parent: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating
  langs:
  - csharp
  - vb
  name: throws_argument_null_exception_if_caused_by_is_null()
  nameWithType: partition_state.when_creating.throws_argument_null_exception_if_caused_by_is_null()
  fullName: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.throws_argument_null_exception_if_caused_by_is_null()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/partition_state/partition_state.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: throws_argument_null_exception_if_caused_by_is_null
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/partition_state/partition_state.cs
    startLine: 17
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.partition_state
  syntax:
    content: public void throws_argument_null_exception_if_caused_by_is_null()
    content.vb: Public Sub throws_argument_null_exception_if_caused_by_is_null
  overload: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.throws_argument_null_exception_if_caused_by_is_null*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.can_be_created
  commentId: M:EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.can_be_created
  id: can_be_created
  parent: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating
  langs:
  - csharp
  - vb
  name: can_be_created()
  nameWithType: partition_state.when_creating.can_be_created()
  fullName: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.can_be_created()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/partition_state/partition_state.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: can_be_created
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/partition_state/partition_state.cs
    startLine: 23
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.partition_state
  syntax:
    content: public void can_be_created()
    content.vb: Public Sub can_be_created
  overload: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.can_be_created*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Tests.Services.partition_state
  commentId: N:EventStore.Projections.Core.Tests.Services.partition_state
  isExternal: false
  name: EventStore.Projections.Core.Tests.Services.partition_state
  nameWithType: EventStore.Projections.Core.Tests.Services.partition_state
  fullName: EventStore.Projections.Core.Tests.Services.partition_state
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<partition_state.when_creating>()
  nameWithType: ProtobufExtensions.Serialize<partition_state.when_creating>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of partition_state.when_creating)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating)()
  name.vb: Serialize(Of partition_state.when_creating)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<partition_state.when_creating>
    nameWithType: ProtobufExtensions.Serialize<partition_state.when_creating>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of partition_state.when_creating)
    nameWithType: ProtobufExtensions.Serialize(Of partition_state.when_creating)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<partition_state.when_creating>()
  nameWithType: ProtobufExtensions.SerializeToArray<partition_state.when_creating>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of partition_state.when_creating)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating)()
  name.vb: SerializeToArray(Of partition_state.when_creating)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<partition_state.when_creating>
    nameWithType: ProtobufExtensions.SerializeToArray<partition_state.when_creating>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of partition_state.when_creating)
    nameWithType: ProtobufExtensions.SerializeToArray(Of partition_state.when_creating)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.throws_argument_null_exception_if_state_is_null*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.throws_argument_null_exception_if_state_is_null
  isExternal: false
  name: throws_argument_null_exception_if_state_is_null
  nameWithType: partition_state.when_creating.throws_argument_null_exception_if_state_is_null
  fullName: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.throws_argument_null_exception_if_state_is_null
- uid: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.throws_argument_null_exception_if_caused_by_is_null*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.throws_argument_null_exception_if_caused_by_is_null
  isExternal: false
  name: throws_argument_null_exception_if_caused_by_is_null
  nameWithType: partition_state.when_creating.throws_argument_null_exception_if_caused_by_is_null
  fullName: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.throws_argument_null_exception_if_caused_by_is_null
- uid: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.can_be_created*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.can_be_created
  isExternal: false
  name: can_be_created
  nameWithType: partition_state.when_creating.can_be_created
  fullName: EventStore.Projections.Core.Tests.Services.partition_state.partition_state.when_creating.can_be_created

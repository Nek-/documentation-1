### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  commentId: T:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  id: event_by_type_index_position_tagger
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  children:
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.adjust_compatible_tag_returns_the_same_tag
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.another_events_checkpoint_tag_is_compatible
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_adjust_tf_position_tag
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_be_created
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_update_by_tf_event_if_with_prior_index_position
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.cannot_update_by_prior_tf_position
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.empty_streams_throws_argument_exception
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_after_case
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_before_case
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_equal_case
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_incompatible_streams_case
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_after_case
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_before_case
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_equal_case
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.null_streams_throws_argument_null_exception
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.position_checkpoint_tag_is_incompatible
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.produced_checkpoint_tags_are_correctly_ordered
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.setup
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.streams_checkpoint_tag_is_incompatible
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.the_same_events_checkpoint_tag_is_compatible
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.zero_position_tag_is_before_first_event_possible
  langs:
  - csharp
  - vb
  name: event_by_type_index_position_tagger
  nameWithType: event_by_type_index_position_tagger
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: event_by_type_index_position_tagger
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 11
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: 'public class event_by_type_index_position_tagger : object'
    content.vb: >-
      Public Class event_by_type_index_position_tagger

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.setup
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.setup
  id: setup
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: setup()
  nameWithType: event_by_type_index_position_tagger.setup()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.setup()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: setup
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 19
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void setup()
    content.vb: Public Sub setup
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.setup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_be_created
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_be_created
  id: can_be_created
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: can_be_created()
  nameWithType: event_by_type_index_position_tagger.can_be_created()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_be_created()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: can_be_created
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 41
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void can_be_created()
    content.vb: Public Sub can_be_created
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_be_created*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_after_case
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_after_case
  id: is_message_after_checkpoint_tag_after_case
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: is_message_after_checkpoint_tag_after_case()
  nameWithType: event_by_type_index_position_tagger.is_message_after_checkpoint_tag_after_case()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_after_case()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: is_message_after_checkpoint_tag_after_case
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 48
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void is_message_after_checkpoint_tag_after_case()
    content.vb: Public Sub is_message_after_checkpoint_tag_after_case
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_after_case*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_after_case
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_after_case
  id: is_message_after_checkpoint_tag_tf_only_after_case
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: is_message_after_checkpoint_tag_tf_only_after_case()
  nameWithType: event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_after_case()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_after_case()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: is_message_after_checkpoint_tag_tf_only_after_case
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 58
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void is_message_after_checkpoint_tag_tf_only_after_case()
    content.vb: Public Sub is_message_after_checkpoint_tag_tf_only_after_case
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_after_case*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_before_case
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_before_case
  id: is_message_after_checkpoint_tag_before_case
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: is_message_after_checkpoint_tag_before_case()
  nameWithType: event_by_type_index_position_tagger.is_message_after_checkpoint_tag_before_case()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_before_case()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: is_message_after_checkpoint_tag_before_case
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 68
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void is_message_after_checkpoint_tag_before_case()
    content.vb: Public Sub is_message_after_checkpoint_tag_before_case
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_before_case*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_before_case
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_before_case
  id: is_message_after_checkpoint_tag_tf_only_before_case
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: is_message_after_checkpoint_tag_tf_only_before_case()
  nameWithType: event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_before_case()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_before_case()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: is_message_after_checkpoint_tag_tf_only_before_case
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 79
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void is_message_after_checkpoint_tag_tf_only_before_case()
    content.vb: Public Sub is_message_after_checkpoint_tag_tf_only_before_case
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_before_case*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_equal_case
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_equal_case
  id: is_message_after_checkpoint_tag_equal_case
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: is_message_after_checkpoint_tag_equal_case()
  nameWithType: event_by_type_index_position_tagger.is_message_after_checkpoint_tag_equal_case()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_equal_case()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: is_message_after_checkpoint_tag_equal_case
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 90
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void is_message_after_checkpoint_tag_equal_case()
    content.vb: Public Sub is_message_after_checkpoint_tag_equal_case
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_equal_case*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_equal_case
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_equal_case
  id: is_message_after_checkpoint_tag_tf_only_equal_case
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: is_message_after_checkpoint_tag_tf_only_equal_case()
  nameWithType: event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_equal_case()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_equal_case()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: is_message_after_checkpoint_tag_tf_only_equal_case
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 101
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void is_message_after_checkpoint_tag_tf_only_equal_case()
    content.vb: Public Sub is_message_after_checkpoint_tag_tf_only_equal_case
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_equal_case*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_incompatible_streams_case
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_incompatible_streams_case
  id: is_message_after_checkpoint_tag_incompatible_streams_case
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: is_message_after_checkpoint_tag_incompatible_streams_case()
  nameWithType: event_by_type_index_position_tagger.is_message_after_checkpoint_tag_incompatible_streams_case()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_incompatible_streams_case()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: is_message_after_checkpoint_tag_incompatible_streams_case
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 112
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void is_message_after_checkpoint_tag_incompatible_streams_case()
    content.vb: Public Sub is_message_after_checkpoint_tag_incompatible_streams_case
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_incompatible_streams_case*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.null_streams_throws_argument_null_exception
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.null_streams_throws_argument_null_exception
  id: null_streams_throws_argument_null_exception
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: null_streams_throws_argument_null_exception()
  nameWithType: event_by_type_index_position_tagger.null_streams_throws_argument_null_exception()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.null_streams_throws_argument_null_exception()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: null_streams_throws_argument_null_exception
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 124
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void null_streams_throws_argument_null_exception()
    content.vb: Public Sub null_streams_throws_argument_null_exception
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.null_streams_throws_argument_null_exception*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.empty_streams_throws_argument_exception
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.empty_streams_throws_argument_exception
  id: empty_streams_throws_argument_exception
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: empty_streams_throws_argument_exception()
  nameWithType: event_by_type_index_position_tagger.empty_streams_throws_argument_exception()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.empty_streams_throws_argument_exception()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: empty_streams_throws_argument_exception
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 130
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void empty_streams_throws_argument_exception()
    content.vb: Public Sub empty_streams_throws_argument_exception
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.empty_streams_throws_argument_exception*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.position_checkpoint_tag_is_incompatible
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.position_checkpoint_tag_is_incompatible
  id: position_checkpoint_tag_is_incompatible
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: position_checkpoint_tag_is_incompatible()
  nameWithType: event_by_type_index_position_tagger.position_checkpoint_tag_is_incompatible()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.position_checkpoint_tag_is_incompatible()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: position_checkpoint_tag_is_incompatible
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 136
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void position_checkpoint_tag_is_incompatible()
    content.vb: Public Sub position_checkpoint_tag_is_incompatible
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.position_checkpoint_tag_is_incompatible*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.streams_checkpoint_tag_is_incompatible
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.streams_checkpoint_tag_is_incompatible
  id: streams_checkpoint_tag_is_incompatible
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: streams_checkpoint_tag_is_incompatible()
  nameWithType: event_by_type_index_position_tagger.streams_checkpoint_tag_is_incompatible()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.streams_checkpoint_tag_is_incompatible()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: streams_checkpoint_tag_is_incompatible
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 143
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void streams_checkpoint_tag_is_incompatible()
    content.vb: Public Sub streams_checkpoint_tag_is_incompatible
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.streams_checkpoint_tag_is_incompatible*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.another_events_checkpoint_tag_is_compatible
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.another_events_checkpoint_tag_is_compatible
  id: another_events_checkpoint_tag_is_compatible
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: another_events_checkpoint_tag_is_compatible()
  nameWithType: event_by_type_index_position_tagger.another_events_checkpoint_tag_is_compatible()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.another_events_checkpoint_tag_is_compatible()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: another_events_checkpoint_tag_is_compatible
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 152
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void another_events_checkpoint_tag_is_compatible()
    content.vb: Public Sub another_events_checkpoint_tag_is_compatible
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.another_events_checkpoint_tag_is_compatible*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.the_same_events_checkpoint_tag_is_compatible
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.the_same_events_checkpoint_tag_is_compatible
  id: the_same_events_checkpoint_tag_is_compatible
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: the_same_events_checkpoint_tag_is_compatible()
  nameWithType: event_by_type_index_position_tagger.the_same_events_checkpoint_tag_is_compatible()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.the_same_events_checkpoint_tag_is_compatible()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: the_same_events_checkpoint_tag_is_compatible
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 161
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void the_same_events_checkpoint_tag_is_compatible()
    content.vb: Public Sub the_same_events_checkpoint_tag_is_compatible
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.the_same_events_checkpoint_tag_is_compatible*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.adjust_compatible_tag_returns_the_same_tag
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.adjust_compatible_tag_returns_the_same_tag
  id: adjust_compatible_tag_returns_the_same_tag
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: adjust_compatible_tag_returns_the_same_tag()
  nameWithType: event_by_type_index_position_tagger.adjust_compatible_tag_returns_the_same_tag()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.adjust_compatible_tag_returns_the_same_tag()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: adjust_compatible_tag_returns_the_same_tag
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 170
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void adjust_compatible_tag_returns_the_same_tag()
    content.vb: Public Sub adjust_compatible_tag_returns_the_same_tag
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.adjust_compatible_tag_returns_the_same_tag*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_adjust_tf_position_tag
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_adjust_tf_position_tag
  id: can_adjust_tf_position_tag
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: can_adjust_tf_position_tag()
  nameWithType: event_by_type_index_position_tagger.can_adjust_tf_position_tag()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_adjust_tf_position_tag()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: can_adjust_tf_position_tag
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 178
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void can_adjust_tf_position_tag()
    content.vb: Public Sub can_adjust_tf_position_tag
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_adjust_tf_position_tag*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.zero_position_tag_is_before_first_event_possible
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.zero_position_tag_is_before_first_event_possible
  id: zero_position_tag_is_before_first_event_possible
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: zero_position_tag_is_before_first_event_possible()
  nameWithType: event_by_type_index_position_tagger.zero_position_tag_is_before_first_event_possible()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.zero_position_tag_is_before_first_event_possible()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: zero_position_tag_is_before_first_event_possible
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 187
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void zero_position_tag_is_before_first_event_possible()
    content.vb: Public Sub zero_position_tag_is_before_first_event_possible
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.zero_position_tag_is_before_first_event_possible*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_update_by_tf_event_if_with_prior_index_position
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_update_by_tf_event_if_with_prior_index_position
  id: can_update_by_tf_event_if_with_prior_index_position
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: can_update_by_tf_event_if_with_prior_index_position()
  nameWithType: event_by_type_index_position_tagger.can_update_by_tf_event_if_with_prior_index_position()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_update_by_tf_event_if_with_prior_index_position()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: can_update_by_tf_event_if_with_prior_index_position
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 198
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void can_update_by_tf_event_if_with_prior_index_position()
    content.vb: Public Sub can_update_by_tf_event_if_with_prior_index_position
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_update_by_tf_event_if_with_prior_index_position*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.cannot_update_by_prior_tf_position
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.cannot_update_by_prior_tf_position
  id: cannot_update_by_prior_tf_position
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: cannot_update_by_prior_tf_position()
  nameWithType: event_by_type_index_position_tagger.cannot_update_by_prior_tf_position()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.cannot_update_by_prior_tf_position()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: cannot_update_by_prior_tf_position
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 212
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void cannot_update_by_prior_tf_position()
    content.vb: Public Sub cannot_update_by_prior_tf_position
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.cannot_update_by_prior_tf_position*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.produced_checkpoint_tags_are_correctly_ordered
  commentId: M:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.produced_checkpoint_tags_are_correctly_ordered
  id: produced_checkpoint_tags_are_correctly_ordered
  parent: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger
  langs:
  - csharp
  - vb
  name: produced_checkpoint_tags_are_correctly_ordered()
  nameWithType: event_by_type_index_position_tagger.produced_checkpoint_tags_are_correctly_ordered()
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.produced_checkpoint_tags_are_correctly_ordered()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: produced_checkpoint_tags_are_correctly_ordered
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/position_tagging/event_by_type_index_position_tagger/event_by_type_index_position_tagger.cs
    startLine: 223
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  syntax:
    content: public void produced_checkpoint_tags_are_correctly_ordered()
    content.vb: Public Sub produced_checkpoint_tags_are_correctly_ordered
  overload: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.produced_checkpoint_tags_are_correctly_ordered*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  commentId: N:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  isExternal: false
  name: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  nameWithType: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<event_by_type_index_position_tagger>()
  nameWithType: ProtobufExtensions.Serialize<event_by_type_index_position_tagger>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of event_by_type_index_position_tagger)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger)()
  name.vb: Serialize(Of event_by_type_index_position_tagger)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<event_by_type_index_position_tagger>
    nameWithType: ProtobufExtensions.Serialize<event_by_type_index_position_tagger>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of event_by_type_index_position_tagger)
    nameWithType: ProtobufExtensions.Serialize(Of event_by_type_index_position_tagger)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<event_by_type_index_position_tagger>()
  nameWithType: ProtobufExtensions.SerializeToArray<event_by_type_index_position_tagger>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of event_by_type_index_position_tagger)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger)()
  name.vb: SerializeToArray(Of event_by_type_index_position_tagger)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<event_by_type_index_position_tagger>
    nameWithType: ProtobufExtensions.SerializeToArray<event_by_type_index_position_tagger>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of event_by_type_index_position_tagger)
    nameWithType: ProtobufExtensions.SerializeToArray(Of event_by_type_index_position_tagger)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.setup*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.setup
  isExternal: false
  name: setup
  nameWithType: event_by_type_index_position_tagger.setup
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.setup
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_be_created*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_be_created
  isExternal: false
  name: can_be_created
  nameWithType: event_by_type_index_position_tagger.can_be_created
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_be_created
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_after_case*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_after_case
  isExternal: false
  name: is_message_after_checkpoint_tag_after_case
  nameWithType: event_by_type_index_position_tagger.is_message_after_checkpoint_tag_after_case
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_after_case
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_after_case*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_after_case
  isExternal: false
  name: is_message_after_checkpoint_tag_tf_only_after_case
  nameWithType: event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_after_case
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_after_case
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_before_case*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_before_case
  isExternal: false
  name: is_message_after_checkpoint_tag_before_case
  nameWithType: event_by_type_index_position_tagger.is_message_after_checkpoint_tag_before_case
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_before_case
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_before_case*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_before_case
  isExternal: false
  name: is_message_after_checkpoint_tag_tf_only_before_case
  nameWithType: event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_before_case
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_before_case
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_equal_case*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_equal_case
  isExternal: false
  name: is_message_after_checkpoint_tag_equal_case
  nameWithType: event_by_type_index_position_tagger.is_message_after_checkpoint_tag_equal_case
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_equal_case
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_equal_case*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_equal_case
  isExternal: false
  name: is_message_after_checkpoint_tag_tf_only_equal_case
  nameWithType: event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_equal_case
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_tf_only_equal_case
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_incompatible_streams_case*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_incompatible_streams_case
  isExternal: false
  name: is_message_after_checkpoint_tag_incompatible_streams_case
  nameWithType: event_by_type_index_position_tagger.is_message_after_checkpoint_tag_incompatible_streams_case
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.is_message_after_checkpoint_tag_incompatible_streams_case
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.null_streams_throws_argument_null_exception*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.null_streams_throws_argument_null_exception
  isExternal: false
  name: null_streams_throws_argument_null_exception
  nameWithType: event_by_type_index_position_tagger.null_streams_throws_argument_null_exception
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.null_streams_throws_argument_null_exception
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.empty_streams_throws_argument_exception*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.empty_streams_throws_argument_exception
  isExternal: false
  name: empty_streams_throws_argument_exception
  nameWithType: event_by_type_index_position_tagger.empty_streams_throws_argument_exception
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.empty_streams_throws_argument_exception
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.position_checkpoint_tag_is_incompatible*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.position_checkpoint_tag_is_incompatible
  isExternal: false
  name: position_checkpoint_tag_is_incompatible
  nameWithType: event_by_type_index_position_tagger.position_checkpoint_tag_is_incompatible
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.position_checkpoint_tag_is_incompatible
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.streams_checkpoint_tag_is_incompatible*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.streams_checkpoint_tag_is_incompatible
  isExternal: false
  name: streams_checkpoint_tag_is_incompatible
  nameWithType: event_by_type_index_position_tagger.streams_checkpoint_tag_is_incompatible
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.streams_checkpoint_tag_is_incompatible
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.another_events_checkpoint_tag_is_compatible*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.another_events_checkpoint_tag_is_compatible
  isExternal: false
  name: another_events_checkpoint_tag_is_compatible
  nameWithType: event_by_type_index_position_tagger.another_events_checkpoint_tag_is_compatible
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.another_events_checkpoint_tag_is_compatible
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.the_same_events_checkpoint_tag_is_compatible*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.the_same_events_checkpoint_tag_is_compatible
  isExternal: false
  name: the_same_events_checkpoint_tag_is_compatible
  nameWithType: event_by_type_index_position_tagger.the_same_events_checkpoint_tag_is_compatible
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.the_same_events_checkpoint_tag_is_compatible
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.adjust_compatible_tag_returns_the_same_tag*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.adjust_compatible_tag_returns_the_same_tag
  isExternal: false
  name: adjust_compatible_tag_returns_the_same_tag
  nameWithType: event_by_type_index_position_tagger.adjust_compatible_tag_returns_the_same_tag
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.adjust_compatible_tag_returns_the_same_tag
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_adjust_tf_position_tag*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_adjust_tf_position_tag
  isExternal: false
  name: can_adjust_tf_position_tag
  nameWithType: event_by_type_index_position_tagger.can_adjust_tf_position_tag
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_adjust_tf_position_tag
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.zero_position_tag_is_before_first_event_possible*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.zero_position_tag_is_before_first_event_possible
  isExternal: false
  name: zero_position_tag_is_before_first_event_possible
  nameWithType: event_by_type_index_position_tagger.zero_position_tag_is_before_first_event_possible
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.zero_position_tag_is_before_first_event_possible
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_update_by_tf_event_if_with_prior_index_position*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_update_by_tf_event_if_with_prior_index_position
  isExternal: false
  name: can_update_by_tf_event_if_with_prior_index_position
  nameWithType: event_by_type_index_position_tagger.can_update_by_tf_event_if_with_prior_index_position
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.can_update_by_tf_event_if_with_prior_index_position
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.cannot_update_by_prior_tf_position*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.cannot_update_by_prior_tf_position
  isExternal: false
  name: cannot_update_by_prior_tf_position
  nameWithType: event_by_type_index_position_tagger.cannot_update_by_prior_tf_position
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.cannot_update_by_prior_tf_position
- uid: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.produced_checkpoint_tags_are_correctly_ordered*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.produced_checkpoint_tags_are_correctly_ordered
  isExternal: false
  name: produced_checkpoint_tags_are_correctly_ordered
  nameWithType: event_by_type_index_position_tagger.produced_checkpoint_tags_are_correctly_ordered
  fullName: EventStore.Projections.Core.Tests.Services.position_tagging.event_by_type_index_position_tagger.event_by_type_index_position_tagger.produced_checkpoint_tags_are_correctly_ordered

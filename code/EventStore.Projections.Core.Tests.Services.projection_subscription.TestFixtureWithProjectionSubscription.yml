### YamlMime:ManagedReference
items:
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  commentId: T:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  id: TestFixtureWithProjectionSubscription
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription
  children:
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._bus
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._checkpointAfterMs
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._checkpointHandler
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._checkpointProcessedEventsThreshold
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._checkpointUnhandledBytesThreshold
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._eofHandler
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._eventHandler
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._notAuthorizedHandler
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._partitionDeletedHandler
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._partitionEofHandler
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._partitionMeasuredHandler
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._progressHandler
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._projectionCorrelationId
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._readerStrategy
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._source
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._subscription
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._subscriptionStartedHandler
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._timeProvider
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.CreateCheckpointStrategy
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.CreateProjectionSubscription
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.ForkedReader
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.Given
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.setup
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.When
  langs:
  - csharp
  - vb
  name: TestFixtureWithProjectionSubscription
  nameWithType: TestFixtureWithProjectionSubscription
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  type: Class
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TestFixtureWithProjectionSubscription
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 11
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: 'public abstract class TestFixtureWithProjectionSubscription : object'
    content.vb: >-
      Public MustInherit Class TestFixtureWithProjectionSubscription

          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - EventStore.Projections.Core.Tests.Services.event_reordering_projection_subscription.TestFixtureWithEventReorderingProjectionSubscription
  - EventStore.Projections.Core.Tests.Services.projection_subscription.when_handling_committed_event_passing_the_filter
  - EventStore.Projections.Core.Tests.Services.projection_subscription.when_handling_duplicate_events
  - EventStore.Projections.Core.Tests.Services.projection_subscription.when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses
  - EventStore.Projections.Core.Tests.Services.projection_subscription.when_handling_enough_events_for_a_checkpoint_after_specified_time_elapses_and_not_passing_filter
  - EventStore.Projections.Core.Tests.Services.projection_subscription.when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses
  - EventStore.Projections.Core.Tests.Services.projection_subscription.when_handling_enough_events_for_a_checkpoint_before_specified_time_elapses_and_not_passing_filter
  - EventStore.Projections.Core.Tests.Services.projection_subscription.when_handling_multiple_committed_event_passing_the_filter
  - EventStore.Projections.Core.Tests.Services.projection_subscription.when_receiving_multiple_events_not_passing_event_filter
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._projectionCorrelationId
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._projectionCorrelationId
  id: _projectionCorrelationId
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _projectionCorrelationId
  nameWithType: TestFixtureWithProjectionSubscription._projectionCorrelationId
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._projectionCorrelationId
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _projectionCorrelationId
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 13
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected Guid _projectionCorrelationId
    return:
      type: Guid
    content.vb: Protected _projectionCorrelationId As Guid
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._eventHandler
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._eventHandler
  id: _eventHandler
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _eventHandler
  nameWithType: TestFixtureWithProjectionSubscription._eventHandler
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._eventHandler
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _eventHandler
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 14
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected TestHandler<EventReaderSubscriptionMessage.CommittedEventReceived> _eventHandler
    return:
      type: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived}
    content.vb: Protected _eventHandler As TestHandler(Of EventReaderSubscriptionMessage.CommittedEventReceived)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._checkpointHandler
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._checkpointHandler
  id: _checkpointHandler
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _checkpointHandler
  nameWithType: TestFixtureWithProjectionSubscription._checkpointHandler
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._checkpointHandler
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _checkpointHandler
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 15
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected TestHandler<EventReaderSubscriptionMessage.CheckpointSuggested> _checkpointHandler
    return:
      type: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested}
    content.vb: Protected _checkpointHandler As TestHandler(Of EventReaderSubscriptionMessage.CheckpointSuggested)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._progressHandler
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._progressHandler
  id: _progressHandler
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _progressHandler
  nameWithType: TestFixtureWithProjectionSubscription._progressHandler
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._progressHandler
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _progressHandler
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 16
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected TestHandler<EventReaderSubscriptionMessage.ProgressChanged> _progressHandler
    return:
      type: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged}
    content.vb: Protected _progressHandler As TestHandler(Of EventReaderSubscriptionMessage.ProgressChanged)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._subscriptionStartedHandler
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._subscriptionStartedHandler
  id: _subscriptionStartedHandler
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _subscriptionStartedHandler
  nameWithType: TestFixtureWithProjectionSubscription._subscriptionStartedHandler
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._subscriptionStartedHandler
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _subscriptionStartedHandler
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 17
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected TestHandler<EventReaderSubscriptionMessage.SubscriptionStarted> _subscriptionStartedHandler
    return:
      type: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted}
    content.vb: Protected _subscriptionStartedHandler As TestHandler(Of EventReaderSubscriptionMessage.SubscriptionStarted)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._notAuthorizedHandler
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._notAuthorizedHandler
  id: _notAuthorizedHandler
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _notAuthorizedHandler
  nameWithType: TestFixtureWithProjectionSubscription._notAuthorizedHandler
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._notAuthorizedHandler
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _notAuthorizedHandler
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 18
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected TestHandler<EventReaderSubscriptionMessage.NotAuthorized> _notAuthorizedHandler
    return:
      type: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized}
    content.vb: Protected _notAuthorizedHandler As TestHandler(Of EventReaderSubscriptionMessage.NotAuthorized)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._eofHandler
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._eofHandler
  id: _eofHandler
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _eofHandler
  nameWithType: TestFixtureWithProjectionSubscription._eofHandler
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._eofHandler
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _eofHandler
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 19
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected TestHandler<EventReaderSubscriptionMessage.EofReached> _eofHandler
    return:
      type: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached}
    content.vb: Protected _eofHandler As TestHandler(Of EventReaderSubscriptionMessage.EofReached)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._partitionEofHandler
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._partitionEofHandler
  id: _partitionEofHandler
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _partitionEofHandler
  nameWithType: TestFixtureWithProjectionSubscription._partitionEofHandler
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._partitionEofHandler
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _partitionEofHandler
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 20
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected TestHandler<EventReaderSubscriptionMessage.PartitionEofReached> _partitionEofHandler
    return:
      type: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionEofReached}
    content.vb: Protected _partitionEofHandler As TestHandler(Of EventReaderSubscriptionMessage.PartitionEofReached)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._partitionMeasuredHandler
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._partitionMeasuredHandler
  id: _partitionMeasuredHandler
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _partitionMeasuredHandler
  nameWithType: TestFixtureWithProjectionSubscription._partitionMeasuredHandler
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._partitionMeasuredHandler
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _partitionMeasuredHandler
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 21
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected TestHandler<EventReaderSubscriptionMessage.PartitionMeasured> _partitionMeasuredHandler
    return:
      type: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionMeasured}
    content.vb: Protected _partitionMeasuredHandler As TestHandler(Of EventReaderSubscriptionMessage.PartitionMeasured)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._partitionDeletedHandler
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._partitionDeletedHandler
  id: _partitionDeletedHandler
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _partitionDeletedHandler
  nameWithType: TestFixtureWithProjectionSubscription._partitionDeletedHandler
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._partitionDeletedHandler
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _partitionDeletedHandler
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 22
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected TestHandler<EventReaderSubscriptionMessage.PartitionDeleted> _partitionDeletedHandler
    return:
      type: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionDeleted}
    content.vb: Protected _partitionDeletedHandler As TestHandler(Of EventReaderSubscriptionMessage.PartitionDeleted)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._subscription
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._subscription
  id: _subscription
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _subscription
  nameWithType: TestFixtureWithProjectionSubscription._subscription
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._subscription
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _subscription
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 23
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected IReaderSubscription _subscription
    return:
      type: EventStore.Projections.Core.Services.Processing.IReaderSubscription
    content.vb: Protected _subscription As IReaderSubscription
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._timeProvider
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._timeProvider
  id: _timeProvider
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _timeProvider
  nameWithType: TestFixtureWithProjectionSubscription._timeProvider
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._timeProvider
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _timeProvider
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 24
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected ITimeProvider _timeProvider
    return:
      type: EventStore.Core.Services.TimerService.ITimeProvider
    content.vb: Protected _timeProvider As ITimeProvider
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.ForkedReader
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.ForkedReader
  id: ForkedReader
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: ForkedReader
  nameWithType: TestFixtureWithProjectionSubscription.ForkedReader
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.ForkedReader
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ForkedReader
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 25
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected IEventReader ForkedReader
    return:
      type: EventStore.Projections.Core.Services.Processing.IEventReader
    content.vb: Protected ForkedReader As IEventReader
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._bus
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._bus
  id: _bus
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _bus
  nameWithType: TestFixtureWithProjectionSubscription._bus
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._bus
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _bus
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 26
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected InMemoryBus _bus
    return:
      type: EventStore.Core.Bus.InMemoryBus
    content.vb: Protected _bus As InMemoryBus
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._source
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._source
  id: _source
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _source
  nameWithType: TestFixtureWithProjectionSubscription._source
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._source
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _source
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 27
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected Action<SourceDefinitionBuilder> _source
    return:
      type: Action{EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder}
    content.vb: Protected _source As Action(Of SourceDefinitionBuilder)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._checkpointUnhandledBytesThreshold
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._checkpointUnhandledBytesThreshold
  id: _checkpointUnhandledBytesThreshold
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _checkpointUnhandledBytesThreshold
  nameWithType: TestFixtureWithProjectionSubscription._checkpointUnhandledBytesThreshold
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._checkpointUnhandledBytesThreshold
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _checkpointUnhandledBytesThreshold
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 28
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected int _checkpointUnhandledBytesThreshold
    return:
      type: System.Int32
    content.vb: Protected _checkpointUnhandledBytesThreshold As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._checkpointProcessedEventsThreshold
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._checkpointProcessedEventsThreshold
  id: _checkpointProcessedEventsThreshold
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _checkpointProcessedEventsThreshold
  nameWithType: TestFixtureWithProjectionSubscription._checkpointProcessedEventsThreshold
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._checkpointProcessedEventsThreshold
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _checkpointProcessedEventsThreshold
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 29
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected int _checkpointProcessedEventsThreshold
    return:
      type: System.Int32
    content.vb: Protected _checkpointProcessedEventsThreshold As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._checkpointAfterMs
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._checkpointAfterMs
  id: _checkpointAfterMs
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _checkpointAfterMs
  nameWithType: TestFixtureWithProjectionSubscription._checkpointAfterMs
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._checkpointAfterMs
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _checkpointAfterMs
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 30
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected int _checkpointAfterMs
    return:
      type: System.Int32
    content.vb: Protected _checkpointAfterMs As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._readerStrategy
  commentId: F:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._readerStrategy
  id: _readerStrategy
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: _readerStrategy
  nameWithType: TestFixtureWithProjectionSubscription._readerStrategy
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription._readerStrategy
  type: Field
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: _readerStrategy
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 31
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected IReaderStrategy _readerStrategy
    return:
      type: EventStore.Projections.Core.Services.Processing.IReaderStrategy
    content.vb: Protected _readerStrategy As IReaderStrategy
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.setup
  commentId: M:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.setup
  id: setup
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: setup()
  nameWithType: TestFixtureWithProjectionSubscription.setup()
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.setup()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: setup
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 33
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: public void setup()
    content.vb: Public Sub setup
  overload: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.setup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.CreateProjectionSubscription
  commentId: M:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.CreateProjectionSubscription
  id: CreateProjectionSubscription
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: CreateProjectionSubscription()
  nameWithType: TestFixtureWithProjectionSubscription.CreateProjectionSubscription()
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.CreateProjectionSubscription()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateProjectionSubscription
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 66
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected virtual IReaderSubscription CreateProjectionSubscription()
    return:
      type: EventStore.Projections.Core.Services.Processing.IReaderSubscription
    content.vb: Protected Overridable Function CreateProjectionSubscription As IReaderSubscription
  overload: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.CreateProjectionSubscription*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.Given
  commentId: M:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.Given
  id: Given
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: Given()
  nameWithType: TestFixtureWithProjectionSubscription.Given()
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.Given()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Given
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 80
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected virtual void Given()
    content.vb: Protected Overridable Sub Given
  overload: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.Given*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.When
  commentId: M:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.When
  id: When
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: When()
  nameWithType: TestFixtureWithProjectionSubscription.When()
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.When()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: When
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 84
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected abstract void When()
    content.vb: Protected MustOverride Sub When
  overload: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.When*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.CreateCheckpointStrategy
  commentId: M:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.CreateCheckpointStrategy
  id: CreateCheckpointStrategy
  parent: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription
  langs:
  - csharp
  - vb
  name: CreateCheckpointStrategy()
  nameWithType: TestFixtureWithProjectionSubscription.CreateCheckpointStrategy()
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.CreateCheckpointStrategy()
  type: Method
  source:
    remote:
      path: src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CreateCheckpointStrategy
    path: ../EventStore/src/EventStore.Projections.Core.Tests/Services/projection_subscription/TestFixtureWithProjectionSubscription.cs
    startLine: 86
  assemblies:
  - EventStore.Projections.Core.Tests
  namespace: EventStore.Projections.Core.Tests.Services.projection_subscription
  syntax:
    content: protected virtual IReaderStrategy CreateCheckpointStrategy()
    return:
      type: EventStore.Projections.Core.Services.Processing.IReaderStrategy
    content.vb: Protected Overridable Function CreateCheckpointStrategy As IReaderStrategy
  overload: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.CreateCheckpointStrategy*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription
  commentId: N:EventStore.Projections.Core.Tests.Services.projection_subscription
  isExternal: false
  name: EventStore.Projections.Core.Tests.Services.projection_subscription
  nameWithType: EventStore.Projections.Core.Tests.Services.projection_subscription
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TestFixtureWithProjectionSubscription>()
  nameWithType: ProtobufExtensions.Serialize<TestFixtureWithProjectionSubscription>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TestFixtureWithProjectionSubscription)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription)()
  name.vb: Serialize(Of TestFixtureWithProjectionSubscription)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TestFixtureWithProjectionSubscription>
    nameWithType: ProtobufExtensions.Serialize<TestFixtureWithProjectionSubscription>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TestFixtureWithProjectionSubscription)
    nameWithType: ProtobufExtensions.Serialize(Of TestFixtureWithProjectionSubscription)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TestFixtureWithProjectionSubscription>()
  nameWithType: ProtobufExtensions.SerializeToArray<TestFixtureWithProjectionSubscription>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TestFixtureWithProjectionSubscription)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription)()
  name.vb: SerializeToArray(Of TestFixtureWithProjectionSubscription)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TestFixtureWithProjectionSubscription>
    nameWithType: ProtobufExtensions.SerializeToArray<TestFixtureWithProjectionSubscription>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TestFixtureWithProjectionSubscription)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TestFixtureWithProjectionSubscription)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived}
  commentId: T:EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived}
  parent: EventStore.Core.Tests.Bus.Helpers
  definition: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
  name: TestHandler<EventReaderSubscriptionMessage.CommittedEventReceived>
  nameWithType: TestHandler<EventReaderSubscriptionMessage.CommittedEventReceived>
  fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived>
  nameWithType.vb: TestHandler(Of EventReaderSubscriptionMessage.CommittedEventReceived)
  fullName.vb: EventStore.Core.Tests.Bus.Helpers.TestHandler(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived)
  name.vb: TestHandler(Of EventReaderSubscriptionMessage.CommittedEventReceived)
  spec.csharp:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
    name: EventReaderSubscriptionMessage.CommittedEventReceived
    nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
    name: EventReaderSubscriptionMessage.CommittedEventReceived
    nameWithType: EventReaderSubscriptionMessage.CommittedEventReceived
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
  commentId: T:EventStore.Core.Tests.Bus.Helpers.TestHandler`1
  isExternal: false
  name: TestHandler<T>
  nameWithType: TestHandler<T>
  fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler<T>
  nameWithType.vb: TestHandler(Of T)
  fullName.vb: EventStore.Core.Tests.Bus.Helpers.TestHandler(Of T)
  name.vb: TestHandler(Of T)
  spec.csharp:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers
  commentId: N:EventStore.Core.Tests.Bus.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Bus.Helpers
  nameWithType: EventStore.Core.Tests.Bus.Helpers
  fullName: EventStore.Core.Tests.Bus.Helpers
- uid: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested}
  commentId: T:EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested}
  parent: EventStore.Core.Tests.Bus.Helpers
  definition: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
  name: TestHandler<EventReaderSubscriptionMessage.CheckpointSuggested>
  nameWithType: TestHandler<EventReaderSubscriptionMessage.CheckpointSuggested>
  fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested>
  nameWithType.vb: TestHandler(Of EventReaderSubscriptionMessage.CheckpointSuggested)
  fullName.vb: EventStore.Core.Tests.Bus.Helpers.TestHandler(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested)
  name.vb: TestHandler(Of EventReaderSubscriptionMessage.CheckpointSuggested)
  spec.csharp:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
    name: EventReaderSubscriptionMessage.CheckpointSuggested
    nameWithType: EventReaderSubscriptionMessage.CheckpointSuggested
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
    name: EventReaderSubscriptionMessage.CheckpointSuggested
    nameWithType: EventReaderSubscriptionMessage.CheckpointSuggested
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged}
  commentId: T:EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged}
  parent: EventStore.Core.Tests.Bus.Helpers
  definition: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
  name: TestHandler<EventReaderSubscriptionMessage.ProgressChanged>
  nameWithType: TestHandler<EventReaderSubscriptionMessage.ProgressChanged>
  fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged>
  nameWithType.vb: TestHandler(Of EventReaderSubscriptionMessage.ProgressChanged)
  fullName.vb: EventStore.Core.Tests.Bus.Helpers.TestHandler(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged)
  name.vb: TestHandler(Of EventReaderSubscriptionMessage.ProgressChanged)
  spec.csharp:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
    name: EventReaderSubscriptionMessage.ProgressChanged
    nameWithType: EventReaderSubscriptionMessage.ProgressChanged
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
    name: EventReaderSubscriptionMessage.ProgressChanged
    nameWithType: EventReaderSubscriptionMessage.ProgressChanged
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted}
  commentId: T:EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted}
  parent: EventStore.Core.Tests.Bus.Helpers
  definition: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
  name: TestHandler<EventReaderSubscriptionMessage.SubscriptionStarted>
  nameWithType: TestHandler<EventReaderSubscriptionMessage.SubscriptionStarted>
  fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted>
  nameWithType.vb: TestHandler(Of EventReaderSubscriptionMessage.SubscriptionStarted)
  fullName.vb: EventStore.Core.Tests.Bus.Helpers.TestHandler(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted)
  name.vb: TestHandler(Of EventReaderSubscriptionMessage.SubscriptionStarted)
  spec.csharp:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
    name: EventReaderSubscriptionMessage.SubscriptionStarted
    nameWithType: EventReaderSubscriptionMessage.SubscriptionStarted
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
    name: EventReaderSubscriptionMessage.SubscriptionStarted
    nameWithType: EventReaderSubscriptionMessage.SubscriptionStarted
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized}
  commentId: T:EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized}
  parent: EventStore.Core.Tests.Bus.Helpers
  definition: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
  name: TestHandler<EventReaderSubscriptionMessage.NotAuthorized>
  nameWithType: TestHandler<EventReaderSubscriptionMessage.NotAuthorized>
  fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized>
  nameWithType.vb: TestHandler(Of EventReaderSubscriptionMessage.NotAuthorized)
  fullName.vb: EventStore.Core.Tests.Bus.Helpers.TestHandler(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized)
  name.vb: TestHandler(Of EventReaderSubscriptionMessage.NotAuthorized)
  spec.csharp:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
    name: EventReaderSubscriptionMessage.NotAuthorized
    nameWithType: EventReaderSubscriptionMessage.NotAuthorized
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
    name: EventReaderSubscriptionMessage.NotAuthorized
    nameWithType: EventReaderSubscriptionMessage.NotAuthorized
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached}
  commentId: T:EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached}
  parent: EventStore.Core.Tests.Bus.Helpers
  definition: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
  name: TestHandler<EventReaderSubscriptionMessage.EofReached>
  nameWithType: TestHandler<EventReaderSubscriptionMessage.EofReached>
  fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached>
  nameWithType.vb: TestHandler(Of EventReaderSubscriptionMessage.EofReached)
  fullName.vb: EventStore.Core.Tests.Bus.Helpers.TestHandler(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached)
  name.vb: TestHandler(Of EventReaderSubscriptionMessage.EofReached)
  spec.csharp:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
    name: EventReaderSubscriptionMessage.EofReached
    nameWithType: EventReaderSubscriptionMessage.EofReached
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
    name: EventReaderSubscriptionMessage.EofReached
    nameWithType: EventReaderSubscriptionMessage.EofReached
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionEofReached}
  commentId: T:EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionEofReached}
  parent: EventStore.Core.Tests.Bus.Helpers
  definition: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
  name: TestHandler<EventReaderSubscriptionMessage.PartitionEofReached>
  nameWithType: TestHandler<EventReaderSubscriptionMessage.PartitionEofReached>
  fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionEofReached>
  nameWithType.vb: TestHandler(Of EventReaderSubscriptionMessage.PartitionEofReached)
  fullName.vb: EventStore.Core.Tests.Bus.Helpers.TestHandler(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionEofReached)
  name.vb: TestHandler(Of EventReaderSubscriptionMessage.PartitionEofReached)
  spec.csharp:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionEofReached
    name: EventReaderSubscriptionMessage.PartitionEofReached
    nameWithType: EventReaderSubscriptionMessage.PartitionEofReached
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionEofReached
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionEofReached
    name: EventReaderSubscriptionMessage.PartitionEofReached
    nameWithType: EventReaderSubscriptionMessage.PartitionEofReached
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionEofReached
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionMeasured}
  commentId: T:EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionMeasured}
  parent: EventStore.Core.Tests.Bus.Helpers
  definition: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
  name: TestHandler<EventReaderSubscriptionMessage.PartitionMeasured>
  nameWithType: TestHandler<EventReaderSubscriptionMessage.PartitionMeasured>
  fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionMeasured>
  nameWithType.vb: TestHandler(Of EventReaderSubscriptionMessage.PartitionMeasured)
  fullName.vb: EventStore.Core.Tests.Bus.Helpers.TestHandler(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionMeasured)
  name.vb: TestHandler(Of EventReaderSubscriptionMessage.PartitionMeasured)
  spec.csharp:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionMeasured
    name: EventReaderSubscriptionMessage.PartitionMeasured
    nameWithType: EventReaderSubscriptionMessage.PartitionMeasured
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionMeasured
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionMeasured
    name: EventReaderSubscriptionMessage.PartitionMeasured
    nameWithType: EventReaderSubscriptionMessage.PartitionMeasured
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionMeasured
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionDeleted}
  commentId: T:EventStore.Core.Tests.Bus.Helpers.TestHandler{EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionDeleted}
  parent: EventStore.Core.Tests.Bus.Helpers
  definition: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
  name: TestHandler<EventReaderSubscriptionMessage.PartitionDeleted>
  nameWithType: TestHandler<EventReaderSubscriptionMessage.PartitionDeleted>
  fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler<EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionDeleted>
  nameWithType.vb: TestHandler(Of EventReaderSubscriptionMessage.PartitionDeleted)
  fullName.vb: EventStore.Core.Tests.Bus.Helpers.TestHandler(Of EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionDeleted)
  name.vb: TestHandler(Of EventReaderSubscriptionMessage.PartitionDeleted)
  spec.csharp:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionDeleted
    name: EventReaderSubscriptionMessage.PartitionDeleted
    nameWithType: EventReaderSubscriptionMessage.PartitionDeleted
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionDeleted
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Tests.Bus.Helpers.TestHandler`1
    name: TestHandler
    nameWithType: TestHandler
    fullName: EventStore.Core.Tests.Bus.Helpers.TestHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionDeleted
    name: EventReaderSubscriptionMessage.PartitionDeleted
    nameWithType: EventReaderSubscriptionMessage.PartitionDeleted
    fullName: EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionDeleted
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Services.Processing.IReaderSubscription
  commentId: T:EventStore.Projections.Core.Services.Processing.IReaderSubscription
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: IReaderSubscription
  nameWithType: IReaderSubscription
  fullName: EventStore.Projections.Core.Services.Processing.IReaderSubscription
- uid: EventStore.Projections.Core.Services.Processing
  commentId: N:EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: EventStore.Projections.Core.Services.Processing
  nameWithType: EventStore.Projections.Core.Services.Processing
  fullName: EventStore.Projections.Core.Services.Processing
- uid: EventStore.Core.Services.TimerService.ITimeProvider
  commentId: T:EventStore.Core.Services.TimerService.ITimeProvider
  parent: EventStore.Core.Services.TimerService
  isExternal: false
  name: ITimeProvider
  nameWithType: ITimeProvider
  fullName: EventStore.Core.Services.TimerService.ITimeProvider
- uid: EventStore.Core.Services.TimerService
  commentId: N:EventStore.Core.Services.TimerService
  isExternal: false
  name: EventStore.Core.Services.TimerService
  nameWithType: EventStore.Core.Services.TimerService
  fullName: EventStore.Core.Services.TimerService
- uid: EventStore.Projections.Core.Services.Processing.IEventReader
  commentId: T:EventStore.Projections.Core.Services.Processing.IEventReader
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: IEventReader
  nameWithType: IEventReader
  fullName: EventStore.Projections.Core.Services.Processing.IEventReader
- uid: EventStore.Core.Bus.InMemoryBus
  commentId: T:EventStore.Core.Bus.InMemoryBus
  parent: EventStore.Core.Bus
  isExternal: false
  name: InMemoryBus
  nameWithType: InMemoryBus
  fullName: EventStore.Core.Bus.InMemoryBus
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  isExternal: false
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: Action{EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder}
  commentId: '!:Action{EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder}'
  definition: Action`1
  name: Action<SourceDefinitionBuilder>
  nameWithType: Action<SourceDefinitionBuilder>
  fullName: Action<EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder>
  nameWithType.vb: Action(Of SourceDefinitionBuilder)
  fullName.vb: Action(Of EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder)
  name.vb: Action(Of SourceDefinitionBuilder)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
    name: SourceDefinitionBuilder
    nameWithType: SourceDefinitionBuilder
    fullName: EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
    name: SourceDefinitionBuilder
    nameWithType: SourceDefinitionBuilder
    fullName: EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Projections.Core.Services.Processing.IReaderStrategy
  commentId: T:EventStore.Projections.Core.Services.Processing.IReaderStrategy
  parent: EventStore.Projections.Core.Services.Processing
  isExternal: false
  name: IReaderStrategy
  nameWithType: IReaderStrategy
  fullName: EventStore.Projections.Core.Services.Processing.IReaderStrategy
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.setup*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.setup
  isExternal: false
  name: setup
  nameWithType: TestFixtureWithProjectionSubscription.setup
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.setup
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.CreateProjectionSubscription*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.CreateProjectionSubscription
  isExternal: false
  name: CreateProjectionSubscription
  nameWithType: TestFixtureWithProjectionSubscription.CreateProjectionSubscription
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.CreateProjectionSubscription
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.Given*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.Given
  isExternal: false
  name: Given
  nameWithType: TestFixtureWithProjectionSubscription.Given
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.Given
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.When*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.When
  isExternal: false
  name: When
  nameWithType: TestFixtureWithProjectionSubscription.When
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.When
- uid: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.CreateCheckpointStrategy*
  commentId: Overload:EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.CreateCheckpointStrategy
  isExternal: false
  name: CreateCheckpointStrategy
  nameWithType: TestFixtureWithProjectionSubscription.CreateCheckpointStrategy
  fullName: EventStore.Projections.Core.Tests.Services.projection_subscription.TestFixtureWithProjectionSubscription.CreateCheckpointStrategy

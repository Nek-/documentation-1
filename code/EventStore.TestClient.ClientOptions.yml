### YamlMime:ManagedReference
items:
- uid: EventStore.TestClient.ClientOptions
  commentId: T:EventStore.TestClient.ClientOptions
  id: ClientOptions
  parent: EventStore.TestClient
  children:
  - EventStore.TestClient.ClientOptions.#ctor
  - EventStore.TestClient.ClientOptions.Command
  - EventStore.TestClient.ClientOptions.Config
  - EventStore.TestClient.ClientOptions.Defines
  - EventStore.TestClient.ClientOptions.Force
  - EventStore.TestClient.ClientOptions.Help
  - EventStore.TestClient.ClientOptions.HttpPort
  - EventStore.TestClient.ClientOptions.Ip
  - EventStore.TestClient.ClientOptions.Log
  - EventStore.TestClient.ClientOptions.PingWindow
  - EventStore.TestClient.ClientOptions.ReadWindow
  - EventStore.TestClient.ClientOptions.Reconnect
  - EventStore.TestClient.ClientOptions.TargetHost
  - EventStore.TestClient.ClientOptions.TcpPort
  - EventStore.TestClient.ClientOptions.Timeout
  - EventStore.TestClient.ClientOptions.UseSsl
  - EventStore.TestClient.ClientOptions.ValidateServer
  - EventStore.TestClient.ClientOptions.Version
  - EventStore.TestClient.ClientOptions.WhatIf
  - EventStore.TestClient.ClientOptions.WriteWindow
  langs:
  - csharp
  - vb
  name: ClientOptions
  nameWithType: ClientOptions
  fullName: EventStore.TestClient.ClientOptions
  type: Class
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ClientOptions
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 12
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  summary: "\nData contract for the command-line options accepted by test client.\nThis contract is handled by CommandLine project for .NET\n"
  example: []
  syntax:
    content: 'public sealed class ClientOptions : object, IOptions'
    content.vb: >-
      Public NotInheritable Class ClientOptions

          Inherits Object

          Implements IOptions
  inheritance:
  - System.Object
  implements:
  - EventStore.Common.Options.IOptions
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.TestClient.ClientOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.TestClient.ClientOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.TestClient.ClientOptions.Help
  commentId: P:EventStore.TestClient.ClientOptions.Help
  id: Help
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: Help
  nameWithType: ClientOptions.Help
  fullName: EventStore.TestClient.ClientOptions.Help
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Help
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 14
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public bool Help { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Help As Boolean
  overload: EventStore.TestClient.ClientOptions.Help*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.Version
  commentId: P:EventStore.TestClient.ClientOptions.Version
  id: Version
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ClientOptions.Version
  fullName: EventStore.TestClient.ClientOptions.Version
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Version
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 16
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public bool Version { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Version As Boolean
  overload: EventStore.TestClient.ClientOptions.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.Log
  commentId: P:EventStore.TestClient.ClientOptions.Log
  id: Log
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: Log
  nameWithType: ClientOptions.Log
  fullName: EventStore.TestClient.ClientOptions.Log
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Log
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 18
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public string Log { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Log As String
  overload: EventStore.TestClient.ClientOptions.Log*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.Config
  commentId: P:EventStore.TestClient.ClientOptions.Config
  id: Config
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: ClientOptions.Config
  fullName: EventStore.TestClient.ClientOptions.Config
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Config
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 20
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public string Config { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Config As String
  overload: EventStore.TestClient.ClientOptions.Config*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.Defines
  commentId: P:EventStore.TestClient.ClientOptions.Defines
  id: Defines
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: Defines
  nameWithType: ClientOptions.Defines
  fullName: EventStore.TestClient.ClientOptions.Defines
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Defines
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 22
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public string[] Defines { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property Defines As String()
  overload: EventStore.TestClient.ClientOptions.Defines*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.WhatIf
  commentId: P:EventStore.TestClient.ClientOptions.WhatIf
  id: WhatIf
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: WhatIf
  nameWithType: ClientOptions.WhatIf
  fullName: EventStore.TestClient.ClientOptions.WhatIf
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WhatIf
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 24
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public bool WhatIf { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property WhatIf As Boolean
  overload: EventStore.TestClient.ClientOptions.WhatIf*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.Ip
  commentId: P:EventStore.TestClient.ClientOptions.Ip
  id: Ip
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: Ip
  nameWithType: ClientOptions.Ip
  fullName: EventStore.TestClient.ClientOptions.Ip
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Ip
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 27
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public IPAddress Ip { get; set; }
    parameters: []
    return:
      type: IPAddress
    content.vb: Public Property Ip As IPAddress
  overload: EventStore.TestClient.ClientOptions.Ip*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.TcpPort
  commentId: P:EventStore.TestClient.ClientOptions.TcpPort
  id: TcpPort
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: TcpPort
  nameWithType: ClientOptions.TcpPort
  fullName: EventStore.TestClient.ClientOptions.TcpPort
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TcpPort
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 29
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public int TcpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TcpPort As Integer
  overload: EventStore.TestClient.ClientOptions.TcpPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.HttpPort
  commentId: P:EventStore.TestClient.ClientOptions.HttpPort
  id: HttpPort
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: HttpPort
  nameWithType: ClientOptions.HttpPort
  fullName: EventStore.TestClient.ClientOptions.HttpPort
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HttpPort
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 31
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public int HttpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property HttpPort As Integer
  overload: EventStore.TestClient.ClientOptions.HttpPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.Timeout
  commentId: P:EventStore.TestClient.ClientOptions.Timeout
  id: Timeout
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: Timeout
  nameWithType: ClientOptions.Timeout
  fullName: EventStore.TestClient.ClientOptions.Timeout
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Timeout
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 33
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public int Timeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Timeout As Integer
  overload: EventStore.TestClient.ClientOptions.Timeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.ReadWindow
  commentId: P:EventStore.TestClient.ClientOptions.ReadWindow
  id: ReadWindow
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: ReadWindow
  nameWithType: ClientOptions.ReadWindow
  fullName: EventStore.TestClient.ClientOptions.ReadWindow
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadWindow
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 34
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public int ReadWindow { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ReadWindow As Integer
  overload: EventStore.TestClient.ClientOptions.ReadWindow*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.WriteWindow
  commentId: P:EventStore.TestClient.ClientOptions.WriteWindow
  id: WriteWindow
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: WriteWindow
  nameWithType: ClientOptions.WriteWindow
  fullName: EventStore.TestClient.ClientOptions.WriteWindow
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WriteWindow
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 35
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public int WriteWindow { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property WriteWindow As Integer
  overload: EventStore.TestClient.ClientOptions.WriteWindow*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.PingWindow
  commentId: P:EventStore.TestClient.ClientOptions.PingWindow
  id: PingWindow
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: PingWindow
  nameWithType: ClientOptions.PingWindow
  fullName: EventStore.TestClient.ClientOptions.PingWindow
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PingWindow
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 36
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public int PingWindow { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PingWindow As Integer
  overload: EventStore.TestClient.ClientOptions.PingWindow*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.Force
  commentId: P:EventStore.TestClient.ClientOptions.Force
  id: Force
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: Force
  nameWithType: ClientOptions.Force
  fullName: EventStore.TestClient.ClientOptions.Force
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Force
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 37
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public bool Force { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Force As Boolean
  overload: EventStore.TestClient.ClientOptions.Force*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.Command
  commentId: P:EventStore.TestClient.ClientOptions.Command
  id: Command
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: Command
  nameWithType: ClientOptions.Command
  fullName: EventStore.TestClient.ClientOptions.Command
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Command
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 39
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public string[] Command { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property Command As String()
  overload: EventStore.TestClient.ClientOptions.Command*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.Reconnect
  commentId: P:EventStore.TestClient.ClientOptions.Reconnect
  id: Reconnect
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: Reconnect
  nameWithType: ClientOptions.Reconnect
  fullName: EventStore.TestClient.ClientOptions.Reconnect
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Reconnect
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 40
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public bool Reconnect { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Reconnect As Boolean
  overload: EventStore.TestClient.ClientOptions.Reconnect*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.UseSsl
  commentId: P:EventStore.TestClient.ClientOptions.UseSsl
  id: UseSsl
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: UseSsl
  nameWithType: ClientOptions.UseSsl
  fullName: EventStore.TestClient.ClientOptions.UseSsl
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: UseSsl
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 42
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public bool UseSsl { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseSsl As Boolean
  overload: EventStore.TestClient.ClientOptions.UseSsl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.TargetHost
  commentId: P:EventStore.TestClient.ClientOptions.TargetHost
  id: TargetHost
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: TargetHost
  nameWithType: ClientOptions.TargetHost
  fullName: EventStore.TestClient.ClientOptions.TargetHost
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TargetHost
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 43
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public string TargetHost { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TargetHost As String
  overload: EventStore.TestClient.ClientOptions.TargetHost*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.ValidateServer
  commentId: P:EventStore.TestClient.ClientOptions.ValidateServer
  id: ValidateServer
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: ValidateServer
  nameWithType: ClientOptions.ValidateServer
  fullName: EventStore.TestClient.ClientOptions.ValidateServer
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ValidateServer
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 44
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public bool ValidateServer { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ValidateServer As Boolean
  overload: EventStore.TestClient.ClientOptions.ValidateServer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.ClientOptions.#ctor
  commentId: M:EventStore.TestClient.ClientOptions.#ctor
  id: '#ctor'
  parent: EventStore.TestClient.ClientOptions
  langs:
  - csharp
  - vb
  name: ClientOptions()
  nameWithType: ClientOptions.ClientOptions()
  fullName: EventStore.TestClient.ClientOptions.ClientOptions()
  type: Constructor
  source:
    remote:
      path: src/EventStore.TestClient/ClientOptions.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.TestClient/ClientOptions.cs
    startLine: 46
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public ClientOptions()
    content.vb: Public Sub New
  overload: EventStore.TestClient.ClientOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.TestClient
  commentId: N:EventStore.TestClient
  isExternal: false
  name: EventStore.TestClient
  nameWithType: EventStore.TestClient
  fullName: EventStore.TestClient
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Common.Options.IOptions
  commentId: T:EventStore.Common.Options.IOptions
  parent: EventStore.Common.Options
  isExternal: false
  name: IOptions
  nameWithType: IOptions
  fullName: EventStore.Common.Options.IOptions
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.TestClient.ClientOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ClientOptions>()
  nameWithType: ProtobufExtensions.Serialize<ClientOptions>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.TestClient.ClientOptions>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ClientOptions)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.TestClient.ClientOptions)()
  name.vb: Serialize(Of ClientOptions)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ClientOptions>
    nameWithType: ProtobufExtensions.Serialize<ClientOptions>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.TestClient.ClientOptions>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ClientOptions)
    nameWithType: ProtobufExtensions.Serialize(Of ClientOptions)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.TestClient.ClientOptions)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.TestClient.ClientOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ClientOptions>()
  nameWithType: ProtobufExtensions.SerializeToArray<ClientOptions>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.TestClient.ClientOptions>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ClientOptions)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.TestClient.ClientOptions)()
  name.vb: SerializeToArray(Of ClientOptions)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ClientOptions>
    nameWithType: ProtobufExtensions.SerializeToArray<ClientOptions>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.TestClient.ClientOptions>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ClientOptions)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ClientOptions)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.TestClient.ClientOptions)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Options
  commentId: N:EventStore.Common.Options
  isExternal: false
  name: EventStore.Common.Options
  nameWithType: EventStore.Common.Options
  fullName: EventStore.Common.Options
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.TestClient.ClientOptions.Help*
  commentId: Overload:EventStore.TestClient.ClientOptions.Help
  isExternal: false
  name: Help
  nameWithType: ClientOptions.Help
  fullName: EventStore.TestClient.ClientOptions.Help
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.TestClient.ClientOptions.Version*
  commentId: Overload:EventStore.TestClient.ClientOptions.Version
  isExternal: false
  name: Version
  nameWithType: ClientOptions.Version
  fullName: EventStore.TestClient.ClientOptions.Version
- uid: EventStore.TestClient.ClientOptions.Log*
  commentId: Overload:EventStore.TestClient.ClientOptions.Log
  isExternal: false
  name: Log
  nameWithType: ClientOptions.Log
  fullName: EventStore.TestClient.ClientOptions.Log
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.TestClient.ClientOptions.Config*
  commentId: Overload:EventStore.TestClient.ClientOptions.Config
  isExternal: false
  name: Config
  nameWithType: ClientOptions.Config
  fullName: EventStore.TestClient.ClientOptions.Config
- uid: EventStore.TestClient.ClientOptions.Defines*
  commentId: Overload:EventStore.TestClient.ClientOptions.Defines
  isExternal: false
  name: Defines
  nameWithType: ClientOptions.Defines
  fullName: EventStore.TestClient.ClientOptions.Defines
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.TestClient.ClientOptions.WhatIf*
  commentId: Overload:EventStore.TestClient.ClientOptions.WhatIf
  isExternal: false
  name: WhatIf
  nameWithType: ClientOptions.WhatIf
  fullName: EventStore.TestClient.ClientOptions.WhatIf
- uid: EventStore.TestClient.ClientOptions.Ip*
  commentId: Overload:EventStore.TestClient.ClientOptions.Ip
  isExternal: false
  name: Ip
  nameWithType: ClientOptions.Ip
  fullName: EventStore.TestClient.ClientOptions.Ip
- uid: IPAddress
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: IPAddress
- uid: EventStore.TestClient.ClientOptions.TcpPort*
  commentId: Overload:EventStore.TestClient.ClientOptions.TcpPort
  isExternal: false
  name: TcpPort
  nameWithType: ClientOptions.TcpPort
  fullName: EventStore.TestClient.ClientOptions.TcpPort
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.TestClient.ClientOptions.HttpPort*
  commentId: Overload:EventStore.TestClient.ClientOptions.HttpPort
  isExternal: false
  name: HttpPort
  nameWithType: ClientOptions.HttpPort
  fullName: EventStore.TestClient.ClientOptions.HttpPort
- uid: EventStore.TestClient.ClientOptions.Timeout*
  commentId: Overload:EventStore.TestClient.ClientOptions.Timeout
  isExternal: false
  name: Timeout
  nameWithType: ClientOptions.Timeout
  fullName: EventStore.TestClient.ClientOptions.Timeout
- uid: EventStore.TestClient.ClientOptions.ReadWindow*
  commentId: Overload:EventStore.TestClient.ClientOptions.ReadWindow
  isExternal: false
  name: ReadWindow
  nameWithType: ClientOptions.ReadWindow
  fullName: EventStore.TestClient.ClientOptions.ReadWindow
- uid: EventStore.TestClient.ClientOptions.WriteWindow*
  commentId: Overload:EventStore.TestClient.ClientOptions.WriteWindow
  isExternal: false
  name: WriteWindow
  nameWithType: ClientOptions.WriteWindow
  fullName: EventStore.TestClient.ClientOptions.WriteWindow
- uid: EventStore.TestClient.ClientOptions.PingWindow*
  commentId: Overload:EventStore.TestClient.ClientOptions.PingWindow
  isExternal: false
  name: PingWindow
  nameWithType: ClientOptions.PingWindow
  fullName: EventStore.TestClient.ClientOptions.PingWindow
- uid: EventStore.TestClient.ClientOptions.Force*
  commentId: Overload:EventStore.TestClient.ClientOptions.Force
  isExternal: false
  name: Force
  nameWithType: ClientOptions.Force
  fullName: EventStore.TestClient.ClientOptions.Force
- uid: EventStore.TestClient.ClientOptions.Command*
  commentId: Overload:EventStore.TestClient.ClientOptions.Command
  isExternal: false
  name: Command
  nameWithType: ClientOptions.Command
  fullName: EventStore.TestClient.ClientOptions.Command
- uid: EventStore.TestClient.ClientOptions.Reconnect*
  commentId: Overload:EventStore.TestClient.ClientOptions.Reconnect
  isExternal: false
  name: Reconnect
  nameWithType: ClientOptions.Reconnect
  fullName: EventStore.TestClient.ClientOptions.Reconnect
- uid: EventStore.TestClient.ClientOptions.UseSsl*
  commentId: Overload:EventStore.TestClient.ClientOptions.UseSsl
  isExternal: false
  name: UseSsl
  nameWithType: ClientOptions.UseSsl
  fullName: EventStore.TestClient.ClientOptions.UseSsl
- uid: EventStore.TestClient.ClientOptions.TargetHost*
  commentId: Overload:EventStore.TestClient.ClientOptions.TargetHost
  isExternal: false
  name: TargetHost
  nameWithType: ClientOptions.TargetHost
  fullName: EventStore.TestClient.ClientOptions.TargetHost
- uid: EventStore.TestClient.ClientOptions.ValidateServer*
  commentId: Overload:EventStore.TestClient.ClientOptions.ValidateServer
  isExternal: false
  name: ValidateServer
  nameWithType: ClientOptions.ValidateServer
  fullName: EventStore.TestClient.ClientOptions.ValidateServer
- uid: EventStore.TestClient.ClientOptions.#ctor*
  commentId: Overload:EventStore.TestClient.ClientOptions.#ctor
  isExternal: false
  name: ClientOptions
  nameWithType: ClientOptions.ClientOptions
  fullName: EventStore.TestClient.ClientOptions.ClientOptions

### YamlMime:ManagedReference
items:
- uid: EventStore.TestClient.CommandProcessorContext
  commentId: T:EventStore.TestClient.CommandProcessorContext
  id: CommandProcessorContext
  parent: EventStore.TestClient
  children:
  - EventStore.TestClient.CommandProcessorContext.#ctor(EventStore.TestClient.Client,EventStore.Common.Log.ILogger,ManualResetEventSlim)
  - EventStore.TestClient.CommandProcessorContext.Client
  - EventStore.TestClient.CommandProcessorContext.Completed(System.Int32,Exception,System.String)
  - EventStore.TestClient.CommandProcessorContext.Error
  - EventStore.TestClient.CommandProcessorContext.ExitCode
  - EventStore.TestClient.CommandProcessorContext.Fail(Exception,System.String)
  - EventStore.TestClient.CommandProcessorContext.IsAsync
  - EventStore.TestClient.CommandProcessorContext.Log
  - EventStore.TestClient.CommandProcessorContext.Reason
  - EventStore.TestClient.CommandProcessorContext.Success
  - EventStore.TestClient.CommandProcessorContext.Time(Action)
  - EventStore.TestClient.CommandProcessorContext.WaitForCompletion
  langs:
  - csharp
  - vb
  name: CommandProcessorContext
  nameWithType: CommandProcessorContext
  fullName: EventStore.TestClient.CommandProcessorContext
  type: Class
  source:
    remote:
      path: src/EventStore.TestClient/CommandProcessorContext.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CommandProcessorContext
    path: ../EventStore/src/EventStore.TestClient/CommandProcessorContext.cs
    startLine: 11
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  summary: "\nThis context is passed to the instances of <xref href=\"EventStore.TestClient.ICmdProcessor\" data-throw-if-not-resolved=\"false\"></xref>\nwhen they are executed. It can also be used for async syncrhonization\n"
  example: []
  syntax:
    content: 'public class CommandProcessorContext : object'
    content.vb: >-
      Public Class CommandProcessorContext

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.TestClient.CommandProcessorContext.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.TestClient.CommandProcessorContext.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.TestClient.CommandProcessorContext.ExitCode
  commentId: F:EventStore.TestClient.CommandProcessorContext.ExitCode
  id: ExitCode
  parent: EventStore.TestClient.CommandProcessorContext
  langs:
  - csharp
  - vb
  name: ExitCode
  nameWithType: CommandProcessorContext.ExitCode
  fullName: EventStore.TestClient.CommandProcessorContext.ExitCode
  type: Field
  source:
    remote:
      path: src/EventStore.TestClient/CommandProcessorContext.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ExitCode
    path: ../EventStore/src/EventStore.TestClient/CommandProcessorContext.cs
    startLine: 13
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public int ExitCode
    return:
      type: System.Int32
    content.vb: Public ExitCode As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.CommandProcessorContext.Error
  commentId: F:EventStore.TestClient.CommandProcessorContext.Error
  id: Error
  parent: EventStore.TestClient.CommandProcessorContext
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: CommandProcessorContext.Error
  fullName: EventStore.TestClient.CommandProcessorContext.Error
  type: Field
  source:
    remote:
      path: src/EventStore.TestClient/CommandProcessorContext.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Error
    path: ../EventStore/src/EventStore.TestClient/CommandProcessorContext.cs
    startLine: 14
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public Exception Error
    return:
      type: Exception
    content.vb: Public Error As Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.CommandProcessorContext.Reason
  commentId: F:EventStore.TestClient.CommandProcessorContext.Reason
  id: Reason
  parent: EventStore.TestClient.CommandProcessorContext
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: CommandProcessorContext.Reason
  fullName: EventStore.TestClient.CommandProcessorContext.Reason
  type: Field
  source:
    remote:
      path: src/EventStore.TestClient/CommandProcessorContext.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Reason
    path: ../EventStore/src/EventStore.TestClient/CommandProcessorContext.cs
    startLine: 15
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public string Reason
    return:
      type: System.String
    content.vb: Public Reason As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.CommandProcessorContext.Log
  commentId: F:EventStore.TestClient.CommandProcessorContext.Log
  id: Log
  parent: EventStore.TestClient.CommandProcessorContext
  langs:
  - csharp
  - vb
  name: Log
  nameWithType: CommandProcessorContext.Log
  fullName: EventStore.TestClient.CommandProcessorContext.Log
  type: Field
  source:
    remote:
      path: src/EventStore.TestClient/CommandProcessorContext.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Log
    path: ../EventStore/src/EventStore.TestClient/CommandProcessorContext.cs
    startLine: 20
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  summary: "\nCurrent logger of the test client\n"
  example: []
  syntax:
    content: public readonly ILogger Log
    return:
      type: EventStore.Common.Log.ILogger
    content.vb: Public ReadOnly Log As ILogger
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.TestClient.CommandProcessorContext.Client
  commentId: F:EventStore.TestClient.CommandProcessorContext.Client
  id: Client
  parent: EventStore.TestClient.CommandProcessorContext
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: CommandProcessorContext.Client
  fullName: EventStore.TestClient.CommandProcessorContext.Client
  type: Field
  source:
    remote:
      path: src/EventStore.TestClient/CommandProcessorContext.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Client
    path: ../EventStore/src/EventStore.TestClient/CommandProcessorContext.cs
    startLine: 21
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public readonly Client Client
    return:
      type: EventStore.TestClient.Client
    content.vb: Public ReadOnly Client As Client
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.TestClient.CommandProcessorContext.#ctor(EventStore.TestClient.Client,EventStore.Common.Log.ILogger,ManualResetEventSlim)
  commentId: M:EventStore.TestClient.CommandProcessorContext.#ctor(EventStore.TestClient.Client,EventStore.Common.Log.ILogger,ManualResetEventSlim)
  id: '#ctor(EventStore.TestClient.Client,EventStore.Common.Log.ILogger,ManualResetEventSlim)'
  parent: EventStore.TestClient.CommandProcessorContext
  langs:
  - csharp
  - vb
  name: CommandProcessorContext(Client, ILogger, ManualResetEventSlim)
  nameWithType: CommandProcessorContext.CommandProcessorContext(Client, ILogger, ManualResetEventSlim)
  fullName: EventStore.TestClient.CommandProcessorContext.CommandProcessorContext(EventStore.TestClient.Client, EventStore.Common.Log.ILogger, ManualResetEventSlim)
  type: Constructor
  source:
    remote:
      path: src/EventStore.TestClient/CommandProcessorContext.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.TestClient/CommandProcessorContext.cs
    startLine: 26
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public CommandProcessorContext(Client client, ILogger log, ManualResetEventSlim doneEvent)
    parameters:
    - id: client
      type: EventStore.TestClient.Client
    - id: log
      type: EventStore.Common.Log.ILogger
    - id: doneEvent
      type: ManualResetEventSlim
    content.vb: Public Sub New(client As Client, log As ILogger, doneEvent As ManualResetEventSlim)
  overload: EventStore.TestClient.CommandProcessorContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.CommandProcessorContext.Completed(System.Int32,Exception,System.String)
  commentId: M:EventStore.TestClient.CommandProcessorContext.Completed(System.Int32,Exception,System.String)
  id: Completed(System.Int32,Exception,System.String)
  parent: EventStore.TestClient.CommandProcessorContext
  langs:
  - csharp
  - vb
  name: Completed(Int32, Exception, String)
  nameWithType: CommandProcessorContext.Completed(Int32, Exception, String)
  fullName: EventStore.TestClient.CommandProcessorContext.Completed(System.Int32, Exception, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.TestClient/CommandProcessorContext.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Completed
    path: ../EventStore/src/EventStore.TestClient/CommandProcessorContext.cs
    startLine: 33
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public void Completed(int exitCode = null, Exception error = null, string reason = null)
    parameters:
    - id: exitCode
      type: System.Int32
    - id: error
      type: Exception
    - id: reason
      type: System.String
    content.vb: Public Sub Completed(exitCode As Integer = Nothing, error As Exception = Nothing, reason As String = Nothing)
  overload: EventStore.TestClient.CommandProcessorContext.Completed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.CommandProcessorContext.Fail(Exception,System.String)
  commentId: M:EventStore.TestClient.CommandProcessorContext.Fail(Exception,System.String)
  id: Fail(Exception,System.String)
  parent: EventStore.TestClient.CommandProcessorContext
  langs:
  - csharp
  - vb
  name: Fail(Exception, String)
  nameWithType: CommandProcessorContext.Fail(Exception, String)
  fullName: EventStore.TestClient.CommandProcessorContext.Fail(Exception, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.TestClient/CommandProcessorContext.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Fail
    path: ../EventStore/src/EventStore.TestClient/CommandProcessorContext.cs
    startLine: 46
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public void Fail(Exception exc = null, string reason = null)
    parameters:
    - id: exc
      type: Exception
    - id: reason
      type: System.String
    content.vb: Public Sub Fail(exc As Exception = Nothing, reason As String = Nothing)
  overload: EventStore.TestClient.CommandProcessorContext.Fail*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.CommandProcessorContext.Success
  commentId: M:EventStore.TestClient.CommandProcessorContext.Success
  id: Success
  parent: EventStore.TestClient.CommandProcessorContext
  langs:
  - csharp
  - vb
  name: Success()
  nameWithType: CommandProcessorContext.Success()
  fullName: EventStore.TestClient.CommandProcessorContext.Success()
  type: Method
  source:
    remote:
      path: src/EventStore.TestClient/CommandProcessorContext.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Success
    path: ../EventStore/src/EventStore.TestClient/CommandProcessorContext.cs
    startLine: 51
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public void Success()
    content.vb: Public Sub Success
  overload: EventStore.TestClient.CommandProcessorContext.Success*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.CommandProcessorContext.IsAsync
  commentId: M:EventStore.TestClient.CommandProcessorContext.IsAsync
  id: IsAsync
  parent: EventStore.TestClient.CommandProcessorContext
  langs:
  - csharp
  - vb
  name: IsAsync()
  nameWithType: CommandProcessorContext.IsAsync()
  fullName: EventStore.TestClient.CommandProcessorContext.IsAsync()
  type: Method
  source:
    remote:
      path: src/EventStore.TestClient/CommandProcessorContext.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IsAsync
    path: ../EventStore/src/EventStore.TestClient/CommandProcessorContext.cs
    startLine: 56
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public void IsAsync()
    content.vb: Public Sub IsAsync
  overload: EventStore.TestClient.CommandProcessorContext.IsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.CommandProcessorContext.WaitForCompletion
  commentId: M:EventStore.TestClient.CommandProcessorContext.WaitForCompletion
  id: WaitForCompletion
  parent: EventStore.TestClient.CommandProcessorContext
  langs:
  - csharp
  - vb
  name: WaitForCompletion()
  nameWithType: CommandProcessorContext.WaitForCompletion()
  fullName: EventStore.TestClient.CommandProcessorContext.WaitForCompletion()
  type: Method
  source:
    remote:
      path: src/EventStore.TestClient/CommandProcessorContext.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WaitForCompletion
    path: ../EventStore/src/EventStore.TestClient/CommandProcessorContext.cs
    startLine: 61
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public void WaitForCompletion()
    content.vb: Public Sub WaitForCompletion
  overload: EventStore.TestClient.CommandProcessorContext.WaitForCompletion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.CommandProcessorContext.Time(Action)
  commentId: M:EventStore.TestClient.CommandProcessorContext.Time(Action)
  id: Time(Action)
  parent: EventStore.TestClient.CommandProcessorContext
  langs:
  - csharp
  - vb
  name: Time(Action)
  nameWithType: CommandProcessorContext.Time(Action)
  fullName: EventStore.TestClient.CommandProcessorContext.Time(Action)
  type: Method
  source:
    remote:
      path: src/EventStore.TestClient/CommandProcessorContext.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Time
    path: ../EventStore/src/EventStore.TestClient/CommandProcessorContext.cs
    startLine: 72
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public TimeSpan Time(Action action)
    parameters:
    - id: action
      type: Action
    return:
      type: TimeSpan
    content.vb: Public Function Time(action As Action) As TimeSpan
  overload: EventStore.TestClient.CommandProcessorContext.Time*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.TestClient.ICmdProcessor
  commentId: T:EventStore.TestClient.ICmdProcessor
  parent: EventStore.TestClient
  isExternal: false
  name: ICmdProcessor
  nameWithType: ICmdProcessor
  fullName: EventStore.TestClient.ICmdProcessor
- uid: EventStore.TestClient
  commentId: N:EventStore.TestClient
  isExternal: false
  name: EventStore.TestClient
  nameWithType: EventStore.TestClient
  fullName: EventStore.TestClient
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.TestClient.CommandProcessorContext.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<CommandProcessorContext>()
  nameWithType: ProtobufExtensions.Serialize<CommandProcessorContext>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.TestClient.CommandProcessorContext>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of CommandProcessorContext)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.TestClient.CommandProcessorContext)()
  name.vb: Serialize(Of CommandProcessorContext)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<CommandProcessorContext>
    nameWithType: ProtobufExtensions.Serialize<CommandProcessorContext>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.TestClient.CommandProcessorContext>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of CommandProcessorContext)
    nameWithType: ProtobufExtensions.Serialize(Of CommandProcessorContext)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.TestClient.CommandProcessorContext)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.TestClient.CommandProcessorContext.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<CommandProcessorContext>()
  nameWithType: ProtobufExtensions.SerializeToArray<CommandProcessorContext>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.TestClient.CommandProcessorContext>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of CommandProcessorContext)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.TestClient.CommandProcessorContext)()
  name.vb: SerializeToArray(Of CommandProcessorContext)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<CommandProcessorContext>
    nameWithType: ProtobufExtensions.SerializeToArray<CommandProcessorContext>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.TestClient.CommandProcessorContext>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of CommandProcessorContext)
    nameWithType: ProtobufExtensions.SerializeToArray(Of CommandProcessorContext)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.TestClient.CommandProcessorContext)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Common.Log.ILogger
  commentId: T:EventStore.Common.Log.ILogger
  parent: EventStore.Common.Log
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: EventStore.Common.Log.ILogger
- uid: EventStore.Common.Log
  commentId: N:EventStore.Common.Log
  isExternal: false
  name: EventStore.Common.Log
  nameWithType: EventStore.Common.Log
  fullName: EventStore.Common.Log
- uid: EventStore.TestClient.Client
  commentId: T:EventStore.TestClient.Client
  parent: EventStore.TestClient
  isExternal: false
  name: Client
  nameWithType: Client
  fullName: EventStore.TestClient.Client
- uid: EventStore.TestClient.CommandProcessorContext.#ctor*
  commentId: Overload:EventStore.TestClient.CommandProcessorContext.#ctor
  isExternal: false
  name: CommandProcessorContext
  nameWithType: CommandProcessorContext.CommandProcessorContext
  fullName: EventStore.TestClient.CommandProcessorContext.CommandProcessorContext
- uid: ManualResetEventSlim
  commentId: '!:ManualResetEventSlim'
  isExternal: true
  name: ManualResetEventSlim
  nameWithType: ManualResetEventSlim
  fullName: ManualResetEventSlim
- uid: EventStore.TestClient.CommandProcessorContext.Completed*
  commentId: Overload:EventStore.TestClient.CommandProcessorContext.Completed
  isExternal: false
  name: Completed
  nameWithType: CommandProcessorContext.Completed
  fullName: EventStore.TestClient.CommandProcessorContext.Completed
- uid: EventStore.TestClient.CommandProcessorContext.Fail*
  commentId: Overload:EventStore.TestClient.CommandProcessorContext.Fail
  isExternal: false
  name: Fail
  nameWithType: CommandProcessorContext.Fail
  fullName: EventStore.TestClient.CommandProcessorContext.Fail
- uid: EventStore.TestClient.CommandProcessorContext.Success*
  commentId: Overload:EventStore.TestClient.CommandProcessorContext.Success
  isExternal: false
  name: Success
  nameWithType: CommandProcessorContext.Success
  fullName: EventStore.TestClient.CommandProcessorContext.Success
- uid: EventStore.TestClient.CommandProcessorContext.IsAsync*
  commentId: Overload:EventStore.TestClient.CommandProcessorContext.IsAsync
  isExternal: false
  name: IsAsync
  nameWithType: CommandProcessorContext.IsAsync
  fullName: EventStore.TestClient.CommandProcessorContext.IsAsync
- uid: EventStore.TestClient.CommandProcessorContext.WaitForCompletion*
  commentId: Overload:EventStore.TestClient.CommandProcessorContext.WaitForCompletion
  isExternal: false
  name: WaitForCompletion
  nameWithType: CommandProcessorContext.WaitForCompletion
  fullName: EventStore.TestClient.CommandProcessorContext.WaitForCompletion
- uid: EventStore.TestClient.CommandProcessorContext.Time*
  commentId: Overload:EventStore.TestClient.CommandProcessorContext.Time
  isExternal: false
  name: Time
  nameWithType: CommandProcessorContext.Time
  fullName: EventStore.TestClient.CommandProcessorContext.Time
- uid: Action
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: Action
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan

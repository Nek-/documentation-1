### YamlMime:ManagedReference
items:
- uid: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor
  commentId: T:EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor
  id: DvuBasicProcessor
  parent: EventStore.TestClient.Commands.DvuBasic
  children:
  - EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.AvailableProducers
  - EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Execute(EventStore.TestClient.CommandProcessorContext,System.String[])
  - EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Keyword
  - EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Producers
  - EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Usage
  langs:
  - csharp
  - vb
  name: DvuBasicProcessor
  nameWithType: DvuBasicProcessor
  fullName: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor
  type: Class
  source:
    remote:
      path: src/EventStore.TestClient/Commands/DvuBasic/DvuBasicProcessor.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: DvuBasicProcessor
    path: ../EventStore/src/EventStore.TestClient/Commands/DvuBasic/DvuBasicProcessor.cs
    startLine: 14
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient.Commands.DvuBasic
  syntax:
    content: 'public class DvuBasicProcessor : object, ICmdProcessor'
    content.vb: >-
      Public Class DvuBasicProcessor

          Inherits Object

          Implements ICmdProcessor
  inheritance:
  - System.Object
  implements:
  - EventStore.TestClient.ICmdProcessor
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Keyword
  commentId: P:EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Keyword
  id: Keyword
  parent: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor
  langs:
  - csharp
  - vb
  name: Keyword
  nameWithType: DvuBasicProcessor.Keyword
  fullName: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Keyword
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/Commands/DvuBasic/DvuBasicProcessor.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Keyword
    path: ../EventStore/src/EventStore.TestClient/Commands/DvuBasic/DvuBasicProcessor.cs
    startLine: 16
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient.Commands.DvuBasic
  syntax:
    content: public string Keyword { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Keyword As String
  overload: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Keyword*
  implements:
  - EventStore.TestClient.ICmdProcessor.Keyword
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Usage
  commentId: P:EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Usage
  id: Usage
  parent: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor
  langs:
  - csharp
  - vb
  name: Usage
  nameWithType: DvuBasicProcessor.Usage
  fullName: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Usage
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/Commands/DvuBasic/DvuBasicProcessor.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Usage
    path: ../EventStore/src/EventStore.TestClient/Commands/DvuBasic/DvuBasicProcessor.cs
    startLine: 18
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient.Commands.DvuBasic
  syntax:
    content: public string Usage { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Usage As String
  overload: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Usage*
  implements:
  - EventStore.TestClient.ICmdProcessor.Usage
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.AvailableProducers
  commentId: P:EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.AvailableProducers
  id: AvailableProducers
  parent: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor
  langs:
  - csharp
  - vb
  name: AvailableProducers
  nameWithType: DvuBasicProcessor.AvailableProducers
  fullName: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.AvailableProducers
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/Commands/DvuBasic/DvuBasicProcessor.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AvailableProducers
    path: ../EventStore/src/EventStore.TestClient/Commands/DvuBasic/DvuBasicProcessor.cs
    startLine: 33
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient.Commands.DvuBasic
  syntax:
    content: public IEnumerable<string> AvailableProducers { get; }
    parameters: []
    return:
      type: IEnumerable{System.String}
    content.vb: Public ReadOnly Property AvailableProducers As IEnumerable(Of String)
  overload: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.AvailableProducers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Producers
  commentId: P:EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Producers
  id: Producers
  parent: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor
  langs:
  - csharp
  - vb
  name: Producers
  nameWithType: DvuBasicProcessor.Producers
  fullName: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Producers
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/Commands/DvuBasic/DvuBasicProcessor.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Producers
    path: ../EventStore/src/EventStore.TestClient/Commands/DvuBasic/DvuBasicProcessor.cs
    startLine: 34
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient.Commands.DvuBasic
  syntax:
    content: public IBasicProducer[] Producers { get; set; }
    parameters: []
    return:
      type: EventStore.TestClient.Commands.DvuBasic.IBasicProducer[]
    content.vb: Public Property Producers As IBasicProducer()
  overload: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Producers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Execute(EventStore.TestClient.CommandProcessorContext,System.String[])
  commentId: M:EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Execute(EventStore.TestClient.CommandProcessorContext,System.String[])
  id: Execute(EventStore.TestClient.CommandProcessorContext,System.String[])
  parent: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor
  langs:
  - csharp
  - vb
  name: Execute(CommandProcessorContext, String[])
  nameWithType: DvuBasicProcessor.Execute(CommandProcessorContext, String[])
  fullName: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Execute(EventStore.TestClient.CommandProcessorContext, System.String[])
  type: Method
  source:
    remote:
      path: src/EventStore.TestClient/Commands/DvuBasic/DvuBasicProcessor.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Execute
    path: ../EventStore/src/EventStore.TestClient/Commands/DvuBasic/DvuBasicProcessor.cs
    startLine: 43
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient.Commands.DvuBasic
  syntax:
    content: public bool Execute(CommandProcessorContext context, string[] args)
    parameters:
    - id: context
      type: EventStore.TestClient.CommandProcessorContext
    - id: args
      type: System.String[]
    return:
      type: System.Boolean
    content.vb: Public Function Execute(context As CommandProcessorContext, args As String()) As Boolean
  overload: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Execute*
  implements:
  - EventStore.TestClient.ICmdProcessor.Execute(EventStore.TestClient.CommandProcessorContext,System.String[])
  nameWithType.vb: DvuBasicProcessor.Execute(CommandProcessorContext, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Execute(EventStore.TestClient.CommandProcessorContext, System.String())
  name.vb: Execute(CommandProcessorContext, String())
references:
- uid: EventStore.TestClient.Commands.DvuBasic
  commentId: N:EventStore.TestClient.Commands.DvuBasic
  isExternal: false
  name: EventStore.TestClient.Commands.DvuBasic
  nameWithType: EventStore.TestClient.Commands.DvuBasic
  fullName: EventStore.TestClient.Commands.DvuBasic
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.TestClient.ICmdProcessor
  commentId: T:EventStore.TestClient.ICmdProcessor
  parent: EventStore.TestClient
  isExternal: false
  name: ICmdProcessor
  nameWithType: ICmdProcessor
  fullName: EventStore.TestClient.ICmdProcessor
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<DvuBasicProcessor>()
  nameWithType: ProtobufExtensions.Serialize<DvuBasicProcessor>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of DvuBasicProcessor)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor)()
  name.vb: Serialize(Of DvuBasicProcessor)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<DvuBasicProcessor>
    nameWithType: ProtobufExtensions.Serialize<DvuBasicProcessor>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of DvuBasicProcessor)
    nameWithType: ProtobufExtensions.Serialize(Of DvuBasicProcessor)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<DvuBasicProcessor>()
  nameWithType: ProtobufExtensions.SerializeToArray<DvuBasicProcessor>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of DvuBasicProcessor)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor)()
  name.vb: SerializeToArray(Of DvuBasicProcessor)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<DvuBasicProcessor>
    nameWithType: ProtobufExtensions.SerializeToArray<DvuBasicProcessor>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of DvuBasicProcessor)
    nameWithType: ProtobufExtensions.SerializeToArray(Of DvuBasicProcessor)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.TestClient
  commentId: N:EventStore.TestClient
  isExternal: false
  name: EventStore.TestClient
  nameWithType: EventStore.TestClient
  fullName: EventStore.TestClient
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Keyword*
  commentId: Overload:EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Keyword
  isExternal: false
  name: Keyword
  nameWithType: DvuBasicProcessor.Keyword
  fullName: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Keyword
- uid: EventStore.TestClient.ICmdProcessor.Keyword
  commentId: P:EventStore.TestClient.ICmdProcessor.Keyword
  parent: EventStore.TestClient.ICmdProcessor
  isExternal: false
  name: Keyword
  nameWithType: ICmdProcessor.Keyword
  fullName: EventStore.TestClient.ICmdProcessor.Keyword
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Usage*
  commentId: Overload:EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Usage
  isExternal: false
  name: Usage
  nameWithType: DvuBasicProcessor.Usage
  fullName: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Usage
- uid: EventStore.TestClient.ICmdProcessor.Usage
  commentId: P:EventStore.TestClient.ICmdProcessor.Usage
  parent: EventStore.TestClient.ICmdProcessor
  isExternal: false
  name: Usage
  nameWithType: ICmdProcessor.Usage
  fullName: EventStore.TestClient.ICmdProcessor.Usage
- uid: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.AvailableProducers*
  commentId: Overload:EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.AvailableProducers
  isExternal: false
  name: AvailableProducers
  nameWithType: DvuBasicProcessor.AvailableProducers
  fullName: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.AvailableProducers
- uid: IEnumerable{System.String}
  commentId: '!:IEnumerable{System.String}'
  definition: IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Producers*
  commentId: Overload:EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Producers
  isExternal: false
  name: Producers
  nameWithType: DvuBasicProcessor.Producers
  fullName: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Producers
- uid: EventStore.TestClient.Commands.DvuBasic.IBasicProducer[]
  name: IBasicProducer[]
  nameWithType: IBasicProducer[]
  fullName: EventStore.TestClient.Commands.DvuBasic.IBasicProducer[]
  nameWithType.vb: IBasicProducer()
  fullName.vb: EventStore.TestClient.Commands.DvuBasic.IBasicProducer()
  name.vb: IBasicProducer()
  spec.csharp:
  - uid: EventStore.TestClient.Commands.DvuBasic.IBasicProducer
    name: IBasicProducer
    nameWithType: IBasicProducer
    fullName: EventStore.TestClient.Commands.DvuBasic.IBasicProducer
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.TestClient.Commands.DvuBasic.IBasicProducer
    name: IBasicProducer
    nameWithType: IBasicProducer
    fullName: EventStore.TestClient.Commands.DvuBasic.IBasicProducer
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Execute*
  commentId: Overload:EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Execute
  isExternal: false
  name: Execute
  nameWithType: DvuBasicProcessor.Execute
  fullName: EventStore.TestClient.Commands.DvuBasic.DvuBasicProcessor.Execute
- uid: EventStore.TestClient.ICmdProcessor.Execute(EventStore.TestClient.CommandProcessorContext,System.String[])
  commentId: M:EventStore.TestClient.ICmdProcessor.Execute(EventStore.TestClient.CommandProcessorContext,System.String[])
  parent: EventStore.TestClient.ICmdProcessor
  isExternal: true
  name: Execute(CommandProcessorContext, String[])
  nameWithType: ICmdProcessor.Execute(CommandProcessorContext, String[])
  fullName: EventStore.TestClient.ICmdProcessor.Execute(EventStore.TestClient.CommandProcessorContext, System.String[])
  nameWithType.vb: ICmdProcessor.Execute(CommandProcessorContext, String())
  fullName.vb: EventStore.TestClient.ICmdProcessor.Execute(EventStore.TestClient.CommandProcessorContext, System.String())
  name.vb: Execute(CommandProcessorContext, String())
  spec.csharp:
  - uid: EventStore.TestClient.ICmdProcessor.Execute(EventStore.TestClient.CommandProcessorContext,System.String[])
    name: Execute
    nameWithType: ICmdProcessor.Execute
    fullName: EventStore.TestClient.ICmdProcessor.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.TestClient.CommandProcessorContext
    name: CommandProcessorContext
    nameWithType: CommandProcessorContext
    fullName: EventStore.TestClient.CommandProcessorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.TestClient.ICmdProcessor.Execute(EventStore.TestClient.CommandProcessorContext,System.String[])
    name: Execute
    nameWithType: ICmdProcessor.Execute
    fullName: EventStore.TestClient.ICmdProcessor.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.TestClient.CommandProcessorContext
    name: CommandProcessorContext
    nameWithType: CommandProcessorContext
    fullName: EventStore.TestClient.CommandProcessorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.TestClient.CommandProcessorContext
  commentId: T:EventStore.TestClient.CommandProcessorContext
  parent: EventStore.TestClient
  isExternal: false
  name: CommandProcessorContext
  nameWithType: CommandProcessorContext
  fullName: EventStore.TestClient.CommandProcessorContext
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean

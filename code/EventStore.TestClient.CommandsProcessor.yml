### YamlMime:ManagedReference
items:
- uid: EventStore.TestClient.CommandsProcessor
  commentId: T:EventStore.TestClient.CommandsProcessor
  id: CommandsProcessor
  parent: EventStore.TestClient
  children:
  - EventStore.TestClient.CommandsProcessor.#ctor(EventStore.Common.Log.ILogger)
  - EventStore.TestClient.CommandsProcessor.Register(EventStore.TestClient.ICmdProcessor,System.Boolean)
  - EventStore.TestClient.CommandsProcessor.RegisteredProcessors
  - EventStore.TestClient.CommandsProcessor.TryProcess(EventStore.TestClient.CommandProcessorContext,System.String[],System.Int32@)
  langs:
  - csharp
  - vb
  name: CommandsProcessor
  nameWithType: CommandsProcessor
  fullName: EventStore.TestClient.CommandsProcessor
  type: Class
  source:
    remote:
      path: src/EventStore.TestClient/CommandsProcessor.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CommandsProcessor
    path: ../EventStore/src/EventStore.TestClient/CommandsProcessor.cs
    startLine: 9
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: 'public class CommandsProcessor : object'
    content.vb: >-
      Public Class CommandsProcessor

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.TestClient.CommandsProcessor.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.TestClient.CommandsProcessor.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.TestClient.CommandsProcessor.RegisteredProcessors
  commentId: P:EventStore.TestClient.CommandsProcessor.RegisteredProcessors
  id: RegisteredProcessors
  parent: EventStore.TestClient.CommandsProcessor
  langs:
  - csharp
  - vb
  name: RegisteredProcessors
  nameWithType: CommandsProcessor.RegisteredProcessors
  fullName: EventStore.TestClient.CommandsProcessor.RegisteredProcessors
  type: Property
  source:
    remote:
      path: src/EventStore.TestClient/CommandsProcessor.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RegisteredProcessors
    path: ../EventStore/src/EventStore.TestClient/CommandsProcessor.cs
    startLine: 11
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public IEnumerable<ICmdProcessor> RegisteredProcessors { get; }
    parameters: []
    return:
      type: IEnumerable{EventStore.TestClient.ICmdProcessor}
    content.vb: Public ReadOnly Property RegisteredProcessors As IEnumerable(Of ICmdProcessor)
  overload: EventStore.TestClient.CommandsProcessor.RegisteredProcessors*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.TestClient.CommandsProcessor.#ctor(EventStore.Common.Log.ILogger)
  commentId: M:EventStore.TestClient.CommandsProcessor.#ctor(EventStore.Common.Log.ILogger)
  id: '#ctor(EventStore.Common.Log.ILogger)'
  parent: EventStore.TestClient.CommandsProcessor
  langs:
  - csharp
  - vb
  name: CommandsProcessor(ILogger)
  nameWithType: CommandsProcessor.CommandsProcessor(ILogger)
  fullName: EventStore.TestClient.CommandsProcessor.CommandsProcessor(EventStore.Common.Log.ILogger)
  type: Constructor
  source:
    remote:
      path: src/EventStore.TestClient/CommandsProcessor.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.TestClient/CommandsProcessor.cs
    startLine: 20
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public CommandsProcessor(ILogger log)
    parameters:
    - id: log
      type: EventStore.Common.Log.ILogger
    content.vb: Public Sub New(log As ILogger)
  overload: EventStore.TestClient.CommandsProcessor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.CommandsProcessor.Register(EventStore.TestClient.ICmdProcessor,System.Boolean)
  commentId: M:EventStore.TestClient.CommandsProcessor.Register(EventStore.TestClient.ICmdProcessor,System.Boolean)
  id: Register(EventStore.TestClient.ICmdProcessor,System.Boolean)
  parent: EventStore.TestClient.CommandsProcessor
  langs:
  - csharp
  - vb
  name: Register(ICmdProcessor, Boolean)
  nameWithType: CommandsProcessor.Register(ICmdProcessor, Boolean)
  fullName: EventStore.TestClient.CommandsProcessor.Register(EventStore.TestClient.ICmdProcessor, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.TestClient/CommandsProcessor.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Register
    path: ../EventStore/src/EventStore.TestClient/CommandsProcessor.cs
    startLine: 25
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public void Register(ICmdProcessor processor, bool usageProcessor = false)
    parameters:
    - id: processor
      type: EventStore.TestClient.ICmdProcessor
    - id: usageProcessor
      type: System.Boolean
    content.vb: Public Sub Register(processor As ICmdProcessor, usageProcessor As Boolean = False)
  overload: EventStore.TestClient.CommandsProcessor.Register*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.TestClient.CommandsProcessor.TryProcess(EventStore.TestClient.CommandProcessorContext,System.String[],System.Int32@)
  commentId: M:EventStore.TestClient.CommandsProcessor.TryProcess(EventStore.TestClient.CommandProcessorContext,System.String[],System.Int32@)
  id: TryProcess(EventStore.TestClient.CommandProcessorContext,System.String[],System.Int32@)
  parent: EventStore.TestClient.CommandsProcessor
  langs:
  - csharp
  - vb
  name: TryProcess(CommandProcessorContext, String[], out Int32)
  nameWithType: CommandsProcessor.TryProcess(CommandProcessorContext, String[], out Int32)
  fullName: EventStore.TestClient.CommandsProcessor.TryProcess(EventStore.TestClient.CommandProcessorContext, System.String[], out System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.TestClient/CommandsProcessor.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TryProcess
    path: ../EventStore/src/EventStore.TestClient/CommandsProcessor.cs
    startLine: 39
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public bool TryProcess(CommandProcessorContext context, string[] args, out int exitCode)
    parameters:
    - id: context
      type: EventStore.TestClient.CommandProcessorContext
    - id: args
      type: System.String[]
    - id: exitCode
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function TryProcess(context As CommandProcessorContext, args As String(), ByRef exitCode As Integer) As Boolean
  overload: EventStore.TestClient.CommandsProcessor.TryProcess*
  nameWithType.vb: CommandsProcessor.TryProcess(CommandProcessorContext, String(), ByRef Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.TestClient.CommandsProcessor.TryProcess(EventStore.TestClient.CommandProcessorContext, System.String(), ByRef System.Int32)
  name.vb: TryProcess(CommandProcessorContext, String(), ByRef Int32)
references:
- uid: EventStore.TestClient
  commentId: N:EventStore.TestClient
  isExternal: false
  name: EventStore.TestClient
  nameWithType: EventStore.TestClient
  fullName: EventStore.TestClient
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.TestClient.CommandsProcessor.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<CommandsProcessor>()
  nameWithType: ProtobufExtensions.Serialize<CommandsProcessor>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.TestClient.CommandsProcessor>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of CommandsProcessor)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.TestClient.CommandsProcessor)()
  name.vb: Serialize(Of CommandsProcessor)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<CommandsProcessor>
    nameWithType: ProtobufExtensions.Serialize<CommandsProcessor>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.TestClient.CommandsProcessor>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of CommandsProcessor)
    nameWithType: ProtobufExtensions.Serialize(Of CommandsProcessor)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.TestClient.CommandsProcessor)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.TestClient.CommandsProcessor.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<CommandsProcessor>()
  nameWithType: ProtobufExtensions.SerializeToArray<CommandsProcessor>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.TestClient.CommandsProcessor>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of CommandsProcessor)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.TestClient.CommandsProcessor)()
  name.vb: SerializeToArray(Of CommandsProcessor)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<CommandsProcessor>
    nameWithType: ProtobufExtensions.SerializeToArray<CommandsProcessor>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.TestClient.CommandsProcessor>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of CommandsProcessor)
    nameWithType: ProtobufExtensions.SerializeToArray(Of CommandsProcessor)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.TestClient.CommandsProcessor)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.TestClient.CommandsProcessor.RegisteredProcessors*
  commentId: Overload:EventStore.TestClient.CommandsProcessor.RegisteredProcessors
  isExternal: false
  name: RegisteredProcessors
  nameWithType: CommandsProcessor.RegisteredProcessors
  fullName: EventStore.TestClient.CommandsProcessor.RegisteredProcessors
- uid: IEnumerable{EventStore.TestClient.ICmdProcessor}
  commentId: '!:IEnumerable{EventStore.TestClient.ICmdProcessor}'
  definition: IEnumerable`1
  name: IEnumerable<ICmdProcessor>
  nameWithType: IEnumerable<ICmdProcessor>
  fullName: IEnumerable<EventStore.TestClient.ICmdProcessor>
  nameWithType.vb: IEnumerable(Of ICmdProcessor)
  fullName.vb: IEnumerable(Of EventStore.TestClient.ICmdProcessor)
  name.vb: IEnumerable(Of ICmdProcessor)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.TestClient.ICmdProcessor
    name: ICmdProcessor
    nameWithType: ICmdProcessor
    fullName: EventStore.TestClient.ICmdProcessor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.TestClient.ICmdProcessor
    name: ICmdProcessor
    nameWithType: ICmdProcessor
    fullName: EventStore.TestClient.ICmdProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.TestClient.CommandsProcessor.#ctor*
  commentId: Overload:EventStore.TestClient.CommandsProcessor.#ctor
  isExternal: false
  name: CommandsProcessor
  nameWithType: CommandsProcessor.CommandsProcessor
  fullName: EventStore.TestClient.CommandsProcessor.CommandsProcessor
- uid: EventStore.Common.Log.ILogger
  commentId: T:EventStore.Common.Log.ILogger
  parent: EventStore.Common.Log
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: EventStore.Common.Log.ILogger
- uid: EventStore.Common.Log
  commentId: N:EventStore.Common.Log
  isExternal: false
  name: EventStore.Common.Log
  nameWithType: EventStore.Common.Log
  fullName: EventStore.Common.Log
- uid: EventStore.TestClient.CommandsProcessor.Register*
  commentId: Overload:EventStore.TestClient.CommandsProcessor.Register
  isExternal: false
  name: Register
  nameWithType: CommandsProcessor.Register
  fullName: EventStore.TestClient.CommandsProcessor.Register
- uid: EventStore.TestClient.ICmdProcessor
  commentId: T:EventStore.TestClient.ICmdProcessor
  parent: EventStore.TestClient
  isExternal: false
  name: ICmdProcessor
  nameWithType: ICmdProcessor
  fullName: EventStore.TestClient.ICmdProcessor
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.TestClient.CommandsProcessor.TryProcess*
  commentId: Overload:EventStore.TestClient.CommandsProcessor.TryProcess
  isExternal: false
  name: TryProcess
  nameWithType: CommandsProcessor.TryProcess
  fullName: EventStore.TestClient.CommandsProcessor.TryProcess
- uid: EventStore.TestClient.CommandProcessorContext
  commentId: T:EventStore.TestClient.CommandProcessorContext
  parent: EventStore.TestClient
  isExternal: false
  name: CommandProcessorContext
  nameWithType: CommandProcessorContext
  fullName: EventStore.TestClient.CommandProcessorContext
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32

### YamlMime:ManagedReference
items:
- uid: EventStore.TestClient.PortsHelper
  commentId: T:EventStore.TestClient.PortsHelper
  id: PortsHelper
  parent: EventStore.TestClient
  children:
  - EventStore.TestClient.PortsHelper.GetAvailablePort(IPAddress)
  - EventStore.TestClient.PortsHelper.InitPorts(IPAddress)
  - EventStore.TestClient.PortsHelper.PortCount
  - EventStore.TestClient.PortsHelper.PortStart
  - EventStore.TestClient.PortsHelper.ReturnPort(System.Int32)
  langs:
  - csharp
  - vb
  name: PortsHelper
  nameWithType: PortsHelper
  fullName: EventStore.TestClient.PortsHelper
  type: Class
  source:
    remote:
      path: src/EventStore.TestClient/PortsHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PortsHelper
    path: ../EventStore/src/EventStore.TestClient/PortsHelper.cs
    startLine: 11
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: 'public static class PortsHelper : object'
    content.vb: >-
      Public Module PortsHelper

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.TestClient.PortsHelper.PortStart
  commentId: F:EventStore.TestClient.PortsHelper.PortStart
  id: PortStart
  parent: EventStore.TestClient.PortsHelper
  langs:
  - csharp
  - vb
  name: PortStart
  nameWithType: PortsHelper.PortStart
  fullName: EventStore.TestClient.PortsHelper.PortStart
  type: Field
  source:
    remote:
      path: src/EventStore.TestClient/PortsHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PortStart
    path: ../EventStore/src/EventStore.TestClient/PortsHelper.cs
    startLine: 15
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public const int PortStart = null
    return:
      type: System.Int32
    content.vb: Public Const PortStart As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.TestClient.PortsHelper.PortCount
  commentId: F:EventStore.TestClient.PortsHelper.PortCount
  id: PortCount
  parent: EventStore.TestClient.PortsHelper
  langs:
  - csharp
  - vb
  name: PortCount
  nameWithType: PortsHelper.PortCount
  fullName: EventStore.TestClient.PortsHelper.PortCount
  type: Field
  source:
    remote:
      path: src/EventStore.TestClient/PortsHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PortCount
    path: ../EventStore/src/EventStore.TestClient/PortsHelper.cs
    startLine: 16
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public const int PortCount = null
    return:
      type: System.Int32
    content.vb: Public Const PortCount As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.TestClient.PortsHelper.InitPorts(IPAddress)
  commentId: M:EventStore.TestClient.PortsHelper.InitPorts(IPAddress)
  id: InitPorts(IPAddress)
  parent: EventStore.TestClient.PortsHelper
  langs:
  - csharp
  - vb
  name: InitPorts(IPAddress)
  nameWithType: PortsHelper.InitPorts(IPAddress)
  fullName: EventStore.TestClient.PortsHelper.InitPorts(IPAddress)
  type: Method
  source:
    remote:
      path: src/EventStore.TestClient/PortsHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: InitPorts
    path: ../EventStore/src/EventStore.TestClient/PortsHelper.cs
    startLine: 21
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public static void InitPorts(IPAddress ip)
    parameters:
    - id: ip
      type: IPAddress
    content.vb: Public Shared Sub InitPorts(ip As IPAddress)
  overload: EventStore.TestClient.PortsHelper.InitPorts*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.TestClient.PortsHelper.GetAvailablePort(IPAddress)
  commentId: M:EventStore.TestClient.PortsHelper.GetAvailablePort(IPAddress)
  id: GetAvailablePort(IPAddress)
  parent: EventStore.TestClient.PortsHelper
  langs:
  - csharp
  - vb
  name: GetAvailablePort(IPAddress)
  nameWithType: PortsHelper.GetAvailablePort(IPAddress)
  fullName: EventStore.TestClient.PortsHelper.GetAvailablePort(IPAddress)
  type: Method
  source:
    remote:
      path: src/EventStore.TestClient/PortsHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetAvailablePort
    path: ../EventStore/src/EventStore.TestClient/PortsHelper.cs
    startLine: 97
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public static int GetAvailablePort(IPAddress ip)
    parameters:
    - id: ip
      type: IPAddress
    return:
      type: System.Int32
    content.vb: Public Shared Function GetAvailablePort(ip As IPAddress) As Integer
  overload: EventStore.TestClient.PortsHelper.GetAvailablePort*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.TestClient.PortsHelper.ReturnPort(System.Int32)
  commentId: M:EventStore.TestClient.PortsHelper.ReturnPort(System.Int32)
  id: ReturnPort(System.Int32)
  parent: EventStore.TestClient.PortsHelper
  langs:
  - csharp
  - vb
  name: ReturnPort(Int32)
  nameWithType: PortsHelper.ReturnPort(Int32)
  fullName: EventStore.TestClient.PortsHelper.ReturnPort(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.TestClient/PortsHelper.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReturnPort
    path: ../EventStore/src/EventStore.TestClient/PortsHelper.cs
    startLine: 138
  assemblies:
  - EventStore.TestClient
  namespace: EventStore.TestClient
  syntax:
    content: public static void ReturnPort(int port)
    parameters:
    - id: port
      type: System.Int32
    content.vb: Public Shared Sub ReturnPort(port As Integer)
  overload: EventStore.TestClient.PortsHelper.ReturnPort*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.TestClient
  commentId: N:EventStore.TestClient
  isExternal: false
  name: EventStore.TestClient
  nameWithType: EventStore.TestClient
  fullName: EventStore.TestClient
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.TestClient.PortsHelper.InitPorts*
  commentId: Overload:EventStore.TestClient.PortsHelper.InitPorts
  isExternal: false
  name: InitPorts
  nameWithType: PortsHelper.InitPorts
  fullName: EventStore.TestClient.PortsHelper.InitPorts
- uid: IPAddress
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: IPAddress
- uid: EventStore.TestClient.PortsHelper.GetAvailablePort*
  commentId: Overload:EventStore.TestClient.PortsHelper.GetAvailablePort
  isExternal: false
  name: GetAvailablePort
  nameWithType: PortsHelper.GetAvailablePort
  fullName: EventStore.TestClient.PortsHelper.GetAvailablePort
- uid: EventStore.TestClient.PortsHelper.ReturnPort*
  commentId: Overload:EventStore.TestClient.PortsHelper.ReturnPort
  isExternal: false
  name: ReturnPort
  nameWithType: PortsHelper.ReturnPort
  fullName: EventStore.TestClient.PortsHelper.ReturnPort

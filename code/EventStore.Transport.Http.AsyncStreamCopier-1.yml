### YamlMime:ManagedReference
items:
- uid: EventStore.Transport.Http.AsyncStreamCopier`1
  commentId: T:EventStore.Transport.Http.AsyncStreamCopier`1
  id: AsyncStreamCopier`1
  parent: EventStore.Transport.Http
  children:
  - EventStore.Transport.Http.AsyncStreamCopier`1.#ctor(Stream,Stream,`0,Action{EventStore.Transport.Http.AsyncStreamCopier{`0}})
  - EventStore.Transport.Http.AsyncStreamCopier`1.AsyncState
  - EventStore.Transport.Http.AsyncStreamCopier`1.Error
  - EventStore.Transport.Http.AsyncStreamCopier`1.Start
  langs:
  - csharp
  - vb
  name: AsyncStreamCopier<T>
  nameWithType: AsyncStreamCopier<T>
  fullName: EventStore.Transport.Http.AsyncStreamCopier<T>
  type: Class
  source:
    remote:
      path: src/EventStore.Transport.Http/AsyncStreamCopier.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: AsyncStreamCopier
    path: ../EventStore/src/EventStore.Transport.Http/AsyncStreamCopier.cs
    startLine: 6
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: 'public class AsyncStreamCopier<T> : object'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class AsyncStreamCopier(Of T)
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Transport.Http.AsyncStreamCopier`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Transport.Http.AsyncStreamCopier`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  nameWithType.vb: AsyncStreamCopier(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: EventStore.Transport.Http.AsyncStreamCopier(Of T)
  name.vb: AsyncStreamCopier(Of T)
- uid: EventStore.Transport.Http.AsyncStreamCopier`1.Error
  commentId: P:EventStore.Transport.Http.AsyncStreamCopier`1.Error
  id: Error
  parent: EventStore.Transport.Http.AsyncStreamCopier`1
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: AsyncStreamCopier<T>.Error
  fullName: EventStore.Transport.Http.AsyncStreamCopier<T>.Error
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/AsyncStreamCopier.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Error
    path: ../EventStore/src/EventStore.Transport.Http/AsyncStreamCopier.cs
    startLine: 8
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public Exception Error { get; }
    parameters: []
    return:
      type: Exception
    content.vb: Public ReadOnly Property Error As Exception
  overload: EventStore.Transport.Http.AsyncStreamCopier`1.Error*
  nameWithType.vb: AsyncStreamCopier(Of T).Error
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: EventStore.Transport.Http.AsyncStreamCopier(Of T).Error
- uid: EventStore.Transport.Http.AsyncStreamCopier`1.AsyncState
  commentId: F:EventStore.Transport.Http.AsyncStreamCopier`1.AsyncState
  id: AsyncState
  parent: EventStore.Transport.Http.AsyncStreamCopier`1
  langs:
  - csharp
  - vb
  name: AsyncState
  nameWithType: AsyncStreamCopier<T>.AsyncState
  fullName: EventStore.Transport.Http.AsyncStreamCopier<T>.AsyncState
  type: Field
  source:
    remote:
      path: src/EventStore.Transport.Http/AsyncStreamCopier.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: AsyncState
    path: ../EventStore/src/EventStore.Transport.Http/AsyncStreamCopier.cs
    startLine: 9
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public readonly T AsyncState
    return:
      type: '{T}'
    content.vb: Public ReadOnly AsyncState As T
  nameWithType.vb: AsyncStreamCopier(Of T).AsyncState
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: EventStore.Transport.Http.AsyncStreamCopier(Of T).AsyncState
- uid: EventStore.Transport.Http.AsyncStreamCopier`1.#ctor(Stream,Stream,`0,Action{EventStore.Transport.Http.AsyncStreamCopier{`0}})
  commentId: M:EventStore.Transport.Http.AsyncStreamCopier`1.#ctor(Stream,Stream,`0,Action{EventStore.Transport.Http.AsyncStreamCopier{`0}})
  id: '#ctor(Stream,Stream,`0,Action{EventStore.Transport.Http.AsyncStreamCopier{`0}})'
  parent: EventStore.Transport.Http.AsyncStreamCopier`1
  langs:
  - csharp
  - vb
  name: AsyncStreamCopier(Stream, Stream, T, Action<AsyncStreamCopier<T>>)
  nameWithType: AsyncStreamCopier<T>.AsyncStreamCopier(Stream, Stream, T, Action<AsyncStreamCopier<T>>)
  fullName: EventStore.Transport.Http.AsyncStreamCopier<T>.AsyncStreamCopier(Stream, Stream, T, Action<EventStore.Transport.Http.AsyncStreamCopier<T>>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Transport.Http/AsyncStreamCopier.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Transport.Http/AsyncStreamCopier.cs
    startLine: 16
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public AsyncStreamCopier(Stream input, Stream output, T state, Action<AsyncStreamCopier<T>> onCompleted)
    parameters:
    - id: input
      type: Stream
    - id: output
      type: Stream
    - id: state
      type: '{T}'
    - id: onCompleted
      type: Action{EventStore.Transport.Http.AsyncStreamCopier`1}
    content.vb: Public Sub New(input As Stream, output As Stream, state As T, onCompleted As Action(Of AsyncStreamCopier(Of T)))
  overload: EventStore.Transport.Http.AsyncStreamCopier`1.#ctor*
  nameWithType.vb: AsyncStreamCopier(Of T).AsyncStreamCopier(Stream, Stream, T, Action(Of AsyncStreamCopier(Of T)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Transport.Http.AsyncStreamCopier(Of T).AsyncStreamCopier(Stream, Stream, T, Action(Of EventStore.Transport.Http.AsyncStreamCopier(Of T)))
  name.vb: AsyncStreamCopier(Stream, Stream, T, Action(Of AsyncStreamCopier(Of T)))
- uid: EventStore.Transport.Http.AsyncStreamCopier`1.Start
  commentId: M:EventStore.Transport.Http.AsyncStreamCopier`1.Start
  id: Start
  parent: EventStore.Transport.Http.AsyncStreamCopier`1
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: AsyncStreamCopier<T>.Start()
  fullName: EventStore.Transport.Http.AsyncStreamCopier<T>.Start()
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/AsyncStreamCopier.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Start
    path: ../EventStore/src/EventStore.Transport.Http/AsyncStreamCopier.cs
    startLine: 30
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: EventStore.Transport.Http.AsyncStreamCopier`1.Start*
  nameWithType.vb: AsyncStreamCopier(Of T).Start()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Transport.Http.AsyncStreamCopier(Of T).Start()
references:
- uid: EventStore.Transport.Http
  commentId: N:EventStore.Transport.Http
  name: EventStore.Transport.Http
  nameWithType: EventStore.Transport.Http
  fullName: EventStore.Transport.Http
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.AsyncStreamCopier`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<AsyncStreamCopier<T>>()
  nameWithType: ProtobufExtensions.Serialize<AsyncStreamCopier<T>>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.AsyncStreamCopier<T>>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of AsyncStreamCopier(Of T))()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.AsyncStreamCopier(Of T))()
  name.vb: Serialize(Of AsyncStreamCopier(Of T))()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<AsyncStreamCopier<T>>
    nameWithType: ProtobufExtensions.Serialize<AsyncStreamCopier<T>>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.AsyncStreamCopier<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of AsyncStreamCopier(Of T))
    nameWithType: ProtobufExtensions.Serialize(Of AsyncStreamCopier(Of T))
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.AsyncStreamCopier(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.AsyncStreamCopier`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<AsyncStreamCopier<T>>()
  nameWithType: ProtobufExtensions.SerializeToArray<AsyncStreamCopier<T>>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.AsyncStreamCopier<T>>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of AsyncStreamCopier(Of T))()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.AsyncStreamCopier(Of T))()
  name.vb: SerializeToArray(Of AsyncStreamCopier(Of T))()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<AsyncStreamCopier<T>>
    nameWithType: ProtobufExtensions.SerializeToArray<AsyncStreamCopier<T>>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.AsyncStreamCopier<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of AsyncStreamCopier(Of T))
    nameWithType: ProtobufExtensions.SerializeToArray(Of AsyncStreamCopier(Of T))
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.AsyncStreamCopier(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Transport.Http.AsyncStreamCopier`1.Error*
  commentId: Overload:EventStore.Transport.Http.AsyncStreamCopier`1.Error
  name: Error
  nameWithType: AsyncStreamCopier<T>.Error
  fullName: EventStore.Transport.Http.AsyncStreamCopier<T>.Error
  nameWithType.vb: AsyncStreamCopier(Of T).Error
  fullName.vb: EventStore.Transport.Http.AsyncStreamCopier(Of T).Error
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: EventStore.Transport.Http.AsyncStreamCopier`1.#ctor*
  commentId: Overload:EventStore.Transport.Http.AsyncStreamCopier`1.#ctor
  name: AsyncStreamCopier
  nameWithType: AsyncStreamCopier<T>.AsyncStreamCopier
  fullName: EventStore.Transport.Http.AsyncStreamCopier<T>.AsyncStreamCopier
  nameWithType.vb: AsyncStreamCopier(Of T).AsyncStreamCopier
  fullName.vb: EventStore.Transport.Http.AsyncStreamCopier(Of T).AsyncStreamCopier
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: Action{EventStore.Transport.Http.AsyncStreamCopier`1}
  commentId: '!:Action{EventStore.Transport.Http.AsyncStreamCopier`1}'
  definition: Action`1
  name: Action<AsyncStreamCopier<T>>
  nameWithType: Action<AsyncStreamCopier<T>>
  fullName: Action<EventStore.Transport.Http.AsyncStreamCopier<T>>
  nameWithType.vb: Action(Of AsyncStreamCopier(Of T))
  fullName.vb: Action(Of EventStore.Transport.Http.AsyncStreamCopier(Of T))
  name.vb: Action(Of AsyncStreamCopier(Of T))
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Transport.Http.AsyncStreamCopier`1
    name: AsyncStreamCopier
    nameWithType: AsyncStreamCopier
    fullName: EventStore.Transport.Http.AsyncStreamCopier
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Transport.Http.AsyncStreamCopier`1
    name: AsyncStreamCopier
    nameWithType: AsyncStreamCopier
    fullName: EventStore.Transport.Http.AsyncStreamCopier
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.AsyncStreamCopier`1.Start*
  commentId: Overload:EventStore.Transport.Http.AsyncStreamCopier`1.Start
  name: Start
  nameWithType: AsyncStreamCopier<T>.Start
  fullName: EventStore.Transport.Http.AsyncStreamCopier<T>.Start
  nameWithType.vb: AsyncStreamCopier(Of T).Start
  fullName.vb: EventStore.Transport.Http.AsyncStreamCopier(Of T).Start

### YamlMime:ManagedReference
items:
- uid: EventStore.Transport.Http.Atom.PersonElement
  commentId: T:EventStore.Transport.Http.Atom.PersonElement
  id: PersonElement
  parent: EventStore.Transport.Http.Atom
  children:
  - EventStore.Transport.Http.Atom.PersonElement.#ctor(System.String)
  - EventStore.Transport.Http.Atom.PersonElement.GetSchema
  - EventStore.Transport.Http.Atom.PersonElement.Name
  - EventStore.Transport.Http.Atom.PersonElement.ReadXml(XmlReader)
  - EventStore.Transport.Http.Atom.PersonElement.WriteXml(XmlWriter)
  langs:
  - csharp
  - vb
  name: PersonElement
  nameWithType: PersonElement
  fullName: EventStore.Transport.Http.Atom.PersonElement
  type: Class
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: PersonElement
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 315
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: 'public class PersonElement : IXmlSerializable'
    content.vb: >-
      Public Class PersonElement
          Inherits IXmlSerializable
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Transport.Http.Atom.PersonElement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Transport.Http.Atom.PersonElement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Transport.Http.Atom.PersonElement.Name
  commentId: P:EventStore.Transport.Http.Atom.PersonElement.Name
  id: Name
  parent: EventStore.Transport.Http.Atom.PersonElement
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PersonElement.Name
  fullName: EventStore.Transport.Http.Atom.PersonElement.Name
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Name
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 317
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: EventStore.Transport.Http.Atom.PersonElement.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.PersonElement.#ctor(System.String)
  commentId: M:EventStore.Transport.Http.Atom.PersonElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: EventStore.Transport.Http.Atom.PersonElement
  langs:
  - csharp
  - vb
  name: PersonElement(String)
  nameWithType: PersonElement.PersonElement(String)
  fullName: EventStore.Transport.Http.Atom.PersonElement.PersonElement(System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 319
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public PersonElement(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub New(name As String)
  overload: EventStore.Transport.Http.Atom.PersonElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.PersonElement.GetSchema
  commentId: M:EventStore.Transport.Http.Atom.PersonElement.GetSchema
  id: GetSchema
  parent: EventStore.Transport.Http.Atom.PersonElement
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: PersonElement.GetSchema()
  fullName: EventStore.Transport.Http.Atom.PersonElement.GetSchema()
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: GetSchema
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 324
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public XmlSchema GetSchema()
    return:
      type: XmlSchema
    content.vb: Public Function GetSchema As XmlSchema
  overload: EventStore.Transport.Http.Atom.PersonElement.GetSchema*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.PersonElement.ReadXml(XmlReader)
  commentId: M:EventStore.Transport.Http.Atom.PersonElement.ReadXml(XmlReader)
  id: ReadXml(XmlReader)
  parent: EventStore.Transport.Http.Atom.PersonElement
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: PersonElement.ReadXml(XmlReader)
  fullName: EventStore.Transport.Http.Atom.PersonElement.ReadXml(XmlReader)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadXml
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 329
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: XmlReader
    content.vb: Public Sub ReadXml(reader As XmlReader)
  overload: EventStore.Transport.Http.Atom.PersonElement.ReadXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.Atom.PersonElement.WriteXml(XmlWriter)
  commentId: M:EventStore.Transport.Http.Atom.PersonElement.WriteXml(XmlWriter)
  id: WriteXml(XmlWriter)
  parent: EventStore.Transport.Http.Atom.PersonElement
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: PersonElement.WriteXml(XmlWriter)
  fullName: EventStore.Transport.Http.Atom.PersonElement.WriteXml(XmlWriter)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/Atom/Feed.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: WriteXml
    path: ../EventStore/src/EventStore.Transport.Http/Atom/Feed.cs
    startLine: 336
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.Atom
  syntax:
    content: public void WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: XmlWriter
    content.vb: Public Sub WriteXml(writer As XmlWriter)
  overload: EventStore.Transport.Http.Atom.PersonElement.WriteXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Transport.Http.Atom
  commentId: N:EventStore.Transport.Http.Atom
  isExternal: false
  name: EventStore.Transport.Http.Atom
  nameWithType: EventStore.Transport.Http.Atom
  fullName: EventStore.Transport.Http.Atom
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.Atom.PersonElement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<PersonElement>()
  nameWithType: ProtobufExtensions.Serialize<PersonElement>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.Atom.PersonElement>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of PersonElement)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.Atom.PersonElement)()
  name.vb: Serialize(Of PersonElement)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<PersonElement>
    nameWithType: ProtobufExtensions.Serialize<PersonElement>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.Atom.PersonElement>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of PersonElement)
    nameWithType: ProtobufExtensions.Serialize(Of PersonElement)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.Atom.PersonElement)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.Atom.PersonElement.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<PersonElement>()
  nameWithType: ProtobufExtensions.SerializeToArray<PersonElement>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.Atom.PersonElement>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of PersonElement)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.Atom.PersonElement)()
  name.vb: SerializeToArray(Of PersonElement)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<PersonElement>
    nameWithType: ProtobufExtensions.SerializeToArray<PersonElement>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.Atom.PersonElement>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of PersonElement)
    nameWithType: ProtobufExtensions.SerializeToArray(Of PersonElement)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.Atom.PersonElement)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Transport.Http.Atom.PersonElement.Name*
  commentId: Overload:EventStore.Transport.Http.Atom.PersonElement.Name
  isExternal: false
  name: Name
  nameWithType: PersonElement.Name
  fullName: EventStore.Transport.Http.Atom.PersonElement.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Transport.Http.Atom.PersonElement.#ctor*
  commentId: Overload:EventStore.Transport.Http.Atom.PersonElement.#ctor
  isExternal: false
  name: PersonElement
  nameWithType: PersonElement.PersonElement
  fullName: EventStore.Transport.Http.Atom.PersonElement.PersonElement
- uid: EventStore.Transport.Http.Atom.PersonElement.GetSchema*
  commentId: Overload:EventStore.Transport.Http.Atom.PersonElement.GetSchema
  isExternal: false
  name: GetSchema
  nameWithType: PersonElement.GetSchema
  fullName: EventStore.Transport.Http.Atom.PersonElement.GetSchema
- uid: XmlSchema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: XmlSchema
- uid: EventStore.Transport.Http.Atom.PersonElement.ReadXml*
  commentId: Overload:EventStore.Transport.Http.Atom.PersonElement.ReadXml
  isExternal: false
  name: ReadXml
  nameWithType: PersonElement.ReadXml
  fullName: EventStore.Transport.Http.Atom.PersonElement.ReadXml
- uid: XmlReader
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: XmlReader
- uid: EventStore.Transport.Http.Atom.PersonElement.WriteXml*
  commentId: Overload:EventStore.Transport.Http.Atom.PersonElement.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: PersonElement.WriteXml
  fullName: EventStore.Transport.Http.Atom.PersonElement.WriteXml
- uid: XmlWriter
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: XmlWriter

### YamlMime:ManagedReference
items:
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity
  commentId: T:EventStore.Transport.Http.EntityManagement.HttpEntity
  id: HttpEntity
  parent: EventStore.Transport.Http.EntityManagement
  children:
  - EventStore.Transport.Http.EntityManagement.HttpEntity.#ctor(HttpListenerRequest,HttpListenerResponse,IPrincipal,System.Boolean,IPAddress,System.Int32)
  - EventStore.Transport.Http.EntityManagement.HttpEntity.BuildRequestedUrl(Uri,NameValueCollection,IPAddress,System.Int32,System.Boolean)
  - EventStore.Transport.Http.EntityManagement.HttpEntity.CreateManager
  - EventStore.Transport.Http.EntityManagement.HttpEntity.CreateManager(EventStore.Transport.Http.ICodec,EventStore.Transport.Http.ICodec,System.String[],Action{EventStore.Transport.Http.EntityManagement.HttpEntity})
  - EventStore.Transport.Http.EntityManagement.HttpEntity.Request
  - EventStore.Transport.Http.EntityManagement.HttpEntity.RequestedUrl
  - EventStore.Transport.Http.EntityManagement.HttpEntity.ResponseUrl
  - EventStore.Transport.Http.EntityManagement.HttpEntity.SetUser(IPrincipal)
  - EventStore.Transport.Http.EntityManagement.HttpEntity.Test(IPrincipal)
  - EventStore.Transport.Http.EntityManagement.HttpEntity.User
  langs:
  - csharp
  - vb
  name: HttpEntity
  nameWithType: HttpEntity
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity
  type: Class
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: HttpEntity
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
    startLine: 10
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: 'public class HttpEntity : object'
    content.vb: >-
      Public Class HttpEntity
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Transport.Http.EntityManagement.HttpEntity.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Transport.Http.EntityManagement.HttpEntity.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity.RequestedUrl
  commentId: F:EventStore.Transport.Http.EntityManagement.HttpEntity.RequestedUrl
  id: RequestedUrl
  parent: EventStore.Transport.Http.EntityManagement.HttpEntity
  langs:
  - csharp
  - vb
  name: RequestedUrl
  nameWithType: HttpEntity.RequestedUrl
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity.RequestedUrl
  type: Field
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: RequestedUrl
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
    startLine: 13
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public readonly Uri RequestedUrl
    return:
      type: Uri
    content.vb: Public ReadOnly RequestedUrl As Uri
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity.ResponseUrl
  commentId: F:EventStore.Transport.Http.EntityManagement.HttpEntity.ResponseUrl
  id: ResponseUrl
  parent: EventStore.Transport.Http.EntityManagement.HttpEntity
  langs:
  - csharp
  - vb
  name: ResponseUrl
  nameWithType: HttpEntity.ResponseUrl
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity.ResponseUrl
  type: Field
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ResponseUrl
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
    startLine: 14
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public readonly Uri ResponseUrl
    return:
      type: Uri
    content.vb: Public ReadOnly ResponseUrl As Uri
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity.Request
  commentId: F:EventStore.Transport.Http.EntityManagement.HttpEntity.Request
  id: Request
  parent: EventStore.Transport.Http.EntityManagement.HttpEntity
  langs:
  - csharp
  - vb
  name: Request
  nameWithType: HttpEntity.Request
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity.Request
  type: Field
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Request
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
    startLine: 16
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public readonly HttpListenerRequest Request
    return:
      type: HttpListenerRequest
    content.vb: Public ReadOnly Request As HttpListenerRequest
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity.User
  commentId: F:EventStore.Transport.Http.EntityManagement.HttpEntity.User
  id: User
  parent: EventStore.Transport.Http.EntityManagement.HttpEntity
  langs:
  - csharp
  - vb
  name: User
  nameWithType: HttpEntity.User
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity.User
  type: Field
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: User
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
    startLine: 18
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public readonly IPrincipal User
    return:
      type: IPrincipal
    content.vb: Public ReadOnly User As IPrincipal
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity.#ctor(HttpListenerRequest,HttpListenerResponse,IPrincipal,System.Boolean,IPAddress,System.Int32)
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntity.#ctor(HttpListenerRequest,HttpListenerResponse,IPrincipal,System.Boolean,IPAddress,System.Int32)
  id: '#ctor(HttpListenerRequest,HttpListenerResponse,IPrincipal,System.Boolean,IPAddress,System.Int32)'
  parent: EventStore.Transport.Http.EntityManagement.HttpEntity
  langs:
  - csharp
  - vb
  name: HttpEntity(HttpListenerRequest, HttpListenerResponse, IPrincipal, Boolean, IPAddress, Int32)
  nameWithType: HttpEntity.HttpEntity(HttpListenerRequest, HttpListenerResponse, IPrincipal, Boolean, IPAddress, Int32)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity.HttpEntity(HttpListenerRequest, HttpListenerResponse, IPrincipal, System.Boolean, IPAddress, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
    startLine: 20
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public HttpEntity(HttpListenerRequest request, HttpListenerResponse response, IPrincipal user, bool logHttpRequests, IPAddress advertiseAsAddress, int advertiseAsPort)
    parameters:
    - id: request
      type: HttpListenerRequest
    - id: response
      type: HttpListenerResponse
    - id: user
      type: IPrincipal
    - id: logHttpRequests
      type: System.Boolean
    - id: advertiseAsAddress
      type: IPAddress
    - id: advertiseAsPort
      type: System.Int32
    content.vb: Public Sub New(request As HttpListenerRequest, response As HttpListenerResponse, user As IPrincipal, logHttpRequests As Boolean, advertiseAsAddress As IPAddress, advertiseAsPort As Integer)
  overload: EventStore.Transport.Http.EntityManagement.HttpEntity.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity.BuildRequestedUrl(Uri,NameValueCollection,IPAddress,System.Int32,System.Boolean)
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntity.BuildRequestedUrl(Uri,NameValueCollection,IPAddress,System.Int32,System.Boolean)
  id: BuildRequestedUrl(Uri,NameValueCollection,IPAddress,System.Int32,System.Boolean)
  parent: EventStore.Transport.Http.EntityManagement.HttpEntity
  langs:
  - csharp
  - vb
  name: BuildRequestedUrl(Uri, NameValueCollection, IPAddress, Int32, Boolean)
  nameWithType: HttpEntity.BuildRequestedUrl(Uri, NameValueCollection, IPAddress, Int32, Boolean)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity.BuildRequestedUrl(Uri, NameValueCollection, IPAddress, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: BuildRequestedUrl
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
    startLine: 33
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public static Uri BuildRequestedUrl(Uri requestUrl, NameValueCollection requestHeaders, IPAddress advertiseAsAddress, int advertiseAsPort, bool overridePath = false)
    parameters:
    - id: requestUrl
      type: Uri
    - id: requestHeaders
      type: NameValueCollection
    - id: advertiseAsAddress
      type: IPAddress
    - id: advertiseAsPort
      type: System.Int32
    - id: overridePath
      type: System.Boolean
    return:
      type: Uri
    content.vb: Public Shared Function BuildRequestedUrl(requestUrl As Uri, requestHeaders As NameValueCollection, advertiseAsAddress As IPAddress, advertiseAsPort As Integer, overridePath As Boolean = False) As Uri
  overload: EventStore.Transport.Http.EntityManagement.HttpEntity.BuildRequestedUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity.CreateManager(EventStore.Transport.Http.ICodec,EventStore.Transport.Http.ICodec,System.String[],Action{EventStore.Transport.Http.EntityManagement.HttpEntity})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntity.CreateManager(EventStore.Transport.Http.ICodec,EventStore.Transport.Http.ICodec,System.String[],Action{EventStore.Transport.Http.EntityManagement.HttpEntity})
  id: CreateManager(EventStore.Transport.Http.ICodec,EventStore.Transport.Http.ICodec,System.String[],Action{EventStore.Transport.Http.EntityManagement.HttpEntity})
  parent: EventStore.Transport.Http.EntityManagement.HttpEntity
  langs:
  - csharp
  - vb
  name: CreateManager(ICodec, ICodec, String[], Action<HttpEntity>)
  nameWithType: HttpEntity.CreateManager(ICodec, ICodec, String[], Action<HttpEntity>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity.CreateManager(EventStore.Transport.Http.ICodec, EventStore.Transport.Http.ICodec, System.String[], Action<EventStore.Transport.Http.EntityManagement.HttpEntity>)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CreateManager
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
    startLine: 113
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public HttpEntityManager CreateManager(ICodec requestCodec, ICodec responseCodec, string[] allowedMethods, Action<HttpEntity> onRequestSatisfied)
    parameters:
    - id: requestCodec
      type: EventStore.Transport.Http.ICodec
    - id: responseCodec
      type: EventStore.Transport.Http.ICodec
    - id: allowedMethods
      type: System.String[]
    - id: onRequestSatisfied
      type: Action{EventStore.Transport.Http.EntityManagement.HttpEntity}
    return:
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    content.vb: Public Function CreateManager(requestCodec As ICodec, responseCodec As ICodec, allowedMethods As String(), onRequestSatisfied As Action(Of HttpEntity)) As HttpEntityManager
  overload: EventStore.Transport.Http.EntityManagement.HttpEntity.CreateManager*
  nameWithType.vb: HttpEntity.CreateManager(ICodec, ICodec, String(), Action(Of HttpEntity))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntity.CreateManager(EventStore.Transport.Http.ICodec, EventStore.Transport.Http.ICodec, System.String(), Action(Of EventStore.Transport.Http.EntityManagement.HttpEntity))
  name.vb: CreateManager(ICodec, ICodec, String(), Action(Of HttpEntity))
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity.CreateManager
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntity.CreateManager
  id: CreateManager
  parent: EventStore.Transport.Http.EntityManagement.HttpEntity
  langs:
  - csharp
  - vb
  name: CreateManager()
  nameWithType: HttpEntity.CreateManager()
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity.CreateManager()
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CreateManager
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
    startLine: 119
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public HttpEntityManager CreateManager()
    return:
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    content.vb: Public Function CreateManager As HttpEntityManager
  overload: EventStore.Transport.Http.EntityManagement.HttpEntity.CreateManager*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity.SetUser(IPrincipal)
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntity.SetUser(IPrincipal)
  id: SetUser(IPrincipal)
  parent: EventStore.Transport.Http.EntityManagement.HttpEntity
  langs:
  - csharp
  - vb
  name: SetUser(IPrincipal)
  nameWithType: HttpEntity.SetUser(IPrincipal)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity.SetUser(IPrincipal)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: SetUser
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
    startLine: 124
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public HttpEntity SetUser(IPrincipal user)
    parameters:
    - id: user
      type: IPrincipal
    return:
      type: EventStore.Transport.Http.EntityManagement.HttpEntity
    content.vb: Public Function SetUser(user As IPrincipal) As HttpEntity
  overload: EventStore.Transport.Http.EntityManagement.HttpEntity.SetUser*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity.Test(IPrincipal)
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntity.Test(IPrincipal)
  id: Test(IPrincipal)
  parent: EventStore.Transport.Http.EntityManagement.HttpEntity
  langs:
  - csharp
  - vb
  name: Test(IPrincipal)
  nameWithType: HttpEntity.Test(IPrincipal)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity.Test(IPrincipal)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Test
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntity.cs
    startLine: 129
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public static HttpEntity Test(IPrincipal user)
    parameters:
    - id: user
      type: IPrincipal
    return:
      type: EventStore.Transport.Http.EntityManagement.HttpEntity
    content.vb: Public Shared Function Test(user As IPrincipal) As HttpEntity
  overload: EventStore.Transport.Http.EntityManagement.HttpEntity.Test*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Transport.Http.EntityManagement
  commentId: N:EventStore.Transport.Http.EntityManagement
  isExternal: false
  name: EventStore.Transport.Http.EntityManagement
  nameWithType: EventStore.Transport.Http.EntityManagement
  fullName: EventStore.Transport.Http.EntityManagement
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<HttpEntity>()
  nameWithType: ProtobufExtensions.Serialize<HttpEntity>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.EntityManagement.HttpEntity>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of HttpEntity)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.EntityManagement.HttpEntity)()
  name.vb: Serialize(Of HttpEntity)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<HttpEntity>
    nameWithType: ProtobufExtensions.Serialize<HttpEntity>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.EntityManagement.HttpEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of HttpEntity)
    nameWithType: ProtobufExtensions.Serialize(Of HttpEntity)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.EntityManagement.HttpEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<HttpEntity>()
  nameWithType: ProtobufExtensions.SerializeToArray<HttpEntity>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.EntityManagement.HttpEntity>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of HttpEntity)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.EntityManagement.HttpEntity)()
  name.vb: SerializeToArray(Of HttpEntity)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<HttpEntity>
    nameWithType: ProtobufExtensions.SerializeToArray<HttpEntity>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.EntityManagement.HttpEntity>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of HttpEntity)
    nameWithType: ProtobufExtensions.SerializeToArray(Of HttpEntity)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.EntityManagement.HttpEntity)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: HttpListenerRequest
  isExternal: true
  name: HttpListenerRequest
  nameWithType: HttpListenerRequest
  fullName: HttpListenerRequest
- uid: IPrincipal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: IPrincipal
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity.#ctor*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntity.#ctor
  isExternal: false
  name: HttpEntity
  nameWithType: HttpEntity.HttpEntity
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity.HttpEntity
- uid: HttpListenerResponse
  commentId: '!:HttpListenerResponse'
  isExternal: true
  name: HttpListenerResponse
  nameWithType: HttpListenerResponse
  fullName: HttpListenerResponse
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: IPAddress
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: IPAddress
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity.BuildRequestedUrl*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntity.BuildRequestedUrl
  isExternal: false
  name: BuildRequestedUrl
  nameWithType: HttpEntity.BuildRequestedUrl
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity.BuildRequestedUrl
- uid: NameValueCollection
  commentId: '!:NameValueCollection'
  isExternal: true
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: NameValueCollection
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity.CreateManager*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntity.CreateManager
  isExternal: false
  name: CreateManager
  nameWithType: HttpEntity.CreateManager
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity.CreateManager
- uid: EventStore.Transport.Http.ICodec
  commentId: T:EventStore.Transport.Http.ICodec
  parent: EventStore.Transport.Http
  isExternal: false
  name: ICodec
  nameWithType: ICodec
  fullName: EventStore.Transport.Http.ICodec
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Action{EventStore.Transport.Http.EntityManagement.HttpEntity}
  commentId: '!:Action{EventStore.Transport.Http.EntityManagement.HttpEntity}'
  definition: Action`1
  name: Action<HttpEntity>
  nameWithType: Action<HttpEntity>
  fullName: Action<EventStore.Transport.Http.EntityManagement.HttpEntity>
  nameWithType.vb: Action(Of HttpEntity)
  fullName.vb: Action(Of EventStore.Transport.Http.EntityManagement.HttpEntity)
  name.vb: Action(Of HttpEntity)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntity
    name: HttpEntity
    nameWithType: HttpEntity
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntity
    name: HttpEntity
    nameWithType: HttpEntity
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  commentId: T:EventStore.Transport.Http.EntityManagement.HttpEntityManager
  parent: EventStore.Transport.Http.EntityManagement
  isExternal: false
  name: HttpEntityManager
  nameWithType: HttpEntityManager
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
- uid: EventStore.Transport.Http
  commentId: N:EventStore.Transport.Http
  isExternal: false
  name: EventStore.Transport.Http
  nameWithType: EventStore.Transport.Http
  fullName: EventStore.Transport.Http
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity.SetUser*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntity.SetUser
  isExternal: false
  name: SetUser
  nameWithType: HttpEntity.SetUser
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity.SetUser
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity
  commentId: T:EventStore.Transport.Http.EntityManagement.HttpEntity
  parent: EventStore.Transport.Http.EntityManagement
  isExternal: false
  name: HttpEntity
  nameWithType: HttpEntity
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity.Test*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntity.Test
  isExternal: false
  name: Test
  nameWithType: HttpEntity.Test
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity.Test

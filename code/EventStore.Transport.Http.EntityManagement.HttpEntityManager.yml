### YamlMime:ManagedReference
items:
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  commentId: T:EventStore.Transport.Http.EntityManagement.HttpEntityManager
  id: HttpEntityManager
  parent: EventStore.Transport.Http.EntityManagement
  children:
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.AsyncState
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.BeginReply(System.Int32,System.String,System.String,Encoding,IEnumerable{KeyValuePair{System.String,System.String}})
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.CompressResponse(System.Byte[],System.String)
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.ContinueReply(System.Byte[],Action{Exception},Action)
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.EndReply
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.ForwardReply(HttpResponseMessage,Action{Exception})
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.HttpEntity
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.IsProcessing
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.ReadRequestAsync(Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[]},Action{Exception})
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.Reply(System.Byte[],System.Int32,System.String,System.String,Encoding,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.RequestCodec
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.RequestedUrl
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.ResponseCodec
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.TimeStamp
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.User
  langs:
  - csharp
  - vb
  name: HttpEntityManager
  nameWithType: HttpEntityManager
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  type: Class
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HttpEntityManager
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
    startLine: 17
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: 'public sealed class HttpEntityManager : object'
    content.vb: >-
      Public NotInheritable Class HttpEntityManager

          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply(System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}})
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(System.Int32,System.String,Action{Exception},IEnumerable{KeyValuePair{System.String,System.String}})
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(System.Byte[],System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(System.String,Action{Exception},Action)
  - EventStore.Transport.Http.EntityManagement.HttpEntityManager.EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},Action{Exception})
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.AsyncState
  commentId: P:EventStore.Transport.Http.EntityManagement.HttpEntityManager.AsyncState
  id: AsyncState
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  langs:
  - csharp
  - vb
  name: AsyncState
  nameWithType: HttpEntityManager.AsyncState
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.AsyncState
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: AsyncState
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
    startLine: 21
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public object AsyncState { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property AsyncState As Object
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManager.AsyncState*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.HttpEntity
  commentId: F:EventStore.Transport.Http.EntityManagement.HttpEntityManager.HttpEntity
  id: HttpEntity
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  langs:
  - csharp
  - vb
  name: HttpEntity
  nameWithType: HttpEntityManager.HttpEntity
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.HttpEntity
  type: Field
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HttpEntity
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
    startLine: 22
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public readonly HttpEntity HttpEntity
    return:
      type: EventStore.Transport.Http.EntityManagement.HttpEntity
    content.vb: Public ReadOnly HttpEntity As HttpEntity
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.IsProcessing
  commentId: P:EventStore.Transport.Http.EntityManagement.HttpEntityManager.IsProcessing
  id: IsProcessing
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  langs:
  - csharp
  - vb
  name: IsProcessing
  nameWithType: HttpEntityManager.IsProcessing
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.IsProcessing
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: IsProcessing
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
    startLine: 24
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public bool IsProcessing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsProcessing As Boolean
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManager.IsProcessing*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.TimeStamp
  commentId: F:EventStore.Transport.Http.EntityManagement.HttpEntityManager.TimeStamp
  id: TimeStamp
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  langs:
  - csharp
  - vb
  name: TimeStamp
  nameWithType: HttpEntityManager.TimeStamp
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.TimeStamp
  type: Field
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: TimeStamp
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
    startLine: 42
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public readonly DateTime TimeStamp
    return:
      type: DateTime
    content.vb: Public ReadOnly TimeStamp As DateTime
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.RequestCodec
  commentId: P:EventStore.Transport.Http.EntityManagement.HttpEntityManager.RequestCodec
  id: RequestCodec
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  langs:
  - csharp
  - vb
  name: RequestCodec
  nameWithType: HttpEntityManager.RequestCodec
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.RequestCodec
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RequestCodec
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
    startLine: 70
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public ICodec RequestCodec { get; }
    parameters: []
    return:
      type: EventStore.Transport.Http.ICodec
    content.vb: Public ReadOnly Property RequestCodec As ICodec
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManager.RequestCodec*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ResponseCodec
  commentId: P:EventStore.Transport.Http.EntityManagement.HttpEntityManager.ResponseCodec
  id: ResponseCodec
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  langs:
  - csharp
  - vb
  name: ResponseCodec
  nameWithType: HttpEntityManager.ResponseCodec
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ResponseCodec
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ResponseCodec
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
    startLine: 71
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public ICodec ResponseCodec { get; }
    parameters: []
    return:
      type: EventStore.Transport.Http.ICodec
    content.vb: Public ReadOnly Property ResponseCodec As ICodec
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ResponseCodec*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.RequestedUrl
  commentId: P:EventStore.Transport.Http.EntityManagement.HttpEntityManager.RequestedUrl
  id: RequestedUrl
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  langs:
  - csharp
  - vb
  name: RequestedUrl
  nameWithType: HttpEntityManager.RequestedUrl
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.RequestedUrl
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: RequestedUrl
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
    startLine: 72
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public Uri RequestedUrl { get; }
    parameters: []
    return:
      type: Uri
    content.vb: Public ReadOnly Property RequestedUrl As Uri
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManager.RequestedUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.User
  commentId: P:EventStore.Transport.Http.EntityManagement.HttpEntityManager.User
  id: User
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  langs:
  - csharp
  - vb
  name: User
  nameWithType: HttpEntityManager.User
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.User
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: User
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
    startLine: 73
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public IPrincipal User { get; }
    parameters: []
    return:
      type: IPrincipal
    content.vb: Public ReadOnly Property User As IPrincipal
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManager.User*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ReadRequestAsync(Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[]},Action{Exception})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManager.ReadRequestAsync(Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[]},Action{Exception})
  id: ReadRequestAsync(Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[]},Action{Exception})
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  langs:
  - csharp
  - vb
  name: ReadRequestAsync(Action<HttpEntityManager, Byte[]>, Action<Exception>)
  nameWithType: HttpEntityManager.ReadRequestAsync(Action<HttpEntityManager, Byte[]>, Action<Exception>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ReadRequestAsync(Action<EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Byte[]>, Action<Exception>)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ReadRequestAsync
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
    startLine: 199
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public void ReadRequestAsync(Action<HttpEntityManager, byte[]> onReadSuccess, Action<Exception> onError)
    parameters:
    - id: onReadSuccess
      type: Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[]}
    - id: onError
      type: Action{Exception}
    content.vb: Public Sub ReadRequestAsync(onReadSuccess As Action(Of HttpEntityManager, Byte()), onError As Action(Of Exception))
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ReadRequestAsync*
  nameWithType.vb: HttpEntityManager.ReadRequestAsync(Action(Of HttpEntityManager, Byte()), Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ReadRequestAsync(Action(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Byte()), Action(Of Exception))
  name.vb: ReadRequestAsync(Action(Of HttpEntityManager, Byte()), Action(Of Exception))
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.BeginReply(System.Int32,System.String,System.String,Encoding,IEnumerable{KeyValuePair{System.String,System.String}})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManager.BeginReply(System.Int32,System.String,System.String,Encoding,IEnumerable{KeyValuePair{System.String,System.String}})
  id: BeginReply(System.Int32,System.String,System.String,Encoding,IEnumerable{KeyValuePair{System.String,System.String}})
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  langs:
  - csharp
  - vb
  name: BeginReply(Int32, String, String, Encoding, IEnumerable<KeyValuePair<String, String>>)
  nameWithType: HttpEntityManager.BeginReply(Int32, String, String, Encoding, IEnumerable<KeyValuePair<String, String>>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.BeginReply(System.Int32, System.String, System.String, Encoding, IEnumerable<KeyValuePair<System.String, System.String>>)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: BeginReply
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
    startLine: 211
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public bool BeginReply(int code, string description, string contentType, Encoding encoding, IEnumerable<KeyValuePair<string, string>> headers)
    parameters:
    - id: code
      type: System.Int32
    - id: description
      type: System.String
    - id: contentType
      type: System.String
    - id: encoding
      type: Encoding
    - id: headers
      type: IEnumerable{KeyValuePair{System.String,System.String}}
    return:
      type: System.Boolean
    content.vb: Public Function BeginReply(code As Integer, description As String, contentType As String, encoding As Encoding, headers As IEnumerable(Of KeyValuePair(Of String, String))) As Boolean
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManager.BeginReply*
  nameWithType.vb: HttpEntityManager.BeginReply(Int32, String, String, Encoding, IEnumerable(Of KeyValuePair(Of String, String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManager.BeginReply(System.Int32, System.String, System.String, Encoding, IEnumerable(Of KeyValuePair(Of System.String, System.String)))
  name.vb: BeginReply(Int32, String, String, Encoding, IEnumerable(Of KeyValuePair(Of String, String)))
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ContinueReply(System.Byte[],Action{Exception},Action)
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManager.ContinueReply(System.Byte[],Action{Exception},Action)
  id: ContinueReply(System.Byte[],Action{Exception},Action)
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  langs:
  - csharp
  - vb
  name: ContinueReply(Byte[], Action<Exception>, Action)
  nameWithType: HttpEntityManager.ContinueReply(Byte[], Action<Exception>, Action)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ContinueReply(System.Byte[], Action<Exception>, Action)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ContinueReply
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
    startLine: 234
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public void ContinueReply(byte[] response, Action<Exception> onError, Action onCompleted)
    parameters:
    - id: response
      type: System.Byte[]
    - id: onError
      type: Action{Exception}
    - id: onCompleted
      type: Action
    content.vb: Public Sub ContinueReply(response As Byte(), onError As Action(Of Exception), onCompleted As Action)
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ContinueReply*
  nameWithType.vb: HttpEntityManager.ContinueReply(Byte(), Action(Of Exception), Action)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ContinueReply(System.Byte(), Action(Of Exception), Action)
  name.vb: ContinueReply(Byte(), Action(Of Exception), Action)
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.EndReply
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManager.EndReply
  id: EndReply
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  langs:
  - csharp
  - vb
  name: EndReply()
  nameWithType: HttpEntityManager.EndReply()
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.EndReply()
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: EndReply
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
    startLine: 250
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public void EndReply()
    content.vb: Public Sub
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManager.EndReply*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.Reply(System.Byte[],System.Int32,System.String,System.String,Encoding,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManager.Reply(System.Byte[],System.Int32,System.String,System.String,Encoding,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  id: Reply(System.Byte[],System.Int32,System.String,System.String,Encoding,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  langs:
  - csharp
  - vb
  name: Reply(Byte[], Int32, String, String, Encoding, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  nameWithType: HttpEntityManager.Reply(Byte[], Int32, String, String, Encoding, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.Reply(System.Byte[], System.Int32, System.String, System.String, Encoding, IEnumerable<KeyValuePair<System.String, System.String>>, Action<Exception>)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Reply
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
    startLine: 255
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public void Reply(byte[] response, int code, string description, string contentType, Encoding encoding, IEnumerable<KeyValuePair<string, string>> headers, Action<Exception> onError)
    parameters:
    - id: response
      type: System.Byte[]
    - id: code
      type: System.Int32
    - id: description
      type: System.String
    - id: contentType
      type: System.String
    - id: encoding
      type: Encoding
    - id: headers
      type: IEnumerable{KeyValuePair{System.String,System.String}}
    - id: onError
      type: Action{Exception}
    content.vb: Public Sub Reply(response As Byte(), code As Integer, description As String, contentType As String, encoding As Encoding, headers As IEnumerable(Of KeyValuePair(Of String, String)), onError As Action(Of Exception))
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManager.Reply*
  nameWithType.vb: HttpEntityManager.Reply(Byte(), Int32, String, String, Encoding, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManager.Reply(System.Byte(), System.Int32, System.String, System.String, Encoding, IEnumerable(Of KeyValuePair(Of System.String, System.String)), Action(Of Exception))
  name.vb: Reply(Byte(), Int32, String, String, Encoding, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ForwardReply(HttpResponseMessage,Action{Exception})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManager.ForwardReply(HttpResponseMessage,Action{Exception})
  id: ForwardReply(HttpResponseMessage,Action{Exception})
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  langs:
  - csharp
  - vb
  name: ForwardReply(HttpResponseMessage, Action<Exception>)
  nameWithType: HttpEntityManager.ForwardReply(HttpResponseMessage, Action<Exception>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ForwardReply(HttpResponseMessage, Action<Exception>)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ForwardReply
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
    startLine: 282
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public void ForwardReply(HttpResponseMessage response, Action<Exception> onError)
    parameters:
    - id: response
      type: HttpResponseMessage
    - id: onError
      type: Action{Exception}
    content.vb: Public Sub ForwardReply(response As HttpResponseMessage, onError As Action(Of Exception))
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ForwardReply*
  nameWithType.vb: HttpEntityManager.ForwardReply(HttpResponseMessage, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ForwardReply(HttpResponseMessage, Action(Of Exception))
  name.vb: ForwardReply(HttpResponseMessage, Action(Of Exception))
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.CompressResponse(System.Byte[],System.String)
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManager.CompressResponse(System.Byte[],System.String)
  id: CompressResponse(System.Byte[],System.String)
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  langs:
  - csharp
  - vb
  name: CompressResponse(Byte[], String)
  nameWithType: HttpEntityManager.CompressResponse(Byte[], String)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.CompressResponse(System.Byte[], System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CompressResponse
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManager.cs
    startLine: 463
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public static byte[] CompressResponse(byte[] response, string compressionAlgorithm)
    parameters:
    - id: response
      type: System.Byte[]
    - id: compressionAlgorithm
      type: System.String
    return:
      type: System.Byte[]
    content.vb: Public Shared Function CompressResponse(response As Byte(), compressionAlgorithm As String) As Byte()
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManager.CompressResponse*
  nameWithType.vb: HttpEntityManager.CompressResponse(Byte(), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManager.CompressResponse(System.Byte(), System.String)
  name.vb: CompressResponse(Byte(), String)
references:
- uid: EventStore.Transport.Http.EntityManagement
  commentId: N:EventStore.Transport.Http.EntityManagement
  isExternal: false
  name: EventStore.Transport.Http.EntityManagement
  nameWithType: EventStore.Transport.Http.EntityManagement
  fullName: EventStore.Transport.Http.EntityManagement
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  parent: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  definition: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  name: AsDynamic()
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic()
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic()
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<HttpEntityManager>()
  nameWithType: ProtobufExtensions.Serialize<HttpEntityManager>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.EntityManagement.HttpEntityManager>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of HttpEntityManager)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager)()
  name.vb: Serialize(Of HttpEntityManager)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<HttpEntityManager>
    nameWithType: ProtobufExtensions.Serialize<HttpEntityManager>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.EntityManagement.HttpEntityManager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of HttpEntityManager)
    nameWithType: ProtobufExtensions.Serialize(Of HttpEntityManager)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<HttpEntityManager>()
  nameWithType: ProtobufExtensions.SerializeToArray<HttpEntityManager>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.EntityManagement.HttpEntityManager>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of HttpEntityManager)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager)()
  name.vb: SerializeToArray(Of HttpEntityManager)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<HttpEntityManager>
    nameWithType: ProtobufExtensions.SerializeToArray<HttpEntityManager>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.EntityManagement.HttpEntityManager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of HttpEntityManager)
    nameWithType: ProtobufExtensions.SerializeToArray(Of HttpEntityManager)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply(System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}})
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}})
  parent: EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers
  definition: EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}})
  name: Reply(String, Int32, String, String, IEnumerable<KeyValuePair<String, String>>)
  nameWithType: HttpHelpers.Reply(String, Int32, String, String, IEnumerable<KeyValuePair<String, String>>)
  fullName: EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply(System.String, System.Int32, System.String, System.String, IEnumerable<KeyValuePair<System.String, System.String>>)
  nameWithType.vb: HttpHelpers.Reply(String, Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)))
  fullName.vb: EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply(System.String, System.Int32, System.String, System.String, IEnumerable(Of KeyValuePair(Of System.String, System.String)))
  name.vb: Reply(String, Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)))
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply(System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}})
    name: Reply
    nameWithType: HttpHelpers.Reply
    fullName: EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply(System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}})
    name: Reply
    nameWithType: HttpHelpers.Reply
    fullName: EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(System.Int32,System.String,Action{Exception},IEnumerable{KeyValuePair{System.String,System.String}})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Int32,System.String,Action{Exception},IEnumerable{KeyValuePair{System.String,System.String}})
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  definition: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Int32,System.String,Action{Exception},IEnumerable{KeyValuePair{System.String,System.String}})
  name: ReplyStatus(Int32, String, Action<Exception>, IEnumerable<KeyValuePair<String, String>>)
  nameWithType: HttpEntityManagerExtensions.ReplyStatus(Int32, String, Action<Exception>, IEnumerable<KeyValuePair<String, String>>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(System.Int32, System.String, Action<Exception>, IEnumerable<KeyValuePair<System.String, System.String>>)
  nameWithType.vb: HttpEntityManagerExtensions.ReplyStatus(Int32, String, Action(Of Exception), IEnumerable(Of KeyValuePair(Of String, String)))
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(System.Int32, System.String, Action(Of Exception), IEnumerable(Of KeyValuePair(Of System.String, System.String)))
  name.vb: ReplyStatus(Int32, String, Action(Of Exception), IEnumerable(Of KeyValuePair(Of String, String)))
  spec.csharp:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(System.Int32,System.String,Action{Exception},IEnumerable{KeyValuePair{System.String,System.String}})
    name: ReplyStatus
    nameWithType: HttpEntityManagerExtensions.ReplyStatus
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(System.Int32,System.String,Action{Exception},IEnumerable{KeyValuePair{System.String,System.String}})
    name: ReplyStatus
    nameWithType: HttpEntityManagerExtensions.ReplyStatus
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(System.Byte[],System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[],System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  definition: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[],System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  name: ReplyContent(Byte[], Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  nameWithType: HttpEntityManagerExtensions.ReplyContent(Byte[], Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(System.Byte[], System.Int32, System.String, System.String, IEnumerable<KeyValuePair<System.String, System.String>>, Action<Exception>)
  nameWithType.vb: HttpEntityManagerExtensions.ReplyContent(Byte(), Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(System.Byte(), System.Int32, System.String, System.String, IEnumerable(Of KeyValuePair(Of System.String, System.String)), Action(Of Exception))
  name.vb: ReplyContent(Byte(), Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
  spec.csharp:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(System.Byte[],System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
    name: ReplyContent
    nameWithType: HttpEntityManagerExtensions.ReplyContent
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(System.Byte[],System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
    name: ReplyContent
    nameWithType: HttpEntityManagerExtensions.ReplyContent
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  definition: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  name: ReplyTextContent(String, Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  nameWithType: HttpEntityManagerExtensions.ReplyTextContent(String, Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(System.String, System.Int32, System.String, System.String, IEnumerable<KeyValuePair<System.String, System.String>>, Action<Exception>)
  nameWithType.vb: HttpEntityManagerExtensions.ReplyTextContent(String, Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(System.String, System.Int32, System.String, System.String, IEnumerable(Of KeyValuePair(Of System.String, System.String)), Action(Of Exception))
  name.vb: ReplyTextContent(String, Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
  spec.csharp:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
    name: ReplyTextContent
    nameWithType: HttpEntityManagerExtensions.ReplyTextContent
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
    name: ReplyTextContent
    nameWithType: HttpEntityManagerExtensions.ReplyTextContent
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(System.String,Action{Exception},Action)
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,Action{Exception},Action)
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  definition: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,Action{Exception},Action)
  name: ContinueReplyTextContent(String, Action<Exception>, Action)
  nameWithType: HttpEntityManagerExtensions.ContinueReplyTextContent(String, Action<Exception>, Action)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(System.String, Action<Exception>, Action)
  nameWithType.vb: HttpEntityManagerExtensions.ContinueReplyTextContent(String, Action(Of Exception), Action)
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(System.String, Action(Of Exception), Action)
  name.vb: ContinueReplyTextContent(String, Action(Of Exception), Action)
  spec.csharp:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(System.String,Action{Exception},Action)
    name: ContinueReplyTextContent
    nameWithType: HttpEntityManagerExtensions.ContinueReplyTextContent
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(System.String,Action{Exception},Action)
    name: ContinueReplyTextContent
    nameWithType: HttpEntityManagerExtensions.ContinueReplyTextContent
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},Action{Exception})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager,Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},Action{Exception})
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  definition: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager,Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},Action{Exception})
  name: ReadTextRequestAsync(Action<HttpEntityManager, String>, Action<Exception>)
  nameWithType: HttpEntityManagerExtensions.ReadTextRequestAsync(Action<HttpEntityManager, String>, Action<Exception>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(Action<EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String>, Action<Exception>)
  nameWithType.vb: HttpEntityManagerExtensions.ReadTextRequestAsync(Action(Of HttpEntityManager, String), Action(Of Exception))
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(Action(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String), Action(Of Exception))
  name.vb: ReadTextRequestAsync(Action(Of HttpEntityManager, String), Action(Of Exception))
  spec.csharp:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},Action{Exception})
    name: ReadTextRequestAsync
    nameWithType: HttpEntityManagerExtensions.ReadTextRequestAsync
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},Action{Exception})
    name: ReadTextRequestAsync
    nameWithType: HttpEntityManagerExtensions.ReadTextRequestAsync
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  commentId: M:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  isExternal: true
  name: AsDynamic(Object)
  nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic(Object)
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
  spec.csharp:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic(System.Object)
    name: AsDynamic
    nameWithType: PrivateReflectionDynamicObjectExtensions.AsDynamic
    fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  commentId: T:EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
  parent: EventStore.Core.Tests.Helpers
  isExternal: false
  name: PrivateReflectionDynamicObjectExtensions
  nameWithType: PrivateReflectionDynamicObjectExtensions
  fullName: EventStore.Core.Tests.Helpers.PrivateReflectionDynamicObjectExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}})
  commentId: M:EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}})
  isExternal: true
  name: Reply(HttpEntityManager, String, Int32, String, String, IEnumerable<KeyValuePair<String, String>>)
  nameWithType: HttpHelpers.Reply(HttpEntityManager, String, Int32, String, String, IEnumerable<KeyValuePair<String, String>>)
  fullName: EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String, System.Int32, System.String, System.String, IEnumerable<KeyValuePair<System.String, System.String>>)
  nameWithType.vb: HttpHelpers.Reply(HttpEntityManager, String, Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)))
  fullName.vb: EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String, System.Int32, System.String, System.String, IEnumerable(Of KeyValuePair(Of System.String, System.String)))
  name.vb: Reply(HttpEntityManager, String, Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)))
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}})
    name: Reply
    nameWithType: HttpHelpers.Reply
    fullName: EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}})
    name: Reply
    nameWithType: HttpHelpers.Reply
    fullName: EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.Reply
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers
  commentId: T:EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers
  parent: EventStore.Core.Services.Transport.Http.Controllers
  isExternal: false
  name: HttpHelpers
  nameWithType: HttpHelpers
  fullName: EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Int32,System.String,Action{Exception},IEnumerable{KeyValuePair{System.String,System.String}})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Int32,System.String,Action{Exception},IEnumerable{KeyValuePair{System.String,System.String}})
  isExternal: true
  name: ReplyStatus(HttpEntityManager, Int32, String, Action<Exception>, IEnumerable<KeyValuePair<String, String>>)
  nameWithType: HttpEntityManagerExtensions.ReplyStatus(HttpEntityManager, Int32, String, Action<Exception>, IEnumerable<KeyValuePair<String, String>>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Int32, System.String, Action<Exception>, IEnumerable<KeyValuePair<System.String, System.String>>)
  nameWithType.vb: HttpEntityManagerExtensions.ReplyStatus(HttpEntityManager, Int32, String, Action(Of Exception), IEnumerable(Of KeyValuePair(Of String, String)))
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Int32, System.String, Action(Of Exception), IEnumerable(Of KeyValuePair(Of System.String, System.String)))
  name.vb: ReplyStatus(HttpEntityManager, Int32, String, Action(Of Exception), IEnumerable(Of KeyValuePair(Of String, String)))
  spec.csharp:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Int32,System.String,Action{Exception},IEnumerable{KeyValuePair{System.String,System.String}})
    name: ReplyStatus
    nameWithType: HttpEntityManagerExtensions.ReplyStatus
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Int32,System.String,Action{Exception},IEnumerable{KeyValuePair{System.String,System.String}})
    name: ReplyStatus
    nameWithType: HttpEntityManagerExtensions.ReplyStatus
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  commentId: T:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  parent: EventStore.Transport.Http.EntityManagement
  isExternal: false
  name: HttpEntityManagerExtensions
  nameWithType: HttpEntityManagerExtensions
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[],System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[],System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  isExternal: true
  name: ReplyContent(HttpEntityManager, Byte[], Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  nameWithType: HttpEntityManagerExtensions.ReplyContent(HttpEntityManager, Byte[], Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Byte[], System.Int32, System.String, System.String, IEnumerable<KeyValuePair<System.String, System.String>>, Action<Exception>)
  nameWithType.vb: HttpEntityManagerExtensions.ReplyContent(HttpEntityManager, Byte(), Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Byte(), System.Int32, System.String, System.String, IEnumerable(Of KeyValuePair(Of System.String, System.String)), Action(Of Exception))
  name.vb: ReplyContent(HttpEntityManager, Byte(), Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
  spec.csharp:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[],System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
    name: ReplyContent
    nameWithType: HttpEntityManagerExtensions.ReplyContent
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[],System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
    name: ReplyContent
    nameWithType: HttpEntityManagerExtensions.ReplyContent
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  isExternal: true
  name: ReplyTextContent(HttpEntityManager, String, Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  nameWithType: HttpEntityManagerExtensions.ReplyTextContent(HttpEntityManager, String, Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String, System.Int32, System.String, System.String, IEnumerable<KeyValuePair<System.String, System.String>>, Action<Exception>)
  nameWithType.vb: HttpEntityManagerExtensions.ReplyTextContent(HttpEntityManager, String, Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String, System.Int32, System.String, System.String, IEnumerable(Of KeyValuePair(Of System.String, System.String)), Action(Of Exception))
  name.vb: ReplyTextContent(HttpEntityManager, String, Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
  spec.csharp:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
    name: ReplyTextContent
    nameWithType: HttpEntityManagerExtensions.ReplyTextContent
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
    name: ReplyTextContent
    nameWithType: HttpEntityManagerExtensions.ReplyTextContent
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,Action{Exception},Action)
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,Action{Exception},Action)
  isExternal: true
  name: ContinueReplyTextContent(HttpEntityManager, String, Action<Exception>, Action)
  nameWithType: HttpEntityManagerExtensions.ContinueReplyTextContent(HttpEntityManager, String, Action<Exception>, Action)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String, Action<Exception>, Action)
  nameWithType.vb: HttpEntityManagerExtensions.ContinueReplyTextContent(HttpEntityManager, String, Action(Of Exception), Action)
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String, Action(Of Exception), Action)
  name.vb: ContinueReplyTextContent(HttpEntityManager, String, Action(Of Exception), Action)
  spec.csharp:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,Action{Exception},Action)
    name: ContinueReplyTextContent
    nameWithType: HttpEntityManagerExtensions.ContinueReplyTextContent
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,Action{Exception},Action)
    name: ContinueReplyTextContent
    nameWithType: HttpEntityManagerExtensions.ContinueReplyTextContent
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager,Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},Action{Exception})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager,Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},Action{Exception})
  isExternal: true
  name: ReadTextRequestAsync(HttpEntityManager, Action<HttpEntityManager, String>, Action<Exception>)
  nameWithType: HttpEntityManagerExtensions.ReadTextRequestAsync(HttpEntityManager, Action<HttpEntityManager, String>, Action<Exception>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager, Action<EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String>, Action<Exception>)
  nameWithType.vb: HttpEntityManagerExtensions.ReadTextRequestAsync(HttpEntityManager, Action(Of HttpEntityManager, String), Action(Of Exception))
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager, Action(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String), Action(Of Exception))
  name.vb: ReadTextRequestAsync(HttpEntityManager, Action(Of HttpEntityManager, String), Action(Of Exception))
  spec.csharp:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager,Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},Action{Exception})
    name: ReadTextRequestAsync
    nameWithType: HttpEntityManagerExtensions.ReadTextRequestAsync
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager,Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},Action{Exception})
    name: ReadTextRequestAsync
    nameWithType: HttpEntityManagerExtensions.ReadTextRequestAsync
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Tests.Helpers
  commentId: N:EventStore.Core.Tests.Helpers
  isExternal: false
  name: EventStore.Core.Tests.Helpers
  nameWithType: EventStore.Core.Tests.Helpers
  fullName: EventStore.Core.Tests.Helpers
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.Transport.Http.Controllers
  commentId: N:EventStore.Core.Services.Transport.Http.Controllers
  isExternal: false
  name: EventStore.Core.Services.Transport.Http.Controllers
  nameWithType: EventStore.Core.Services.Transport.Http.Controllers
  fullName: EventStore.Core.Services.Transport.Http.Controllers
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.AsyncState*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManager.AsyncState
  isExternal: false
  name: AsyncState
  nameWithType: HttpEntityManager.AsyncState
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.AsyncState
- uid: EventStore.Transport.Http.EntityManagement.HttpEntity
  commentId: T:EventStore.Transport.Http.EntityManagement.HttpEntity
  parent: EventStore.Transport.Http.EntityManagement
  isExternal: false
  name: HttpEntity
  nameWithType: HttpEntity
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntity
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.IsProcessing*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManager.IsProcessing
  isExternal: false
  name: IsProcessing
  nameWithType: HttpEntityManager.IsProcessing
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.IsProcessing
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.RequestCodec*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManager.RequestCodec
  isExternal: false
  name: RequestCodec
  nameWithType: HttpEntityManager.RequestCodec
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.RequestCodec
- uid: EventStore.Transport.Http.ICodec
  commentId: T:EventStore.Transport.Http.ICodec
  parent: EventStore.Transport.Http
  isExternal: false
  name: ICodec
  nameWithType: ICodec
  fullName: EventStore.Transport.Http.ICodec
- uid: EventStore.Transport.Http
  commentId: N:EventStore.Transport.Http
  isExternal: false
  name: EventStore.Transport.Http
  nameWithType: EventStore.Transport.Http
  fullName: EventStore.Transport.Http
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ResponseCodec*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManager.ResponseCodec
  isExternal: false
  name: ResponseCodec
  nameWithType: HttpEntityManager.ResponseCodec
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ResponseCodec
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.RequestedUrl*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManager.RequestedUrl
  isExternal: false
  name: RequestedUrl
  nameWithType: HttpEntityManager.RequestedUrl
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.RequestedUrl
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.User*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManager.User
  isExternal: false
  name: User
  nameWithType: HttpEntityManager.User
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.User
- uid: IPrincipal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: IPrincipal
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ReadRequestAsync*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManager.ReadRequestAsync
  isExternal: false
  name: ReadRequestAsync
  nameWithType: HttpEntityManager.ReadRequestAsync
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ReadRequestAsync
- uid: Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[]}
  commentId: '!:Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[]}'
  definition: Action`2
  name: Action<HttpEntityManager, Byte[]>
  nameWithType: Action<HttpEntityManager, Byte[]>
  fullName: Action<EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Byte[]>
  nameWithType.vb: Action(Of HttpEntityManager, Byte())
  fullName.vb: Action(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Byte())
  name.vb: Action(Of HttpEntityManager, Byte())
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Action{Exception}
  commentId: '!:Action{Exception}'
  definition: Action`1
  name: Action<Exception>
  nameWithType: Action<Exception>
  fullName: Action<Exception>
  nameWithType.vb: Action(Of Exception)
  fullName.vb: Action(Of Exception)
  name.vb: Action(Of Exception)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`2
  isExternal: true
  name: Action<, >
  nameWithType: Action<, >
  fullName: Action<, >
  nameWithType.vb: Action(Of , )
  fullName.vb: Action(Of , )
  name.vb: Action(Of , )
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.BeginReply*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManager.BeginReply
  isExternal: false
  name: BeginReply
  nameWithType: HttpEntityManager.BeginReply
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.BeginReply
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Encoding
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: Encoding
- uid: IEnumerable{KeyValuePair{System.String,System.String}}
  commentId: '!:IEnumerable{KeyValuePair{System.String,System.String}}'
  definition: IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: IEnumerable<KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: IEnumerable(Of KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ContinueReply*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManager.ContinueReply
  isExternal: false
  name: ContinueReply
  nameWithType: HttpEntityManager.ContinueReply
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ContinueReply
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Action
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: Action
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.EndReply*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManager.EndReply
  isExternal: false
  name: EndReply
  nameWithType: HttpEntityManager.EndReply
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.EndReply
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.Reply*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManager.Reply
  isExternal: false
  name: Reply
  nameWithType: HttpEntityManager.Reply
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.Reply
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ForwardReply*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManager.ForwardReply
  isExternal: false
  name: ForwardReply
  nameWithType: HttpEntityManager.ForwardReply
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.ForwardReply
- uid: HttpResponseMessage
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: HttpResponseMessage
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager.CompressResponse*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManager.CompressResponse
  isExternal: false
  name: CompressResponse
  nameWithType: HttpEntityManager.CompressResponse
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager.CompressResponse

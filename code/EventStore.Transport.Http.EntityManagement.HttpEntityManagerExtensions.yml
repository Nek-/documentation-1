### YamlMime:ManagedReference
items:
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  commentId: T:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  id: HttpEntityManagerExtensions
  parent: EventStore.Transport.Http.EntityManagement
  children:
  - EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,Action{Exception},Action)
  - EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager,Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},Action{Exception})
  - EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[],System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  - EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Int32,System.String,Action{Exception},IEnumerable{KeyValuePair{System.String,System.String}})
  - EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  langs:
  - csharp
  - vb
  name: HttpEntityManagerExtensions
  nameWithType: HttpEntityManagerExtensions
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  type: Class
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: HttpEntityManagerExtensions
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
    startLine: 6
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: 'public static class HttpEntityManagerExtensions : object'
    content.vb: >-
      Public Module HttpEntityManagerExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Int32,System.String,Action{Exception},IEnumerable{KeyValuePair{System.String,System.String}})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Int32,System.String,Action{Exception},IEnumerable{KeyValuePair{System.String,System.String}})
  id: ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Int32,System.String,Action{Exception},IEnumerable{KeyValuePair{System.String,System.String}})
  isExtensionMethod: true
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  langs:
  - csharp
  - vb
  name: ReplyStatus(HttpEntityManager, Int32, String, Action<Exception>, IEnumerable<KeyValuePair<String, String>>)
  nameWithType: HttpEntityManagerExtensions.ReplyStatus(HttpEntityManager, Int32, String, Action<Exception>, IEnumerable<KeyValuePair<String, String>>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Int32, System.String, Action<Exception>, IEnumerable<KeyValuePair<System.String, System.String>>)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReplyStatus
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
    startLine: 8
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public static void ReplyStatus(this HttpEntityManager self, int code, string description, Action<Exception> onError, IEnumerable<KeyValuePair<string, string>> headers = null)
    parameters:
    - id: self
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    - id: code
      type: System.Int32
    - id: description
      type: System.String
    - id: onError
      type: Action{Exception}
    - id: headers
      type: IEnumerable{KeyValuePair{System.String,System.String}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ReplyStatus(self As HttpEntityManager, code As Integer, description As String, onError As Action(Of Exception), headers As IEnumerable(Of KeyValuePair(Of String, String)) = Nothing)
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus*
  nameWithType.vb: HttpEntityManagerExtensions.ReplyStatus(HttpEntityManager, Int32, String, Action(Of Exception), IEnumerable(Of KeyValuePair(Of String, String)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Int32, System.String, Action(Of Exception), IEnumerable(Of KeyValuePair(Of System.String, System.String)))
  name.vb: ReplyStatus(HttpEntityManager, Int32, String, Action(Of Exception), IEnumerable(Of KeyValuePair(Of String, String)))
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[],System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[],System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  id: ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.Byte[],System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  isExtensionMethod: true
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  langs:
  - csharp
  - vb
  name: ReplyContent(HttpEntityManager, Byte[], Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  nameWithType: HttpEntityManagerExtensions.ReplyContent(HttpEntityManager, Byte[], Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Byte[], System.Int32, System.String, System.String, IEnumerable<KeyValuePair<System.String, System.String>>, Action<Exception>)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReplyContent
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
    startLine: 13
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public static void ReplyContent(this HttpEntityManager self, byte[] response, int code, string description, string type, IEnumerable<KeyValuePair<string, string>> headers, Action<Exception> onError)
    parameters:
    - id: self
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    - id: response
      type: System.Byte[]
    - id: code
      type: System.Int32
    - id: description
      type: System.String
    - id: type
      type: System.String
    - id: headers
      type: IEnumerable{KeyValuePair{System.String,System.String}}
    - id: onError
      type: Action{Exception}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ReplyContent(self As HttpEntityManager, response As Byte(), code As Integer, description As String, type As String, headers As IEnumerable(Of KeyValuePair(Of String, String)), onError As Action(Of Exception))
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent*
  nameWithType.vb: HttpEntityManagerExtensions.ReplyContent(HttpEntityManager, Byte(), Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.Byte(), System.Int32, System.String, System.String, IEnumerable(Of KeyValuePair(Of System.String, System.String)), Action(Of Exception))
  name.vb: ReplyContent(HttpEntityManager, Byte(), Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  id: ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,System.Int32,System.String,System.String,IEnumerable{KeyValuePair{System.String,System.String}},Action{Exception})
  isExtensionMethod: true
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  langs:
  - csharp
  - vb
  name: ReplyTextContent(HttpEntityManager, String, Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  nameWithType: HttpEntityManagerExtensions.ReplyTextContent(HttpEntityManager, String, Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String, System.Int32, System.String, System.String, IEnumerable<KeyValuePair<System.String, System.String>>, Action<Exception>)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReplyTextContent
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
    startLine: 24
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public static void ReplyTextContent(this HttpEntityManager self, string response, int code, string description, string type, IEnumerable<KeyValuePair<string, string>> headers, Action<Exception> onError)
    parameters:
    - id: self
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    - id: response
      type: System.String
    - id: code
      type: System.Int32
    - id: description
      type: System.String
    - id: type
      type: System.String
    - id: headers
      type: IEnumerable{KeyValuePair{System.String,System.String}}
    - id: onError
      type: Action{Exception}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ReplyTextContent(self As HttpEntityManager, response As String, code As Integer, description As String, type As String, headers As IEnumerable(Of KeyValuePair(Of String, String)), onError As Action(Of Exception))
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent*
  nameWithType.vb: HttpEntityManagerExtensions.ReplyTextContent(HttpEntityManager, String, Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String, System.Int32, System.String, System.String, IEnumerable(Of KeyValuePair(Of System.String, System.String)), Action(Of Exception))
  name.vb: ReplyTextContent(HttpEntityManager, String, Int32, String, String, IEnumerable(Of KeyValuePair(Of String, String)), Action(Of Exception))
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,Action{Exception},Action)
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,Action{Exception},Action)
  id: ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String,Action{Exception},Action)
  isExtensionMethod: true
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  langs:
  - csharp
  - vb
  name: ContinueReplyTextContent(HttpEntityManager, String, Action<Exception>, Action)
  nameWithType: HttpEntityManagerExtensions.ContinueReplyTextContent(HttpEntityManager, String, Action<Exception>, Action)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String, Action<Exception>, Action)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ContinueReplyTextContent
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
    startLine: 36
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public static void ContinueReplyTextContent(this HttpEntityManager self, string response, Action<Exception> onError, Action completed)
    parameters:
    - id: self
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    - id: response
      type: System.String
    - id: onError
      type: Action{Exception}
    - id: completed
      type: Action
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ContinueReplyTextContent(self As HttpEntityManager, response As String, onError As Action(Of Exception), completed As Action)
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent*
  nameWithType.vb: HttpEntityManagerExtensions.ContinueReplyTextContent(HttpEntityManager, String, Action(Of Exception), Action)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent(EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String, Action(Of Exception), Action)
  name.vb: ContinueReplyTextContent(HttpEntityManager, String, Action(Of Exception), Action)
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager,Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},Action{Exception})
  commentId: M:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager,Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},Action{Exception})
  id: ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager,Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String},Action{Exception})
  isExtensionMethod: true
  parent: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions
  langs:
  - csharp
  - vb
  name: ReadTextRequestAsync(HttpEntityManager, Action<HttpEntityManager, String>, Action<Exception>)
  nameWithType: HttpEntityManagerExtensions.ReadTextRequestAsync(HttpEntityManager, Action<HttpEntityManager, String>, Action<Exception>)
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager, Action<EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String>, Action<Exception>)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ReadTextRequestAsync
    path: ../EventStore/src/EventStore.Transport.Http/EntityManagement/HttpEntityManagerExtensions.cs
    startLine: 44
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http.EntityManagement
  syntax:
    content: public static void ReadTextRequestAsync(this HttpEntityManager self, Action<HttpEntityManager, string> onSuccess, Action<Exception> onError)
    parameters:
    - id: self
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    - id: onSuccess
      type: Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String}
    - id: onError
      type: Action{Exception}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ReadTextRequestAsync(self As HttpEntityManager, onSuccess As Action(Of HttpEntityManager, String), onError As Action(Of Exception))
  overload: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync*
  nameWithType.vb: HttpEntityManagerExtensions.ReadTextRequestAsync(HttpEntityManager, Action(Of HttpEntityManager, String), Action(Of Exception))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync(EventStore.Transport.Http.EntityManagement.HttpEntityManager, Action(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String), Action(Of Exception))
  name.vb: ReadTextRequestAsync(HttpEntityManager, Action(Of HttpEntityManager, String), Action(Of Exception))
references:
- uid: EventStore.Transport.Http.EntityManagement
  commentId: N:EventStore.Transport.Http.EntityManagement
  isExternal: false
  name: EventStore.Transport.Http.EntityManagement
  nameWithType: EventStore.Transport.Http.EntityManagement
  fullName: EventStore.Transport.Http.EntityManagement
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus
  isExternal: false
  name: ReplyStatus
  nameWithType: HttpEntityManagerExtensions.ReplyStatus
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyStatus
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  commentId: T:EventStore.Transport.Http.EntityManagement.HttpEntityManager
  parent: EventStore.Transport.Http.EntityManagement
  isExternal: false
  name: HttpEntityManager
  nameWithType: HttpEntityManager
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Action{Exception}
  commentId: '!:Action{Exception}'
  definition: Action`1
  name: Action<Exception>
  nameWithType: Action<Exception>
  fullName: Action<Exception>
  nameWithType.vb: Action(Of Exception)
  fullName.vb: Action(Of Exception)
  name.vb: Action(Of Exception)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable{KeyValuePair{System.String,System.String}}
  commentId: '!:IEnumerable{KeyValuePair{System.String,System.String}}'
  definition: IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: IEnumerable<KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: IEnumerable(Of KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent
  isExternal: false
  name: ReplyContent
  nameWithType: HttpEntityManagerExtensions.ReplyContent
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyContent
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent
  isExternal: false
  name: ReplyTextContent
  nameWithType: HttpEntityManagerExtensions.ReplyTextContent
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReplyTextContent
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent
  isExternal: false
  name: ContinueReplyTextContent
  nameWithType: HttpEntityManagerExtensions.ContinueReplyTextContent
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ContinueReplyTextContent
- uid: Action
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: Action
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync*
  commentId: Overload:EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync
  isExternal: false
  name: ReadTextRequestAsync
  nameWithType: HttpEntityManagerExtensions.ReadTextRequestAsync
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.ReadTextRequestAsync
- uid: Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String}
  commentId: '!:Action{EventStore.Transport.Http.EntityManagement.HttpEntityManager,System.String}'
  definition: Action`2
  name: Action<HttpEntityManager, String>
  nameWithType: Action<HttpEntityManager, String>
  fullName: Action<EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String>
  nameWithType.vb: Action(Of HttpEntityManager, String)
  fullName.vb: Action(Of EventStore.Transport.Http.EntityManagement.HttpEntityManager, System.String)
  name.vb: Action(Of HttpEntityManager, String)
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`2
  isExternal: true
  name: Action<, >
  nameWithType: Action<, >
  fullName: Action<, >
  nameWithType.vb: Action(Of , )
  fullName.vb: Action(Of , )
  name.vb: Action(Of , )
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )

### YamlMime:ManagedReference
items:
- uid: EventStore.Transport.Http.HttpResponse
  commentId: T:EventStore.Transport.Http.HttpResponse
  id: HttpResponse
  parent: EventStore.Transport.Http
  children:
  - EventStore.Transport.Http.HttpResponse.#ctor(HttpResponseMessage)
  - EventStore.Transport.Http.HttpResponse.Body
  - EventStore.Transport.Http.HttpResponse.CharacterSet
  - EventStore.Transport.Http.HttpResponse.ContentEncoding
  - EventStore.Transport.Http.HttpResponse.ContentLength
  - EventStore.Transport.Http.HttpResponse.ContentType
  - EventStore.Transport.Http.HttpResponse.Headers
  - EventStore.Transport.Http.HttpResponse.HttpStatusCode
  - EventStore.Transport.Http.HttpResponse.Method
  - EventStore.Transport.Http.HttpResponse.StatusDescription
  langs:
  - csharp
  - vb
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: EventStore.Transport.Http.HttpResponse
  type: Class
  source:
    remote:
      path: src/EventStore.Transport.Http/HttpResponse.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: HttpResponse
    path: ../EventStore/src/EventStore.Transport.Http/HttpResponse.cs
    startLine: 6
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: 'public class HttpResponse : object'
    content.vb: >-
      Public Class HttpResponse
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Transport.Http.HttpResponse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Transport.Http.HttpResponse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Transport.Http.HttpResponse.CharacterSet
  commentId: P:EventStore.Transport.Http.HttpResponse.CharacterSet
  id: CharacterSet
  parent: EventStore.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: CharacterSet
  nameWithType: HttpResponse.CharacterSet
  fullName: EventStore.Transport.Http.HttpResponse.CharacterSet
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/HttpResponse.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: CharacterSet
    path: ../EventStore/src/EventStore.Transport.Http/HttpResponse.cs
    startLine: 8
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public string CharacterSet { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property CharacterSet As String
  overload: EventStore.Transport.Http.HttpResponse.CharacterSet*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.HttpResponse.ContentEncoding
  commentId: P:EventStore.Transport.Http.HttpResponse.ContentEncoding
  id: ContentEncoding
  parent: EventStore.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: ContentEncoding
  nameWithType: HttpResponse.ContentEncoding
  fullName: EventStore.Transport.Http.HttpResponse.ContentEncoding
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/HttpResponse.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ContentEncoding
    path: ../EventStore/src/EventStore.Transport.Http/HttpResponse.cs
    startLine: 10
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public string ContentEncoding { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ContentEncoding As String
  overload: EventStore.Transport.Http.HttpResponse.ContentEncoding*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.HttpResponse.ContentLength
  commentId: P:EventStore.Transport.Http.HttpResponse.ContentLength
  id: ContentLength
  parent: EventStore.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: ContentLength
  nameWithType: HttpResponse.ContentLength
  fullName: EventStore.Transport.Http.HttpResponse.ContentLength
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/HttpResponse.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ContentLength
    path: ../EventStore/src/EventStore.Transport.Http/HttpResponse.cs
    startLine: 11
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public long ContentLength { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property ContentLength As Long
  overload: EventStore.Transport.Http.HttpResponse.ContentLength*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.HttpResponse.ContentType
  commentId: P:EventStore.Transport.Http.HttpResponse.ContentType
  id: ContentType
  parent: EventStore.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: HttpResponse.ContentType
  fullName: EventStore.Transport.Http.HttpResponse.ContentType
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/HttpResponse.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: ContentType
    path: ../EventStore/src/EventStore.Transport.Http/HttpResponse.cs
    startLine: 12
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public string ContentType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ContentType As String
  overload: EventStore.Transport.Http.HttpResponse.ContentType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.HttpResponse.Headers
  commentId: P:EventStore.Transport.Http.HttpResponse.Headers
  id: Headers
  parent: EventStore.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: HttpResponse.Headers
  fullName: EventStore.Transport.Http.HttpResponse.Headers
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/HttpResponse.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Headers
    path: ../EventStore/src/EventStore.Transport.Http/HttpResponse.cs
    startLine: 15
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public HttpResponseHeaders Headers { get; }
    parameters: []
    return:
      type: HttpResponseHeaders
    content.vb: Public ReadOnly Property Headers As HttpResponseHeaders
  overload: EventStore.Transport.Http.HttpResponse.Headers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.HttpResponse.Method
  commentId: P:EventStore.Transport.Http.HttpResponse.Method
  id: Method
  parent: EventStore.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: HttpResponse.Method
  fullName: EventStore.Transport.Http.HttpResponse.Method
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/HttpResponse.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Method
    path: ../EventStore/src/EventStore.Transport.Http/HttpResponse.cs
    startLine: 21
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public string Method { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Method As String
  overload: EventStore.Transport.Http.HttpResponse.Method*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.HttpResponse.HttpStatusCode
  commentId: P:EventStore.Transport.Http.HttpResponse.HttpStatusCode
  id: HttpStatusCode
  parent: EventStore.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: HttpStatusCode
  nameWithType: HttpResponse.HttpStatusCode
  fullName: EventStore.Transport.Http.HttpResponse.HttpStatusCode
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/HttpResponse.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: HttpStatusCode
    path: ../EventStore/src/EventStore.Transport.Http/HttpResponse.cs
    startLine: 27
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public int HttpStatusCode { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property HttpStatusCode As Integer
  overload: EventStore.Transport.Http.HttpResponse.HttpStatusCode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.HttpResponse.StatusDescription
  commentId: P:EventStore.Transport.Http.HttpResponse.StatusDescription
  id: StatusDescription
  parent: EventStore.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: StatusDescription
  nameWithType: HttpResponse.StatusDescription
  fullName: EventStore.Transport.Http.HttpResponse.StatusDescription
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/HttpResponse.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: StatusDescription
    path: ../EventStore/src/EventStore.Transport.Http/HttpResponse.cs
    startLine: 28
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public string StatusDescription { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property StatusDescription As String
  overload: EventStore.Transport.Http.HttpResponse.StatusDescription*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.HttpResponse.Body
  commentId: P:EventStore.Transport.Http.HttpResponse.Body
  id: Body
  parent: EventStore.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: Body
  nameWithType: HttpResponse.Body
  fullName: EventStore.Transport.Http.HttpResponse.Body
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/HttpResponse.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: Body
    path: ../EventStore/src/EventStore.Transport.Http/HttpResponse.cs
    startLine: 30
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public string Body { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Body As String
  overload: EventStore.Transport.Http.HttpResponse.Body*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Transport.Http.HttpResponse.#ctor(HttpResponseMessage)
  commentId: M:EventStore.Transport.Http.HttpResponse.#ctor(HttpResponseMessage)
  id: '#ctor(HttpResponseMessage)'
  parent: EventStore.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: HttpResponse(HttpResponseMessage)
  nameWithType: HttpResponse.HttpResponse(HttpResponseMessage)
  fullName: EventStore.Transport.Http.HttpResponse.HttpResponse(HttpResponseMessage)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Transport.Http/HttpResponse.cs
      branch: release-v4.1.1
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Transport.Http/HttpResponse.cs
    startLine: 32
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public HttpResponse(HttpResponseMessage responseMessage)
    parameters:
    - id: responseMessage
      type: HttpResponseMessage
    content.vb: Public Sub New(responseMessage As HttpResponseMessage)
  overload: EventStore.Transport.Http.HttpResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Transport.Http
  commentId: N:EventStore.Transport.Http
  isExternal: false
  name: EventStore.Transport.Http
  nameWithType: EventStore.Transport.Http
  fullName: EventStore.Transport.Http
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.HttpResponse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<HttpResponse>()
  nameWithType: ProtobufExtensions.Serialize<HttpResponse>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.HttpResponse>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of HttpResponse)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.HttpResponse)()
  name.vb: Serialize(Of HttpResponse)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<HttpResponse>
    nameWithType: ProtobufExtensions.Serialize<HttpResponse>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.HttpResponse>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of HttpResponse)
    nameWithType: ProtobufExtensions.Serialize(Of HttpResponse)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.HttpResponse)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.HttpResponse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<HttpResponse>()
  nameWithType: ProtobufExtensions.SerializeToArray<HttpResponse>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.HttpResponse>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of HttpResponse)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.HttpResponse)()
  name.vb: SerializeToArray(Of HttpResponse)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<HttpResponse>
    nameWithType: ProtobufExtensions.SerializeToArray<HttpResponse>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.HttpResponse>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of HttpResponse)
    nameWithType: ProtobufExtensions.SerializeToArray(Of HttpResponse)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.HttpResponse)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Transport.Http.HttpResponse.CharacterSet*
  commentId: Overload:EventStore.Transport.Http.HttpResponse.CharacterSet
  isExternal: false
  name: CharacterSet
  nameWithType: HttpResponse.CharacterSet
  fullName: EventStore.Transport.Http.HttpResponse.CharacterSet
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Transport.Http.HttpResponse.ContentEncoding*
  commentId: Overload:EventStore.Transport.Http.HttpResponse.ContentEncoding
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpResponse.ContentEncoding
  fullName: EventStore.Transport.Http.HttpResponse.ContentEncoding
- uid: EventStore.Transport.Http.HttpResponse.ContentLength*
  commentId: Overload:EventStore.Transport.Http.HttpResponse.ContentLength
  isExternal: false
  name: ContentLength
  nameWithType: HttpResponse.ContentLength
  fullName: EventStore.Transport.Http.HttpResponse.ContentLength
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Transport.Http.HttpResponse.ContentType*
  commentId: Overload:EventStore.Transport.Http.HttpResponse.ContentType
  isExternal: false
  name: ContentType
  nameWithType: HttpResponse.ContentType
  fullName: EventStore.Transport.Http.HttpResponse.ContentType
- uid: EventStore.Transport.Http.HttpResponse.Headers*
  commentId: Overload:EventStore.Transport.Http.HttpResponse.Headers
  isExternal: false
  name: Headers
  nameWithType: HttpResponse.Headers
  fullName: EventStore.Transport.Http.HttpResponse.Headers
- uid: HttpResponseHeaders
  commentId: '!:HttpResponseHeaders'
  isExternal: true
  name: HttpResponseHeaders
  nameWithType: HttpResponseHeaders
  fullName: HttpResponseHeaders
- uid: EventStore.Transport.Http.HttpResponse.Method*
  commentId: Overload:EventStore.Transport.Http.HttpResponse.Method
  isExternal: false
  name: Method
  nameWithType: HttpResponse.Method
  fullName: EventStore.Transport.Http.HttpResponse.Method
- uid: EventStore.Transport.Http.HttpResponse.HttpStatusCode*
  commentId: Overload:EventStore.Transport.Http.HttpResponse.HttpStatusCode
  isExternal: false
  name: HttpStatusCode
  nameWithType: HttpResponse.HttpStatusCode
  fullName: EventStore.Transport.Http.HttpResponse.HttpStatusCode
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Transport.Http.HttpResponse.StatusDescription*
  commentId: Overload:EventStore.Transport.Http.HttpResponse.StatusDescription
  isExternal: false
  name: StatusDescription
  nameWithType: HttpResponse.StatusDescription
  fullName: EventStore.Transport.Http.HttpResponse.StatusDescription
- uid: EventStore.Transport.Http.HttpResponse.Body*
  commentId: Overload:EventStore.Transport.Http.HttpResponse.Body
  isExternal: false
  name: Body
  nameWithType: HttpResponse.Body
  fullName: EventStore.Transport.Http.HttpResponse.Body
- uid: EventStore.Transport.Http.HttpResponse.#ctor*
  commentId: Overload:EventStore.Transport.Http.HttpResponse.#ctor
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse.HttpResponse
  fullName: EventStore.Transport.Http.HttpResponse.HttpResponse
- uid: HttpResponseMessage
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: HttpResponseMessage

### YamlMime:ManagedReference
items:
- uid: EventStore.Transport.Http.ICodec
  commentId: T:EventStore.Transport.Http.ICodec
  id: ICodec
  parent: EventStore.Transport.Http
  children:
  - EventStore.Transport.Http.ICodec.CanParse(EventStore.Transport.Http.MediaType)
  - EventStore.Transport.Http.ICodec.ContentType
  - EventStore.Transport.Http.ICodec.Encoding
  - EventStore.Transport.Http.ICodec.From``1(System.String)
  - EventStore.Transport.Http.ICodec.HasEventIds
  - EventStore.Transport.Http.ICodec.HasEventTypes
  - EventStore.Transport.Http.ICodec.SuitableForResponse(EventStore.Transport.Http.MediaType)
  - EventStore.Transport.Http.ICodec.To``1(``0)
  langs:
  - csharp
  - vb
  name: ICodec
  nameWithType: ICodec
  fullName: EventStore.Transport.Http.ICodec
  type: Interface
  source:
    remote:
      path: src/EventStore.Transport.Http/ICodec.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ICodec
    path: ../EventStore/src/EventStore.Transport.Http/ICodec.cs
    startLine: 4
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: public interface ICodec
    content.vb: Public Interface ICodec
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Transport.Http.ICodec.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Transport.Http.ICodec.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Transport.Http.ICodec.ContentType
  commentId: P:EventStore.Transport.Http.ICodec.ContentType
  id: ContentType
  parent: EventStore.Transport.Http.ICodec
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: ICodec.ContentType
  fullName: EventStore.Transport.Http.ICodec.ContentType
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/ICodec.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: ContentType
    path: ../EventStore/src/EventStore.Transport.Http/ICodec.cs
    startLine: 6
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: string ContentType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ContentType As String
  overload: EventStore.Transport.Http.ICodec.ContentType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Transport.Http.ICodec.Encoding
  commentId: P:EventStore.Transport.Http.ICodec.Encoding
  id: Encoding
  parent: EventStore.Transport.Http.ICodec
  langs:
  - csharp
  - vb
  name: Encoding
  nameWithType: ICodec.Encoding
  fullName: EventStore.Transport.Http.ICodec.Encoding
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/ICodec.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: Encoding
    path: ../EventStore/src/EventStore.Transport.Http/ICodec.cs
    startLine: 7
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: Encoding Encoding { get; }
    parameters: []
    return:
      type: Encoding
    content.vb: ReadOnly Property Encoding As Encoding
  overload: EventStore.Transport.Http.ICodec.Encoding*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Transport.Http.ICodec.CanParse(EventStore.Transport.Http.MediaType)
  commentId: M:EventStore.Transport.Http.ICodec.CanParse(EventStore.Transport.Http.MediaType)
  id: CanParse(EventStore.Transport.Http.MediaType)
  parent: EventStore.Transport.Http.ICodec
  langs:
  - csharp
  - vb
  name: CanParse(MediaType)
  nameWithType: ICodec.CanParse(MediaType)
  fullName: EventStore.Transport.Http.ICodec.CanParse(EventStore.Transport.Http.MediaType)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/ICodec.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: CanParse
    path: ../EventStore/src/EventStore.Transport.Http/ICodec.cs
    startLine: 8
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: bool CanParse(MediaType format)
    parameters:
    - id: format
      type: EventStore.Transport.Http.MediaType
    return:
      type: System.Boolean
    content.vb: Function CanParse(format As MediaType) As Boolean
  overload: EventStore.Transport.Http.ICodec.CanParse*
- uid: EventStore.Transport.Http.ICodec.SuitableForResponse(EventStore.Transport.Http.MediaType)
  commentId: M:EventStore.Transport.Http.ICodec.SuitableForResponse(EventStore.Transport.Http.MediaType)
  id: SuitableForResponse(EventStore.Transport.Http.MediaType)
  parent: EventStore.Transport.Http.ICodec
  langs:
  - csharp
  - vb
  name: SuitableForResponse(MediaType)
  nameWithType: ICodec.SuitableForResponse(MediaType)
  fullName: EventStore.Transport.Http.ICodec.SuitableForResponse(EventStore.Transport.Http.MediaType)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/ICodec.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: SuitableForResponse
    path: ../EventStore/src/EventStore.Transport.Http/ICodec.cs
    startLine: 9
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: bool SuitableForResponse(MediaType component)
    parameters:
    - id: component
      type: EventStore.Transport.Http.MediaType
    return:
      type: System.Boolean
    content.vb: Function SuitableForResponse(component As MediaType) As Boolean
  overload: EventStore.Transport.Http.ICodec.SuitableForResponse*
- uid: EventStore.Transport.Http.ICodec.HasEventIds
  commentId: P:EventStore.Transport.Http.ICodec.HasEventIds
  id: HasEventIds
  parent: EventStore.Transport.Http.ICodec
  langs:
  - csharp
  - vb
  name: HasEventIds
  nameWithType: ICodec.HasEventIds
  fullName: EventStore.Transport.Http.ICodec.HasEventIds
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/ICodec.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HasEventIds
    path: ../EventStore/src/EventStore.Transport.Http/ICodec.cs
    startLine: 10
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: bool HasEventIds { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property HasEventIds As Boolean
  overload: EventStore.Transport.Http.ICodec.HasEventIds*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Transport.Http.ICodec.HasEventTypes
  commentId: P:EventStore.Transport.Http.ICodec.HasEventTypes
  id: HasEventTypes
  parent: EventStore.Transport.Http.ICodec
  langs:
  - csharp
  - vb
  name: HasEventTypes
  nameWithType: ICodec.HasEventTypes
  fullName: EventStore.Transport.Http.ICodec.HasEventTypes
  type: Property
  source:
    remote:
      path: src/EventStore.Transport.Http/ICodec.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: HasEventTypes
    path: ../EventStore/src/EventStore.Transport.Http/ICodec.cs
    startLine: 11
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: bool HasEventTypes { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property HasEventTypes As Boolean
  overload: EventStore.Transport.Http.ICodec.HasEventTypes*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Transport.Http.ICodec.From``1(System.String)
  commentId: M:EventStore.Transport.Http.ICodec.From``1(System.String)
  id: From``1(System.String)
  parent: EventStore.Transport.Http.ICodec
  langs:
  - csharp
  - vb
  name: From<T>(String)
  nameWithType: ICodec.From<T>(String)
  fullName: EventStore.Transport.Http.ICodec.From<T>(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/ICodec.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: From
    path: ../EventStore/src/EventStore.Transport.Http/ICodec.cs
    startLine: 12
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: T From<T>(string text)
    parameters:
    - id: text
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Function From(Of T)(text As String) As T
  overload: EventStore.Transport.Http.ICodec.From*
  nameWithType.vb: ICodec.From(Of T)(String)
  fullName.vb: EventStore.Transport.Http.ICodec.From(Of T)(System.String)
  name.vb: From(Of T)(String)
- uid: EventStore.Transport.Http.ICodec.To``1(``0)
  commentId: M:EventStore.Transport.Http.ICodec.To``1(``0)
  id: To``1(``0)
  parent: EventStore.Transport.Http.ICodec
  langs:
  - csharp
  - vb
  name: To<T>(T)
  nameWithType: ICodec.To<T>(T)
  fullName: EventStore.Transport.Http.ICodec.To<T>(T)
  type: Method
  source:
    remote:
      path: src/EventStore.Transport.Http/ICodec.cs
      branch: docs
      repo: https://github.com/ChrisChinchilla/EventStore.git
    id: To
    path: ../EventStore/src/EventStore.Transport.Http/ICodec.cs
    startLine: 13
  assemblies:
  - EventStore.Transport.Http
  namespace: EventStore.Transport.Http
  syntax:
    content: string To<T>(T value)
    parameters:
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.String
    content.vb: Function To(Of T)(value As T) As String
  overload: EventStore.Transport.Http.ICodec.To*
  nameWithType.vb: ICodec.To(Of T)(T)
  fullName.vb: EventStore.Transport.Http.ICodec.To(Of T)(T)
  name.vb: To(Of T)(T)
references:
- uid: EventStore.Transport.Http
  commentId: N:EventStore.Transport.Http
  isExternal: false
  name: EventStore.Transport.Http
  nameWithType: EventStore.Transport.Http
  fullName: EventStore.Transport.Http
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.ICodec.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ICodec>()
  nameWithType: ProtobufExtensions.Serialize<ICodec>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.ICodec>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ICodec)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.ICodec)()
  name.vb: Serialize(Of ICodec)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ICodec>
    nameWithType: ProtobufExtensions.Serialize<ICodec>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Http.ICodec>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ICodec)
    nameWithType: ProtobufExtensions.Serialize(Of ICodec)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Http.ICodec)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.ICodec.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ICodec>()
  nameWithType: ProtobufExtensions.SerializeToArray<ICodec>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.ICodec>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ICodec)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.ICodec)()
  name.vb: SerializeToArray(Of ICodec)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ICodec>
    nameWithType: ProtobufExtensions.SerializeToArray<ICodec>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Http.ICodec>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ICodec)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ICodec)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Http.ICodec)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  isExternal: false
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  isExternal: false
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  isExternal: false
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  isExternal: false
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Transport.Http.ICodec.ContentType*
  commentId: Overload:EventStore.Transport.Http.ICodec.ContentType
  isExternal: false
  name: ContentType
  nameWithType: ICodec.ContentType
  fullName: EventStore.Transport.Http.ICodec.ContentType
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Transport.Http.ICodec.Encoding*
  commentId: Overload:EventStore.Transport.Http.ICodec.Encoding
  isExternal: false
  name: Encoding
  nameWithType: ICodec.Encoding
  fullName: EventStore.Transport.Http.ICodec.Encoding
- uid: Encoding
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: Encoding
- uid: EventStore.Transport.Http.ICodec.CanParse*
  commentId: Overload:EventStore.Transport.Http.ICodec.CanParse
  isExternal: false
  name: CanParse
  nameWithType: ICodec.CanParse
  fullName: EventStore.Transport.Http.ICodec.CanParse
- uid: EventStore.Transport.Http.MediaType
  commentId: T:EventStore.Transport.Http.MediaType
  parent: EventStore.Transport.Http
  isExternal: false
  name: MediaType
  nameWithType: MediaType
  fullName: EventStore.Transport.Http.MediaType
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Transport.Http.ICodec.SuitableForResponse*
  commentId: Overload:EventStore.Transport.Http.ICodec.SuitableForResponse
  isExternal: false
  name: SuitableForResponse
  nameWithType: ICodec.SuitableForResponse
  fullName: EventStore.Transport.Http.ICodec.SuitableForResponse
- uid: EventStore.Transport.Http.ICodec.HasEventIds*
  commentId: Overload:EventStore.Transport.Http.ICodec.HasEventIds
  isExternal: false
  name: HasEventIds
  nameWithType: ICodec.HasEventIds
  fullName: EventStore.Transport.Http.ICodec.HasEventIds
- uid: EventStore.Transport.Http.ICodec.HasEventTypes*
  commentId: Overload:EventStore.Transport.Http.ICodec.HasEventTypes
  isExternal: false
  name: HasEventTypes
  nameWithType: ICodec.HasEventTypes
  fullName: EventStore.Transport.Http.ICodec.HasEventTypes
- uid: EventStore.Transport.Http.ICodec.From*
  commentId: Overload:EventStore.Transport.Http.ICodec.From
  isExternal: false
  name: From
  nameWithType: ICodec.From
  fullName: EventStore.Transport.Http.ICodec.From
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: EventStore.Transport.Http.ICodec.To*
  commentId: Overload:EventStore.Transport.Http.ICodec.To
  isExternal: false
  name: To
  nameWithType: ICodec.To
  fullName: EventStore.Transport.Http.ICodec.To

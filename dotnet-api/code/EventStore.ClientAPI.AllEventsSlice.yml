### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.AllEventsSlice
  commentId: T:EventStore.ClientAPI.AllEventsSlice
  id: AllEventsSlice
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.AllEventsSlice.Events
  - EventStore.ClientAPI.AllEventsSlice.FromPosition
  - EventStore.ClientAPI.AllEventsSlice.IsEndOfStream
  - EventStore.ClientAPI.AllEventsSlice.NextPosition
  - EventStore.ClientAPI.AllEventsSlice.ReadDirection
  langs:
  - csharp
  - vb
  name: AllEventsSlice
  nameWithType: AllEventsSlice
  fullName: EventStore.ClientAPI.AllEventsSlice
  type: Class
  source:
    id: AllEventsSlice
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/AllEventsSlice.cs
    startLine: 7
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe result of a read operation from the $all stream.\n"
  example: []
  syntax:
    content: 'public class AllEventsSlice : object'
    content.vb: >-
      Public Class AllEventsSlice
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.AllEventsSlice.ReadDirection
  commentId: F:EventStore.ClientAPI.AllEventsSlice.ReadDirection
  id: ReadDirection
  parent: EventStore.ClientAPI.AllEventsSlice
  langs:
  - csharp
  - vb
  name: ReadDirection
  nameWithType: AllEventsSlice.ReadDirection
  fullName: EventStore.ClientAPI.AllEventsSlice.ReadDirection
  type: Field
  source:
    id: ReadDirection
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/AllEventsSlice.cs
    startLine: 11
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe direction of read request.\n"
  example: []
  syntax:
    content: public readonly ReadDirection ReadDirection
    return:
      type: EventStore.ClientAPI.ReadDirection
    content.vb: Public ReadOnly ReadDirection As ReadDirection
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.AllEventsSlice.FromPosition
  commentId: F:EventStore.ClientAPI.AllEventsSlice.FromPosition
  id: FromPosition
  parent: EventStore.ClientAPI.AllEventsSlice
  langs:
  - csharp
  - vb
  name: FromPosition
  nameWithType: AllEventsSlice.FromPosition
  fullName: EventStore.ClientAPI.AllEventsSlice.FromPosition
  type: Field
  source:
    id: FromPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/AllEventsSlice.cs
    startLine: 16
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nA <xref href=\"EventStore.ClientAPI.Position\" data-throw-if-not-resolved=\"false\"></xref> representing the position where this slice was read from.\n"
  example: []
  syntax:
    content: public readonly Position FromPosition
    return:
      type: EventStore.ClientAPI.Position
    content.vb: Public ReadOnly FromPosition As Position
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.AllEventsSlice.NextPosition
  commentId: F:EventStore.ClientAPI.AllEventsSlice.NextPosition
  id: NextPosition
  parent: EventStore.ClientAPI.AllEventsSlice
  langs:
  - csharp
  - vb
  name: NextPosition
  nameWithType: AllEventsSlice.NextPosition
  fullName: EventStore.ClientAPI.AllEventsSlice.NextPosition
  type: Field
  source:
    id: NextPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/AllEventsSlice.cs
    startLine: 21
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nA <xref href=\"EventStore.ClientAPI.Position\" data-throw-if-not-resolved=\"false\"></xref> representing the position where the next slice should be read from.\n"
  example: []
  syntax:
    content: public readonly Position NextPosition
    return:
      type: EventStore.ClientAPI.Position
    content.vb: Public ReadOnly NextPosition As Position
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.AllEventsSlice.Events
  commentId: F:EventStore.ClientAPI.AllEventsSlice.Events
  id: Events
  parent: EventStore.ClientAPI.AllEventsSlice
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: AllEventsSlice.Events
  fullName: EventStore.ClientAPI.AllEventsSlice.Events
  type: Field
  source:
    id: Events
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/AllEventsSlice.cs
    startLine: 26
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe events read.\n"
  example: []
  syntax:
    content: public readonly ResolvedEvent[] Events
    return:
      type: EventStore.ClientAPI.ResolvedEvent[]
    content.vb: Public ReadOnly Events As ResolvedEvent()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.AllEventsSlice.IsEndOfStream
  commentId: P:EventStore.ClientAPI.AllEventsSlice.IsEndOfStream
  id: IsEndOfStream
  parent: EventStore.ClientAPI.AllEventsSlice
  langs:
  - csharp
  - vb
  name: IsEndOfStream
  nameWithType: AllEventsSlice.IsEndOfStream
  fullName: EventStore.ClientAPI.AllEventsSlice.IsEndOfStream
  type: Property
  source:
    id: IsEndOfStream
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/AllEventsSlice.cs
    startLine: 31
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nA boolean representing whether or not this is the end of the $all stream.\n"
  example: []
  syntax:
    content: public bool IsEndOfStream { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEndOfStream As Boolean
  overload: EventStore.ClientAPI.AllEventsSlice.IsEndOfStream*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.ClientAPI.ReadDirection
  commentId: T:EventStore.ClientAPI.ReadDirection
  parent: EventStore.ClientAPI
  name: ReadDirection
  nameWithType: ReadDirection
  fullName: EventStore.ClientAPI.ReadDirection
- uid: EventStore.ClientAPI.Position
  commentId: T:EventStore.ClientAPI.Position
  parent: EventStore.ClientAPI
  name: Position
  nameWithType: Position
  fullName: EventStore.ClientAPI.Position
- uid: EventStore.ClientAPI.ResolvedEvent[]
  isExternal: true
  name: ResolvedEvent[]
  nameWithType: ResolvedEvent[]
  fullName: EventStore.ClientAPI.ResolvedEvent[]
  nameWithType.vb: ResolvedEvent()
  fullName.vb: EventStore.ClientAPI.ResolvedEvent()
  name.vb: ResolvedEvent()
  spec.csharp:
  - uid: EventStore.ClientAPI.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.ClientAPI.ResolvedEvent
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.ClientAPI.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.ClientAPI.ResolvedEvent
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.ClientAPI.AllEventsSlice.IsEndOfStream*
  commentId: Overload:EventStore.ClientAPI.AllEventsSlice.IsEndOfStream
  name: IsEndOfStream
  nameWithType: AllEventsSlice.IsEndOfStream
  fullName: EventStore.ClientAPI.AllEventsSlice.IsEndOfStream
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean

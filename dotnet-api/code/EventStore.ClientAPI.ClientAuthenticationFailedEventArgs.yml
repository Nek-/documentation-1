### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs
  commentId: T:EventStore.ClientAPI.ClientAuthenticationFailedEventArgs
  id: ClientAuthenticationFailedEventArgs
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.#ctor(EventStore.ClientAPI.IEventStoreConnection,System.String)
  - EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.Connection
  - EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.Reason
  langs:
  - csharp
  - vb
  name: ClientAuthenticationFailedEventArgs
  nameWithType: ClientAuthenticationFailedEventArgs
  fullName: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs
  type: Class
  source:
    id: ClientAuthenticationFailedEventArgs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClientAuthenticationFailedEventArgs.cs
    startLine: 7
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nEvent Arguments for the event raised when an <xref href=\"EventStore.ClientAPI.IEventStoreConnection\" data-throw-if-not-resolved=\"false\"></xref> fails\nto authenticate against an Event Store server.\n"
  example: []
  syntax:
    content: 'public class ClientAuthenticationFailedEventArgs : EventArgs'
    content.vb: >-
      Public Class ClientAuthenticationFailedEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.Reason
  commentId: P:EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.Reason
  id: Reason
  parent: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: ClientAuthenticationFailedEventArgs.Reason
  fullName: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.Reason
  type: Property
  source:
    id: Reason
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClientAuthenticationFailedEventArgs.cs
    startLine: 11
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nA reason for authentication failure, if known.\n"
  example: []
  syntax:
    content: public string Reason { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Reason As String
  overload: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.Reason*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.Connection
  commentId: P:EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.Connection
  id: Connection
  parent: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: ClientAuthenticationFailedEventArgs.Connection
  fullName: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.Connection
  type: Property
  source:
    id: Connection
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClientAuthenticationFailedEventArgs.cs
    startLine: 16
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe <xref href=\"EventStore.ClientAPI.IEventStoreConnection\" data-throw-if-not-resolved=\"false\"></xref> responsible for raising the event.\n"
  example: []
  syntax:
    content: public IEventStoreConnection Connection { get; }
    parameters: []
    return:
      type: EventStore.ClientAPI.IEventStoreConnection
    content.vb: Public ReadOnly Property Connection As IEventStoreConnection
  overload: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.Connection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.#ctor(EventStore.ClientAPI.IEventStoreConnection,System.String)
  commentId: M:EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.#ctor(EventStore.ClientAPI.IEventStoreConnection,System.String)
  id: '#ctor(EventStore.ClientAPI.IEventStoreConnection,System.String)'
  parent: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs
  langs:
  - csharp
  - vb
  name: ClientAuthenticationFailedEventArgs(IEventStoreConnection, String)
  nameWithType: ClientAuthenticationFailedEventArgs.ClientAuthenticationFailedEventArgs(IEventStoreConnection, String)
  fullName: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.ClientAuthenticationFailedEventArgs(EventStore.ClientAPI.IEventStoreConnection, System.String)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClientAuthenticationFailedEventArgs.cs
    startLine: 23
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nConstructs a new instance of <xref href=\"EventStore.ClientAPI.ClientAuthenticationFailedEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ClientAuthenticationFailedEventArgs(IEventStoreConnection connection, string reason)
    parameters:
    - id: connection
      type: EventStore.ClientAPI.IEventStoreConnection
      description: The <xref href="EventStore.ClientAPI.IEventStoreConnection" data-throw-if-not-resolved="false"></xref> responsible for raising the event.
    - id: reason
      type: System.String
      description: A reason for authentication failure, if known.
    content.vb: Public Sub New(connection As IEventStoreConnection, reason As String)
  overload: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI.IEventStoreConnection
  commentId: T:EventStore.ClientAPI.IEventStoreConnection
  parent: EventStore.ClientAPI
  name: IEventStoreConnection
  nameWithType: IEventStoreConnection
  fullName: EventStore.ClientAPI.IEventStoreConnection
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.Reason*
  commentId: Overload:EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.Reason
  name: Reason
  nameWithType: ClientAuthenticationFailedEventArgs.Reason
  fullName: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.Reason
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.Connection*
  commentId: Overload:EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.Connection
  name: Connection
  nameWithType: ClientAuthenticationFailedEventArgs.Connection
  fullName: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.Connection
- uid: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs
  commentId: T:EventStore.ClientAPI.ClientAuthenticationFailedEventArgs
  name: ClientAuthenticationFailedEventArgs
  nameWithType: ClientAuthenticationFailedEventArgs
  fullName: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs
- uid: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.#ctor*
  commentId: Overload:EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.#ctor
  name: ClientAuthenticationFailedEventArgs
  nameWithType: ClientAuthenticationFailedEventArgs.ClientAuthenticationFailedEventArgs
  fullName: EventStore.ClientAPI.ClientAuthenticationFailedEventArgs.ClientAuthenticationFailedEventArgs

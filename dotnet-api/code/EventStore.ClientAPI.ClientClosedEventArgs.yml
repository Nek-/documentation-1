### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.ClientClosedEventArgs
  commentId: T:EventStore.ClientAPI.ClientClosedEventArgs
  id: ClientClosedEventArgs
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.ClientClosedEventArgs.#ctor(EventStore.ClientAPI.IEventStoreConnection,System.String)
  - EventStore.ClientAPI.ClientClosedEventArgs.Connection
  - EventStore.ClientAPI.ClientClosedEventArgs.Reason
  langs:
  - csharp
  - vb
  name: ClientClosedEventArgs
  nameWithType: ClientClosedEventArgs
  fullName: EventStore.ClientAPI.ClientClosedEventArgs
  type: Class
  source:
    id: ClientClosedEventArgs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClientClosedEventArgs.cs
    startLine: 7
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nEvent Arguments for the event raised when an <xref href=\"EventStore.ClientAPI.IEventStoreConnection\" data-throw-if-not-resolved=\"false\"></xref> is\ndisconnected from an Event Store server.\n"
  example: []
  syntax:
    content: 'public class ClientClosedEventArgs : EventArgs'
    content.vb: >-
      Public Class ClientClosedEventArgs

          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.ClientClosedEventArgs.Reason
  commentId: P:EventStore.ClientAPI.ClientClosedEventArgs.Reason
  id: Reason
  parent: EventStore.ClientAPI.ClientClosedEventArgs
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: ClientClosedEventArgs.Reason
  fullName: EventStore.ClientAPI.ClientClosedEventArgs.Reason
  type: Property
  source:
    id: Reason
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClientClosedEventArgs.cs
    startLine: 12
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nA description of the reason the connection was closed if closing was initiated by the server or client API directly\nrather than by calling <xref href=\"EventStore.ClientAPI.IEventStoreConnection.Close\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string Reason { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Reason As String
  overload: EventStore.ClientAPI.ClientClosedEventArgs.Reason*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.ClientClosedEventArgs.Connection
  commentId: P:EventStore.ClientAPI.ClientClosedEventArgs.Connection
  id: Connection
  parent: EventStore.ClientAPI.ClientClosedEventArgs
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: ClientClosedEventArgs.Connection
  fullName: EventStore.ClientAPI.ClientClosedEventArgs.Connection
  type: Property
  source:
    id: Connection
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClientClosedEventArgs.cs
    startLine: 17
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe <xref href=\"EventStore.ClientAPI.IEventStoreConnection\" data-throw-if-not-resolved=\"false\"></xref> responsible for raising the event.\n"
  example: []
  syntax:
    content: public IEventStoreConnection Connection { get; }
    parameters: []
    return:
      type: EventStore.ClientAPI.IEventStoreConnection
    content.vb: Public ReadOnly Property Connection As IEventStoreConnection
  overload: EventStore.ClientAPI.ClientClosedEventArgs.Connection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.ClientClosedEventArgs.#ctor(EventStore.ClientAPI.IEventStoreConnection,System.String)
  commentId: M:EventStore.ClientAPI.ClientClosedEventArgs.#ctor(EventStore.ClientAPI.IEventStoreConnection,System.String)
  id: '#ctor(EventStore.ClientAPI.IEventStoreConnection,System.String)'
  parent: EventStore.ClientAPI.ClientClosedEventArgs
  langs:
  - csharp
  - vb
  name: ClientClosedEventArgs(IEventStoreConnection, String)
  nameWithType: ClientClosedEventArgs.ClientClosedEventArgs(IEventStoreConnection, String)
  fullName: EventStore.ClientAPI.ClientClosedEventArgs.ClientClosedEventArgs(EventStore.ClientAPI.IEventStoreConnection, System.String)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClientClosedEventArgs.cs
    startLine: 24
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nConstructs a new instance of <xref href=\"EventStore.ClientAPI.ClientClosedEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ClientClosedEventArgs(IEventStoreConnection connection, string reason)
    parameters:
    - id: connection
      type: EventStore.ClientAPI.IEventStoreConnection
      description: The <xref href="EventStore.ClientAPI.IEventStoreConnection" data-throw-if-not-resolved="false"></xref> responsible for raising the event.
    - id: reason
      type: System.String
      description: A description of the reason the connection was closed.
    content.vb: Public Sub New(connection As IEventStoreConnection, reason As String)
  overload: EventStore.ClientAPI.ClientClosedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI.IEventStoreConnection
  commentId: T:EventStore.ClientAPI.IEventStoreConnection
  parent: EventStore.ClientAPI
  name: IEventStoreConnection
  nameWithType: IEventStoreConnection
  fullName: EventStore.ClientAPI.IEventStoreConnection
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.ClientAPI.IEventStoreConnection.Close
  commentId: M:EventStore.ClientAPI.IEventStoreConnection.Close
  isExternal: true
- uid: EventStore.ClientAPI.ClientClosedEventArgs.Reason*
  commentId: Overload:EventStore.ClientAPI.ClientClosedEventArgs.Reason
  name: Reason
  nameWithType: ClientClosedEventArgs.Reason
  fullName: EventStore.ClientAPI.ClientClosedEventArgs.Reason
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.ClientAPI.ClientClosedEventArgs.Connection*
  commentId: Overload:EventStore.ClientAPI.ClientClosedEventArgs.Connection
  name: Connection
  nameWithType: ClientClosedEventArgs.Connection
  fullName: EventStore.ClientAPI.ClientClosedEventArgs.Connection
- uid: EventStore.ClientAPI.ClientClosedEventArgs
  commentId: T:EventStore.ClientAPI.ClientClosedEventArgs
  name: ClientClosedEventArgs
  nameWithType: ClientClosedEventArgs
  fullName: EventStore.ClientAPI.ClientClosedEventArgs
- uid: EventStore.ClientAPI.ClientClosedEventArgs.#ctor*
  commentId: Overload:EventStore.ClientAPI.ClientClosedEventArgs.#ctor
  name: ClientClosedEventArgs
  nameWithType: ClientClosedEventArgs.ClientClosedEventArgs
  fullName: EventStore.ClientAPI.ClientClosedEventArgs.ClientClosedEventArgs

### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.ClientConnectionEventArgs
  commentId: T:EventStore.ClientAPI.ClientConnectionEventArgs
  id: ClientConnectionEventArgs
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.ClientConnectionEventArgs.#ctor(EventStore.ClientAPI.IEventStoreConnection,IPEndPoint)
  - EventStore.ClientAPI.ClientConnectionEventArgs.Connection
  - EventStore.ClientAPI.ClientConnectionEventArgs.RemoteEndPoint
  langs:
  - csharp
  - vb
  name: ClientConnectionEventArgs
  nameWithType: ClientConnectionEventArgs
  fullName: EventStore.ClientAPI.ClientConnectionEventArgs
  type: Class
  source:
    remote:
      path: src/EventStore.ClientAPI/ClientConnectionEventArgs.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ClientConnectionEventArgs
    path: ../EventStore/src/EventStore.ClientAPI/ClientConnectionEventArgs.cs
    startLine: 8
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nEvent Arguments for the event raised when an <xref href=\"EventStore.ClientAPI.IEventStoreConnection\" data-throw-if-not-resolved=\"false\"></xref> is\nconnected to or disconnected from an Event Store server.\n"
  example: []
  syntax:
    content: 'public class ClientConnectionEventArgs : EventArgs'
    content.vb: >-
      Public Class ClientConnectionEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.ClientConnectionEventArgs.RemoteEndPoint
  commentId: P:EventStore.ClientAPI.ClientConnectionEventArgs.RemoteEndPoint
  id: RemoteEndPoint
  parent: EventStore.ClientAPI.ClientConnectionEventArgs
  langs:
  - csharp
  - vb
  name: RemoteEndPoint
  nameWithType: ClientConnectionEventArgs.RemoteEndPoint
  fullName: EventStore.ClientAPI.ClientConnectionEventArgs.RemoteEndPoint
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/ClientConnectionEventArgs.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: RemoteEndPoint
    path: ../EventStore/src/EventStore.ClientAPI/ClientConnectionEventArgs.cs
    startLine: 12
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe endpoint of the Event Store server to or from which the connection was connected or disconnected.\n"
  example: []
  syntax:
    content: public IPEndPoint RemoteEndPoint { get; }
    parameters: []
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly Property RemoteEndPoint As IPEndPoint
  overload: EventStore.ClientAPI.ClientConnectionEventArgs.RemoteEndPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.ClientConnectionEventArgs.Connection
  commentId: P:EventStore.ClientAPI.ClientConnectionEventArgs.Connection
  id: Connection
  parent: EventStore.ClientAPI.ClientConnectionEventArgs
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: ClientConnectionEventArgs.Connection
  fullName: EventStore.ClientAPI.ClientConnectionEventArgs.Connection
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/ClientConnectionEventArgs.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Connection
    path: ../EventStore/src/EventStore.ClientAPI/ClientConnectionEventArgs.cs
    startLine: 17
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe <xref href=\"EventStore.ClientAPI.IEventStoreConnection\" data-throw-if-not-resolved=\"false\"></xref> responsible for raising the event.\n"
  example: []
  syntax:
    content: public IEventStoreConnection Connection { get; }
    parameters: []
    return:
      type: EventStore.ClientAPI.IEventStoreConnection
    content.vb: Public ReadOnly Property Connection As IEventStoreConnection
  overload: EventStore.ClientAPI.ClientConnectionEventArgs.Connection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.ClientConnectionEventArgs.#ctor(EventStore.ClientAPI.IEventStoreConnection,IPEndPoint)
  commentId: M:EventStore.ClientAPI.ClientConnectionEventArgs.#ctor(EventStore.ClientAPI.IEventStoreConnection,IPEndPoint)
  id: '#ctor(EventStore.ClientAPI.IEventStoreConnection,IPEndPoint)'
  parent: EventStore.ClientAPI.ClientConnectionEventArgs
  langs:
  - csharp
  - vb
  name: ClientConnectionEventArgs(IEventStoreConnection, IPEndPoint)
  nameWithType: ClientConnectionEventArgs.ClientConnectionEventArgs(IEventStoreConnection, IPEndPoint)
  fullName: EventStore.ClientAPI.ClientConnectionEventArgs.ClientConnectionEventArgs(EventStore.ClientAPI.IEventStoreConnection, IPEndPoint)
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/ClientConnectionEventArgs.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/ClientConnectionEventArgs.cs
    startLine: 24
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nConstructs a new instance of <xref href=\"EventStore.ClientAPI.ClientConnectionEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ClientConnectionEventArgs(IEventStoreConnection connection, IPEndPoint remoteEndPoint)
    parameters:
    - id: connection
      type: EventStore.ClientAPI.IEventStoreConnection
      description: The <xref href="EventStore.ClientAPI.IEventStoreConnection" data-throw-if-not-resolved="false"></xref> responsible for raising the event.
    - id: remoteEndPoint
      type: IPEndPoint
      description: The endpoint of the Event Store server to or from which the connection was connected or disconnected.
    content.vb: Public Sub New(connection As IEventStoreConnection, remoteEndPoint As IPEndPoint)
  overload: EventStore.ClientAPI.ClientConnectionEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI.IEventStoreConnection
  commentId: T:EventStore.ClientAPI.IEventStoreConnection
  parent: EventStore.ClientAPI
  name: IEventStoreConnection
  nameWithType: IEventStoreConnection
  fullName: EventStore.ClientAPI.IEventStoreConnection
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.ClientAPI.ClientConnectionEventArgs.RemoteEndPoint*
  commentId: Overload:EventStore.ClientAPI.ClientConnectionEventArgs.RemoteEndPoint
  name: RemoteEndPoint
  nameWithType: ClientConnectionEventArgs.RemoteEndPoint
  fullName: EventStore.ClientAPI.ClientConnectionEventArgs.RemoteEndPoint
- uid: IPEndPoint
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: IPEndPoint
- uid: EventStore.ClientAPI.ClientConnectionEventArgs.Connection*
  commentId: Overload:EventStore.ClientAPI.ClientConnectionEventArgs.Connection
  name: Connection
  nameWithType: ClientConnectionEventArgs.Connection
  fullName: EventStore.ClientAPI.ClientConnectionEventArgs.Connection
- uid: EventStore.ClientAPI.ClientConnectionEventArgs
  commentId: T:EventStore.ClientAPI.ClientConnectionEventArgs
  name: ClientConnectionEventArgs
  nameWithType: ClientConnectionEventArgs
  fullName: EventStore.ClientAPI.ClientConnectionEventArgs
- uid: EventStore.ClientAPI.ClientConnectionEventArgs.#ctor*
  commentId: Overload:EventStore.ClientAPI.ClientConnectionEventArgs.#ctor
  name: ClientConnectionEventArgs
  nameWithType: ClientConnectionEventArgs.ClientConnectionEventArgs
  fullName: EventStore.ClientAPI.ClientConnectionEventArgs.ClientConnectionEventArgs

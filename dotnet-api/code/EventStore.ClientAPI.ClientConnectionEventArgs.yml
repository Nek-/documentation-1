### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.ClientConnectionEventArgs
  commentId: T:EventStore.ClientAPI.ClientConnectionEventArgs
  id: ClientConnectionEventArgs
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.ClientConnectionEventArgs.#ctor(EventStore.ClientAPI.IEventStoreConnection,System.Net.IPEndPoint)
  - EventStore.ClientAPI.ClientConnectionEventArgs.Connection
  - EventStore.ClientAPI.ClientConnectionEventArgs.RemoteEndPoint
  langs:
  - csharp
  - vb
  name: ClientConnectionEventArgs
  nameWithType: ClientConnectionEventArgs
  fullName: EventStore.ClientAPI.ClientConnectionEventArgs
  type: Class
  source:
    id: ClientConnectionEventArgs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClientConnectionEventArgs.cs
    startLine: 8
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nEvent Arguments for the event raised when an <xref href=\"EventStore.ClientAPI.IEventStoreConnection\" data-throw-if-not-resolved=\"false\"></xref> is\nconnected to or disconnected from an Event Store server.\n"
  example: []
  syntax:
    content: 'public class ClientConnectionEventArgs : EventArgs'
    content.vb: >-
      Public Class ClientConnectionEventArgs

          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.ClientConnectionEventArgs.RemoteEndPoint
  commentId: P:EventStore.ClientAPI.ClientConnectionEventArgs.RemoteEndPoint
  id: RemoteEndPoint
  parent: EventStore.ClientAPI.ClientConnectionEventArgs
  langs:
  - csharp
  - vb
  name: RemoteEndPoint
  nameWithType: ClientConnectionEventArgs.RemoteEndPoint
  fullName: EventStore.ClientAPI.ClientConnectionEventArgs.RemoteEndPoint
  type: Property
  source:
    id: RemoteEndPoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClientConnectionEventArgs.cs
    startLine: 12
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe endpoint of the Event Store server to or from which the connection was connected or disconnected.\n"
  example: []
  syntax:
    content: public IPEndPoint RemoteEndPoint { get; }
    parameters: []
    return:
      type: System.Net.IPEndPoint
    content.vb: Public ReadOnly Property RemoteEndPoint As IPEndPoint
  overload: EventStore.ClientAPI.ClientConnectionEventArgs.RemoteEndPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.ClientConnectionEventArgs.Connection
  commentId: P:EventStore.ClientAPI.ClientConnectionEventArgs.Connection
  id: Connection
  parent: EventStore.ClientAPI.ClientConnectionEventArgs
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: ClientConnectionEventArgs.Connection
  fullName: EventStore.ClientAPI.ClientConnectionEventArgs.Connection
  type: Property
  source:
    id: Connection
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClientConnectionEventArgs.cs
    startLine: 17
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe <xref href=\"EventStore.ClientAPI.IEventStoreConnection\" data-throw-if-not-resolved=\"false\"></xref> responsible for raising the event.\n"
  example: []
  syntax:
    content: public IEventStoreConnection Connection { get; }
    parameters: []
    return:
      type: EventStore.ClientAPI.IEventStoreConnection
    content.vb: Public ReadOnly Property Connection As IEventStoreConnection
  overload: EventStore.ClientAPI.ClientConnectionEventArgs.Connection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.ClientConnectionEventArgs.#ctor(EventStore.ClientAPI.IEventStoreConnection,System.Net.IPEndPoint)
  commentId: M:EventStore.ClientAPI.ClientConnectionEventArgs.#ctor(EventStore.ClientAPI.IEventStoreConnection,System.Net.IPEndPoint)
  id: '#ctor(EventStore.ClientAPI.IEventStoreConnection,System.Net.IPEndPoint)'
  parent: EventStore.ClientAPI.ClientConnectionEventArgs
  langs:
  - csharp
  - vb
  name: ClientConnectionEventArgs(IEventStoreConnection, IPEndPoint)
  nameWithType: ClientConnectionEventArgs.ClientConnectionEventArgs(IEventStoreConnection, IPEndPoint)
  fullName: EventStore.ClientAPI.ClientConnectionEventArgs.ClientConnectionEventArgs(EventStore.ClientAPI.IEventStoreConnection, System.Net.IPEndPoint)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClientConnectionEventArgs.cs
    startLine: 24
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nConstructs a new instance of <xref href=\"EventStore.ClientAPI.ClientConnectionEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ClientConnectionEventArgs(IEventStoreConnection connection, IPEndPoint remoteEndPoint)
    parameters:
    - id: connection
      type: EventStore.ClientAPI.IEventStoreConnection
      description: The <xref href="EventStore.ClientAPI.IEventStoreConnection" data-throw-if-not-resolved="false"></xref> responsible for raising the event.
    - id: remoteEndPoint
      type: System.Net.IPEndPoint
      description: The endpoint of the Event Store server to or from which the connection was connected or disconnected.
    content.vb: Public Sub New(connection As IEventStoreConnection, remoteEndPoint As IPEndPoint)
  overload: EventStore.ClientAPI.ClientConnectionEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI.IEventStoreConnection
  commentId: T:EventStore.ClientAPI.IEventStoreConnection
  parent: EventStore.ClientAPI
  name: IEventStoreConnection
  nameWithType: IEventStoreConnection
  fullName: EventStore.ClientAPI.IEventStoreConnection
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.ClientAPI.ClientConnectionEventArgs.RemoteEndPoint*
  commentId: Overload:EventStore.ClientAPI.ClientConnectionEventArgs.RemoteEndPoint
  name: RemoteEndPoint
  nameWithType: ClientConnectionEventArgs.RemoteEndPoint
  fullName: EventStore.ClientAPI.ClientConnectionEventArgs.RemoteEndPoint
- uid: System.Net.IPEndPoint
  commentId: T:System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: EventStore.ClientAPI.ClientConnectionEventArgs.Connection*
  commentId: Overload:EventStore.ClientAPI.ClientConnectionEventArgs.Connection
  name: Connection
  nameWithType: ClientConnectionEventArgs.Connection
  fullName: EventStore.ClientAPI.ClientConnectionEventArgs.Connection
- uid: EventStore.ClientAPI.ClientConnectionEventArgs
  commentId: T:EventStore.ClientAPI.ClientConnectionEventArgs
  name: ClientConnectionEventArgs
  nameWithType: ClientConnectionEventArgs
  fullName: EventStore.ClientAPI.ClientConnectionEventArgs
- uid: EventStore.ClientAPI.ClientConnectionEventArgs.#ctor*
  commentId: Overload:EventStore.ClientAPI.ClientConnectionEventArgs.#ctor
  name: ClientConnectionEventArgs
  nameWithType: ClientConnectionEventArgs.ClientConnectionEventArgs
  fullName: EventStore.ClientAPI.ClientConnectionEventArgs.ClientConnectionEventArgs

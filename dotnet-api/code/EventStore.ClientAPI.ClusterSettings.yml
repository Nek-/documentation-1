### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.ClusterSettings
  commentId: T:EventStore.ClientAPI.ClusterSettings
  id: ClusterSettings
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.ClusterSettings.ClusterDns
  - EventStore.ClientAPI.ClusterSettings.Create
  - EventStore.ClientAPI.ClusterSettings.ExternalGossipPort
  - EventStore.ClientAPI.ClusterSettings.GossipSeeds
  - EventStore.ClientAPI.ClusterSettings.GossipTimeout
  - EventStore.ClientAPI.ClusterSettings.MaxDiscoverAttempts
  - EventStore.ClientAPI.ClusterSettings.NodePreference
  langs:
  - csharp
  - vb
  name: ClusterSettings
  nameWithType: ClusterSettings
  fullName: EventStore.ClientAPI.ClusterSettings
  type: Class
  source:
    id: ClusterSettings
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClusterSettings.cs
    startLine: 7
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nContains settings relating to a connection to a cluster. \n"
  example: []
  syntax:
    content: 'public sealed class ClusterSettings : object'
    content.vb: >-
      Public NotInheritable Class ClusterSettings
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.ClientAPI.ClusterSettings.Create
  commentId: M:EventStore.ClientAPI.ClusterSettings.Create
  id: Create
  parent: EventStore.ClientAPI.ClusterSettings
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: ClusterSettings.Create()
  fullName: EventStore.ClientAPI.ClusterSettings.Create()
  type: Method
  source:
    id: Create
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClusterSettings.cs
    startLine: 12
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nCreates a new set of <xref href=\"EventStore.ClientAPI.ClusterSettings\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static ClusterSettingsBuilder Create()
    return:
      type: EventStore.ClientAPI.ClusterSettingsBuilder
      description: A <xref href="EventStore.ClientAPI.ClusterSettingsBuilder" data-throw-if-not-resolved="false"></xref> that can be used to build up a <xref href="EventStore.ClientAPI.ClusterSettings" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function Create As ClusterSettingsBuilder
  overload: EventStore.ClientAPI.ClusterSettings.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.ClientAPI.ClusterSettings.ClusterDns
  commentId: F:EventStore.ClientAPI.ClusterSettings.ClusterDns
  id: ClusterDns
  parent: EventStore.ClientAPI.ClusterSettings
  langs:
  - csharp
  - vb
  name: ClusterDns
  nameWithType: ClusterSettings.ClusterDns
  fullName: EventStore.ClientAPI.ClusterSettings.ClusterDns
  type: Field
  source:
    id: ClusterDns
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClusterSettings.cs
    startLine: 19
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe DNS name to use for discovering endpoints.\n"
  example: []
  syntax:
    content: public readonly string ClusterDns
    return:
      type: System.String
    content.vb: Public ReadOnly ClusterDns As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.ClusterSettings.MaxDiscoverAttempts
  commentId: F:EventStore.ClientAPI.ClusterSettings.MaxDiscoverAttempts
  id: MaxDiscoverAttempts
  parent: EventStore.ClientAPI.ClusterSettings
  langs:
  - csharp
  - vb
  name: MaxDiscoverAttempts
  nameWithType: ClusterSettings.MaxDiscoverAttempts
  fullName: EventStore.ClientAPI.ClusterSettings.MaxDiscoverAttempts
  type: Field
  source:
    id: MaxDiscoverAttempts
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClusterSettings.cs
    startLine: 24
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe maximum number of attempts for discovering endpoints.\n"
  example: []
  syntax:
    content: public readonly int MaxDiscoverAttempts
    return:
      type: System.Int32
    content.vb: Public ReadOnly MaxDiscoverAttempts As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.ClusterSettings.ExternalGossipPort
  commentId: F:EventStore.ClientAPI.ClusterSettings.ExternalGossipPort
  id: ExternalGossipPort
  parent: EventStore.ClientAPI.ClusterSettings
  langs:
  - csharp
  - vb
  name: ExternalGossipPort
  nameWithType: ClusterSettings.ExternalGossipPort
  fullName: EventStore.ClientAPI.ClusterSettings.ExternalGossipPort
  type: Field
  source:
    id: ExternalGossipPort
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClusterSettings.cs
    startLine: 29
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe well-known endpoint on which cluster managers are running.\n"
  example: []
  syntax:
    content: public readonly int ExternalGossipPort
    return:
      type: System.Int32
    content.vb: Public ReadOnly ExternalGossipPort As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.ClusterSettings.GossipSeeds
  commentId: F:EventStore.ClientAPI.ClusterSettings.GossipSeeds
  id: GossipSeeds
  parent: EventStore.ClientAPI.ClusterSettings
  langs:
  - csharp
  - vb
  name: GossipSeeds
  nameWithType: ClusterSettings.GossipSeeds
  fullName: EventStore.ClientAPI.ClusterSettings.GossipSeeds
  type: Field
  source:
    id: GossipSeeds
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClusterSettings.cs
    startLine: 34
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nEndpoints for seeding gossip if not using DNS.\n"
  example: []
  syntax:
    content: public readonly GossipSeed[] GossipSeeds
    return:
      type: EventStore.ClientAPI.GossipSeed[]
    content.vb: Public ReadOnly GossipSeeds As GossipSeed()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.ClusterSettings.GossipTimeout
  commentId: F:EventStore.ClientAPI.ClusterSettings.GossipTimeout
  id: GossipTimeout
  parent: EventStore.ClientAPI.ClusterSettings
  langs:
  - csharp
  - vb
  name: GossipTimeout
  nameWithType: ClusterSettings.GossipTimeout
  fullName: EventStore.ClientAPI.ClusterSettings.GossipTimeout
  type: Field
  source:
    id: GossipTimeout
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClusterSettings.cs
    startLine: 39
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nTimeout for cluster gossip.\n"
  example: []
  syntax:
    content: public TimeSpan GossipTimeout
    return:
      type: TimeSpan
    content.vb: Public GossipTimeout As TimeSpan
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.ClusterSettings.NodePreference
  commentId: F:EventStore.ClientAPI.ClusterSettings.NodePreference
  id: NodePreference
  parent: EventStore.ClientAPI.ClusterSettings
  langs:
  - csharp
  - vb
  name: NodePreference
  nameWithType: ClusterSettings.NodePreference
  fullName: EventStore.ClientAPI.ClusterSettings.NodePreference
  type: Field
  source:
    id: NodePreference
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/ClusterSettings.cs
    startLine: 44
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nPrefer a randomly selected node. \n"
  example: []
  syntax:
    content: public NodePreference NodePreference
    return:
      type: EventStore.ClientAPI.NodePreference
    content.vb: Public NodePreference As NodePreference
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.ClientAPI.ClusterSettings
  commentId: T:EventStore.ClientAPI.ClusterSettings
  parent: EventStore.ClientAPI
  name: ClusterSettings
  nameWithType: ClusterSettings
  fullName: EventStore.ClientAPI.ClusterSettings
- uid: EventStore.ClientAPI.ClusterSettingsBuilder
  commentId: T:EventStore.ClientAPI.ClusterSettingsBuilder
  parent: EventStore.ClientAPI
  name: ClusterSettingsBuilder
  nameWithType: ClusterSettingsBuilder
  fullName: EventStore.ClientAPI.ClusterSettingsBuilder
- uid: EventStore.ClientAPI.ClusterSettings.Create*
  commentId: Overload:EventStore.ClientAPI.ClusterSettings.Create
  name: Create
  nameWithType: ClusterSettings.Create
  fullName: EventStore.ClientAPI.ClusterSettings.Create
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.ClientAPI.GossipSeed[]
  isExternal: true
  name: GossipSeed[]
  nameWithType: GossipSeed[]
  fullName: EventStore.ClientAPI.GossipSeed[]
  nameWithType.vb: GossipSeed()
  fullName.vb: EventStore.ClientAPI.GossipSeed()
  name.vb: GossipSeed()
  spec.csharp:
  - uid: EventStore.ClientAPI.GossipSeed
    name: GossipSeed
    nameWithType: GossipSeed
    fullName: EventStore.ClientAPI.GossipSeed
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.ClientAPI.GossipSeed
    name: GossipSeed
    nameWithType: GossipSeed
    fullName: EventStore.ClientAPI.GossipSeed
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan
- uid: EventStore.ClientAPI.NodePreference
  commentId: T:EventStore.ClientAPI.NodePreference
  parent: EventStore.ClientAPI
  name: NodePreference
  nameWithType: NodePreference
  fullName: EventStore.ClientAPI.NodePreference

### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.Common.SystemEventTypes
  commentId: T:EventStore.ClientAPI.Common.SystemEventTypes
  id: SystemEventTypes
  parent: EventStore.ClientAPI.Common
  children:
  - EventStore.ClientAPI.Common.SystemEventTypes.LinkTo
  - EventStore.ClientAPI.Common.SystemEventTypes.Settings
  - EventStore.ClientAPI.Common.SystemEventTypes.StatsCollection
  - EventStore.ClientAPI.Common.SystemEventTypes.StreamDeleted
  - EventStore.ClientAPI.Common.SystemEventTypes.StreamMetadata
  langs:
  - csharp
  - vb
  name: SystemEventTypes
  nameWithType: SystemEventTypes
  fullName: EventStore.ClientAPI.Common.SystemEventTypes
  type: Class
  source:
    remote:
      path: src/EventStore.ClientAPI/Common/SystemNames.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: SystemEventTypes
    path: ../EventStore/src/EventStore.ClientAPI/Common/SystemNames.cs
    startLine: 93
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Common
  summary: "\nConstants for System event types\n"
  example: []
  syntax:
    content: public static class SystemEventTypes
    content.vb: Public Module SystemEventTypes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.ClientAPI.Common.SystemEventTypes.StreamDeleted
  commentId: F:EventStore.ClientAPI.Common.SystemEventTypes.StreamDeleted
  id: StreamDeleted
  parent: EventStore.ClientAPI.Common.SystemEventTypes
  langs:
  - csharp
  - vb
  name: StreamDeleted
  nameWithType: SystemEventTypes.StreamDeleted
  fullName: EventStore.ClientAPI.Common.SystemEventTypes.StreamDeleted
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Common/SystemNames.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: StreamDeleted
    path: ../EventStore/src/EventStore.ClientAPI/Common/SystemNames.cs
    startLine: 97
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Common
  summary: "\nevent type for stream deleted\n"
  example: []
  syntax:
    content: public const string StreamDeleted = "$streamDeleted"
    return:
      type: System.String
    content.vb: Public Const StreamDeleted As String = "$streamDeleted"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.Common.SystemEventTypes.StatsCollection
  commentId: F:EventStore.ClientAPI.Common.SystemEventTypes.StatsCollection
  id: StatsCollection
  parent: EventStore.ClientAPI.Common.SystemEventTypes
  langs:
  - csharp
  - vb
  name: StatsCollection
  nameWithType: SystemEventTypes.StatsCollection
  fullName: EventStore.ClientAPI.Common.SystemEventTypes.StatsCollection
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Common/SystemNames.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: StatsCollection
    path: ../EventStore/src/EventStore.ClientAPI/Common/SystemNames.cs
    startLine: 102
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Common
  summary: "\nevent type for statistics\n"
  example: []
  syntax:
    content: public const string StatsCollection = "$statsCollected"
    return:
      type: System.String
    content.vb: Public Const StatsCollection As String = "$statsCollected"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.Common.SystemEventTypes.LinkTo
  commentId: F:EventStore.ClientAPI.Common.SystemEventTypes.LinkTo
  id: LinkTo
  parent: EventStore.ClientAPI.Common.SystemEventTypes
  langs:
  - csharp
  - vb
  name: LinkTo
  nameWithType: SystemEventTypes.LinkTo
  fullName: EventStore.ClientAPI.Common.SystemEventTypes.LinkTo
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Common/SystemNames.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: LinkTo
    path: ../EventStore/src/EventStore.ClientAPI/Common/SystemNames.cs
    startLine: 107
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Common
  summary: "\nevent type for linkTo \n"
  example: []
  syntax:
    content: public const string LinkTo = "$>"
    return:
      type: System.String
    content.vb: Public Const LinkTo As String = "$>"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.Common.SystemEventTypes.StreamMetadata
  commentId: F:EventStore.ClientAPI.Common.SystemEventTypes.StreamMetadata
  id: StreamMetadata
  parent: EventStore.ClientAPI.Common.SystemEventTypes
  langs:
  - csharp
  - vb
  name: StreamMetadata
  nameWithType: SystemEventTypes.StreamMetadata
  fullName: EventStore.ClientAPI.Common.SystemEventTypes.StreamMetadata
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Common/SystemNames.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: StreamMetadata
    path: ../EventStore/src/EventStore.ClientAPI/Common/SystemNames.cs
    startLine: 112
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Common
  summary: "\nevent type for stream metadata \n"
  example: []
  syntax:
    content: public const string StreamMetadata = "$metadata"
    return:
      type: System.String
    content.vb: Public Const StreamMetadata As String = "$metadata"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.Common.SystemEventTypes.Settings
  commentId: F:EventStore.ClientAPI.Common.SystemEventTypes.Settings
  id: Settings
  parent: EventStore.ClientAPI.Common.SystemEventTypes
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: SystemEventTypes.Settings
  fullName: EventStore.ClientAPI.Common.SystemEventTypes.Settings
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Common/SystemNames.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Settings
    path: ../EventStore/src/EventStore.ClientAPI/Common/SystemNames.cs
    startLine: 117
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Common
  summary: "\nevent type for the system settings \n"
  example: []
  syntax:
    content: public const string Settings = "$settings"
    return:
      type: System.String
    content.vb: Public Const Settings As String = "$settings"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.ClientAPI.Common
  commentId: N:EventStore.ClientAPI.Common
  name: EventStore.ClientAPI.Common
  nameWithType: EventStore.ClientAPI.Common
  fullName: EventStore.ClientAPI.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

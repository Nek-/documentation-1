### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.DeleteResult
  commentId: T:EventStore.ClientAPI.DeleteResult
  id: DeleteResult
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.DeleteResult.#ctor(EventStore.ClientAPI.Position)
  - EventStore.ClientAPI.DeleteResult.LogPosition
  langs:
  - csharp
  - vb
  name: DeleteResult
  nameWithType: DeleteResult
  fullName: EventStore.ClientAPI.DeleteResult
  type: Struct
  source:
    id: DeleteResult
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/DeleteResult.cs
    startLine: 4
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nResult type returned after deleting a stream.\n"
  example: []
  syntax:
    content: public struct DeleteResult
    content.vb: Public Structure DeleteResult
  extensionMethods:
  - EventStore.ClientAPI.DeleteResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.ClientAPI.DeleteResult.LogPosition
  commentId: F:EventStore.ClientAPI.DeleteResult.LogPosition
  id: LogPosition
  parent: EventStore.ClientAPI.DeleteResult
  langs:
  - csharp
  - vb
  name: LogPosition
  nameWithType: DeleteResult.LogPosition
  fullName: EventStore.ClientAPI.DeleteResult.LogPosition
  type: Field
  source:
    id: LogPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/DeleteResult.cs
    startLine: 8
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe <xref href=\"EventStore.ClientAPI.DeleteResult.LogPosition\" data-throw-if-not-resolved=\"false\"></xref> of the write.\n"
  example: []
  syntax:
    content: public readonly Position LogPosition
    return:
      type: EventStore.ClientAPI.Position
    content.vb: Public ReadOnly LogPosition As Position
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.DeleteResult.#ctor(EventStore.ClientAPI.Position)
  commentId: M:EventStore.ClientAPI.DeleteResult.#ctor(EventStore.ClientAPI.Position)
  id: '#ctor(EventStore.ClientAPI.Position)'
  parent: EventStore.ClientAPI.DeleteResult
  langs:
  - csharp
  - vb
  name: DeleteResult(Position)
  nameWithType: DeleteResult.DeleteResult(Position)
  fullName: EventStore.ClientAPI.DeleteResult.DeleteResult(EventStore.ClientAPI.Position)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/DeleteResult.cs
    startLine: 14
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nConstructs a new <xref href=\"EventStore.ClientAPI.DeleteResult\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public DeleteResult(Position logPosition)
    parameters:
    - id: logPosition
      type: EventStore.ClientAPI.Position
      description: The position of the write in the log
    content.vb: Public Sub New(logPosition As Position)
  overload: EventStore.ClientAPI.DeleteResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: EventStore.ClientAPI.DeleteResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<DeleteResult>()
  nameWithType: EnumExtensions.EnumValueName<DeleteResult>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.ClientAPI.DeleteResult>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of DeleteResult)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.ClientAPI.DeleteResult)()
  name.vb: EnumValueName(Of DeleteResult)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<DeleteResult>
    nameWithType: EnumExtensions.EnumValueName<DeleteResult>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.ClientAPI.DeleteResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of DeleteResult)
    nameWithType: EnumExtensions.EnumValueName(Of DeleteResult)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.ClientAPI.DeleteResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.ClientAPI.DeleteResult.LogPosition
  commentId: F:EventStore.ClientAPI.DeleteResult.LogPosition
  isExternal: true
- uid: EventStore.ClientAPI.Position
  commentId: T:EventStore.ClientAPI.Position
  parent: EventStore.ClientAPI
  name: Position
  nameWithType: Position
  fullName: EventStore.ClientAPI.Position
- uid: EventStore.ClientAPI.DeleteResult
  commentId: T:EventStore.ClientAPI.DeleteResult
  name: DeleteResult
  nameWithType: DeleteResult
  fullName: EventStore.ClientAPI.DeleteResult
- uid: EventStore.ClientAPI.DeleteResult.#ctor*
  commentId: Overload:EventStore.ClientAPI.DeleteResult.#ctor
  name: DeleteResult
  nameWithType: DeleteResult.DeleteResult
  fullName: EventStore.ClientAPI.DeleteResult.DeleteResult

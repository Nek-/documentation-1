### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder
  commentId: T:EventStore.ClientAPI.DnsClusterSettingsBuilder
  id: DnsClusterSettingsBuilder
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.DnsClusterSettingsBuilder.Build
  - EventStore.ClientAPI.DnsClusterSettingsBuilder.KeepDiscovering
  - EventStore.ClientAPI.DnsClusterSettingsBuilder.op_Implicit(EventStore.ClientAPI.DnsClusterSettingsBuilder)~EventStore.ClientAPI.ClusterSettings
  - EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferRandomNode
  - EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferReadOnlyReplica
  - EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferSlaveNode
  - EventStore.ClientAPI.DnsClusterSettingsBuilder.SetClusterDns(System.String)
  - EventStore.ClientAPI.DnsClusterSettingsBuilder.SetClusterGossipPort(System.Int32)
  - EventStore.ClientAPI.DnsClusterSettingsBuilder.SetGossipTimeout(System.TimeSpan)
  - EventStore.ClientAPI.DnsClusterSettingsBuilder.SetMaxDiscoverAttempts(System.Int32)
  langs:
  - csharp
  - vb
  name: DnsClusterSettingsBuilder
  nameWithType: DnsClusterSettingsBuilder
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder
  type: Class
  source:
    id: DnsClusterSettingsBuilder
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/DnsClusterSettingsBuilder.cs
    startLine: 9
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nFluent builder used to configure <xref href=\"EventStore.ClientAPI.ClusterSettings\" data-throw-if-not-resolved=\"false\"></xref> for connecting to a cluster\nusing DNS discovery.\n"
  example: []
  syntax:
    content: public class DnsClusterSettingsBuilder
    content.vb: Public Class DnsClusterSettingsBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetClusterDns(System.String)
  commentId: M:EventStore.ClientAPI.DnsClusterSettingsBuilder.SetClusterDns(System.String)
  id: SetClusterDns(System.String)
  parent: EventStore.ClientAPI.DnsClusterSettingsBuilder
  langs:
  - csharp
  - vb
  name: SetClusterDns(String)
  nameWithType: DnsClusterSettingsBuilder.SetClusterDns(String)
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetClusterDns(System.String)
  type: Method
  source:
    id: SetClusterDns
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/DnsClusterSettingsBuilder.cs
    startLine: 22
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the DNS name under which cluster nodes are listed.\n"
  example: []
  syntax:
    content: public DnsClusterSettingsBuilder SetClusterDns(string clusterDns)
    parameters:
    - id: clusterDns
      type: System.String
      description: The DNS name under which cluster nodes are listed.
    return:
      type: EventStore.ClientAPI.DnsClusterSettingsBuilder
      description: A <xref href="EventStore.ClientAPI.DnsClusterSettingsBuilder" data-throw-if-not-resolved="false"></xref> for further configuration.
    content.vb: Public Function SetClusterDns(clusterDns As String) As DnsClusterSettingsBuilder
  overload: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetClusterDns*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If <code data-dev-comment-type="paramref" class="paramref">clusterDns</code> is null or empty.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetMaxDiscoverAttempts(System.Int32)
  commentId: M:EventStore.ClientAPI.DnsClusterSettingsBuilder.SetMaxDiscoverAttempts(System.Int32)
  id: SetMaxDiscoverAttempts(System.Int32)
  parent: EventStore.ClientAPI.DnsClusterSettingsBuilder
  langs:
  - csharp
  - vb
  name: SetMaxDiscoverAttempts(Int32)
  nameWithType: DnsClusterSettingsBuilder.SetMaxDiscoverAttempts(Int32)
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetMaxDiscoverAttempts(System.Int32)
  type: Method
  source:
    id: SetMaxDiscoverAttempts
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/DnsClusterSettingsBuilder.cs
    startLine: 34
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the maximum number of attempts for discovery.\n"
  example: []
  syntax:
    content: public DnsClusterSettingsBuilder SetMaxDiscoverAttempts(int maxDiscoverAttempts)
    parameters:
    - id: maxDiscoverAttempts
      type: System.Int32
      description: The maximum number of attempts for DNS discovery.
    return:
      type: EventStore.ClientAPI.DnsClusterSettingsBuilder
      description: A <xref href="EventStore.ClientAPI.DnsClusterSettingsBuilder" data-throw-if-not-resolved="false"></xref> for further configuration.
    content.vb: Public Function SetMaxDiscoverAttempts(maxDiscoverAttempts As Integer) As DnsClusterSettingsBuilder
  overload: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetMaxDiscoverAttempts*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: If <code data-dev-comment-type="paramref" class="paramref">maxDiscoverAttempts</code> is less than or equal to 0.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetGossipTimeout(System.TimeSpan)
  commentId: M:EventStore.ClientAPI.DnsClusterSettingsBuilder.SetGossipTimeout(System.TimeSpan)
  id: SetGossipTimeout(System.TimeSpan)
  parent: EventStore.ClientAPI.DnsClusterSettingsBuilder
  langs:
  - csharp
  - vb
  name: SetGossipTimeout(TimeSpan)
  nameWithType: DnsClusterSettingsBuilder.SetGossipTimeout(TimeSpan)
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetGossipTimeout(System.TimeSpan)
  type: Method
  source:
    id: SetGossipTimeout
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/DnsClusterSettingsBuilder.cs
    startLine: 48
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the period after which gossip times out if none is received.\n"
  example: []
  syntax:
    content: public DnsClusterSettingsBuilder SetGossipTimeout(TimeSpan timeout)
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The period after which gossip times out if none is received.
    return:
      type: EventStore.ClientAPI.DnsClusterSettingsBuilder
      description: A <xref href="EventStore.ClientAPI.DnsClusterSettingsBuilder" data-throw-if-not-resolved="false"></xref> for further configuration.
    content.vb: Public Function SetGossipTimeout(timeout As TimeSpan) As DnsClusterSettingsBuilder
  overload: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetGossipTimeout*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.KeepDiscovering
  commentId: M:EventStore.ClientAPI.DnsClusterSettingsBuilder.KeepDiscovering
  id: KeepDiscovering
  parent: EventStore.ClientAPI.DnsClusterSettingsBuilder
  langs:
  - csharp
  - vb
  name: KeepDiscovering()
  nameWithType: DnsClusterSettingsBuilder.KeepDiscovering()
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.KeepDiscovering()
  type: Method
  source:
    id: KeepDiscovering
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/DnsClusterSettingsBuilder.cs
    startLine: 57
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nAllows infinite nodes discovery attempts.\n"
  example: []
  syntax:
    content: public DnsClusterSettingsBuilder KeepDiscovering()
    return:
      type: EventStore.ClientAPI.DnsClusterSettingsBuilder
      description: ''
    content.vb: Public Function KeepDiscovering As DnsClusterSettingsBuilder
  overload: EventStore.ClientAPI.DnsClusterSettingsBuilder.KeepDiscovering*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferRandomNode
  commentId: M:EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferRandomNode
  id: PreferRandomNode
  parent: EventStore.ClientAPI.DnsClusterSettingsBuilder
  langs:
  - csharp
  - vb
  name: PreferRandomNode()
  nameWithType: DnsClusterSettingsBuilder.PreferRandomNode()
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferRandomNode()
  type: Method
  source:
    id: PreferRandomNode
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/DnsClusterSettingsBuilder.cs
    startLine: 66
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nWhether to randomly choose a node that&apos;s alive from the known nodes. \n"
  example: []
  syntax:
    content: public DnsClusterSettingsBuilder PreferRandomNode()
    return:
      type: EventStore.ClientAPI.DnsClusterSettingsBuilder
      description: A <xref href="EventStore.ClientAPI.DnsClusterSettingsBuilder" data-throw-if-not-resolved="false"></xref> for further configuration.
    content.vb: Public Function PreferRandomNode As DnsClusterSettingsBuilder
  overload: EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferRandomNode*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferSlaveNode
  commentId: M:EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferSlaveNode
  id: PreferSlaveNode
  parent: EventStore.ClientAPI.DnsClusterSettingsBuilder
  langs:
  - csharp
  - vb
  name: PreferSlaveNode()
  nameWithType: DnsClusterSettingsBuilder.PreferSlaveNode()
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferSlaveNode()
  type: Method
  source:
    id: PreferSlaveNode
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/DnsClusterSettingsBuilder.cs
    startLine: 75
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nWhether to prioritize choosing a slave node that&apos;s alive from the known nodes. \n"
  example: []
  syntax:
    content: public DnsClusterSettingsBuilder PreferSlaveNode()
    return:
      type: EventStore.ClientAPI.DnsClusterSettingsBuilder
      description: A <xref href="EventStore.ClientAPI.DnsClusterSettingsBuilder" data-throw-if-not-resolved="false"></xref> for further configuration.
    content.vb: Public Function PreferSlaveNode As DnsClusterSettingsBuilder
  overload: EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferSlaveNode*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferReadOnlyReplica
  commentId: M:EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferReadOnlyReplica
  id: PreferReadOnlyReplica
  parent: EventStore.ClientAPI.DnsClusterSettingsBuilder
  langs:
  - csharp
  - vb
  name: PreferReadOnlyReplica()
  nameWithType: DnsClusterSettingsBuilder.PreferReadOnlyReplica()
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferReadOnlyReplica()
  type: Method
  source:
    id: PreferReadOnlyReplica
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/DnsClusterSettingsBuilder.cs
    startLine: 84
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nWhether to prioritize choosing a read only replica that&apos;s alive from the known nodes. \n"
  example: []
  syntax:
    content: public DnsClusterSettingsBuilder PreferReadOnlyReplica()
    return:
      type: EventStore.ClientAPI.DnsClusterSettingsBuilder
      description: A <xref href="EventStore.ClientAPI.DnsClusterSettingsBuilder" data-throw-if-not-resolved="false"></xref> for further configuration.
    content.vb: Public Function PreferReadOnlyReplica As DnsClusterSettingsBuilder
  overload: EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferReadOnlyReplica*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetClusterGossipPort(System.Int32)
  commentId: M:EventStore.ClientAPI.DnsClusterSettingsBuilder.SetClusterGossipPort(System.Int32)
  id: SetClusterGossipPort(System.Int32)
  parent: EventStore.ClientAPI.DnsClusterSettingsBuilder
  langs:
  - csharp
  - vb
  name: SetClusterGossipPort(Int32)
  nameWithType: DnsClusterSettingsBuilder.SetClusterGossipPort(Int32)
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetClusterGossipPort(System.Int32)
  type: Method
  source:
    id: SetClusterGossipPort
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/DnsClusterSettingsBuilder.cs
    startLine: 103
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the well-known port on which the cluster gossip is taking place.\n\nIf you are using the commercial edition of Event Store HA, with Manager nodes in\nplace, this should be the port number of the External HTTP port on which the\nmanagers are running.\n\nIf you are using the open source edition of Event Store HA, this should be the\nExternal HTTP port that the nodes are running on. If you cannot use a well-known\nport for this across all nodes, you can instead use gossip seed discovery and set\nthe <xref href=\"System.Net.IPEndPoint\" data-throw-if-not-resolved=\"false\"></xref> of some seed nodes instead.\n"
  example: []
  syntax:
    content: public DnsClusterSettingsBuilder SetClusterGossipPort(int clusterGossipPort)
    parameters:
    - id: clusterGossipPort
      type: System.Int32
      description: The cluster gossip port.
    return:
      type: EventStore.ClientAPI.DnsClusterSettingsBuilder
      description: A <xref href="EventStore.ClientAPI.DnsClusterSettingsBuilder" data-throw-if-not-resolved="false"></xref> for further configuration.
    content.vb: Public Function SetClusterGossipPort(clusterGossipPort As Integer) As DnsClusterSettingsBuilder
  overload: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetClusterGossipPort*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.op_Implicit(EventStore.ClientAPI.DnsClusterSettingsBuilder)~EventStore.ClientAPI.ClusterSettings
  commentId: M:EventStore.ClientAPI.DnsClusterSettingsBuilder.op_Implicit(EventStore.ClientAPI.DnsClusterSettingsBuilder)~EventStore.ClientAPI.ClusterSettings
  id: op_Implicit(EventStore.ClientAPI.DnsClusterSettingsBuilder)~EventStore.ClientAPI.ClusterSettings
  parent: EventStore.ClientAPI.DnsClusterSettingsBuilder
  langs:
  - csharp
  - vb
  name: Implicit(DnsClusterSettingsBuilder to ClusterSettings)
  nameWithType: DnsClusterSettingsBuilder.Implicit(DnsClusterSettingsBuilder to ClusterSettings)
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.Implicit(EventStore.ClientAPI.DnsClusterSettingsBuilder to EventStore.ClientAPI.ClusterSettings)
  type: Operator
  source:
    id: op_Implicit
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/DnsClusterSettingsBuilder.cs
    startLine: 114
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nBuilds a <xref href=\"EventStore.ClientAPI.ClusterSettings\" data-throw-if-not-resolved=\"false\"></xref> object from a <xref href=\"EventStore.ClientAPI.DnsClusterSettingsBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static implicit operator ClusterSettings(DnsClusterSettingsBuilder builder)
    parameters:
    - id: builder
      type: EventStore.ClientAPI.DnsClusterSettingsBuilder
      description: <xref href="EventStore.ClientAPI.DnsClusterSettingsBuilder" data-throw-if-not-resolved="false"></xref> from which to build a <xref href="EventStore.ClientAPI.ClusterSettings" data-throw-if-not-resolved="false"></xref>
    return:
      type: EventStore.ClientAPI.ClusterSettings
      description: ''
    content.vb: Public Shared Widening Operator CType(builder As DnsClusterSettingsBuilder) As ClusterSettings
  overload: EventStore.ClientAPI.DnsClusterSettingsBuilder.op_Implicit*
  nameWithType.vb: DnsClusterSettingsBuilder.Widening(DnsClusterSettingsBuilder to ClusterSettings)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.ClientAPI.DnsClusterSettingsBuilder.Widening(EventStore.ClientAPI.DnsClusterSettingsBuilder to EventStore.ClientAPI.ClusterSettings)
  name.vb: Widening(DnsClusterSettingsBuilder to ClusterSettings)
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.Build
  commentId: M:EventStore.ClientAPI.DnsClusterSettingsBuilder.Build
  id: Build
  parent: EventStore.ClientAPI.DnsClusterSettingsBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: DnsClusterSettingsBuilder.Build()
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.Build()
  type: Method
  source:
    id: Build
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/DnsClusterSettingsBuilder.cs
    startLine: 121
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nBuilds a <xref href=\"EventStore.ClientAPI.ClusterSettings\" data-throw-if-not-resolved=\"false\"></xref> object from a <xref href=\"EventStore.ClientAPI.DnsClusterSettingsBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ClusterSettings Build()
    return:
      type: EventStore.ClientAPI.ClusterSettings
    content.vb: Public Function Build As ClusterSettings
  overload: EventStore.ClientAPI.DnsClusterSettingsBuilder.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI.ClusterSettings
  commentId: T:EventStore.ClientAPI.ClusterSettings
  parent: EventStore.ClientAPI
  name: ClusterSettings
  nameWithType: ClusterSettings
  fullName: EventStore.ClientAPI.ClusterSettings
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder
  commentId: T:EventStore.ClientAPI.DnsClusterSettingsBuilder
  parent: EventStore.ClientAPI
  name: DnsClusterSettingsBuilder
  nameWithType: DnsClusterSettingsBuilder
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetClusterDns*
  commentId: Overload:EventStore.ClientAPI.DnsClusterSettingsBuilder.SetClusterDns
  name: SetClusterDns
  nameWithType: DnsClusterSettingsBuilder.SetClusterDns
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetClusterDns
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetMaxDiscoverAttempts*
  commentId: Overload:EventStore.ClientAPI.DnsClusterSettingsBuilder.SetMaxDiscoverAttempts
  name: SetMaxDiscoverAttempts
  nameWithType: DnsClusterSettingsBuilder.SetMaxDiscoverAttempts
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetMaxDiscoverAttempts
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetGossipTimeout*
  commentId: Overload:EventStore.ClientAPI.DnsClusterSettingsBuilder.SetGossipTimeout
  name: SetGossipTimeout
  nameWithType: DnsClusterSettingsBuilder.SetGossipTimeout
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetGossipTimeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.KeepDiscovering*
  commentId: Overload:EventStore.ClientAPI.DnsClusterSettingsBuilder.KeepDiscovering
  name: KeepDiscovering
  nameWithType: DnsClusterSettingsBuilder.KeepDiscovering
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.KeepDiscovering
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferRandomNode*
  commentId: Overload:EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferRandomNode
  name: PreferRandomNode
  nameWithType: DnsClusterSettingsBuilder.PreferRandomNode
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferRandomNode
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferSlaveNode*
  commentId: Overload:EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferSlaveNode
  name: PreferSlaveNode
  nameWithType: DnsClusterSettingsBuilder.PreferSlaveNode
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferSlaveNode
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferReadOnlyReplica*
  commentId: Overload:EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferReadOnlyReplica
  name: PreferReadOnlyReplica
  nameWithType: DnsClusterSettingsBuilder.PreferReadOnlyReplica
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.PreferReadOnlyReplica
- uid: System.Net.IPEndPoint
  commentId: T:System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetClusterGossipPort*
  commentId: Overload:EventStore.ClientAPI.DnsClusterSettingsBuilder.SetClusterGossipPort
  name: SetClusterGossipPort
  nameWithType: DnsClusterSettingsBuilder.SetClusterGossipPort
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.SetClusterGossipPort
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.op_Implicit*
  commentId: Overload:EventStore.ClientAPI.DnsClusterSettingsBuilder.op_Implicit
  name: Implicit
  nameWithType: DnsClusterSettingsBuilder.Implicit
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.Implicit
  nameWithType.vb: DnsClusterSettingsBuilder.Widening
  fullName.vb: EventStore.ClientAPI.DnsClusterSettingsBuilder.Widening
  name.vb: Widening
- uid: EventStore.ClientAPI.DnsClusterSettingsBuilder.Build*
  commentId: Overload:EventStore.ClientAPI.DnsClusterSettingsBuilder.Build
  name: Build
  nameWithType: DnsClusterSettingsBuilder.Build
  fullName: EventStore.ClientAPI.DnsClusterSettingsBuilder.Build

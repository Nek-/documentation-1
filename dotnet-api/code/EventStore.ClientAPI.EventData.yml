### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.EventData
  commentId: T:EventStore.ClientAPI.EventData
  id: EventData
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.EventData.#ctor(System.Guid,System.String,System.Boolean,System.Byte[],System.Byte[])
  - EventStore.ClientAPI.EventData.Data
  - EventStore.ClientAPI.EventData.EventId
  - EventStore.ClientAPI.EventData.IsJson
  - EventStore.ClientAPI.EventData.Metadata
  - EventStore.ClientAPI.EventData.Type
  langs:
  - csharp
  - vb
  name: EventData
  nameWithType: EventData
  fullName: EventStore.ClientAPI.EventData
  type: Class
  source:
    id: EventData
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventData.cs
    startLine: 7
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRepresents an event to be written.\n"
  example: []
  syntax:
    content: public sealed class EventData
    content.vb: Public NotInheritable Class EventData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.ClientAPI.EventData.EventId
  commentId: F:EventStore.ClientAPI.EventData.EventId
  id: EventId
  parent: EventStore.ClientAPI.EventData
  langs:
  - csharp
  - vb
  name: EventId
  nameWithType: EventData.EventId
  fullName: EventStore.ClientAPI.EventData.EventId
  type: Field
  source:
    id: EventId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventData.cs
    startLine: 11
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe ID of the event, used as part of the idempotent write check.\n"
  example: []
  syntax:
    content: public readonly Guid EventId
    return:
      type: System.Guid
    content.vb: Public ReadOnly EventId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.EventData.Type
  commentId: F:EventStore.ClientAPI.EventData.Type
  id: Type
  parent: EventStore.ClientAPI.EventData
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: EventData.Type
  fullName: EventStore.ClientAPI.EventData.Type
  type: Field
  source:
    id: Type
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventData.cs
    startLine: 17
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe name of the event type. It is strongly recommended that these\nuse lowerCamelCase if projections are to be used.\n"
  example: []
  syntax:
    content: public readonly string Type
    return:
      type: System.String
    content.vb: Public ReadOnly Type As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.EventData.IsJson
  commentId: F:EventStore.ClientAPI.EventData.IsJson
  id: IsJson
  parent: EventStore.ClientAPI.EventData
  langs:
  - csharp
  - vb
  name: IsJson
  nameWithType: EventData.IsJson
  fullName: EventStore.ClientAPI.EventData.IsJson
  type: Field
  source:
    id: IsJson
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventData.cs
    startLine: 22
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nFlag indicating whether the data and metadata are JSON.\n"
  example: []
  syntax:
    content: public readonly bool IsJson
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsJson As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.EventData.Data
  commentId: F:EventStore.ClientAPI.EventData.Data
  id: Data
  parent: EventStore.ClientAPI.EventData
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: EventData.Data
  fullName: EventStore.ClientAPI.EventData.Data
  type: Field
  source:
    id: Data
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventData.cs
    startLine: 27
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe raw bytes of the event data.\n"
  example: []
  syntax:
    content: public readonly byte[] Data
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Data As Byte()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.EventData.Metadata
  commentId: F:EventStore.ClientAPI.EventData.Metadata
  id: Metadata
  parent: EventStore.ClientAPI.EventData
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: EventData.Metadata
  fullName: EventStore.ClientAPI.EventData.Metadata
  type: Field
  source:
    id: Metadata
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventData.cs
    startLine: 32
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe raw bytes of the event metadata.\n"
  example: []
  syntax:
    content: public readonly byte[] Metadata
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Metadata As Byte()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.EventData.#ctor(System.Guid,System.String,System.Boolean,System.Byte[],System.Byte[])
  commentId: M:EventStore.ClientAPI.EventData.#ctor(System.Guid,System.String,System.Boolean,System.Byte[],System.Byte[])
  id: '#ctor(System.Guid,System.String,System.Boolean,System.Byte[],System.Byte[])'
  parent: EventStore.ClientAPI.EventData
  langs:
  - csharp
  - vb
  name: EventData(Guid, String, Boolean, Byte[], Byte[])
  nameWithType: EventData.EventData(Guid, String, Boolean, Byte[], Byte[])
  fullName: EventStore.ClientAPI.EventData.EventData(System.Guid, System.String, System.Boolean, System.Byte[], System.Byte[])
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventData.cs
    startLine: 43
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nConstructs a new <xref href=\"EventStore.ClientAPI.EventData\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EventData(Guid eventId, string type, bool isJson, byte[] data, byte[] metadata)
    parameters:
    - id: eventId
      type: System.Guid
      description: The ID of the event, used as part of the idempotent write check.
    - id: type
      type: System.String
      description: >-
        The name of the event type. It is strongly recommended that these

        use lowerCamelCase if projections are to be used.
    - id: isJson
      type: System.Boolean
      description: Flag indicating whether the data and metadata are JSON.
    - id: data
      type: System.Byte[]
      description: The raw bytes of the event data.
    - id: metadata
      type: System.Byte[]
      description: The raw bytes of the event metadata.
    content.vb: Public Sub New(eventId As Guid, type As String, isJson As Boolean, data As Byte(), metadata As Byte())
  overload: EventStore.ClientAPI.EventData.#ctor*
  nameWithType.vb: EventData.EventData(Guid, String, Boolean, Byte(), Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.EventData.EventData(System.Guid, System.String, System.Boolean, System.Byte(), System.Byte())
  name.vb: EventData(Guid, String, Boolean, Byte(), Byte())
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.ClientAPI.EventData
  commentId: T:EventStore.ClientAPI.EventData
  name: EventData
  nameWithType: EventData
  fullName: EventStore.ClientAPI.EventData
- uid: EventStore.ClientAPI.EventData.#ctor*
  commentId: Overload:EventStore.ClientAPI.EventData.#ctor
  name: EventData
  nameWithType: EventData.EventData
  fullName: EventStore.ClientAPI.EventData.EventData

### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.EventReadStatus
  commentId: T:EventStore.ClientAPI.EventReadStatus
  id: EventReadStatus
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.EventReadStatus.NoStream
  - EventStore.ClientAPI.EventReadStatus.NotFound
  - EventStore.ClientAPI.EventReadStatus.StreamDeleted
  - EventStore.ClientAPI.EventReadStatus.Success
  langs:
  - csharp
  - vb
  name: EventReadStatus
  nameWithType: EventReadStatus
  fullName: EventStore.ClientAPI.EventReadStatus
  type: Enum
  source:
    id: EventReadStatus
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventReadStatus.cs
    startLine: 4
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nEnumeration representing the status of a single event read operation.\n"
  example: []
  syntax:
    content: 'public enum EventReadStatus : int'
    content.vb: Public Enum EventReadStatus As Integer
  extensionMethods:
  - EventStore.ClientAPI.EventReadStatus.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.ClientAPI.EventReadStatus.Success
  commentId: F:EventStore.ClientAPI.EventReadStatus.Success
  id: Success
  parent: EventStore.ClientAPI.EventReadStatus
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: EventReadStatus.Success
  fullName: EventStore.ClientAPI.EventReadStatus.Success
  type: Field
  source:
    id: Success
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventReadStatus.cs
    startLine: 8
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe read operation was successful.\n"
  example: []
  syntax:
    content: Success = null
    return:
      type: EventStore.ClientAPI.EventReadStatus
    content.vb: Success = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.EventReadStatus.NotFound
  commentId: F:EventStore.ClientAPI.EventReadStatus.NotFound
  id: NotFound
  parent: EventStore.ClientAPI.EventReadStatus
  langs:
  - csharp
  - vb
  name: NotFound
  nameWithType: EventReadStatus.NotFound
  fullName: EventStore.ClientAPI.EventReadStatus.NotFound
  type: Field
  source:
    id: NotFound
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventReadStatus.cs
    startLine: 13
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe event was not found.\n"
  example: []
  syntax:
    content: NotFound = null
    return:
      type: EventStore.ClientAPI.EventReadStatus
    content.vb: NotFound = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.EventReadStatus.NoStream
  commentId: F:EventStore.ClientAPI.EventReadStatus.NoStream
  id: NoStream
  parent: EventStore.ClientAPI.EventReadStatus
  langs:
  - csharp
  - vb
  name: NoStream
  nameWithType: EventReadStatus.NoStream
  fullName: EventStore.ClientAPI.EventReadStatus.NoStream
  type: Field
  source:
    id: NoStream
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventReadStatus.cs
    startLine: 18
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe stream was not found.\n"
  example: []
  syntax:
    content: NoStream = null
    return:
      type: EventStore.ClientAPI.EventReadStatus
    content.vb: NoStream = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.EventReadStatus.StreamDeleted
  commentId: F:EventStore.ClientAPI.EventReadStatus.StreamDeleted
  id: StreamDeleted
  parent: EventStore.ClientAPI.EventReadStatus
  langs:
  - csharp
  - vb
  name: StreamDeleted
  nameWithType: EventReadStatus.StreamDeleted
  fullName: EventStore.ClientAPI.EventReadStatus.StreamDeleted
  type: Field
  source:
    id: StreamDeleted
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventReadStatus.cs
    startLine: 23
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe stream previously existed but was deleted.\n"
  example: []
  syntax:
    content: StreamDeleted = null
    return:
      type: EventStore.ClientAPI.EventReadStatus
    content.vb: StreamDeleted = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: EventStore.ClientAPI.EventReadStatus.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<EventReadStatus>()
  nameWithType: EnumExtensions.EnumValueName<EventReadStatus>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.ClientAPI.EventReadStatus>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of EventReadStatus)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.ClientAPI.EventReadStatus)()
  name.vb: EnumValueName(Of EventReadStatus)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<EventReadStatus>
    nameWithType: EnumExtensions.EnumValueName<EventReadStatus>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.ClientAPI.EventReadStatus>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of EventReadStatus)
    nameWithType: EnumExtensions.EnumValueName(Of EventReadStatus)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.ClientAPI.EventReadStatus)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.ClientAPI.EventReadStatus
  commentId: T:EventStore.ClientAPI.EventReadStatus
  parent: EventStore.ClientAPI
  name: EventReadStatus
  nameWithType: EventReadStatus
  fullName: EventStore.ClientAPI.EventReadStatus

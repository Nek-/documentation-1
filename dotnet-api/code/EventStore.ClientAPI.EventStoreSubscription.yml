### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.EventStoreSubscription
  commentId: T:EventStore.ClientAPI.EventStoreSubscription
  id: EventStoreSubscription
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.EventStoreSubscription.Close
  - EventStore.ClientAPI.EventStoreSubscription.Dispose
  - EventStore.ClientAPI.EventStoreSubscription.IsSubscribedToAll
  - EventStore.ClientAPI.EventStoreSubscription.LastCommitPosition
  - EventStore.ClientAPI.EventStoreSubscription.LastEventNumber
  - EventStore.ClientAPI.EventStoreSubscription.StreamId
  - EventStore.ClientAPI.EventStoreSubscription.Unsubscribe
  langs:
  - csharp
  - vb
  name: EventStoreSubscription
  nameWithType: EventStoreSubscription
  fullName: EventStore.ClientAPI.EventStoreSubscription
  type: Class
  source:
    id: EventStoreSubscription
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventStoreSubscription.cs
    startLine: 7
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRepresents a subscription to a single stream or to the stream\nof all events in the Event Store.\n"
  example: []
  syntax:
    content: 'public abstract class EventStoreSubscription : IDisposable'
    content.vb: >-
      Public MustInherit Class EventStoreSubscription
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EventStore.ClientAPI.EventStoreSubscription.IsSubscribedToAll
  commentId: P:EventStore.ClientAPI.EventStoreSubscription.IsSubscribedToAll
  id: IsSubscribedToAll
  parent: EventStore.ClientAPI.EventStoreSubscription
  langs:
  - csharp
  - vb
  name: IsSubscribedToAll
  nameWithType: EventStoreSubscription.IsSubscribedToAll
  fullName: EventStore.ClientAPI.EventStoreSubscription.IsSubscribedToAll
  type: Property
  source:
    id: IsSubscribedToAll
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventStoreSubscription.cs
    startLine: 11
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nTrue if this subscription is to all streams.\n"
  example: []
  syntax:
    content: public bool IsSubscribedToAll { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSubscribedToAll As Boolean
  overload: EventStore.ClientAPI.EventStoreSubscription.IsSubscribedToAll*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.EventStoreSubscription.StreamId
  commentId: P:EventStore.ClientAPI.EventStoreSubscription.StreamId
  id: StreamId
  parent: EventStore.ClientAPI.EventStoreSubscription
  langs:
  - csharp
  - vb
  name: StreamId
  nameWithType: EventStoreSubscription.StreamId
  fullName: EventStore.ClientAPI.EventStoreSubscription.StreamId
  type: Property
  source:
    id: StreamId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventStoreSubscription.cs
    startLine: 18
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe name of the stream to which the subscription is subscribed.\n"
  example: []
  syntax:
    content: public string StreamId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property StreamId As String
  overload: EventStore.ClientAPI.EventStoreSubscription.StreamId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.EventStoreSubscription.LastCommitPosition
  commentId: F:EventStore.ClientAPI.EventStoreSubscription.LastCommitPosition
  id: LastCommitPosition
  parent: EventStore.ClientAPI.EventStoreSubscription
  langs:
  - csharp
  - vb
  name: LastCommitPosition
  nameWithType: EventStoreSubscription.LastCommitPosition
  fullName: EventStore.ClientAPI.EventStoreSubscription.LastCommitPosition
  type: Field
  source:
    id: LastCommitPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventStoreSubscription.cs
    startLine: 24
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe last commit position seen on the subscription (if this is\na subscription to all events).\n"
  example: []
  syntax:
    content: public readonly long LastCommitPosition
    return:
      type: System.Int64
    content.vb: Public ReadOnly LastCommitPosition As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.EventStoreSubscription.LastEventNumber
  commentId: F:EventStore.ClientAPI.EventStoreSubscription.LastEventNumber
  id: LastEventNumber
  parent: EventStore.ClientAPI.EventStoreSubscription
  langs:
  - csharp
  - vb
  name: LastEventNumber
  nameWithType: EventStoreSubscription.LastEventNumber
  fullName: EventStore.ClientAPI.EventStoreSubscription.LastEventNumber
  type: Field
  source:
    id: LastEventNumber
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventStoreSubscription.cs
    startLine: 30
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe last event number seen on the subscription (if this is a\nsubscription to a single stream).\n"
  example: []
  syntax:
    content: public readonly long? LastEventNumber
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public ReadOnly LastEventNumber As Long?
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.EventStoreSubscription.Dispose
  commentId: M:EventStore.ClientAPI.EventStoreSubscription.Dispose
  id: Dispose
  parent: EventStore.ClientAPI.EventStoreSubscription
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: EventStoreSubscription.Dispose()
  fullName: EventStore.ClientAPI.EventStoreSubscription.Dispose()
  type: Method
  source:
    id: Dispose
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventStoreSubscription.cs
    startLine: 41
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nUnsubscribes from the stream.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: EventStore.ClientAPI.EventStoreSubscription.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.EventStoreSubscription.Close
  commentId: M:EventStore.ClientAPI.EventStoreSubscription.Close
  id: Close
  parent: EventStore.ClientAPI.EventStoreSubscription
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: EventStoreSubscription.Close()
  fullName: EventStore.ClientAPI.EventStoreSubscription.Close()
  type: Method
  source:
    id: Close
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventStoreSubscription.cs
    startLine: 48
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nUnsubscribes from the stream.\n"
  example: []
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  overload: EventStore.ClientAPI.EventStoreSubscription.Close*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.EventStoreSubscription.Unsubscribe
  commentId: M:EventStore.ClientAPI.EventStoreSubscription.Unsubscribe
  id: Unsubscribe
  parent: EventStore.ClientAPI.EventStoreSubscription
  langs:
  - csharp
  - vb
  name: Unsubscribe()
  nameWithType: EventStoreSubscription.Unsubscribe()
  fullName: EventStore.ClientAPI.EventStoreSubscription.Unsubscribe()
  type: Method
  source:
    id: Unsubscribe
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/EventStoreSubscription.cs
    startLine: 55
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nUnsubscribes from the stream\n"
  example: []
  syntax:
    content: public abstract void Unsubscribe()
    content.vb: Public MustOverride Sub Unsubscribe
  overload: EventStore.ClientAPI.EventStoreSubscription.Unsubscribe*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.ClientAPI.EventStoreSubscription.IsSubscribedToAll*
  commentId: Overload:EventStore.ClientAPI.EventStoreSubscription.IsSubscribedToAll
  name: IsSubscribedToAll
  nameWithType: EventStoreSubscription.IsSubscribedToAll
  fullName: EventStore.ClientAPI.EventStoreSubscription.IsSubscribedToAll
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.ClientAPI.EventStoreSubscription.StreamId*
  commentId: Overload:EventStore.ClientAPI.EventStoreSubscription.StreamId
  name: StreamId
  nameWithType: EventStoreSubscription.StreamId
  fullName: EventStore.ClientAPI.EventStoreSubscription.StreamId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.EventStoreSubscription.Dispose*
  commentId: Overload:EventStore.ClientAPI.EventStoreSubscription.Dispose
  name: Dispose
  nameWithType: EventStoreSubscription.Dispose
  fullName: EventStore.ClientAPI.EventStoreSubscription.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.EventStoreSubscription.Close*
  commentId: Overload:EventStore.ClientAPI.EventStoreSubscription.Close
  name: Close
  nameWithType: EventStoreSubscription.Close
  fullName: EventStore.ClientAPI.EventStoreSubscription.Close
- uid: EventStore.ClientAPI.EventStoreSubscription.Unsubscribe*
  commentId: Overload:EventStore.ClientAPI.EventStoreSubscription.Unsubscribe
  name: Unsubscribe
  nameWithType: EventStoreSubscription.Unsubscribe
  fullName: EventStore.ClientAPI.EventStoreSubscription.Unsubscribe

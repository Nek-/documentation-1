### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.Exceptions.ClusterException
  commentId: T:EventStore.ClientAPI.Exceptions.ClusterException
  id: ClusterException
  parent: EventStore.ClientAPI.Exceptions
  children:
  - EventStore.ClientAPI.Exceptions.ClusterException.#ctor
  - EventStore.ClientAPI.Exceptions.ClusterException.#ctor(SerializationInfo,StreamingContext)
  - EventStore.ClientAPI.Exceptions.ClusterException.#ctor(System.String)
  - EventStore.ClientAPI.Exceptions.ClusterException.#ctor(System.String,Exception)
  langs:
  - csharp
  - vb
  name: ClusterException
  nameWithType: ClusterException
  fullName: EventStore.ClientAPI.Exceptions.ClusterException
  type: Class
  source:
    remote:
      path: src/EventStore.ClientAPI/Exceptions/ClusterException.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ClusterException
    path: ../EventStore/src/EventStore.ClientAPI/Exceptions/ClusterException.cs
    startLine: 7
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Exceptions
  summary: "\nException thrown if cluster discovery fails.\n"
  example: []
  syntax:
    content: 'public class ClusterException : EventStoreConnectionException'
    content.vb: >-
      Public Class ClusterException
          Inherits EventStoreConnectionException
  inheritance:
  - System.Object
  - EventStore.ClientAPI.Exceptions.EventStoreConnectionException
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.Exceptions.ClusterException.#ctor
  commentId: M:EventStore.ClientAPI.Exceptions.ClusterException.#ctor
  id: '#ctor'
  parent: EventStore.ClientAPI.Exceptions.ClusterException
  langs:
  - csharp
  - vb
  name: ClusterException()
  nameWithType: ClusterException.ClusterException()
  fullName: EventStore.ClientAPI.Exceptions.ClusterException.ClusterException()
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/Exceptions/ClusterException.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/Exceptions/ClusterException.cs
    startLine: 11
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Exceptions
  summary: "\nConstructs a new <xref href=\"EventStore.ClientAPI.Exceptions.ClusterException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ClusterException()
    content.vb: Public Sub New
  overload: EventStore.ClientAPI.Exceptions.ClusterException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.Exceptions.ClusterException.#ctor(System.String)
  commentId: M:EventStore.ClientAPI.Exceptions.ClusterException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: EventStore.ClientAPI.Exceptions.ClusterException
  langs:
  - csharp
  - vb
  name: ClusterException(String)
  nameWithType: ClusterException.ClusterException(String)
  fullName: EventStore.ClientAPI.Exceptions.ClusterException.ClusterException(System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/Exceptions/ClusterException.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/Exceptions/ClusterException.cs
    startLine: 17
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Exceptions
  summary: "\nConstructs a new <xref href=\"EventStore.ClientAPI.Exceptions.ClusterException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ClusterException(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub New(message As String)
  overload: EventStore.ClientAPI.Exceptions.ClusterException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.Exceptions.ClusterException.#ctor(System.String,Exception)
  commentId: M:EventStore.ClientAPI.Exceptions.ClusterException.#ctor(System.String,Exception)
  id: '#ctor(System.String,Exception)'
  parent: EventStore.ClientAPI.Exceptions.ClusterException
  langs:
  - csharp
  - vb
  name: ClusterException(String, Exception)
  nameWithType: ClusterException.ClusterException(String, Exception)
  fullName: EventStore.ClientAPI.Exceptions.ClusterException.ClusterException(System.String, Exception)
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/Exceptions/ClusterException.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/Exceptions/ClusterException.cs
    startLine: 24
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Exceptions
  summary: "\nConstructs a new <xref href=\"EventStore.ClientAPI.Exceptions.ClusterException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ClusterException(string message, Exception innerException)
    parameters:
    - id: message
      type: System.String
    - id: innerException
      type: Exception
    content.vb: Public Sub New(message As String, innerException As Exception)
  overload: EventStore.ClientAPI.Exceptions.ClusterException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.Exceptions.ClusterException.#ctor(SerializationInfo,StreamingContext)
  commentId: M:EventStore.ClientAPI.Exceptions.ClusterException.#ctor(SerializationInfo,StreamingContext)
  id: '#ctor(SerializationInfo,StreamingContext)'
  parent: EventStore.ClientAPI.Exceptions.ClusterException
  langs:
  - csharp
  - vb
  name: ClusterException(SerializationInfo, StreamingContext)
  nameWithType: ClusterException.ClusterException(SerializationInfo, StreamingContext)
  fullName: EventStore.ClientAPI.Exceptions.ClusterException.ClusterException(SerializationInfo, StreamingContext)
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/Exceptions/ClusterException.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/Exceptions/ClusterException.cs
    startLine: 31
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Exceptions
  summary: "\nConstructs a new <xref href=\"EventStore.ClientAPI.Exceptions.ClusterException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected ClusterException(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: SerializationInfo
    - id: context
      type: StreamingContext
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
  overload: EventStore.ClientAPI.Exceptions.ClusterException.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: EventStore.ClientAPI.Exceptions
  commentId: N:EventStore.ClientAPI.Exceptions
  name: EventStore.ClientAPI.Exceptions
  nameWithType: EventStore.ClientAPI.Exceptions
  fullName: EventStore.ClientAPI.Exceptions
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.ClientAPI.Exceptions.EventStoreConnectionException
  commentId: T:EventStore.ClientAPI.Exceptions.EventStoreConnectionException
  parent: EventStore.ClientAPI.Exceptions
  name: EventStoreConnectionException
  nameWithType: EventStoreConnectionException
  fullName: EventStore.ClientAPI.Exceptions.EventStoreConnectionException
- uid: EventStore.ClientAPI.Exceptions.ClusterException
  commentId: T:EventStore.ClientAPI.Exceptions.ClusterException
  name: ClusterException
  nameWithType: ClusterException
  fullName: EventStore.ClientAPI.Exceptions.ClusterException
- uid: EventStore.ClientAPI.Exceptions.ClusterException.#ctor*
  commentId: Overload:EventStore.ClientAPI.Exceptions.ClusterException.#ctor
  name: ClusterException
  nameWithType: ClusterException.ClusterException
  fullName: EventStore.ClientAPI.Exceptions.ClusterException.ClusterException
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: SerializationInfo
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: SerializationInfo
- uid: StreamingContext
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: StreamingContext

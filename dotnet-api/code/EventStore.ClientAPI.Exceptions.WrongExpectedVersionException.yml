### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException
  commentId: T:EventStore.ClientAPI.Exceptions.WrongExpectedVersionException
  id: WrongExpectedVersionException
  parent: EventStore.ClientAPI.Exceptions
  children:
  - EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor(SerializationInfo,StreamingContext)
  - EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor(System.String)
  - EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor(System.String,Exception)
  - EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})
  - EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.ActualVersion
  - EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.ExpectedVersion
  langs:
  - csharp
  - vb
  name: WrongExpectedVersionException
  nameWithType: WrongExpectedVersionException
  fullName: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException
  type: Class
  source:
    remote:
      path: src/EventStore.ClientAPI/Exceptions/WrongExpectedVersionException.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: WrongExpectedVersionException
    path: ../EventStore/src/EventStore.ClientAPI/Exceptions/WrongExpectedVersionException.cs
    startLine: 8
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Exceptions
  summary: "\nException thrown if the expected version specified on an operation\ndoes not match the version of the stream when the operation was attempted. \n"
  example: []
  syntax:
    content: 'public class WrongExpectedVersionException : EventStoreConnectionException'
    content.vb: >-
      Public Class WrongExpectedVersionException
          Inherits EventStoreConnectionException
  inheritance:
  - System.Object
  - EventStore.ClientAPI.Exceptions.EventStoreConnectionException
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.ExpectedVersion
  commentId: P:EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.ExpectedVersion
  id: ExpectedVersion
  parent: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException
  langs:
  - csharp
  - vb
  name: ExpectedVersion
  nameWithType: WrongExpectedVersionException.ExpectedVersion
  fullName: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.ExpectedVersion
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/Exceptions/WrongExpectedVersionException.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ExpectedVersion
    path: ../EventStore/src/EventStore.ClientAPI/Exceptions/WrongExpectedVersionException.cs
    startLine: 13
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Exceptions
  summary: "\nIf available, the expected version specified for the operation that failed.\n"
  remarks: Only available if the operation was <xref href="EventStore.ClientAPI.IEventStoreConnection.AppendToStreamAsync(System.String%2cSystem.Int64%2cEventStore.ClientAPI.EventData%5b%5d)" data-throw-if-not-resolved="false"></xref> or one of it&apos;s overloads.
  example: []
  syntax:
    content: public long? ExpectedVersion { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public ReadOnly Property ExpectedVersion As Long?
  overload: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.ExpectedVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.ActualVersion
  commentId: P:EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.ActualVersion
  id: ActualVersion
  parent: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException
  langs:
  - csharp
  - vb
  name: ActualVersion
  nameWithType: WrongExpectedVersionException.ActualVersion
  fullName: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.ActualVersion
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/Exceptions/WrongExpectedVersionException.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ActualVersion
    path: ../EventStore/src/EventStore.ClientAPI/Exceptions/WrongExpectedVersionException.cs
    startLine: 19
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Exceptions
  summary: "\nIf available, the current version of the stream that the operation was attempted on.\n"
  remarks: Only available if the operation was <xref href="EventStore.ClientAPI.IEventStoreConnection.AppendToStreamAsync(System.String%2cSystem.Int64%2cEventStore.ClientAPI.EventData%5b%5d)" data-throw-if-not-resolved="false"></xref> or one of it&apos;s overloads.
  example: []
  syntax:
    content: public long? ActualVersion { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public ReadOnly Property ActualVersion As Long?
  overload: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.ActualVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor(System.String)
  commentId: M:EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException
  langs:
  - csharp
  - vb
  name: WrongExpectedVersionException(String)
  nameWithType: WrongExpectedVersionException.WrongExpectedVersionException(String)
  fullName: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.WrongExpectedVersionException(System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/Exceptions/WrongExpectedVersionException.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/Exceptions/WrongExpectedVersionException.cs
    startLine: 24
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Exceptions
  summary: "\nConstructs a new instance of <xref href=\"EventStore.ClientAPI.Exceptions.WrongExpectedVersionException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public WrongExpectedVersionException(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub New(message As String)
  overload: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})
  commentId: M:EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})
  id: '#ctor(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})'
  parent: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException
  langs:
  - csharp
  - vb
  name: WrongExpectedVersionException(String, Nullable<Int64>, Nullable<Int64>)
  nameWithType: WrongExpectedVersionException.WrongExpectedVersionException(String, Nullable<Int64>, Nullable<Int64>)
  fullName: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.WrongExpectedVersionException(System.String, System.Nullable<System.Int64>, System.Nullable<System.Int64>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/Exceptions/WrongExpectedVersionException.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/Exceptions/WrongExpectedVersionException.cs
    startLine: 30
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Exceptions
  summary: "\nConstructs a new instance of <xref href=\"EventStore.ClientAPI.Exceptions.WrongExpectedVersionException\" data-throw-if-not-resolved=\"false\"></xref> with the expected and actual versions if available.\n"
  example: []
  syntax:
    content: public WrongExpectedVersionException(string message, long? expectedVersion, long? actualVersion)
    parameters:
    - id: message
      type: System.String
    - id: expectedVersion
      type: System.Nullable{System.Int64}
    - id: actualVersion
      type: System.Nullable{System.Int64}
    content.vb: Public Sub New(message As String, expectedVersion As Long?, actualVersion As Long?)
  overload: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor*
  nameWithType.vb: WrongExpectedVersionException.WrongExpectedVersionException(String, Nullable(Of Int64), Nullable(Of Int64))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.WrongExpectedVersionException(System.String, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64))
  name.vb: WrongExpectedVersionException(String, Nullable(Of Int64), Nullable(Of Int64))
- uid: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor(System.String,Exception)
  commentId: M:EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor(System.String,Exception)
  id: '#ctor(System.String,Exception)'
  parent: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException
  langs:
  - csharp
  - vb
  name: WrongExpectedVersionException(String, Exception)
  nameWithType: WrongExpectedVersionException.WrongExpectedVersionException(String, Exception)
  fullName: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.WrongExpectedVersionException(System.String, Exception)
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/Exceptions/WrongExpectedVersionException.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/Exceptions/WrongExpectedVersionException.cs
    startLine: 39
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Exceptions
  summary: "\nConstructs a new instance of <xref href=\"EventStore.ClientAPI.Exceptions.WrongExpectedVersionException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public WrongExpectedVersionException(string message, Exception innerException)
    parameters:
    - id: message
      type: System.String
    - id: innerException
      type: Exception
    content.vb: Public Sub New(message As String, innerException As Exception)
  overload: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor(SerializationInfo,StreamingContext)
  commentId: M:EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor(SerializationInfo,StreamingContext)
  id: '#ctor(SerializationInfo,StreamingContext)'
  parent: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException
  langs:
  - csharp
  - vb
  name: WrongExpectedVersionException(SerializationInfo, StreamingContext)
  nameWithType: WrongExpectedVersionException.WrongExpectedVersionException(SerializationInfo, StreamingContext)
  fullName: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.WrongExpectedVersionException(SerializationInfo, StreamingContext)
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/Exceptions/WrongExpectedVersionException.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/Exceptions/WrongExpectedVersionException.cs
    startLine: 45
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Exceptions
  summary: "\nConstructs a new instance of <xref href=\"EventStore.ClientAPI.Exceptions.WrongExpectedVersionException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected WrongExpectedVersionException(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: SerializationInfo
    - id: context
      type: StreamingContext
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
  overload: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: EventStore.ClientAPI.Exceptions
  commentId: N:EventStore.ClientAPI.Exceptions
  name: EventStore.ClientAPI.Exceptions
  nameWithType: EventStore.ClientAPI.Exceptions
  fullName: EventStore.ClientAPI.Exceptions
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.ClientAPI.Exceptions.EventStoreConnectionException
  commentId: T:EventStore.ClientAPI.Exceptions.EventStoreConnectionException
  parent: EventStore.ClientAPI.Exceptions
  name: EventStoreConnectionException
  nameWithType: EventStoreConnectionException
  fullName: EventStore.ClientAPI.Exceptions.EventStoreConnectionException
- uid: EventStore.ClientAPI.IEventStoreConnection.AppendToStreamAsync(System.String,System.Int64,EventStore.ClientAPI.EventData[])
  commentId: M:EventStore.ClientAPI.IEventStoreConnection.AppendToStreamAsync(System.String,System.Int64,EventStore.ClientAPI.EventData[])
  isExternal: true
- uid: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.ExpectedVersion*
  commentId: Overload:EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.ExpectedVersion
  name: ExpectedVersion
  nameWithType: WrongExpectedVersionException.ExpectedVersion
  fullName: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.ExpectedVersion
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.ActualVersion*
  commentId: Overload:EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.ActualVersion
  name: ActualVersion
  nameWithType: WrongExpectedVersionException.ActualVersion
  fullName: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.ActualVersion
- uid: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException
  commentId: T:EventStore.ClientAPI.Exceptions.WrongExpectedVersionException
  name: WrongExpectedVersionException
  nameWithType: WrongExpectedVersionException
  fullName: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException
- uid: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor*
  commentId: Overload:EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.#ctor
  name: WrongExpectedVersionException
  nameWithType: WrongExpectedVersionException.WrongExpectedVersionException
  fullName: EventStore.ClientAPI.Exceptions.WrongExpectedVersionException.WrongExpectedVersionException
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: SerializationInfo
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: SerializationInfo
- uid: StreamingContext
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: StreamingContext

### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.Filter
  commentId: T:EventStore.ClientAPI.Filter
  id: Filter
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.Filter.EventType
  - EventStore.ClientAPI.Filter.ExcludeSystemEvents
  - EventStore.ClientAPI.Filter.StreamId
  - EventStore.ClientAPI.Filter.ToString
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: Filter
  fullName: EventStore.ClientAPI.Filter
  type: Class
  source:
    id: Filter
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Filter.cs
    startLine: 7
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nA Filter, used to filter events when reading from the $all stream.\n"
  example: []
  syntax:
    content: 'public class Filter : object'
    content.vb: >-
      Public Class Filter
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.Filter.EventType
  commentId: P:EventStore.ClientAPI.Filter.EventType
  id: EventType
  parent: EventStore.ClientAPI.Filter
  langs:
  - csharp
  - vb
  name: EventType
  nameWithType: Filter.EventType
  fullName: EventStore.ClientAPI.Filter.EventType
  type: Property
  source:
    id: EventType
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Filter.cs
    startLine: 17
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nFilters by EventType.\n"
  example: []
  syntax:
    content: public static FilterContext EventType { get; }
    parameters: []
    return:
      type: EventStore.ClientAPI.FilterContext
    content.vb: Public Shared ReadOnly Property EventType As FilterContext
  overload: EventStore.ClientAPI.Filter.EventType*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.ClientAPI.Filter.StreamId
  commentId: P:EventStore.ClientAPI.Filter.StreamId
  id: StreamId
  parent: EventStore.ClientAPI.Filter
  langs:
  - csharp
  - vb
  name: StreamId
  nameWithType: Filter.StreamId
  fullName: EventStore.ClientAPI.Filter.StreamId
  type: Property
  source:
    id: StreamId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Filter.cs
    startLine: 21
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nFilters by StreamId.\n"
  example: []
  syntax:
    content: public static FilterContext StreamId { get; }
    parameters: []
    return:
      type: EventStore.ClientAPI.FilterContext
    content.vb: Public Shared ReadOnly Property StreamId As FilterContext
  overload: EventStore.ClientAPI.Filter.StreamId*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.ClientAPI.Filter.ExcludeSystemEvents
  commentId: P:EventStore.ClientAPI.Filter.ExcludeSystemEvents
  id: ExcludeSystemEvents
  parent: EventStore.ClientAPI.Filter
  langs:
  - csharp
  - vb
  name: ExcludeSystemEvents
  nameWithType: Filter.ExcludeSystemEvents
  fullName: EventStore.ClientAPI.Filter.ExcludeSystemEvents
  type: Property
  source:
    id: ExcludeSystemEvents
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Filter.cs
    startLine: 26
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nA <xref href=\"EventStore.ClientAPI.Filter\" data-throw-if-not-resolved=\"false\"></xref> that excludes all system events.\n"
  example: []
  syntax:
    content: public static Filter ExcludeSystemEvents { get; }
    parameters: []
    return:
      type: EventStore.ClientAPI.Filter
    content.vb: Public Shared ReadOnly Property ExcludeSystemEvents As Filter
  overload: EventStore.ClientAPI.Filter.ExcludeSystemEvents*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.ClientAPI.Filter.ToString
  commentId: M:EventStore.ClientAPI.Filter.ToString
  id: ToString
  parent: EventStore.ClientAPI.Filter
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Filter.ToString()
  fullName: EventStore.ClientAPI.Filter.ToString()
  type: Method
  source:
    id: ToString
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Filter.cs
    startLine: 30
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.ClientAPI.Filter.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.ClientAPI.Filter.EventType*
  commentId: Overload:EventStore.ClientAPI.Filter.EventType
  name: EventType
  nameWithType: Filter.EventType
  fullName: EventStore.ClientAPI.Filter.EventType
- uid: EventStore.ClientAPI.FilterContext
  commentId: T:EventStore.ClientAPI.FilterContext
  parent: EventStore.ClientAPI
  name: FilterContext
  nameWithType: FilterContext
  fullName: EventStore.ClientAPI.FilterContext
- uid: EventStore.ClientAPI.Filter.StreamId*
  commentId: Overload:EventStore.ClientAPI.Filter.StreamId
  name: StreamId
  nameWithType: Filter.StreamId
  fullName: EventStore.ClientAPI.Filter.StreamId
- uid: EventStore.ClientAPI.Filter
  commentId: T:EventStore.ClientAPI.Filter
  parent: EventStore.ClientAPI
  name: Filter
  nameWithType: Filter
  fullName: EventStore.ClientAPI.Filter
- uid: EventStore.ClientAPI.Filter.ExcludeSystemEvents*
  commentId: Overload:EventStore.ClientAPI.Filter.ExcludeSystemEvents
  name: ExcludeSystemEvents
  nameWithType: Filter.ExcludeSystemEvents
  fullName: EventStore.ClientAPI.Filter.ExcludeSystemEvents
- uid: EventStore.ClientAPI.Filter.ToString*
  commentId: Overload:EventStore.ClientAPI.Filter.ToString
  name: ToString
  nameWithType: Filter.ToString
  fullName: EventStore.ClientAPI.Filter.ToString
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

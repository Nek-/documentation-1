### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.FilterContext
  commentId: T:EventStore.ClientAPI.FilterContext
  id: FilterContext
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.FilterContext.Prefix(System.String[])
  - EventStore.ClientAPI.FilterContext.Regex(System.Text.RegularExpressions.Regex)
  langs:
  - csharp
  - vb
  name: FilterContext
  nameWithType: FilterContext
  fullName: EventStore.ClientAPI.FilterContext
  type: Class
  source:
    id: FilterContext
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Filter.cs
    startLine: 38
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nA filter context.\n"
  example: []
  syntax:
    content: public class FilterContext
    content.vb: Public Class FilterContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.FilterContext.Regex(System.Text.RegularExpressions.Regex)
  commentId: M:EventStore.ClientAPI.FilterContext.Regex(System.Text.RegularExpressions.Regex)
  id: Regex(System.Text.RegularExpressions.Regex)
  parent: EventStore.ClientAPI.FilterContext
  langs:
  - csharp
  - vb
  name: Regex(Regex)
  nameWithType: FilterContext.Regex(Regex)
  fullName: EventStore.ClientAPI.FilterContext.Regex(System.Text.RegularExpressions.Regex)
  type: Method
  source:
    id: Regex
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Filter.cs
    startLine: 49
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nFilters by <xref href=\"EventStore.ClientAPI.FilterContext.Regex(System.Text.RegularExpressions.Regex)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Filter Regex(Regex regex)
    parameters:
    - id: regex
      type: System.Text.RegularExpressions.Regex
      description: ''
    return:
      type: EventStore.ClientAPI.Filter
      description: ''
    content.vb: Public Function Regex(regex As Regex) As Filter
  overload: EventStore.ClientAPI.FilterContext.Regex*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.FilterContext.Prefix(System.String[])
  commentId: M:EventStore.ClientAPI.FilterContext.Prefix(System.String[])
  id: Prefix(System.String[])
  parent: EventStore.ClientAPI.FilterContext
  langs:
  - csharp
  - vb
  name: Prefix(String[])
  nameWithType: FilterContext.Prefix(String[])
  fullName: EventStore.ClientAPI.FilterContext.Prefix(System.String[])
  type: Method
  source:
    id: Prefix
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Filter.cs
    startLine: 58
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nFilters by starting-with.\n"
  example: []
  syntax:
    content: public Filter Prefix(params string[] prefixes)
    parameters:
    - id: prefixes
      type: System.String[]
      description: ''
    return:
      type: EventStore.ClientAPI.Filter
      description: ''
    content.vb: Public Function Prefix(ParamArray prefixes As String()) As Filter
  overload: EventStore.ClientAPI.FilterContext.Prefix*
  nameWithType.vb: FilterContext.Prefix(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.FilterContext.Prefix(System.String())
  name.vb: Prefix(String())
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.ClientAPI.FilterContext.Regex(System.Text.RegularExpressions.Regex)
  commentId: M:EventStore.ClientAPI.FilterContext.Regex(System.Text.RegularExpressions.Regex)
  isExternal: true
- uid: EventStore.ClientAPI.FilterContext.Regex*
  commentId: Overload:EventStore.ClientAPI.FilterContext.Regex
  name: Regex
  nameWithType: FilterContext.Regex
  fullName: EventStore.ClientAPI.FilterContext.Regex
- uid: System.Text.RegularExpressions.Regex
  commentId: T:System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: EventStore.ClientAPI.Filter
  commentId: T:EventStore.ClientAPI.Filter
  parent: EventStore.ClientAPI
  name: Filter
  nameWithType: Filter
  fullName: EventStore.ClientAPI.Filter
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: true
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
- uid: EventStore.ClientAPI.FilterContext.Prefix*
  commentId: Overload:EventStore.ClientAPI.FilterContext.Prefix
  name: Prefix
  nameWithType: FilterContext.Prefix
  fullName: EventStore.ClientAPI.FilterContext.Prefix
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()

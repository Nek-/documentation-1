### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.NodeEndPoints
  commentId: T:EventStore.ClientAPI.NodeEndPoints
  id: NodeEndPoints
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.NodeEndPoints.#ctor(IPEndPoint,IPEndPoint)
  - EventStore.ClientAPI.NodeEndPoints.SecureTcpEndPoint
  - EventStore.ClientAPI.NodeEndPoints.TcpEndPoint
  - EventStore.ClientAPI.NodeEndPoints.ToString
  langs:
  - csharp
  - vb
  name: NodeEndPoints
  nameWithType: NodeEndPoints
  fullName: EventStore.ClientAPI.NodeEndPoints
  type: Struct
  source:
    remote:
      path: src/EventStore.ClientAPI/NodeEndPoints.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: NodeEndPoints
    path: ../EventStore/src/EventStore.ClientAPI/NodeEndPoints.cs
    startLine: 8
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRepresents a node and its possible endpoints\n"
  example: []
  syntax:
    content: public struct NodeEndPoints
    content.vb: Public Structure NodeEndPoints
  extensionMethods:
  - EventStore.ClientAPI.NodeEndPoints.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.ClientAPI.NodeEndPoints.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.ClientAPI.NodeEndPoints.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.ClientAPI.NodeEndPoints.TcpEndPoint
  commentId: F:EventStore.ClientAPI.NodeEndPoints.TcpEndPoint
  id: TcpEndPoint
  parent: EventStore.ClientAPI.NodeEndPoints
  langs:
  - csharp
  - vb
  name: TcpEndPoint
  nameWithType: NodeEndPoints.TcpEndPoint
  fullName: EventStore.ClientAPI.NodeEndPoints.TcpEndPoint
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/NodeEndPoints.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: TcpEndPoint
    path: ../EventStore/src/EventStore.ClientAPI/NodeEndPoints.cs
    startLine: 14
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe tcp endpoint of the node.\n"
  example: []
  syntax:
    content: public readonly IPEndPoint TcpEndPoint
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly TcpEndPoint As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.NodeEndPoints.SecureTcpEndPoint
  commentId: F:EventStore.ClientAPI.NodeEndPoints.SecureTcpEndPoint
  id: SecureTcpEndPoint
  parent: EventStore.ClientAPI.NodeEndPoints
  langs:
  - csharp
  - vb
  name: SecureTcpEndPoint
  nameWithType: NodeEndPoints.SecureTcpEndPoint
  fullName: EventStore.ClientAPI.NodeEndPoints.SecureTcpEndPoint
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/NodeEndPoints.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: SecureTcpEndPoint
    path: ../EventStore/src/EventStore.ClientAPI/NodeEndPoints.cs
    startLine: 18
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe ssl endpoint of the node\n"
  example: []
  syntax:
    content: public readonly IPEndPoint SecureTcpEndPoint
    return:
      type: IPEndPoint
    content.vb: Public ReadOnly SecureTcpEndPoint As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.NodeEndPoints.#ctor(IPEndPoint,IPEndPoint)
  commentId: M:EventStore.ClientAPI.NodeEndPoints.#ctor(IPEndPoint,IPEndPoint)
  id: '#ctor(IPEndPoint,IPEndPoint)'
  parent: EventStore.ClientAPI.NodeEndPoints
  langs:
  - csharp
  - vb
  name: NodeEndPoints(IPEndPoint, IPEndPoint)
  nameWithType: NodeEndPoints.NodeEndPoints(IPEndPoint, IPEndPoint)
  fullName: EventStore.ClientAPI.NodeEndPoints.NodeEndPoints(IPEndPoint, IPEndPoint)
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/NodeEndPoints.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/NodeEndPoints.cs
    startLine: 26
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nCalled to create a new NodeEndPoints\n"
  example: []
  syntax:
    content: public NodeEndPoints(IPEndPoint tcpEndPoint, IPEndPoint secureTcpEndPoint)
    parameters:
    - id: tcpEndPoint
      type: IPEndPoint
      description: The tcp endpoint of the node
    - id: secureTcpEndPoint
      type: IPEndPoint
      description: The ssl endpoint of the node
    content.vb: Public Sub New(tcpEndPoint As IPEndPoint, secureTcpEndPoint As IPEndPoint)
  overload: EventStore.ClientAPI.NodeEndPoints.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.NodeEndPoints.ToString
  commentId: M:EventStore.ClientAPI.NodeEndPoints.ToString
  id: ToString
  parent: EventStore.ClientAPI.NodeEndPoints
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: NodeEndPoints.ToString()
  fullName: EventStore.ClientAPI.NodeEndPoints.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/NodeEndPoints.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.ClientAPI/NodeEndPoints.cs
    startLine: 36
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nFormats the endpoints as a string\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.ClientAPI.NodeEndPoints.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: EventStore.ClientAPI.NodeEndPoints.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<NodeEndPoints>()
  nameWithType: EnumExtensions.EnumValueName<NodeEndPoints>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.ClientAPI.NodeEndPoints>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of NodeEndPoints)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.ClientAPI.NodeEndPoints)()
  name.vb: EnumValueName(Of NodeEndPoints)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<NodeEndPoints>
    nameWithType: EnumExtensions.EnumValueName<NodeEndPoints>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.ClientAPI.NodeEndPoints>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of NodeEndPoints)
    nameWithType: EnumExtensions.EnumValueName(Of NodeEndPoints)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.ClientAPI.NodeEndPoints)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.NodeEndPoints.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<NodeEndPoints>()
  nameWithType: ProtobufExtensions.Serialize<NodeEndPoints>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.ClientAPI.NodeEndPoints>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of NodeEndPoints)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.ClientAPI.NodeEndPoints)()
  name.vb: Serialize(Of NodeEndPoints)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<NodeEndPoints>
    nameWithType: ProtobufExtensions.Serialize<NodeEndPoints>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.ClientAPI.NodeEndPoints>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of NodeEndPoints)
    nameWithType: ProtobufExtensions.Serialize(Of NodeEndPoints)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.ClientAPI.NodeEndPoints)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.NodeEndPoints.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<NodeEndPoints>()
  nameWithType: ProtobufExtensions.SerializeToArray<NodeEndPoints>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.ClientAPI.NodeEndPoints>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of NodeEndPoints)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.ClientAPI.NodeEndPoints)()
  name.vb: SerializeToArray(Of NodeEndPoints)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<NodeEndPoints>
    nameWithType: ProtobufExtensions.SerializeToArray<NodeEndPoints>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.ClientAPI.NodeEndPoints>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of NodeEndPoints)
    nameWithType: ProtobufExtensions.SerializeToArray(Of NodeEndPoints)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.ClientAPI.NodeEndPoints)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: IPEndPoint
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: IPEndPoint
- uid: EventStore.ClientAPI.NodeEndPoints.#ctor*
  commentId: Overload:EventStore.ClientAPI.NodeEndPoints.#ctor
  name: NodeEndPoints
  nameWithType: NodeEndPoints.NodeEndPoints
  fullName: EventStore.ClientAPI.NodeEndPoints.NodeEndPoints
- uid: EventStore.ClientAPI.NodeEndPoints.ToString*
  commentId: Overload:EventStore.ClientAPI.NodeEndPoints.ToString
  name: ToString
  nameWithType: NodeEndPoints.ToString
  fullName: EventStore.ClientAPI.NodeEndPoints.ToString
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

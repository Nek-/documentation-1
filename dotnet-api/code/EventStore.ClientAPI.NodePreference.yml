### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.NodePreference
  commentId: T:EventStore.ClientAPI.NodePreference
  id: NodePreference
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.NodePreference.Follower
  - EventStore.ClientAPI.NodePreference.Leader
  - EventStore.ClientAPI.NodePreference.Random
  - EventStore.ClientAPI.NodePreference.ReadOnlyReplica
  langs:
  - csharp
  - vb
  name: NodePreference
  nameWithType: NodePreference
  fullName: EventStore.ClientAPI.NodePreference
  type: Enum
  source:
    remote:
      path: src/EventStore.ClientAPI/NodePreference.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: NodePreference
    path: ../EventStore/src/EventStore.ClientAPI/NodePreference.cs
    startLine: 4
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nIndicates which order of preferred nodes for connecting to.\n"
  example: []
  syntax:
    content: public enum NodePreference
    content.vb: Public Enum NodePreference
  extensionMethods:
  - EventStore.ClientAPI.NodePreference.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.ClientAPI.NodePreference.Leader
  commentId: F:EventStore.ClientAPI.NodePreference.Leader
  id: Leader
  parent: EventStore.ClientAPI.NodePreference
  langs:
  - csharp
  - vb
  name: Leader
  nameWithType: NodePreference.Leader
  fullName: EventStore.ClientAPI.NodePreference.Leader
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/NodePreference.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Leader
    path: ../EventStore/src/EventStore.ClientAPI/NodePreference.cs
    startLine: 8
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nWhen attempting connnection, prefers leader node.\n"
  example: []
  syntax:
    content: Leader = 0
    return:
      type: EventStore.ClientAPI.NodePreference
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.NodePreference.Follower
  commentId: F:EventStore.ClientAPI.NodePreference.Follower
  id: Follower
  parent: EventStore.ClientAPI.NodePreference
  langs:
  - csharp
  - vb
  name: Follower
  nameWithType: NodePreference.Follower
  fullName: EventStore.ClientAPI.NodePreference.Follower
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/NodePreference.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Follower
    path: ../EventStore/src/EventStore.ClientAPI/NodePreference.cs
    startLine: 13
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nWhen attempting connnection, prefers follower node.\n"
  example: []
  syntax:
    content: Follower = 1
    return:
      type: EventStore.ClientAPI.NodePreference
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.NodePreference.Random
  commentId: F:EventStore.ClientAPI.NodePreference.Random
  id: Random
  parent: EventStore.ClientAPI.NodePreference
  langs:
  - csharp
  - vb
  name: Random
  nameWithType: NodePreference.Random
  fullName: EventStore.ClientAPI.NodePreference.Random
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/NodePreference.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Random
    path: ../EventStore/src/EventStore.ClientAPI/NodePreference.cs
    startLine: 18
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nWhen attempting connnection, has no node preference.\n"
  example: []
  syntax:
    content: Random = 2
    return:
      type: EventStore.ClientAPI.NodePreference
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.NodePreference.ReadOnlyReplica
  commentId: F:EventStore.ClientAPI.NodePreference.ReadOnlyReplica
  id: ReadOnlyReplica
  parent: EventStore.ClientAPI.NodePreference
  langs:
  - csharp
  - vb
  name: ReadOnlyReplica
  nameWithType: NodePreference.ReadOnlyReplica
  fullName: EventStore.ClientAPI.NodePreference.ReadOnlyReplica
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/NodePreference.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ReadOnlyReplica
    path: ../EventStore/src/EventStore.ClientAPI/NodePreference.cs
    startLine: 23
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nWhen attempting connection, prefers read only replicas.\n"
  example: []
  syntax:
    content: ReadOnlyReplica = 3
    return:
      type: EventStore.ClientAPI.NodePreference
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: EventStore.ClientAPI.NodePreference.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<NodePreference>()
  nameWithType: EnumExtensions.EnumValueName<NodePreference>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.ClientAPI.NodePreference>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of NodePreference)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.ClientAPI.NodePreference)()
  name.vb: EnumValueName(Of NodePreference)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<NodePreference>
    nameWithType: EnumExtensions.EnumValueName<NodePreference>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.ClientAPI.NodePreference>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of NodePreference)
    nameWithType: EnumExtensions.EnumValueName(Of NodePreference)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.ClientAPI.NodePreference)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.ClientAPI.NodePreference
  commentId: T:EventStore.ClientAPI.NodePreference
  parent: EventStore.ClientAPI
  name: NodePreference
  nameWithType: NodePreference
  fullName: EventStore.ClientAPI.NodePreference

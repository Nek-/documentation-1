### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.PersistentSubscriptionNakEventAction
  commentId: T:EventStore.ClientAPI.PersistentSubscriptionNakEventAction
  id: PersistentSubscriptionNakEventAction
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Park
  - EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Retry
  - EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Skip
  - EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Stop
  - EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Unknown
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionNakEventAction
  nameWithType: PersistentSubscriptionNakEventAction
  fullName: EventStore.ClientAPI.PersistentSubscriptionNakEventAction
  type: Enum
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionNakEventAction.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: PersistentSubscriptionNakEventAction
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionNakEventAction.cs
    startLine: 4
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nActions to be taken by server in the case of a client NAK\n"
  example: []
  syntax:
    content: public enum PersistentSubscriptionNakEventAction
    content.vb: Public Enum PersistentSubscriptionNakEventAction
  extensionMethods:
  - EventStore.ClientAPI.PersistentSubscriptionNakEventAction.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Unknown
  commentId: F:EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Unknown
  id: Unknown
  parent: EventStore.ClientAPI.PersistentSubscriptionNakEventAction
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: PersistentSubscriptionNakEventAction.Unknown
  fullName: EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Unknown
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionNakEventAction.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Unknown
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionNakEventAction.cs
    startLine: 8
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nClient unknown on action. Let server decide\n"
  example: []
  syntax:
    content: Unknown = 0
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionNakEventAction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Park
  commentId: F:EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Park
  id: Park
  parent: EventStore.ClientAPI.PersistentSubscriptionNakEventAction
  langs:
  - csharp
  - vb
  name: Park
  nameWithType: PersistentSubscriptionNakEventAction.Park
  fullName: EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Park
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionNakEventAction.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Park
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionNakEventAction.cs
    startLine: 13
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nPark message do not resend. Put on poison queue\n"
  example: []
  syntax:
    content: Park = 1
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionNakEventAction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Retry
  commentId: F:EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Retry
  id: Retry
  parent: EventStore.ClientAPI.PersistentSubscriptionNakEventAction
  langs:
  - csharp
  - vb
  name: Retry
  nameWithType: PersistentSubscriptionNakEventAction.Retry
  fullName: EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Retry
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionNakEventAction.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Retry
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionNakEventAction.cs
    startLine: 18
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nExplicitly retry the message.\n"
  example: []
  syntax:
    content: Retry = 2
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionNakEventAction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Skip
  commentId: F:EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Skip
  id: Skip
  parent: EventStore.ClientAPI.PersistentSubscriptionNakEventAction
  langs:
  - csharp
  - vb
  name: Skip
  nameWithType: PersistentSubscriptionNakEventAction.Skip
  fullName: EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Skip
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionNakEventAction.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Skip
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionNakEventAction.cs
    startLine: 23
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSkip this message do not resend do not put in poison queue\n"
  example: []
  syntax:
    content: Skip = 3
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionNakEventAction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Stop
  commentId: F:EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Stop
  id: Stop
  parent: EventStore.ClientAPI.PersistentSubscriptionNakEventAction
  langs:
  - csharp
  - vb
  name: Stop
  nameWithType: PersistentSubscriptionNakEventAction.Stop
  fullName: EventStore.ClientAPI.PersistentSubscriptionNakEventAction.Stop
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionNakEventAction.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Stop
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionNakEventAction.cs
    startLine: 28
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nStop the subscription.\n"
  example: []
  syntax:
    content: Stop = 4
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionNakEventAction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: EventStore.ClientAPI.PersistentSubscriptionNakEventAction.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<PersistentSubscriptionNakEventAction>()
  nameWithType: EnumExtensions.EnumValueName<PersistentSubscriptionNakEventAction>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.ClientAPI.PersistentSubscriptionNakEventAction>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of PersistentSubscriptionNakEventAction)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.ClientAPI.PersistentSubscriptionNakEventAction)()
  name.vb: EnumValueName(Of PersistentSubscriptionNakEventAction)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<PersistentSubscriptionNakEventAction>
    nameWithType: EnumExtensions.EnumValueName<PersistentSubscriptionNakEventAction>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.ClientAPI.PersistentSubscriptionNakEventAction>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of PersistentSubscriptionNakEventAction)
    nameWithType: EnumExtensions.EnumValueName(Of PersistentSubscriptionNakEventAction)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.ClientAPI.PersistentSubscriptionNakEventAction)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.ClientAPI.PersistentSubscriptionNakEventAction
  commentId: T:EventStore.ClientAPI.PersistentSubscriptionNakEventAction
  parent: EventStore.ClientAPI
  name: PersistentSubscriptionNakEventAction
  nameWithType: PersistentSubscriptionNakEventAction
  fullName: EventStore.ClientAPI.PersistentSubscriptionNakEventAction

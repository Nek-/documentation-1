### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  commentId: T:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  id: PersistentSubscriptionSettingsBuilder
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.Build
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.CheckPointAfter(TimeSpan)
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.DoNotResolveLinkTos
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.DontTimeoutMessages
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.MaximumCheckPointCountOf(System.Int32)
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.MinimumCheckPointCountOf(System.Int32)
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.op_Implicit(EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder)~EventStore.ClientAPI.PersistentSubscriptionSettings
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.PreferDispatchToSingle
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.PreferRoundRobin
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.ResolveLinkTos
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFrom(System.Int64)
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFromBeginning
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFromCurrent
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithBufferSizeOf(System.Int32)
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithExtraStatistics
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithLiveBufferSizeOf(System.Int32)
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMaxRetriesOf(System.Int32)
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMaxSubscriberCountOf(System.Int32)
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMessageTimeoutOf(TimeSpan)
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithNamedConsumerStrategy(System.String)
  - EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithReadBatchOf(System.Int32)
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionSettingsBuilder
  nameWithType: PersistentSubscriptionSettingsBuilder
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  type: Class
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: PersistentSubscriptionSettingsBuilder
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 8
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nBuilds a <xref href=\"EventStore.ClientAPI.PersistentSubscriptionSettings\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: 'public class PersistentSubscriptionSettingsBuilder : object'
    content.vb: >-
      Public Class PersistentSubscriptionSettingsBuilder
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithExtraStatistics
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithExtraStatistics
  id: WithExtraStatistics
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: WithExtraStatistics()
  nameWithType: PersistentSubscriptionSettingsBuilder.WithExtraStatistics()
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithExtraStatistics()
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: WithExtraStatistics
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 49
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the option to include further latency statistics. These statistics have a cost and should not be used\nin high performance situations.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder WithExtraStatistics()
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: A new <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function WithExtraStatistics As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithExtraStatistics*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.ResolveLinkTos
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.ResolveLinkTos
  id: ResolveLinkTos
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: ResolveLinkTos()
  nameWithType: PersistentSubscriptionSettingsBuilder.ResolveLinkTos()
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.ResolveLinkTos()
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ResolveLinkTos
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 58
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the option to resolve linktos on events that are found for this subscription.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder ResolveLinkTos()
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: A new <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function ResolveLinkTos As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.ResolveLinkTos*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.DoNotResolveLinkTos
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.DoNotResolveLinkTos
  id: DoNotResolveLinkTos
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: DoNotResolveLinkTos()
  nameWithType: PersistentSubscriptionSettingsBuilder.DoNotResolveLinkTos()
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.DoNotResolveLinkTos()
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: DoNotResolveLinkTos
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 67
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the option to not resolve linktos on events that are found for this subscription.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder DoNotResolveLinkTos()
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: A new <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function DoNotResolveLinkTos As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.DoNotResolveLinkTos*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.PreferRoundRobin
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.PreferRoundRobin
  id: PreferRoundRobin
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: PreferRoundRobin()
  nameWithType: PersistentSubscriptionSettingsBuilder.PreferRoundRobin()
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.PreferRoundRobin()
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: PreferRoundRobin
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 77
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nIf set the subscription will prefer if possible to round robin between the clients that\nare connected.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder PreferRoundRobin()
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: A new <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function PreferRoundRobin As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.PreferRoundRobin*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.PreferDispatchToSingle
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.PreferDispatchToSingle
  id: PreferDispatchToSingle
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: PreferDispatchToSingle()
  nameWithType: PersistentSubscriptionSettingsBuilder.PreferDispatchToSingle()
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.PreferDispatchToSingle()
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: PreferDispatchToSingle
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 88
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nIf set the subscription will prefer if possible to dispatch only to a single of the connected\nclients. If however the buffer limits are reached on that client it will begin sending to other \nclients.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder PreferDispatchToSingle()
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: A new <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function PreferDispatchToSingle As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.PreferDispatchToSingle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFromBeginning
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFromBeginning
  id: StartFromBeginning
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: StartFromBeginning()
  nameWithType: PersistentSubscriptionSettingsBuilder.StartFromBeginning()
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFromBeginning()
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: StartFromBeginning
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 97
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets that the subscription should start from the beginning of the stream.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder StartFromBeginning()
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: A new <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function StartFromBeginning As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFromBeginning*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFrom(System.Int64)
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFrom(System.Int64)
  id: StartFrom(System.Int64)
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: StartFrom(Int64)
  nameWithType: PersistentSubscriptionSettingsBuilder.StartFrom(Int64)
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFrom(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: StartFrom
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 106
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets that the subscription should start from a specified location of the stream.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder StartFrom(long position)
    parameters:
    - id: position
      type: System.Int64
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: A new <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function StartFrom(position As Long) As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMessageTimeoutOf(TimeSpan)
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMessageTimeoutOf(TimeSpan)
  id: WithMessageTimeoutOf(TimeSpan)
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: WithMessageTimeoutOf(TimeSpan)
  nameWithType: PersistentSubscriptionSettingsBuilder.WithMessageTimeoutOf(TimeSpan)
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMessageTimeoutOf(TimeSpan)
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: WithMessageTimeoutOf
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 115
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the timeout for a message (will be retried if an ack is not received within this timespan)\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder WithMessageTimeoutOf(TimeSpan timeout)
    parameters:
    - id: timeout
      type: TimeSpan
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: A new <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function WithMessageTimeoutOf(timeout As TimeSpan) As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMessageTimeoutOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.DontTimeoutMessages
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.DontTimeoutMessages
  id: DontTimeoutMessages
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: DontTimeoutMessages()
  nameWithType: PersistentSubscriptionSettingsBuilder.DontTimeoutMessages()
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.DontTimeoutMessages()
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: DontTimeoutMessages
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 124
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the timeout timespan to about 30k years. If you need larger please let us know.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder DontTimeoutMessages()
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: A new <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function DontTimeoutMessages As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.DontTimeoutMessages*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.CheckPointAfter(TimeSpan)
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.CheckPointAfter(TimeSpan)
  id: CheckPointAfter(TimeSpan)
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: CheckPointAfter(TimeSpan)
  nameWithType: PersistentSubscriptionSettingsBuilder.CheckPointAfter(TimeSpan)
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.CheckPointAfter(TimeSpan)
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: CheckPointAfter
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 146
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets that the backend should try to checkpoint the subscription after some\nperiod of time. Note that if the increment of the checkpoint would be below\nthe minimum the stream will not be checkpointed at this time.\n"
  remarks: "\nIt is important to tweak checkpointing for high performance streams as they cause \nwrites to happen back in the system. There is a trade off between the number of\nwrites that can happen in varying failure scenarios and the frequency of \nwriting out the checkpoints within the system. Normally settings such\nas once per second with a minimum of 5-10 messages and a high max to checkpoint should\nbe a good compromise for most streams though you may want to change this if you\nfor instance are doing hundreds of messages/second through the subscription.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder CheckPointAfter(TimeSpan time)
    parameters:
    - id: time
      type: TimeSpan
      description: The amount of time to try checkpointing after
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: A new <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CheckPointAfter(time As TimeSpan) As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.CheckPointAfter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.MinimumCheckPointCountOf(System.Int32)
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.MinimumCheckPointCountOf(System.Int32)
  id: MinimumCheckPointCountOf(System.Int32)
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: MinimumCheckPointCountOf(Int32)
  nameWithType: PersistentSubscriptionSettingsBuilder.MinimumCheckPointCountOf(Int32)
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.MinimumCheckPointCountOf(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: MinimumCheckPointCountOf
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 167
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the minimum checkpoint count. The subscription will not increment a checkpoint\nbelow this value eg if there is one item to checkpoint and it is set to five it\nwill not checkpoint\n"
  remarks: "\nIt is important to tweak checkpointing for high performance streams as they cause \nwrites to happen back in the system. There is a trade off between the number of\nwrites that can happen in varying failure scenarios and the frequency of \nwriting out the checkpoints within the system. Normally settings such\nas once per second with a minimum of 5-10 messages and a high max to checkpoint should\nbe a good compromise for most streams though you may want to change this if you\nfor instance are doing hundreds of messages/second through the subscription.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder MinimumCheckPointCountOf(int count)
    parameters:
    - id: count
      type: System.Int32
      description: The minimum count to checkpoint
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: ''
    content.vb: Public Function MinimumCheckPointCountOf(count As Integer) As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.MinimumCheckPointCountOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.MaximumCheckPointCountOf(System.Int32)
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.MaximumCheckPointCountOf(System.Int32)
  id: MaximumCheckPointCountOf(System.Int32)
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: MaximumCheckPointCountOf(Int32)
  nameWithType: PersistentSubscriptionSettingsBuilder.MaximumCheckPointCountOf(Int32)
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.MaximumCheckPointCountOf(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: MaximumCheckPointCountOf
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 189
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the largest increment the subscription will checkpoint. If this value is \nreached the subscription will immediately write a checkpoint. As such this value\nshould normally be reasonably large so as not to cause too many writes to occur in \nthe subscription\n"
  remarks: "\nIt is important to tweak checkpointing for high performance streams as they cause \nwrites to happen back in the system. There is a trade off between the number of\nwrites that can happen in varying failure scenarios and the frequency of \nwriting out the checkpoints within the system. Normally settings such\nas once per second with a minimum of 5-10 messages and a high max to checkpoint should\nbe a good compromise for most streams though you may want to change this if you\nfor instance are doing hundreds of messages/second through the subscription.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder MaximumCheckPointCountOf(int count)
    parameters:
    - id: count
      type: System.Int32
      description: The maximum count to checkpoint
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: ''
    content.vb: Public Function MaximumCheckPointCountOf(count As Integer) As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.MaximumCheckPointCountOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMaxRetriesOf(System.Int32)
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMaxRetriesOf(System.Int32)
  id: WithMaxRetriesOf(System.Int32)
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: WithMaxRetriesOf(Int32)
  nameWithType: PersistentSubscriptionSettingsBuilder.WithMaxRetriesOf(Int32)
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMaxRetriesOf(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: WithMaxRetriesOf
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 199
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the number of times a message should be retried before being considered a bad message\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder WithMaxRetriesOf(int count)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: A new <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function WithMaxRetriesOf(count As Integer) As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMaxRetriesOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithLiveBufferSizeOf(System.Int32)
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithLiveBufferSizeOf(System.Int32)
  id: WithLiveBufferSizeOf(System.Int32)
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: WithLiveBufferSizeOf(Int32)
  nameWithType: PersistentSubscriptionSettingsBuilder.WithLiveBufferSizeOf(Int32)
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithLiveBufferSizeOf(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: WithLiveBufferSizeOf
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 211
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the size of the live buffer for the subscription. This is the buffer used \nto cache messages while sending messages as they happen. The count is\nin terms of the number of messages to cache.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder WithLiveBufferSizeOf(int count)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: A new <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function WithLiveBufferSizeOf(count As Integer) As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithLiveBufferSizeOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithReadBatchOf(System.Int32)
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithReadBatchOf(System.Int32)
  id: WithReadBatchOf(System.Int32)
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: WithReadBatchOf(Int32)
  nameWithType: PersistentSubscriptionSettingsBuilder.WithReadBatchOf(Int32)
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithReadBatchOf(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: WithReadBatchOf
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 223
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the size of the read batch used when paging in history for the subscription\nsizes should not be too big ...\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder WithReadBatchOf(int count)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: A new <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function WithReadBatchOf(count As Integer) As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithReadBatchOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithBufferSizeOf(System.Int32)
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithBufferSizeOf(System.Int32)
  id: WithBufferSizeOf(System.Int32)
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: WithBufferSizeOf(Int32)
  nameWithType: PersistentSubscriptionSettingsBuilder.WithBufferSizeOf(Int32)
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithBufferSizeOf(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: WithBufferSizeOf
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 235
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the size of the read batch used when paging in history for the subscription\nsizes should not be too big ...\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder WithBufferSizeOf(int count)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: A new <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function WithBufferSizeOf(count As Integer) As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithBufferSizeOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFromCurrent
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFromCurrent
  id: StartFromCurrent
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: StartFromCurrent()
  nameWithType: PersistentSubscriptionSettingsBuilder.StartFromCurrent()
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFromCurrent()
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: StartFromCurrent
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 245
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets that the subscription should start from where the stream is when the subscription is first connected.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder StartFromCurrent()
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: A new <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function StartFromCurrent As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFromCurrent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMaxSubscriberCountOf(System.Int32)
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMaxSubscriberCountOf(System.Int32)
  id: WithMaxSubscriberCountOf(System.Int32)
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: WithMaxSubscriberCountOf(Int32)
  nameWithType: PersistentSubscriptionSettingsBuilder.WithMaxSubscriberCountOf(Int32)
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMaxSubscriberCountOf(System.Int32)
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: WithMaxSubscriberCountOf
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 254
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the maximum number of subscribers allowed to connect.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder WithMaxSubscriberCountOf(int count)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: A new <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function WithMaxSubscriberCountOf(count As Integer) As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMaxSubscriberCountOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithNamedConsumerStrategy(System.String)
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithNamedConsumerStrategy(System.String)
  id: WithNamedConsumerStrategy(System.String)
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: WithNamedConsumerStrategy(String)
  nameWithType: PersistentSubscriptionSettingsBuilder.WithNamedConsumerStrategy(String)
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithNamedConsumerStrategy(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: WithNamedConsumerStrategy
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 264
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the consumer strategy for distributing event to clients. See <xref href=\"EventStore.ClientAPI.Common.SystemConsumerStrategies\" data-throw-if-not-resolved=\"false\"></xref> for system supported strategies.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettingsBuilder WithNamedConsumerStrategy(string namedConsumerStrategy)
    parameters:
    - id: namedConsumerStrategy
      type: System.String
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: A new <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function WithNamedConsumerStrategy(namedConsumerStrategy As String) As PersistentSubscriptionSettingsBuilder
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithNamedConsumerStrategy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.op_Implicit(EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder)~EventStore.ClientAPI.PersistentSubscriptionSettings
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.op_Implicit(EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder)~EventStore.ClientAPI.PersistentSubscriptionSettings
  id: op_Implicit(EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder)~EventStore.ClientAPI.PersistentSubscriptionSettings
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: Implicit(PersistentSubscriptionSettingsBuilder to PersistentSubscriptionSettings)
  nameWithType: PersistentSubscriptionSettingsBuilder.Implicit(PersistentSubscriptionSettingsBuilder to PersistentSubscriptionSettings)
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.Implicit(EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder to EventStore.ClientAPI.PersistentSubscriptionSettings)
  type: Operator
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: op_Implicit
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 276
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nBuilds a <xref href=\"EventStore.ClientAPI.PersistentSubscriptionSettings\" data-throw-if-not-resolved=\"false\"></xref> object from a <xref href=\"EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static implicit operator PersistentSubscriptionSettings(PersistentSubscriptionSettingsBuilder builder)
    parameters:
    - id: builder
      type: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
      description: <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref> from which to build a <xref href="EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder" data-throw-if-not-resolved="false"></xref>
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettings
      description: ''
    content.vb: Public Shared Widening Operator CType(builder As PersistentSubscriptionSettingsBuilder) As PersistentSubscriptionSettings
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.op_Implicit*
  nameWithType.vb: PersistentSubscriptionSettingsBuilder.Widening(PersistentSubscriptionSettingsBuilder to PersistentSubscriptionSettings)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.Widening(EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder to EventStore.ClientAPI.PersistentSubscriptionSettings)
  name.vb: Widening(PersistentSubscriptionSettingsBuilder to PersistentSubscriptionSettings)
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.Build
  commentId: M:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.Build
  id: Build
  parent: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: PersistentSubscriptionSettingsBuilder.Build()
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.Build()
  type: Method
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Build
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptionSettingsBuilder.cs
    startLine: 284
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nBuilds a <xref href=\"EventStore.ClientAPI.PersistentSubscriptionSettings\" data-throw-if-not-resolved=\"false\"></xref> object from a <xref href=\"EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public PersistentSubscriptionSettings Build()
    return:
      type: EventStore.ClientAPI.PersistentSubscriptionSettings
      description: ''
    content.vb: Public Function Build As PersistentSubscriptionSettings
  overload: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI.PersistentSubscriptionSettings
  commentId: T:EventStore.ClientAPI.PersistentSubscriptionSettings
  parent: EventStore.ClientAPI
  name: PersistentSubscriptionSettings
  nameWithType: PersistentSubscriptionSettings
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettings
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  commentId: T:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
  parent: EventStore.ClientAPI
  name: PersistentSubscriptionSettingsBuilder
  nameWithType: PersistentSubscriptionSettingsBuilder
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithExtraStatistics*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithExtraStatistics
  name: WithExtraStatistics
  nameWithType: PersistentSubscriptionSettingsBuilder.WithExtraStatistics
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithExtraStatistics
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.ResolveLinkTos*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.ResolveLinkTos
  name: ResolveLinkTos
  nameWithType: PersistentSubscriptionSettingsBuilder.ResolveLinkTos
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.ResolveLinkTos
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.DoNotResolveLinkTos*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.DoNotResolveLinkTos
  name: DoNotResolveLinkTos
  nameWithType: PersistentSubscriptionSettingsBuilder.DoNotResolveLinkTos
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.DoNotResolveLinkTos
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.PreferRoundRobin*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.PreferRoundRobin
  name: PreferRoundRobin
  nameWithType: PersistentSubscriptionSettingsBuilder.PreferRoundRobin
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.PreferRoundRobin
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.PreferDispatchToSingle*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.PreferDispatchToSingle
  name: PreferDispatchToSingle
  nameWithType: PersistentSubscriptionSettingsBuilder.PreferDispatchToSingle
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.PreferDispatchToSingle
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFromBeginning*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFromBeginning
  name: StartFromBeginning
  nameWithType: PersistentSubscriptionSettingsBuilder.StartFromBeginning
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFromBeginning
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFrom*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFrom
  name: StartFrom
  nameWithType: PersistentSubscriptionSettingsBuilder.StartFrom
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFrom
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMessageTimeoutOf*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMessageTimeoutOf
  name: WithMessageTimeoutOf
  nameWithType: PersistentSubscriptionSettingsBuilder.WithMessageTimeoutOf
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMessageTimeoutOf
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.DontTimeoutMessages*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.DontTimeoutMessages
  name: DontTimeoutMessages
  nameWithType: PersistentSubscriptionSettingsBuilder.DontTimeoutMessages
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.DontTimeoutMessages
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.CheckPointAfter*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.CheckPointAfter
  name: CheckPointAfter
  nameWithType: PersistentSubscriptionSettingsBuilder.CheckPointAfter
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.CheckPointAfter
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.MinimumCheckPointCountOf*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.MinimumCheckPointCountOf
  name: MinimumCheckPointCountOf
  nameWithType: PersistentSubscriptionSettingsBuilder.MinimumCheckPointCountOf
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.MinimumCheckPointCountOf
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.MaximumCheckPointCountOf*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.MaximumCheckPointCountOf
  name: MaximumCheckPointCountOf
  nameWithType: PersistentSubscriptionSettingsBuilder.MaximumCheckPointCountOf
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.MaximumCheckPointCountOf
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMaxRetriesOf*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMaxRetriesOf
  name: WithMaxRetriesOf
  nameWithType: PersistentSubscriptionSettingsBuilder.WithMaxRetriesOf
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMaxRetriesOf
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithLiveBufferSizeOf*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithLiveBufferSizeOf
  name: WithLiveBufferSizeOf
  nameWithType: PersistentSubscriptionSettingsBuilder.WithLiveBufferSizeOf
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithLiveBufferSizeOf
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithReadBatchOf*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithReadBatchOf
  name: WithReadBatchOf
  nameWithType: PersistentSubscriptionSettingsBuilder.WithReadBatchOf
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithReadBatchOf
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithBufferSizeOf*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithBufferSizeOf
  name: WithBufferSizeOf
  nameWithType: PersistentSubscriptionSettingsBuilder.WithBufferSizeOf
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithBufferSizeOf
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFromCurrent*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFromCurrent
  name: StartFromCurrent
  nameWithType: PersistentSubscriptionSettingsBuilder.StartFromCurrent
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.StartFromCurrent
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMaxSubscriberCountOf*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMaxSubscriberCountOf
  name: WithMaxSubscriberCountOf
  nameWithType: PersistentSubscriptionSettingsBuilder.WithMaxSubscriberCountOf
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithMaxSubscriberCountOf
- uid: EventStore.ClientAPI.Common.SystemConsumerStrategies
  commentId: T:EventStore.ClientAPI.Common.SystemConsumerStrategies
  name: SystemConsumerStrategies
  nameWithType: SystemConsumerStrategies
  fullName: EventStore.ClientAPI.Common.SystemConsumerStrategies
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithNamedConsumerStrategy*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithNamedConsumerStrategy
  name: WithNamedConsumerStrategy
  nameWithType: PersistentSubscriptionSettingsBuilder.WithNamedConsumerStrategy
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.WithNamedConsumerStrategy
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.op_Implicit*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.op_Implicit
  name: Implicit
  nameWithType: PersistentSubscriptionSettingsBuilder.Implicit
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.Implicit
  nameWithType.vb: PersistentSubscriptionSettingsBuilder.Widening
  fullName.vb: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.Widening
  name.vb: Widening
- uid: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.Build*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.Build
  name: Build
  nameWithType: PersistentSubscriptionSettingsBuilder.Build
  fullName: EventStore.ClientAPI.PersistentSubscriptionSettingsBuilder.Build

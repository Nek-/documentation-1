### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails
  commentId: T:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails
  id: PersistentSubscriptionConfigDetails
  parent: EventStore.ClientAPI.PersistentSubscriptions
  children:
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.BufferSize
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.CheckPointAfterMilliseconds
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ExtraStatistics
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.LiveBufferSize
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxCheckPointCount
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxRetryCount
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxSubscriberCount
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MessageTimeoutMilliseconds
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MinCheckPointCount
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.NamedConsumerStrategy
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.PreferRoundRobin
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ReadBatchSize
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ResolveLinktos
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.StartFrom
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionConfigDetails
  nameWithType: PersistentSubscriptionConfigDetails
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails
  type: Class
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: PersistentSubscriptionConfigDetails
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 93
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nConfiguration details of a persistent subscription.\n"
  example: []
  syntax:
    content: 'public sealed class PersistentSubscriptionConfigDetails : object'
    content.vb: >-
      Public NotInheritable Class PersistentSubscriptionConfigDetails
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ResolveLinktos
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ResolveLinktos
  id: ResolveLinktos
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails
  langs:
  - csharp
  - vb
  name: ResolveLinktos
  nameWithType: PersistentSubscriptionConfigDetails.ResolveLinktos
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ResolveLinktos
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ResolveLinktos
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 97
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nWhether to resolve LinkTos.\n"
  example: []
  syntax:
    content: public bool ResolveLinktos { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ResolveLinktos As Boolean
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ResolveLinktos*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.StartFrom
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.StartFrom
  id: StartFrom
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails
  langs:
  - csharp
  - vb
  name: StartFrom
  nameWithType: PersistentSubscriptionConfigDetails.StartFrom
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.StartFrom
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: StartFrom
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 102
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nWhich event to start from.\n"
  example: []
  syntax:
    content: public long StartFrom { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property StartFrom As Long
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.StartFrom*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MessageTimeoutMilliseconds
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MessageTimeoutMilliseconds
  id: MessageTimeoutMilliseconds
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails
  langs:
  - csharp
  - vb
  name: MessageTimeoutMilliseconds
  nameWithType: PersistentSubscriptionConfigDetails.MessageTimeoutMilliseconds
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MessageTimeoutMilliseconds
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: MessageTimeoutMilliseconds
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 107
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nMessage timeout in ms.\n"
  example: []
  syntax:
    content: public int MessageTimeoutMilliseconds { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MessageTimeoutMilliseconds As Integer
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MessageTimeoutMilliseconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ExtraStatistics
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ExtraStatistics
  id: ExtraStatistics
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails
  langs:
  - csharp
  - vb
  name: ExtraStatistics
  nameWithType: PersistentSubscriptionConfigDetails.ExtraStatistics
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ExtraStatistics
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ExtraStatistics
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 112
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nExtra statistics.\n"
  example: []
  syntax:
    content: public bool ExtraStatistics { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ExtraStatistics As Boolean
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ExtraStatistics*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxRetryCount
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxRetryCount
  id: MaxRetryCount
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails
  langs:
  - csharp
  - vb
  name: MaxRetryCount
  nameWithType: PersistentSubscriptionConfigDetails.MaxRetryCount
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxRetryCount
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: MaxRetryCount
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 117
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nMax retry count.\n"
  example: []
  syntax:
    content: public int MaxRetryCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxRetryCount As Integer
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxRetryCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.LiveBufferSize
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.LiveBufferSize
  id: LiveBufferSize
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails
  langs:
  - csharp
  - vb
  name: LiveBufferSize
  nameWithType: PersistentSubscriptionConfigDetails.LiveBufferSize
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.LiveBufferSize
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: LiveBufferSize
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 122
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nLive buffer size.\n"
  example: []
  syntax:
    content: public int LiveBufferSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property LiveBufferSize As Integer
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.LiveBufferSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.BufferSize
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.BufferSize
  id: BufferSize
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails
  langs:
  - csharp
  - vb
  name: BufferSize
  nameWithType: PersistentSubscriptionConfigDetails.BufferSize
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.BufferSize
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: BufferSize
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 127
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nBuffer size.\n"
  example: []
  syntax:
    content: public int BufferSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property BufferSize As Integer
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.BufferSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ReadBatchSize
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ReadBatchSize
  id: ReadBatchSize
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails
  langs:
  - csharp
  - vb
  name: ReadBatchSize
  nameWithType: PersistentSubscriptionConfigDetails.ReadBatchSize
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ReadBatchSize
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ReadBatchSize
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 132
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nRead buffer size.\n"
  example: []
  syntax:
    content: public int ReadBatchSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ReadBatchSize As Integer
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ReadBatchSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.CheckPointAfterMilliseconds
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.CheckPointAfterMilliseconds
  id: CheckPointAfterMilliseconds
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails
  langs:
  - csharp
  - vb
  name: CheckPointAfterMilliseconds
  nameWithType: PersistentSubscriptionConfigDetails.CheckPointAfterMilliseconds
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.CheckPointAfterMilliseconds
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: CheckPointAfterMilliseconds
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 137
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nCheckpoint interval in ms.\n"
  example: []
  syntax:
    content: public int CheckPointAfterMilliseconds { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CheckPointAfterMilliseconds As Integer
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.CheckPointAfterMilliseconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MinCheckPointCount
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MinCheckPointCount
  id: MinCheckPointCount
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails
  langs:
  - csharp
  - vb
  name: MinCheckPointCount
  nameWithType: PersistentSubscriptionConfigDetails.MinCheckPointCount
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MinCheckPointCount
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: MinCheckPointCount
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 142
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nMin number of events between checkpoints.\n"
  example: []
  syntax:
    content: public int MinCheckPointCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MinCheckPointCount As Integer
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MinCheckPointCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxCheckPointCount
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxCheckPointCount
  id: MaxCheckPointCount
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails
  langs:
  - csharp
  - vb
  name: MaxCheckPointCount
  nameWithType: PersistentSubscriptionConfigDetails.MaxCheckPointCount
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxCheckPointCount
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: MaxCheckPointCount
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 147
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nMax number of events between checkpoints.\n"
  example: []
  syntax:
    content: public int MaxCheckPointCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxCheckPointCount As Integer
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxCheckPointCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxSubscriberCount
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxSubscriberCount
  id: MaxSubscriberCount
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails
  langs:
  - csharp
  - vb
  name: MaxSubscriberCount
  nameWithType: PersistentSubscriptionConfigDetails.MaxSubscriberCount
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxSubscriberCount
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: MaxSubscriberCount
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 152
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nMax subscribers permitted.\n"
  example: []
  syntax:
    content: public int MaxSubscriberCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxSubscriberCount As Integer
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxSubscriberCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.NamedConsumerStrategy
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.NamedConsumerStrategy
  id: NamedConsumerStrategy
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails
  langs:
  - csharp
  - vb
  name: NamedConsumerStrategy
  nameWithType: PersistentSubscriptionConfigDetails.NamedConsumerStrategy
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.NamedConsumerStrategy
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: NamedConsumerStrategy
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 157
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nConsumer strategy.\n"
  example: []
  syntax:
    content: public string NamedConsumerStrategy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NamedConsumerStrategy As String
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.NamedConsumerStrategy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.PreferRoundRobin
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.PreferRoundRobin
  id: PreferRoundRobin
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails
  langs:
  - csharp
  - vb
  name: PreferRoundRobin
  nameWithType: PersistentSubscriptionConfigDetails.PreferRoundRobin
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.PreferRoundRobin
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: PreferRoundRobin
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 162
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nWhether to prefer round robin.\n"
  example: []
  syntax:
    content: public bool PreferRoundRobin { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PreferRoundRobin As Boolean
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.PreferRoundRobin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI.PersistentSubscriptions
  commentId: N:EventStore.ClientAPI.PersistentSubscriptions
  name: EventStore.ClientAPI.PersistentSubscriptions
  nameWithType: EventStore.ClientAPI.PersistentSubscriptions
  fullName: EventStore.ClientAPI.PersistentSubscriptions
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ResolveLinktos*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ResolveLinktos
  name: ResolveLinktos
  nameWithType: PersistentSubscriptionConfigDetails.ResolveLinktos
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ResolveLinktos
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.StartFrom*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.StartFrom
  name: StartFrom
  nameWithType: PersistentSubscriptionConfigDetails.StartFrom
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.StartFrom
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MessageTimeoutMilliseconds*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MessageTimeoutMilliseconds
  name: MessageTimeoutMilliseconds
  nameWithType: PersistentSubscriptionConfigDetails.MessageTimeoutMilliseconds
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MessageTimeoutMilliseconds
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ExtraStatistics*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ExtraStatistics
  name: ExtraStatistics
  nameWithType: PersistentSubscriptionConfigDetails.ExtraStatistics
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ExtraStatistics
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxRetryCount*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxRetryCount
  name: MaxRetryCount
  nameWithType: PersistentSubscriptionConfigDetails.MaxRetryCount
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxRetryCount
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.LiveBufferSize*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.LiveBufferSize
  name: LiveBufferSize
  nameWithType: PersistentSubscriptionConfigDetails.LiveBufferSize
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.LiveBufferSize
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.BufferSize*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.BufferSize
  name: BufferSize
  nameWithType: PersistentSubscriptionConfigDetails.BufferSize
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.BufferSize
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ReadBatchSize*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ReadBatchSize
  name: ReadBatchSize
  nameWithType: PersistentSubscriptionConfigDetails.ReadBatchSize
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.ReadBatchSize
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.CheckPointAfterMilliseconds*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.CheckPointAfterMilliseconds
  name: CheckPointAfterMilliseconds
  nameWithType: PersistentSubscriptionConfigDetails.CheckPointAfterMilliseconds
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.CheckPointAfterMilliseconds
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MinCheckPointCount*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MinCheckPointCount
  name: MinCheckPointCount
  nameWithType: PersistentSubscriptionConfigDetails.MinCheckPointCount
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MinCheckPointCount
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxCheckPointCount*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxCheckPointCount
  name: MaxCheckPointCount
  nameWithType: PersistentSubscriptionConfigDetails.MaxCheckPointCount
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxCheckPointCount
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxSubscriberCount*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxSubscriberCount
  name: MaxSubscriberCount
  nameWithType: PersistentSubscriptionConfigDetails.MaxSubscriberCount
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.MaxSubscriberCount
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.NamedConsumerStrategy*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.NamedConsumerStrategy
  name: NamedConsumerStrategy
  nameWithType: PersistentSubscriptionConfigDetails.NamedConsumerStrategy
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.NamedConsumerStrategy
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.PreferRoundRobin*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.PreferRoundRobin
  name: PreferRoundRobin
  nameWithType: PersistentSubscriptionConfigDetails.PreferRoundRobin
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConfigDetails.PreferRoundRobin

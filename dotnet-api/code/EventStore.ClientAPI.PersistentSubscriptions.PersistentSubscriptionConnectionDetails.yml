### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails
  commentId: T:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails
  id: PersistentSubscriptionConnectionDetails
  parent: EventStore.ClientAPI.PersistentSubscriptions
  children:
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AvailableSlots
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AverageItemsPerSecond
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.CountSinceLastMeasurement
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.From
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.InFlightMessages
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.TotalItems
  - EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.Username
  langs:
  - csharp
  - vb
  name: PersistentSubscriptionConnectionDetails
  nameWithType: PersistentSubscriptionConnectionDetails
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails
  type: Class
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: PersistentSubscriptionConnectionDetails
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 168
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nDetails of a connection for a persistent subscription.\n"
  example: []
  syntax:
    content: public sealed class PersistentSubscriptionConnectionDetails
    content.vb: Public NotInheritable Class PersistentSubscriptionConnectionDetails
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.From
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.From
  id: From
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails
  langs:
  - csharp
  - vb
  name: From
  nameWithType: PersistentSubscriptionConnectionDetails.From
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.From
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: From
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 172
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nOrigin of this connection.\n"
  example: []
  syntax:
    content: public string From { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property From As String
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.From*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.Username
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.Username
  id: Username
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: PersistentSubscriptionConnectionDetails.Username
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.Username
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Username
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 177
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nConnection username.\n"
  example: []
  syntax:
    content: public string Username { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Username As String
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.Username*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AverageItemsPerSecond
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AverageItemsPerSecond
  id: AverageItemsPerSecond
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails
  langs:
  - csharp
  - vb
  name: AverageItemsPerSecond
  nameWithType: PersistentSubscriptionConnectionDetails.AverageItemsPerSecond
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AverageItemsPerSecond
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: AverageItemsPerSecond
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 182
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nAverage events per second on this connection.\n"
  example: []
  syntax:
    content: public decimal AverageItemsPerSecond { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: Public Property AverageItemsPerSecond As Decimal
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AverageItemsPerSecond*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.TotalItems
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.TotalItems
  id: TotalItems
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails
  langs:
  - csharp
  - vb
  name: TotalItems
  nameWithType: PersistentSubscriptionConnectionDetails.TotalItems
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.TotalItems
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: TotalItems
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 187
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nTotal items on this connection.\n"
  example: []
  syntax:
    content: public long TotalItems { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property TotalItems As Long
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.TotalItems*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.CountSinceLastMeasurement
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.CountSinceLastMeasurement
  id: CountSinceLastMeasurement
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails
  langs:
  - csharp
  - vb
  name: CountSinceLastMeasurement
  nameWithType: PersistentSubscriptionConnectionDetails.CountSinceLastMeasurement
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.CountSinceLastMeasurement
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: CountSinceLastMeasurement
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 192
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nNumber of items seen since last measurement on this connection (used as the basis for <xref href=\"EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AverageItemsPerSecond\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  example: []
  syntax:
    content: public long CountSinceLastMeasurement { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property CountSinceLastMeasurement As Long
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.CountSinceLastMeasurement*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AvailableSlots
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AvailableSlots
  id: AvailableSlots
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails
  langs:
  - csharp
  - vb
  name: AvailableSlots
  nameWithType: PersistentSubscriptionConnectionDetails.AvailableSlots
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AvailableSlots
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: AvailableSlots
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 197
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nNumber of available slots.\n"
  example: []
  syntax:
    content: public int AvailableSlots { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AvailableSlots As Integer
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AvailableSlots*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.InFlightMessages
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.InFlightMessages
  id: InFlightMessages
  parent: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails
  langs:
  - csharp
  - vb
  name: InFlightMessages
  nameWithType: PersistentSubscriptionConnectionDetails.InFlightMessages
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.InFlightMessages
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: InFlightMessages
    path: ../EventStore/src/EventStore.ClientAPI/PersistentSubscriptions/PersistentSubscriptionDetails.cs
    startLine: 202
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.PersistentSubscriptions
  summary: "\nNumber of in flight messages on this connection.\n"
  example: []
  syntax:
    content: public int InFlightMessages { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property InFlightMessages As Integer
  overload: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.InFlightMessages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI.PersistentSubscriptions
  commentId: N:EventStore.ClientAPI.PersistentSubscriptions
  name: EventStore.ClientAPI.PersistentSubscriptions
  nameWithType: EventStore.ClientAPI.PersistentSubscriptions
  fullName: EventStore.ClientAPI.PersistentSubscriptions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.From*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.From
  name: From
  nameWithType: PersistentSubscriptionConnectionDetails.From
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.From
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.Username*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.Username
  name: Username
  nameWithType: PersistentSubscriptionConnectionDetails.Username
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.Username
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AverageItemsPerSecond*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AverageItemsPerSecond
  name: AverageItemsPerSecond
  nameWithType: PersistentSubscriptionConnectionDetails.AverageItemsPerSecond
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AverageItemsPerSecond
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.TotalItems*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.TotalItems
  name: TotalItems
  nameWithType: PersistentSubscriptionConnectionDetails.TotalItems
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.TotalItems
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AverageItemsPerSecond
  commentId: P:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AverageItemsPerSecond
  isExternal: true
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.CountSinceLastMeasurement*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.CountSinceLastMeasurement
  name: CountSinceLastMeasurement
  nameWithType: PersistentSubscriptionConnectionDetails.CountSinceLastMeasurement
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.CountSinceLastMeasurement
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AvailableSlots*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AvailableSlots
  name: AvailableSlots
  nameWithType: PersistentSubscriptionConnectionDetails.AvailableSlots
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.AvailableSlots
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.InFlightMessages*
  commentId: Overload:EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.InFlightMessages
  name: InFlightMessages
  nameWithType: PersistentSubscriptionConnectionDetails.InFlightMessages
  fullName: EventStore.ClientAPI.PersistentSubscriptions.PersistentSubscriptionConnectionDetails.InFlightMessages

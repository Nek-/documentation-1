### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.Projections.ProjectionConfig
  commentId: T:EventStore.ClientAPI.Projections.ProjectionConfig
  id: ProjectionConfig
  parent: EventStore.ClientAPI.Projections
  children:
  - EventStore.ClientAPI.Projections.ProjectionConfig.#ctor(System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - EventStore.ClientAPI.Projections.ProjectionConfig.CheckpointAfterMs
  - EventStore.ClientAPI.Projections.ProjectionConfig.CheckpointHandledThreshold
  - EventStore.ClientAPI.Projections.ProjectionConfig.CheckpointUnhandledBytesThreshold
  - EventStore.ClientAPI.Projections.ProjectionConfig.EmitEnabled
  - EventStore.ClientAPI.Projections.ProjectionConfig.MaxAllowedWritesInFlight
  - EventStore.ClientAPI.Projections.ProjectionConfig.MaxWriteBatchLength
  - EventStore.ClientAPI.Projections.ProjectionConfig.PendingEventsThreshold
  - EventStore.ClientAPI.Projections.ProjectionConfig.TrackEmittedStreams
  langs:
  - csharp
  - vb
  name: ProjectionConfig
  nameWithType: ProjectionConfig
  fullName: EventStore.ClientAPI.Projections.ProjectionConfig
  type: Class
  source:
    id: ProjectionConfig
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Projections/ProjectionConfig.cs
    startLine: 6
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nProvides the configuration for a projection.\n"
  example: []
  syntax:
    content: 'public sealed class ProjectionConfig : object'
    content.vb: >-
      Public NotInheritable Class ProjectionConfig
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: EventStore.ClientAPI.Projections.ProjectionConfig.EmitEnabled
  commentId: F:EventStore.ClientAPI.Projections.ProjectionConfig.EmitEnabled
  id: EmitEnabled
  parent: EventStore.ClientAPI.Projections.ProjectionConfig
  langs:
  - csharp
  - vb
  name: EmitEnabled
  nameWithType: ProjectionConfig.EmitEnabled
  fullName: EventStore.ClientAPI.Projections.ProjectionConfig.EmitEnabled
  type: Field
  source:
    id: EmitEnabled
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Projections/ProjectionConfig.cs
    startLine: 10
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nWhether this projection can emit events using emit() or linkTo().\n"
  example: []
  syntax:
    content: public readonly bool EmitEnabled
    return:
      type: System.Boolean
    content.vb: Public ReadOnly EmitEnabled As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionConfig.TrackEmittedStreams
  commentId: F:EventStore.ClientAPI.Projections.ProjectionConfig.TrackEmittedStreams
  id: TrackEmittedStreams
  parent: EventStore.ClientAPI.Projections.ProjectionConfig
  langs:
  - csharp
  - vb
  name: TrackEmittedStreams
  nameWithType: ProjectionConfig.TrackEmittedStreams
  fullName: EventStore.ClientAPI.Projections.ProjectionConfig.TrackEmittedStreams
  type: Field
  source:
    id: TrackEmittedStreams
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Projections/ProjectionConfig.cs
    startLine: 14
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nWhether this projection tracks emitted streams. This enables you to delete a projection and all the streams that it has created.\n"
  example: []
  syntax:
    content: public readonly bool TrackEmittedStreams
    return:
      type: System.Boolean
    content.vb: Public ReadOnly TrackEmittedStreams As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionConfig.CheckpointAfterMs
  commentId: F:EventStore.ClientAPI.Projections.ProjectionConfig.CheckpointAfterMs
  id: CheckpointAfterMs
  parent: EventStore.ClientAPI.Projections.ProjectionConfig
  langs:
  - csharp
  - vb
  name: CheckpointAfterMs
  nameWithType: ProjectionConfig.CheckpointAfterMs
  fullName: EventStore.ClientAPI.Projections.ProjectionConfig.CheckpointAfterMs
  type: Field
  source:
    id: CheckpointAfterMs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Projections/ProjectionConfig.cs
    startLine: 18
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nMinimum time (in ms) after which to write a projection checkpoint.\n"
  example: []
  syntax:
    content: public readonly int CheckpointAfterMs
    return:
      type: System.Int32
    content.vb: Public ReadOnly CheckpointAfterMs As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionConfig.CheckpointHandledThreshold
  commentId: F:EventStore.ClientAPI.Projections.ProjectionConfig.CheckpointHandledThreshold
  id: CheckpointHandledThreshold
  parent: EventStore.ClientAPI.Projections.ProjectionConfig
  langs:
  - csharp
  - vb
  name: CheckpointHandledThreshold
  nameWithType: ProjectionConfig.CheckpointHandledThreshold
  fullName: EventStore.ClientAPI.Projections.ProjectionConfig.CheckpointHandledThreshold
  type: Field
  source:
    id: CheckpointHandledThreshold
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Projections/ProjectionConfig.cs
    startLine: 22
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nNumber of events that a projection can handle before attempting to write a checkpoint.\n"
  example: []
  syntax:
    content: public readonly int CheckpointHandledThreshold
    return:
      type: System.Int32
    content.vb: Public ReadOnly CheckpointHandledThreshold As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionConfig.CheckpointUnhandledBytesThreshold
  commentId: F:EventStore.ClientAPI.Projections.ProjectionConfig.CheckpointUnhandledBytesThreshold
  id: CheckpointUnhandledBytesThreshold
  parent: EventStore.ClientAPI.Projections.ProjectionConfig
  langs:
  - csharp
  - vb
  name: CheckpointUnhandledBytesThreshold
  nameWithType: ProjectionConfig.CheckpointUnhandledBytesThreshold
  fullName: EventStore.ClientAPI.Projections.ProjectionConfig.CheckpointUnhandledBytesThreshold
  type: Field
  source:
    id: CheckpointUnhandledBytesThreshold
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Projections/ProjectionConfig.cs
    startLine: 26
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nNumber of bytes a projection can process before attempting to write a checkpoint.\n"
  example: []
  syntax:
    content: public readonly int CheckpointUnhandledBytesThreshold
    return:
      type: System.Int32
    content.vb: Public ReadOnly CheckpointUnhandledBytesThreshold As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionConfig.PendingEventsThreshold
  commentId: F:EventStore.ClientAPI.Projections.ProjectionConfig.PendingEventsThreshold
  id: PendingEventsThreshold
  parent: EventStore.ClientAPI.Projections.ProjectionConfig
  langs:
  - csharp
  - vb
  name: PendingEventsThreshold
  nameWithType: ProjectionConfig.PendingEventsThreshold
  fullName: EventStore.ClientAPI.Projections.ProjectionConfig.PendingEventsThreshold
  type: Field
  source:
    id: PendingEventsThreshold
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Projections/ProjectionConfig.cs
    startLine: 30
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nNumber of events that can be pending before the projection is temporarily paused.\n"
  example: []
  syntax:
    content: public readonly int PendingEventsThreshold
    return:
      type: System.Int32
    content.vb: Public ReadOnly PendingEventsThreshold As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionConfig.MaxWriteBatchLength
  commentId: F:EventStore.ClientAPI.Projections.ProjectionConfig.MaxWriteBatchLength
  id: MaxWriteBatchLength
  parent: EventStore.ClientAPI.Projections.ProjectionConfig
  langs:
  - csharp
  - vb
  name: MaxWriteBatchLength
  nameWithType: ProjectionConfig.MaxWriteBatchLength
  fullName: EventStore.ClientAPI.Projections.ProjectionConfig.MaxWriteBatchLength
  type: Field
  source:
    id: MaxWriteBatchLength
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Projections/ProjectionConfig.cs
    startLine: 34
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nMaximum number of events the projection can write in a batch at a time.\n"
  example: []
  syntax:
    content: public readonly int MaxWriteBatchLength
    return:
      type: System.Int32
    content.vb: Public ReadOnly MaxWriteBatchLength As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionConfig.MaxAllowedWritesInFlight
  commentId: F:EventStore.ClientAPI.Projections.ProjectionConfig.MaxAllowedWritesInFlight
  id: MaxAllowedWritesInFlight
  parent: EventStore.ClientAPI.Projections.ProjectionConfig
  langs:
  - csharp
  - vb
  name: MaxAllowedWritesInFlight
  nameWithType: ProjectionConfig.MaxAllowedWritesInFlight
  fullName: EventStore.ClientAPI.Projections.ProjectionConfig.MaxAllowedWritesInFlight
  type: Field
  source:
    id: MaxAllowedWritesInFlight
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Projections/ProjectionConfig.cs
    startLine: 38
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\nMaximum number of concurrent writes to allow for a projection.\n"
  example: []
  syntax:
    content: public readonly int MaxAllowedWritesInFlight
    return:
      type: System.Int32
    content.vb: Public ReadOnly MaxAllowedWritesInFlight As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Projections.ProjectionConfig.#ctor(System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:EventStore.ClientAPI.Projections.ProjectionConfig.#ctor(System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: EventStore.ClientAPI.Projections.ProjectionConfig
  langs:
  - csharp
  - vb
  name: ProjectionConfig(Boolean, Boolean, Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: ProjectionConfig.ProjectionConfig(Boolean, Boolean, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: EventStore.ClientAPI.Projections.ProjectionConfig.ProjectionConfig(System.Boolean, System.Boolean, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Projections/ProjectionConfig.cs
    startLine: 51
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Projections
  summary: "\ncreate a new <xref href=\"EventStore.ClientAPI.Projections.ProjectionConfig\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ProjectionConfig(bool emitEnabled, bool trackEmittedStreams, int checkpointAfterMs, int checkpointHandledThreshold, int checkpointUnhandledBytesThreshold, int pendingEventsThreshold, int maxWriteBatchLength, int maxAllowedWritesInFlight)
    parameters:
    - id: emitEnabled
      type: System.Boolean
      description: 'Whether this projection can emit events using emit() or linkTo(). Default: false'
    - id: trackEmittedStreams
      type: System.Boolean
      description: 'Whether this projection tracks emitted streams. Default: false'
    - id: checkpointAfterMs
      type: System.Int32
      description: 'Minimum time (in ms) after which to write a projection checkpoint. Default: 0 (disabled)'
    - id: checkpointHandledThreshold
      type: System.Int32
      description: 'Number of events that a projection can handle before attempting to write a checkpoint. Default: 4000'
    - id: checkpointUnhandledBytesThreshold
      type: System.Int32
      description: 'Number of bytes a projection can process before attempting to write a checkpoint. Default: 10000000 (10 MB)'
    - id: pendingEventsThreshold
      type: System.Int32
      description: 'Number of events that can be pending before the projection is temporarily paused. Default: 5000'
    - id: maxWriteBatchLength
      type: System.Int32
      description: 'Maximum number of events the projection can write in a batch at a time. Default: 500'
    - id: maxAllowedWritesInFlight
      type: System.Int32
      description: 'Maximum number of concurrent writes to allow for a projection. Default: 0 (Unbounded)'
    content.vb: Public Sub New(emitEnabled As Boolean, trackEmittedStreams As Boolean, checkpointAfterMs As Integer, checkpointHandledThreshold As Integer, checkpointUnhandledBytesThreshold As Integer, pendingEventsThreshold As Integer, maxWriteBatchLength As Integer, maxAllowedWritesInFlight As Integer)
  overload: EventStore.ClientAPI.Projections.ProjectionConfig.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI.Projections
  commentId: N:EventStore.ClientAPI.Projections
  name: EventStore.ClientAPI.Projections
  nameWithType: EventStore.ClientAPI.Projections
  fullName: EventStore.ClientAPI.Projections
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.ClientAPI.Projections.ProjectionConfig
  commentId: T:EventStore.ClientAPI.Projections.ProjectionConfig
  parent: EventStore.ClientAPI.Projections
  name: ProjectionConfig
  nameWithType: ProjectionConfig
  fullName: EventStore.ClientAPI.Projections.ProjectionConfig
- uid: EventStore.ClientAPI.Projections.ProjectionConfig.#ctor*
  commentId: Overload:EventStore.ClientAPI.Projections.ProjectionConfig.#ctor
  name: ProjectionConfig
  nameWithType: ProjectionConfig.ProjectionConfig
  fullName: EventStore.ClientAPI.Projections.ProjectionConfig.ProjectionConfig

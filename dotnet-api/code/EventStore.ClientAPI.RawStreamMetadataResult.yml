### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.RawStreamMetadataResult
  commentId: T:EventStore.ClientAPI.RawStreamMetadataResult
  id: RawStreamMetadataResult
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.RawStreamMetadataResult.#ctor(System.String,System.Boolean,System.Int64,System.Byte[])
  - EventStore.ClientAPI.RawStreamMetadataResult.IsStreamDeleted
  - EventStore.ClientAPI.RawStreamMetadataResult.MetastreamVersion
  - EventStore.ClientAPI.RawStreamMetadataResult.Stream
  - EventStore.ClientAPI.RawStreamMetadataResult.StreamMetadata
  langs:
  - csharp
  - vb
  name: RawStreamMetadataResult
  nameWithType: RawStreamMetadataResult
  fullName: EventStore.ClientAPI.RawStreamMetadataResult
  type: Struct
  source:
    remote:
      path: src/EventStore.ClientAPI/RawStreamMetadataResult.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: RawStreamMetadataResult
    path: ../EventStore/src/EventStore.ClientAPI/RawStreamMetadataResult.cs
    startLine: 8
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRepresents stream metadata as a series of properties for system\ndata and a byte array for user metadata.\n"
  example: []
  syntax:
    content: public struct RawStreamMetadataResult
    content.vb: Public Structure RawStreamMetadataResult
  extensionMethods:
  - EventStore.ClientAPI.RawStreamMetadataResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.ClientAPI.RawStreamMetadataResult.Stream
  commentId: F:EventStore.ClientAPI.RawStreamMetadataResult.Stream
  id: Stream
  parent: EventStore.ClientAPI.RawStreamMetadataResult
  langs:
  - csharp
  - vb
  name: Stream
  nameWithType: RawStreamMetadataResult.Stream
  fullName: EventStore.ClientAPI.RawStreamMetadataResult.Stream
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/RawStreamMetadataResult.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Stream
    path: ../EventStore/src/EventStore.ClientAPI/RawStreamMetadataResult.cs
    startLine: 12
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe name of the stream.\n"
  example: []
  syntax:
    content: public readonly string Stream
    return:
      type: System.String
    content.vb: Public ReadOnly Stream As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.RawStreamMetadataResult.IsStreamDeleted
  commentId: F:EventStore.ClientAPI.RawStreamMetadataResult.IsStreamDeleted
  id: IsStreamDeleted
  parent: EventStore.ClientAPI.RawStreamMetadataResult
  langs:
  - csharp
  - vb
  name: IsStreamDeleted
  nameWithType: RawStreamMetadataResult.IsStreamDeleted
  fullName: EventStore.ClientAPI.RawStreamMetadataResult.IsStreamDeleted
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/RawStreamMetadataResult.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: IsStreamDeleted
    path: ../EventStore/src/EventStore.ClientAPI/RawStreamMetadataResult.cs
    startLine: 17
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nTrue if the stream is soft-deleted.\n"
  example: []
  syntax:
    content: public readonly bool IsStreamDeleted
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsStreamDeleted As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.RawStreamMetadataResult.MetastreamVersion
  commentId: F:EventStore.ClientAPI.RawStreamMetadataResult.MetastreamVersion
  id: MetastreamVersion
  parent: EventStore.ClientAPI.RawStreamMetadataResult
  langs:
  - csharp
  - vb
  name: MetastreamVersion
  nameWithType: RawStreamMetadataResult.MetastreamVersion
  fullName: EventStore.ClientAPI.RawStreamMetadataResult.MetastreamVersion
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/RawStreamMetadataResult.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: MetastreamVersion
    path: ../EventStore/src/EventStore.ClientAPI/RawStreamMetadataResult.cs
    startLine: 22
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe version of the metadata format.\n"
  example: []
  syntax:
    content: public readonly long MetastreamVersion
    return:
      type: System.Int64
    content.vb: Public ReadOnly MetastreamVersion As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.RawStreamMetadataResult.StreamMetadata
  commentId: F:EventStore.ClientAPI.RawStreamMetadataResult.StreamMetadata
  id: StreamMetadata
  parent: EventStore.ClientAPI.RawStreamMetadataResult
  langs:
  - csharp
  - vb
  name: StreamMetadata
  nameWithType: RawStreamMetadataResult.StreamMetadata
  fullName: EventStore.ClientAPI.RawStreamMetadataResult.StreamMetadata
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/RawStreamMetadataResult.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: StreamMetadata
    path: ../EventStore/src/EventStore.ClientAPI/RawStreamMetadataResult.cs
    startLine: 27
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nA byte array containing user-specified metadata.\n"
  example: []
  syntax:
    content: public readonly byte[] StreamMetadata
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly StreamMetadata As Byte()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.RawStreamMetadataResult.#ctor(System.String,System.Boolean,System.Int64,System.Byte[])
  commentId: M:EventStore.ClientAPI.RawStreamMetadataResult.#ctor(System.String,System.Boolean,System.Int64,System.Byte[])
  id: '#ctor(System.String,System.Boolean,System.Int64,System.Byte[])'
  parent: EventStore.ClientAPI.RawStreamMetadataResult
  langs:
  - csharp
  - vb
  name: RawStreamMetadataResult(String, Boolean, Int64, Byte[])
  nameWithType: RawStreamMetadataResult.RawStreamMetadataResult(String, Boolean, Int64, Byte[])
  fullName: EventStore.ClientAPI.RawStreamMetadataResult.RawStreamMetadataResult(System.String, System.Boolean, System.Int64, System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/RawStreamMetadataResult.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/RawStreamMetadataResult.cs
    startLine: 36
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nConstructs a new instance of <xref href=\"EventStore.ClientAPI.RawStreamMetadataResult\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public RawStreamMetadataResult(string stream, bool isStreamDeleted, long metastreamVersion, byte[] streamMetadata)
    parameters:
    - id: stream
      type: System.String
      description: The name of the stream.
    - id: isStreamDeleted
      type: System.Boolean
      description: True if the stream is soft-deleted.
    - id: metastreamVersion
      type: System.Int64
      description: The version of the metadata format.
    - id: streamMetadata
      type: System.Byte[]
      description: A byte array containing user-specified metadata.
    content.vb: Public Sub New(stream As String, isStreamDeleted As Boolean, metastreamVersion As Long, streamMetadata As Byte())
  overload: EventStore.ClientAPI.RawStreamMetadataResult.#ctor*
  nameWithType.vb: RawStreamMetadataResult.RawStreamMetadataResult(String, Boolean, Int64, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.RawStreamMetadataResult.RawStreamMetadataResult(System.String, System.Boolean, System.Int64, System.Byte())
  name.vb: RawStreamMetadataResult(String, Boolean, Int64, Byte())
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: EventStore.ClientAPI.RawStreamMetadataResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<RawStreamMetadataResult>()
  nameWithType: EnumExtensions.EnumValueName<RawStreamMetadataResult>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.ClientAPI.RawStreamMetadataResult>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of RawStreamMetadataResult)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.ClientAPI.RawStreamMetadataResult)()
  name.vb: EnumValueName(Of RawStreamMetadataResult)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<RawStreamMetadataResult>
    nameWithType: EnumExtensions.EnumValueName<RawStreamMetadataResult>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.ClientAPI.RawStreamMetadataResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of RawStreamMetadataResult)
    nameWithType: EnumExtensions.EnumValueName(Of RawStreamMetadataResult)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.ClientAPI.RawStreamMetadataResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.ClientAPI.RawStreamMetadataResult
  commentId: T:EventStore.ClientAPI.RawStreamMetadataResult
  name: RawStreamMetadataResult
  nameWithType: RawStreamMetadataResult
  fullName: EventStore.ClientAPI.RawStreamMetadataResult
- uid: EventStore.ClientAPI.RawStreamMetadataResult.#ctor*
  commentId: Overload:EventStore.ClientAPI.RawStreamMetadataResult.#ctor
  name: RawStreamMetadataResult
  nameWithType: RawStreamMetadataResult.RawStreamMetadataResult
  fullName: EventStore.ClientAPI.RawStreamMetadataResult.RawStreamMetadataResult

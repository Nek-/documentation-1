### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.RecordedEvent
  commentId: T:EventStore.ClientAPI.RecordedEvent
  id: RecordedEvent
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.RecordedEvent.Created
  - EventStore.ClientAPI.RecordedEvent.CreatedEpoch
  - EventStore.ClientAPI.RecordedEvent.Data
  - EventStore.ClientAPI.RecordedEvent.EventId
  - EventStore.ClientAPI.RecordedEvent.EventNumber
  - EventStore.ClientAPI.RecordedEvent.EventStreamId
  - EventStore.ClientAPI.RecordedEvent.EventType
  - EventStore.ClientAPI.RecordedEvent.IsJson
  - EventStore.ClientAPI.RecordedEvent.Metadata
  langs:
  - csharp
  - vb
  name: RecordedEvent
  nameWithType: RecordedEvent
  fullName: EventStore.ClientAPI.RecordedEvent
  type: Class
  source:
    remote:
      path: src/EventStore.ClientAPI/RecordedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: RecordedEvent
    path: ../EventStore/src/EventStore.ClientAPI/RecordedEvent.cs
    startLine: 9
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRepresents a previously written event\n"
  example: []
  syntax:
    content: public class RecordedEvent
    content.vb: Public Class RecordedEvent
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.RecordedEvent.EventStreamId
  commentId: F:EventStore.ClientAPI.RecordedEvent.EventStreamId
  id: EventStreamId
  parent: EventStore.ClientAPI.RecordedEvent
  langs:
  - csharp
  - vb
  name: EventStreamId
  nameWithType: RecordedEvent.EventStreamId
  fullName: EventStore.ClientAPI.RecordedEvent.EventStreamId
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/RecordedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: EventStreamId
    path: ../EventStore/src/EventStore.ClientAPI/RecordedEvent.cs
    startLine: 13
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe Event Stream that this event belongs to\n"
  example: []
  syntax:
    content: public readonly string EventStreamId
    return:
      type: System.String
    content.vb: Public ReadOnly EventStreamId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.RecordedEvent.EventId
  commentId: F:EventStore.ClientAPI.RecordedEvent.EventId
  id: EventId
  parent: EventStore.ClientAPI.RecordedEvent
  langs:
  - csharp
  - vb
  name: EventId
  nameWithType: RecordedEvent.EventId
  fullName: EventStore.ClientAPI.RecordedEvent.EventId
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/RecordedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: EventId
    path: ../EventStore/src/EventStore.ClientAPI/RecordedEvent.cs
    startLine: 18
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe Unique Identifier representing this event\n"
  example: []
  syntax:
    content: public readonly Guid EventId
    return:
      type: System.Guid
    content.vb: Public ReadOnly EventId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.RecordedEvent.EventNumber
  commentId: F:EventStore.ClientAPI.RecordedEvent.EventNumber
  id: EventNumber
  parent: EventStore.ClientAPI.RecordedEvent
  langs:
  - csharp
  - vb
  name: EventNumber
  nameWithType: RecordedEvent.EventNumber
  fullName: EventStore.ClientAPI.RecordedEvent.EventNumber
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/RecordedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: EventNumber
    path: ../EventStore/src/EventStore.ClientAPI/RecordedEvent.cs
    startLine: 23
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe number of this event in the stream\n"
  example: []
  syntax:
    content: public readonly long EventNumber
    return:
      type: System.Int64
    content.vb: Public ReadOnly EventNumber As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.RecordedEvent.EventType
  commentId: F:EventStore.ClientAPI.RecordedEvent.EventType
  id: EventType
  parent: EventStore.ClientAPI.RecordedEvent
  langs:
  - csharp
  - vb
  name: EventType
  nameWithType: RecordedEvent.EventType
  fullName: EventStore.ClientAPI.RecordedEvent.EventType
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/RecordedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: EventType
    path: ../EventStore/src/EventStore.ClientAPI/RecordedEvent.cs
    startLine: 28
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe type of event this is\n"
  example: []
  syntax:
    content: public readonly string EventType
    return:
      type: System.String
    content.vb: Public ReadOnly EventType As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.RecordedEvent.Data
  commentId: F:EventStore.ClientAPI.RecordedEvent.Data
  id: Data
  parent: EventStore.ClientAPI.RecordedEvent
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: RecordedEvent.Data
  fullName: EventStore.ClientAPI.RecordedEvent.Data
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/RecordedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Data
    path: ../EventStore/src/EventStore.ClientAPI/RecordedEvent.cs
    startLine: 33
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nA byte array representing the data of this event\n"
  example: []
  syntax:
    content: public readonly byte[] Data
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Data As Byte()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.RecordedEvent.Metadata
  commentId: F:EventStore.ClientAPI.RecordedEvent.Metadata
  id: Metadata
  parent: EventStore.ClientAPI.RecordedEvent
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: RecordedEvent.Metadata
  fullName: EventStore.ClientAPI.RecordedEvent.Metadata
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/RecordedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Metadata
    path: ../EventStore/src/EventStore.ClientAPI/RecordedEvent.cs
    startLine: 38
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nA byte array representing the metadata associated with this event\n"
  example: []
  syntax:
    content: public readonly byte[] Metadata
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Metadata As Byte()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.RecordedEvent.IsJson
  commentId: F:EventStore.ClientAPI.RecordedEvent.IsJson
  id: IsJson
  parent: EventStore.ClientAPI.RecordedEvent
  langs:
  - csharp
  - vb
  name: IsJson
  nameWithType: RecordedEvent.IsJson
  fullName: EventStore.ClientAPI.RecordedEvent.IsJson
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/RecordedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: IsJson
    path: ../EventStore/src/EventStore.ClientAPI/RecordedEvent.cs
    startLine: 43
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nIndicates whether the content is internally marked as json\n"
  example: []
  syntax:
    content: public readonly bool IsJson
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsJson As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.RecordedEvent.Created
  commentId: F:EventStore.ClientAPI.RecordedEvent.Created
  id: Created
  parent: EventStore.ClientAPI.RecordedEvent
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: RecordedEvent.Created
  fullName: EventStore.ClientAPI.RecordedEvent.Created
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/RecordedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Created
    path: ../EventStore/src/EventStore.ClientAPI/RecordedEvent.cs
    startLine: 48
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nA datetime representing when this event was created in the system\n"
  example: []
  syntax:
    content: public DateTime Created
    return:
      type: System.DateTime
    content.vb: Public Created As Date
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.RecordedEvent.CreatedEpoch
  commentId: F:EventStore.ClientAPI.RecordedEvent.CreatedEpoch
  id: CreatedEpoch
  parent: EventStore.ClientAPI.RecordedEvent
  langs:
  - csharp
  - vb
  name: CreatedEpoch
  nameWithType: RecordedEvent.CreatedEpoch
  fullName: EventStore.ClientAPI.RecordedEvent.CreatedEpoch
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/RecordedEvent.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: CreatedEpoch
    path: ../EventStore/src/EventStore.ClientAPI/RecordedEvent.cs
    startLine: 53
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nA long representing the milliseconds since the epoch when the was created in the system\n"
  example: []
  syntax:
    content: public long CreatedEpoch
    return:
      type: System.Int64
    content.vb: Public CreatedEpoch As Long
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime

### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.SliceReadStatus
  commentId: T:EventStore.ClientAPI.SliceReadStatus
  id: SliceReadStatus
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.SliceReadStatus.StreamDeleted
  - EventStore.ClientAPI.SliceReadStatus.StreamNotFound
  - EventStore.ClientAPI.SliceReadStatus.Success
  langs:
  - csharp
  - vb
  name: SliceReadStatus
  nameWithType: SliceReadStatus
  fullName: EventStore.ClientAPI.SliceReadStatus
  type: Enum
  source:
    id: SliceReadStatus
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/SliceReadStatus.cs
    startLine: 5
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nEnumeration detailing the possible outcomes of reading a \nslice of a stream.\n"
  example: []
  syntax:
    content: public enum SliceReadStatus
    content.vb: Public Enum SliceReadStatus
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.ClientAPI.SliceReadStatus.Success
  commentId: F:EventStore.ClientAPI.SliceReadStatus.Success
  id: Success
  parent: EventStore.ClientAPI.SliceReadStatus
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: SliceReadStatus.Success
  fullName: EventStore.ClientAPI.SliceReadStatus.Success
  type: Field
  source:
    id: Success
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/SliceReadStatus.cs
    startLine: 9
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe read was successful.\n"
  example: []
  syntax:
    content: Success = 0
    return:
      type: EventStore.ClientAPI.SliceReadStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.SliceReadStatus.StreamNotFound
  commentId: F:EventStore.ClientAPI.SliceReadStatus.StreamNotFound
  id: StreamNotFound
  parent: EventStore.ClientAPI.SliceReadStatus
  langs:
  - csharp
  - vb
  name: StreamNotFound
  nameWithType: SliceReadStatus.StreamNotFound
  fullName: EventStore.ClientAPI.SliceReadStatus.StreamNotFound
  type: Field
  source:
    id: StreamNotFound
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/SliceReadStatus.cs
    startLine: 14
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe stream was not found.\n"
  example: []
  syntax:
    content: StreamNotFound = 1
    return:
      type: EventStore.ClientAPI.SliceReadStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.ClientAPI.SliceReadStatus.StreamDeleted
  commentId: F:EventStore.ClientAPI.SliceReadStatus.StreamDeleted
  id: StreamDeleted
  parent: EventStore.ClientAPI.SliceReadStatus
  langs:
  - csharp
  - vb
  name: StreamDeleted
  nameWithType: SliceReadStatus.StreamDeleted
  fullName: EventStore.ClientAPI.SliceReadStatus.StreamDeleted
  type: Field
  source:
    id: StreamDeleted
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/SliceReadStatus.cs
    startLine: 19
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe stream has previously existed but is deleted.\n"
  example: []
  syntax:
    content: StreamDeleted = 2
    return:
      type: EventStore.ClientAPI.SliceReadStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: EventStore.ClientAPI.SliceReadStatus
  commentId: T:EventStore.ClientAPI.SliceReadStatus
  parent: EventStore.ClientAPI
  name: SliceReadStatus
  nameWithType: SliceReadStatus
  fullName: EventStore.ClientAPI.SliceReadStatus

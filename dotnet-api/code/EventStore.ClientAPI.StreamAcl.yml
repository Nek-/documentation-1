### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.StreamAcl
  commentId: T:EventStore.ClientAPI.StreamAcl
  id: StreamAcl
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.StreamAcl.#ctor(System.String,System.String,System.String,System.String,System.String)
  - EventStore.ClientAPI.StreamAcl.#ctor(System.String[],System.String[],System.String[],System.String[],System.String[])
  - EventStore.ClientAPI.StreamAcl.DeleteRole
  - EventStore.ClientAPI.StreamAcl.DeleteRoles
  - EventStore.ClientAPI.StreamAcl.MetaReadRole
  - EventStore.ClientAPI.StreamAcl.MetaReadRoles
  - EventStore.ClientAPI.StreamAcl.MetaWriteRole
  - EventStore.ClientAPI.StreamAcl.MetaWriteRoles
  - EventStore.ClientAPI.StreamAcl.ReadRole
  - EventStore.ClientAPI.StreamAcl.ReadRoles
  - EventStore.ClientAPI.StreamAcl.ToString
  - EventStore.ClientAPI.StreamAcl.WriteRole
  - EventStore.ClientAPI.StreamAcl.WriteRoles
  langs:
  - csharp
  - vb
  name: StreamAcl
  nameWithType: StreamAcl
  fullName: EventStore.ClientAPI.StreamAcl
  type: Class
  source:
    id: StreamAcl
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamAcl.cs
    startLine: 6
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRepresents an access control list for a stream\n"
  example: []
  syntax:
    content: public class StreamAcl
    content.vb: Public Class StreamAcl
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.StreamAcl.ReadRoles
  commentId: F:EventStore.ClientAPI.StreamAcl.ReadRoles
  id: ReadRoles
  parent: EventStore.ClientAPI.StreamAcl
  langs:
  - csharp
  - vb
  name: ReadRoles
  nameWithType: StreamAcl.ReadRoles
  fullName: EventStore.ClientAPI.StreamAcl.ReadRoles
  type: Field
  source:
    id: ReadRoles
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamAcl.cs
    startLine: 10
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRoles and users permitted to read the stream\n"
  example: []
  syntax:
    content: public readonly string[] ReadRoles
    return:
      type: System.String[]
    content.vb: Public ReadOnly ReadRoles As String()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamAcl.WriteRoles
  commentId: F:EventStore.ClientAPI.StreamAcl.WriteRoles
  id: WriteRoles
  parent: EventStore.ClientAPI.StreamAcl
  langs:
  - csharp
  - vb
  name: WriteRoles
  nameWithType: StreamAcl.WriteRoles
  fullName: EventStore.ClientAPI.StreamAcl.WriteRoles
  type: Field
  source:
    id: WriteRoles
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamAcl.cs
    startLine: 15
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRoles and users permitted to write to the stream\n"
  example: []
  syntax:
    content: public readonly string[] WriteRoles
    return:
      type: System.String[]
    content.vb: Public ReadOnly WriteRoles As String()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamAcl.DeleteRoles
  commentId: F:EventStore.ClientAPI.StreamAcl.DeleteRoles
  id: DeleteRoles
  parent: EventStore.ClientAPI.StreamAcl
  langs:
  - csharp
  - vb
  name: DeleteRoles
  nameWithType: StreamAcl.DeleteRoles
  fullName: EventStore.ClientAPI.StreamAcl.DeleteRoles
  type: Field
  source:
    id: DeleteRoles
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamAcl.cs
    startLine: 20
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRoles and users permitted to delete the stream\n"
  example: []
  syntax:
    content: public readonly string[] DeleteRoles
    return:
      type: System.String[]
    content.vb: Public ReadOnly DeleteRoles As String()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamAcl.MetaReadRoles
  commentId: F:EventStore.ClientAPI.StreamAcl.MetaReadRoles
  id: MetaReadRoles
  parent: EventStore.ClientAPI.StreamAcl
  langs:
  - csharp
  - vb
  name: MetaReadRoles
  nameWithType: StreamAcl.MetaReadRoles
  fullName: EventStore.ClientAPI.StreamAcl.MetaReadRoles
  type: Field
  source:
    id: MetaReadRoles
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamAcl.cs
    startLine: 25
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRoles and users permitted to read stream metadata\n"
  example: []
  syntax:
    content: public readonly string[] MetaReadRoles
    return:
      type: System.String[]
    content.vb: Public ReadOnly MetaReadRoles As String()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamAcl.MetaWriteRoles
  commentId: F:EventStore.ClientAPI.StreamAcl.MetaWriteRoles
  id: MetaWriteRoles
  parent: EventStore.ClientAPI.StreamAcl
  langs:
  - csharp
  - vb
  name: MetaWriteRoles
  nameWithType: StreamAcl.MetaWriteRoles
  fullName: EventStore.ClientAPI.StreamAcl.MetaWriteRoles
  type: Field
  source:
    id: MetaWriteRoles
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamAcl.cs
    startLine: 30
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRoles and users permitted to write stream metadata\n"
  example: []
  syntax:
    content: public readonly string[] MetaWriteRoles
    return:
      type: System.String[]
    content.vb: Public ReadOnly MetaWriteRoles As String()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamAcl.ReadRole
  commentId: P:EventStore.ClientAPI.StreamAcl.ReadRole
  id: ReadRole
  parent: EventStore.ClientAPI.StreamAcl
  langs:
  - csharp
  - vb
  name: ReadRole
  nameWithType: StreamAcl.ReadRole
  fullName: EventStore.ClientAPI.StreamAcl.ReadRole
  type: Property
  source:
    id: ReadRole
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamAcl.cs
    startLine: 35
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRole or user permitted to read the stream\n"
  example: []
  syntax:
    content: public string ReadRole { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ReadRole As String
  overload: EventStore.ClientAPI.StreamAcl.ReadRole*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamAcl.WriteRole
  commentId: P:EventStore.ClientAPI.StreamAcl.WriteRole
  id: WriteRole
  parent: EventStore.ClientAPI.StreamAcl
  langs:
  - csharp
  - vb
  name: WriteRole
  nameWithType: StreamAcl.WriteRole
  fullName: EventStore.ClientAPI.StreamAcl.WriteRole
  type: Property
  source:
    id: WriteRole
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamAcl.cs
    startLine: 42
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRole or user permitted to write to the stream\n"
  example: []
  syntax:
    content: public string WriteRole { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property WriteRole As String
  overload: EventStore.ClientAPI.StreamAcl.WriteRole*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamAcl.DeleteRole
  commentId: P:EventStore.ClientAPI.StreamAcl.DeleteRole
  id: DeleteRole
  parent: EventStore.ClientAPI.StreamAcl
  langs:
  - csharp
  - vb
  name: DeleteRole
  nameWithType: StreamAcl.DeleteRole
  fullName: EventStore.ClientAPI.StreamAcl.DeleteRole
  type: Property
  source:
    id: DeleteRole
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamAcl.cs
    startLine: 49
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRole or user permitted to delete from the stream \n"
  example: []
  syntax:
    content: public string DeleteRole { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property DeleteRole As String
  overload: EventStore.ClientAPI.StreamAcl.DeleteRole*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamAcl.MetaReadRole
  commentId: P:EventStore.ClientAPI.StreamAcl.MetaReadRole
  id: MetaReadRole
  parent: EventStore.ClientAPI.StreamAcl
  langs:
  - csharp
  - vb
  name: MetaReadRole
  nameWithType: StreamAcl.MetaReadRole
  fullName: EventStore.ClientAPI.StreamAcl.MetaReadRole
  type: Property
  source:
    id: MetaReadRole
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamAcl.cs
    startLine: 56
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRole or user permitted to read the stream metadata\n"
  example: []
  syntax:
    content: public string MetaReadRole { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property MetaReadRole As String
  overload: EventStore.ClientAPI.StreamAcl.MetaReadRole*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamAcl.MetaWriteRole
  commentId: P:EventStore.ClientAPI.StreamAcl.MetaWriteRole
  id: MetaWriteRole
  parent: EventStore.ClientAPI.StreamAcl
  langs:
  - csharp
  - vb
  name: MetaWriteRole
  nameWithType: StreamAcl.MetaWriteRole
  fullName: EventStore.ClientAPI.StreamAcl.MetaWriteRole
  type: Property
  source:
    id: MetaWriteRole
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamAcl.cs
    startLine: 63
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRole or user permitted to write to the stream metadata\n"
  example: []
  syntax:
    content: public string MetaWriteRole { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property MetaWriteRole As String
  overload: EventStore.ClientAPI.StreamAcl.MetaWriteRole*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamAcl.#ctor(System.String,System.String,System.String,System.String,System.String)
  commentId: M:EventStore.ClientAPI.StreamAcl.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: EventStore.ClientAPI.StreamAcl
  langs:
  - csharp
  - vb
  name: StreamAcl(String, String, String, String, String)
  nameWithType: StreamAcl.StreamAcl(String, String, String, String, String)
  fullName: EventStore.ClientAPI.StreamAcl.StreamAcl(System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamAcl.cs
    startLine: 75
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nCreates a new Stream Access Control List\n"
  example: []
  syntax:
    content: public StreamAcl(string readRole, string writeRole, string deleteRole, string metaReadRole, string metaWriteRole)
    parameters:
    - id: readRole
      type: System.String
      description: Role and user permitted to read the stream
    - id: writeRole
      type: System.String
      description: Role and user permitted to write to the stream
    - id: deleteRole
      type: System.String
      description: Role and user permitted to delete the stream
    - id: metaReadRole
      type: System.String
      description: Role and user permitted to read stream metadata
    - id: metaWriteRole
      type: System.String
      description: Role and user permitted to write stream metadata
    content.vb: Public Sub New(readRole As String, writeRole As String, deleteRole As String, metaReadRole As String, metaWriteRole As String)
  overload: EventStore.ClientAPI.StreamAcl.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamAcl.#ctor(System.String[],System.String[],System.String[],System.String[],System.String[])
  commentId: M:EventStore.ClientAPI.StreamAcl.#ctor(System.String[],System.String[],System.String[],System.String[],System.String[])
  id: '#ctor(System.String[],System.String[],System.String[],System.String[],System.String[])'
  parent: EventStore.ClientAPI.StreamAcl
  langs:
  - csharp
  - vb
  name: StreamAcl(String[], String[], String[], String[], String[])
  nameWithType: StreamAcl.StreamAcl(String[], String[], String[], String[], String[])
  fullName: EventStore.ClientAPI.StreamAcl.StreamAcl(System.String[], System.String[], System.String[], System.String[], System.String[])
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamAcl.cs
    startLine: 92
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\n\n"
  example: []
  syntax:
    content: public StreamAcl(string[] readRoles, string[] writeRoles, string[] deleteRoles, string[] metaReadRoles, string[] metaWriteRoles)
    parameters:
    - id: readRoles
      type: System.String[]
      description: Roles and users permitted to read the stream
    - id: writeRoles
      type: System.String[]
      description: Roles and users permitted to write to the stream
    - id: deleteRoles
      type: System.String[]
      description: Roles and users permitted to delete the stream
    - id: metaReadRoles
      type: System.String[]
      description: Roles and users permitted to read stream metadata
    - id: metaWriteRoles
      type: System.String[]
      description: Roles and users permitted to write stream metadata
    content.vb: Public Sub New(readRoles As String(), writeRoles As String(), deleteRoles As String(), metaReadRoles As String(), metaWriteRoles As String())
  overload: EventStore.ClientAPI.StreamAcl.#ctor*
  nameWithType.vb: StreamAcl.StreamAcl(String(), String(), String(), String(), String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.StreamAcl.StreamAcl(System.String(), System.String(), System.String(), System.String(), System.String())
  name.vb: StreamAcl(String(), String(), String(), String(), String())
- uid: EventStore.ClientAPI.StreamAcl.ToString
  commentId: M:EventStore.ClientAPI.StreamAcl.ToString
  id: ToString
  parent: EventStore.ClientAPI.StreamAcl
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: StreamAcl.ToString()
  fullName: EventStore.ClientAPI.StreamAcl.ToString()
  type: Method
  source:
    id: ToString
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamAcl.cs
    startLine: 108
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nReturns a string that represents the current object.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA string that represents the current object.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: EventStore.ClientAPI.StreamAcl.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.ClientAPI.StreamAcl.ReadRole*
  commentId: Overload:EventStore.ClientAPI.StreamAcl.ReadRole
  name: ReadRole
  nameWithType: StreamAcl.ReadRole
  fullName: EventStore.ClientAPI.StreamAcl.ReadRole
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.ClientAPI.StreamAcl.WriteRole*
  commentId: Overload:EventStore.ClientAPI.StreamAcl.WriteRole
  name: WriteRole
  nameWithType: StreamAcl.WriteRole
  fullName: EventStore.ClientAPI.StreamAcl.WriteRole
- uid: EventStore.ClientAPI.StreamAcl.DeleteRole*
  commentId: Overload:EventStore.ClientAPI.StreamAcl.DeleteRole
  name: DeleteRole
  nameWithType: StreamAcl.DeleteRole
  fullName: EventStore.ClientAPI.StreamAcl.DeleteRole
- uid: EventStore.ClientAPI.StreamAcl.MetaReadRole*
  commentId: Overload:EventStore.ClientAPI.StreamAcl.MetaReadRole
  name: MetaReadRole
  nameWithType: StreamAcl.MetaReadRole
  fullName: EventStore.ClientAPI.StreamAcl.MetaReadRole
- uid: EventStore.ClientAPI.StreamAcl.MetaWriteRole*
  commentId: Overload:EventStore.ClientAPI.StreamAcl.MetaWriteRole
  name: MetaWriteRole
  nameWithType: StreamAcl.MetaWriteRole
  fullName: EventStore.ClientAPI.StreamAcl.MetaWriteRole
- uid: EventStore.ClientAPI.StreamAcl.#ctor*
  commentId: Overload:EventStore.ClientAPI.StreamAcl.#ctor
  name: StreamAcl
  nameWithType: StreamAcl.StreamAcl
  fullName: EventStore.ClientAPI.StreamAcl.StreamAcl
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.StreamAcl.ToString*
  commentId: Overload:EventStore.ClientAPI.StreamAcl.ToString
  name: ToString
  nameWithType: StreamAcl.ToString
  fullName: EventStore.ClientAPI.StreamAcl.ToString

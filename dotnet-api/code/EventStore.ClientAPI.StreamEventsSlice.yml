### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.StreamEventsSlice
  commentId: T:EventStore.ClientAPI.StreamEventsSlice
  id: StreamEventsSlice
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.StreamEventsSlice.Events
  - EventStore.ClientAPI.StreamEventsSlice.FromEventNumber
  - EventStore.ClientAPI.StreamEventsSlice.IsEndOfStream
  - EventStore.ClientAPI.StreamEventsSlice.LastEventNumber
  - EventStore.ClientAPI.StreamEventsSlice.NextEventNumber
  - EventStore.ClientAPI.StreamEventsSlice.ReadDirection
  - EventStore.ClientAPI.StreamEventsSlice.Status
  - EventStore.ClientAPI.StreamEventsSlice.Stream
  langs:
  - csharp
  - vb
  name: StreamEventsSlice
  nameWithType: StreamEventsSlice
  fullName: EventStore.ClientAPI.StreamEventsSlice
  type: Class
  source:
    remote:
      path: src/EventStore.ClientAPI/StreamEventsSlice.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: StreamEventsSlice
    path: ../EventStore/src/EventStore.ClientAPI/StreamEventsSlice.cs
    startLine: 8
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nA stream events slice represents the result of a single read operation to Event Store.\n"
  example: []
  syntax:
    content: 'public class StreamEventsSlice : object'
    content.vb: >-
      Public Class StreamEventsSlice
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.StreamEventsSlice.Status
  commentId: F:EventStore.ClientAPI.StreamEventsSlice.Status
  id: Status
  parent: EventStore.ClientAPI.StreamEventsSlice
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: StreamEventsSlice.Status
  fullName: EventStore.ClientAPI.StreamEventsSlice.Status
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/StreamEventsSlice.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Status
    path: ../EventStore/src/EventStore.ClientAPI/StreamEventsSlice.cs
    startLine: 12
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe <xref href=\"EventStore.ClientAPI.SliceReadStatus\" data-throw-if-not-resolved=\"false\"></xref> representing the status of this read attempt.\n"
  example: []
  syntax:
    content: public readonly SliceReadStatus Status
    return:
      type: EventStore.ClientAPI.SliceReadStatus
    content.vb: Public ReadOnly Status As SliceReadStatus
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamEventsSlice.Stream
  commentId: F:EventStore.ClientAPI.StreamEventsSlice.Stream
  id: Stream
  parent: EventStore.ClientAPI.StreamEventsSlice
  langs:
  - csharp
  - vb
  name: Stream
  nameWithType: StreamEventsSlice.Stream
  fullName: EventStore.ClientAPI.StreamEventsSlice.Stream
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/StreamEventsSlice.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Stream
    path: ../EventStore/src/EventStore.ClientAPI/StreamEventsSlice.cs
    startLine: 17
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe name of the stream to read.\n"
  example: []
  syntax:
    content: public readonly string Stream
    return:
      type: System.String
    content.vb: Public ReadOnly Stream As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamEventsSlice.FromEventNumber
  commentId: F:EventStore.ClientAPI.StreamEventsSlice.FromEventNumber
  id: FromEventNumber
  parent: EventStore.ClientAPI.StreamEventsSlice
  langs:
  - csharp
  - vb
  name: FromEventNumber
  nameWithType: StreamEventsSlice.FromEventNumber
  fullName: EventStore.ClientAPI.StreamEventsSlice.FromEventNumber
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/StreamEventsSlice.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: FromEventNumber
    path: ../EventStore/src/EventStore.ClientAPI/StreamEventsSlice.cs
    startLine: 22
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe starting point (represented as a sequence number) of the read operation.\n"
  example: []
  syntax:
    content: public readonly long FromEventNumber
    return:
      type: System.Int64
    content.vb: Public ReadOnly FromEventNumber As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamEventsSlice.ReadDirection
  commentId: F:EventStore.ClientAPI.StreamEventsSlice.ReadDirection
  id: ReadDirection
  parent: EventStore.ClientAPI.StreamEventsSlice
  langs:
  - csharp
  - vb
  name: ReadDirection
  nameWithType: StreamEventsSlice.ReadDirection
  fullName: EventStore.ClientAPI.StreamEventsSlice.ReadDirection
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/StreamEventsSlice.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ReadDirection
    path: ../EventStore/src/EventStore.ClientAPI/StreamEventsSlice.cs
    startLine: 27
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe direction of read request.\n"
  example: []
  syntax:
    content: public readonly ReadDirection ReadDirection
    return:
      type: EventStore.ClientAPI.ReadDirection
    content.vb: Public ReadOnly ReadDirection As ReadDirection
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamEventsSlice.Events
  commentId: F:EventStore.ClientAPI.StreamEventsSlice.Events
  id: Events
  parent: EventStore.ClientAPI.StreamEventsSlice
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: StreamEventsSlice.Events
  fullName: EventStore.ClientAPI.StreamEventsSlice.Events
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/StreamEventsSlice.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Events
    path: ../EventStore/src/EventStore.ClientAPI/StreamEventsSlice.cs
    startLine: 32
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe events read represented as <xref href=\"EventStore.ClientAPI.ResolvedEvent\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public readonly ResolvedEvent[] Events
    return:
      type: EventStore.ClientAPI.ResolvedEvent[]
    content.vb: Public ReadOnly Events As ResolvedEvent()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamEventsSlice.NextEventNumber
  commentId: F:EventStore.ClientAPI.StreamEventsSlice.NextEventNumber
  id: NextEventNumber
  parent: EventStore.ClientAPI.StreamEventsSlice
  langs:
  - csharp
  - vb
  name: NextEventNumber
  nameWithType: StreamEventsSlice.NextEventNumber
  fullName: EventStore.ClientAPI.StreamEventsSlice.NextEventNumber
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/StreamEventsSlice.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: NextEventNumber
    path: ../EventStore/src/EventStore.ClientAPI/StreamEventsSlice.cs
    startLine: 37
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe next event number that can be read.\n"
  example: []
  syntax:
    content: public readonly long NextEventNumber
    return:
      type: System.Int64
    content.vb: Public ReadOnly NextEventNumber As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamEventsSlice.LastEventNumber
  commentId: F:EventStore.ClientAPI.StreamEventsSlice.LastEventNumber
  id: LastEventNumber
  parent: EventStore.ClientAPI.StreamEventsSlice
  langs:
  - csharp
  - vb
  name: LastEventNumber
  nameWithType: StreamEventsSlice.LastEventNumber
  fullName: EventStore.ClientAPI.StreamEventsSlice.LastEventNumber
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/StreamEventsSlice.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: LastEventNumber
    path: ../EventStore/src/EventStore.ClientAPI/StreamEventsSlice.cs
    startLine: 42
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe last event number in the stream.\n"
  example: []
  syntax:
    content: public readonly long LastEventNumber
    return:
      type: System.Int64
    content.vb: Public ReadOnly LastEventNumber As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamEventsSlice.IsEndOfStream
  commentId: F:EventStore.ClientAPI.StreamEventsSlice.IsEndOfStream
  id: IsEndOfStream
  parent: EventStore.ClientAPI.StreamEventsSlice
  langs:
  - csharp
  - vb
  name: IsEndOfStream
  nameWithType: StreamEventsSlice.IsEndOfStream
  fullName: EventStore.ClientAPI.StreamEventsSlice.IsEndOfStream
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/StreamEventsSlice.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: IsEndOfStream
    path: ../EventStore/src/EventStore.ClientAPI/StreamEventsSlice.cs
    startLine: 47
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nA boolean representing whether or not this is the end of the stream.\n"
  example: []
  syntax:
    content: public readonly bool IsEndOfStream
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsEndOfStream As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.ClientAPI.SliceReadStatus
  commentId: T:EventStore.ClientAPI.SliceReadStatus
  parent: EventStore.ClientAPI
  name: SliceReadStatus
  nameWithType: SliceReadStatus
  fullName: EventStore.ClientAPI.SliceReadStatus
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.ClientAPI.ReadDirection
  commentId: T:EventStore.ClientAPI.ReadDirection
  parent: EventStore.ClientAPI
  name: ReadDirection
  nameWithType: ReadDirection
  fullName: EventStore.ClientAPI.ReadDirection
- uid: EventStore.ClientAPI.ResolvedEvent
  commentId: T:EventStore.ClientAPI.ResolvedEvent
  parent: EventStore.ClientAPI
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.ClientAPI.ResolvedEvent
- uid: EventStore.ClientAPI.ResolvedEvent[]
  isExternal: true
  name: ResolvedEvent[]
  nameWithType: ResolvedEvent[]
  fullName: EventStore.ClientAPI.ResolvedEvent[]
  nameWithType.vb: ResolvedEvent()
  fullName.vb: EventStore.ClientAPI.ResolvedEvent()
  name.vb: ResolvedEvent()
  spec.csharp:
  - uid: EventStore.ClientAPI.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.ClientAPI.ResolvedEvent
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.ClientAPI.ResolvedEvent
    name: ResolvedEvent
    nameWithType: ResolvedEvent
    fullName: EventStore.ClientAPI.ResolvedEvent
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean

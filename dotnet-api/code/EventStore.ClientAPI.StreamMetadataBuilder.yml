### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.StreamMetadataBuilder
  commentId: T:EventStore.ClientAPI.StreamMetadataBuilder
  id: StreamMetadataBuilder
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.StreamMetadataBuilder.Build
  - EventStore.ClientAPI.StreamMetadataBuilder.CustomPropertyKeys
  - EventStore.ClientAPI.StreamMetadataBuilder.op_Implicit(EventStore.ClientAPI.StreamMetadataBuilder)~EventStore.ClientAPI.StreamMetadata
  - EventStore.ClientAPI.StreamMetadataBuilder.RemoveCustomProperty(System.String)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetCacheControl(TimeSpan)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Boolean)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Decimal)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Double)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Int32)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Int64)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Boolean})
  - EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Decimal})
  - EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Double})
  - EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Int32})
  - EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Int64})
  - EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Single})
  - EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Single)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.String)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetCustomPropertyWithValueAsRawJsonString(System.String,System.String)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetDeleteRole(System.String)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetDeleteRoles(System.String[])
  - EventStore.ClientAPI.StreamMetadataBuilder.SetMaxAge(TimeSpan)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetMaxCount(System.Int64)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataReadRole(System.String)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataReadRoles(System.String[])
  - EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataWriteRole(System.String)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataWriteRoles(System.String[])
  - EventStore.ClientAPI.StreamMetadataBuilder.SetReadRole(System.String)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetReadRoles(System.String[])
  - EventStore.ClientAPI.StreamMetadataBuilder.SetTruncateBefore(System.Int64)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetWriteRole(System.String)
  - EventStore.ClientAPI.StreamMetadataBuilder.SetWriteRoles(System.String[])
  langs:
  - csharp
  - vb
  name: StreamMetadataBuilder
  nameWithType: StreamMetadataBuilder
  fullName: EventStore.ClientAPI.StreamMetadataBuilder
  type: Class
  source:
    id: StreamMetadataBuilder
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 10
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nBuilder for <xref href=\"EventStore.ClientAPI.StreamMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class StreamMetadataBuilder : object'
    content.vb: >-
      Public Class StreamMetadataBuilder
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.StreamMetadataBuilder.CustomPropertyKeys
  commentId: P:EventStore.ClientAPI.StreamMetadataBuilder.CustomPropertyKeys
  id: CustomPropertyKeys
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: CustomPropertyKeys
  nameWithType: StreamMetadataBuilder.CustomPropertyKeys
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.CustomPropertyKeys
  type: Property
  source:
    id: CustomPropertyKeys
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 28
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nAll existing custom property keys.\n"
  remarks: "\nReturns a copy of the key list so it&apos;s safe to enumerate whilst removing custom properties.\n"
  example: []
  syntax:
    content: public IEnumerable<string> CustomPropertyKeys { get; }
    parameters: []
    return:
      type: IEnumerable{System.String}
    content.vb: Public ReadOnly Property CustomPropertyKeys As IEnumerable(Of String)
  overload: EventStore.ClientAPI.StreamMetadataBuilder.CustomPropertyKeys*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.StreamMetadataBuilder.op_Implicit(EventStore.ClientAPI.StreamMetadataBuilder)~EventStore.ClientAPI.StreamMetadata
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.op_Implicit(EventStore.ClientAPI.StreamMetadataBuilder)~EventStore.ClientAPI.StreamMetadata
  id: op_Implicit(EventStore.ClientAPI.StreamMetadataBuilder)~EventStore.ClientAPI.StreamMetadata
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: Implicit(StreamMetadataBuilder to StreamMetadata)
  nameWithType: StreamMetadataBuilder.Implicit(StreamMetadataBuilder to StreamMetadata)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.Implicit(EventStore.ClientAPI.StreamMetadataBuilder to EventStore.ClientAPI.StreamMetadata)
  type: Operator
  source:
    id: op_Implicit
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 60
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nBuilds a <xref href=\"EventStore.ClientAPI.StreamMetadata\" data-throw-if-not-resolved=\"false\"></xref> from a <xref href=\"EventStore.ClientAPI.StreamMetadataBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static implicit operator StreamMetadata(StreamMetadataBuilder builder)
    parameters:
    - id: builder
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: A <xref href="EventStore.ClientAPI.StreamMetadataBuilder" data-throw-if-not-resolved="false"></xref>.
    return:
      type: EventStore.ClientAPI.StreamMetadata
      description: A <xref href="EventStore.ClientAPI.StreamMetadata" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Widening Operator CType(builder As StreamMetadataBuilder) As StreamMetadata
  overload: EventStore.ClientAPI.StreamMetadataBuilder.op_Implicit*
  nameWithType.vb: StreamMetadataBuilder.Widening(StreamMetadataBuilder to StreamMetadata)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.ClientAPI.StreamMetadataBuilder.Widening(EventStore.ClientAPI.StreamMetadataBuilder to EventStore.ClientAPI.StreamMetadata)
  name.vb: Widening(StreamMetadataBuilder to StreamMetadata)
- uid: EventStore.ClientAPI.StreamMetadataBuilder.Build
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.Build
  id: Build
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: StreamMetadataBuilder.Build()
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.Build()
  type: Method
  source:
    id: Build
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 67
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nBuilds a <xref href=\"EventStore.ClientAPI.StreamMetadata\" data-throw-if-not-resolved=\"false\"></xref> from a <xref href=\"EventStore.ClientAPI.StreamMetadataBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public StreamMetadata Build()
    return:
      type: EventStore.ClientAPI.StreamMetadata
    content.vb: Public Function Build As StreamMetadata
  overload: EventStore.ClientAPI.StreamMetadataBuilder.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetMaxCount(System.Int64)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetMaxCount(System.Int64)
  id: SetMaxCount(System.Int64)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetMaxCount(Int64)
  nameWithType: StreamMetadataBuilder.SetMaxCount(Int64)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetMaxCount(System.Int64)
  type: Method
  source:
    id: SetMaxCount
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 84
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the maximum number of events allowed in the stream.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetMaxCount(long maxCount)
    parameters:
    - id: maxCount
      type: System.Int64
      description: The maximum number of events allowed in the stream.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetMaxCount(maxCount As Long) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetMaxCount*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetMaxAge(TimeSpan)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetMaxAge(TimeSpan)
  id: SetMaxAge(TimeSpan)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetMaxAge(TimeSpan)
  nameWithType: StreamMetadataBuilder.SetMaxAge(TimeSpan)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetMaxAge(TimeSpan)
  type: Method
  source:
    id: SetMaxAge
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 95
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the maximum age of events allowed in the stream.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetMaxAge(TimeSpan maxAge)
    parameters:
    - id: maxAge
      type: TimeSpan
      description: The maximum age of events allowed in the stream.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetMaxAge(maxAge As TimeSpan) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetMaxAge*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetTruncateBefore(System.Int64)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetTruncateBefore(System.Int64)
  id: SetTruncateBefore(System.Int64)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetTruncateBefore(Int64)
  nameWithType: StreamMetadataBuilder.SetTruncateBefore(Int64)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetTruncateBefore(System.Int64)
  type: Method
  source:
    id: SetTruncateBefore
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 106
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the event number from which previous events can be scavenged.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetTruncateBefore(long truncateBefore)
    parameters:
    - id: truncateBefore
      type: System.Int64
      description: The event number from which previous events can be scavenged.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetTruncateBefore(truncateBefore As Long) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetTruncateBefore*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCacheControl(TimeSpan)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetCacheControl(TimeSpan)
  id: SetCacheControl(TimeSpan)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetCacheControl(TimeSpan)
  nameWithType: StreamMetadataBuilder.SetCacheControl(TimeSpan)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCacheControl(TimeSpan)
  type: Method
  source:
    id: SetCacheControl
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 117
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets the amount of time for which the stream head is cachable.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetCacheControl(TimeSpan cacheControl)
    parameters:
    - id: cacheControl
      type: TimeSpan
      description: The amount of time for which the stream head is cachable.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetCacheControl(cacheControl As TimeSpan) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetCacheControl*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetReadRole(System.String)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetReadRole(System.String)
  id: SetReadRole(System.String)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetReadRole(String)
  nameWithType: StreamMetadataBuilder.SetReadRole(String)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetReadRole(System.String)
  type: Method
  source:
    id: SetReadRole
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 128
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a single role name with read permission for the stream.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetReadRole(string role)
    parameters:
    - id: role
      type: System.String
      description: Role name.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetReadRole(role As String) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetReadRole*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetReadRoles(System.String[])
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetReadRoles(System.String[])
  id: SetReadRoles(System.String[])
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetReadRoles(String[])
  nameWithType: StreamMetadataBuilder.SetReadRoles(String[])
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetReadRoles(System.String[])
  type: Method
  source:
    id: SetReadRoles
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 138
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets role names with read permission for the stream.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetReadRoles(string[] roles)
    parameters:
    - id: roles
      type: System.String[]
      description: Role names.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetReadRoles(roles As String()) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetReadRoles*
  nameWithType.vb: StreamMetadataBuilder.SetReadRoles(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.StreamMetadataBuilder.SetReadRoles(System.String())
  name.vb: SetReadRoles(String())
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetWriteRole(System.String)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetWriteRole(System.String)
  id: SetWriteRole(System.String)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetWriteRole(String)
  nameWithType: StreamMetadataBuilder.SetWriteRole(String)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetWriteRole(System.String)
  type: Method
  source:
    id: SetWriteRole
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 148
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a single role name with write permission for the stream.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetWriteRole(string role)
    parameters:
    - id: role
      type: System.String
      description: Role name.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetWriteRole(role As String) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetWriteRole*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetWriteRoles(System.String[])
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetWriteRoles(System.String[])
  id: SetWriteRoles(System.String[])
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetWriteRoles(String[])
  nameWithType: StreamMetadataBuilder.SetWriteRoles(String[])
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetWriteRoles(System.String[])
  type: Method
  source:
    id: SetWriteRoles
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 158
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets role names with write permission for the stream.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetWriteRoles(string[] roles)
    parameters:
    - id: roles
      type: System.String[]
      description: Role names.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetWriteRoles(roles As String()) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetWriteRoles*
  nameWithType.vb: StreamMetadataBuilder.SetWriteRoles(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.StreamMetadataBuilder.SetWriteRoles(System.String())
  name.vb: SetWriteRoles(String())
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetDeleteRole(System.String)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetDeleteRole(System.String)
  id: SetDeleteRole(System.String)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetDeleteRole(String)
  nameWithType: StreamMetadataBuilder.SetDeleteRole(String)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetDeleteRole(System.String)
  type: Method
  source:
    id: SetDeleteRole
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 168
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a single role name with delete permission for the stream.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetDeleteRole(string role)
    parameters:
    - id: role
      type: System.String
      description: Role name.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetDeleteRole(role As String) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetDeleteRole*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetDeleteRoles(System.String[])
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetDeleteRoles(System.String[])
  id: SetDeleteRoles(System.String[])
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetDeleteRoles(String[])
  nameWithType: StreamMetadataBuilder.SetDeleteRoles(String[])
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetDeleteRoles(System.String[])
  type: Method
  source:
    id: SetDeleteRoles
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 178
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets role names with delete permission for the stream.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetDeleteRoles(string[] roles)
    parameters:
    - id: roles
      type: System.String[]
      description: Role names.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetDeleteRoles(roles As String()) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetDeleteRoles*
  nameWithType.vb: StreamMetadataBuilder.SetDeleteRoles(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.StreamMetadataBuilder.SetDeleteRoles(System.String())
  name.vb: SetDeleteRoles(String())
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataReadRole(System.String)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataReadRole(System.String)
  id: SetMetadataReadRole(System.String)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetMetadataReadRole(String)
  nameWithType: StreamMetadataBuilder.SetMetadataReadRole(String)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataReadRole(System.String)
  type: Method
  source:
    id: SetMetadataReadRole
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 188
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a single role name with metadata read permission for the stream.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetMetadataReadRole(string role)
    parameters:
    - id: role
      type: System.String
      description: Role name.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetMetadataReadRole(role As String) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataReadRole*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataReadRoles(System.String[])
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataReadRoles(System.String[])
  id: SetMetadataReadRoles(System.String[])
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetMetadataReadRoles(String[])
  nameWithType: StreamMetadataBuilder.SetMetadataReadRoles(String[])
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataReadRoles(System.String[])
  type: Method
  source:
    id: SetMetadataReadRoles
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 198
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets role names with metadata read permission for the stream.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetMetadataReadRoles(string[] roles)
    parameters:
    - id: roles
      type: System.String[]
      description: Role names.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetMetadataReadRoles(roles As String()) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataReadRoles*
  nameWithType.vb: StreamMetadataBuilder.SetMetadataReadRoles(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataReadRoles(System.String())
  name.vb: SetMetadataReadRoles(String())
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataWriteRole(System.String)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataWriteRole(System.String)
  id: SetMetadataWriteRole(System.String)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetMetadataWriteRole(String)
  nameWithType: StreamMetadataBuilder.SetMetadataWriteRole(String)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataWriteRole(System.String)
  type: Method
  source:
    id: SetMetadataWriteRole
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 208
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a single role name with metadata write permission for the stream.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetMetadataWriteRole(string role)
    parameters:
    - id: role
      type: System.String
      description: Role name.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetMetadataWriteRole(role As String) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataWriteRole*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataWriteRoles(System.String[])
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataWriteRoles(System.String[])
  id: SetMetadataWriteRoles(System.String[])
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetMetadataWriteRoles(String[])
  nameWithType: StreamMetadataBuilder.SetMetadataWriteRoles(String[])
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataWriteRoles(System.String[])
  type: Method
  source:
    id: SetMetadataWriteRoles
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 218
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets role names with metadata write permission for the stream.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetMetadataWriteRoles(string[] roles)
    parameters:
    - id: roles
      type: System.String[]
      description: Role names.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetMetadataWriteRoles(roles As String()) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataWriteRoles*
  nameWithType.vb: StreamMetadataBuilder.SetMetadataWriteRoles(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataWriteRoles(System.String())
  name.vb: SetMetadataWriteRoles(String())
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.String)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.String)
  id: SetCustomProperty(System.String,System.String)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetCustomProperty(String, String)
  nameWithType: StreamMetadataBuilder.SetCustomProperty(String, String)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.String)
  type: Method
  source:
    id: SetCustomProperty
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 229
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a custom metadata property.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetCustomProperty(string key, string value)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: System.String
      description: The value.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetCustomProperty(key As String, value As String) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Int32)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Int32)
  id: SetCustomProperty(System.String,System.Int32)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetCustomProperty(String, Int32)
  nameWithType: StreamMetadataBuilder.SetCustomProperty(String, Int32)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Int32)
  type: Method
  source:
    id: SetCustomProperty
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 240
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a custom metadata property.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetCustomProperty(string key, int value)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: System.Int32
      description: The value.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetCustomProperty(key As String, value As Integer) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Int32})
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Int32})
  id: SetCustomProperty(System.String,System.Nullable{System.Int32})
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetCustomProperty(String, Nullable<Int32>)
  nameWithType: StreamMetadataBuilder.SetCustomProperty(String, Nullable<Int32>)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    id: SetCustomProperty
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 251
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a custom metadata property.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetCustomProperty(string key, int? value)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: System.Nullable{System.Int32}
      description: The value.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetCustomProperty(key As String, value As Integer?) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty*
  nameWithType.vb: StreamMetadataBuilder.SetCustomProperty(String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Nullable(Of System.Int32))
  name.vb: SetCustomProperty(String, Nullable(Of Int32))
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Int64)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Int64)
  id: SetCustomProperty(System.String,System.Int64)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetCustomProperty(String, Int64)
  nameWithType: StreamMetadataBuilder.SetCustomProperty(String, Int64)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Int64)
  type: Method
  source:
    id: SetCustomProperty
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 262
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a custom metadata property.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetCustomProperty(string key, long value)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: System.Int64
      description: The value.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetCustomProperty(key As String, value As Long) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Int64})
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Int64})
  id: SetCustomProperty(System.String,System.Nullable{System.Int64})
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetCustomProperty(String, Nullable<Int64>)
  nameWithType: StreamMetadataBuilder.SetCustomProperty(String, Nullable<Int64>)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Nullable<System.Int64>)
  type: Method
  source:
    id: SetCustomProperty
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 273
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a custom metadata property.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetCustomProperty(string key, long? value)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: System.Nullable{System.Int64}
      description: The value.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetCustomProperty(key As String, value As Long?) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty*
  nameWithType.vb: StreamMetadataBuilder.SetCustomProperty(String, Nullable(Of Int64))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Nullable(Of System.Int64))
  name.vb: SetCustomProperty(String, Nullable(Of Int64))
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Single)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Single)
  id: SetCustomProperty(System.String,System.Single)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetCustomProperty(String, Single)
  nameWithType: StreamMetadataBuilder.SetCustomProperty(String, Single)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Single)
  type: Method
  source:
    id: SetCustomProperty
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 284
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a custom metadata property.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetCustomProperty(string key, float value)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: System.Single
      description: The value.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetCustomProperty(key As String, value As Single) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Single})
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Single})
  id: SetCustomProperty(System.String,System.Nullable{System.Single})
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetCustomProperty(String, Nullable<Single>)
  nameWithType: StreamMetadataBuilder.SetCustomProperty(String, Nullable<Single>)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Nullable<System.Single>)
  type: Method
  source:
    id: SetCustomProperty
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 295
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a custom metadata property.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetCustomProperty(string key, float? value)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: System.Nullable{System.Single}
      description: The value.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetCustomProperty(key As String, value As Single?) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty*
  nameWithType.vb: StreamMetadataBuilder.SetCustomProperty(String, Nullable(Of Single))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Nullable(Of System.Single))
  name.vb: SetCustomProperty(String, Nullable(Of Single))
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Double)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Double)
  id: SetCustomProperty(System.String,System.Double)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetCustomProperty(String, Double)
  nameWithType: StreamMetadataBuilder.SetCustomProperty(String, Double)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Double)
  type: Method
  source:
    id: SetCustomProperty
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 306
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a custom metadata property.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetCustomProperty(string key, double value)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: System.Double
      description: The value.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetCustomProperty(key As String, value As Double) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Double})
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Double})
  id: SetCustomProperty(System.String,System.Nullable{System.Double})
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetCustomProperty(String, Nullable<Double>)
  nameWithType: StreamMetadataBuilder.SetCustomProperty(String, Nullable<Double>)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Nullable<System.Double>)
  type: Method
  source:
    id: SetCustomProperty
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 317
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a custom metadata property.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetCustomProperty(string key, double? value)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: System.Nullable{System.Double}
      description: The value.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetCustomProperty(key As String, value As Double?) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty*
  nameWithType.vb: StreamMetadataBuilder.SetCustomProperty(String, Nullable(Of Double))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Nullable(Of System.Double))
  name.vb: SetCustomProperty(String, Nullable(Of Double))
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Decimal)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Decimal)
  id: SetCustomProperty(System.String,System.Decimal)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetCustomProperty(String, Decimal)
  nameWithType: StreamMetadataBuilder.SetCustomProperty(String, Decimal)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Decimal)
  type: Method
  source:
    id: SetCustomProperty
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 328
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a custom metadata property.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetCustomProperty(string key, decimal value)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: System.Decimal
      description: The value.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetCustomProperty(key As String, value As Decimal) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Decimal})
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Decimal})
  id: SetCustomProperty(System.String,System.Nullable{System.Decimal})
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetCustomProperty(String, Nullable<Decimal>)
  nameWithType: StreamMetadataBuilder.SetCustomProperty(String, Nullable<Decimal>)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Nullable<System.Decimal>)
  type: Method
  source:
    id: SetCustomProperty
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 339
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a custom metadata property.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetCustomProperty(string key, decimal? value)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: System.Nullable{System.Decimal}
      description: The value.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetCustomProperty(key As String, value As Decimal?) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty*
  nameWithType.vb: StreamMetadataBuilder.SetCustomProperty(String, Nullable(Of Decimal))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Nullable(Of System.Decimal))
  name.vb: SetCustomProperty(String, Nullable(Of Decimal))
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Boolean)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Boolean)
  id: SetCustomProperty(System.String,System.Boolean)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetCustomProperty(String, Boolean)
  nameWithType: StreamMetadataBuilder.SetCustomProperty(String, Boolean)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Boolean)
  type: Method
  source:
    id: SetCustomProperty
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 350
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a custom metadata property.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetCustomProperty(string key, bool value)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: System.Boolean
      description: The value.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetCustomProperty(key As String, value As Boolean) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Boolean})
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String,System.Nullable{System.Boolean})
  id: SetCustomProperty(System.String,System.Nullable{System.Boolean})
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetCustomProperty(String, Nullable<Boolean>)
  nameWithType: StreamMetadataBuilder.SetCustomProperty(String, Nullable<Boolean>)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Nullable<System.Boolean>)
  type: Method
  source:
    id: SetCustomProperty
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 361
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a custom metadata property.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetCustomProperty(string key, bool? value)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: System.Nullable{System.Boolean}
      description: The value.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetCustomProperty(key As String, value As Boolean?) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty*
  nameWithType.vb: StreamMetadataBuilder.SetCustomProperty(String, Nullable(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty(System.String, System.Nullable(Of System.Boolean))
  name.vb: SetCustomProperty(String, Nullable(Of Boolean))
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomPropertyWithValueAsRawJsonString(System.String,System.String)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.SetCustomPropertyWithValueAsRawJsonString(System.String,System.String)
  id: SetCustomPropertyWithValueAsRawJsonString(System.String,System.String)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: SetCustomPropertyWithValueAsRawJsonString(String, String)
  nameWithType: StreamMetadataBuilder.SetCustomPropertyWithValueAsRawJsonString(String, String)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomPropertyWithValueAsRawJsonString(System.String, System.String)
  type: Method
  source:
    id: SetCustomPropertyWithValueAsRawJsonString
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 372
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nSets a custom metadata property to a string of raw JSON.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder SetCustomPropertyWithValueAsRawJsonString(string key, string rawJson)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: rawJson
      type: System.String
      description: The value.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function SetCustomPropertyWithValueAsRawJsonString(key As String, rawJson As String) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomPropertyWithValueAsRawJsonString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.StreamMetadataBuilder.RemoveCustomProperty(System.String)
  commentId: M:EventStore.ClientAPI.StreamMetadataBuilder.RemoveCustomProperty(System.String)
  id: RemoveCustomProperty(System.String)
  parent: EventStore.ClientAPI.StreamMetadataBuilder
  langs:
  - csharp
  - vb
  name: RemoveCustomProperty(String)
  nameWithType: StreamMetadataBuilder.RemoveCustomProperty(String)
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.RemoveCustomProperty(System.String)
  type: Method
  source:
    id: RemoveCustomProperty
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/StreamMetadataBuilder.cs
    startLine: 382
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRemoves a custom property.\n"
  example: []
  syntax:
    content: public StreamMetadataBuilder RemoveCustomProperty(string key)
    parameters:
    - id: key
      type: System.String
      description: The key.
    return:
      type: EventStore.ClientAPI.StreamMetadataBuilder
      description: The builder.
    content.vb: Public Function RemoveCustomProperty(key As String) As StreamMetadataBuilder
  overload: EventStore.ClientAPI.StreamMetadataBuilder.RemoveCustomProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI.StreamMetadata
  commentId: T:EventStore.ClientAPI.StreamMetadata
  parent: EventStore.ClientAPI
  name: StreamMetadata
  nameWithType: StreamMetadata
  fullName: EventStore.ClientAPI.StreamMetadata
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.ClientAPI.StreamMetadataBuilder.CustomPropertyKeys*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.CustomPropertyKeys
  name: CustomPropertyKeys
  nameWithType: StreamMetadataBuilder.CustomPropertyKeys
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.CustomPropertyKeys
- uid: IEnumerable{System.String}
  commentId: '!:IEnumerable{System.String}'
  definition: IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.StreamMetadataBuilder
  commentId: T:EventStore.ClientAPI.StreamMetadataBuilder
  parent: EventStore.ClientAPI
  name: StreamMetadataBuilder
  nameWithType: StreamMetadataBuilder
  fullName: EventStore.ClientAPI.StreamMetadataBuilder
- uid: EventStore.ClientAPI.StreamMetadataBuilder.op_Implicit*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.op_Implicit
  name: Implicit
  nameWithType: StreamMetadataBuilder.Implicit
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.Implicit
  nameWithType.vb: StreamMetadataBuilder.Widening
  fullName.vb: EventStore.ClientAPI.StreamMetadataBuilder.Widening
  name.vb: Widening
- uid: EventStore.ClientAPI.StreamMetadataBuilder.Build*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.Build
  name: Build
  nameWithType: StreamMetadataBuilder.Build
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.Build
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetMaxCount*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.SetMaxCount
  name: SetMaxCount
  nameWithType: StreamMetadataBuilder.SetMaxCount
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetMaxCount
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetMaxAge*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.SetMaxAge
  name: SetMaxAge
  nameWithType: StreamMetadataBuilder.SetMaxAge
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetMaxAge
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetTruncateBefore*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.SetTruncateBefore
  name: SetTruncateBefore
  nameWithType: StreamMetadataBuilder.SetTruncateBefore
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetTruncateBefore
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCacheControl*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.SetCacheControl
  name: SetCacheControl
  nameWithType: StreamMetadataBuilder.SetCacheControl
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCacheControl
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetReadRole*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.SetReadRole
  name: SetReadRole
  nameWithType: StreamMetadataBuilder.SetReadRole
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetReadRole
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetReadRoles*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.SetReadRoles
  name: SetReadRoles
  nameWithType: StreamMetadataBuilder.SetReadRoles
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetReadRoles
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetWriteRole*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.SetWriteRole
  name: SetWriteRole
  nameWithType: StreamMetadataBuilder.SetWriteRole
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetWriteRole
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetWriteRoles*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.SetWriteRoles
  name: SetWriteRoles
  nameWithType: StreamMetadataBuilder.SetWriteRoles
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetWriteRoles
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetDeleteRole*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.SetDeleteRole
  name: SetDeleteRole
  nameWithType: StreamMetadataBuilder.SetDeleteRole
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetDeleteRole
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetDeleteRoles*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.SetDeleteRoles
  name: SetDeleteRoles
  nameWithType: StreamMetadataBuilder.SetDeleteRoles
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetDeleteRoles
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataReadRole*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataReadRole
  name: SetMetadataReadRole
  nameWithType: StreamMetadataBuilder.SetMetadataReadRole
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataReadRole
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataReadRoles*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataReadRoles
  name: SetMetadataReadRoles
  nameWithType: StreamMetadataBuilder.SetMetadataReadRoles
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataReadRoles
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataWriteRole*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataWriteRole
  name: SetMetadataWriteRole
  nameWithType: StreamMetadataBuilder.SetMetadataWriteRole
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataWriteRole
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataWriteRoles*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataWriteRoles
  name: SetMetadataWriteRoles
  nameWithType: StreamMetadataBuilder.SetMetadataWriteRoles
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetMetadataWriteRoles
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty
  name: SetCustomProperty
  nameWithType: StreamMetadataBuilder.SetCustomProperty
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomProperty
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Nullable{System.Single}
  commentId: '!:System.Nullable{System.Single}'
  definition: System.Nullable`1
  name: Nullable<Single>
  nameWithType: Nullable<Single>
  fullName: System.Nullable<System.Single>
  nameWithType.vb: Nullable(Of Single)
  fullName.vb: System.Nullable(Of System.Single)
  name.vb: Nullable(Of Single)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: '!:System.Double'
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Nullable{System.Double}
  commentId: '!:System.Nullable{System.Double}'
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Decimal
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Nullable{System.Decimal}
  commentId: '!:System.Nullable{System.Decimal}'
  definition: System.Nullable`1
  name: Nullable<Decimal>
  nameWithType: Nullable<Decimal>
  fullName: System.Nullable<System.Decimal>
  nameWithType.vb: Nullable(Of Decimal)
  fullName.vb: System.Nullable(Of System.Decimal)
  name.vb: Nullable(Of Decimal)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.Boolean}
  commentId: '!:System.Nullable{System.Boolean}'
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomPropertyWithValueAsRawJsonString*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.SetCustomPropertyWithValueAsRawJsonString
  name: SetCustomPropertyWithValueAsRawJsonString
  nameWithType: StreamMetadataBuilder.SetCustomPropertyWithValueAsRawJsonString
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.SetCustomPropertyWithValueAsRawJsonString
- uid: EventStore.ClientAPI.StreamMetadataBuilder.RemoveCustomProperty*
  commentId: Overload:EventStore.ClientAPI.StreamMetadataBuilder.RemoveCustomProperty
  name: RemoveCustomProperty
  nameWithType: StreamMetadataBuilder.RemoveCustomProperty
  fullName: EventStore.ClientAPI.StreamMetadataBuilder.RemoveCustomProperty

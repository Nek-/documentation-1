### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.SystemSettings
  commentId: T:EventStore.ClientAPI.SystemSettings
  id: SystemSettings
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.SystemSettings.#ctor(EventStore.ClientAPI.StreamAcl,EventStore.ClientAPI.StreamAcl)
  - EventStore.ClientAPI.SystemSettings.FromJsonBytes(System.Byte[])
  - EventStore.ClientAPI.SystemSettings.SystemStreamAcl
  - EventStore.ClientAPI.SystemSettings.ToJsonBytes
  - EventStore.ClientAPI.SystemSettings.ToJsonString
  - EventStore.ClientAPI.SystemSettings.ToString
  - EventStore.ClientAPI.SystemSettings.UserStreamAcl
  langs:
  - csharp
  - vb
  name: SystemSettings
  nameWithType: SystemSettings
  fullName: EventStore.ClientAPI.SystemSettings
  type: Class
  source:
    id: SystemSettings
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/SystemSettings.cs
    startLine: 11
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nRepresents global settings for an Event Store server.\n"
  example: []
  syntax:
    content: public class SystemSettings
    content.vb: Public Class SystemSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.SystemSettings.UserStreamAcl
  commentId: F:EventStore.ClientAPI.SystemSettings.UserStreamAcl
  id: UserStreamAcl
  parent: EventStore.ClientAPI.SystemSettings
  langs:
  - csharp
  - vb
  name: UserStreamAcl
  nameWithType: SystemSettings.UserStreamAcl
  fullName: EventStore.ClientAPI.SystemSettings.UserStreamAcl
  type: Field
  source:
    id: UserStreamAcl
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/SystemSettings.cs
    startLine: 15
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nDefault access control list for new user streams.\n"
  example: []
  syntax:
    content: public readonly StreamAcl UserStreamAcl
    return:
      type: EventStore.ClientAPI.StreamAcl
    content.vb: Public ReadOnly UserStreamAcl As StreamAcl
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.SystemSettings.SystemStreamAcl
  commentId: F:EventStore.ClientAPI.SystemSettings.SystemStreamAcl
  id: SystemStreamAcl
  parent: EventStore.ClientAPI.SystemSettings
  langs:
  - csharp
  - vb
  name: SystemStreamAcl
  nameWithType: SystemSettings.SystemStreamAcl
  fullName: EventStore.ClientAPI.SystemSettings.SystemStreamAcl
  type: Field
  source:
    id: SystemStreamAcl
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/SystemSettings.cs
    startLine: 20
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nDefault access control list for new system streams.\n"
  example: []
  syntax:
    content: public readonly StreamAcl SystemStreamAcl
    return:
      type: EventStore.ClientAPI.StreamAcl
    content.vb: Public ReadOnly SystemStreamAcl As StreamAcl
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.SystemSettings.#ctor(EventStore.ClientAPI.StreamAcl,EventStore.ClientAPI.StreamAcl)
  commentId: M:EventStore.ClientAPI.SystemSettings.#ctor(EventStore.ClientAPI.StreamAcl,EventStore.ClientAPI.StreamAcl)
  id: '#ctor(EventStore.ClientAPI.StreamAcl,EventStore.ClientAPI.StreamAcl)'
  parent: EventStore.ClientAPI.SystemSettings
  langs:
  - csharp
  - vb
  name: SystemSettings(StreamAcl, StreamAcl)
  nameWithType: SystemSettings.SystemSettings(StreamAcl, StreamAcl)
  fullName: EventStore.ClientAPI.SystemSettings.SystemSettings(EventStore.ClientAPI.StreamAcl, EventStore.ClientAPI.StreamAcl)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/SystemSettings.cs
    startLine: 27
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nConstructs a new <xref href=\"EventStore.ClientAPI.SystemSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public SystemSettings(StreamAcl userStreamAcl, StreamAcl systemStreamAcl)
    parameters:
    - id: userStreamAcl
      type: EventStore.ClientAPI.StreamAcl
      description: ''
    - id: systemStreamAcl
      type: EventStore.ClientAPI.StreamAcl
      description: ''
    content.vb: Public Sub New(userStreamAcl As StreamAcl, systemStreamAcl As StreamAcl)
  overload: EventStore.ClientAPI.SystemSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.SystemSettings.ToString
  commentId: M:EventStore.ClientAPI.SystemSettings.ToString
  id: ToString
  parent: EventStore.ClientAPI.SystemSettings
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SystemSettings.ToString()
  fullName: EventStore.ClientAPI.SystemSettings.ToString()
  type: Method
  source:
    id: ToString
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/SystemSettings.cs
    startLine: 39
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nReturns a string that represents the current object.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA string that represents the current object.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: EventStore.ClientAPI.SystemSettings.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.ClientAPI.SystemSettings.FromJsonBytes(System.Byte[])
  commentId: M:EventStore.ClientAPI.SystemSettings.FromJsonBytes(System.Byte[])
  id: FromJsonBytes(System.Byte[])
  parent: EventStore.ClientAPI.SystemSettings
  langs:
  - csharp
  - vb
  name: FromJsonBytes(Byte[])
  nameWithType: SystemSettings.FromJsonBytes(Byte[])
  fullName: EventStore.ClientAPI.SystemSettings.FromJsonBytes(System.Byte[])
  type: Method
  source:
    id: FromJsonBytes
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/SystemSettings.cs
    startLine: 49
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nCreates a <xref href=\"EventStore.ClientAPI.SystemSettings\" data-throw-if-not-resolved=\"false\"></xref> object from a JSON string\nin a byte array.\n"
  example: []
  syntax:
    content: public static SystemSettings FromJsonBytes(byte[] json)
    parameters:
    - id: json
      type: System.Byte[]
      description: Byte array containing a JSON string.
    return:
      type: EventStore.ClientAPI.SystemSettings
      description: A <xref href="EventStore.ClientAPI.SystemSettings" data-throw-if-not-resolved="false"></xref> object.
    content.vb: Public Shared Function FromJsonBytes(json As Byte()) As SystemSettings
  overload: EventStore.ClientAPI.SystemSettings.FromJsonBytes*
  nameWithType.vb: SystemSettings.FromJsonBytes(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.ClientAPI.SystemSettings.FromJsonBytes(System.Byte())
  name.vb: FromJsonBytes(Byte())
- uid: EventStore.ClientAPI.SystemSettings.ToJsonBytes
  commentId: M:EventStore.ClientAPI.SystemSettings.ToJsonBytes
  id: ToJsonBytes
  parent: EventStore.ClientAPI.SystemSettings
  langs:
  - csharp
  - vb
  name: ToJsonBytes()
  nameWithType: SystemSettings.ToJsonBytes()
  fullName: EventStore.ClientAPI.SystemSettings.ToJsonBytes()
  type: Method
  source:
    id: ToJsonBytes
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/SystemSettings.cs
    startLine: 98
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nCreates a byte array containing a UTF-8 string with no byte order\nmark representing this <xref href=\"EventStore.ClientAPI.SystemSettings\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public byte[] ToJsonBytes()
    return:
      type: System.Byte[]
      description: A byte array containing a UTF-8 string with no byte order mark.
    content.vb: Public Function ToJsonBytes As Byte()
  overload: EventStore.ClientAPI.SystemSettings.ToJsonBytes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.SystemSettings.ToJsonString
  commentId: M:EventStore.ClientAPI.SystemSettings.ToJsonString
  id: ToJsonString
  parent: EventStore.ClientAPI.SystemSettings
  langs:
  - csharp
  - vb
  name: ToJsonString()
  nameWithType: SystemSettings.ToJsonString()
  fullName: EventStore.ClientAPI.SystemSettings.ToJsonString()
  type: Method
  source:
    id: ToJsonString
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/SystemSettings.cs
    startLine: 113
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nCreates a string containing representing this <xref href=\"EventStore.ClientAPI.SystemSettings\" data-throw-if-not-resolved=\"false\"></xref>\nobject.\n"
  example: []
  syntax:
    content: public string ToJsonString()
    return:
      type: System.String
      description: A string representing this <xref href="EventStore.ClientAPI.SystemSettings" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function ToJsonString As String
  overload: EventStore.ClientAPI.SystemSettings.ToJsonString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.ClientAPI.StreamAcl
  commentId: T:EventStore.ClientAPI.StreamAcl
  parent: EventStore.ClientAPI
  name: StreamAcl
  nameWithType: StreamAcl
  fullName: EventStore.ClientAPI.StreamAcl
- uid: EventStore.ClientAPI.SystemSettings
  commentId: T:EventStore.ClientAPI.SystemSettings
  parent: EventStore.ClientAPI
  name: SystemSettings
  nameWithType: SystemSettings
  fullName: EventStore.ClientAPI.SystemSettings
- uid: EventStore.ClientAPI.SystemSettings.#ctor*
  commentId: Overload:EventStore.ClientAPI.SystemSettings.#ctor
  name: SystemSettings
  nameWithType: SystemSettings.SystemSettings
  fullName: EventStore.ClientAPI.SystemSettings.SystemSettings
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.SystemSettings.ToString*
  commentId: Overload:EventStore.ClientAPI.SystemSettings.ToString
  name: ToString
  nameWithType: SystemSettings.ToString
  fullName: EventStore.ClientAPI.SystemSettings.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.ClientAPI.SystemSettings.FromJsonBytes*
  commentId: Overload:EventStore.ClientAPI.SystemSettings.FromJsonBytes
  name: FromJsonBytes
  nameWithType: SystemSettings.FromJsonBytes
  fullName: EventStore.ClientAPI.SystemSettings.FromJsonBytes
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.ClientAPI.SystemSettings.ToJsonBytes*
  commentId: Overload:EventStore.ClientAPI.SystemSettings.ToJsonBytes
  name: ToJsonBytes
  nameWithType: SystemSettings.ToJsonBytes
  fullName: EventStore.ClientAPI.SystemSettings.ToJsonBytes
- uid: EventStore.ClientAPI.SystemSettings.ToJsonString*
  commentId: Overload:EventStore.ClientAPI.SystemSettings.ToJsonString
  name: ToJsonString
  nameWithType: SystemSettings.ToJsonString
  fullName: EventStore.ClientAPI.SystemSettings.ToJsonString

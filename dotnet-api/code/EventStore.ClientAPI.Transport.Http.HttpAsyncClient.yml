### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.Transport.Http.HttpAsyncClient
  commentId: T:EventStore.ClientAPI.Transport.Http.HttpAsyncClient
  id: HttpAsyncClient
  parent: EventStore.ClientAPI.Transport.Http
  children:
  - EventStore.ClientAPI.Transport.Http.HttpAsyncClient.#ctor(System.TimeSpan,System.Net.Http.HttpMessageHandler)
  - EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Delete(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  - EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Get(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception},System.String)
  - EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Post(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  - EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Put(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  langs:
  - csharp
  - vb
  name: HttpAsyncClient
  nameWithType: HttpAsyncClient
  fullName: EventStore.ClientAPI.Transport.Http.HttpAsyncClient
  type: Class
  source:
    id: HttpAsyncClient
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Transport.Http/HttpAsyncClient.cs
    startLine: 14
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Transport.Http
  summary: "\nAn HttpAsyncClient.\n"
  example: []
  syntax:
    content: 'public class HttpAsyncClient : IHttpClient'
    content.vb: >-
      Public Class HttpAsyncClient

          Implements IHttpClient
  inheritance:
  - System.Object
  implements:
  - EventStore.ClientAPI.Transport.Http.IHttpClient
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.#ctor(System.TimeSpan,System.Net.Http.HttpMessageHandler)
  commentId: M:EventStore.ClientAPI.Transport.Http.HttpAsyncClient.#ctor(System.TimeSpan,System.Net.Http.HttpMessageHandler)
  id: '#ctor(System.TimeSpan,System.Net.Http.HttpMessageHandler)'
  parent: EventStore.ClientAPI.Transport.Http.HttpAsyncClient
  langs:
  - csharp
  - vb
  name: HttpAsyncClient(TimeSpan, HttpMessageHandler)
  nameWithType: HttpAsyncClient.HttpAsyncClient(TimeSpan, HttpMessageHandler)
  fullName: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.HttpAsyncClient(System.TimeSpan, System.Net.Http.HttpMessageHandler)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Transport.Http/HttpAsyncClient.cs
    startLine: 28
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Transport.Http
  summary: "\nConstructs an <xref href=\"EventStore.ClientAPI.Transport.Http.HttpAsyncClient\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public HttpAsyncClient(TimeSpan timeout, HttpMessageHandler clientHandler = null)
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: ''
    - id: clientHandler
      type: System.Net.Http.HttpMessageHandler
      description: ''
    content.vb: Public Sub New(timeout As TimeSpan, clientHandler As HttpMessageHandler = Nothing)
  overload: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Get(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception},System.String)
  commentId: M:EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Get(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception},System.String)
  id: Get(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception},System.String)
  parent: EventStore.ClientAPI.Transport.Http.HttpAsyncClient
  langs:
  - csharp
  - vb
  name: Get(String, UserCredentials, Action<HttpResponse>, Action<Exception>, String)
  nameWithType: HttpAsyncClient.Get(String, UserCredentials, Action<HttpResponse>, Action<Exception>, String)
  fullName: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Get(System.String, EventStore.ClientAPI.SystemData.UserCredentials, System.Action<EventStore.ClientAPI.Transport.Http.HttpResponse>, System.Action<System.Exception>, System.String)
  type: Method
  source:
    id: Get
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Transport.Http/HttpAsyncClient.cs
    startLine: 34
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Transport.Http
  example: []
  syntax:
    content: public void Get(string url, UserCredentials userCredentials, Action<HttpResponse> onSuccess, Action<Exception> onException, string hostHeader = "")
    parameters:
    - id: url
      type: System.String
    - id: userCredentials
      type: EventStore.ClientAPI.SystemData.UserCredentials
    - id: onSuccess
      type: System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse}
    - id: onException
      type: System.Action{System.Exception}
    - id: hostHeader
      type: System.String
    content.vb: Public Sub Get(url As String, userCredentials As UserCredentials, onSuccess As Action(Of HttpResponse), onException As Action(Of Exception), hostHeader As String = "")
  overload: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Get*
  implements:
  - EventStore.ClientAPI.Transport.Http.IHttpClient.Get(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception},System.String)
  nameWithType.vb: HttpAsyncClient.Get(String, UserCredentials, Action(Of HttpResponse), Action(Of Exception), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Get(System.String, EventStore.ClientAPI.SystemData.UserCredentials, System.Action(Of EventStore.ClientAPI.Transport.Http.HttpResponse), System.Action(Of System.Exception), System.String)
  name.vb: Get(String, UserCredentials, Action(Of HttpResponse), Action(Of Exception), String)
- uid: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Post(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  commentId: M:EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Post(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  id: Post(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  parent: EventStore.ClientAPI.Transport.Http.HttpAsyncClient
  langs:
  - csharp
  - vb
  name: Post(String, String, String, UserCredentials, Action<HttpResponse>, Action<Exception>)
  nameWithType: HttpAsyncClient.Post(String, String, String, UserCredentials, Action<HttpResponse>, Action<Exception>)
  fullName: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Post(System.String, System.String, System.String, EventStore.ClientAPI.SystemData.UserCredentials, System.Action<EventStore.ClientAPI.Transport.Http.HttpResponse>, System.Action<System.Exception>)
  type: Method
  source:
    id: Post
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Transport.Http/HttpAsyncClient.cs
    startLine: 45
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Transport.Http
  example: []
  syntax:
    content: public void Post(string url, string body, string contentType, UserCredentials userCredentials, Action<HttpResponse> onSuccess, Action<Exception> onException)
    parameters:
    - id: url
      type: System.String
    - id: body
      type: System.String
    - id: contentType
      type: System.String
    - id: userCredentials
      type: EventStore.ClientAPI.SystemData.UserCredentials
    - id: onSuccess
      type: System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse}
    - id: onException
      type: System.Action{System.Exception}
    content.vb: Public Sub Post(url As String, body As String, contentType As String, userCredentials As UserCredentials, onSuccess As Action(Of HttpResponse), onException As Action(Of Exception))
  overload: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Post*
  implements:
  - EventStore.ClientAPI.Transport.Http.IHttpClient.Post(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  nameWithType.vb: HttpAsyncClient.Post(String, String, String, UserCredentials, Action(Of HttpResponse), Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Post(System.String, System.String, System.String, EventStore.ClientAPI.SystemData.UserCredentials, System.Action(Of EventStore.ClientAPI.Transport.Http.HttpResponse), System.Action(Of System.Exception))
  name.vb: Post(String, String, String, UserCredentials, Action(Of HttpResponse), Action(Of Exception))
- uid: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Delete(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  commentId: M:EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Delete(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  id: Delete(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  parent: EventStore.ClientAPI.Transport.Http.HttpAsyncClient
  langs:
  - csharp
  - vb
  name: Delete(String, UserCredentials, Action<HttpResponse>, Action<Exception>)
  nameWithType: HttpAsyncClient.Delete(String, UserCredentials, Action<HttpResponse>, Action<Exception>)
  fullName: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Delete(System.String, EventStore.ClientAPI.SystemData.UserCredentials, System.Action<EventStore.ClientAPI.Transport.Http.HttpResponse>, System.Action<System.Exception>)
  type: Method
  source:
    id: Delete
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Transport.Http/HttpAsyncClient.cs
    startLine: 57
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Transport.Http
  example: []
  syntax:
    content: public void Delete(string url, UserCredentials userCredentials, Action<HttpResponse> onSuccess, Action<Exception> onException)
    parameters:
    - id: url
      type: System.String
    - id: userCredentials
      type: EventStore.ClientAPI.SystemData.UserCredentials
    - id: onSuccess
      type: System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse}
    - id: onException
      type: System.Action{System.Exception}
    content.vb: Public Sub Delete(url As String, userCredentials As UserCredentials, onSuccess As Action(Of HttpResponse), onException As Action(Of Exception))
  overload: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Delete*
  implements:
  - EventStore.ClientAPI.Transport.Http.IHttpClient.Delete(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  nameWithType.vb: HttpAsyncClient.Delete(String, UserCredentials, Action(Of HttpResponse), Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Delete(System.String, EventStore.ClientAPI.SystemData.UserCredentials, System.Action(Of EventStore.ClientAPI.Transport.Http.HttpResponse), System.Action(Of System.Exception))
  name.vb: Delete(String, UserCredentials, Action(Of HttpResponse), Action(Of Exception))
- uid: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Put(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  commentId: M:EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Put(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  id: Put(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  parent: EventStore.ClientAPI.Transport.Http.HttpAsyncClient
  langs:
  - csharp
  - vb
  name: Put(String, String, String, UserCredentials, Action<HttpResponse>, Action<Exception>)
  nameWithType: HttpAsyncClient.Put(String, String, String, UserCredentials, Action<HttpResponse>, Action<Exception>)
  fullName: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Put(System.String, System.String, System.String, EventStore.ClientAPI.SystemData.UserCredentials, System.Action<EventStore.ClientAPI.Transport.Http.HttpResponse>, System.Action<System.Exception>)
  type: Method
  source:
    id: Put
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClientAPI/Transport.Http/HttpAsyncClient.cs
    startLine: 67
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Transport.Http
  example: []
  syntax:
    content: public void Put(string url, string body, string contentType, UserCredentials userCredentials, Action<HttpResponse> onSuccess, Action<Exception> onException)
    parameters:
    - id: url
      type: System.String
    - id: body
      type: System.String
    - id: contentType
      type: System.String
    - id: userCredentials
      type: EventStore.ClientAPI.SystemData.UserCredentials
    - id: onSuccess
      type: System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse}
    - id: onException
      type: System.Action{System.Exception}
    content.vb: Public Sub Put(url As String, body As String, contentType As String, userCredentials As UserCredentials, onSuccess As Action(Of HttpResponse), onException As Action(Of Exception))
  overload: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Put*
  implements:
  - EventStore.ClientAPI.Transport.Http.IHttpClient.Put(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  nameWithType.vb: HttpAsyncClient.Put(String, String, String, UserCredentials, Action(Of HttpResponse), Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Put(System.String, System.String, System.String, EventStore.ClientAPI.SystemData.UserCredentials, System.Action(Of EventStore.ClientAPI.Transport.Http.HttpResponse), System.Action(Of System.Exception))
  name.vb: Put(String, String, String, UserCredentials, Action(Of HttpResponse), Action(Of Exception))
references:
- uid: EventStore.ClientAPI.Transport.Http
  commentId: N:EventStore.ClientAPI.Transport.Http
  name: EventStore.ClientAPI.Transport.Http
  nameWithType: EventStore.ClientAPI.Transport.Http
  fullName: EventStore.ClientAPI.Transport.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.ClientAPI.Transport.Http.IHttpClient
  commentId: T:EventStore.ClientAPI.Transport.Http.IHttpClient
  parent: EventStore.ClientAPI.Transport.Http
  name: IHttpClient
  nameWithType: IHttpClient
  fullName: EventStore.ClientAPI.Transport.Http.IHttpClient
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.ClientAPI.Transport.Http.HttpAsyncClient
  commentId: T:EventStore.ClientAPI.Transport.Http.HttpAsyncClient
  name: HttpAsyncClient
  nameWithType: HttpAsyncClient
  fullName: EventStore.ClientAPI.Transport.Http.HttpAsyncClient
- uid: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.#ctor*
  commentId: Overload:EventStore.ClientAPI.Transport.Http.HttpAsyncClient.#ctor
  name: HttpAsyncClient
  nameWithType: HttpAsyncClient.HttpAsyncClient
  fullName: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.HttpAsyncClient
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Net.Http.HttpMessageHandler
  commentId: T:System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: true
  name: HttpMessageHandler
  nameWithType: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Get*
  commentId: Overload:EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Get
  name: Get
  nameWithType: HttpAsyncClient.Get
  fullName: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Get
- uid: EventStore.ClientAPI.Transport.Http.IHttpClient.Get(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception},System.String)
  commentId: M:EventStore.ClientAPI.Transport.Http.IHttpClient.Get(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception},System.String)
  parent: EventStore.ClientAPI.Transport.Http.IHttpClient
  isExternal: true
  name: Get(String, UserCredentials, Action<HttpResponse>, Action<Exception>, String)
  nameWithType: IHttpClient.Get(String, UserCredentials, Action<HttpResponse>, Action<Exception>, String)
  fullName: EventStore.ClientAPI.Transport.Http.IHttpClient.Get(System.String, EventStore.ClientAPI.SystemData.UserCredentials, System.Action<EventStore.ClientAPI.Transport.Http.HttpResponse>, System.Action<System.Exception>, System.String)
  nameWithType.vb: IHttpClient.Get(String, UserCredentials, Action(Of HttpResponse), Action(Of Exception), String)
  fullName.vb: EventStore.ClientAPI.Transport.Http.IHttpClient.Get(System.String, EventStore.ClientAPI.SystemData.UserCredentials, System.Action(Of EventStore.ClientAPI.Transport.Http.HttpResponse), System.Action(Of System.Exception), System.String)
  name.vb: Get(String, UserCredentials, Action(Of HttpResponse), Action(Of Exception), String)
  spec.csharp:
  - uid: EventStore.ClientAPI.Transport.Http.IHttpClient.Get(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception},System.String)
    name: Get
    nameWithType: IHttpClient.Get
    fullName: EventStore.ClientAPI.Transport.Http.IHttpClient.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.ClientAPI.SystemData.UserCredentials
    name: UserCredentials
    nameWithType: UserCredentials
    fullName: EventStore.ClientAPI.SystemData.UserCredentials
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.ClientAPI.Transport.Http.HttpResponse
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: EventStore.ClientAPI.Transport.Http.HttpResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.ClientAPI.Transport.Http.IHttpClient.Get(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception},System.String)
    name: Get
    nameWithType: IHttpClient.Get
    fullName: EventStore.ClientAPI.Transport.Http.IHttpClient.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.ClientAPI.SystemData.UserCredentials
    name: UserCredentials
    nameWithType: UserCredentials
    fullName: EventStore.ClientAPI.SystemData.UserCredentials
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.ClientAPI.Transport.Http.HttpResponse
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: EventStore.ClientAPI.Transport.Http.HttpResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.ClientAPI.SystemData.UserCredentials
  commentId: T:EventStore.ClientAPI.SystemData.UserCredentials
  parent: EventStore.ClientAPI.SystemData
  name: UserCredentials
  nameWithType: UserCredentials
  fullName: EventStore.ClientAPI.SystemData.UserCredentials
- uid: System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse}
  commentId: T:System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse}
  parent: System
  definition: System.Action`1
  name: Action<HttpResponse>
  nameWithType: Action<HttpResponse>
  fullName: System.Action<EventStore.ClientAPI.Transport.Http.HttpResponse>
  nameWithType.vb: Action(Of HttpResponse)
  fullName.vb: System.Action(Of EventStore.ClientAPI.Transport.Http.HttpResponse)
  name.vb: Action(Of HttpResponse)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.ClientAPI.Transport.Http.HttpResponse
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: EventStore.ClientAPI.Transport.Http.HttpResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.ClientAPI.Transport.Http.HttpResponse
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: EventStore.ClientAPI.Transport.Http.HttpResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.Exception}
  commentId: T:System.Action{System.Exception}
  parent: System
  definition: System.Action`1
  name: Action<Exception>
  nameWithType: Action<Exception>
  fullName: System.Action<System.Exception>
  nameWithType.vb: Action(Of Exception)
  fullName.vb: System.Action(Of System.Exception)
  name.vb: Action(Of Exception)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.SystemData
  commentId: N:EventStore.ClientAPI.SystemData
  name: EventStore.ClientAPI.SystemData
  nameWithType: EventStore.ClientAPI.SystemData
  fullName: EventStore.ClientAPI.SystemData
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Post*
  commentId: Overload:EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Post
  name: Post
  nameWithType: HttpAsyncClient.Post
  fullName: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Post
- uid: EventStore.ClientAPI.Transport.Http.IHttpClient.Post(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  commentId: M:EventStore.ClientAPI.Transport.Http.IHttpClient.Post(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  parent: EventStore.ClientAPI.Transport.Http.IHttpClient
  isExternal: true
  name: Post(String, String, String, UserCredentials, Action<HttpResponse>, Action<Exception>)
  nameWithType: IHttpClient.Post(String, String, String, UserCredentials, Action<HttpResponse>, Action<Exception>)
  fullName: EventStore.ClientAPI.Transport.Http.IHttpClient.Post(System.String, System.String, System.String, EventStore.ClientAPI.SystemData.UserCredentials, System.Action<EventStore.ClientAPI.Transport.Http.HttpResponse>, System.Action<System.Exception>)
  nameWithType.vb: IHttpClient.Post(String, String, String, UserCredentials, Action(Of HttpResponse), Action(Of Exception))
  fullName.vb: EventStore.ClientAPI.Transport.Http.IHttpClient.Post(System.String, System.String, System.String, EventStore.ClientAPI.SystemData.UserCredentials, System.Action(Of EventStore.ClientAPI.Transport.Http.HttpResponse), System.Action(Of System.Exception))
  name.vb: Post(String, String, String, UserCredentials, Action(Of HttpResponse), Action(Of Exception))
  spec.csharp:
  - uid: EventStore.ClientAPI.Transport.Http.IHttpClient.Post(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
    name: Post
    nameWithType: IHttpClient.Post
    fullName: EventStore.ClientAPI.Transport.Http.IHttpClient.Post
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.ClientAPI.SystemData.UserCredentials
    name: UserCredentials
    nameWithType: UserCredentials
    fullName: EventStore.ClientAPI.SystemData.UserCredentials
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.ClientAPI.Transport.Http.HttpResponse
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: EventStore.ClientAPI.Transport.Http.HttpResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.ClientAPI.Transport.Http.IHttpClient.Post(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
    name: Post
    nameWithType: IHttpClient.Post
    fullName: EventStore.ClientAPI.Transport.Http.IHttpClient.Post
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.ClientAPI.SystemData.UserCredentials
    name: UserCredentials
    nameWithType: UserCredentials
    fullName: EventStore.ClientAPI.SystemData.UserCredentials
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.ClientAPI.Transport.Http.HttpResponse
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: EventStore.ClientAPI.Transport.Http.HttpResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Delete*
  commentId: Overload:EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Delete
  name: Delete
  nameWithType: HttpAsyncClient.Delete
  fullName: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Delete
- uid: EventStore.ClientAPI.Transport.Http.IHttpClient.Delete(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  commentId: M:EventStore.ClientAPI.Transport.Http.IHttpClient.Delete(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  parent: EventStore.ClientAPI.Transport.Http.IHttpClient
  isExternal: true
  name: Delete(String, UserCredentials, Action<HttpResponse>, Action<Exception>)
  nameWithType: IHttpClient.Delete(String, UserCredentials, Action<HttpResponse>, Action<Exception>)
  fullName: EventStore.ClientAPI.Transport.Http.IHttpClient.Delete(System.String, EventStore.ClientAPI.SystemData.UserCredentials, System.Action<EventStore.ClientAPI.Transport.Http.HttpResponse>, System.Action<System.Exception>)
  nameWithType.vb: IHttpClient.Delete(String, UserCredentials, Action(Of HttpResponse), Action(Of Exception))
  fullName.vb: EventStore.ClientAPI.Transport.Http.IHttpClient.Delete(System.String, EventStore.ClientAPI.SystemData.UserCredentials, System.Action(Of EventStore.ClientAPI.Transport.Http.HttpResponse), System.Action(Of System.Exception))
  name.vb: Delete(String, UserCredentials, Action(Of HttpResponse), Action(Of Exception))
  spec.csharp:
  - uid: EventStore.ClientAPI.Transport.Http.IHttpClient.Delete(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
    name: Delete
    nameWithType: IHttpClient.Delete
    fullName: EventStore.ClientAPI.Transport.Http.IHttpClient.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.ClientAPI.SystemData.UserCredentials
    name: UserCredentials
    nameWithType: UserCredentials
    fullName: EventStore.ClientAPI.SystemData.UserCredentials
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.ClientAPI.Transport.Http.HttpResponse
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: EventStore.ClientAPI.Transport.Http.HttpResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.ClientAPI.Transport.Http.IHttpClient.Delete(System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
    name: Delete
    nameWithType: IHttpClient.Delete
    fullName: EventStore.ClientAPI.Transport.Http.IHttpClient.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.ClientAPI.SystemData.UserCredentials
    name: UserCredentials
    nameWithType: UserCredentials
    fullName: EventStore.ClientAPI.SystemData.UserCredentials
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.ClientAPI.Transport.Http.HttpResponse
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: EventStore.ClientAPI.Transport.Http.HttpResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Put*
  commentId: Overload:EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Put
  name: Put
  nameWithType: HttpAsyncClient.Put
  fullName: EventStore.ClientAPI.Transport.Http.HttpAsyncClient.Put
- uid: EventStore.ClientAPI.Transport.Http.IHttpClient.Put(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  commentId: M:EventStore.ClientAPI.Transport.Http.IHttpClient.Put(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
  parent: EventStore.ClientAPI.Transport.Http.IHttpClient
  isExternal: true
  name: Put(String, String, String, UserCredentials, Action<HttpResponse>, Action<Exception>)
  nameWithType: IHttpClient.Put(String, String, String, UserCredentials, Action<HttpResponse>, Action<Exception>)
  fullName: EventStore.ClientAPI.Transport.Http.IHttpClient.Put(System.String, System.String, System.String, EventStore.ClientAPI.SystemData.UserCredentials, System.Action<EventStore.ClientAPI.Transport.Http.HttpResponse>, System.Action<System.Exception>)
  nameWithType.vb: IHttpClient.Put(String, String, String, UserCredentials, Action(Of HttpResponse), Action(Of Exception))
  fullName.vb: EventStore.ClientAPI.Transport.Http.IHttpClient.Put(System.String, System.String, System.String, EventStore.ClientAPI.SystemData.UserCredentials, System.Action(Of EventStore.ClientAPI.Transport.Http.HttpResponse), System.Action(Of System.Exception))
  name.vb: Put(String, String, String, UserCredentials, Action(Of HttpResponse), Action(Of Exception))
  spec.csharp:
  - uid: EventStore.ClientAPI.Transport.Http.IHttpClient.Put(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
    name: Put
    nameWithType: IHttpClient.Put
    fullName: EventStore.ClientAPI.Transport.Http.IHttpClient.Put
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.ClientAPI.SystemData.UserCredentials
    name: UserCredentials
    nameWithType: UserCredentials
    fullName: EventStore.ClientAPI.SystemData.UserCredentials
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.ClientAPI.Transport.Http.HttpResponse
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: EventStore.ClientAPI.Transport.Http.HttpResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.ClientAPI.Transport.Http.IHttpClient.Put(System.String,System.String,System.String,EventStore.ClientAPI.SystemData.UserCredentials,System.Action{EventStore.ClientAPI.Transport.Http.HttpResponse},System.Action{System.Exception})
    name: Put
    nameWithType: IHttpClient.Put
    fullName: EventStore.ClientAPI.Transport.Http.IHttpClient.Put
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EventStore.ClientAPI.SystemData.UserCredentials
    name: UserCredentials
    nameWithType: UserCredentials
    fullName: EventStore.ClientAPI.SystemData.UserCredentials
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.ClientAPI.Transport.Http.HttpResponse
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: EventStore.ClientAPI.Transport.Http.HttpResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )

### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.Transport.Http.HttpResponse
  commentId: T:EventStore.ClientAPI.Transport.Http.HttpResponse
  id: HttpResponse
  parent: EventStore.ClientAPI.Transport.Http
  children:
  - EventStore.ClientAPI.Transport.Http.HttpResponse.#ctor(HttpResponseMessage)
  - EventStore.ClientAPI.Transport.Http.HttpResponse.Body
  - EventStore.ClientAPI.Transport.Http.HttpResponse.CharacterSet
  - EventStore.ClientAPI.Transport.Http.HttpResponse.ContentEncoding
  - EventStore.ClientAPI.Transport.Http.HttpResponse.ContentLength
  - EventStore.ClientAPI.Transport.Http.HttpResponse.ContentType
  - EventStore.ClientAPI.Transport.Http.HttpResponse.Headers
  - EventStore.ClientAPI.Transport.Http.HttpResponse.HttpStatusCode
  - EventStore.ClientAPI.Transport.Http.HttpResponse.Method
  - EventStore.ClientAPI.Transport.Http.HttpResponse.StatusDescription
  langs:
  - csharp
  - vb
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: EventStore.ClientAPI.Transport.Http.HttpResponse
  type: Class
  source:
    remote:
      path: src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: HttpResponse
    path: ../EventStore/src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
    startLine: 8
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Transport.Http
  summary: "\nAn Http response\n"
  example: []
  syntax:
    content: 'public class HttpResponse : object'
    content.vb: >-
      Public Class HttpResponse
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClientAPI.Transport.Http.HttpResponse.CharacterSet
  commentId: F:EventStore.ClientAPI.Transport.Http.HttpResponse.CharacterSet
  id: CharacterSet
  parent: EventStore.ClientAPI.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: CharacterSet
  nameWithType: HttpResponse.CharacterSet
  fullName: EventStore.ClientAPI.Transport.Http.HttpResponse.CharacterSet
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: CharacterSet
    path: ../EventStore/src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
    startLine: 12
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Transport.Http
  summary: "\nThe character set of the response.\n"
  example: []
  syntax:
    content: public readonly string CharacterSet
    return:
      type: System.String
    content.vb: Public ReadOnly CharacterSet As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Transport.Http.HttpResponse.ContentEncoding
  commentId: F:EventStore.ClientAPI.Transport.Http.HttpResponse.ContentEncoding
  id: ContentEncoding
  parent: EventStore.ClientAPI.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: ContentEncoding
  nameWithType: HttpResponse.ContentEncoding
  fullName: EventStore.ClientAPI.Transport.Http.HttpResponse.ContentEncoding
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ContentEncoding
    path: ../EventStore/src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
    startLine: 17
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Transport.Http
  summary: "\nThe character encoding of the response.\n"
  example: []
  syntax:
    content: public readonly string ContentEncoding
    return:
      type: System.String
    content.vb: Public ReadOnly ContentEncoding As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Transport.Http.HttpResponse.ContentLength
  commentId: F:EventStore.ClientAPI.Transport.Http.HttpResponse.ContentLength
  id: ContentLength
  parent: EventStore.ClientAPI.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: ContentLength
  nameWithType: HttpResponse.ContentLength
  fullName: EventStore.ClientAPI.Transport.Http.HttpResponse.ContentLength
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ContentLength
    path: ../EventStore/src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
    startLine: 21
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Transport.Http
  summary: "\nThe Content-Length header.\n"
  example: []
  syntax:
    content: public readonly long ContentLength
    return:
      type: System.Int64
    content.vb: Public ReadOnly ContentLength As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Transport.Http.HttpResponse.ContentType
  commentId: F:EventStore.ClientAPI.Transport.Http.HttpResponse.ContentType
  id: ContentType
  parent: EventStore.ClientAPI.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: HttpResponse.ContentType
  fullName: EventStore.ClientAPI.Transport.Http.HttpResponse.ContentType
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: ContentType
    path: ../EventStore/src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
    startLine: 25
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Transport.Http
  summary: "\nThe Content-Type header.\n"
  example: []
  syntax:
    content: public readonly string ContentType
    return:
      type: System.String
    content.vb: Public ReadOnly ContentType As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Transport.Http.HttpResponse.Headers
  commentId: F:EventStore.ClientAPI.Transport.Http.HttpResponse.Headers
  id: Headers
  parent: EventStore.ClientAPI.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: HttpResponse.Headers
  fullName: EventStore.ClientAPI.Transport.Http.HttpResponse.Headers
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Headers
    path: ../EventStore/src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
    startLine: 31
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Transport.Http
  summary: "\nA Collection of Http response headers.\n"
  example: []
  syntax:
    content: public readonly HttpResponseHeaders Headers
    return:
      type: HttpResponseHeaders
    content.vb: Public ReadOnly Headers As HttpResponseHeaders
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Transport.Http.HttpResponse.Method
  commentId: F:EventStore.ClientAPI.Transport.Http.HttpResponse.Method
  id: Method
  parent: EventStore.ClientAPI.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: HttpResponse.Method
  fullName: EventStore.ClientAPI.Transport.Http.HttpResponse.Method
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Method
    path: ../EventStore/src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
    startLine: 40
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Transport.Http
  summary: "\nThe Http method used.\n"
  example: []
  syntax:
    content: public readonly string Method
    return:
      type: System.String
    content.vb: Public ReadOnly Method As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Transport.Http.HttpResponse.HttpStatusCode
  commentId: F:EventStore.ClientAPI.Transport.Http.HttpResponse.HttpStatusCode
  id: HttpStatusCode
  parent: EventStore.ClientAPI.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: HttpStatusCode
  nameWithType: HttpResponse.HttpStatusCode
  fullName: EventStore.ClientAPI.Transport.Http.HttpResponse.HttpStatusCode
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: HttpStatusCode
    path: ../EventStore/src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
    startLine: 49
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Transport.Http
  summary: "\nThe Http response&apos;s status code.\n"
  example: []
  syntax:
    content: public readonly int HttpStatusCode
    return:
      type: System.Int32
    content.vb: Public ReadOnly HttpStatusCode As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Transport.Http.HttpResponse.StatusDescription
  commentId: F:EventStore.ClientAPI.Transport.Http.HttpResponse.StatusDescription
  id: StatusDescription
  parent: EventStore.ClientAPI.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: StatusDescription
  nameWithType: HttpResponse.StatusDescription
  fullName: EventStore.ClientAPI.Transport.Http.HttpResponse.StatusDescription
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: StatusDescription
    path: ../EventStore/src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
    startLine: 53
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Transport.Http
  summary: "\nThe Http response&apos;s status description.\n"
  example: []
  syntax:
    content: public readonly string StatusDescription
    return:
      type: System.String
    content.vb: Public ReadOnly StatusDescription As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Transport.Http.HttpResponse.Body
  commentId: P:EventStore.ClientAPI.Transport.Http.HttpResponse.Body
  id: Body
  parent: EventStore.ClientAPI.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: Body
  nameWithType: HttpResponse.Body
  fullName: EventStore.ClientAPI.Transport.Http.HttpResponse.Body
  type: Property
  source:
    remote:
      path: src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: Body
    path: ../EventStore/src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
    startLine: 58
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Transport.Http
  summary: "\nThe Http response body.\n"
  example: []
  syntax:
    content: public string Body { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Body As String
  overload: EventStore.ClientAPI.Transport.Http.HttpResponse.Body*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.Transport.Http.HttpResponse.#ctor(HttpResponseMessage)
  commentId: M:EventStore.ClientAPI.Transport.Http.HttpResponse.#ctor(HttpResponseMessage)
  id: '#ctor(HttpResponseMessage)'
  parent: EventStore.ClientAPI.Transport.Http.HttpResponse
  langs:
  - csharp
  - vb
  name: HttpResponse(HttpResponseMessage)
  nameWithType: HttpResponse.HttpResponse(HttpResponseMessage)
  fullName: EventStore.ClientAPI.Transport.Http.HttpResponse.HttpResponse(HttpResponseMessage)
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/Transport.Http/HttpResponse.cs
    startLine: 64
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI.Transport.Http
  summary: "\nConstructs a new <xref href=\"EventStore.ClientAPI.Transport.Http.HttpResponse\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public HttpResponse(HttpResponseMessage responseMessage)
    parameters:
    - id: responseMessage
      type: HttpResponseMessage
      description: ''
    content.vb: Public Sub New(responseMessage As HttpResponseMessage)
  overload: EventStore.ClientAPI.Transport.Http.HttpResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI.Transport.Http
  commentId: N:EventStore.ClientAPI.Transport.Http
  name: EventStore.ClientAPI.Transport.Http
  nameWithType: EventStore.ClientAPI.Transport.Http
  fullName: EventStore.ClientAPI.Transport.Http
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: HttpResponseHeaders
  commentId: '!:HttpResponseHeaders'
  isExternal: true
  name: HttpResponseHeaders
  nameWithType: HttpResponseHeaders
  fullName: HttpResponseHeaders
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.ClientAPI.Transport.Http.HttpResponse.Body*
  commentId: Overload:EventStore.ClientAPI.Transport.Http.HttpResponse.Body
  name: Body
  nameWithType: HttpResponse.Body
  fullName: EventStore.ClientAPI.Transport.Http.HttpResponse.Body
- uid: EventStore.ClientAPI.Transport.Http.HttpResponse
  commentId: T:EventStore.ClientAPI.Transport.Http.HttpResponse
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: EventStore.ClientAPI.Transport.Http.HttpResponse
- uid: EventStore.ClientAPI.Transport.Http.HttpResponse.#ctor*
  commentId: Overload:EventStore.ClientAPI.Transport.Http.HttpResponse.#ctor
  name: HttpResponse
  nameWithType: HttpResponse.HttpResponse
  fullName: EventStore.ClientAPI.Transport.Http.HttpResponse.HttpResponse
- uid: HttpResponseMessage
  commentId: '!:HttpResponseMessage'
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: HttpResponseMessage

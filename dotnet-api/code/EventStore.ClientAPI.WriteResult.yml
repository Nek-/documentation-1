### YamlMime:ManagedReference
items:
- uid: EventStore.ClientAPI.WriteResult
  commentId: T:EventStore.ClientAPI.WriteResult
  id: WriteResult
  parent: EventStore.ClientAPI
  children:
  - EventStore.ClientAPI.WriteResult.#ctor(System.Int64,EventStore.ClientAPI.Position)
  - EventStore.ClientAPI.WriteResult.LogPosition
  - EventStore.ClientAPI.WriteResult.NextExpectedVersion
  langs:
  - csharp
  - vb
  name: WriteResult
  nameWithType: WriteResult
  fullName: EventStore.ClientAPI.WriteResult
  type: Struct
  source:
    remote:
      path: src/EventStore.ClientAPI/WriteResult.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: WriteResult
    path: ../EventStore/src/EventStore.ClientAPI/WriteResult.cs
    startLine: 4
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nResult type returned after writing to a stream.\n"
  example: []
  syntax:
    content: public struct WriteResult
    content.vb: Public Structure WriteResult
  extensionMethods:
  - EventStore.ClientAPI.WriteResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.ClientAPI.WriteResult.NextExpectedVersion
  commentId: F:EventStore.ClientAPI.WriteResult.NextExpectedVersion
  id: NextExpectedVersion
  parent: EventStore.ClientAPI.WriteResult
  langs:
  - csharp
  - vb
  name: NextExpectedVersion
  nameWithType: WriteResult.NextExpectedVersion
  fullName: EventStore.ClientAPI.WriteResult.NextExpectedVersion
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/WriteResult.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: NextExpectedVersion
    path: ../EventStore/src/EventStore.ClientAPI/WriteResult.cs
    startLine: 8
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe next expected version for the stream.\n"
  example: []
  syntax:
    content: public readonly long NextExpectedVersion
    return:
      type: System.Int64
    content.vb: Public ReadOnly NextExpectedVersion As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.WriteResult.LogPosition
  commentId: F:EventStore.ClientAPI.WriteResult.LogPosition
  id: LogPosition
  parent: EventStore.ClientAPI.WriteResult
  langs:
  - csharp
  - vb
  name: LogPosition
  nameWithType: WriteResult.LogPosition
  fullName: EventStore.ClientAPI.WriteResult.LogPosition
  type: Field
  source:
    remote:
      path: src/EventStore.ClientAPI/WriteResult.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: LogPosition
    path: ../EventStore/src/EventStore.ClientAPI/WriteResult.cs
    startLine: 13
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nThe <xref href=\"EventStore.ClientAPI.WriteResult.LogPosition\" data-throw-if-not-resolved=\"false\"></xref> of the write.\n"
  example: []
  syntax:
    content: public readonly Position LogPosition
    return:
      type: EventStore.ClientAPI.Position
    content.vb: Public ReadOnly LogPosition As Position
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.ClientAPI.WriteResult.#ctor(System.Int64,EventStore.ClientAPI.Position)
  commentId: M:EventStore.ClientAPI.WriteResult.#ctor(System.Int64,EventStore.ClientAPI.Position)
  id: '#ctor(System.Int64,EventStore.ClientAPI.Position)'
  parent: EventStore.ClientAPI.WriteResult
  langs:
  - csharp
  - vb
  name: WriteResult(Int64, Position)
  nameWithType: WriteResult.WriteResult(Int64, Position)
  fullName: EventStore.ClientAPI.WriteResult.WriteResult(System.Int64, EventStore.ClientAPI.Position)
  type: Constructor
  source:
    remote:
      path: src/EventStore.ClientAPI/WriteResult.cs
      branch: master
      repo: git@github.com:EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.ClientAPI/WriteResult.cs
    startLine: 20
  assemblies:
  - EventStore.ClientAPI
  namespace: EventStore.ClientAPI
  summary: "\nConstructs a new <xref href=\"EventStore.ClientAPI.WriteResult\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public WriteResult(long nextExpectedVersion, Position logPosition)
    parameters:
    - id: nextExpectedVersion
      type: System.Int64
      description: The next expected version for the stream.
    - id: logPosition
      type: EventStore.ClientAPI.Position
      description: The position of the write in the log
    content.vb: Public Sub New(nextExpectedVersion As Long, logPosition As Position)
  overload: EventStore.ClientAPI.WriteResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClientAPI
  commentId: N:EventStore.ClientAPI
  name: EventStore.ClientAPI
  nameWithType: EventStore.ClientAPI
  fullName: EventStore.ClientAPI
- uid: EventStore.ClientAPI.WriteResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<WriteResult>()
  nameWithType: EnumExtensions.EnumValueName<WriteResult>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.ClientAPI.WriteResult>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of WriteResult)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.ClientAPI.WriteResult)()
  name.vb: EnumValueName(Of WriteResult)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<WriteResult>
    nameWithType: EnumExtensions.EnumValueName<WriteResult>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.ClientAPI.WriteResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of WriteResult)
    nameWithType: EnumExtensions.EnumValueName(Of WriteResult)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.ClientAPI.WriteResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.ClientAPI.WriteResult.LogPosition
  commentId: F:EventStore.ClientAPI.WriteResult.LogPosition
  isExternal: true
- uid: EventStore.ClientAPI.Position
  commentId: T:EventStore.ClientAPI.Position
  parent: EventStore.ClientAPI
  name: Position
  nameWithType: Position
  fullName: EventStore.ClientAPI.Position
- uid: EventStore.ClientAPI.WriteResult
  commentId: T:EventStore.ClientAPI.WriteResult
  name: WriteResult
  nameWithType: WriteResult
  fullName: EventStore.ClientAPI.WriteResult
- uid: EventStore.ClientAPI.WriteResult.#ctor*
  commentId: Overload:EventStore.ClientAPI.WriteResult.#ctor
  name: WriteResult
  nameWithType: WriteResult.WriteResult
  fullName: EventStore.ClientAPI.WriteResult.WriteResult

### YamlMime:ManagedReference
items:
- uid: EventStore.ClusterNode.ClusterNodeOptions
  commentId: T:EventStore.ClusterNode.ClusterNodeOptions
  id: ClusterNodeOptions
  parent: EventStore.ClusterNode
  children:
  - EventStore.ClusterNode.ClusterNodeOptions.#ctor
  - EventStore.ClusterNode.ClusterNodeOptions.AddInterfacePrefixes
  - EventStore.ClusterNode.ClusterNodeOptions.AdminOnExt
  - EventStore.ClusterNode.ClusterNodeOptions.AlwaysKeepScavenged
  - EventStore.ClusterNode.ClusterNodeOptions.AuthenticationConfig
  - EventStore.ClusterNode.ClusterNodeOptions.AuthenticationType
  - EventStore.ClusterNode.ClusterNodeOptions.BetterOrdering
  - EventStore.ClusterNode.ClusterNodeOptions.CachedChunks
  - EventStore.ClusterNode.ClusterNodeOptions.CertificateFile
  - EventStore.ClusterNode.ClusterNodeOptions.CertificatePassword
  - EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreLocation
  - EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreName
  - EventStore.ClusterNode.ClusterNodeOptions.CertificateSubjectName
  - EventStore.ClusterNode.ClusterNodeOptions.CertificateThumbprint
  - EventStore.ClusterNode.ClusterNodeOptions.ChunkInitialReaderCount
  - EventStore.ClusterNode.ClusterNodeOptions.ChunksCacheSize
  - EventStore.ClusterNode.ClusterNodeOptions.ClusterDns
  - EventStore.ClusterNode.ClusterNodeOptions.ClusterGossipPort
  - EventStore.ClusterNode.ClusterNodeOptions.ClusterSize
  - EventStore.ClusterNode.ClusterNodeOptions.CommitCount
  - EventStore.ClusterNode.ClusterNodeOptions.CommitTimeoutMs
  - EventStore.ClusterNode.ClusterNodeOptions.Config
  - EventStore.ClusterNode.ClusterNodeOptions.ConnectionPendingSendBytesThreshold
  - EventStore.ClusterNode.ClusterNodeOptions.Db
  - EventStore.ClusterNode.ClusterNodeOptions.Defines
  - EventStore.ClusterNode.ClusterNodeOptions.DisableHTTPCaching
  - EventStore.ClusterNode.ClusterNodeOptions.DisableInsecureTCP
  - EventStore.ClusterNode.ClusterNodeOptions.DisableScavengeMerging
  - EventStore.ClusterNode.ClusterNodeOptions.DiscoverViaDns
  - EventStore.ClusterNode.ClusterNodeOptions.EnableHistograms
  - EventStore.ClusterNode.ClusterNodeOptions.EnableTrustedAuth
  - EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPort
  - EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPortAdvertiseAs
  - EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPrefixes
  - EventStore.ClusterNode.ClusterNodeOptions.ExtIp
  - EventStore.ClusterNode.ClusterNodeOptions.ExtIpAdvertiseAs
  - EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPort
  - EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs
  - EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatInterval
  - EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatTimeout
  - EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPort
  - EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPortAdvertiseAs
  - EventStore.ClusterNode.ClusterNodeOptions.FaultOutOfOrderProjections
  - EventStore.ClusterNode.ClusterNodeOptions.Force
  - EventStore.ClusterNode.ClusterNodeOptions.GossipAllowedDifferenceMs
  - EventStore.ClusterNode.ClusterNodeOptions.GossipIntervalMs
  - EventStore.ClusterNode.ClusterNodeOptions.GossipOnExt
  - EventStore.ClusterNode.ClusterNodeOptions.GossipOnSingleNode
  - EventStore.ClusterNode.ClusterNodeOptions.GossipSeed
  - EventStore.ClusterNode.ClusterNodeOptions.GossipTimeoutMs
  - EventStore.ClusterNode.ClusterNodeOptions.HashCollisionReadLimit
  - EventStore.ClusterNode.ClusterNodeOptions.Help
  - EventStore.ClusterNode.ClusterNodeOptions.Index
  - EventStore.ClusterNode.ClusterNodeOptions.IndexCacheDepth
  - EventStore.ClusterNode.ClusterNodeOptions.InitializationThreads
  - EventStore.ClusterNode.ClusterNodeOptions.IntHttpPort
  - EventStore.ClusterNode.ClusterNodeOptions.IntHttpPortAdvertiseAs
  - EventStore.ClusterNode.ClusterNodeOptions.IntHttpPrefixes
  - EventStore.ClusterNode.ClusterNodeOptions.IntIp
  - EventStore.ClusterNode.ClusterNodeOptions.IntIpAdvertiseAs
  - EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPort
  - EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPortAdvertiseAs
  - EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatInterval
  - EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatTimeout
  - EventStore.ClusterNode.ClusterNodeOptions.IntTcpPort
  - EventStore.ClusterNode.ClusterNodeOptions.IntTcpPortAdvertiseAs
  - EventStore.ClusterNode.ClusterNodeOptions.Log
  - EventStore.ClusterNode.ClusterNodeOptions.LogHttpRequests
  - EventStore.ClusterNode.ClusterNodeOptions.MaxAutoMergeIndexLevel
  - EventStore.ClusterNode.ClusterNodeOptions.MaxMemTableSize
  - EventStore.ClusterNode.ClusterNodeOptions.MemDb
  - EventStore.ClusterNode.ClusterNodeOptions.MinFlushDelayMs
  - EventStore.ClusterNode.ClusterNodeOptions.MonoMinThreadpoolSize
  - EventStore.ClusterNode.ClusterNodeOptions.NodePriority
  - EventStore.ClusterNode.ClusterNodeOptions.OptimizeIndexMerge
  - EventStore.ClusterNode.ClusterNodeOptions.PrepareCount
  - EventStore.ClusterNode.ClusterNodeOptions.PrepareTimeoutMs
  - EventStore.ClusterNode.ClusterNodeOptions.ProjectionsQueryExpiry
  - EventStore.ClusterNode.ClusterNodeOptions.ProjectionThreads
  - EventStore.ClusterNode.ClusterNodeOptions.ReaderThreadsCount
  - EventStore.ClusterNode.ClusterNodeOptions.ReduceFileCachePressure
  - EventStore.ClusterNode.ClusterNodeOptions.RunProjections
  - EventStore.ClusterNode.ClusterNodeOptions.ScavengeHistoryMaxAge
  - EventStore.ClusterNode.ClusterNodeOptions.SkipDbVerify
  - EventStore.ClusterNode.ClusterNodeOptions.SkipIndexScanOnReads
  - EventStore.ClusterNode.ClusterNodeOptions.SkipIndexVerify
  - EventStore.ClusterNode.ClusterNodeOptions.SslTargetHost
  - EventStore.ClusterNode.ClusterNodeOptions.SslValidateServer
  - EventStore.ClusterNode.ClusterNodeOptions.StartStandardProjections
  - EventStore.ClusterNode.ClusterNodeOptions.StatsOnExt
  - EventStore.ClusterNode.ClusterNodeOptions.StatsPeriodSec
  - EventStore.ClusterNode.ClusterNodeOptions.StructuredLog
  - EventStore.ClusterNode.ClusterNodeOptions.Unbuffered
  - EventStore.ClusterNode.ClusterNodeOptions.UnsafeDisableFlushToDisk
  - EventStore.ClusterNode.ClusterNodeOptions.UnsafeIgnoreHardDelete
  - EventStore.ClusterNode.ClusterNodeOptions.UseInternalSsl
  - EventStore.ClusterNode.ClusterNodeOptions.Version
  - EventStore.ClusterNode.ClusterNodeOptions.WhatIf
  - EventStore.ClusterNode.ClusterNodeOptions.WorkerThreads
  - EventStore.ClusterNode.ClusterNodeOptions.WriteThrough
  langs:
  - csharp
  - vb
  name: ClusterNodeOptions
  nameWithType: ClusterNodeOptions
  fullName: EventStore.ClusterNode.ClusterNodeOptions
  type: Class
  source:
    id: ClusterNodeOptions
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 7
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: 'public class ClusterNodeOptions : IOptions'
    content.vb: >-
      Public Class ClusterNodeOptions
          Implements IOptions
  inheritance:
  - System.Object
  implements:
  - EventStore.Common.Options.IOptions
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.ClusterNode.ClusterNodeOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.ClusterNode.ClusterNodeOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.ClusterNode.ClusterNodeOptions.Help
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Help
  id: Help
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Help
  nameWithType: ClusterNodeOptions.Help
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Help
  type: Property
  source:
    id: Help
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 8
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Show help.", "Application Options")]

      public bool Help { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Show help.", "Application Options")>

      Public Property Help As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.Help*
  implements:
  - EventStore.Common.Options.IOptions.Help
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Show help.
    - type: System.String
      value: Application Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.Version
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Version
  id: Version
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ClusterNodeOptions.Version
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Version
  type: Property
  source:
    id: Version
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 11
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Show version.", "Application Options")]

      public bool Version { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Show version.", "Application Options")>

      Public Property Version As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.Version*
  implements:
  - EventStore.Common.Options.IOptions.Version
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Show version.
    - type: System.String
      value: Application Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.Log
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Log
  id: Log
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Log
  nameWithType: ClusterNodeOptions.Log
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Log
  type: Property
  source:
    id: Log
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 14
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Path where to keep log files.", "Application Options")]

      public string Log { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <ArgDescription("Path where to keep log files.", "Application Options")>

      Public Property Log As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.Log*
  implements:
  - EventStore.Common.Options.IOptions.Log
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Path where to keep log files.
    - type: System.String
      value: Application Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.Config
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Config
  id: Config
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: ClusterNodeOptions.Config
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Config
  type: Property
  source:
    id: Config
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 17
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Configuration files.", "Application Options")]

      public string Config { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <ArgDescription("Configuration files.", "Application Options")>

      Public Property Config As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.Config*
  implements:
  - EventStore.Common.Options.IOptions.Config
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Configuration files.
    - type: System.String
      value: Application Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.Defines
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Defines
  id: Defines
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Defines
  nameWithType: ClusterNodeOptions.Defines
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Defines
  type: Property
  source:
    id: Defines
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 20
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Run-time conditionals.", "Application Options")]

      public string[] Defines { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: >-
      <ArgDescription("Run-time conditionals.", "Application Options")>

      Public Property Defines As String()
  overload: EventStore.ClusterNode.ClusterNodeOptions.Defines*
  implements:
  - EventStore.Common.Options.IOptions.Defines
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Run-time conditionals.
    - type: System.String
      value: Application Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.WhatIf
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.WhatIf
  id: WhatIf
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: WhatIf
  nameWithType: ClusterNodeOptions.WhatIf
  fullName: EventStore.ClusterNode.ClusterNodeOptions.WhatIf
  type: Property
  source:
    id: WhatIf
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 23
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Print effective configuration to console and then exit.", "Application Options")]

      public bool WhatIf { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Print effective configuration to console and then exit.", "Application Options")>

      Public Property WhatIf As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.WhatIf*
  implements:
  - EventStore.Common.Options.IOptions.WhatIf
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Print effective configuration to console and then exit.
    - type: System.String
      value: Application Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.StartStandardProjections
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.StartStandardProjections
  id: StartStandardProjections
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: StartStandardProjections
  nameWithType: ClusterNodeOptions.StartStandardProjections
  fullName: EventStore.ClusterNode.ClusterNodeOptions.StartStandardProjections
  type: Property
  source:
    id: StartStandardProjections
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 26
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Start the built in system projections.", "Application Options")]

      public bool StartStandardProjections { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Start the built in system projections.", "Application Options")>

      Public Property StartStandardProjections As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.StartStandardProjections*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Start the built in system projections.
    - type: System.String
      value: Application Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.DisableHTTPCaching
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.DisableHTTPCaching
  id: DisableHTTPCaching
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: DisableHTTPCaching
  nameWithType: ClusterNodeOptions.DisableHTTPCaching
  fullName: EventStore.ClusterNode.ClusterNodeOptions.DisableHTTPCaching
  type: Property
  source:
    id: DisableHTTPCaching
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 29
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Disable HTTP caching.", "Application Options")]

      public bool DisableHTTPCaching { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Disable HTTP caching.", "Application Options")>

      Public Property DisableHTTPCaching As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.DisableHTTPCaching*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Disable HTTP caching.
    - type: System.String
      value: Application Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.MonoMinThreadpoolSize
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.MonoMinThreadpoolSize
  id: MonoMinThreadpoolSize
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: MonoMinThreadpoolSize
  nameWithType: ClusterNodeOptions.MonoMinThreadpoolSize
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MonoMinThreadpoolSize
  type: Property
  source:
    id: MonoMinThreadpoolSize
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 32
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Minimum number of worker threads when running under mono. Set to 0 to leave machine defaults.", "Application Options")]

      public int MonoMinThreadpoolSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Minimum number of worker threads when running under mono. Set to 0 to leave machine defaults.", "Application Options")>

      Public Property MonoMinThreadpoolSize As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.MonoMinThreadpoolSize*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Minimum number of worker threads when running under mono. Set to 0 to leave machine defaults.
    - type: System.String
      value: Application Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntIp
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntIp
  id: IntIp
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntIp
  nameWithType: ClusterNodeOptions.IntIp
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntIp
  type: Property
  source:
    id: IntIp
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 35
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Internal IP Address.", "Interface Options")]

      public IPAddress IntIp { get; set; }
    parameters: []
    return:
      type: System.Net.IPAddress
    content.vb: >-
      <ArgDescription("Internal IP Address.", "Interface Options")>

      Public Property IntIp As IPAddress
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntIp*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Internal IP Address.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtIp
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtIp
  id: ExtIp
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtIp
  nameWithType: ClusterNodeOptions.ExtIp
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtIp
  type: Property
  source:
    id: ExtIp
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 38
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("External IP Address.", "Interface Options")]

      public IPAddress ExtIp { get; set; }
    parameters: []
    return:
      type: System.Net.IPAddress
    content.vb: >-
      <ArgDescription("External IP Address.", "Interface Options")>

      Public Property ExtIp As IPAddress
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtIp*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: External IP Address.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPort
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntHttpPort
  id: IntHttpPort
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntHttpPort
  nameWithType: ClusterNodeOptions.IntHttpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPort
  type: Property
  source:
    id: IntHttpPort
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 41
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Internal HTTP Port.", "Interface Options")]

      public int IntHttpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Internal HTTP Port.", "Interface Options")>

      Public Property IntHttpPort As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPort*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Internal HTTP Port.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPort
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPort
  id: ExtHttpPort
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtHttpPort
  nameWithType: ClusterNodeOptions.ExtHttpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPort
  type: Property
  source:
    id: ExtHttpPort
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 44
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("External HTTP Port.", "Interface Options")]

      public int ExtHttpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("External HTTP Port.", "Interface Options")>

      Public Property ExtHttpPort As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPort*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: External HTTP Port.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPort
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntTcpPort
  id: IntTcpPort
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntTcpPort
  nameWithType: ClusterNodeOptions.IntTcpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPort
  type: Property
  source:
    id: IntTcpPort
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 47
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Internal TCP Port.", "Interface Options")]

      public int IntTcpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Internal TCP Port.", "Interface Options")>

      Public Property IntTcpPort As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPort*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Internal TCP Port.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPort
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPort
  id: IntSecureTcpPort
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntSecureTcpPort
  nameWithType: ClusterNodeOptions.IntSecureTcpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPort
  type: Property
  source:
    id: IntSecureTcpPort
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 50
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Internal Secure TCP Port.", "Interface Options")]

      public int IntSecureTcpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Internal Secure TCP Port.", "Interface Options")>

      Public Property IntSecureTcpPort As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPort*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Internal Secure TCP Port.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPort
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPort
  id: ExtTcpPort
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtTcpPort
  nameWithType: ClusterNodeOptions.ExtTcpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPort
  type: Property
  source:
    id: ExtTcpPort
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 53
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("External TCP Port.", "Interface Options")]

      public int ExtTcpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("External TCP Port.", "Interface Options")>

      Public Property ExtTcpPort As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPort*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: External TCP Port.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs
  id: ExtSecureTcpPortAdvertiseAs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtSecureTcpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs
  type: Property
  source:
    id: ExtSecureTcpPortAdvertiseAs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 56
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Advertise Secure External Tcp Port As.", "Interface Options")]

      public int ExtSecureTcpPortAdvertiseAs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Advertise Secure External Tcp Port As.", "Interface Options")>

      Public Property ExtSecureTcpPortAdvertiseAs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Advertise Secure External Tcp Port As.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPort
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPort
  id: ExtSecureTcpPort
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtSecureTcpPort
  nameWithType: ClusterNodeOptions.ExtSecureTcpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPort
  type: Property
  source:
    id: ExtSecureTcpPort
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 59
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("External Secure TCP Port.", "Interface Options")]

      public int ExtSecureTcpPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("External Secure TCP Port.", "Interface Options")>

      Public Property ExtSecureTcpPort As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPort*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: External Secure TCP Port.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtIpAdvertiseAs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtIpAdvertiseAs
  id: ExtIpAdvertiseAs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtIpAdvertiseAs
  nameWithType: ClusterNodeOptions.ExtIpAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtIpAdvertiseAs
  type: Property
  source:
    id: ExtIpAdvertiseAs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 62
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Advertise External Tcp Address As.", "Interface Options")]

      public IPAddress ExtIpAdvertiseAs { get; set; }
    parameters: []
    return:
      type: System.Net.IPAddress
    content.vb: >-
      <ArgDescription("Advertise External Tcp Address As.", "Interface Options")>

      Public Property ExtIpAdvertiseAs As IPAddress
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtIpAdvertiseAs*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Advertise External Tcp Address As.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPortAdvertiseAs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPortAdvertiseAs
  id: ExtTcpPortAdvertiseAs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtTcpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.ExtTcpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPortAdvertiseAs
  type: Property
  source:
    id: ExtTcpPortAdvertiseAs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 65
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Advertise External Tcp Port As.", "Interface Options")]

      public int ExtTcpPortAdvertiseAs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Advertise External Tcp Port As.", "Interface Options")>

      Public Property ExtTcpPortAdvertiseAs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPortAdvertiseAs*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Advertise External Tcp Port As.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPortAdvertiseAs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPortAdvertiseAs
  id: ExtHttpPortAdvertiseAs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtHttpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.ExtHttpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPortAdvertiseAs
  type: Property
  source:
    id: ExtHttpPortAdvertiseAs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 68
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Advertise External Http Port As.", "Interface Options")]

      public int ExtHttpPortAdvertiseAs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Advertise External Http Port As.", "Interface Options")>

      Public Property ExtHttpPortAdvertiseAs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPortAdvertiseAs*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Advertise External Http Port As.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntIpAdvertiseAs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntIpAdvertiseAs
  id: IntIpAdvertiseAs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntIpAdvertiseAs
  nameWithType: ClusterNodeOptions.IntIpAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntIpAdvertiseAs
  type: Property
  source:
    id: IntIpAdvertiseAs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 71
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Advertise Internal Tcp Address As.", "Interface Options")]

      public IPAddress IntIpAdvertiseAs { get; set; }
    parameters: []
    return:
      type: System.Net.IPAddress
    content.vb: >-
      <ArgDescription("Advertise Internal Tcp Address As.", "Interface Options")>

      Public Property IntIpAdvertiseAs As IPAddress
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntIpAdvertiseAs*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Advertise Internal Tcp Address As.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPortAdvertiseAs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPortAdvertiseAs
  id: IntSecureTcpPortAdvertiseAs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntSecureTcpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.IntSecureTcpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPortAdvertiseAs
  type: Property
  source:
    id: IntSecureTcpPortAdvertiseAs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 74
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Advertise Secure Internal Tcp Port As.", "Interface Options")]

      public int IntSecureTcpPortAdvertiseAs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Advertise Secure Internal Tcp Port As.", "Interface Options")>

      Public Property IntSecureTcpPortAdvertiseAs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPortAdvertiseAs*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Advertise Secure Internal Tcp Port As.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPortAdvertiseAs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntTcpPortAdvertiseAs
  id: IntTcpPortAdvertiseAs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntTcpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.IntTcpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPortAdvertiseAs
  type: Property
  source:
    id: IntTcpPortAdvertiseAs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 77
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Advertise Internal Tcp Port As.", "Interface Options")]

      public int IntTcpPortAdvertiseAs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Advertise Internal Tcp Port As.", "Interface Options")>

      Public Property IntTcpPortAdvertiseAs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPortAdvertiseAs*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Advertise Internal Tcp Port As.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPortAdvertiseAs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntHttpPortAdvertiseAs
  id: IntHttpPortAdvertiseAs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntHttpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.IntHttpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPortAdvertiseAs
  type: Property
  source:
    id: IntHttpPortAdvertiseAs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 80
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Advertise Internal Http Port As.", "Interface Options")]

      public int IntHttpPortAdvertiseAs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Advertise Internal Http Port As.", "Interface Options")>

      Public Property IntHttpPortAdvertiseAs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPortAdvertiseAs*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Advertise Internal Http Port As.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatTimeout
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatTimeout
  id: IntTcpHeartbeatTimeout
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntTcpHeartbeatTimeout
  nameWithType: ClusterNodeOptions.IntTcpHeartbeatTimeout
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatTimeout
  type: Property
  source:
    id: IntTcpHeartbeatTimeout
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 83
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Heartbeat timeout for internal TCP sockets", "Interface Options")]

      public int IntTcpHeartbeatTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Heartbeat timeout for internal TCP sockets", "Interface Options")>

      Public Property IntTcpHeartbeatTimeout As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatTimeout*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Heartbeat timeout for internal TCP sockets
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatTimeout
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatTimeout
  id: ExtTcpHeartbeatTimeout
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtTcpHeartbeatTimeout
  nameWithType: ClusterNodeOptions.ExtTcpHeartbeatTimeout
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatTimeout
  type: Property
  source:
    id: ExtTcpHeartbeatTimeout
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 86
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Heartbeat timeout for external TCP sockets", "Interface Options")]

      public int ExtTcpHeartbeatTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Heartbeat timeout for external TCP sockets", "Interface Options")>

      Public Property ExtTcpHeartbeatTimeout As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatTimeout*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Heartbeat timeout for external TCP sockets
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatInterval
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatInterval
  id: IntTcpHeartbeatInterval
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntTcpHeartbeatInterval
  nameWithType: ClusterNodeOptions.IntTcpHeartbeatInterval
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatInterval
  type: Property
  source:
    id: IntTcpHeartbeatInterval
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 89
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Heartbeat interval for internal TCP sockets", "Interface Options")]

      public int IntTcpHeartbeatInterval { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Heartbeat interval for internal TCP sockets", "Interface Options")>

      Public Property IntTcpHeartbeatInterval As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatInterval*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Heartbeat interval for internal TCP sockets
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatInterval
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatInterval
  id: ExtTcpHeartbeatInterval
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtTcpHeartbeatInterval
  nameWithType: ClusterNodeOptions.ExtTcpHeartbeatInterval
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatInterval
  type: Property
  source:
    id: ExtTcpHeartbeatInterval
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 92
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Heartbeat interval for external TCP sockets", "Interface Options")]

      public int ExtTcpHeartbeatInterval { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Heartbeat interval for external TCP sockets", "Interface Options")>

      Public Property ExtTcpHeartbeatInterval As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatInterval*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Heartbeat interval for external TCP sockets
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipOnSingleNode
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.GossipOnSingleNode
  id: GossipOnSingleNode
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: GossipOnSingleNode
  nameWithType: ClusterNodeOptions.GossipOnSingleNode
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipOnSingleNode
  type: Property
  source:
    id: GossipOnSingleNode
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 95
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("When enabled tells a single node to run gossip as if it is a cluster", "Interface Options")]

      public bool GossipOnSingleNode { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("When enabled tells a single node to run gossip as if it is a cluster", "Interface Options")>

      Public Property GossipOnSingleNode As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.GossipOnSingleNode*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: When enabled tells a single node to run gossip as if it is a cluster
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ConnectionPendingSendBytesThreshold
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ConnectionPendingSendBytesThreshold
  id: ConnectionPendingSendBytesThreshold
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ConnectionPendingSendBytesThreshold
  nameWithType: ClusterNodeOptions.ConnectionPendingSendBytesThreshold
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ConnectionPendingSendBytesThreshold
  type: Property
  source:
    id: ConnectionPendingSendBytesThreshold
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 98
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The maximum number of pending send bytes allowed before a connection is closed.", "Interface Options")]

      public int ConnectionPendingSendBytesThreshold { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The maximum number of pending send bytes allowed before a connection is closed.", "Interface Options")>

      Public Property ConnectionPendingSendBytesThreshold As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ConnectionPendingSendBytesThreshold*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The maximum number of pending send bytes allowed before a connection is closed.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.Force
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Force
  id: Force
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Force
  nameWithType: ClusterNodeOptions.Force
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Force
  type: Property
  source:
    id: Force
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 102
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Force the Event Store to run in possibly harmful environments such as with Boehm GC.", "Application Options")]

      public bool Force { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Force the Event Store to run in possibly harmful environments such as with Boehm GC.", "Application Options")>

      Public Property Force As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.Force*
  implements:
  - EventStore.Common.Options.IOptions.Force
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Force the Event Store to run in possibly harmful environments such as with Boehm GC.
    - type: System.String
      value: Application Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ClusterSize
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ClusterSize
  id: ClusterSize
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ClusterSize
  nameWithType: ClusterNodeOptions.ClusterSize
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ClusterSize
  type: Property
  source:
    id: ClusterSize
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 105
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The number of nodes in the cluster.", "Cluster Options")]

      public int ClusterSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The number of nodes in the cluster.", "Cluster Options")>

      Public Property ClusterSize As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ClusterSize*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The number of nodes in the cluster.
    - type: System.String
      value: Cluster Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.NodePriority
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.NodePriority
  id: NodePriority
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: NodePriority
  nameWithType: ClusterNodeOptions.NodePriority
  fullName: EventStore.ClusterNode.ClusterNodeOptions.NodePriority
  type: Property
  source:
    id: NodePriority
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 108
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The node priority used during master election", "Cluster Options")]

      public int NodePriority { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The node priority used during master election", "Cluster Options")>

      Public Property NodePriority As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.NodePriority*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The node priority used during master election
    - type: System.String
      value: Cluster Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.MinFlushDelayMs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.MinFlushDelayMs
  id: MinFlushDelayMs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: MinFlushDelayMs
  nameWithType: ClusterNodeOptions.MinFlushDelayMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MinFlushDelayMs
  type: Property
  source:
    id: MinFlushDelayMs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 111
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The minimum flush delay in milliseconds.", "Database Options")]

      public double MinFlushDelayMs { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <ArgDescription("The minimum flush delay in milliseconds.", "Database Options")>

      Public Property MinFlushDelayMs As Double
  overload: EventStore.ClusterNode.ClusterNodeOptions.MinFlushDelayMs*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The minimum flush delay in milliseconds.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CommitCount
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CommitCount
  id: CommitCount
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CommitCount
  nameWithType: ClusterNodeOptions.CommitCount
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CommitCount
  type: Property
  source:
    id: CommitCount
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 114
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The number of nodes which must acknowledge commits before acknowledging to a client.", "Cluster Options")]

      public int CommitCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The number of nodes which must acknowledge commits before acknowledging to a client.", "Cluster Options")>

      Public Property CommitCount As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.CommitCount*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The number of nodes which must acknowledge commits before acknowledging to a client.
    - type: System.String
      value: Cluster Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.PrepareCount
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.PrepareCount
  id: PrepareCount
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: PrepareCount
  nameWithType: ClusterNodeOptions.PrepareCount
  fullName: EventStore.ClusterNode.ClusterNodeOptions.PrepareCount
  type: Property
  source:
    id: PrepareCount
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 117
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The number of nodes which must acknowledge prepares.", "Cluster Options")]

      public int PrepareCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The number of nodes which must acknowledge prepares.", "Cluster Options")>

      Public Property PrepareCount As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.PrepareCount*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The number of nodes which must acknowledge prepares.
    - type: System.String
      value: Cluster Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.AdminOnExt
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.AdminOnExt
  id: AdminOnExt
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: AdminOnExt
  nameWithType: ClusterNodeOptions.AdminOnExt
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AdminOnExt
  type: Property
  source:
    id: AdminOnExt
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 120
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Whether or not to run the admin ui on the external HTTP endpoint", "Interface Options")]

      public bool AdminOnExt { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Whether or not to run the admin ui on the external HTTP endpoint", "Interface Options")>

      Public Property AdminOnExt As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.AdminOnExt*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Whether or not to run the admin ui on the external HTTP endpoint
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.StatsOnExt
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.StatsOnExt
  id: StatsOnExt
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: StatsOnExt
  nameWithType: ClusterNodeOptions.StatsOnExt
  fullName: EventStore.ClusterNode.ClusterNodeOptions.StatsOnExt
  type: Property
  source:
    id: StatsOnExt
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 123
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Whether or not to accept statistics requests on the external HTTP endpoint, needed if you use admin ui", "Interface Options")]

      public bool StatsOnExt { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Whether or not to accept statistics requests on the external HTTP endpoint, needed if you use admin ui", "Interface Options")>

      Public Property StatsOnExt As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.StatsOnExt*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Whether or not to accept statistics requests on the external HTTP endpoint, needed if you use admin ui
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipOnExt
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.GossipOnExt
  id: GossipOnExt
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: GossipOnExt
  nameWithType: ClusterNodeOptions.GossipOnExt
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipOnExt
  type: Property
  source:
    id: GossipOnExt
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 126
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Whether or not to accept gossip requests on the external HTTP endpoint", "Interface Options")]

      public bool GossipOnExt { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Whether or not to accept gossip requests on the external HTTP endpoint", "Interface Options")>

      Public Property GossipOnExt As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.GossipOnExt*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Whether or not to accept gossip requests on the external HTTP endpoint
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.DisableScavengeMerging
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.DisableScavengeMerging
  id: DisableScavengeMerging
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: DisableScavengeMerging
  nameWithType: ClusterNodeOptions.DisableScavengeMerging
  fullName: EventStore.ClusterNode.ClusterNodeOptions.DisableScavengeMerging
  type: Property
  source:
    id: DisableScavengeMerging
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 129
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Disables the merging of chunks when scavenge is running", "Database Options")]

      public bool DisableScavengeMerging { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Disables the merging of chunks when scavenge is running", "Database Options")>

      Public Property DisableScavengeMerging As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.DisableScavengeMerging*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Disables the merging of chunks when scavenge is running
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ScavengeHistoryMaxAge
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ScavengeHistoryMaxAge
  id: ScavengeHistoryMaxAge
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ScavengeHistoryMaxAge
  nameWithType: ClusterNodeOptions.ScavengeHistoryMaxAge
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ScavengeHistoryMaxAge
  type: Property
  source:
    id: ScavengeHistoryMaxAge
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 132
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The number of days to keep scavenge history", "Database Options")]

      public int ScavengeHistoryMaxAge { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The number of days to keep scavenge history", "Database Options")>

      Public Property ScavengeHistoryMaxAge As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ScavengeHistoryMaxAge*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The number of days to keep scavenge history
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.DiscoverViaDns
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.DiscoverViaDns
  id: DiscoverViaDns
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: DiscoverViaDns
  nameWithType: ClusterNodeOptions.DiscoverViaDns
  fullName: EventStore.ClusterNode.ClusterNodeOptions.DiscoverViaDns
  type: Property
  source:
    id: DiscoverViaDns
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 135
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Whether to use DNS lookup to discover other cluster nodes.", "Cluster Options")]

      public bool DiscoverViaDns { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Whether to use DNS lookup to discover other cluster nodes.", "Cluster Options")>

      Public Property DiscoverViaDns As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.DiscoverViaDns*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Whether to use DNS lookup to discover other cluster nodes.
    - type: System.String
      value: Cluster Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ClusterDns
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ClusterDns
  id: ClusterDns
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ClusterDns
  nameWithType: ClusterNodeOptions.ClusterDns
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ClusterDns
  type: Property
  source:
    id: ClusterDns
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 138
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("DNS name from which other nodes can be discovered.", "Cluster Options")]

      public string ClusterDns { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <ArgDescription("DNS name from which other nodes can be discovered.", "Cluster Options")>

      Public Property ClusterDns As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.ClusterDns*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: DNS name from which other nodes can be discovered.
    - type: System.String
      value: Cluster Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ClusterGossipPort
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ClusterGossipPort
  id: ClusterGossipPort
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ClusterGossipPort
  nameWithType: ClusterNodeOptions.ClusterGossipPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ClusterGossipPort
  type: Property
  source:
    id: ClusterGossipPort
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 141
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The port on which cluster nodes' managers are running.", "Cluster Options")]

      public int ClusterGossipPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The port on which cluster nodes' managers are running.", "Cluster Options")>

      Public Property ClusterGossipPort As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ClusterGossipPort*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The port on which cluster nodes' managers are running.
    - type: System.String
      value: Cluster Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipSeed
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.GossipSeed
  id: GossipSeed
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: GossipSeed
  nameWithType: ClusterNodeOptions.GossipSeed
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipSeed
  type: Property
  source:
    id: GossipSeed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 144
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Endpoints for other cluster nodes from which to seed gossip", "Cluster Options")]

      public IPEndPoint[] GossipSeed { get; set; }
    parameters: []
    return:
      type: System.Net.IPEndPoint[]
    content.vb: >-
      <ArgDescription("Endpoints for other cluster nodes from which to seed gossip", "Cluster Options")>

      Public Property GossipSeed As IPEndPoint()
  overload: EventStore.ClusterNode.ClusterNodeOptions.GossipSeed*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Endpoints for other cluster nodes from which to seed gossip
    - type: System.String
      value: Cluster Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.StatsPeriodSec
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.StatsPeriodSec
  id: StatsPeriodSec
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: StatsPeriodSec
  nameWithType: ClusterNodeOptions.StatsPeriodSec
  fullName: EventStore.ClusterNode.ClusterNodeOptions.StatsPeriodSec
  type: Property
  source:
    id: StatsPeriodSec
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 147
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The number of seconds between statistics gathers.", "Application Options")]

      public int StatsPeriodSec { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The number of seconds between statistics gathers.", "Application Options")>

      Public Property StatsPeriodSec As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.StatsPeriodSec*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The number of seconds between statistics gathers.
    - type: System.String
      value: Application Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CachedChunks
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CachedChunks
  id: CachedChunks
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CachedChunks
  nameWithType: ClusterNodeOptions.CachedChunks
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CachedChunks
  type: Property
  source:
    id: CachedChunks
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 150
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The number of chunks to cache in unmanaged memory.", "Database Options")]

      public int CachedChunks { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The number of chunks to cache in unmanaged memory.", "Database Options")>

      Public Property CachedChunks As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.CachedChunks*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The number of chunks to cache in unmanaged memory.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ReaderThreadsCount
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ReaderThreadsCount
  id: ReaderThreadsCount
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ReaderThreadsCount
  nameWithType: ClusterNodeOptions.ReaderThreadsCount
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ReaderThreadsCount
  type: Property
  source:
    id: ReaderThreadsCount
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 153
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The number of reader threads to use for processing reads.", "Database Options")]

      public int ReaderThreadsCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The number of reader threads to use for processing reads.", "Database Options")>

      Public Property ReaderThreadsCount As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ReaderThreadsCount*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The number of reader threads to use for processing reads.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ChunksCacheSize
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ChunksCacheSize
  id: ChunksCacheSize
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ChunksCacheSize
  nameWithType: ClusterNodeOptions.ChunksCacheSize
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ChunksCacheSize
  type: Property
  source:
    id: ChunksCacheSize
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 156
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The amount of unmanaged memory to use for caching chunks in bytes.", "Database Options")]

      public long ChunksCacheSize { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <ArgDescription("The amount of unmanaged memory to use for caching chunks in bytes.", "Database Options")>

      Public Property ChunksCacheSize As Long
  overload: EventStore.ClusterNode.ClusterNodeOptions.ChunksCacheSize*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The amount of unmanaged memory to use for caching chunks in bytes.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.MaxMemTableSize
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.MaxMemTableSize
  id: MaxMemTableSize
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: MaxMemTableSize
  nameWithType: ClusterNodeOptions.MaxMemTableSize
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MaxMemTableSize
  type: Property
  source:
    id: MaxMemTableSize
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 159
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Adjusts the maximum size of a mem table.", "Database Options")]

      public int MaxMemTableSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Adjusts the maximum size of a mem table.", "Database Options")>

      Public Property MaxMemTableSize As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.MaxMemTableSize*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Adjusts the maximum size of a mem table.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.HashCollisionReadLimit
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.HashCollisionReadLimit
  id: HashCollisionReadLimit
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: HashCollisionReadLimit
  nameWithType: ClusterNodeOptions.HashCollisionReadLimit
  fullName: EventStore.ClusterNode.ClusterNodeOptions.HashCollisionReadLimit
  type: Property
  source:
    id: HashCollisionReadLimit
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 162
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The number of events to read per candidate in the case of a hash collision", "Database Options")]

      public int HashCollisionReadLimit { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The number of events to read per candidate in the case of a hash collision", "Database Options")>

      Public Property HashCollisionReadLimit As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.HashCollisionReadLimit*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The number of events to read per candidate in the case of a hash collision
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.Db
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Db
  id: Db
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Db
  nameWithType: ClusterNodeOptions.Db
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Db
  type: Property
  source:
    id: Db
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 165
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The path the db should be loaded/saved to.", "Database Options")]

      public string Db { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <ArgDescription("The path the db should be loaded/saved to.", "Database Options")>

      Public Property Db As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.Db*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The path the db should be loaded/saved to.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.Index
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Index
  id: Index
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: ClusterNodeOptions.Index
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Index
  type: Property
  source:
    id: Index
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 168
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The path the index should be loaded/saved to.", "Database Options")]

      public string Index { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <ArgDescription("The path the index should be loaded/saved to.", "Database Options")>

      Public Property Index As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.Index*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The path the index should be loaded/saved to.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.MemDb
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.MemDb
  id: MemDb
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: MemDb
  nameWithType: ClusterNodeOptions.MemDb
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MemDb
  type: Property
  source:
    id: MemDb
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 171
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Keep everything in memory, no directories or files are created.", "Database Options")]

      public bool MemDb { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Keep everything in memory, no directories or files are created.", "Database Options")>

      Public Property MemDb As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.MemDb*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Keep everything in memory, no directories or files are created.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.SkipDbVerify
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.SkipDbVerify
  id: SkipDbVerify
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: SkipDbVerify
  nameWithType: ClusterNodeOptions.SkipDbVerify
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SkipDbVerify
  type: Property
  source:
    id: SkipDbVerify
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 174
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Bypasses the checking of file hashes of database during startup (allows for faster startup).", "Database Options")]

      public bool SkipDbVerify { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Bypasses the checking of file hashes of database during startup (allows for faster startup).", "Database Options")>

      Public Property SkipDbVerify As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.SkipDbVerify*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Bypasses the checking of file hashes of database during startup (allows for faster startup).
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.WriteThrough
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.WriteThrough
  id: WriteThrough
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: WriteThrough
  nameWithType: ClusterNodeOptions.WriteThrough
  fullName: EventStore.ClusterNode.ClusterNodeOptions.WriteThrough
  type: Property
  source:
    id: WriteThrough
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 177
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Enables Write Through when writing to the file system, this bypasses filesystem caches.", "Database Options")]

      public bool WriteThrough { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Enables Write Through when writing to the file system, this bypasses filesystem caches.", "Database Options")>

      Public Property WriteThrough As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.WriteThrough*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Enables Write Through when writing to the file system, this bypasses filesystem caches.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.Unbuffered
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.Unbuffered
  id: Unbuffered
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: Unbuffered
  nameWithType: ClusterNodeOptions.Unbuffered
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Unbuffered
  type: Property
  source:
    id: Unbuffered
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 180
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Enables Unbuffered/DirectIO when writing to the file system, this bypasses filesystem caches.", "Database Options")]

      public bool Unbuffered { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Enables Unbuffered/DirectIO when writing to the file system, this bypasses filesystem caches.", "Database Options")>

      Public Property Unbuffered As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.Unbuffered*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Enables Unbuffered/DirectIO when writing to the file system, this bypasses filesystem caches.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ChunkInitialReaderCount
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ChunkInitialReaderCount
  id: ChunkInitialReaderCount
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ChunkInitialReaderCount
  nameWithType: ClusterNodeOptions.ChunkInitialReaderCount
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ChunkInitialReaderCount
  type: Property
  source:
    id: ChunkInitialReaderCount
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 183
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The initial number of readers to start when opening a TFChunk", "Database Options")]

      public int ChunkInitialReaderCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The initial number of readers to start when opening a TFChunk", "Database Options")>

      Public Property ChunkInitialReaderCount As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ChunkInitialReaderCount*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The initial number of readers to start when opening a TFChunk
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.RunProjections
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.RunProjections
  id: RunProjections
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: RunProjections
  nameWithType: ClusterNodeOptions.RunProjections
  fullName: EventStore.ClusterNode.ClusterNodeOptions.RunProjections
  type: Property
  source:
    id: RunProjections
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 187
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Enables the running of projections. System runs built-in projections, All runs user projections.", "Projections Options")]

      public ProjectionType RunProjections { get; set; }
    parameters: []
    return:
      type: EventStore.Common.Options.ProjectionType
    content.vb: >-
      <ArgDescription("Enables the running of projections. System runs built-in projections, All runs user projections.", "Projections Options")>

      Public Property RunProjections As ProjectionType
  overload: EventStore.ClusterNode.ClusterNodeOptions.RunProjections*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Enables the running of projections. System runs built-in projections, All runs user projections.
    - type: System.String
      value: Projections Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ProjectionThreads
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ProjectionThreads
  id: ProjectionThreads
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ProjectionThreads
  nameWithType: ClusterNodeOptions.ProjectionThreads
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ProjectionThreads
  type: Property
  source:
    id: ProjectionThreads
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 190
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The number of threads to use for projections.", "Projections Options")]

      public int ProjectionThreads { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The number of threads to use for projections.", "Projections Options")>

      Public Property ProjectionThreads As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ProjectionThreads*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The number of threads to use for projections.
    - type: System.String
      value: Projections Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.WorkerThreads
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.WorkerThreads
  id: WorkerThreads
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: WorkerThreads
  nameWithType: ClusterNodeOptions.WorkerThreads
  fullName: EventStore.ClusterNode.ClusterNodeOptions.WorkerThreads
  type: Property
  source:
    id: WorkerThreads
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 193
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The number of threads to use for pool of worker services.", "Application Options")]

      public int WorkerThreads { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The number of threads to use for pool of worker services.", "Application Options")>

      Public Property WorkerThreads As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.WorkerThreads*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The number of threads to use for pool of worker services.
    - type: System.String
      value: Application Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ProjectionsQueryExpiry
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ProjectionsQueryExpiry
  id: ProjectionsQueryExpiry
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ProjectionsQueryExpiry
  nameWithType: ClusterNodeOptions.ProjectionsQueryExpiry
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ProjectionsQueryExpiry
  type: Property
  source:
    id: ProjectionsQueryExpiry
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 196
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The number of minutes a query can be idle before it expires", "Projections Options")]

      public int ProjectionsQueryExpiry { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The number of minutes a query can be idle before it expires", "Projections Options")>

      Public Property ProjectionsQueryExpiry As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.ProjectionsQueryExpiry*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The number of minutes a query can be idle before it expires
    - type: System.String
      value: Projections Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.FaultOutOfOrderProjections
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.FaultOutOfOrderProjections
  id: FaultOutOfOrderProjections
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: FaultOutOfOrderProjections
  nameWithType: ClusterNodeOptions.FaultOutOfOrderProjections
  fullName: EventStore.ClusterNode.ClusterNodeOptions.FaultOutOfOrderProjections
  type: Property
  source:
    id: FaultOutOfOrderProjections
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 199
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Fault the projection if the Event number that was expected in the stream differs from what is received. This may happen if events have been deleted or expired", "Projections Options")]

      public bool FaultOutOfOrderProjections { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Fault the projection if the Event number that was expected in the stream differs from what is received. This may happen if events have been deleted or expired", "Projections Options")>

      Public Property FaultOutOfOrderProjections As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.FaultOutOfOrderProjections*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Fault the projection if the Event number that was expected in the stream differs from what is received. This may happen if events have been deleted or expired
    - type: System.String
      value: Projections Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPrefixes
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IntHttpPrefixes
  id: IntHttpPrefixes
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IntHttpPrefixes
  nameWithType: ClusterNodeOptions.IntHttpPrefixes
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPrefixes
  type: Property
  source:
    id: IntHttpPrefixes
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 202
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The prefixes that the internal HTTP server should respond to.", "Interface Options")]

      public string[] IntHttpPrefixes { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: >-
      <ArgDescription("The prefixes that the internal HTTP server should respond to.", "Interface Options")>

      Public Property IntHttpPrefixes As String()
  overload: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPrefixes*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The prefixes that the internal HTTP server should respond to.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPrefixes
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPrefixes
  id: ExtHttpPrefixes
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ExtHttpPrefixes
  nameWithType: ClusterNodeOptions.ExtHttpPrefixes
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPrefixes
  type: Property
  source:
    id: ExtHttpPrefixes
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 205
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The prefixes that the external HTTP server should respond to.", "Interface Options")]

      public string[] ExtHttpPrefixes { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: >-
      <ArgDescription("The prefixes that the external HTTP server should respond to.", "Interface Options")>

      Public Property ExtHttpPrefixes As String()
  overload: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPrefixes*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The prefixes that the external HTTP server should respond to.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.EnableTrustedAuth
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.EnableTrustedAuth
  id: EnableTrustedAuth
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: EnableTrustedAuth
  nameWithType: ClusterNodeOptions.EnableTrustedAuth
  fullName: EventStore.ClusterNode.ClusterNodeOptions.EnableTrustedAuth
  type: Property
  source:
    id: EnableTrustedAuth
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 208
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Enables trusted authentication by an intermediary in the HTTP", "Interface Options")]

      public bool EnableTrustedAuth { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Enables trusted authentication by an intermediary in the HTTP", "Interface Options")>

      Public Property EnableTrustedAuth As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.EnableTrustedAuth*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Enables trusted authentication by an intermediary in the HTTP
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.AddInterfacePrefixes
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.AddInterfacePrefixes
  id: AddInterfacePrefixes
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: AddInterfacePrefixes
  nameWithType: ClusterNodeOptions.AddInterfacePrefixes
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AddInterfacePrefixes
  type: Property
  source:
    id: AddInterfacePrefixes
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 211
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Add interface prefixes", "Interface Options")]

      public bool AddInterfacePrefixes { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Add interface prefixes", "Interface Options")>

      Public Property AddInterfacePrefixes As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.AddInterfacePrefixes*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Add interface prefixes
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreLocation
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreLocation
  id: CertificateStoreLocation
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CertificateStoreLocation
  nameWithType: ClusterNodeOptions.CertificateStoreLocation
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreLocation
  type: Property
  source:
    id: CertificateStoreLocation
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 214
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The certificate store location name.", "Certificate Options")]

      public string CertificateStoreLocation { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <ArgDescription("The certificate store location name.", "Certificate Options")>

      Public Property CertificateStoreLocation As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreLocation*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The certificate store location name.
    - type: System.String
      value: Certificate Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreName
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreName
  id: CertificateStoreName
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CertificateStoreName
  nameWithType: ClusterNodeOptions.CertificateStoreName
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreName
  type: Property
  source:
    id: CertificateStoreName
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 217
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The certificate store name.", "Certificate Options")]

      public string CertificateStoreName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <ArgDescription("The certificate store name.", "Certificate Options")>

      Public Property CertificateStoreName As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreName*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The certificate store name.
    - type: System.String
      value: Certificate Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateSubjectName
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CertificateSubjectName
  id: CertificateSubjectName
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CertificateSubjectName
  nameWithType: ClusterNodeOptions.CertificateSubjectName
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateSubjectName
  type: Property
  source:
    id: CertificateSubjectName
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 220
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The certificate subject name.", "Certificate Options")]

      public string CertificateSubjectName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <ArgDescription("The certificate subject name.", "Certificate Options")>

      Public Property CertificateSubjectName As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.CertificateSubjectName*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The certificate subject name.
    - type: System.String
      value: Certificate Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateThumbprint
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CertificateThumbprint
  id: CertificateThumbprint
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CertificateThumbprint
  nameWithType: ClusterNodeOptions.CertificateThumbprint
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateThumbprint
  type: Property
  source:
    id: CertificateThumbprint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 223
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The certificate fingerprint/thumbprint.", "Certificate Options")]

      public string CertificateThumbprint { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <ArgDescription("The certificate fingerprint/thumbprint.", "Certificate Options")>

      Public Property CertificateThumbprint As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.CertificateThumbprint*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The certificate fingerprint/thumbprint.
    - type: System.String
      value: Certificate Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateFile
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CertificateFile
  id: CertificateFile
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CertificateFile
  nameWithType: ClusterNodeOptions.CertificateFile
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateFile
  type: Property
  source:
    id: CertificateFile
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 226
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The path to certificate file.", "Certificate Options")]

      public string CertificateFile { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <ArgDescription("The path to certificate file.", "Certificate Options")>

      Public Property CertificateFile As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.CertificateFile*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The path to certificate file.
    - type: System.String
      value: Certificate Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificatePassword
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CertificatePassword
  id: CertificatePassword
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CertificatePassword
  nameWithType: ClusterNodeOptions.CertificatePassword
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificatePassword
  type: Property
  source:
    id: CertificatePassword
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 229
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The password to certificate in file.", "Certificate Options")]

      public string CertificatePassword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <ArgDescription("The password to certificate in file.", "Certificate Options")>

      Public Property CertificatePassword As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.CertificatePassword*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The password to certificate in file.
    - type: System.String
      value: Certificate Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.UseInternalSsl
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.UseInternalSsl
  id: UseInternalSsl
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: UseInternalSsl
  nameWithType: ClusterNodeOptions.UseInternalSsl
  fullName: EventStore.ClusterNode.ClusterNodeOptions.UseInternalSsl
  type: Property
  source:
    id: UseInternalSsl
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 232
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Whether to use secure internal communication.", "Interface Options")]

      public bool UseInternalSsl { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Whether to use secure internal communication.", "Interface Options")>

      Public Property UseInternalSsl As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.UseInternalSsl*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Whether to use secure internal communication.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.DisableInsecureTCP
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.DisableInsecureTCP
  id: DisableInsecureTCP
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: DisableInsecureTCP
  nameWithType: ClusterNodeOptions.DisableInsecureTCP
  fullName: EventStore.ClusterNode.ClusterNodeOptions.DisableInsecureTCP
  type: Property
  source:
    id: DisableInsecureTCP
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 235
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Whether to disable insecure TCP communication", "Interface Options")]

      public bool DisableInsecureTCP { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Whether to disable insecure TCP communication", "Interface Options")>

      Public Property DisableInsecureTCP As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.DisableInsecureTCP*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Whether to disable insecure TCP communication
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.SslTargetHost
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.SslTargetHost
  id: SslTargetHost
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: SslTargetHost
  nameWithType: ClusterNodeOptions.SslTargetHost
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SslTargetHost
  type: Property
  source:
    id: SslTargetHost
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 238
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Target host of server's SSL certificate.", "Interface Options")]

      public string SslTargetHost { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <ArgDescription("Target host of server's SSL certificate.", "Interface Options")>

      Public Property SslTargetHost As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.SslTargetHost*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Target host of server's SSL certificate.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.SslValidateServer
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.SslValidateServer
  id: SslValidateServer
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: SslValidateServer
  nameWithType: ClusterNodeOptions.SslValidateServer
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SslValidateServer
  type: Property
  source:
    id: SslValidateServer
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 241
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Whether to validate that server's certificate is trusted.", "Interface Options")]

      public bool SslValidateServer { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Whether to validate that server's certificate is trusted.", "Interface Options")>

      Public Property SslValidateServer As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.SslValidateServer*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Whether to validate that server's certificate is trusted.
    - type: System.String
      value: Interface Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationType
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.AuthenticationType
  id: AuthenticationType
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: AuthenticationType
  nameWithType: ClusterNodeOptions.AuthenticationType
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationType
  type: Property
  source:
    id: AuthenticationType
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 244
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The type of authentication to use.", "Authentication Options")]

      public string AuthenticationType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <ArgDescription("The type of authentication to use.", "Authentication Options")>

      Public Property AuthenticationType As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationType*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The type of authentication to use.
    - type: System.String
      value: Authentication Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationConfig
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.AuthenticationConfig
  id: AuthenticationConfig
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: AuthenticationConfig
  nameWithType: ClusterNodeOptions.AuthenticationConfig
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationConfig
  type: Property
  source:
    id: AuthenticationConfig
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 247
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Path to the configuration file for authentication configuration (if applicable).", "Authentication Options")]

      public string AuthenticationConfig { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <ArgDescription("Path to the configuration file for authentication configuration (if applicable).", "Authentication Options")>

      Public Property AuthenticationConfig As String
  overload: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationConfig*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Path to the configuration file for authentication configuration (if applicable).
    - type: System.String
      value: Authentication Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.PrepareTimeoutMs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.PrepareTimeoutMs
  id: PrepareTimeoutMs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: PrepareTimeoutMs
  nameWithType: ClusterNodeOptions.PrepareTimeoutMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.PrepareTimeoutMs
  type: Property
  source:
    id: PrepareTimeoutMs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 250
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Prepare timeout (in milliseconds).", "Database Options")]

      public int PrepareTimeoutMs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Prepare timeout (in milliseconds).", "Database Options")>

      Public Property PrepareTimeoutMs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.PrepareTimeoutMs*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Prepare timeout (in milliseconds).
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.CommitTimeoutMs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.CommitTimeoutMs
  id: CommitTimeoutMs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: CommitTimeoutMs
  nameWithType: ClusterNodeOptions.CommitTimeoutMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CommitTimeoutMs
  type: Property
  source:
    id: CommitTimeoutMs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 253
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Commit timeout (in milliseconds).", "Database Options")]

      public int CommitTimeoutMs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Commit timeout (in milliseconds).", "Database Options")>

      Public Property CommitTimeoutMs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.CommitTimeoutMs*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Commit timeout (in milliseconds).
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.UnsafeDisableFlushToDisk
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.UnsafeDisableFlushToDisk
  id: UnsafeDisableFlushToDisk
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: UnsafeDisableFlushToDisk
  nameWithType: ClusterNodeOptions.UnsafeDisableFlushToDisk
  fullName: EventStore.ClusterNode.ClusterNodeOptions.UnsafeDisableFlushToDisk
  type: Property
  source:
    id: UnsafeDisableFlushToDisk
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 256
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Disable flushing to disk.  (UNSAFE: on power off)", "Database Options")]

      public bool UnsafeDisableFlushToDisk { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Disable flushing to disk.  (UNSAFE: on power off)", "Database Options")>

      Public Property UnsafeDisableFlushToDisk As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.UnsafeDisableFlushToDisk*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: 'Disable flushing to disk.  (UNSAFE: on power off)'
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.BetterOrdering
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.BetterOrdering
  id: BetterOrdering
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: BetterOrdering
  nameWithType: ClusterNodeOptions.BetterOrdering
  fullName: EventStore.ClusterNode.ClusterNodeOptions.BetterOrdering
  type: Property
  source:
    id: BetterOrdering
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 259
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Enable Queue affinity on reads during write process to try to get better ordering.", "Database Options")]

      public bool BetterOrdering { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Enable Queue affinity on reads during write process to try to get better ordering.", "Database Options")>

      Public Property BetterOrdering As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.BetterOrdering*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Enable Queue affinity on reads during write process to try to get better ordering.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.UnsafeIgnoreHardDelete
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.UnsafeIgnoreHardDelete
  id: UnsafeIgnoreHardDelete
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: UnsafeIgnoreHardDelete
  nameWithType: ClusterNodeOptions.UnsafeIgnoreHardDelete
  fullName: EventStore.ClusterNode.ClusterNodeOptions.UnsafeIgnoreHardDelete
  type: Property
  source:
    id: UnsafeIgnoreHardDelete
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 262
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Disables Hard Deletes (UNSAFE: use to remove hard deletes)", "Database Options")]

      public bool UnsafeIgnoreHardDelete { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Disables Hard Deletes (UNSAFE: use to remove hard deletes)", "Database Options")>

      Public Property UnsafeIgnoreHardDelete As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.UnsafeIgnoreHardDelete*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: 'Disables Hard Deletes (UNSAFE: use to remove hard deletes)'
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexVerify
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.SkipIndexVerify
  id: SkipIndexVerify
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: SkipIndexVerify
  nameWithType: ClusterNodeOptions.SkipIndexVerify
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexVerify
  type: Property
  source:
    id: SkipIndexVerify
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 265
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Bypasses the checking of file hashes of indexes during startup and after index merges (allows for faster startup and less disk pressure after merges).", "Database Options")]

      public bool SkipIndexVerify { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Bypasses the checking of file hashes of indexes during startup and after index merges (allows for faster startup and less disk pressure after merges).", "Database Options")>

      Public Property SkipIndexVerify As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexVerify*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Bypasses the checking of file hashes of indexes during startup and after index merges (allows for faster startup and less disk pressure after merges).
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.IndexCacheDepth
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.IndexCacheDepth
  id: IndexCacheDepth
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: IndexCacheDepth
  nameWithType: ClusterNodeOptions.IndexCacheDepth
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IndexCacheDepth
  type: Property
  source:
    id: IndexCacheDepth
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 268
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Sets the depth to cache for the mid point cache in index.", "Database Options")]

      public int IndexCacheDepth { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Sets the depth to cache for the mid point cache in index.", "Database Options")>

      Public Property IndexCacheDepth As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.IndexCacheDepth*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Sets the depth to cache for the mid point cache in index.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.OptimizeIndexMerge
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.OptimizeIndexMerge
  id: OptimizeIndexMerge
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: OptimizeIndexMerge
  nameWithType: ClusterNodeOptions.OptimizeIndexMerge
  fullName: EventStore.ClusterNode.ClusterNodeOptions.OptimizeIndexMerge
  type: Property
  source:
    id: OptimizeIndexMerge
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 271
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Makes index merges faster and reduces disk pressure during merges.", "Database Options")]

      public bool OptimizeIndexMerge { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Makes index merges faster and reduces disk pressure during merges.", "Database Options")>

      Public Property OptimizeIndexMerge As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.OptimizeIndexMerge*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Makes index merges faster and reduces disk pressure during merges.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipIntervalMs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.GossipIntervalMs
  id: GossipIntervalMs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: GossipIntervalMs
  nameWithType: ClusterNodeOptions.GossipIntervalMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipIntervalMs
  type: Property
  source:
    id: GossipIntervalMs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 274
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The interval, in ms, nodes should try to gossip with each other.", "Cluster Options")]

      public int GossipIntervalMs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The interval, in ms, nodes should try to gossip with each other.", "Cluster Options")>

      Public Property GossipIntervalMs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.GossipIntervalMs*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The interval, in ms, nodes should try to gossip with each other.
    - type: System.String
      value: Cluster Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipAllowedDifferenceMs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.GossipAllowedDifferenceMs
  id: GossipAllowedDifferenceMs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: GossipAllowedDifferenceMs
  nameWithType: ClusterNodeOptions.GossipAllowedDifferenceMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipAllowedDifferenceMs
  type: Property
  source:
    id: GossipAllowedDifferenceMs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 277
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The amount of drift, in ms, between clocks on nodes allowed before gossip is rejected.", "Cluster Options")]

      public int GossipAllowedDifferenceMs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The amount of drift, in ms, between clocks on nodes allowed before gossip is rejected.", "Cluster Options")>

      Public Property GossipAllowedDifferenceMs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.GossipAllowedDifferenceMs*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The amount of drift, in ms, between clocks on nodes allowed before gossip is rejected.
    - type: System.String
      value: Cluster Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipTimeoutMs
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.GossipTimeoutMs
  id: GossipTimeoutMs
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: GossipTimeoutMs
  nameWithType: ClusterNodeOptions.GossipTimeoutMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipTimeoutMs
  type: Property
  source:
    id: GossipTimeoutMs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 280
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("The timeout, in ms, on gossip to another node.", "Cluster Options")]

      public int GossipTimeoutMs { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("The timeout, in ms, on gossip to another node.", "Cluster Options")>

      Public Property GossipTimeoutMs As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.GossipTimeoutMs*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: The timeout, in ms, on gossip to another node.
    - type: System.String
      value: Cluster Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.EnableHistograms
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.EnableHistograms
  id: EnableHistograms
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: EnableHistograms
  nameWithType: ClusterNodeOptions.EnableHistograms
  fullName: EventStore.ClusterNode.ClusterNodeOptions.EnableHistograms
  type: Property
  source:
    id: EnableHistograms
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 283
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Enables the tracking of various histograms in the backend, typically only used for debugging etc", "Application Options")]

      public bool EnableHistograms { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Enables the tracking of various histograms in the backend, typically only used for debugging etc", "Application Options")>

      Public Property EnableHistograms As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.EnableHistograms*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Enables the tracking of various histograms in the backend, typically only used for debugging etc
    - type: System.String
      value: Application Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.LogHttpRequests
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.LogHttpRequests
  id: LogHttpRequests
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: LogHttpRequests
  nameWithType: ClusterNodeOptions.LogHttpRequests
  fullName: EventStore.ClusterNode.ClusterNodeOptions.LogHttpRequests
  type: Property
  source:
    id: LogHttpRequests
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 286
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Log Http Requests and Responses before processing them.", "Application Options")]

      public bool LogHttpRequests { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Log Http Requests and Responses before processing them.", "Application Options")>

      Public Property LogHttpRequests As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.LogHttpRequests*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Log Http Requests and Responses before processing them.
    - type: System.String
      value: Application Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.AlwaysKeepScavenged
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.AlwaysKeepScavenged
  id: AlwaysKeepScavenged
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: AlwaysKeepScavenged
  nameWithType: ClusterNodeOptions.AlwaysKeepScavenged
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AlwaysKeepScavenged
  type: Property
  source:
    id: AlwaysKeepScavenged
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 289
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Always keeps the newer chunks from a scavenge operation.", "Database Options")]

      public bool AlwaysKeepScavenged { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Always keeps the newer chunks from a scavenge operation.", "Database Options")>

      Public Property AlwaysKeepScavenged As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.AlwaysKeepScavenged*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Always keeps the newer chunks from a scavenge operation.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexScanOnReads
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.SkipIndexScanOnReads
  id: SkipIndexScanOnReads
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: SkipIndexScanOnReads
  nameWithType: ClusterNodeOptions.SkipIndexScanOnReads
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexScanOnReads
  type: Property
  source:
    id: SkipIndexScanOnReads
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 292
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Skip Index Scan on Reads. This skips the index scan which was used to stop reading duplicates.", "Application Options")]

      public bool SkipIndexScanOnReads { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Skip Index Scan on Reads. This skips the index scan which was used to stop reading duplicates.", "Application Options")>

      Public Property SkipIndexScanOnReads As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexScanOnReads*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Skip Index Scan on Reads. This skips the index scan which was used to stop reading duplicates.
    - type: System.String
      value: Application Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.ReduceFileCachePressure
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.ReduceFileCachePressure
  id: ReduceFileCachePressure
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ReduceFileCachePressure
  nameWithType: ClusterNodeOptions.ReduceFileCachePressure
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ReduceFileCachePressure
  type: Property
  source:
    id: ReduceFileCachePressure
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 295
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Change the way the DB files are opened to reduce their stickiness in the system file cache.", "Database Options")]

      public bool ReduceFileCachePressure { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Change the way the DB files are opened to reduce their stickiness in the system file cache.", "Database Options")>

      Public Property ReduceFileCachePressure As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.ReduceFileCachePressure*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Change the way the DB files are opened to reduce their stickiness in the system file cache.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.InitializationThreads
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.InitializationThreads
  id: InitializationThreads
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: InitializationThreads
  nameWithType: ClusterNodeOptions.InitializationThreads
  fullName: EventStore.ClusterNode.ClusterNodeOptions.InitializationThreads
  type: Property
  source:
    id: InitializationThreads
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 298
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Number of threads to be used to initialize the database. Will be capped at host processor count.", "Database Options")]

      public int InitializationThreads { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("Number of threads to be used to initialize the database. Will be capped at host processor count.", "Database Options")>

      Public Property InitializationThreads As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.InitializationThreads*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Number of threads to be used to initialize the database. Will be capped at host processor count.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.StructuredLog
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.StructuredLog
  id: StructuredLog
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: StructuredLog
  nameWithType: ClusterNodeOptions.StructuredLog
  fullName: EventStore.ClusterNode.ClusterNodeOptions.StructuredLog
  type: Property
  source:
    id: StructuredLog
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 301
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("Enable structured logging.", "Database Options")]

      public bool StructuredLog { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <ArgDescription("Enable structured logging.", "Database Options")>

      Public Property StructuredLog As Boolean
  overload: EventStore.ClusterNode.ClusterNodeOptions.StructuredLog*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Enable structured logging.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.MaxAutoMergeIndexLevel
  commentId: P:EventStore.ClusterNode.ClusterNodeOptions.MaxAutoMergeIndexLevel
  id: MaxAutoMergeIndexLevel
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: MaxAutoMergeIndexLevel
  nameWithType: ClusterNodeOptions.MaxAutoMergeIndexLevel
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MaxAutoMergeIndexLevel
  type: Property
  source:
    id: MaxAutoMergeIndexLevel
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 304
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: >-
      [ArgDescription("During large Index Merge operations, writes may be slowed down. Set this to the maximum index file level for which automatic merges should happen.  Merging indexes above this level should be done manually.", "Database Options")]

      public int MaxAutoMergeIndexLevel { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ArgDescription("During large Index Merge operations, writes may be slowed down. Set this to the maximum index file level for which automatic merges should happen.  Merging indexes above this level should be done manually.", "Database Options")>

      Public Property MaxAutoMergeIndexLevel As Integer
  overload: EventStore.ClusterNode.ClusterNodeOptions.MaxAutoMergeIndexLevel*
  attributes:
  - type: EventStore.Rags.ArgDescriptionAttribute
    ctor: EventStore.Rags.ArgDescriptionAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: During large Index Merge operations, writes may be slowed down. Set this to the maximum index file level for which automatic merges should happen.  Merging indexes above this level should be done manually.
    - type: System.String
      value: Database Options
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.ClusterNode.ClusterNodeOptions.#ctor
  commentId: M:EventStore.ClusterNode.ClusterNodeOptions.#ctor
  id: '#ctor'
  parent: EventStore.ClusterNode.ClusterNodeOptions
  langs:
  - csharp
  - vb
  name: ClusterNodeOptions()
  nameWithType: ClusterNodeOptions.ClusterNodeOptions()
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ClusterNodeOptions()
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.ClusterNode/ClusterNodeOptions.cs
    startLine: 307
  assemblies:
  - EventStore.ClusterNode
  namespace: EventStore.ClusterNode
  syntax:
    content: public ClusterNodeOptions()
    content.vb: Public Sub New
  overload: EventStore.ClusterNode.ClusterNodeOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.ClusterNode
  commentId: N:EventStore.ClusterNode
  name: EventStore.ClusterNode
  nameWithType: EventStore.ClusterNode
  fullName: EventStore.ClusterNode
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Common.Options.IOptions
  commentId: T:EventStore.Common.Options.IOptions
  parent: EventStore.Common.Options
  name: IOptions
  nameWithType: IOptions
  fullName: EventStore.Common.Options.IOptions
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClusterNode.ClusterNodeOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ClusterNodeOptions>()
  nameWithType: ProtobufExtensions.Serialize<ClusterNodeOptions>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.ClusterNode.ClusterNodeOptions>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ClusterNodeOptions)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.ClusterNode.ClusterNodeOptions)()
  name.vb: Serialize(Of ClusterNodeOptions)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ClusterNodeOptions>
    nameWithType: ProtobufExtensions.Serialize<ClusterNodeOptions>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.ClusterNode.ClusterNodeOptions>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ClusterNodeOptions)
    nameWithType: ProtobufExtensions.Serialize(Of ClusterNodeOptions)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.ClusterNode.ClusterNodeOptions)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.ClusterNode.ClusterNodeOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ClusterNodeOptions>()
  nameWithType: ProtobufExtensions.SerializeToArray<ClusterNodeOptions>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.ClusterNode.ClusterNodeOptions>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ClusterNodeOptions)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.ClusterNode.ClusterNodeOptions)()
  name.vb: SerializeToArray(Of ClusterNodeOptions)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ClusterNodeOptions>
    nameWithType: ProtobufExtensions.SerializeToArray<ClusterNodeOptions>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.ClusterNode.ClusterNodeOptions>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ClusterNodeOptions)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ClusterNodeOptions)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.ClusterNode.ClusterNodeOptions)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Options
  commentId: N:EventStore.Common.Options
  name: EventStore.Common.Options
  nameWithType: EventStore.Common.Options
  fullName: EventStore.Common.Options
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.ClusterNode.ClusterNodeOptions.Help*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Help
  name: Help
  nameWithType: ClusterNodeOptions.Help
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Help
- uid: EventStore.Common.Options.IOptions.Help
  commentId: P:EventStore.Common.Options.IOptions.Help
  parent: EventStore.Common.Options.IOptions
  name: Help
  nameWithType: IOptions.Help
  fullName: EventStore.Common.Options.IOptions.Help
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.ClusterNode.ClusterNodeOptions.Version*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Version
  name: Version
  nameWithType: ClusterNodeOptions.Version
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Version
- uid: EventStore.Common.Options.IOptions.Version
  commentId: P:EventStore.Common.Options.IOptions.Version
  parent: EventStore.Common.Options.IOptions
  name: Version
  nameWithType: IOptions.Version
  fullName: EventStore.Common.Options.IOptions.Version
- uid: EventStore.ClusterNode.ClusterNodeOptions.Log*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Log
  name: Log
  nameWithType: ClusterNodeOptions.Log
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Log
- uid: EventStore.Common.Options.IOptions.Log
  commentId: P:EventStore.Common.Options.IOptions.Log
  parent: EventStore.Common.Options.IOptions
  name: Log
  nameWithType: IOptions.Log
  fullName: EventStore.Common.Options.IOptions.Log
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.ClusterNode.ClusterNodeOptions.Config*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Config
  name: Config
  nameWithType: ClusterNodeOptions.Config
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Config
- uid: EventStore.Common.Options.IOptions.Config
  commentId: P:EventStore.Common.Options.IOptions.Config
  parent: EventStore.Common.Options.IOptions
  name: Config
  nameWithType: IOptions.Config
  fullName: EventStore.Common.Options.IOptions.Config
- uid: EventStore.ClusterNode.ClusterNodeOptions.Defines*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Defines
  name: Defines
  nameWithType: ClusterNodeOptions.Defines
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Defines
- uid: EventStore.Common.Options.IOptions.Defines
  commentId: P:EventStore.Common.Options.IOptions.Defines
  parent: EventStore.Common.Options.IOptions
  name: Defines
  nameWithType: IOptions.Defines
  fullName: EventStore.Common.Options.IOptions.Defines
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.ClusterNode.ClusterNodeOptions.WhatIf*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.WhatIf
  name: WhatIf
  nameWithType: ClusterNodeOptions.WhatIf
  fullName: EventStore.ClusterNode.ClusterNodeOptions.WhatIf
- uid: EventStore.Common.Options.IOptions.WhatIf
  commentId: P:EventStore.Common.Options.IOptions.WhatIf
  parent: EventStore.Common.Options.IOptions
  name: WhatIf
  nameWithType: IOptions.WhatIf
  fullName: EventStore.Common.Options.IOptions.WhatIf
- uid: EventStore.ClusterNode.ClusterNodeOptions.StartStandardProjections*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.StartStandardProjections
  name: StartStandardProjections
  nameWithType: ClusterNodeOptions.StartStandardProjections
  fullName: EventStore.ClusterNode.ClusterNodeOptions.StartStandardProjections
- uid: EventStore.ClusterNode.ClusterNodeOptions.DisableHTTPCaching*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.DisableHTTPCaching
  name: DisableHTTPCaching
  nameWithType: ClusterNodeOptions.DisableHTTPCaching
  fullName: EventStore.ClusterNode.ClusterNodeOptions.DisableHTTPCaching
- uid: EventStore.ClusterNode.ClusterNodeOptions.MonoMinThreadpoolSize*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.MonoMinThreadpoolSize
  name: MonoMinThreadpoolSize
  nameWithType: ClusterNodeOptions.MonoMinThreadpoolSize
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MonoMinThreadpoolSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntIp*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntIp
  name: IntIp
  nameWithType: ClusterNodeOptions.IntIp
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntIp
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtIp*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtIp
  name: ExtIp
  nameWithType: ClusterNodeOptions.ExtIp
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtIp
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPort*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntHttpPort
  name: IntHttpPort
  nameWithType: ClusterNodeOptions.IntHttpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPort
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPort*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPort
  name: ExtHttpPort
  nameWithType: ClusterNodeOptions.ExtHttpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPort
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPort*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntTcpPort
  name: IntTcpPort
  nameWithType: ClusterNodeOptions.IntTcpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPort
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPort*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPort
  name: IntSecureTcpPort
  nameWithType: ClusterNodeOptions.IntSecureTcpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPort
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPort*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPort
  name: ExtTcpPort
  nameWithType: ClusterNodeOptions.ExtTcpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPort
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs
  name: ExtSecureTcpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPortAdvertiseAs
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPort*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPort
  name: ExtSecureTcpPort
  nameWithType: ClusterNodeOptions.ExtSecureTcpPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtSecureTcpPort
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtIpAdvertiseAs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtIpAdvertiseAs
  name: ExtIpAdvertiseAs
  nameWithType: ClusterNodeOptions.ExtIpAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtIpAdvertiseAs
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPortAdvertiseAs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPortAdvertiseAs
  name: ExtTcpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.ExtTcpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpPortAdvertiseAs
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPortAdvertiseAs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPortAdvertiseAs
  name: ExtHttpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.ExtHttpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPortAdvertiseAs
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntIpAdvertiseAs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntIpAdvertiseAs
  name: IntIpAdvertiseAs
  nameWithType: ClusterNodeOptions.IntIpAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntIpAdvertiseAs
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPortAdvertiseAs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPortAdvertiseAs
  name: IntSecureTcpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.IntSecureTcpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntSecureTcpPortAdvertiseAs
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPortAdvertiseAs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntTcpPortAdvertiseAs
  name: IntTcpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.IntTcpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntTcpPortAdvertiseAs
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPortAdvertiseAs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntHttpPortAdvertiseAs
  name: IntHttpPortAdvertiseAs
  nameWithType: ClusterNodeOptions.IntHttpPortAdvertiseAs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPortAdvertiseAs
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatTimeout*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatTimeout
  name: IntTcpHeartbeatTimeout
  nameWithType: ClusterNodeOptions.IntTcpHeartbeatTimeout
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatTimeout
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatTimeout*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatTimeout
  name: ExtTcpHeartbeatTimeout
  nameWithType: ClusterNodeOptions.ExtTcpHeartbeatTimeout
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatTimeout
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatInterval*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatInterval
  name: IntTcpHeartbeatInterval
  nameWithType: ClusterNodeOptions.IntTcpHeartbeatInterval
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntTcpHeartbeatInterval
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatInterval*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatInterval
  name: ExtTcpHeartbeatInterval
  nameWithType: ClusterNodeOptions.ExtTcpHeartbeatInterval
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtTcpHeartbeatInterval
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipOnSingleNode*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.GossipOnSingleNode
  name: GossipOnSingleNode
  nameWithType: ClusterNodeOptions.GossipOnSingleNode
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipOnSingleNode
- uid: EventStore.ClusterNode.ClusterNodeOptions.ConnectionPendingSendBytesThreshold*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ConnectionPendingSendBytesThreshold
  name: ConnectionPendingSendBytesThreshold
  nameWithType: ClusterNodeOptions.ConnectionPendingSendBytesThreshold
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ConnectionPendingSendBytesThreshold
- uid: EventStore.ClusterNode.ClusterNodeOptions.Force*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Force
  name: Force
  nameWithType: ClusterNodeOptions.Force
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Force
- uid: EventStore.Common.Options.IOptions.Force
  commentId: P:EventStore.Common.Options.IOptions.Force
  parent: EventStore.Common.Options.IOptions
  name: Force
  nameWithType: IOptions.Force
  fullName: EventStore.Common.Options.IOptions.Force
- uid: EventStore.ClusterNode.ClusterNodeOptions.ClusterSize*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ClusterSize
  name: ClusterSize
  nameWithType: ClusterNodeOptions.ClusterSize
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ClusterSize
- uid: EventStore.ClusterNode.ClusterNodeOptions.NodePriority*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.NodePriority
  name: NodePriority
  nameWithType: ClusterNodeOptions.NodePriority
  fullName: EventStore.ClusterNode.ClusterNodeOptions.NodePriority
- uid: EventStore.ClusterNode.ClusterNodeOptions.MinFlushDelayMs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.MinFlushDelayMs
  name: MinFlushDelayMs
  nameWithType: ClusterNodeOptions.MinFlushDelayMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MinFlushDelayMs
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: EventStore.ClusterNode.ClusterNodeOptions.CommitCount*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CommitCount
  name: CommitCount
  nameWithType: ClusterNodeOptions.CommitCount
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CommitCount
- uid: EventStore.ClusterNode.ClusterNodeOptions.PrepareCount*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.PrepareCount
  name: PrepareCount
  nameWithType: ClusterNodeOptions.PrepareCount
  fullName: EventStore.ClusterNode.ClusterNodeOptions.PrepareCount
- uid: EventStore.ClusterNode.ClusterNodeOptions.AdminOnExt*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.AdminOnExt
  name: AdminOnExt
  nameWithType: ClusterNodeOptions.AdminOnExt
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AdminOnExt
- uid: EventStore.ClusterNode.ClusterNodeOptions.StatsOnExt*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.StatsOnExt
  name: StatsOnExt
  nameWithType: ClusterNodeOptions.StatsOnExt
  fullName: EventStore.ClusterNode.ClusterNodeOptions.StatsOnExt
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipOnExt*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.GossipOnExt
  name: GossipOnExt
  nameWithType: ClusterNodeOptions.GossipOnExt
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipOnExt
- uid: EventStore.ClusterNode.ClusterNodeOptions.DisableScavengeMerging*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.DisableScavengeMerging
  name: DisableScavengeMerging
  nameWithType: ClusterNodeOptions.DisableScavengeMerging
  fullName: EventStore.ClusterNode.ClusterNodeOptions.DisableScavengeMerging
- uid: EventStore.ClusterNode.ClusterNodeOptions.ScavengeHistoryMaxAge*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ScavengeHistoryMaxAge
  name: ScavengeHistoryMaxAge
  nameWithType: ClusterNodeOptions.ScavengeHistoryMaxAge
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ScavengeHistoryMaxAge
- uid: EventStore.ClusterNode.ClusterNodeOptions.DiscoverViaDns*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.DiscoverViaDns
  name: DiscoverViaDns
  nameWithType: ClusterNodeOptions.DiscoverViaDns
  fullName: EventStore.ClusterNode.ClusterNodeOptions.DiscoverViaDns
- uid: EventStore.ClusterNode.ClusterNodeOptions.ClusterDns*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ClusterDns
  name: ClusterDns
  nameWithType: ClusterNodeOptions.ClusterDns
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ClusterDns
- uid: EventStore.ClusterNode.ClusterNodeOptions.ClusterGossipPort*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ClusterGossipPort
  name: ClusterGossipPort
  nameWithType: ClusterNodeOptions.ClusterGossipPort
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ClusterGossipPort
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipSeed*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.GossipSeed
  name: GossipSeed
  nameWithType: ClusterNodeOptions.GossipSeed
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipSeed
- uid: System.Net.IPEndPoint[]
  isExternal: true
  name: IPEndPoint[]
  nameWithType: IPEndPoint[]
  fullName: System.Net.IPEndPoint[]
  nameWithType.vb: IPEndPoint()
  fullName.vb: System.Net.IPEndPoint()
  name.vb: IPEndPoint()
  spec.csharp:
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.ClusterNode.ClusterNodeOptions.StatsPeriodSec*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.StatsPeriodSec
  name: StatsPeriodSec
  nameWithType: ClusterNodeOptions.StatsPeriodSec
  fullName: EventStore.ClusterNode.ClusterNodeOptions.StatsPeriodSec
- uid: EventStore.ClusterNode.ClusterNodeOptions.CachedChunks*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CachedChunks
  name: CachedChunks
  nameWithType: ClusterNodeOptions.CachedChunks
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CachedChunks
- uid: EventStore.ClusterNode.ClusterNodeOptions.ReaderThreadsCount*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ReaderThreadsCount
  name: ReaderThreadsCount
  nameWithType: ClusterNodeOptions.ReaderThreadsCount
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ReaderThreadsCount
- uid: EventStore.ClusterNode.ClusterNodeOptions.ChunksCacheSize*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ChunksCacheSize
  name: ChunksCacheSize
  nameWithType: ClusterNodeOptions.ChunksCacheSize
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ChunksCacheSize
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.ClusterNode.ClusterNodeOptions.MaxMemTableSize*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.MaxMemTableSize
  name: MaxMemTableSize
  nameWithType: ClusterNodeOptions.MaxMemTableSize
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MaxMemTableSize
- uid: EventStore.ClusterNode.ClusterNodeOptions.HashCollisionReadLimit*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.HashCollisionReadLimit
  name: HashCollisionReadLimit
  nameWithType: ClusterNodeOptions.HashCollisionReadLimit
  fullName: EventStore.ClusterNode.ClusterNodeOptions.HashCollisionReadLimit
- uid: EventStore.ClusterNode.ClusterNodeOptions.Db*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Db
  name: Db
  nameWithType: ClusterNodeOptions.Db
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Db
- uid: EventStore.ClusterNode.ClusterNodeOptions.Index*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Index
  name: Index
  nameWithType: ClusterNodeOptions.Index
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Index
- uid: EventStore.ClusterNode.ClusterNodeOptions.MemDb*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.MemDb
  name: MemDb
  nameWithType: ClusterNodeOptions.MemDb
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MemDb
- uid: EventStore.ClusterNode.ClusterNodeOptions.SkipDbVerify*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.SkipDbVerify
  name: SkipDbVerify
  nameWithType: ClusterNodeOptions.SkipDbVerify
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SkipDbVerify
- uid: EventStore.ClusterNode.ClusterNodeOptions.WriteThrough*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.WriteThrough
  name: WriteThrough
  nameWithType: ClusterNodeOptions.WriteThrough
  fullName: EventStore.ClusterNode.ClusterNodeOptions.WriteThrough
- uid: EventStore.ClusterNode.ClusterNodeOptions.Unbuffered*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.Unbuffered
  name: Unbuffered
  nameWithType: ClusterNodeOptions.Unbuffered
  fullName: EventStore.ClusterNode.ClusterNodeOptions.Unbuffered
- uid: EventStore.ClusterNode.ClusterNodeOptions.ChunkInitialReaderCount*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ChunkInitialReaderCount
  name: ChunkInitialReaderCount
  nameWithType: ClusterNodeOptions.ChunkInitialReaderCount
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ChunkInitialReaderCount
- uid: EventStore.ClusterNode.ClusterNodeOptions.RunProjections*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.RunProjections
  name: RunProjections
  nameWithType: ClusterNodeOptions.RunProjections
  fullName: EventStore.ClusterNode.ClusterNodeOptions.RunProjections
- uid: EventStore.Common.Options.ProjectionType
  commentId: T:EventStore.Common.Options.ProjectionType
  parent: EventStore.Common.Options
  name: ProjectionType
  nameWithType: ProjectionType
  fullName: EventStore.Common.Options.ProjectionType
- uid: EventStore.ClusterNode.ClusterNodeOptions.ProjectionThreads*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ProjectionThreads
  name: ProjectionThreads
  nameWithType: ClusterNodeOptions.ProjectionThreads
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ProjectionThreads
- uid: EventStore.ClusterNode.ClusterNodeOptions.WorkerThreads*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.WorkerThreads
  name: WorkerThreads
  nameWithType: ClusterNodeOptions.WorkerThreads
  fullName: EventStore.ClusterNode.ClusterNodeOptions.WorkerThreads
- uid: EventStore.ClusterNode.ClusterNodeOptions.ProjectionsQueryExpiry*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ProjectionsQueryExpiry
  name: ProjectionsQueryExpiry
  nameWithType: ClusterNodeOptions.ProjectionsQueryExpiry
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ProjectionsQueryExpiry
- uid: EventStore.ClusterNode.ClusterNodeOptions.FaultOutOfOrderProjections*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.FaultOutOfOrderProjections
  name: FaultOutOfOrderProjections
  nameWithType: ClusterNodeOptions.FaultOutOfOrderProjections
  fullName: EventStore.ClusterNode.ClusterNodeOptions.FaultOutOfOrderProjections
- uid: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPrefixes*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IntHttpPrefixes
  name: IntHttpPrefixes
  nameWithType: ClusterNodeOptions.IntHttpPrefixes
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IntHttpPrefixes
- uid: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPrefixes*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPrefixes
  name: ExtHttpPrefixes
  nameWithType: ClusterNodeOptions.ExtHttpPrefixes
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ExtHttpPrefixes
- uid: EventStore.ClusterNode.ClusterNodeOptions.EnableTrustedAuth*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.EnableTrustedAuth
  name: EnableTrustedAuth
  nameWithType: ClusterNodeOptions.EnableTrustedAuth
  fullName: EventStore.ClusterNode.ClusterNodeOptions.EnableTrustedAuth
- uid: EventStore.ClusterNode.ClusterNodeOptions.AddInterfacePrefixes*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.AddInterfacePrefixes
  name: AddInterfacePrefixes
  nameWithType: ClusterNodeOptions.AddInterfacePrefixes
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AddInterfacePrefixes
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreLocation*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreLocation
  name: CertificateStoreLocation
  nameWithType: ClusterNodeOptions.CertificateStoreLocation
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreLocation
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreName*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreName
  name: CertificateStoreName
  nameWithType: ClusterNodeOptions.CertificateStoreName
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateStoreName
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateSubjectName*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CertificateSubjectName
  name: CertificateSubjectName
  nameWithType: ClusterNodeOptions.CertificateSubjectName
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateSubjectName
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateThumbprint*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CertificateThumbprint
  name: CertificateThumbprint
  nameWithType: ClusterNodeOptions.CertificateThumbprint
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateThumbprint
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificateFile*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CertificateFile
  name: CertificateFile
  nameWithType: ClusterNodeOptions.CertificateFile
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificateFile
- uid: EventStore.ClusterNode.ClusterNodeOptions.CertificatePassword*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CertificatePassword
  name: CertificatePassword
  nameWithType: ClusterNodeOptions.CertificatePassword
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CertificatePassword
- uid: EventStore.ClusterNode.ClusterNodeOptions.UseInternalSsl*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.UseInternalSsl
  name: UseInternalSsl
  nameWithType: ClusterNodeOptions.UseInternalSsl
  fullName: EventStore.ClusterNode.ClusterNodeOptions.UseInternalSsl
- uid: EventStore.ClusterNode.ClusterNodeOptions.DisableInsecureTCP*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.DisableInsecureTCP
  name: DisableInsecureTCP
  nameWithType: ClusterNodeOptions.DisableInsecureTCP
  fullName: EventStore.ClusterNode.ClusterNodeOptions.DisableInsecureTCP
- uid: EventStore.ClusterNode.ClusterNodeOptions.SslTargetHost*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.SslTargetHost
  name: SslTargetHost
  nameWithType: ClusterNodeOptions.SslTargetHost
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SslTargetHost
- uid: EventStore.ClusterNode.ClusterNodeOptions.SslValidateServer*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.SslValidateServer
  name: SslValidateServer
  nameWithType: ClusterNodeOptions.SslValidateServer
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SslValidateServer
- uid: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationType*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.AuthenticationType
  name: AuthenticationType
  nameWithType: ClusterNodeOptions.AuthenticationType
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationType
- uid: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationConfig*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.AuthenticationConfig
  name: AuthenticationConfig
  nameWithType: ClusterNodeOptions.AuthenticationConfig
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AuthenticationConfig
- uid: EventStore.ClusterNode.ClusterNodeOptions.PrepareTimeoutMs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.PrepareTimeoutMs
  name: PrepareTimeoutMs
  nameWithType: ClusterNodeOptions.PrepareTimeoutMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.PrepareTimeoutMs
- uid: EventStore.ClusterNode.ClusterNodeOptions.CommitTimeoutMs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.CommitTimeoutMs
  name: CommitTimeoutMs
  nameWithType: ClusterNodeOptions.CommitTimeoutMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.CommitTimeoutMs
- uid: EventStore.ClusterNode.ClusterNodeOptions.UnsafeDisableFlushToDisk*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.UnsafeDisableFlushToDisk
  name: UnsafeDisableFlushToDisk
  nameWithType: ClusterNodeOptions.UnsafeDisableFlushToDisk
  fullName: EventStore.ClusterNode.ClusterNodeOptions.UnsafeDisableFlushToDisk
- uid: EventStore.ClusterNode.ClusterNodeOptions.BetterOrdering*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.BetterOrdering
  name: BetterOrdering
  nameWithType: ClusterNodeOptions.BetterOrdering
  fullName: EventStore.ClusterNode.ClusterNodeOptions.BetterOrdering
- uid: EventStore.ClusterNode.ClusterNodeOptions.UnsafeIgnoreHardDelete*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.UnsafeIgnoreHardDelete
  name: UnsafeIgnoreHardDelete
  nameWithType: ClusterNodeOptions.UnsafeIgnoreHardDelete
  fullName: EventStore.ClusterNode.ClusterNodeOptions.UnsafeIgnoreHardDelete
- uid: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexVerify*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.SkipIndexVerify
  name: SkipIndexVerify
  nameWithType: ClusterNodeOptions.SkipIndexVerify
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexVerify
- uid: EventStore.ClusterNode.ClusterNodeOptions.IndexCacheDepth*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.IndexCacheDepth
  name: IndexCacheDepth
  nameWithType: ClusterNodeOptions.IndexCacheDepth
  fullName: EventStore.ClusterNode.ClusterNodeOptions.IndexCacheDepth
- uid: EventStore.ClusterNode.ClusterNodeOptions.OptimizeIndexMerge*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.OptimizeIndexMerge
  name: OptimizeIndexMerge
  nameWithType: ClusterNodeOptions.OptimizeIndexMerge
  fullName: EventStore.ClusterNode.ClusterNodeOptions.OptimizeIndexMerge
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipIntervalMs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.GossipIntervalMs
  name: GossipIntervalMs
  nameWithType: ClusterNodeOptions.GossipIntervalMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipIntervalMs
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipAllowedDifferenceMs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.GossipAllowedDifferenceMs
  name: GossipAllowedDifferenceMs
  nameWithType: ClusterNodeOptions.GossipAllowedDifferenceMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipAllowedDifferenceMs
- uid: EventStore.ClusterNode.ClusterNodeOptions.GossipTimeoutMs*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.GossipTimeoutMs
  name: GossipTimeoutMs
  nameWithType: ClusterNodeOptions.GossipTimeoutMs
  fullName: EventStore.ClusterNode.ClusterNodeOptions.GossipTimeoutMs
- uid: EventStore.ClusterNode.ClusterNodeOptions.EnableHistograms*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.EnableHistograms
  name: EnableHistograms
  nameWithType: ClusterNodeOptions.EnableHistograms
  fullName: EventStore.ClusterNode.ClusterNodeOptions.EnableHistograms
- uid: EventStore.ClusterNode.ClusterNodeOptions.LogHttpRequests*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.LogHttpRequests
  name: LogHttpRequests
  nameWithType: ClusterNodeOptions.LogHttpRequests
  fullName: EventStore.ClusterNode.ClusterNodeOptions.LogHttpRequests
- uid: EventStore.ClusterNode.ClusterNodeOptions.AlwaysKeepScavenged*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.AlwaysKeepScavenged
  name: AlwaysKeepScavenged
  nameWithType: ClusterNodeOptions.AlwaysKeepScavenged
  fullName: EventStore.ClusterNode.ClusterNodeOptions.AlwaysKeepScavenged
- uid: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexScanOnReads*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.SkipIndexScanOnReads
  name: SkipIndexScanOnReads
  nameWithType: ClusterNodeOptions.SkipIndexScanOnReads
  fullName: EventStore.ClusterNode.ClusterNodeOptions.SkipIndexScanOnReads
- uid: EventStore.ClusterNode.ClusterNodeOptions.ReduceFileCachePressure*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.ReduceFileCachePressure
  name: ReduceFileCachePressure
  nameWithType: ClusterNodeOptions.ReduceFileCachePressure
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ReduceFileCachePressure
- uid: EventStore.ClusterNode.ClusterNodeOptions.InitializationThreads*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.InitializationThreads
  name: InitializationThreads
  nameWithType: ClusterNodeOptions.InitializationThreads
  fullName: EventStore.ClusterNode.ClusterNodeOptions.InitializationThreads
- uid: EventStore.ClusterNode.ClusterNodeOptions.StructuredLog*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.StructuredLog
  name: StructuredLog
  nameWithType: ClusterNodeOptions.StructuredLog
  fullName: EventStore.ClusterNode.ClusterNodeOptions.StructuredLog
- uid: EventStore.ClusterNode.ClusterNodeOptions.MaxAutoMergeIndexLevel*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.MaxAutoMergeIndexLevel
  name: MaxAutoMergeIndexLevel
  nameWithType: ClusterNodeOptions.MaxAutoMergeIndexLevel
  fullName: EventStore.ClusterNode.ClusterNodeOptions.MaxAutoMergeIndexLevel
- uid: EventStore.ClusterNode.ClusterNodeOptions.#ctor*
  commentId: Overload:EventStore.ClusterNode.ClusterNodeOptions.#ctor
  name: ClusterNodeOptions
  nameWithType: ClusterNodeOptions.ClusterNodeOptions
  fullName: EventStore.ClusterNode.ClusterNodeOptions.ClusterNodeOptions

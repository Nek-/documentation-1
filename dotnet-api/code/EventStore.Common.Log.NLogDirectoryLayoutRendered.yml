### YamlMime:ManagedReference
items:
- uid: EventStore.Common.Log.NLogDirectoryLayoutRendered
  commentId: T:EventStore.Common.Log.NLogDirectoryLayoutRendered
  id: NLogDirectoryLayoutRendered
  parent: EventStore.Common.Log
  children:
  - EventStore.Common.Log.NLogDirectoryLayoutRendered.Append(System.Text.StringBuilder,NLog.LogEventInfo)
  langs:
  - csharp
  - vb
  name: NLogDirectoryLayoutRendered
  nameWithType: NLogDirectoryLayoutRendered
  fullName: EventStore.Common.Log.NLogDirectoryLayoutRendered
  type: Class
  source:
    id: NLogDirectoryLayoutRendered
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Log/NLogDirectoryLayoutRendered.cs
    startLine: 5
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Log
  syntax:
    content: >-
      [LayoutRenderer("logsdir")]

      public class NLogDirectoryLayoutRendered : LayoutRenderer, ISupportsInitialize, IRenderable, IDisposable
    content.vb: >-
      <LayoutRenderer("logsdir")>

      Public Class NLogDirectoryLayoutRendered
          Inherits LayoutRenderer
          Implements ISupportsInitialize, IRenderable, IDisposable
  inheritance:
  - System.Object
  - NLog.LayoutRenderers.LayoutRenderer
  implements:
  - System.IDisposable
  inheritedMembers:
  - NLog.LayoutRenderers.LayoutRenderer.ToString
  - NLog.LayoutRenderers.LayoutRenderer.Dispose
  - NLog.LayoutRenderers.LayoutRenderer.Render(NLog.LogEventInfo)
  - NLog.LayoutRenderers.LayoutRenderer.InitializeLayoutRenderer
  - NLog.LayoutRenderers.LayoutRenderer.CloseLayoutRenderer
  - NLog.LayoutRenderers.LayoutRenderer.Dispose(System.Boolean)
  - NLog.LayoutRenderers.LayoutRenderer.GetFormatProvider(NLog.LogEventInfo,System.IFormatProvider)
  - NLog.LayoutRenderers.LayoutRenderer.GetCulture(NLog.LogEventInfo,System.Globalization.CultureInfo)
  - NLog.LayoutRenderers.LayoutRenderer.Register``1(System.String)
  - NLog.LayoutRenderers.LayoutRenderer.Register(System.String,System.Type)
  - NLog.LayoutRenderers.LayoutRenderer.Register(System.String,System.Func{NLog.LogEventInfo,System.Object})
  - NLog.LayoutRenderers.LayoutRenderer.Register(System.String,System.Func{NLog.LogEventInfo,NLog.Config.LoggingConfiguration,System.Object})
  - NLog.LayoutRenderers.LayoutRenderer.LoggingConfiguration
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Common.Log.NLogDirectoryLayoutRendered.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Common.Log.NLogDirectoryLayoutRendered.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  attributes:
  - type: NLog.LayoutRenderers.LayoutRendererAttribute
    ctor: NLog.LayoutRenderers.LayoutRendererAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: logsdir
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Common.Log.NLogDirectoryLayoutRendered.Append(System.Text.StringBuilder,NLog.LogEventInfo)
  commentId: M:EventStore.Common.Log.NLogDirectoryLayoutRendered.Append(System.Text.StringBuilder,NLog.LogEventInfo)
  id: Append(System.Text.StringBuilder,NLog.LogEventInfo)
  parent: EventStore.Common.Log.NLogDirectoryLayoutRendered
  langs:
  - csharp
  - vb
  name: Append(StringBuilder, LogEventInfo)
  nameWithType: NLogDirectoryLayoutRendered.Append(StringBuilder, LogEventInfo)
  fullName: EventStore.Common.Log.NLogDirectoryLayoutRendered.Append(System.Text.StringBuilder, NLog.LogEventInfo)
  type: Method
  source:
    id: Append
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Log/NLogDirectoryLayoutRendered.cs
    startLine: 7
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Log
  syntax:
    content: protected override void Append(StringBuilder builder, LogEventInfo logEvent)
    parameters:
    - id: builder
      type: System.Text.StringBuilder
    - id: logEvent
      type: NLog.LogEventInfo
    content.vb: Protected Overrides Sub Append(builder As StringBuilder, logEvent As LogEventInfo)
  overridden: NLog.LayoutRenderers.LayoutRenderer.Append(System.Text.StringBuilder,NLog.LogEventInfo)
  overload: EventStore.Common.Log.NLogDirectoryLayoutRendered.Append*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: EventStore.Common.Log
  commentId: N:EventStore.Common.Log
  name: EventStore.Common.Log
  nameWithType: EventStore.Common.Log
  fullName: EventStore.Common.Log
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NLog.LayoutRenderers.LayoutRenderer
  commentId: T:NLog.LayoutRenderers.LayoutRenderer
  parent: NLog.LayoutRenderers
  isExternal: true
  name: LayoutRenderer
  nameWithType: LayoutRenderer
  fullName: NLog.LayoutRenderers.LayoutRenderer
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: NLog.LayoutRenderers.LayoutRenderer.ToString
  commentId: M:NLog.LayoutRenderers.LayoutRenderer.ToString
  parent: NLog.LayoutRenderers.LayoutRenderer
  isExternal: true
  name: ToString()
  nameWithType: LayoutRenderer.ToString()
  fullName: NLog.LayoutRenderers.LayoutRenderer.ToString()
  spec.csharp:
  - uid: NLog.LayoutRenderers.LayoutRenderer.ToString
    name: ToString
    nameWithType: LayoutRenderer.ToString
    fullName: NLog.LayoutRenderers.LayoutRenderer.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NLog.LayoutRenderers.LayoutRenderer.ToString
    name: ToString
    nameWithType: LayoutRenderer.ToString
    fullName: NLog.LayoutRenderers.LayoutRenderer.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NLog.LayoutRenderers.LayoutRenderer.Dispose
  commentId: M:NLog.LayoutRenderers.LayoutRenderer.Dispose
  parent: NLog.LayoutRenderers.LayoutRenderer
  isExternal: true
  name: Dispose()
  nameWithType: LayoutRenderer.Dispose()
  fullName: NLog.LayoutRenderers.LayoutRenderer.Dispose()
  spec.csharp:
  - uid: NLog.LayoutRenderers.LayoutRenderer.Dispose
    name: Dispose
    nameWithType: LayoutRenderer.Dispose
    fullName: NLog.LayoutRenderers.LayoutRenderer.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NLog.LayoutRenderers.LayoutRenderer.Dispose
    name: Dispose
    nameWithType: LayoutRenderer.Dispose
    fullName: NLog.LayoutRenderers.LayoutRenderer.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NLog.LayoutRenderers.LayoutRenderer.Render(NLog.LogEventInfo)
  commentId: M:NLog.LayoutRenderers.LayoutRenderer.Render(NLog.LogEventInfo)
  parent: NLog.LayoutRenderers.LayoutRenderer
  isExternal: true
  name: Render(LogEventInfo)
  nameWithType: LayoutRenderer.Render(LogEventInfo)
  fullName: NLog.LayoutRenderers.LayoutRenderer.Render(NLog.LogEventInfo)
  spec.csharp:
  - uid: NLog.LayoutRenderers.LayoutRenderer.Render(NLog.LogEventInfo)
    name: Render
    nameWithType: LayoutRenderer.Render
    fullName: NLog.LayoutRenderers.LayoutRenderer.Render
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NLog.LogEventInfo
    name: LogEventInfo
    nameWithType: LogEventInfo
    fullName: NLog.LogEventInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NLog.LayoutRenderers.LayoutRenderer.Render(NLog.LogEventInfo)
    name: Render
    nameWithType: LayoutRenderer.Render
    fullName: NLog.LayoutRenderers.LayoutRenderer.Render
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NLog.LogEventInfo
    name: LogEventInfo
    nameWithType: LogEventInfo
    fullName: NLog.LogEventInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NLog.LayoutRenderers.LayoutRenderer.InitializeLayoutRenderer
  commentId: M:NLog.LayoutRenderers.LayoutRenderer.InitializeLayoutRenderer
  parent: NLog.LayoutRenderers.LayoutRenderer
  isExternal: true
  name: InitializeLayoutRenderer()
  nameWithType: LayoutRenderer.InitializeLayoutRenderer()
  fullName: NLog.LayoutRenderers.LayoutRenderer.InitializeLayoutRenderer()
  spec.csharp:
  - uid: NLog.LayoutRenderers.LayoutRenderer.InitializeLayoutRenderer
    name: InitializeLayoutRenderer
    nameWithType: LayoutRenderer.InitializeLayoutRenderer
    fullName: NLog.LayoutRenderers.LayoutRenderer.InitializeLayoutRenderer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NLog.LayoutRenderers.LayoutRenderer.InitializeLayoutRenderer
    name: InitializeLayoutRenderer
    nameWithType: LayoutRenderer.InitializeLayoutRenderer
    fullName: NLog.LayoutRenderers.LayoutRenderer.InitializeLayoutRenderer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NLog.LayoutRenderers.LayoutRenderer.CloseLayoutRenderer
  commentId: M:NLog.LayoutRenderers.LayoutRenderer.CloseLayoutRenderer
  parent: NLog.LayoutRenderers.LayoutRenderer
  isExternal: true
  name: CloseLayoutRenderer()
  nameWithType: LayoutRenderer.CloseLayoutRenderer()
  fullName: NLog.LayoutRenderers.LayoutRenderer.CloseLayoutRenderer()
  spec.csharp:
  - uid: NLog.LayoutRenderers.LayoutRenderer.CloseLayoutRenderer
    name: CloseLayoutRenderer
    nameWithType: LayoutRenderer.CloseLayoutRenderer
    fullName: NLog.LayoutRenderers.LayoutRenderer.CloseLayoutRenderer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NLog.LayoutRenderers.LayoutRenderer.CloseLayoutRenderer
    name: CloseLayoutRenderer
    nameWithType: LayoutRenderer.CloseLayoutRenderer
    fullName: NLog.LayoutRenderers.LayoutRenderer.CloseLayoutRenderer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NLog.LayoutRenderers.LayoutRenderer.Dispose(System.Boolean)
  commentId: M:NLog.LayoutRenderers.LayoutRenderer.Dispose(System.Boolean)
  parent: NLog.LayoutRenderers.LayoutRenderer
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: LayoutRenderer.Dispose(Boolean)
  fullName: NLog.LayoutRenderers.LayoutRenderer.Dispose(System.Boolean)
  spec.csharp:
  - uid: NLog.LayoutRenderers.LayoutRenderer.Dispose(System.Boolean)
    name: Dispose
    nameWithType: LayoutRenderer.Dispose
    fullName: NLog.LayoutRenderers.LayoutRenderer.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NLog.LayoutRenderers.LayoutRenderer.Dispose(System.Boolean)
    name: Dispose
    nameWithType: LayoutRenderer.Dispose
    fullName: NLog.LayoutRenderers.LayoutRenderer.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NLog.LayoutRenderers.LayoutRenderer.GetFormatProvider(NLog.LogEventInfo,System.IFormatProvider)
  commentId: M:NLog.LayoutRenderers.LayoutRenderer.GetFormatProvider(NLog.LogEventInfo,System.IFormatProvider)
  parent: NLog.LayoutRenderers.LayoutRenderer
  isExternal: true
  name: GetFormatProvider(LogEventInfo, IFormatProvider)
  nameWithType: LayoutRenderer.GetFormatProvider(LogEventInfo, IFormatProvider)
  fullName: NLog.LayoutRenderers.LayoutRenderer.GetFormatProvider(NLog.LogEventInfo, System.IFormatProvider)
  spec.csharp:
  - uid: NLog.LayoutRenderers.LayoutRenderer.GetFormatProvider(NLog.LogEventInfo,System.IFormatProvider)
    name: GetFormatProvider
    nameWithType: LayoutRenderer.GetFormatProvider
    fullName: NLog.LayoutRenderers.LayoutRenderer.GetFormatProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NLog.LogEventInfo
    name: LogEventInfo
    nameWithType: LogEventInfo
    fullName: NLog.LogEventInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NLog.LayoutRenderers.LayoutRenderer.GetFormatProvider(NLog.LogEventInfo,System.IFormatProvider)
    name: GetFormatProvider
    nameWithType: LayoutRenderer.GetFormatProvider
    fullName: NLog.LayoutRenderers.LayoutRenderer.GetFormatProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NLog.LogEventInfo
    name: LogEventInfo
    nameWithType: LogEventInfo
    fullName: NLog.LogEventInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NLog.LayoutRenderers.LayoutRenderer.GetCulture(NLog.LogEventInfo,System.Globalization.CultureInfo)
  commentId: M:NLog.LayoutRenderers.LayoutRenderer.GetCulture(NLog.LogEventInfo,System.Globalization.CultureInfo)
  parent: NLog.LayoutRenderers.LayoutRenderer
  isExternal: true
  name: GetCulture(LogEventInfo, CultureInfo)
  nameWithType: LayoutRenderer.GetCulture(LogEventInfo, CultureInfo)
  fullName: NLog.LayoutRenderers.LayoutRenderer.GetCulture(NLog.LogEventInfo, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: NLog.LayoutRenderers.LayoutRenderer.GetCulture(NLog.LogEventInfo,System.Globalization.CultureInfo)
    name: GetCulture
    nameWithType: LayoutRenderer.GetCulture
    fullName: NLog.LayoutRenderers.LayoutRenderer.GetCulture
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NLog.LogEventInfo
    name: LogEventInfo
    nameWithType: LogEventInfo
    fullName: NLog.LogEventInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NLog.LayoutRenderers.LayoutRenderer.GetCulture(NLog.LogEventInfo,System.Globalization.CultureInfo)
    name: GetCulture
    nameWithType: LayoutRenderer.GetCulture
    fullName: NLog.LayoutRenderers.LayoutRenderer.GetCulture
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NLog.LogEventInfo
    name: LogEventInfo
    nameWithType: LogEventInfo
    fullName: NLog.LogEventInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NLog.LayoutRenderers.LayoutRenderer.Register``1(System.String)
  commentId: M:NLog.LayoutRenderers.LayoutRenderer.Register``1(System.String)
  parent: NLog.LayoutRenderers.LayoutRenderer
  isExternal: true
  name: Register<T>(String)
  nameWithType: LayoutRenderer.Register<T>(String)
  fullName: NLog.LayoutRenderers.LayoutRenderer.Register<T>(System.String)
  nameWithType.vb: LayoutRenderer.Register(Of T)(String)
  fullName.vb: NLog.LayoutRenderers.LayoutRenderer.Register(Of T)(System.String)
  name.vb: Register(Of T)(String)
  spec.csharp:
  - uid: NLog.LayoutRenderers.LayoutRenderer.Register``1(System.String)
    name: Register<T>
    nameWithType: LayoutRenderer.Register<T>
    fullName: NLog.LayoutRenderers.LayoutRenderer.Register<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NLog.LayoutRenderers.LayoutRenderer.Register``1(System.String)
    name: Register(Of T)
    nameWithType: LayoutRenderer.Register(Of T)
    fullName: NLog.LayoutRenderers.LayoutRenderer.Register(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NLog.LayoutRenderers.LayoutRenderer.Register(System.String,System.Type)
  commentId: M:NLog.LayoutRenderers.LayoutRenderer.Register(System.String,System.Type)
  parent: NLog.LayoutRenderers.LayoutRenderer
  isExternal: true
  name: Register(String, Type)
  nameWithType: LayoutRenderer.Register(String, Type)
  fullName: NLog.LayoutRenderers.LayoutRenderer.Register(System.String, System.Type)
  spec.csharp:
  - uid: NLog.LayoutRenderers.LayoutRenderer.Register(System.String,System.Type)
    name: Register
    nameWithType: LayoutRenderer.Register
    fullName: NLog.LayoutRenderers.LayoutRenderer.Register
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NLog.LayoutRenderers.LayoutRenderer.Register(System.String,System.Type)
    name: Register
    nameWithType: LayoutRenderer.Register
    fullName: NLog.LayoutRenderers.LayoutRenderer.Register
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NLog.LayoutRenderers.LayoutRenderer.Register(System.String,System.Func{NLog.LogEventInfo,System.Object})
  commentId: M:NLog.LayoutRenderers.LayoutRenderer.Register(System.String,System.Func{NLog.LogEventInfo,System.Object})
  parent: NLog.LayoutRenderers.LayoutRenderer
  isExternal: true
  name: Register(String, Func<LogEventInfo, Object>)
  nameWithType: LayoutRenderer.Register(String, Func<LogEventInfo, Object>)
  fullName: NLog.LayoutRenderers.LayoutRenderer.Register(System.String, System.Func<NLog.LogEventInfo, System.Object>)
  nameWithType.vb: LayoutRenderer.Register(String, Func(Of LogEventInfo, Object))
  fullName.vb: NLog.LayoutRenderers.LayoutRenderer.Register(System.String, System.Func(Of NLog.LogEventInfo, System.Object))
  name.vb: Register(String, Func(Of LogEventInfo, Object))
  spec.csharp:
  - uid: NLog.LayoutRenderers.LayoutRenderer.Register(System.String,System.Func{NLog.LogEventInfo,System.Object})
    name: Register
    nameWithType: LayoutRenderer.Register
    fullName: NLog.LayoutRenderers.LayoutRenderer.Register
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NLog.LogEventInfo
    name: LogEventInfo
    nameWithType: LogEventInfo
    fullName: NLog.LogEventInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NLog.LayoutRenderers.LayoutRenderer.Register(System.String,System.Func{NLog.LogEventInfo,System.Object})
    name: Register
    nameWithType: LayoutRenderer.Register
    fullName: NLog.LayoutRenderers.LayoutRenderer.Register
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NLog.LogEventInfo
    name: LogEventInfo
    nameWithType: LogEventInfo
    fullName: NLog.LogEventInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NLog.LayoutRenderers.LayoutRenderer.Register(System.String,System.Func{NLog.LogEventInfo,NLog.Config.LoggingConfiguration,System.Object})
  commentId: M:NLog.LayoutRenderers.LayoutRenderer.Register(System.String,System.Func{NLog.LogEventInfo,NLog.Config.LoggingConfiguration,System.Object})
  parent: NLog.LayoutRenderers.LayoutRenderer
  isExternal: true
  name: Register(String, Func<LogEventInfo, LoggingConfiguration, Object>)
  nameWithType: LayoutRenderer.Register(String, Func<LogEventInfo, LoggingConfiguration, Object>)
  fullName: NLog.LayoutRenderers.LayoutRenderer.Register(System.String, System.Func<NLog.LogEventInfo, NLog.Config.LoggingConfiguration, System.Object>)
  nameWithType.vb: LayoutRenderer.Register(String, Func(Of LogEventInfo, LoggingConfiguration, Object))
  fullName.vb: NLog.LayoutRenderers.LayoutRenderer.Register(System.String, System.Func(Of NLog.LogEventInfo, NLog.Config.LoggingConfiguration, System.Object))
  name.vb: Register(String, Func(Of LogEventInfo, LoggingConfiguration, Object))
  spec.csharp:
  - uid: NLog.LayoutRenderers.LayoutRenderer.Register(System.String,System.Func{NLog.LogEventInfo,NLog.Config.LoggingConfiguration,System.Object})
    name: Register
    nameWithType: LayoutRenderer.Register
    fullName: NLog.LayoutRenderers.LayoutRenderer.Register
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NLog.LogEventInfo
    name: LogEventInfo
    nameWithType: LogEventInfo
    fullName: NLog.LogEventInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NLog.Config.LoggingConfiguration
    name: LoggingConfiguration
    nameWithType: LoggingConfiguration
    fullName: NLog.Config.LoggingConfiguration
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NLog.LayoutRenderers.LayoutRenderer.Register(System.String,System.Func{NLog.LogEventInfo,NLog.Config.LoggingConfiguration,System.Object})
    name: Register
    nameWithType: LayoutRenderer.Register
    fullName: NLog.LayoutRenderers.LayoutRenderer.Register
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NLog.LogEventInfo
    name: LogEventInfo
    nameWithType: LogEventInfo
    fullName: NLog.LogEventInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NLog.Config.LoggingConfiguration
    name: LoggingConfiguration
    nameWithType: LoggingConfiguration
    fullName: NLog.Config.LoggingConfiguration
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NLog.LayoutRenderers.LayoutRenderer.LoggingConfiguration
  commentId: P:NLog.LayoutRenderers.LayoutRenderer.LoggingConfiguration
  parent: NLog.LayoutRenderers.LayoutRenderer
  isExternal: true
  name: LoggingConfiguration
  nameWithType: LayoutRenderer.LoggingConfiguration
  fullName: NLog.LayoutRenderers.LayoutRenderer.LoggingConfiguration
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Log.NLogDirectoryLayoutRendered.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<NLogDirectoryLayoutRendered>()
  nameWithType: ProtobufExtensions.Serialize<NLogDirectoryLayoutRendered>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Common.Log.NLogDirectoryLayoutRendered>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of NLogDirectoryLayoutRendered)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Common.Log.NLogDirectoryLayoutRendered)()
  name.vb: Serialize(Of NLogDirectoryLayoutRendered)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<NLogDirectoryLayoutRendered>
    nameWithType: ProtobufExtensions.Serialize<NLogDirectoryLayoutRendered>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Common.Log.NLogDirectoryLayoutRendered>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of NLogDirectoryLayoutRendered)
    nameWithType: ProtobufExtensions.Serialize(Of NLogDirectoryLayoutRendered)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Common.Log.NLogDirectoryLayoutRendered)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Log.NLogDirectoryLayoutRendered.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<NLogDirectoryLayoutRendered>()
  nameWithType: ProtobufExtensions.SerializeToArray<NLogDirectoryLayoutRendered>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Common.Log.NLogDirectoryLayoutRendered>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of NLogDirectoryLayoutRendered)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Common.Log.NLogDirectoryLayoutRendered)()
  name.vb: SerializeToArray(Of NLogDirectoryLayoutRendered)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<NLogDirectoryLayoutRendered>
    nameWithType: ProtobufExtensions.SerializeToArray<NLogDirectoryLayoutRendered>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Common.Log.NLogDirectoryLayoutRendered>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of NLogDirectoryLayoutRendered)
    nameWithType: ProtobufExtensions.SerializeToArray(Of NLogDirectoryLayoutRendered)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Common.Log.NLogDirectoryLayoutRendered)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NLog.LayoutRenderers
  commentId: N:NLog.LayoutRenderers
  isExternal: true
  name: NLog.LayoutRenderers
  nameWithType: NLog.LayoutRenderers
  fullName: NLog.LayoutRenderers
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: NLog.LayoutRenderers.LayoutRenderer.Append(System.Text.StringBuilder,NLog.LogEventInfo)
  commentId: M:NLog.LayoutRenderers.LayoutRenderer.Append(System.Text.StringBuilder,NLog.LogEventInfo)
  parent: NLog.LayoutRenderers.LayoutRenderer
  isExternal: true
  name: Append(StringBuilder, LogEventInfo)
  nameWithType: LayoutRenderer.Append(StringBuilder, LogEventInfo)
  fullName: NLog.LayoutRenderers.LayoutRenderer.Append(System.Text.StringBuilder, NLog.LogEventInfo)
  spec.csharp:
  - uid: NLog.LayoutRenderers.LayoutRenderer.Append(System.Text.StringBuilder,NLog.LogEventInfo)
    name: Append
    nameWithType: LayoutRenderer.Append
    fullName: NLog.LayoutRenderers.LayoutRenderer.Append
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.StringBuilder
    name: StringBuilder
    nameWithType: StringBuilder
    fullName: System.Text.StringBuilder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NLog.LogEventInfo
    name: LogEventInfo
    nameWithType: LogEventInfo
    fullName: NLog.LogEventInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NLog.LayoutRenderers.LayoutRenderer.Append(System.Text.StringBuilder,NLog.LogEventInfo)
    name: Append
    nameWithType: LayoutRenderer.Append
    fullName: NLog.LayoutRenderers.LayoutRenderer.Append
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.StringBuilder
    name: StringBuilder
    nameWithType: StringBuilder
    fullName: System.Text.StringBuilder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NLog.LogEventInfo
    name: LogEventInfo
    nameWithType: LogEventInfo
    fullName: NLog.LogEventInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Log.NLogDirectoryLayoutRendered.Append*
  commentId: Overload:EventStore.Common.Log.NLogDirectoryLayoutRendered.Append
  name: Append
  nameWithType: NLogDirectoryLayoutRendered.Append
  fullName: EventStore.Common.Log.NLogDirectoryLayoutRendered.Append
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: NLog.LogEventInfo
  commentId: T:NLog.LogEventInfo
  parent: NLog
  isExternal: true
  name: LogEventInfo
  nameWithType: LogEventInfo
  fullName: NLog.LogEventInfo
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: NLog
  commentId: N:NLog
  isExternal: true
  name: NLog
  nameWithType: NLog
  fullName: NLog

### YamlMime:ManagedReference
items:
- uid: EventStore.Common.Log.NLoggerHelperMethods
  commentId: T:EventStore.Common.Log.NLoggerHelperMethods
  id: NLoggerHelperMethods
  parent: EventStore.Common.Log
  children:
  - EventStore.Common.Log.NLoggerHelperMethods.IsDotNet
  - EventStore.Common.Log.NLoggerHelperMethods.IsMono
  - EventStore.Common.Log.NLoggerHelperMethods.IsStructured
  langs:
  - csharp
  - vb
  name: NLoggerHelperMethods
  nameWithType: NLoggerHelperMethods
  fullName: EventStore.Common.Log.NLoggerHelperMethods
  type: Class
  source:
    id: NLoggerHelperMethods
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Log/NLogger.cs
    startLine: 8
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Log
  syntax:
    content: public static class NLoggerHelperMethods
    content.vb: Public Module NLoggerHelperMethods
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Common.Log.NLoggerHelperMethods.IsDotNet
  commentId: M:EventStore.Common.Log.NLoggerHelperMethods.IsDotNet
  id: IsDotNet
  parent: EventStore.Common.Log.NLoggerHelperMethods
  langs:
  - csharp
  - vb
  name: IsDotNet()
  nameWithType: NLoggerHelperMethods.IsDotNet()
  fullName: EventStore.Common.Log.NLoggerHelperMethods.IsDotNet()
  type: Method
  source:
    id: IsDotNet
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Log/NLogger.cs
    startLine: 9
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Log
  syntax:
    content: >-
      [ConditionMethod("is-dot-net")]

      public static bool IsDotNet()
    return:
      type: System.Boolean
    content.vb: >-
      <ConditionMethod("is-dot-net")>

      Public Shared Function IsDotNet As Boolean
  overload: EventStore.Common.Log.NLoggerHelperMethods.IsDotNet*
  attributes:
  - type: NLog.Conditions.ConditionMethodAttribute
    ctor: NLog.Conditions.ConditionMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is-dot-net
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Common.Log.NLoggerHelperMethods.IsMono
  commentId: M:EventStore.Common.Log.NLoggerHelperMethods.IsMono
  id: IsMono
  parent: EventStore.Common.Log.NLoggerHelperMethods
  langs:
  - csharp
  - vb
  name: IsMono()
  nameWithType: NLoggerHelperMethods.IsMono()
  fullName: EventStore.Common.Log.NLoggerHelperMethods.IsMono()
  type: Method
  source:
    id: IsMono
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Log/NLogger.cs
    startLine: 14
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Log
  syntax:
    content: >-
      [ConditionMethod("is-mono")]

      public static bool IsMono()
    return:
      type: System.Boolean
    content.vb: >-
      <ConditionMethod("is-mono")>

      Public Shared Function IsMono As Boolean
  overload: EventStore.Common.Log.NLoggerHelperMethods.IsMono*
  attributes:
  - type: NLog.Conditions.ConditionMethodAttribute
    ctor: NLog.Conditions.ConditionMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is-mono
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Common.Log.NLoggerHelperMethods.IsStructured
  commentId: M:EventStore.Common.Log.NLoggerHelperMethods.IsStructured
  id: IsStructured
  parent: EventStore.Common.Log.NLoggerHelperMethods
  langs:
  - csharp
  - vb
  name: IsStructured()
  nameWithType: NLoggerHelperMethods.IsStructured()
  fullName: EventStore.Common.Log.NLoggerHelperMethods.IsStructured()
  type: Method
  source:
    id: IsStructured
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Log/NLogger.cs
    startLine: 19
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Log
  syntax:
    content: >-
      [ConditionMethod("is-structured")]

      public static bool IsStructured()
    return:
      type: System.Boolean
    content.vb: >-
      <ConditionMethod("is-structured")>

      Public Shared Function IsStructured As Boolean
  overload: EventStore.Common.Log.NLoggerHelperMethods.IsStructured*
  attributes:
  - type: NLog.Conditions.ConditionMethodAttribute
    ctor: NLog.Conditions.ConditionMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is-structured
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Common.Log
  commentId: N:EventStore.Common.Log
  name: EventStore.Common.Log
  nameWithType: EventStore.Common.Log
  fullName: EventStore.Common.Log
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Log.NLoggerHelperMethods.IsDotNet*
  commentId: Overload:EventStore.Common.Log.NLoggerHelperMethods.IsDotNet
  name: IsDotNet
  nameWithType: NLoggerHelperMethods.IsDotNet
  fullName: EventStore.Common.Log.NLoggerHelperMethods.IsDotNet
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Common.Log.NLoggerHelperMethods.IsMono*
  commentId: Overload:EventStore.Common.Log.NLoggerHelperMethods.IsMono
  name: IsMono
  nameWithType: NLoggerHelperMethods.IsMono
  fullName: EventStore.Common.Log.NLoggerHelperMethods.IsMono
- uid: EventStore.Common.Log.NLoggerHelperMethods.IsStructured*
  commentId: Overload:EventStore.Common.Log.NLoggerHelperMethods.IsStructured
  name: IsStructured
  nameWithType: NLoggerHelperMethods.IsStructured
  fullName: EventStore.Common.Log.NLoggerHelperMethods.IsStructured

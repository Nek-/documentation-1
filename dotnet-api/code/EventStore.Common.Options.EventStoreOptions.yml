### YamlMime:ManagedReference
items:
- uid: EventStore.Common.Options.EventStoreOptions
  commentId: T:EventStore.Common.Options.EventStoreOptions
  id: EventStoreOptions
  parent: EventStore.Common.Options
  children:
  - EventStore.Common.Options.EventStoreOptions.DumpOptions
  - EventStore.Common.Options.EventStoreOptions.DumpOptionsStructured
  - EventStore.Common.Options.EventStoreOptions.GetUsage``1
  - EventStore.Common.Options.EventStoreOptions.Parse``1(System.String,System.String)
  - EventStore.Common.Options.EventStoreOptions.Parse``1(System.String[],System.String,System.String)
  langs:
  - csharp
  - vb
  name: EventStoreOptions
  nameWithType: EventStoreOptions
  fullName: EventStore.Common.Options.EventStoreOptions
  type: Class
  source:
    remote:
      path: src/EventStore.Common/Options/EventStoreOptions.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EventStoreOptions
    path: ../EventStore/src/EventStore.Common/Options/EventStoreOptions.cs
    startLine: 10
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: 'public class EventStoreOptions : object'
    content.vb: >-
      Public Class EventStoreOptions
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Common.Options.EventStoreOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Common.Options.EventStoreOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Common.Options.EventStoreOptions.Parse``1(System.String[],System.String,System.String)
  commentId: M:EventStore.Common.Options.EventStoreOptions.Parse``1(System.String[],System.String,System.String)
  id: Parse``1(System.String[],System.String,System.String)
  parent: EventStore.Common.Options.EventStoreOptions
  langs:
  - csharp
  - vb
  name: Parse<TOptions>(String[], String, String)
  nameWithType: EventStoreOptions.Parse<TOptions>(String[], String, String)
  fullName: EventStore.Common.Options.EventStoreOptions.Parse<TOptions>(System.String[], System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Common/Options/EventStoreOptions.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Parse
    path: ../EventStore/src/EventStore.Common/Options/EventStoreOptions.cs
    startLine: 14
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: >-
      public static TOptions Parse<TOptions>(string[] args, string environmentPrefix, string defaultConfigLocation = null)
          where TOptions : class, IOptions, new()
    parameters:
    - id: args
      type: System.String[]
    - id: environmentPrefix
      type: System.String
    - id: defaultConfigLocation
      type: System.String
    typeParameters:
    - id: TOptions
    return:
      type: '{TOptions}'
    content.vb: Public Shared Function Parse(Of TOptions As {Class, IOptions, New})(args As String(), environmentPrefix As String, defaultConfigLocation As String = Nothing) As TOptions
  overload: EventStore.Common.Options.EventStoreOptions.Parse*
  nameWithType.vb: EventStoreOptions.Parse(Of TOptions)(String(), String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Common.Options.EventStoreOptions.Parse(Of TOptions)(System.String(), System.String, System.String)
  name.vb: Parse(Of TOptions)(String(), String, String)
- uid: EventStore.Common.Options.EventStoreOptions.Parse``1(System.String,System.String)
  commentId: M:EventStore.Common.Options.EventStoreOptions.Parse``1(System.String,System.String)
  id: Parse``1(System.String,System.String)
  parent: EventStore.Common.Options.EventStoreOptions
  langs:
  - csharp
  - vb
  name: Parse<TOptions>(String, String)
  nameWithType: EventStoreOptions.Parse<TOptions>(String, String)
  fullName: EventStore.Common.Options.EventStoreOptions.Parse<TOptions>(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Common/Options/EventStoreOptions.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Parse
    path: ../EventStore/src/EventStore.Common/Options/EventStoreOptions.cs
    startLine: 61
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: >-
      public static TOptions Parse<TOptions>(string configFile, string sectionName = "")
          where TOptions : class, new()
    parameters:
    - id: configFile
      type: System.String
    - id: sectionName
      type: System.String
    typeParameters:
    - id: TOptions
    return:
      type: '{TOptions}'
    content.vb: Public Shared Function Parse(Of TOptions As {Class, New})(configFile As String, sectionName As String = "") As TOptions
  overload: EventStore.Common.Options.EventStoreOptions.Parse*
  nameWithType.vb: EventStoreOptions.Parse(Of TOptions)(String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Common.Options.EventStoreOptions.Parse(Of TOptions)(System.String, System.String)
  name.vb: Parse(Of TOptions)(String, String)
- uid: EventStore.Common.Options.EventStoreOptions.GetUsage``1
  commentId: M:EventStore.Common.Options.EventStoreOptions.GetUsage``1
  id: GetUsage``1
  parent: EventStore.Common.Options.EventStoreOptions
  langs:
  - csharp
  - vb
  name: GetUsage<TOptions>()
  nameWithType: EventStoreOptions.GetUsage<TOptions>()
  fullName: EventStore.Common.Options.EventStoreOptions.GetUsage<TOptions>()
  type: Method
  source:
    remote:
      path: src/EventStore.Common/Options/EventStoreOptions.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetUsage
    path: ../EventStore/src/EventStore.Common/Options/EventStoreOptions.cs
    startLine: 66
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: public static string GetUsage<TOptions>()
    typeParameters:
    - id: TOptions
    return:
      type: System.String
    content.vb: Public Shared Function GetUsage(Of TOptions) As String
  overload: EventStore.Common.Options.EventStoreOptions.GetUsage*
  nameWithType.vb: EventStoreOptions.GetUsage(Of TOptions)()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Common.Options.EventStoreOptions.GetUsage(Of TOptions)()
  name.vb: GetUsage(Of TOptions)()
- uid: EventStore.Common.Options.EventStoreOptions.DumpOptionsStructured
  commentId: M:EventStore.Common.Options.EventStoreOptions.DumpOptionsStructured
  id: DumpOptionsStructured
  parent: EventStore.Common.Options.EventStoreOptions
  langs:
  - csharp
  - vb
  name: DumpOptionsStructured()
  nameWithType: EventStoreOptions.DumpOptionsStructured()
  fullName: EventStore.Common.Options.EventStoreOptions.DumpOptionsStructured()
  type: Method
  source:
    remote:
      path: src/EventStore.Common/Options/EventStoreOptions.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: DumpOptionsStructured
    path: ../EventStore/src/EventStore.Common/Options/EventStoreOptions.cs
    startLine: 71
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: public static object DumpOptionsStructured()
    return:
      type: System.Object
    content.vb: Public Shared Function DumpOptionsStructured As Object
  overload: EventStore.Common.Options.EventStoreOptions.DumpOptionsStructured*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Common.Options.EventStoreOptions.DumpOptions
  commentId: M:EventStore.Common.Options.EventStoreOptions.DumpOptions
  id: DumpOptions
  parent: EventStore.Common.Options.EventStoreOptions
  langs:
  - csharp
  - vb
  name: DumpOptions()
  nameWithType: EventStoreOptions.DumpOptions()
  fullName: EventStore.Common.Options.EventStoreOptions.DumpOptions()
  type: Method
  source:
    remote:
      path: src/EventStore.Common/Options/EventStoreOptions.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: DumpOptions
    path: ../EventStore/src/EventStore.Common/Options/EventStoreOptions.cs
    startLine: 100
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: public static string DumpOptions()
    return:
      type: System.String
    content.vb: Public Shared Function DumpOptions As String
  overload: EventStore.Common.Options.EventStoreOptions.DumpOptions*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Common.Options
  commentId: N:EventStore.Common.Options
  name: EventStore.Common.Options
  nameWithType: EventStore.Common.Options
  fullName: EventStore.Common.Options
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Options.EventStoreOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<EventStoreOptions>()
  nameWithType: ProtobufExtensions.Serialize<EventStoreOptions>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Common.Options.EventStoreOptions>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of EventStoreOptions)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Common.Options.EventStoreOptions)()
  name.vb: Serialize(Of EventStoreOptions)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<EventStoreOptions>
    nameWithType: ProtobufExtensions.Serialize<EventStoreOptions>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Common.Options.EventStoreOptions>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of EventStoreOptions)
    nameWithType: ProtobufExtensions.Serialize(Of EventStoreOptions)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Common.Options.EventStoreOptions)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Options.EventStoreOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<EventStoreOptions>()
  nameWithType: ProtobufExtensions.SerializeToArray<EventStoreOptions>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Common.Options.EventStoreOptions>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of EventStoreOptions)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Common.Options.EventStoreOptions)()
  name.vb: SerializeToArray(Of EventStoreOptions)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<EventStoreOptions>
    nameWithType: ProtobufExtensions.SerializeToArray<EventStoreOptions>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Common.Options.EventStoreOptions>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of EventStoreOptions)
    nameWithType: ProtobufExtensions.SerializeToArray(Of EventStoreOptions)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Common.Options.EventStoreOptions)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Common.Options.EventStoreOptions.Parse*
  commentId: Overload:EventStore.Common.Options.EventStoreOptions.Parse
  name: Parse
  nameWithType: EventStoreOptions.Parse
  fullName: EventStore.Common.Options.EventStoreOptions.Parse
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{TOptions}'
  commentId: '!:TOptions'
  definition: TOptions
  name: TOptions
  nameWithType: TOptions
  fullName: TOptions
- uid: TOptions
  name: TOptions
  nameWithType: TOptions
  fullName: TOptions
- uid: EventStore.Common.Options.EventStoreOptions.GetUsage*
  commentId: Overload:EventStore.Common.Options.EventStoreOptions.GetUsage
  name: GetUsage
  nameWithType: EventStoreOptions.GetUsage
  fullName: EventStore.Common.Options.EventStoreOptions.GetUsage
- uid: EventStore.Common.Options.EventStoreOptions.DumpOptionsStructured*
  commentId: Overload:EventStore.Common.Options.EventStoreOptions.DumpOptionsStructured
  name: DumpOptionsStructured
  nameWithType: EventStoreOptions.DumpOptionsStructured
  fullName: EventStore.Common.Options.EventStoreOptions.DumpOptionsStructured
- uid: EventStore.Common.Options.EventStoreOptions.DumpOptions*
  commentId: Overload:EventStore.Common.Options.EventStoreOptions.DumpOptions
  name: DumpOptions
  nameWithType: EventStoreOptions.DumpOptions
  fullName: EventStore.Common.Options.EventStoreOptions.DumpOptions

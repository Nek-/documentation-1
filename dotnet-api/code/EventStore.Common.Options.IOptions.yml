### YamlMime:ManagedReference
items:
- uid: EventStore.Common.Options.IOptions
  commentId: T:EventStore.Common.Options.IOptions
  id: IOptions
  parent: EventStore.Common.Options
  children:
  - EventStore.Common.Options.IOptions.Config
  - EventStore.Common.Options.IOptions.Defines
  - EventStore.Common.Options.IOptions.Force
  - EventStore.Common.Options.IOptions.Help
  - EventStore.Common.Options.IOptions.Log
  - EventStore.Common.Options.IOptions.Version
  - EventStore.Common.Options.IOptions.WhatIf
  langs:
  - csharp
  - vb
  name: IOptions
  nameWithType: IOptions
  fullName: EventStore.Common.Options.IOptions
  type: Interface
  source:
    remote:
      path: src/EventStore.Common/Options/IOptions.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: IOptions
    path: ../EventStore/src/EventStore.Common/Options/IOptions.cs
    startLine: 2
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: public interface IOptions
    content.vb: Public Interface IOptions
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Common.Options.IOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Common.Options.IOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Common.Options.IOptions.Help
  commentId: P:EventStore.Common.Options.IOptions.Help
  id: Help
  parent: EventStore.Common.Options.IOptions
  langs:
  - csharp
  - vb
  name: Help
  nameWithType: IOptions.Help
  fullName: EventStore.Common.Options.IOptions.Help
  type: Property
  source:
    remote:
      path: src/EventStore.Common/Options/IOptions.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Help
    path: ../EventStore/src/EventStore.Common/Options/IOptions.cs
    startLine: 4
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: bool Help { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Help As Boolean
  overload: EventStore.Common.Options.IOptions.Help*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Common.Options.IOptions.Version
  commentId: P:EventStore.Common.Options.IOptions.Version
  id: Version
  parent: EventStore.Common.Options.IOptions
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: IOptions.Version
  fullName: EventStore.Common.Options.IOptions.Version
  type: Property
  source:
    remote:
      path: src/EventStore.Common/Options/IOptions.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Version
    path: ../EventStore/src/EventStore.Common/Options/IOptions.cs
    startLine: 5
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: bool Version { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Version As Boolean
  overload: EventStore.Common.Options.IOptions.Version*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Common.Options.IOptions.Config
  commentId: P:EventStore.Common.Options.IOptions.Config
  id: Config
  parent: EventStore.Common.Options.IOptions
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: IOptions.Config
  fullName: EventStore.Common.Options.IOptions.Config
  type: Property
  source:
    remote:
      path: src/EventStore.Common/Options/IOptions.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Config
    path: ../EventStore/src/EventStore.Common/Options/IOptions.cs
    startLine: 6
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: string Config { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Config As String
  overload: EventStore.Common.Options.IOptions.Config*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Common.Options.IOptions.Log
  commentId: P:EventStore.Common.Options.IOptions.Log
  id: Log
  parent: EventStore.Common.Options.IOptions
  langs:
  - csharp
  - vb
  name: Log
  nameWithType: IOptions.Log
  fullName: EventStore.Common.Options.IOptions.Log
  type: Property
  source:
    remote:
      path: src/EventStore.Common/Options/IOptions.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Log
    path: ../EventStore/src/EventStore.Common/Options/IOptions.cs
    startLine: 7
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: string Log { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Log As String
  overload: EventStore.Common.Options.IOptions.Log*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Common.Options.IOptions.Defines
  commentId: P:EventStore.Common.Options.IOptions.Defines
  id: Defines
  parent: EventStore.Common.Options.IOptions
  langs:
  - csharp
  - vb
  name: Defines
  nameWithType: IOptions.Defines
  fullName: EventStore.Common.Options.IOptions.Defines
  type: Property
  source:
    remote:
      path: src/EventStore.Common/Options/IOptions.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Defines
    path: ../EventStore/src/EventStore.Common/Options/IOptions.cs
    startLine: 8
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: string[] Defines { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: ReadOnly Property Defines As String()
  overload: EventStore.Common.Options.IOptions.Defines*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Common.Options.IOptions.Force
  commentId: P:EventStore.Common.Options.IOptions.Force
  id: Force
  parent: EventStore.Common.Options.IOptions
  langs:
  - csharp
  - vb
  name: Force
  nameWithType: IOptions.Force
  fullName: EventStore.Common.Options.IOptions.Force
  type: Property
  source:
    remote:
      path: src/EventStore.Common/Options/IOptions.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Force
    path: ../EventStore/src/EventStore.Common/Options/IOptions.cs
    startLine: 9
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: bool Force { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Force As Boolean
  overload: EventStore.Common.Options.IOptions.Force*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Common.Options.IOptions.WhatIf
  commentId: P:EventStore.Common.Options.IOptions.WhatIf
  id: WhatIf
  parent: EventStore.Common.Options.IOptions
  langs:
  - csharp
  - vb
  name: WhatIf
  nameWithType: IOptions.WhatIf
  fullName: EventStore.Common.Options.IOptions.WhatIf
  type: Property
  source:
    remote:
      path: src/EventStore.Common/Options/IOptions.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: WhatIf
    path: ../EventStore/src/EventStore.Common/Options/IOptions.cs
    startLine: 10
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: bool WhatIf { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property WhatIf As Boolean
  overload: EventStore.Common.Options.IOptions.WhatIf*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: EventStore.Common.Options
  commentId: N:EventStore.Common.Options
  name: EventStore.Common.Options
  nameWithType: EventStore.Common.Options
  fullName: EventStore.Common.Options
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Options.IOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IOptions>()
  nameWithType: ProtobufExtensions.Serialize<IOptions>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Common.Options.IOptions>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IOptions)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Common.Options.IOptions)()
  name.vb: Serialize(Of IOptions)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IOptions>
    nameWithType: ProtobufExtensions.Serialize<IOptions>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Common.Options.IOptions>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IOptions)
    nameWithType: ProtobufExtensions.Serialize(Of IOptions)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Common.Options.IOptions)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Options.IOptions.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IOptions>()
  nameWithType: ProtobufExtensions.SerializeToArray<IOptions>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Common.Options.IOptions>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IOptions)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Common.Options.IOptions)()
  name.vb: SerializeToArray(Of IOptions)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IOptions>
    nameWithType: ProtobufExtensions.SerializeToArray<IOptions>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Common.Options.IOptions>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IOptions)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IOptions)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Common.Options.IOptions)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Common.Options.IOptions.Help*
  commentId: Overload:EventStore.Common.Options.IOptions.Help
  name: Help
  nameWithType: IOptions.Help
  fullName: EventStore.Common.Options.IOptions.Help
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Options.IOptions.Version*
  commentId: Overload:EventStore.Common.Options.IOptions.Version
  name: Version
  nameWithType: IOptions.Version
  fullName: EventStore.Common.Options.IOptions.Version
- uid: EventStore.Common.Options.IOptions.Config*
  commentId: Overload:EventStore.Common.Options.IOptions.Config
  name: Config
  nameWithType: IOptions.Config
  fullName: EventStore.Common.Options.IOptions.Config
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Common.Options.IOptions.Log*
  commentId: Overload:EventStore.Common.Options.IOptions.Log
  name: Log
  nameWithType: IOptions.Log
  fullName: EventStore.Common.Options.IOptions.Log
- uid: EventStore.Common.Options.IOptions.Defines*
  commentId: Overload:EventStore.Common.Options.IOptions.Defines
  name: Defines
  nameWithType: IOptions.Defines
  fullName: EventStore.Common.Options.IOptions.Defines
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Common.Options.IOptions.Force*
  commentId: Overload:EventStore.Common.Options.IOptions.Force
  name: Force
  nameWithType: IOptions.Force
  fullName: EventStore.Common.Options.IOptions.Force
- uid: EventStore.Common.Options.IOptions.WhatIf*
  commentId: Overload:EventStore.Common.Options.IOptions.WhatIf
  name: WhatIf
  nameWithType: IOptions.WhatIf
  fullName: EventStore.Common.Options.IOptions.WhatIf

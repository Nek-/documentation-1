### YamlMime:ManagedReference
items:
- uid: EventStore.Common.Options.ProjectionType
  commentId: T:EventStore.Common.Options.ProjectionType
  id: ProjectionType
  parent: EventStore.Common.Options
  children:
  - EventStore.Common.Options.ProjectionType.All
  - EventStore.Common.Options.ProjectionType.None
  - EventStore.Common.Options.ProjectionType.System
  langs:
  - csharp
  - vb
  name: ProjectionType
  nameWithType: ProjectionType
  fullName: EventStore.Common.Options.ProjectionType
  type: Enum
  source:
    remote:
      path: src/EventStore.Common/Options/ProjectionType.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ProjectionType
    path: ../EventStore/src/EventStore.Common/Options/ProjectionType.cs
    startLine: 1
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: 'public enum ProjectionType : int'
    content.vb: Public Enum ProjectionType As Integer
  extensionMethods:
  - EventStore.Common.Options.ProjectionType.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Common.Options.ProjectionType.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Common.Options.ProjectionType.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.Common.Options.ProjectionType.None
  commentId: F:EventStore.Common.Options.ProjectionType.None
  id: None
  parent: EventStore.Common.Options.ProjectionType
  langs:
  - csharp
  - vb
  name: None
  nameWithType: ProjectionType.None
  fullName: EventStore.Common.Options.ProjectionType.None
  type: Field
  source:
    remote:
      path: src/EventStore.Common/Options/ProjectionType.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: None
    path: ../EventStore/src/EventStore.Common/Options/ProjectionType.cs
    startLine: 2
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: None = 0
    return:
      type: EventStore.Common.Options.ProjectionType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Common.Options.ProjectionType.System
  commentId: F:EventStore.Common.Options.ProjectionType.System
  id: System
  parent: EventStore.Common.Options.ProjectionType
  langs:
  - csharp
  - vb
  name: System
  nameWithType: ProjectionType.System
  fullName: EventStore.Common.Options.ProjectionType.System
  type: Field
  source:
    remote:
      path: src/EventStore.Common/Options/ProjectionType.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: System
    path: ../EventStore/src/EventStore.Common/Options/ProjectionType.cs
    startLine: 3
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: System = 1
    return:
      type: EventStore.Common.Options.ProjectionType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Common.Options.ProjectionType.All
  commentId: F:EventStore.Common.Options.ProjectionType.All
  id: All
  parent: EventStore.Common.Options.ProjectionType
  langs:
  - csharp
  - vb
  name: All
  nameWithType: ProjectionType.All
  fullName: EventStore.Common.Options.ProjectionType.All
  type: Field
  source:
    remote:
      path: src/EventStore.Common/Options/ProjectionType.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: All
    path: ../EventStore/src/EventStore.Common/Options/ProjectionType.cs
    startLine: 4
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: All = 2
    return:
      type: EventStore.Common.Options.ProjectionType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Common.Options
  commentId: N:EventStore.Common.Options
  name: EventStore.Common.Options
  nameWithType: EventStore.Common.Options
  fullName: EventStore.Common.Options
- uid: EventStore.Common.Options.ProjectionType.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<ProjectionType>()
  nameWithType: EnumExtensions.EnumValueName<ProjectionType>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Common.Options.ProjectionType>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of ProjectionType)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Common.Options.ProjectionType)()
  name.vb: EnumValueName(Of ProjectionType)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<ProjectionType>
    nameWithType: EnumExtensions.EnumValueName<ProjectionType>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Common.Options.ProjectionType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of ProjectionType)
    nameWithType: EnumExtensions.EnumValueName(Of ProjectionType)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Common.Options.ProjectionType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Options.ProjectionType.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ProjectionType>()
  nameWithType: ProtobufExtensions.Serialize<ProjectionType>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Common.Options.ProjectionType>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ProjectionType)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Common.Options.ProjectionType)()
  name.vb: Serialize(Of ProjectionType)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ProjectionType>
    nameWithType: ProtobufExtensions.Serialize<ProjectionType>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Common.Options.ProjectionType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ProjectionType)
    nameWithType: ProtobufExtensions.Serialize(Of ProjectionType)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Common.Options.ProjectionType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Options.ProjectionType.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ProjectionType>()
  nameWithType: ProtobufExtensions.SerializeToArray<ProjectionType>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Common.Options.ProjectionType>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ProjectionType)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Common.Options.ProjectionType)()
  name.vb: SerializeToArray(Of ProjectionType)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ProjectionType>
    nameWithType: ProtobufExtensions.SerializeToArray<ProjectionType>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Common.Options.ProjectionType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ProjectionType)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ProjectionType)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Common.Options.ProjectionType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Common.Options.ProjectionType
  commentId: T:EventStore.Common.Options.ProjectionType
  parent: EventStore.Common.Options
  name: ProjectionType
  nameWithType: ProjectionType
  fullName: EventStore.Common.Options.ProjectionType

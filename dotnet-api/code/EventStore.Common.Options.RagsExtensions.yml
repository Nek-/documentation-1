### YamlMime:ManagedReference
items:
- uid: EventStore.Common.Options.RagsExtensions
  commentId: T:EventStore.Common.Options.RagsExtensions
  id: RagsExtensions
  parent: EventStore.Common.Options
  children:
  - EventStore.Common.Options.RagsExtensions.Cleanup(System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource})
  - EventStore.Common.Options.RagsExtensions.EnsureCorrectType``1(System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource})
  - EventStore.Common.Options.RagsExtensions.EnsureExistence``1(System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource})
  - EventStore.Common.Options.RagsExtensions.FixNames``1(System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource})
  langs:
  - csharp
  - vb
  name: RagsExtensions
  nameWithType: RagsExtensions
  fullName: EventStore.Common.Options.RagsExtensions
  type: Class
  source:
    id: RagsExtensions
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Options/EventStoreOptions.cs
    startLine: 138
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: public static class RagsExtensions
    content.vb: Public Module RagsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Common.Options.RagsExtensions.Cleanup(System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource})
  commentId: M:EventStore.Common.Options.RagsExtensions.Cleanup(System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource})
  id: Cleanup(System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource})
  isExtensionMethod: true
  parent: EventStore.Common.Options.RagsExtensions
  langs:
  - csharp
  - vb
  name: Cleanup(IEnumerable<OptionSource>)
  nameWithType: RagsExtensions.Cleanup(IEnumerable<OptionSource>)
  fullName: EventStore.Common.Options.RagsExtensions.Cleanup(System.Collections.Generic.IEnumerable<EventStore.Rags.OptionSource>)
  type: Method
  source:
    id: Cleanup
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Options/EventStoreOptions.cs
    startLine: 139
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: public static IEnumerable<OptionSource> Cleanup(this IEnumerable<OptionSource> optionSources)
    parameters:
    - id: optionSources
      type: System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource}
    return:
      type: System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Cleanup(optionSources As IEnumerable(Of OptionSource)) As IEnumerable(Of OptionSource)
  overload: EventStore.Common.Options.RagsExtensions.Cleanup*
  nameWithType.vb: RagsExtensions.Cleanup(IEnumerable(Of OptionSource))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Common.Options.RagsExtensions.Cleanup(System.Collections.Generic.IEnumerable(Of EventStore.Rags.OptionSource))
  name.vb: Cleanup(IEnumerable(Of OptionSource))
- uid: EventStore.Common.Options.RagsExtensions.FixNames``1(System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource})
  commentId: M:EventStore.Common.Options.RagsExtensions.FixNames``1(System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource})
  id: FixNames``1(System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource})
  isExtensionMethod: true
  parent: EventStore.Common.Options.RagsExtensions
  langs:
  - csharp
  - vb
  name: FixNames<TOptions>(IEnumerable<OptionSource>)
  nameWithType: RagsExtensions.FixNames<TOptions>(IEnumerable<OptionSource>)
  fullName: EventStore.Common.Options.RagsExtensions.FixNames<TOptions>(System.Collections.Generic.IEnumerable<EventStore.Rags.OptionSource>)
  type: Method
  source:
    id: FixNames
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Options/EventStoreOptions.cs
    startLine: 143
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: >-
      public static IEnumerable<OptionSource> FixNames<TOptions>(this IEnumerable<OptionSource> optionSources)
          where TOptions : class
    parameters:
    - id: optionSources
      type: System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource}
    typeParameters:
    - id: TOptions
    return:
      type: System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FixNames(Of TOptions As Class)(optionSources As IEnumerable(Of OptionSource)) As IEnumerable(Of OptionSource)
  overload: EventStore.Common.Options.RagsExtensions.FixNames*
  nameWithType.vb: RagsExtensions.FixNames(Of TOptions)(IEnumerable(Of OptionSource))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Common.Options.RagsExtensions.FixNames(Of TOptions)(System.Collections.Generic.IEnumerable(Of EventStore.Rags.OptionSource))
  name.vb: FixNames(Of TOptions)(IEnumerable(Of OptionSource))
- uid: EventStore.Common.Options.RagsExtensions.EnsureExistence``1(System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource})
  commentId: M:EventStore.Common.Options.RagsExtensions.EnsureExistence``1(System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource})
  id: EnsureExistence``1(System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource})
  isExtensionMethod: true
  parent: EventStore.Common.Options.RagsExtensions
  langs:
  - csharp
  - vb
  name: EnsureExistence<TOptions>(IEnumerable<OptionSource>)
  nameWithType: RagsExtensions.EnsureExistence<TOptions>(IEnumerable<OptionSource>)
  fullName: EventStore.Common.Options.RagsExtensions.EnsureExistence<TOptions>(System.Collections.Generic.IEnumerable<EventStore.Rags.OptionSource>)
  type: Method
  source:
    id: EnsureExistence
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Options/EventStoreOptions.cs
    startLine: 157
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: >-
      public static IEnumerable<OptionSource> EnsureExistence<TOptions>(this IEnumerable<OptionSource> optionSources)
          where TOptions : class
    parameters:
    - id: optionSources
      type: System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource}
    typeParameters:
    - id: TOptions
    return:
      type: System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function EnsureExistence(Of TOptions As Class)(optionSources As IEnumerable(Of OptionSource)) As IEnumerable(Of OptionSource)
  overload: EventStore.Common.Options.RagsExtensions.EnsureExistence*
  nameWithType.vb: RagsExtensions.EnsureExistence(Of TOptions)(IEnumerable(Of OptionSource))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Common.Options.RagsExtensions.EnsureExistence(Of TOptions)(System.Collections.Generic.IEnumerable(Of EventStore.Rags.OptionSource))
  name.vb: EnsureExistence(Of TOptions)(IEnumerable(Of OptionSource))
- uid: EventStore.Common.Options.RagsExtensions.EnsureCorrectType``1(System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource})
  commentId: M:EventStore.Common.Options.RagsExtensions.EnsureCorrectType``1(System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource})
  id: EnsureCorrectType``1(System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource})
  isExtensionMethod: true
  parent: EventStore.Common.Options.RagsExtensions
  langs:
  - csharp
  - vb
  name: EnsureCorrectType<TOptions>(IEnumerable<OptionSource>)
  nameWithType: RagsExtensions.EnsureCorrectType<TOptions>(IEnumerable<OptionSource>)
  fullName: EventStore.Common.Options.RagsExtensions.EnsureCorrectType<TOptions>(System.Collections.Generic.IEnumerable<EventStore.Rags.OptionSource>)
  type: Method
  source:
    id: EnsureCorrectType
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Options/EventStoreOptions.cs
    startLine: 170
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Options
  syntax:
    content: >-
      public static IEnumerable<OptionSource> EnsureCorrectType<TOptions>(this IEnumerable<OptionSource> optionSources)
          where TOptions : class, new()
    parameters:
    - id: optionSources
      type: System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource}
    typeParameters:
    - id: TOptions
    return:
      type: System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function EnsureCorrectType(Of TOptions As {Class, New})(optionSources As IEnumerable(Of OptionSource)) As IEnumerable(Of OptionSource)
  overload: EventStore.Common.Options.RagsExtensions.EnsureCorrectType*
  nameWithType.vb: RagsExtensions.EnsureCorrectType(Of TOptions)(IEnumerable(Of OptionSource))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Common.Options.RagsExtensions.EnsureCorrectType(Of TOptions)(System.Collections.Generic.IEnumerable(Of EventStore.Rags.OptionSource))
  name.vb: EnsureCorrectType(Of TOptions)(IEnumerable(Of OptionSource))
references:
- uid: EventStore.Common.Options
  commentId: N:EventStore.Common.Options
  name: EventStore.Common.Options
  nameWithType: EventStore.Common.Options
  fullName: EventStore.Common.Options
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Options.RagsExtensions.Cleanup*
  commentId: Overload:EventStore.Common.Options.RagsExtensions.Cleanup
  name: Cleanup
  nameWithType: RagsExtensions.Cleanup
  fullName: EventStore.Common.Options.RagsExtensions.Cleanup
- uid: System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource}
  commentId: T:System.Collections.Generic.IEnumerable{EventStore.Rags.OptionSource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<OptionSource>
  nameWithType: IEnumerable<OptionSource>
  fullName: System.Collections.Generic.IEnumerable<EventStore.Rags.OptionSource>
  nameWithType.vb: IEnumerable(Of OptionSource)
  fullName.vb: System.Collections.Generic.IEnumerable(Of EventStore.Rags.OptionSource)
  name.vb: IEnumerable(Of OptionSource)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Rags.OptionSource
    name: OptionSource
    nameWithType: OptionSource
    fullName: EventStore.Rags.OptionSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Rags.OptionSource
    name: OptionSource
    nameWithType: OptionSource
    fullName: EventStore.Rags.OptionSource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EventStore.Common.Options.RagsExtensions.FixNames*
  commentId: Overload:EventStore.Common.Options.RagsExtensions.FixNames
  name: FixNames
  nameWithType: RagsExtensions.FixNames
  fullName: EventStore.Common.Options.RagsExtensions.FixNames
- uid: EventStore.Common.Options.RagsExtensions.EnsureExistence*
  commentId: Overload:EventStore.Common.Options.RagsExtensions.EnsureExistence
  name: EnsureExistence
  nameWithType: RagsExtensions.EnsureExistence
  fullName: EventStore.Common.Options.RagsExtensions.EnsureExistence
- uid: EventStore.Common.Options.RagsExtensions.EnsureCorrectType*
  commentId: Overload:EventStore.Common.Options.RagsExtensions.EnsureCorrectType
  name: EnsureCorrectType
  nameWithType: RagsExtensions.EnsureCorrectType
  fullName: EventStore.Common.Options.RagsExtensions.EnsureCorrectType

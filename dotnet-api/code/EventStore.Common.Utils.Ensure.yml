### YamlMime:ManagedReference
items:
- uid: EventStore.Common.Utils.Ensure
  commentId: T:EventStore.Common.Utils.Ensure
  id: Ensure
  parent: EventStore.Common.Utils
  children:
  - EventStore.Common.Utils.Ensure.Equal(System.Boolean,System.Boolean,System.String)
  - EventStore.Common.Utils.Ensure.Equal(System.Int32,System.Int32,System.String)
  - EventStore.Common.Utils.Ensure.Equal(System.Int64,System.Int64,System.String)
  - EventStore.Common.Utils.Ensure.Nonnegative(System.Int32,System.String)
  - EventStore.Common.Utils.Ensure.Nonnegative(System.Int64,System.String)
  - EventStore.Common.Utils.Ensure.NotEmptyGuid(System.Guid,System.String)
  - EventStore.Common.Utils.Ensure.NotNull``1(``0,System.String)
  - EventStore.Common.Utils.Ensure.NotNullOrEmpty(System.String,System.String)
  - EventStore.Common.Utils.Ensure.Positive(System.Int32,System.String)
  - EventStore.Common.Utils.Ensure.Positive(System.Int64,System.String)
  langs:
  - csharp
  - vb
  name: Ensure
  nameWithType: Ensure
  fullName: EventStore.Common.Utils.Ensure
  type: Class
  source:
    id: Ensure
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Utils/Ensure.cs
    startLine: 3
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public static class Ensure
    content.vb: Public Module Ensure
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Common.Utils.Ensure.NotNull``1(``0,System.String)
  commentId: M:EventStore.Common.Utils.Ensure.NotNull``1(``0,System.String)
  id: NotNull``1(``0,System.String)
  parent: EventStore.Common.Utils.Ensure
  langs:
  - csharp
  - vb
  name: NotNull<T>(T, String)
  nameWithType: Ensure.NotNull<T>(T, String)
  fullName: EventStore.Common.Utils.Ensure.NotNull<T>(T, System.String)
  type: Method
  source:
    id: NotNull
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Utils/Ensure.cs
    startLine: 4
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: >-
      public static void NotNull<T>(T argument, string argumentName)
          where T : class
    parameters:
    - id: argument
      type: '{T}'
    - id: argumentName
      type: System.String
    typeParameters:
    - id: T
    content.vb: Public Shared Sub NotNull(Of T As Class)(argument As T, argumentName As String)
  overload: EventStore.Common.Utils.Ensure.NotNull*
  nameWithType.vb: Ensure.NotNull(Of T)(T, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Common.Utils.Ensure.NotNull(Of T)(T, System.String)
  name.vb: NotNull(Of T)(T, String)
- uid: EventStore.Common.Utils.Ensure.NotNullOrEmpty(System.String,System.String)
  commentId: M:EventStore.Common.Utils.Ensure.NotNullOrEmpty(System.String,System.String)
  id: NotNullOrEmpty(System.String,System.String)
  parent: EventStore.Common.Utils.Ensure
  langs:
  - csharp
  - vb
  name: NotNullOrEmpty(String, String)
  nameWithType: Ensure.NotNullOrEmpty(String, String)
  fullName: EventStore.Common.Utils.Ensure.NotNullOrEmpty(System.String, System.String)
  type: Method
  source:
    id: NotNullOrEmpty
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Utils/Ensure.cs
    startLine: 9
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public static void NotNullOrEmpty(string argument, string argumentName)
    parameters:
    - id: argument
      type: System.String
    - id: argumentName
      type: System.String
    content.vb: Public Shared Sub NotNullOrEmpty(argument As String, argumentName As String)
  overload: EventStore.Common.Utils.Ensure.NotNullOrEmpty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Common.Utils.Ensure.Positive(System.Int32,System.String)
  commentId: M:EventStore.Common.Utils.Ensure.Positive(System.Int32,System.String)
  id: Positive(System.Int32,System.String)
  parent: EventStore.Common.Utils.Ensure
  langs:
  - csharp
  - vb
  name: Positive(Int32, String)
  nameWithType: Ensure.Positive(Int32, String)
  fullName: EventStore.Common.Utils.Ensure.Positive(System.Int32, System.String)
  type: Method
  source:
    id: Positive
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Utils/Ensure.cs
    startLine: 14
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public static void Positive(int number, string argumentName)
    parameters:
    - id: number
      type: System.Int32
    - id: argumentName
      type: System.String
    content.vb: Public Shared Sub Positive(number As Integer, argumentName As String)
  overload: EventStore.Common.Utils.Ensure.Positive*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Common.Utils.Ensure.Positive(System.Int64,System.String)
  commentId: M:EventStore.Common.Utils.Ensure.Positive(System.Int64,System.String)
  id: Positive(System.Int64,System.String)
  parent: EventStore.Common.Utils.Ensure
  langs:
  - csharp
  - vb
  name: Positive(Int64, String)
  nameWithType: Ensure.Positive(Int64, String)
  fullName: EventStore.Common.Utils.Ensure.Positive(System.Int64, System.String)
  type: Method
  source:
    id: Positive
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Utils/Ensure.cs
    startLine: 19
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public static void Positive(long number, string argumentName)
    parameters:
    - id: number
      type: System.Int64
    - id: argumentName
      type: System.String
    content.vb: Public Shared Sub Positive(number As Long, argumentName As String)
  overload: EventStore.Common.Utils.Ensure.Positive*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Common.Utils.Ensure.Nonnegative(System.Int64,System.String)
  commentId: M:EventStore.Common.Utils.Ensure.Nonnegative(System.Int64,System.String)
  id: Nonnegative(System.Int64,System.String)
  parent: EventStore.Common.Utils.Ensure
  langs:
  - csharp
  - vb
  name: Nonnegative(Int64, String)
  nameWithType: Ensure.Nonnegative(Int64, String)
  fullName: EventStore.Common.Utils.Ensure.Nonnegative(System.Int64, System.String)
  type: Method
  source:
    id: Nonnegative
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Utils/Ensure.cs
    startLine: 24
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public static void Nonnegative(long number, string argumentName)
    parameters:
    - id: number
      type: System.Int64
    - id: argumentName
      type: System.String
    content.vb: Public Shared Sub Nonnegative(number As Long, argumentName As String)
  overload: EventStore.Common.Utils.Ensure.Nonnegative*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Common.Utils.Ensure.Nonnegative(System.Int32,System.String)
  commentId: M:EventStore.Common.Utils.Ensure.Nonnegative(System.Int32,System.String)
  id: Nonnegative(System.Int32,System.String)
  parent: EventStore.Common.Utils.Ensure
  langs:
  - csharp
  - vb
  name: Nonnegative(Int32, String)
  nameWithType: Ensure.Nonnegative(Int32, String)
  fullName: EventStore.Common.Utils.Ensure.Nonnegative(System.Int32, System.String)
  type: Method
  source:
    id: Nonnegative
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Utils/Ensure.cs
    startLine: 29
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public static void Nonnegative(int number, string argumentName)
    parameters:
    - id: number
      type: System.Int32
    - id: argumentName
      type: System.String
    content.vb: Public Shared Sub Nonnegative(number As Integer, argumentName As String)
  overload: EventStore.Common.Utils.Ensure.Nonnegative*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Common.Utils.Ensure.NotEmptyGuid(System.Guid,System.String)
  commentId: M:EventStore.Common.Utils.Ensure.NotEmptyGuid(System.Guid,System.String)
  id: NotEmptyGuid(System.Guid,System.String)
  parent: EventStore.Common.Utils.Ensure
  langs:
  - csharp
  - vb
  name: NotEmptyGuid(Guid, String)
  nameWithType: Ensure.NotEmptyGuid(Guid, String)
  fullName: EventStore.Common.Utils.Ensure.NotEmptyGuid(System.Guid, System.String)
  type: Method
  source:
    id: NotEmptyGuid
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Utils/Ensure.cs
    startLine: 34
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public static void NotEmptyGuid(Guid guid, string argumentName)
    parameters:
    - id: guid
      type: System.Guid
    - id: argumentName
      type: System.String
    content.vb: Public Shared Sub NotEmptyGuid(guid As Guid, argumentName As String)
  overload: EventStore.Common.Utils.Ensure.NotEmptyGuid*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Common.Utils.Ensure.Equal(System.Int32,System.Int32,System.String)
  commentId: M:EventStore.Common.Utils.Ensure.Equal(System.Int32,System.Int32,System.String)
  id: Equal(System.Int32,System.Int32,System.String)
  parent: EventStore.Common.Utils.Ensure
  langs:
  - csharp
  - vb
  name: Equal(Int32, Int32, String)
  nameWithType: Ensure.Equal(Int32, Int32, String)
  fullName: EventStore.Common.Utils.Ensure.Equal(System.Int32, System.Int32, System.String)
  type: Method
  source:
    id: Equal
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Utils/Ensure.cs
    startLine: 39
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public static void Equal(int expected, int actual, string argumentName)
    parameters:
    - id: expected
      type: System.Int32
    - id: actual
      type: System.Int32
    - id: argumentName
      type: System.String
    content.vb: Public Shared Sub Equal(expected As Integer, actual As Integer, argumentName As String)
  overload: EventStore.Common.Utils.Ensure.Equal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Common.Utils.Ensure.Equal(System.Int64,System.Int64,System.String)
  commentId: M:EventStore.Common.Utils.Ensure.Equal(System.Int64,System.Int64,System.String)
  id: Equal(System.Int64,System.Int64,System.String)
  parent: EventStore.Common.Utils.Ensure
  langs:
  - csharp
  - vb
  name: Equal(Int64, Int64, String)
  nameWithType: Ensure.Equal(Int64, Int64, String)
  fullName: EventStore.Common.Utils.Ensure.Equal(System.Int64, System.Int64, System.String)
  type: Method
  source:
    id: Equal
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Utils/Ensure.cs
    startLine: 45
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public static void Equal(long expected, long actual, string argumentName)
    parameters:
    - id: expected
      type: System.Int64
    - id: actual
      type: System.Int64
    - id: argumentName
      type: System.String
    content.vb: Public Shared Sub Equal(expected As Long, actual As Long, argumentName As String)
  overload: EventStore.Common.Utils.Ensure.Equal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Common.Utils.Ensure.Equal(System.Boolean,System.Boolean,System.String)
  commentId: M:EventStore.Common.Utils.Ensure.Equal(System.Boolean,System.Boolean,System.String)
  id: Equal(System.Boolean,System.Boolean,System.String)
  parent: EventStore.Common.Utils.Ensure
  langs:
  - csharp
  - vb
  name: Equal(Boolean, Boolean, String)
  nameWithType: Ensure.Equal(Boolean, Boolean, String)
  fullName: EventStore.Common.Utils.Ensure.Equal(System.Boolean, System.Boolean, System.String)
  type: Method
  source:
    id: Equal
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Utils/Ensure.cs
    startLine: 51
  assemblies:
  - EventStore.Common
  namespace: EventStore.Common.Utils
  syntax:
    content: public static void Equal(bool expected, bool actual, string argumentName)
    parameters:
    - id: expected
      type: System.Boolean
    - id: actual
      type: System.Boolean
    - id: argumentName
      type: System.String
    content.vb: Public Shared Sub Equal(expected As Boolean, actual As Boolean, argumentName As String)
  overload: EventStore.Common.Utils.Ensure.Equal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Ensure.NotNull*
  commentId: Overload:EventStore.Common.Utils.Ensure.NotNull
  name: NotNull
  nameWithType: Ensure.NotNull
  fullName: EventStore.Common.Utils.Ensure.NotNull
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: EventStore.Common.Utils.Ensure.NotNullOrEmpty*
  commentId: Overload:EventStore.Common.Utils.Ensure.NotNullOrEmpty
  name: NotNullOrEmpty
  nameWithType: Ensure.NotNullOrEmpty
  fullName: EventStore.Common.Utils.Ensure.NotNullOrEmpty
- uid: EventStore.Common.Utils.Ensure.Positive*
  commentId: Overload:EventStore.Common.Utils.Ensure.Positive
  name: Positive
  nameWithType: Ensure.Positive
  fullName: EventStore.Common.Utils.Ensure.Positive
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Common.Utils.Ensure.Nonnegative*
  commentId: Overload:EventStore.Common.Utils.Ensure.Nonnegative
  name: Nonnegative
  nameWithType: Ensure.Nonnegative
  fullName: EventStore.Common.Utils.Ensure.Nonnegative
- uid: EventStore.Common.Utils.Ensure.NotEmptyGuid*
  commentId: Overload:EventStore.Common.Utils.Ensure.NotEmptyGuid
  name: NotEmptyGuid
  nameWithType: Ensure.NotEmptyGuid
  fullName: EventStore.Common.Utils.Ensure.NotEmptyGuid
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: EventStore.Common.Utils.Ensure.Equal*
  commentId: Overload:EventStore.Common.Utils.Ensure.Equal
  name: Equal
  nameWithType: Ensure.Equal
  fullName: EventStore.Common.Utils.Ensure.Equal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean

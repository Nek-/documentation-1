### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized
  commentId: T:EventStore.Core.Bus.InMemoryBusUnoptimized
  id: InMemoryBusUnoptimized
  parent: EventStore.Core.Bus
  children:
  - EventStore.Core.Bus.InMemoryBusUnoptimized.#ctor(System.String,System.Boolean,System.Nullable{TimeSpan})
  - EventStore.Core.Bus.InMemoryBusUnoptimized.CreateTest
  - EventStore.Core.Bus.InMemoryBusUnoptimized.DefaultSlowMessageThreshold
  - EventStore.Core.Bus.InMemoryBusUnoptimized.Handle(EventStore.Core.Messaging.Message)
  - EventStore.Core.Bus.InMemoryBusUnoptimized.Name
  - EventStore.Core.Bus.InMemoryBusUnoptimized.Publish(EventStore.Core.Messaging.Message)
  - EventStore.Core.Bus.InMemoryBusUnoptimized.Subscribe``1(EventStore.Core.Bus.IHandle{``0})
  - EventStore.Core.Bus.InMemoryBusUnoptimized.Unsubscribe``1(EventStore.Core.Bus.IHandle{``0})
  langs:
  - csharp
  - vb
  name: InMemoryBusUnoptimized
  nameWithType: InMemoryBusUnoptimized
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Bus/InMemoryBus.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: InMemoryBusUnoptimized
    path: ../EventStore/src/EventStore.Core/Bus/InMemoryBus.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  summary: "\nSynchronously dispatches messages to zero or more subscribers.\nSubscribers are responsible for handling exceptions\n"
  example: []
  syntax:
    content: 'public class InMemoryBusUnoptimized : object, IBus, ISubscriber, IPublisher, IHandle<Message>'
    content.vb: >-
      Public Class InMemoryBusUnoptimized
          Inherits Object
          Implements IBus, ISubscriber, IPublisher, IHandle(Of Message)
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Bus.IBus
  - EventStore.Core.Bus.ISubscriber
  - EventStore.Core.Bus.IPublisher
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Bus.InMemoryBusUnoptimized.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Bus.InMemoryBusUnoptimized.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized.CreateTest
  commentId: M:EventStore.Core.Bus.InMemoryBusUnoptimized.CreateTest
  id: CreateTest
  parent: EventStore.Core.Bus.InMemoryBusUnoptimized
  langs:
  - csharp
  - vb
  name: CreateTest()
  nameWithType: InMemoryBusUnoptimized.CreateTest()
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized.CreateTest()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/InMemoryBus.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CreateTest
    path: ../EventStore/src/EventStore.Core/Bus/InMemoryBus.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public static InMemoryBusUnoptimized CreateTest()
    return:
      type: EventStore.Core.Bus.InMemoryBusUnoptimized
    content.vb: Public Shared Function CreateTest As InMemoryBusUnoptimized
  overload: EventStore.Core.Bus.InMemoryBusUnoptimized.CreateTest*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized.DefaultSlowMessageThreshold
  commentId: F:EventStore.Core.Bus.InMemoryBusUnoptimized.DefaultSlowMessageThreshold
  id: DefaultSlowMessageThreshold
  parent: EventStore.Core.Bus.InMemoryBusUnoptimized
  langs:
  - csharp
  - vb
  name: DefaultSlowMessageThreshold
  nameWithType: InMemoryBusUnoptimized.DefaultSlowMessageThreshold
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized.DefaultSlowMessageThreshold
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Bus/InMemoryBus.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: DefaultSlowMessageThreshold
    path: ../EventStore/src/EventStore.Core/Bus/InMemoryBus.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public static readonly TimeSpan DefaultSlowMessageThreshold
    return:
      type: TimeSpan
    content.vb: Public Shared ReadOnly DefaultSlowMessageThreshold As TimeSpan
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized.Name
  commentId: P:EventStore.Core.Bus.InMemoryBusUnoptimized.Name
  id: Name
  parent: EventStore.Core.Bus.InMemoryBusUnoptimized
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: InMemoryBusUnoptimized.Name
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized.Name
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Bus/InMemoryBus.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Name
    path: ../EventStore/src/EventStore.Core/Bus/InMemoryBus.cs
    startLine: 23
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: EventStore.Core.Bus.InMemoryBusUnoptimized.Name*
  implements:
  - EventStore.Core.Bus.IBus.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized.#ctor(System.String,System.Boolean,System.Nullable{TimeSpan})
  commentId: M:EventStore.Core.Bus.InMemoryBusUnoptimized.#ctor(System.String,System.Boolean,System.Nullable{TimeSpan})
  id: '#ctor(System.String,System.Boolean,System.Nullable{TimeSpan})'
  parent: EventStore.Core.Bus.InMemoryBusUnoptimized
  langs:
  - csharp
  - vb
  name: InMemoryBusUnoptimized(String, Boolean, Nullable<TimeSpan>)
  nameWithType: InMemoryBusUnoptimized.InMemoryBusUnoptimized(String, Boolean, Nullable<TimeSpan>)
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized.InMemoryBusUnoptimized(System.String, System.Boolean, System.Nullable<TimeSpan>)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Bus/InMemoryBus.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Bus/InMemoryBus.cs
    startLine: 34
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public InMemoryBusUnoptimized(string name, bool watchSlowMsg = true, TimeSpan? slowMsgThreshold = null)
    parameters:
    - id: name
      type: System.String
    - id: watchSlowMsg
      type: System.Boolean
    - id: slowMsgThreshold
      type: System.Nullable{TimeSpan}
    content.vb: Public Sub New(name As String, watchSlowMsg As Boolean = True, slowMsgThreshold As TimeSpan? = Nothing)
  overload: EventStore.Core.Bus.InMemoryBusUnoptimized.#ctor*
  nameWithType.vb: InMemoryBusUnoptimized.InMemoryBusUnoptimized(String, Boolean, Nullable(Of TimeSpan))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Bus.InMemoryBusUnoptimized.InMemoryBusUnoptimized(System.String, System.Boolean, System.Nullable(Of TimeSpan))
  name.vb: InMemoryBusUnoptimized(String, Boolean, Nullable(Of TimeSpan))
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized.Subscribe``1(EventStore.Core.Bus.IHandle{``0})
  commentId: M:EventStore.Core.Bus.InMemoryBusUnoptimized.Subscribe``1(EventStore.Core.Bus.IHandle{``0})
  id: Subscribe``1(EventStore.Core.Bus.IHandle{``0})
  parent: EventStore.Core.Bus.InMemoryBusUnoptimized
  langs:
  - csharp
  - vb
  name: Subscribe<T>(IHandle<T>)
  nameWithType: InMemoryBusUnoptimized.Subscribe<T>(IHandle<T>)
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized.Subscribe<T>(EventStore.Core.Bus.IHandle<T>)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/InMemoryBus.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Subscribe
    path: ../EventStore/src/EventStore.Core/Bus/InMemoryBus.cs
    startLine: 42
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: >-
      public void Subscribe<T>(IHandle<T> handler)
          where T : Message
    parameters:
    - id: handler
      type: EventStore.Core.Bus.IHandle{{T}}
    typeParameters:
    - id: T
    content.vb: Public Sub Subscribe(Of T As Message)(handler As IHandle(Of T))
  overload: EventStore.Core.Bus.InMemoryBusUnoptimized.Subscribe*
  implements:
  - EventStore.Core.Bus.ISubscriber.Subscribe``1(EventStore.Core.Bus.IHandle{{T}})
  nameWithType.vb: InMemoryBusUnoptimized.Subscribe(Of T)(IHandle(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Bus.InMemoryBusUnoptimized.Subscribe(Of T)(EventStore.Core.Bus.IHandle(Of T))
  name.vb: Subscribe(Of T)(IHandle(Of T))
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized.Unsubscribe``1(EventStore.Core.Bus.IHandle{``0})
  commentId: M:EventStore.Core.Bus.InMemoryBusUnoptimized.Unsubscribe``1(EventStore.Core.Bus.IHandle{``0})
  id: Unsubscribe``1(EventStore.Core.Bus.IHandle{``0})
  parent: EventStore.Core.Bus.InMemoryBusUnoptimized
  langs:
  - csharp
  - vb
  name: Unsubscribe<T>(IHandle<T>)
  nameWithType: InMemoryBusUnoptimized.Unsubscribe<T>(IHandle<T>)
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized.Unsubscribe<T>(EventStore.Core.Bus.IHandle<T>)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/InMemoryBus.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Unsubscribe
    path: ../EventStore/src/EventStore.Core/Bus/InMemoryBus.cs
    startLine: 57
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: >-
      public void Unsubscribe<T>(IHandle<T> handler)
          where T : Message
    parameters:
    - id: handler
      type: EventStore.Core.Bus.IHandle{{T}}
    typeParameters:
    - id: T
    content.vb: Public Sub Unsubscribe(Of T As Message)(handler As IHandle(Of T))
  overload: EventStore.Core.Bus.InMemoryBusUnoptimized.Unsubscribe*
  implements:
  - EventStore.Core.Bus.ISubscriber.Unsubscribe``1(EventStore.Core.Bus.IHandle{{T}})
  nameWithType.vb: InMemoryBusUnoptimized.Unsubscribe(Of T)(IHandle(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Bus.InMemoryBusUnoptimized.Unsubscribe(Of T)(EventStore.Core.Bus.IHandle(Of T))
  name.vb: Unsubscribe(Of T)(IHandle(Of T))
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized.Handle(EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Bus.InMemoryBusUnoptimized.Handle(EventStore.Core.Messaging.Message)
  id: Handle(EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Bus.InMemoryBusUnoptimized
  langs:
  - csharp
  - vb
  name: Handle(Message)
  nameWithType: InMemoryBusUnoptimized.Handle(Message)
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized.Handle(EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/InMemoryBus.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Handle
    path: ../EventStore/src/EventStore.Core/Bus/InMemoryBus.cs
    startLine: 70
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void Handle(Message message)
    parameters:
    - id: message
      type: EventStore.Core.Messaging.Message
    content.vb: Public Sub Handle(message As Message)
  overload: EventStore.Core.Bus.InMemoryBusUnoptimized.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}.Handle(EventStore.Core.Messaging.Message)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized.Publish(EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Bus.InMemoryBusUnoptimized.Publish(EventStore.Core.Messaging.Message)
  id: Publish(EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Bus.InMemoryBusUnoptimized
  langs:
  - csharp
  - vb
  name: Publish(Message)
  nameWithType: InMemoryBusUnoptimized.Publish(Message)
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized.Publish(EventStore.Core.Messaging.Message)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/InMemoryBus.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Publish
    path: ../EventStore/src/EventStore.Core/Bus/InMemoryBus.cs
    startLine: 74
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void Publish(Message message)
    parameters:
    - id: message
      type: EventStore.Core.Messaging.Message
    content.vb: Public Sub Publish(message As Message)
  overload: EventStore.Core.Bus.InMemoryBusUnoptimized.Publish*
  implements:
  - EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Bus.IBus
  commentId: T:EventStore.Core.Bus.IBus
  parent: EventStore.Core.Bus
  name: IBus
  nameWithType: IBus
  fullName: EventStore.Core.Bus.IBus
- uid: EventStore.Core.Bus.ISubscriber
  commentId: T:EventStore.Core.Bus.ISubscriber
  parent: EventStore.Core.Bus
  name: ISubscriber
  nameWithType: ISubscriber
  fullName: EventStore.Core.Bus.ISubscriber
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<Message>
  nameWithType: IHandle<Message>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messaging.Message>
  nameWithType.vb: IHandle(Of Message)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messaging.Message)
  name.vb: IHandle(Of Message)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<InMemoryBusUnoptimized>()
  nameWithType: ProtobufExtensions.Serialize<InMemoryBusUnoptimized>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Bus.InMemoryBusUnoptimized>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of InMemoryBusUnoptimized)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Bus.InMemoryBusUnoptimized)()
  name.vb: Serialize(Of InMemoryBusUnoptimized)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<InMemoryBusUnoptimized>
    nameWithType: ProtobufExtensions.Serialize<InMemoryBusUnoptimized>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Bus.InMemoryBusUnoptimized>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of InMemoryBusUnoptimized)
    nameWithType: ProtobufExtensions.Serialize(Of InMemoryBusUnoptimized)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Bus.InMemoryBusUnoptimized)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<InMemoryBusUnoptimized>()
  nameWithType: ProtobufExtensions.SerializeToArray<InMemoryBusUnoptimized>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Bus.InMemoryBusUnoptimized>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of InMemoryBusUnoptimized)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Bus.InMemoryBusUnoptimized)()
  name.vb: SerializeToArray(Of InMemoryBusUnoptimized)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<InMemoryBusUnoptimized>
    nameWithType: ProtobufExtensions.SerializeToArray<InMemoryBusUnoptimized>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Bus.InMemoryBusUnoptimized>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of InMemoryBusUnoptimized)
    nameWithType: ProtobufExtensions.SerializeToArray(Of InMemoryBusUnoptimized)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Bus.InMemoryBusUnoptimized)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized.CreateTest*
  commentId: Overload:EventStore.Core.Bus.InMemoryBusUnoptimized.CreateTest
  name: CreateTest
  nameWithType: InMemoryBusUnoptimized.CreateTest
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized.CreateTest
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized
  commentId: T:EventStore.Core.Bus.InMemoryBusUnoptimized
  parent: EventStore.Core.Bus
  name: InMemoryBusUnoptimized
  nameWithType: InMemoryBusUnoptimized
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized.Name*
  commentId: Overload:EventStore.Core.Bus.InMemoryBusUnoptimized.Name
  name: Name
  nameWithType: InMemoryBusUnoptimized.Name
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized.Name
- uid: EventStore.Core.Bus.IBus.Name
  commentId: P:EventStore.Core.Bus.IBus.Name
  parent: EventStore.Core.Bus.IBus
  name: Name
  nameWithType: IBus.Name
  fullName: EventStore.Core.Bus.IBus.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized.#ctor*
  commentId: Overload:EventStore.Core.Bus.InMemoryBusUnoptimized.#ctor
  name: InMemoryBusUnoptimized
  nameWithType: InMemoryBusUnoptimized.InMemoryBusUnoptimized
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized.InMemoryBusUnoptimized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{TimeSpan}
  commentId: '!:System.Nullable{TimeSpan}'
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized.Subscribe*
  commentId: Overload:EventStore.Core.Bus.InMemoryBusUnoptimized.Subscribe
  name: Subscribe
  nameWithType: InMemoryBusUnoptimized.Subscribe
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized.Subscribe
- uid: EventStore.Core.Bus.ISubscriber.Subscribe``1(EventStore.Core.Bus.IHandle{{T}})
  commentId: M:EventStore.Core.Bus.ISubscriber.Subscribe``1(EventStore.Core.Bus.IHandle{``0})
  parent: EventStore.Core.Bus.ISubscriber
  definition: EventStore.Core.Bus.ISubscriber.Subscribe``1(EventStore.Core.Bus.IHandle{``0})
  name: Subscribe<T>(IHandle<T>)
  nameWithType: ISubscriber.Subscribe<T>(IHandle<T>)
  fullName: EventStore.Core.Bus.ISubscriber.Subscribe<T>(EventStore.Core.Bus.IHandle<T>)
  nameWithType.vb: ISubscriber.Subscribe(Of T)(IHandle(Of T))
  fullName.vb: EventStore.Core.Bus.ISubscriber.Subscribe(Of T)(EventStore.Core.Bus.IHandle(Of T))
  name.vb: Subscribe(Of T)(IHandle(Of T))
  spec.csharp:
  - uid: EventStore.Core.Bus.ISubscriber.Subscribe``1(EventStore.Core.Bus.IHandle{``0})
    name: Subscribe<T>
    nameWithType: ISubscriber.Subscribe<T>
    fullName: EventStore.Core.Bus.ISubscriber.Subscribe<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.ISubscriber.Subscribe``1(EventStore.Core.Bus.IHandle{``0})
    name: Subscribe(Of T)
    nameWithType: ISubscriber.Subscribe(Of T)
    fullName: EventStore.Core.Bus.ISubscriber.Subscribe(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{{T}}
  commentId: T:EventStore.Core.Bus.IHandle{`0}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.ISubscriber.Subscribe``1(EventStore.Core.Bus.IHandle{``0})
  commentId: M:EventStore.Core.Bus.ISubscriber.Subscribe``1(EventStore.Core.Bus.IHandle{``0})
  name: Subscribe<T>(IHandle<T>)
  nameWithType: ISubscriber.Subscribe<T>(IHandle<T>)
  fullName: EventStore.Core.Bus.ISubscriber.Subscribe<T>(EventStore.Core.Bus.IHandle<T>)
  nameWithType.vb: ISubscriber.Subscribe(Of T)(IHandle(Of T))
  fullName.vb: EventStore.Core.Bus.ISubscriber.Subscribe(Of T)(EventStore.Core.Bus.IHandle(Of T))
  name.vb: Subscribe(Of T)(IHandle(Of T))
  spec.csharp:
  - uid: EventStore.Core.Bus.ISubscriber.Subscribe``1(EventStore.Core.Bus.IHandle{``0})
    name: Subscribe<T>
    nameWithType: ISubscriber.Subscribe<T>
    fullName: EventStore.Core.Bus.ISubscriber.Subscribe<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.ISubscriber.Subscribe``1(EventStore.Core.Bus.IHandle{``0})
    name: Subscribe(Of T)
    nameWithType: ISubscriber.Subscribe(Of T)
    fullName: EventStore.Core.Bus.ISubscriber.Subscribe(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized.Unsubscribe*
  commentId: Overload:EventStore.Core.Bus.InMemoryBusUnoptimized.Unsubscribe
  name: Unsubscribe
  nameWithType: InMemoryBusUnoptimized.Unsubscribe
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized.Unsubscribe
- uid: EventStore.Core.Bus.ISubscriber.Unsubscribe``1(EventStore.Core.Bus.IHandle{{T}})
  commentId: M:EventStore.Core.Bus.ISubscriber.Unsubscribe``1(EventStore.Core.Bus.IHandle{``0})
  parent: EventStore.Core.Bus.ISubscriber
  definition: EventStore.Core.Bus.ISubscriber.Unsubscribe``1(EventStore.Core.Bus.IHandle{``0})
  name: Unsubscribe<T>(IHandle<T>)
  nameWithType: ISubscriber.Unsubscribe<T>(IHandle<T>)
  fullName: EventStore.Core.Bus.ISubscriber.Unsubscribe<T>(EventStore.Core.Bus.IHandle<T>)
  nameWithType.vb: ISubscriber.Unsubscribe(Of T)(IHandle(Of T))
  fullName.vb: EventStore.Core.Bus.ISubscriber.Unsubscribe(Of T)(EventStore.Core.Bus.IHandle(Of T))
  name.vb: Unsubscribe(Of T)(IHandle(Of T))
  spec.csharp:
  - uid: EventStore.Core.Bus.ISubscriber.Unsubscribe``1(EventStore.Core.Bus.IHandle{``0})
    name: Unsubscribe<T>
    nameWithType: ISubscriber.Unsubscribe<T>
    fullName: EventStore.Core.Bus.ISubscriber.Unsubscribe<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.ISubscriber.Unsubscribe``1(EventStore.Core.Bus.IHandle{``0})
    name: Unsubscribe(Of T)
    nameWithType: ISubscriber.Unsubscribe(Of T)
    fullName: EventStore.Core.Bus.ISubscriber.Unsubscribe(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.ISubscriber.Unsubscribe``1(EventStore.Core.Bus.IHandle{``0})
  commentId: M:EventStore.Core.Bus.ISubscriber.Unsubscribe``1(EventStore.Core.Bus.IHandle{``0})
  name: Unsubscribe<T>(IHandle<T>)
  nameWithType: ISubscriber.Unsubscribe<T>(IHandle<T>)
  fullName: EventStore.Core.Bus.ISubscriber.Unsubscribe<T>(EventStore.Core.Bus.IHandle<T>)
  nameWithType.vb: ISubscriber.Unsubscribe(Of T)(IHandle(Of T))
  fullName.vb: EventStore.Core.Bus.ISubscriber.Unsubscribe(Of T)(EventStore.Core.Bus.IHandle(Of T))
  name.vb: Unsubscribe(Of T)(IHandle(Of T))
  spec.csharp:
  - uid: EventStore.Core.Bus.ISubscriber.Unsubscribe``1(EventStore.Core.Bus.IHandle{``0})
    name: Unsubscribe<T>
    nameWithType: ISubscriber.Unsubscribe<T>
    fullName: EventStore.Core.Bus.ISubscriber.Unsubscribe<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.ISubscriber.Unsubscribe``1(EventStore.Core.Bus.IHandle{``0})
    name: Unsubscribe(Of T)
    nameWithType: ISubscriber.Unsubscribe(Of T)
    fullName: EventStore.Core.Bus.ISubscriber.Unsubscribe(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized.Handle*
  commentId: Overload:EventStore.Core.Bus.InMemoryBusUnoptimized.Handle
  name: Handle
  nameWithType: InMemoryBusUnoptimized.Handle
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}.Handle(EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}.Handle(EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(Message)
  nameWithType: IHandle<Message>.Handle(Message)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messaging.Message>.Handle(EventStore.Core.Messaging.Message)
  nameWithType.vb: IHandle(Of Message).Handle(Message)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messaging.Message).Handle(EventStore.Core.Messaging.Message)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<Message>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messaging.Message>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of Message).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messaging.Message).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Core.Bus.InMemoryBusUnoptimized.Publish*
  commentId: Overload:EventStore.Core.Bus.InMemoryBusUnoptimized.Publish
  name: Publish
  nameWithType: InMemoryBusUnoptimized.Publish
  fullName: EventStore.Core.Bus.InMemoryBusUnoptimized.Publish
- uid: EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Bus.IPublisher
  name: Publish(Message)
  nameWithType: IPublisher.Publish(Message)
  fullName: EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
  spec.csharp:
  - uid: EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
    name: Publish
    nameWithType: IPublisher.Publish
    fullName: EventStore.Core.Bus.IPublisher.Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
    name: Publish
    nameWithType: IPublisher.Publish
    fullName: EventStore.Core.Bus.IPublisher.Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )

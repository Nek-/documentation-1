### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Bus.QueueMonitor
  commentId: T:EventStore.Core.Bus.QueueMonitor
  id: QueueMonitor
  parent: EventStore.Core.Bus
  children:
  - EventStore.Core.Bus.QueueMonitor.Default
  - EventStore.Core.Bus.QueueMonitor.GetStats
  - EventStore.Core.Bus.QueueMonitor.Register(EventStore.Core.Bus.IMonitoredQueue)
  - EventStore.Core.Bus.QueueMonitor.Unregister(EventStore.Core.Bus.IMonitoredQueue)
  langs:
  - csharp
  - vb
  name: QueueMonitor
  nameWithType: QueueMonitor
  fullName: EventStore.Core.Bus.QueueMonitor
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueMonitor.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: QueueMonitor
    path: ../EventStore/src/EventStore.Core/Bus/QueueMonitor.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: 'public class QueueMonitor : object'
    content.vb: >-
      Public Class QueueMonitor
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Bus.QueueMonitor.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Bus.QueueMonitor.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Bus.QueueMonitor.Default
  commentId: F:EventStore.Core.Bus.QueueMonitor.Default
  id: Default
  parent: EventStore.Core.Bus.QueueMonitor
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: QueueMonitor.Default
  fullName: EventStore.Core.Bus.QueueMonitor.Default
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueMonitor.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Default
    path: ../EventStore/src/EventStore.Core/Bus/QueueMonitor.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public static readonly QueueMonitor Default
    return:
      type: EventStore.Core.Bus.QueueMonitor
    content.vb: Public Shared ReadOnly Default As QueueMonitor
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Core.Bus.QueueMonitor.Register(EventStore.Core.Bus.IMonitoredQueue)
  commentId: M:EventStore.Core.Bus.QueueMonitor.Register(EventStore.Core.Bus.IMonitoredQueue)
  id: Register(EventStore.Core.Bus.IMonitoredQueue)
  parent: EventStore.Core.Bus.QueueMonitor
  langs:
  - csharp
  - vb
  name: Register(IMonitoredQueue)
  nameWithType: QueueMonitor.Register(IMonitoredQueue)
  fullName: EventStore.Core.Bus.QueueMonitor.Register(EventStore.Core.Bus.IMonitoredQueue)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueMonitor.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Register
    path: ../EventStore/src/EventStore.Core/Bus/QueueMonitor.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void Register(IMonitoredQueue monitoredQueue)
    parameters:
    - id: monitoredQueue
      type: EventStore.Core.Bus.IMonitoredQueue
    content.vb: Public Sub Register(monitoredQueue As IMonitoredQueue)
  overload: EventStore.Core.Bus.QueueMonitor.Register*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.QueueMonitor.Unregister(EventStore.Core.Bus.IMonitoredQueue)
  commentId: M:EventStore.Core.Bus.QueueMonitor.Unregister(EventStore.Core.Bus.IMonitoredQueue)
  id: Unregister(EventStore.Core.Bus.IMonitoredQueue)
  parent: EventStore.Core.Bus.QueueMonitor
  langs:
  - csharp
  - vb
  name: Unregister(IMonitoredQueue)
  nameWithType: QueueMonitor.Unregister(IMonitoredQueue)
  fullName: EventStore.Core.Bus.QueueMonitor.Unregister(EventStore.Core.Bus.IMonitoredQueue)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueMonitor.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Unregister
    path: ../EventStore/src/EventStore.Core/Bus/QueueMonitor.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void Unregister(IMonitoredQueue monitoredQueue)
    parameters:
    - id: monitoredQueue
      type: EventStore.Core.Bus.IMonitoredQueue
    content.vb: Public Sub Unregister(monitoredQueue As IMonitoredQueue)
  overload: EventStore.Core.Bus.QueueMonitor.Unregister*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.QueueMonitor.GetStats
  commentId: M:EventStore.Core.Bus.QueueMonitor.GetStats
  id: GetStats
  parent: EventStore.Core.Bus.QueueMonitor
  langs:
  - csharp
  - vb
  name: GetStats()
  nameWithType: QueueMonitor.GetStats()
  fullName: EventStore.Core.Bus.QueueMonitor.GetStats()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Bus/QueueMonitor.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetStats
    path: ../EventStore/src/EventStore.Core/Bus/QueueMonitor.cs
    startLine: 27
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public QueueStats[] GetStats()
    return:
      type: EventStore.Core.Services.Monitoring.Stats.QueueStats[]
    content.vb: Public Function GetStats As QueueStats()
  overload: EventStore.Core.Bus.QueueMonitor.GetStats*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.QueueMonitor.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<QueueMonitor>()
  nameWithType: ProtobufExtensions.Serialize<QueueMonitor>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Bus.QueueMonitor>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of QueueMonitor)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Bus.QueueMonitor)()
  name.vb: Serialize(Of QueueMonitor)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<QueueMonitor>
    nameWithType: ProtobufExtensions.Serialize<QueueMonitor>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Bus.QueueMonitor>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of QueueMonitor)
    nameWithType: ProtobufExtensions.Serialize(Of QueueMonitor)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Bus.QueueMonitor)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.QueueMonitor.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<QueueMonitor>()
  nameWithType: ProtobufExtensions.SerializeToArray<QueueMonitor>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Bus.QueueMonitor>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of QueueMonitor)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Bus.QueueMonitor)()
  name.vb: SerializeToArray(Of QueueMonitor)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<QueueMonitor>
    nameWithType: ProtobufExtensions.SerializeToArray<QueueMonitor>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Bus.QueueMonitor>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of QueueMonitor)
    nameWithType: ProtobufExtensions.SerializeToArray(Of QueueMonitor)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Bus.QueueMonitor)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Bus.QueueMonitor
  commentId: T:EventStore.Core.Bus.QueueMonitor
  parent: EventStore.Core.Bus
  name: QueueMonitor
  nameWithType: QueueMonitor
  fullName: EventStore.Core.Bus.QueueMonitor
- uid: EventStore.Core.Bus.QueueMonitor.Register*
  commentId: Overload:EventStore.Core.Bus.QueueMonitor.Register
  name: Register
  nameWithType: QueueMonitor.Register
  fullName: EventStore.Core.Bus.QueueMonitor.Register
- uid: EventStore.Core.Bus.IMonitoredQueue
  commentId: T:EventStore.Core.Bus.IMonitoredQueue
  parent: EventStore.Core.Bus
  name: IMonitoredQueue
  nameWithType: IMonitoredQueue
  fullName: EventStore.Core.Bus.IMonitoredQueue
- uid: EventStore.Core.Bus.QueueMonitor.Unregister*
  commentId: Overload:EventStore.Core.Bus.QueueMonitor.Unregister
  name: Unregister
  nameWithType: QueueMonitor.Unregister
  fullName: EventStore.Core.Bus.QueueMonitor.Unregister
- uid: EventStore.Core.Bus.QueueMonitor.GetStats*
  commentId: Overload:EventStore.Core.Bus.QueueMonitor.GetStats
  name: GetStats
  nameWithType: QueueMonitor.GetStats
  fullName: EventStore.Core.Bus.QueueMonitor.GetStats
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats[]
  isExternal: true
  name: QueueStats[]
  nameWithType: QueueStats[]
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats[]
  nameWithType.vb: QueueStats()
  fullName.vb: EventStore.Core.Services.Monitoring.Stats.QueueStats()
  name.vb: QueueStats()
  spec.csharp:
  - uid: EventStore.Core.Services.Monitoring.Stats.QueueStats
    name: QueueStats
    nameWithType: QueueStats
    fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Services.Monitoring.Stats.QueueStats
    name: QueueStats
    nameWithType: QueueStats
    fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats
  - name: ()
    nameWithType: ()
    fullName: ()

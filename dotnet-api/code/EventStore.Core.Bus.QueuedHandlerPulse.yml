### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Bus.QueuedHandlerPulse
  commentId: T:EventStore.Core.Bus.QueuedHandlerPulse
  id: QueuedHandlerPulse
  parent: EventStore.Core.Bus
  children:
  - EventStore.Core.Bus.QueuedHandlerPulse.#ctor(EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,System.Boolean,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.String)
  - EventStore.Core.Bus.QueuedHandlerPulse.GetStatistics
  - EventStore.Core.Bus.QueuedHandlerPulse.Handle(EventStore.Core.Messaging.Message)
  - EventStore.Core.Bus.QueuedHandlerPulse.MessageCount
  - EventStore.Core.Bus.QueuedHandlerPulse.Name
  - EventStore.Core.Bus.QueuedHandlerPulse.Publish(EventStore.Core.Messaging.Message)
  - EventStore.Core.Bus.QueuedHandlerPulse.RequestStop
  - EventStore.Core.Bus.QueuedHandlerPulse.Start
  - EventStore.Core.Bus.QueuedHandlerPulse.Stop
  langs:
  - csharp
  - vb
  name: QueuedHandlerPulse
  nameWithType: QueuedHandlerPulse
  fullName: EventStore.Core.Bus.QueuedHandlerPulse
  type: Class
  source:
    id: QueuedHandlerPulse
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Bus/QueuedHandlerPulse.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  summary: "\nLightweight in-memory queue with a separate thread in which it passes messages\nto the consumer. It also tracks statistics about the message processing to help\nin identifying bottlenecks\n"
  example: []
  syntax:
    content: 'public class QueuedHandlerPulse : IQueuedHandler, IHandle<Message>, IPublisher, IMonitoredQueue, IThreadSafePublisher'
    content.vb: >-
      Public Class QueuedHandlerPulse
          Implements IQueuedHandler, IHandle(Of Message), IPublisher, IMonitoredQueue, IThreadSafePublisher
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Bus.IQueuedHandler
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}
  - EventStore.Core.Bus.IPublisher
  - EventStore.Core.Bus.IMonitoredQueue
  - EventStore.Core.Bus.IThreadSafePublisher
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}.EventStore.Core.Bus.HandleExtensions.WidenFrom``2
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}.EventStore.Core.Bus.HandleExtensions.NarrowTo``2
  - EventStore.Core.Bus.QueuedHandlerPulse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Bus.QueuedHandlerPulse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Bus.QueuedHandlerPulse.MessageCount
  commentId: P:EventStore.Core.Bus.QueuedHandlerPulse.MessageCount
  id: MessageCount
  parent: EventStore.Core.Bus.QueuedHandlerPulse
  langs:
  - csharp
  - vb
  name: MessageCount
  nameWithType: QueuedHandlerPulse.MessageCount
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.MessageCount
  type: Property
  source:
    id: MessageCount
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Bus/QueuedHandlerPulse.cs
    startLine: 20
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public int MessageCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MessageCount As Integer
  overload: EventStore.Core.Bus.QueuedHandlerPulse.MessageCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Bus.QueuedHandlerPulse.Name
  commentId: P:EventStore.Core.Bus.QueuedHandlerPulse.Name
  id: Name
  parent: EventStore.Core.Bus.QueuedHandlerPulse
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: QueuedHandlerPulse.Name
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.Name
  type: Property
  source:
    id: Name
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Bus/QueuedHandlerPulse.cs
    startLine: 24
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: EventStore.Core.Bus.QueuedHandlerPulse.Name*
  implements:
  - EventStore.Core.Bus.IQueuedHandler.Name
  - EventStore.Core.Bus.IMonitoredQueue.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Bus.QueuedHandlerPulse.#ctor(EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,System.Boolean,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.String)
  commentId: M:EventStore.Core.Bus.QueuedHandlerPulse.#ctor(EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,System.Boolean,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.String)
  id: '#ctor(EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message},System.String,System.Boolean,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.String)'
  parent: EventStore.Core.Bus.QueuedHandlerPulse
  langs:
  - csharp
  - vb
  name: QueuedHandlerPulse(IHandle<Message>, String, Boolean, Nullable<TimeSpan>, Nullable<TimeSpan>, String)
  nameWithType: QueuedHandlerPulse.QueuedHandlerPulse(IHandle<Message>, String, Boolean, Nullable<TimeSpan>, Nullable<TimeSpan>, String)
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.QueuedHandlerPulse(EventStore.Core.Bus.IHandle<EventStore.Core.Messaging.Message>, System.String, System.Boolean, System.Nullable<System.TimeSpan>, System.Nullable<System.TimeSpan>, System.String)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Bus/QueuedHandlerPulse.cs
    startLine: 49
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public QueuedHandlerPulse(IHandle<Message> consumer, string name, bool watchSlowMsg = true, TimeSpan? slowMsgThreshold = default(TimeSpan? ), TimeSpan? threadStopWaitTimeout = default(TimeSpan? ), string groupName = null)
    parameters:
    - id: consumer
      type: EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}
    - id: name
      type: System.String
    - id: watchSlowMsg
      type: System.Boolean
    - id: slowMsgThreshold
      type: System.Nullable{System.TimeSpan}
    - id: threadStopWaitTimeout
      type: System.Nullable{System.TimeSpan}
    - id: groupName
      type: System.String
    content.vb: Public Sub New(consumer As IHandle(Of Message), name As String, watchSlowMsg As Boolean = True, slowMsgThreshold As TimeSpan? = Nothing, threadStopWaitTimeout As TimeSpan? = Nothing, groupName As String = Nothing)
  overload: EventStore.Core.Bus.QueuedHandlerPulse.#ctor*
  nameWithType.vb: QueuedHandlerPulse.QueuedHandlerPulse(IHandle(Of Message), String, Boolean, Nullable(Of TimeSpan), Nullable(Of TimeSpan), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Bus.QueuedHandlerPulse.QueuedHandlerPulse(EventStore.Core.Bus.IHandle(Of EventStore.Core.Messaging.Message), System.String, System.Boolean, System.Nullable(Of System.TimeSpan), System.Nullable(Of System.TimeSpan), System.String)
  name.vb: QueuedHandlerPulse(IHandle(Of Message), String, Boolean, Nullable(Of TimeSpan), Nullable(Of TimeSpan), String)
- uid: EventStore.Core.Bus.QueuedHandlerPulse.Start
  commentId: M:EventStore.Core.Bus.QueuedHandlerPulse.Start
  id: Start
  parent: EventStore.Core.Bus.QueuedHandlerPulse
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: QueuedHandlerPulse.Start()
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.Start()
  type: Method
  source:
    id: Start
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Bus/QueuedHandlerPulse.cs
    startLine: 67
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public Task Start()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function Start As Task
  overload: EventStore.Core.Bus.QueuedHandlerPulse.Start*
  implements:
  - EventStore.Core.Bus.IQueuedHandler.Start
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.QueuedHandlerPulse.Stop
  commentId: M:EventStore.Core.Bus.QueuedHandlerPulse.Stop
  id: Stop
  parent: EventStore.Core.Bus.QueuedHandlerPulse
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: QueuedHandlerPulse.Stop()
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.Stop()
  type: Method
  source:
    id: Stop
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Bus/QueuedHandlerPulse.cs
    startLine: 80
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  overload: EventStore.Core.Bus.QueuedHandlerPulse.Stop*
  implements:
  - EventStore.Core.Bus.IQueuedHandler.Stop
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.QueuedHandlerPulse.RequestStop
  commentId: M:EventStore.Core.Bus.QueuedHandlerPulse.RequestStop
  id: RequestStop
  parent: EventStore.Core.Bus.QueuedHandlerPulse
  langs:
  - csharp
  - vb
  name: RequestStop()
  nameWithType: QueuedHandlerPulse.RequestStop()
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.RequestStop()
  type: Method
  source:
    id: RequestStop
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Bus/QueuedHandlerPulse.cs
    startLine: 86
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void RequestStop()
    content.vb: Public Sub RequestStop
  overload: EventStore.Core.Bus.QueuedHandlerPulse.RequestStop*
  implements:
  - EventStore.Core.Bus.IQueuedHandler.RequestStop
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.QueuedHandlerPulse.Publish(EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Bus.QueuedHandlerPulse.Publish(EventStore.Core.Messaging.Message)
  id: Publish(EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Bus.QueuedHandlerPulse
  langs:
  - csharp
  - vb
  name: Publish(Message)
  nameWithType: QueuedHandlerPulse.Publish(Message)
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.Publish(EventStore.Core.Messaging.Message)
  type: Method
  source:
    id: Publish
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Bus/QueuedHandlerPulse.cs
    startLine: 160
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void Publish(Message message)
    parameters:
    - id: message
      type: EventStore.Core.Messaging.Message
    content.vb: Public Sub Publish(message As Message)
  overload: EventStore.Core.Bus.QueuedHandlerPulse.Publish*
  implements:
  - EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.QueuedHandlerPulse.Handle(EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Bus.QueuedHandlerPulse.Handle(EventStore.Core.Messaging.Message)
  id: Handle(EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Bus.QueuedHandlerPulse
  langs:
  - csharp
  - vb
  name: Handle(Message)
  nameWithType: QueuedHandlerPulse.Handle(Message)
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.Handle(EventStore.Core.Messaging.Message)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Bus/QueuedHandlerPulse.cs
    startLine: 173
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public void Handle(Message message)
    parameters:
    - id: message
      type: EventStore.Core.Messaging.Message
    content.vb: Public Sub Handle(message As Message)
  overload: EventStore.Core.Bus.QueuedHandlerPulse.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}.Handle(EventStore.Core.Messaging.Message)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Bus.QueuedHandlerPulse.GetStatistics
  commentId: M:EventStore.Core.Bus.QueuedHandlerPulse.GetStatistics
  id: GetStatistics
  parent: EventStore.Core.Bus.QueuedHandlerPulse
  langs:
  - csharp
  - vb
  name: GetStatistics()
  nameWithType: QueuedHandlerPulse.GetStatistics()
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.GetStatistics()
  type: Method
  source:
    id: GetStatistics
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Bus/QueuedHandlerPulse.cs
    startLine: 177
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Bus
  syntax:
    content: public QueueStats GetStatistics()
    return:
      type: EventStore.Core.Services.Monitoring.Stats.QueueStats
    content.vb: Public Function GetStatistics As QueueStats
  overload: EventStore.Core.Bus.QueuedHandlerPulse.GetStatistics*
  implements:
  - EventStore.Core.Bus.IQueuedHandler.GetStatistics
  - EventStore.Core.Bus.IMonitoredQueue.GetStatistics
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Bus.IQueuedHandler
  commentId: T:EventStore.Core.Bus.IQueuedHandler
  parent: EventStore.Core.Bus
  name: IQueuedHandler
  nameWithType: IQueuedHandler
  fullName: EventStore.Core.Bus.IQueuedHandler
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<Message>
  nameWithType: IHandle<Message>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messaging.Message>
  nameWithType.vb: IHandle(Of Message)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messaging.Message)
  name.vb: IHandle(Of Message)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IPublisher
  commentId: T:EventStore.Core.Bus.IPublisher
  parent: EventStore.Core.Bus
  name: IPublisher
  nameWithType: IPublisher
  fullName: EventStore.Core.Bus.IPublisher
- uid: EventStore.Core.Bus.IMonitoredQueue
  commentId: T:EventStore.Core.Bus.IMonitoredQueue
  parent: EventStore.Core.Bus
  name: IMonitoredQueue
  nameWithType: IMonitoredQueue
  fullName: EventStore.Core.Bus.IMonitoredQueue
- uid: EventStore.Core.Bus.IThreadSafePublisher
  commentId: T:EventStore.Core.Bus.IThreadSafePublisher
  parent: EventStore.Core.Bus
  name: IThreadSafePublisher
  nameWithType: IThreadSafePublisher
  fullName: EventStore.Core.Bus.IThreadSafePublisher
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}.EventStore.Core.Bus.HandleExtensions.WidenFrom``2
  commentId: M:EventStore.Core.Bus.HandleExtensions.WidenFrom``2(EventStore.Core.Bus.IHandle{``1})
  parent: EventStore.Core.Bus.HandleExtensions
  definition: EventStore.Core.Bus.HandleExtensions.WidenFrom``2(EventStore.Core.Bus.IHandle{``1})
  name: WidenFrom<TInput, Message>()
  nameWithType: HandleExtensions.WidenFrom<TInput, Message>()
  fullName: EventStore.Core.Bus.HandleExtensions.WidenFrom<TInput, EventStore.Core.Messaging.Message>()
  nameWithType.vb: HandleExtensions.WidenFrom(Of TInput, Message)()
  fullName.vb: EventStore.Core.Bus.HandleExtensions.WidenFrom(Of TInput, EventStore.Core.Messaging.Message)()
  name.vb: WidenFrom(Of TInput, Message)()
  spec.csharp:
  - uid: EventStore.Core.Bus.HandleExtensions.WidenFrom``2
    name: WidenFrom<TInput, Message>
    nameWithType: HandleExtensions.WidenFrom<TInput, Message>
    fullName: EventStore.Core.Bus.HandleExtensions.WidenFrom<TInput, EventStore.Core.Messaging.Message>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.HandleExtensions.WidenFrom``2
    name: WidenFrom(Of TInput, Message)
    nameWithType: HandleExtensions.WidenFrom(Of TInput, Message)
    fullName: EventStore.Core.Bus.HandleExtensions.WidenFrom(Of TInput, EventStore.Core.Messaging.Message)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}.EventStore.Core.Bus.HandleExtensions.NarrowTo``2
  commentId: M:EventStore.Core.Bus.HandleExtensions.NarrowTo``2(EventStore.Core.Bus.IHandle{``1})
  parent: EventStore.Core.Bus.HandleExtensions
  definition: EventStore.Core.Bus.HandleExtensions.NarrowTo``2(EventStore.Core.Bus.IHandle{``1})
  name: NarrowTo<TInput, Message>()
  nameWithType: HandleExtensions.NarrowTo<TInput, Message>()
  fullName: EventStore.Core.Bus.HandleExtensions.NarrowTo<TInput, EventStore.Core.Messaging.Message>()
  nameWithType.vb: HandleExtensions.NarrowTo(Of TInput, Message)()
  fullName.vb: EventStore.Core.Bus.HandleExtensions.NarrowTo(Of TInput, EventStore.Core.Messaging.Message)()
  name.vb: NarrowTo(Of TInput, Message)()
  spec.csharp:
  - uid: EventStore.Core.Bus.HandleExtensions.NarrowTo``2
    name: NarrowTo<TInput, Message>
    nameWithType: HandleExtensions.NarrowTo<TInput, Message>
    fullName: EventStore.Core.Bus.HandleExtensions.NarrowTo<TInput, EventStore.Core.Messaging.Message>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.HandleExtensions.NarrowTo``2
    name: NarrowTo(Of TInput, Message)
    nameWithType: HandleExtensions.NarrowTo(Of TInput, Message)
    fullName: EventStore.Core.Bus.HandleExtensions.NarrowTo(Of TInput, EventStore.Core.Messaging.Message)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.QueuedHandlerPulse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<QueuedHandlerPulse>()
  nameWithType: ProtobufExtensions.Serialize<QueuedHandlerPulse>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Bus.QueuedHandlerPulse>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of QueuedHandlerPulse)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Bus.QueuedHandlerPulse)()
  name.vb: Serialize(Of QueuedHandlerPulse)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<QueuedHandlerPulse>
    nameWithType: ProtobufExtensions.Serialize<QueuedHandlerPulse>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Bus.QueuedHandlerPulse>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of QueuedHandlerPulse)
    nameWithType: ProtobufExtensions.Serialize(Of QueuedHandlerPulse)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Bus.QueuedHandlerPulse)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.QueuedHandlerPulse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<QueuedHandlerPulse>()
  nameWithType: ProtobufExtensions.SerializeToArray<QueuedHandlerPulse>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Bus.QueuedHandlerPulse>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of QueuedHandlerPulse)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Bus.QueuedHandlerPulse)()
  name.vb: SerializeToArray(Of QueuedHandlerPulse)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<QueuedHandlerPulse>
    nameWithType: ProtobufExtensions.SerializeToArray<QueuedHandlerPulse>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Bus.QueuedHandlerPulse>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of QueuedHandlerPulse)
    nameWithType: ProtobufExtensions.SerializeToArray(Of QueuedHandlerPulse)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Bus.QueuedHandlerPulse)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.HandleExtensions.WidenFrom``2(EventStore.Core.Bus.IHandle{``1})
  commentId: M:EventStore.Core.Bus.HandleExtensions.WidenFrom``2(EventStore.Core.Bus.IHandle{``1})
  name: WidenFrom<TInput, TOutput>(IHandle<TOutput>)
  nameWithType: HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>)
  fullName: EventStore.Core.Bus.HandleExtensions.WidenFrom<TInput, TOutput>(EventStore.Core.Bus.IHandle<TOutput>)
  nameWithType.vb: HandleExtensions.WidenFrom(Of TInput, TOutput)(IHandle(Of TOutput))
  fullName.vb: EventStore.Core.Bus.HandleExtensions.WidenFrom(Of TInput, TOutput)(EventStore.Core.Bus.IHandle(Of TOutput))
  name.vb: WidenFrom(Of TInput, TOutput)(IHandle(Of TOutput))
  spec.csharp:
  - uid: EventStore.Core.Bus.HandleExtensions.WidenFrom``2(EventStore.Core.Bus.IHandle{``1})
    name: WidenFrom<TInput, TOutput>
    nameWithType: HandleExtensions.WidenFrom<TInput, TOutput>
    fullName: EventStore.Core.Bus.HandleExtensions.WidenFrom<TInput, TOutput>
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.HandleExtensions.WidenFrom``2(EventStore.Core.Bus.IHandle{``1})
    name: WidenFrom(Of TInput, TOutput)
    nameWithType: HandleExtensions.WidenFrom(Of TInput, TOutput)
    fullName: EventStore.Core.Bus.HandleExtensions.WidenFrom(Of TInput, TOutput)
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.HandleExtensions
  commentId: T:EventStore.Core.Bus.HandleExtensions
  parent: EventStore.Core.Bus
  name: HandleExtensions
  nameWithType: HandleExtensions
  fullName: EventStore.Core.Bus.HandleExtensions
- uid: EventStore.Core.Bus.HandleExtensions.NarrowTo``2(EventStore.Core.Bus.IHandle{``1})
  commentId: M:EventStore.Core.Bus.HandleExtensions.NarrowTo``2(EventStore.Core.Bus.IHandle{``1})
  name: NarrowTo<TInput, TOutput>(IHandle<TOutput>)
  nameWithType: HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>)
  fullName: EventStore.Core.Bus.HandleExtensions.NarrowTo<TInput, TOutput>(EventStore.Core.Bus.IHandle<TOutput>)
  nameWithType.vb: HandleExtensions.NarrowTo(Of TInput, TOutput)(IHandle(Of TOutput))
  fullName.vb: EventStore.Core.Bus.HandleExtensions.NarrowTo(Of TInput, TOutput)(EventStore.Core.Bus.IHandle(Of TOutput))
  name.vb: NarrowTo(Of TInput, TOutput)(IHandle(Of TOutput))
  spec.csharp:
  - uid: EventStore.Core.Bus.HandleExtensions.NarrowTo``2(EventStore.Core.Bus.IHandle{``1})
    name: NarrowTo<TInput, TOutput>
    nameWithType: HandleExtensions.NarrowTo<TInput, TOutput>
    fullName: EventStore.Core.Bus.HandleExtensions.NarrowTo<TInput, TOutput>
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.HandleExtensions.NarrowTo``2(EventStore.Core.Bus.IHandle{``1})
    name: NarrowTo(Of TInput, TOutput)
    nameWithType: HandleExtensions.NarrowTo(Of TInput, TOutput)
    fullName: EventStore.Core.Bus.HandleExtensions.NarrowTo(Of TInput, TOutput)
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Bus.QueuedHandlerPulse.MessageCount*
  commentId: Overload:EventStore.Core.Bus.QueuedHandlerPulse.MessageCount
  name: MessageCount
  nameWithType: QueuedHandlerPulse.MessageCount
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.MessageCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Bus.QueuedHandlerPulse.Name*
  commentId: Overload:EventStore.Core.Bus.QueuedHandlerPulse.Name
  name: Name
  nameWithType: QueuedHandlerPulse.Name
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.Name
- uid: EventStore.Core.Bus.IQueuedHandler.Name
  commentId: P:EventStore.Core.Bus.IQueuedHandler.Name
  parent: EventStore.Core.Bus.IQueuedHandler
  name: Name
  nameWithType: IQueuedHandler.Name
  fullName: EventStore.Core.Bus.IQueuedHandler.Name
- uid: EventStore.Core.Bus.IMonitoredQueue.Name
  commentId: P:EventStore.Core.Bus.IMonitoredQueue.Name
  parent: EventStore.Core.Bus.IMonitoredQueue
  name: Name
  nameWithType: IMonitoredQueue.Name
  fullName: EventStore.Core.Bus.IMonitoredQueue.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Bus.QueuedHandlerPulse.#ctor*
  commentId: Overload:EventStore.Core.Bus.QueuedHandlerPulse.#ctor
  name: QueuedHandlerPulse
  nameWithType: QueuedHandlerPulse.QueuedHandlerPulse
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.QueuedHandlerPulse
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.QueuedHandlerPulse.Start*
  commentId: Overload:EventStore.Core.Bus.QueuedHandlerPulse.Start
  name: Start
  nameWithType: QueuedHandlerPulse.Start
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.Start
- uid: EventStore.Core.Bus.IQueuedHandler.Start
  commentId: M:EventStore.Core.Bus.IQueuedHandler.Start
  parent: EventStore.Core.Bus.IQueuedHandler
  name: Start()
  nameWithType: IQueuedHandler.Start()
  fullName: EventStore.Core.Bus.IQueuedHandler.Start()
  spec.csharp:
  - uid: EventStore.Core.Bus.IQueuedHandler.Start
    name: Start
    nameWithType: IQueuedHandler.Start
    fullName: EventStore.Core.Bus.IQueuedHandler.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IQueuedHandler.Start
    name: Start
    nameWithType: IQueuedHandler.Start
    fullName: EventStore.Core.Bus.IQueuedHandler.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: EventStore.Core.Bus.QueuedHandlerPulse.Stop*
  commentId: Overload:EventStore.Core.Bus.QueuedHandlerPulse.Stop
  name: Stop
  nameWithType: QueuedHandlerPulse.Stop
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.Stop
- uid: EventStore.Core.Bus.IQueuedHandler.Stop
  commentId: M:EventStore.Core.Bus.IQueuedHandler.Stop
  parent: EventStore.Core.Bus.IQueuedHandler
  name: Stop()
  nameWithType: IQueuedHandler.Stop()
  fullName: EventStore.Core.Bus.IQueuedHandler.Stop()
  spec.csharp:
  - uid: EventStore.Core.Bus.IQueuedHandler.Stop
    name: Stop
    nameWithType: IQueuedHandler.Stop
    fullName: EventStore.Core.Bus.IQueuedHandler.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IQueuedHandler.Stop
    name: Stop
    nameWithType: IQueuedHandler.Stop
    fullName: EventStore.Core.Bus.IQueuedHandler.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.QueuedHandlerPulse.RequestStop*
  commentId: Overload:EventStore.Core.Bus.QueuedHandlerPulse.RequestStop
  name: RequestStop
  nameWithType: QueuedHandlerPulse.RequestStop
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.RequestStop
- uid: EventStore.Core.Bus.IQueuedHandler.RequestStop
  commentId: M:EventStore.Core.Bus.IQueuedHandler.RequestStop
  parent: EventStore.Core.Bus.IQueuedHandler
  name: RequestStop()
  nameWithType: IQueuedHandler.RequestStop()
  fullName: EventStore.Core.Bus.IQueuedHandler.RequestStop()
  spec.csharp:
  - uid: EventStore.Core.Bus.IQueuedHandler.RequestStop
    name: RequestStop
    nameWithType: IQueuedHandler.RequestStop
    fullName: EventStore.Core.Bus.IQueuedHandler.RequestStop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IQueuedHandler.RequestStop
    name: RequestStop
    nameWithType: IQueuedHandler.RequestStop
    fullName: EventStore.Core.Bus.IQueuedHandler.RequestStop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.QueuedHandlerPulse.Publish*
  commentId: Overload:EventStore.Core.Bus.QueuedHandlerPulse.Publish
  name: Publish
  nameWithType: QueuedHandlerPulse.Publish
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.Publish
- uid: EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Bus.IPublisher
  name: Publish(Message)
  nameWithType: IPublisher.Publish(Message)
  fullName: EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
  spec.csharp:
  - uid: EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
    name: Publish
    nameWithType: IPublisher.Publish
    fullName: EventStore.Core.Bus.IPublisher.Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IPublisher.Publish(EventStore.Core.Messaging.Message)
    name: Publish
    nameWithType: IPublisher.Publish
    fullName: EventStore.Core.Bus.IPublisher.Publish
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Core.Bus.QueuedHandlerPulse.Handle*
  commentId: Overload:EventStore.Core.Bus.QueuedHandlerPulse.Handle
  name: Handle
  nameWithType: QueuedHandlerPulse.Handle
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}.Handle(EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}.Handle(EventStore.Core.Messaging.Message)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messaging.Message}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(Message)
  nameWithType: IHandle<Message>.Handle(Message)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messaging.Message>.Handle(EventStore.Core.Messaging.Message)
  nameWithType.vb: IHandle(Of Message).Handle(Message)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messaging.Message).Handle(EventStore.Core.Messaging.Message)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<Message>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messaging.Message>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of Message).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messaging.Message).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messaging.Message
    name: Message
    nameWithType: Message
    fullName: EventStore.Core.Messaging.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.QueuedHandlerPulse.GetStatistics*
  commentId: Overload:EventStore.Core.Bus.QueuedHandlerPulse.GetStatistics
  name: GetStatistics
  nameWithType: QueuedHandlerPulse.GetStatistics
  fullName: EventStore.Core.Bus.QueuedHandlerPulse.GetStatistics
- uid: EventStore.Core.Bus.IQueuedHandler.GetStatistics
  commentId: M:EventStore.Core.Bus.IQueuedHandler.GetStatistics
  parent: EventStore.Core.Bus.IQueuedHandler
  name: GetStatistics()
  nameWithType: IQueuedHandler.GetStatistics()
  fullName: EventStore.Core.Bus.IQueuedHandler.GetStatistics()
  spec.csharp:
  - uid: EventStore.Core.Bus.IQueuedHandler.GetStatistics
    name: GetStatistics
    nameWithType: IQueuedHandler.GetStatistics
    fullName: EventStore.Core.Bus.IQueuedHandler.GetStatistics
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IQueuedHandler.GetStatistics
    name: GetStatistics
    nameWithType: IQueuedHandler.GetStatistics
    fullName: EventStore.Core.Bus.IQueuedHandler.GetStatistics
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IMonitoredQueue.GetStatistics
  commentId: M:EventStore.Core.Bus.IMonitoredQueue.GetStatistics
  parent: EventStore.Core.Bus.IMonitoredQueue
  name: GetStatistics()
  nameWithType: IMonitoredQueue.GetStatistics()
  fullName: EventStore.Core.Bus.IMonitoredQueue.GetStatistics()
  spec.csharp:
  - uid: EventStore.Core.Bus.IMonitoredQueue.GetStatistics
    name: GetStatistics
    nameWithType: IMonitoredQueue.GetStatistics
    fullName: EventStore.Core.Bus.IMonitoredQueue.GetStatistics
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IMonitoredQueue.GetStatistics
    name: GetStatistics
    nameWithType: IMonitoredQueue.GetStatistics
    fullName: EventStore.Core.Bus.IMonitoredQueue.GetStatistics
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Monitoring.Stats.QueueStats
  commentId: T:EventStore.Core.Services.Monitoring.Stats.QueueStats
  parent: EventStore.Core.Services.Monitoring.Stats
  name: QueueStats
  nameWithType: QueueStats
  fullName: EventStore.Core.Services.Monitoring.Stats.QueueStats
- uid: EventStore.Core.Services.Monitoring.Stats
  commentId: N:EventStore.Core.Services.Monitoring.Stats
  name: EventStore.Core.Services.Monitoring.Stats
  nameWithType: EventStore.Core.Services.Monitoring.Stats
  fullName: EventStore.Core.Services.Monitoring.Stats

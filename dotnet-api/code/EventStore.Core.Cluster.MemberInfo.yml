### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Cluster.MemberInfo
  commentId: T:EventStore.Core.Cluster.MemberInfo
  id: MemberInfo
  parent: EventStore.Core.Cluster
  children:
  - EventStore.Core.Cluster.MemberInfo.ChaserCheckpoint
  - EventStore.Core.Cluster.MemberInfo.EpochId
  - EventStore.Core.Cluster.MemberInfo.EpochNumber
  - EventStore.Core.Cluster.MemberInfo.EpochPosition
  - EventStore.Core.Cluster.MemberInfo.Equals(EventStore.Core.Cluster.MemberInfo)
  - EventStore.Core.Cluster.MemberInfo.Equals(System.Object)
  - EventStore.Core.Cluster.MemberInfo.ExternalHttpEndPoint
  - EventStore.Core.Cluster.MemberInfo.ExternalSecureTcpEndPoint
  - EventStore.Core.Cluster.MemberInfo.ExternalTcpEndPoint
  - EventStore.Core.Cluster.MemberInfo.ForManager(System.Guid,System.DateTime,System.Boolean,System.Net.IPEndPoint,System.Net.IPEndPoint)
  - EventStore.Core.Cluster.MemberInfo.ForVNode(System.Guid,System.DateTime,EventStore.Core.Data.VNodeState,System.Boolean,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Int64,System.Int64,System.Int64,System.Int64,System.Int32,System.Guid,System.Int32)
  - EventStore.Core.Cluster.MemberInfo.GetHashCode
  - EventStore.Core.Cluster.MemberInfo.InstanceId
  - EventStore.Core.Cluster.MemberInfo.InternalHttpEndPoint
  - EventStore.Core.Cluster.MemberInfo.InternalSecureTcpEndPoint
  - EventStore.Core.Cluster.MemberInfo.InternalTcpEndPoint
  - EventStore.Core.Cluster.MemberInfo.Is(System.Net.IPEndPoint)
  - EventStore.Core.Cluster.MemberInfo.IsAlive
  - EventStore.Core.Cluster.MemberInfo.LastCommitPosition
  - EventStore.Core.Cluster.MemberInfo.NodePriority
  - EventStore.Core.Cluster.MemberInfo.State
  - EventStore.Core.Cluster.MemberInfo.TimeStamp
  - EventStore.Core.Cluster.MemberInfo.ToString
  - EventStore.Core.Cluster.MemberInfo.Updated(System.Nullable{EventStore.Core.Data.VNodeState},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},EventStore.Core.TransactionLog.LogRecords.EpochRecord)
  - EventStore.Core.Cluster.MemberInfo.WriterCheckpoint
  langs:
  - csharp
  - vb
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: EventStore.Core.Cluster.MemberInfo
  type: Class
  source:
    id: MemberInfo
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: 'public class MemberInfo : IEquatable<MemberInfo>'
    content.vb: >-
      Public Class MemberInfo
          Implements IEquatable(Of MemberInfo)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{EventStore.Core.Cluster.MemberInfo}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Cluster.MemberInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Cluster.MemberInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Cluster.MemberInfo.InstanceId
  commentId: F:EventStore.Core.Cluster.MemberInfo.InstanceId
  id: InstanceId
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: InstanceId
  nameWithType: MemberInfo.InstanceId
  fullName: EventStore.Core.Cluster.MemberInfo.InstanceId
  type: Field
  source:
    id: InstanceId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public readonly Guid InstanceId
    return:
      type: System.Guid
    content.vb: Public ReadOnly InstanceId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Cluster.MemberInfo.TimeStamp
  commentId: F:EventStore.Core.Cluster.MemberInfo.TimeStamp
  id: TimeStamp
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: TimeStamp
  nameWithType: MemberInfo.TimeStamp
  fullName: EventStore.Core.Cluster.MemberInfo.TimeStamp
  type: Field
  source:
    id: TimeStamp
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public readonly DateTime TimeStamp
    return:
      type: System.DateTime
    content.vb: Public ReadOnly TimeStamp As Date
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Cluster.MemberInfo.State
  commentId: F:EventStore.Core.Cluster.MemberInfo.State
  id: State
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: State
  nameWithType: MemberInfo.State
  fullName: EventStore.Core.Cluster.MemberInfo.State
  type: Field
  source:
    id: State
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public readonly VNodeState State
    return:
      type: EventStore.Core.Data.VNodeState
    content.vb: Public ReadOnly State As VNodeState
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Cluster.MemberInfo.IsAlive
  commentId: F:EventStore.Core.Cluster.MemberInfo.IsAlive
  id: IsAlive
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: IsAlive
  nameWithType: MemberInfo.IsAlive
  fullName: EventStore.Core.Cluster.MemberInfo.IsAlive
  type: Field
  source:
    id: IsAlive
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public readonly bool IsAlive
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsAlive As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Cluster.MemberInfo.InternalTcpEndPoint
  commentId: F:EventStore.Core.Cluster.MemberInfo.InternalTcpEndPoint
  id: InternalTcpEndPoint
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: InternalTcpEndPoint
  nameWithType: MemberInfo.InternalTcpEndPoint
  fullName: EventStore.Core.Cluster.MemberInfo.InternalTcpEndPoint
  type: Field
  source:
    id: InternalTcpEndPoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public readonly IPEndPoint InternalTcpEndPoint
    return:
      type: System.Net.IPEndPoint
    content.vb: Public ReadOnly InternalTcpEndPoint As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Cluster.MemberInfo.InternalSecureTcpEndPoint
  commentId: F:EventStore.Core.Cluster.MemberInfo.InternalSecureTcpEndPoint
  id: InternalSecureTcpEndPoint
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: InternalSecureTcpEndPoint
  nameWithType: MemberInfo.InternalSecureTcpEndPoint
  fullName: EventStore.Core.Cluster.MemberInfo.InternalSecureTcpEndPoint
  type: Field
  source:
    id: InternalSecureTcpEndPoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 16
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public readonly IPEndPoint InternalSecureTcpEndPoint
    return:
      type: System.Net.IPEndPoint
    content.vb: Public ReadOnly InternalSecureTcpEndPoint As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Cluster.MemberInfo.ExternalTcpEndPoint
  commentId: F:EventStore.Core.Cluster.MemberInfo.ExternalTcpEndPoint
  id: ExternalTcpEndPoint
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: ExternalTcpEndPoint
  nameWithType: MemberInfo.ExternalTcpEndPoint
  fullName: EventStore.Core.Cluster.MemberInfo.ExternalTcpEndPoint
  type: Field
  source:
    id: ExternalTcpEndPoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public readonly IPEndPoint ExternalTcpEndPoint
    return:
      type: System.Net.IPEndPoint
    content.vb: Public ReadOnly ExternalTcpEndPoint As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Cluster.MemberInfo.ExternalSecureTcpEndPoint
  commentId: F:EventStore.Core.Cluster.MemberInfo.ExternalSecureTcpEndPoint
  id: ExternalSecureTcpEndPoint
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: ExternalSecureTcpEndPoint
  nameWithType: MemberInfo.ExternalSecureTcpEndPoint
  fullName: EventStore.Core.Cluster.MemberInfo.ExternalSecureTcpEndPoint
  type: Field
  source:
    id: ExternalSecureTcpEndPoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public readonly IPEndPoint ExternalSecureTcpEndPoint
    return:
      type: System.Net.IPEndPoint
    content.vb: Public ReadOnly ExternalSecureTcpEndPoint As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Cluster.MemberInfo.InternalHttpEndPoint
  commentId: F:EventStore.Core.Cluster.MemberInfo.InternalHttpEndPoint
  id: InternalHttpEndPoint
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: InternalHttpEndPoint
  nameWithType: MemberInfo.InternalHttpEndPoint
  fullName: EventStore.Core.Cluster.MemberInfo.InternalHttpEndPoint
  type: Field
  source:
    id: InternalHttpEndPoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public readonly IPEndPoint InternalHttpEndPoint
    return:
      type: System.Net.IPEndPoint
    content.vb: Public ReadOnly InternalHttpEndPoint As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Cluster.MemberInfo.ExternalHttpEndPoint
  commentId: F:EventStore.Core.Cluster.MemberInfo.ExternalHttpEndPoint
  id: ExternalHttpEndPoint
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: ExternalHttpEndPoint
  nameWithType: MemberInfo.ExternalHttpEndPoint
  fullName: EventStore.Core.Cluster.MemberInfo.ExternalHttpEndPoint
  type: Field
  source:
    id: ExternalHttpEndPoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 20
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public readonly IPEndPoint ExternalHttpEndPoint
    return:
      type: System.Net.IPEndPoint
    content.vb: Public ReadOnly ExternalHttpEndPoint As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Cluster.MemberInfo.LastCommitPosition
  commentId: F:EventStore.Core.Cluster.MemberInfo.LastCommitPosition
  id: LastCommitPosition
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: LastCommitPosition
  nameWithType: MemberInfo.LastCommitPosition
  fullName: EventStore.Core.Cluster.MemberInfo.LastCommitPosition
  type: Field
  source:
    id: LastCommitPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public readonly long LastCommitPosition
    return:
      type: System.Int64
    content.vb: Public ReadOnly LastCommitPosition As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Cluster.MemberInfo.WriterCheckpoint
  commentId: F:EventStore.Core.Cluster.MemberInfo.WriterCheckpoint
  id: WriterCheckpoint
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: WriterCheckpoint
  nameWithType: MemberInfo.WriterCheckpoint
  fullName: EventStore.Core.Cluster.MemberInfo.WriterCheckpoint
  type: Field
  source:
    id: WriterCheckpoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 23
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public readonly long WriterCheckpoint
    return:
      type: System.Int64
    content.vb: Public ReadOnly WriterCheckpoint As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Cluster.MemberInfo.ChaserCheckpoint
  commentId: F:EventStore.Core.Cluster.MemberInfo.ChaserCheckpoint
  id: ChaserCheckpoint
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: ChaserCheckpoint
  nameWithType: MemberInfo.ChaserCheckpoint
  fullName: EventStore.Core.Cluster.MemberInfo.ChaserCheckpoint
  type: Field
  source:
    id: ChaserCheckpoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 24
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public readonly long ChaserCheckpoint
    return:
      type: System.Int64
    content.vb: Public ReadOnly ChaserCheckpoint As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Cluster.MemberInfo.EpochPosition
  commentId: F:EventStore.Core.Cluster.MemberInfo.EpochPosition
  id: EpochPosition
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: EpochPosition
  nameWithType: MemberInfo.EpochPosition
  fullName: EventStore.Core.Cluster.MemberInfo.EpochPosition
  type: Field
  source:
    id: EpochPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 25
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public readonly long EpochPosition
    return:
      type: System.Int64
    content.vb: Public ReadOnly EpochPosition As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Cluster.MemberInfo.EpochNumber
  commentId: F:EventStore.Core.Cluster.MemberInfo.EpochNumber
  id: EpochNumber
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: EpochNumber
  nameWithType: MemberInfo.EpochNumber
  fullName: EventStore.Core.Cluster.MemberInfo.EpochNumber
  type: Field
  source:
    id: EpochNumber
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 26
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public readonly int EpochNumber
    return:
      type: System.Int32
    content.vb: Public ReadOnly EpochNumber As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Cluster.MemberInfo.EpochId
  commentId: F:EventStore.Core.Cluster.MemberInfo.EpochId
  id: EpochId
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: EpochId
  nameWithType: MemberInfo.EpochId
  fullName: EventStore.Core.Cluster.MemberInfo.EpochId
  type: Field
  source:
    id: EpochId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 27
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public readonly Guid EpochId
    return:
      type: System.Guid
    content.vb: Public ReadOnly EpochId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Cluster.MemberInfo.NodePriority
  commentId: F:EventStore.Core.Cluster.MemberInfo.NodePriority
  id: NodePriority
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: NodePriority
  nameWithType: MemberInfo.NodePriority
  fullName: EventStore.Core.Cluster.MemberInfo.NodePriority
  type: Field
  source:
    id: NodePriority
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 29
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public readonly int NodePriority
    return:
      type: System.Int32
    content.vb: Public ReadOnly NodePriority As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Cluster.MemberInfo.ForManager(System.Guid,System.DateTime,System.Boolean,System.Net.IPEndPoint,System.Net.IPEndPoint)
  commentId: M:EventStore.Core.Cluster.MemberInfo.ForManager(System.Guid,System.DateTime,System.Boolean,System.Net.IPEndPoint,System.Net.IPEndPoint)
  id: ForManager(System.Guid,System.DateTime,System.Boolean,System.Net.IPEndPoint,System.Net.IPEndPoint)
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: ForManager(Guid, DateTime, Boolean, IPEndPoint, IPEndPoint)
  nameWithType: MemberInfo.ForManager(Guid, DateTime, Boolean, IPEndPoint, IPEndPoint)
  fullName: EventStore.Core.Cluster.MemberInfo.ForManager(System.Guid, System.DateTime, System.Boolean, System.Net.IPEndPoint, System.Net.IPEndPoint)
  type: Method
  source:
    id: ForManager
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 31
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public static MemberInfo ForManager(Guid instanceId, DateTime timeStamp, bool isAlive, IPEndPoint internalHttpEndPoint, IPEndPoint externalHttpEndPoint)
    parameters:
    - id: instanceId
      type: System.Guid
    - id: timeStamp
      type: System.DateTime
    - id: isAlive
      type: System.Boolean
    - id: internalHttpEndPoint
      type: System.Net.IPEndPoint
    - id: externalHttpEndPoint
      type: System.Net.IPEndPoint
    return:
      type: EventStore.Core.Cluster.MemberInfo
    content.vb: Public Shared Function ForManager(instanceId As Guid, timeStamp As Date, isAlive As Boolean, internalHttpEndPoint As IPEndPoint, externalHttpEndPoint As IPEndPoint) As MemberInfo
  overload: EventStore.Core.Cluster.MemberInfo.ForManager*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Cluster.MemberInfo.ForVNode(System.Guid,System.DateTime,EventStore.Core.Data.VNodeState,System.Boolean,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Int64,System.Int64,System.Int64,System.Int64,System.Int32,System.Guid,System.Int32)
  commentId: M:EventStore.Core.Cluster.MemberInfo.ForVNode(System.Guid,System.DateTime,EventStore.Core.Data.VNodeState,System.Boolean,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Int64,System.Int64,System.Int64,System.Int64,System.Int32,System.Guid,System.Int32)
  id: ForVNode(System.Guid,System.DateTime,EventStore.Core.Data.VNodeState,System.Boolean,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint,System.Int64,System.Int64,System.Int64,System.Int64,System.Int32,System.Guid,System.Int32)
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: ForVNode(Guid, DateTime, VNodeState, Boolean, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, Int64, Int64, Int64, Int64, Int32, Guid, Int32)
  nameWithType: MemberInfo.ForVNode(Guid, DateTime, VNodeState, Boolean, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, Int64, Int64, Int64, Int64, Int32, Guid, Int32)
  fullName: EventStore.Core.Cluster.MemberInfo.ForVNode(System.Guid, System.DateTime, EventStore.Core.Data.VNodeState, System.Boolean, System.Net.IPEndPoint, System.Net.IPEndPoint, System.Net.IPEndPoint, System.Net.IPEndPoint, System.Net.IPEndPoint, System.Net.IPEndPoint, System.Int64, System.Int64, System.Int64, System.Int64, System.Int32, System.Guid, System.Int32)
  type: Method
  source:
    id: ForVNode
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 39
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public static MemberInfo ForVNode(Guid instanceId, DateTime timeStamp, VNodeState state, bool isAlive, IPEndPoint internalTcpEndPoint, IPEndPoint internalSecureTcpEndPoint, IPEndPoint externalTcpEndPoint, IPEndPoint externalSecureTcpEndPoint, IPEndPoint internalHttpEndPoint, IPEndPoint externalHttpEndPoint, long lastCommitPosition, long writerCheckpoint, long chaserCheckpoint, long epochPosition, int epochNumber, Guid epochId, int nodePriority)
    parameters:
    - id: instanceId
      type: System.Guid
    - id: timeStamp
      type: System.DateTime
    - id: state
      type: EventStore.Core.Data.VNodeState
    - id: isAlive
      type: System.Boolean
    - id: internalTcpEndPoint
      type: System.Net.IPEndPoint
    - id: internalSecureTcpEndPoint
      type: System.Net.IPEndPoint
    - id: externalTcpEndPoint
      type: System.Net.IPEndPoint
    - id: externalSecureTcpEndPoint
      type: System.Net.IPEndPoint
    - id: internalHttpEndPoint
      type: System.Net.IPEndPoint
    - id: externalHttpEndPoint
      type: System.Net.IPEndPoint
    - id: lastCommitPosition
      type: System.Int64
    - id: writerCheckpoint
      type: System.Int64
    - id: chaserCheckpoint
      type: System.Int64
    - id: epochPosition
      type: System.Int64
    - id: epochNumber
      type: System.Int32
    - id: epochId
      type: System.Guid
    - id: nodePriority
      type: System.Int32
    return:
      type: EventStore.Core.Cluster.MemberInfo
    content.vb: Public Shared Function ForVNode(instanceId As Guid, timeStamp As Date, state As VNodeState, isAlive As Boolean, internalTcpEndPoint As IPEndPoint, internalSecureTcpEndPoint As IPEndPoint, externalTcpEndPoint As IPEndPoint, externalSecureTcpEndPoint As IPEndPoint, internalHttpEndPoint As IPEndPoint, externalHttpEndPoint As IPEndPoint, lastCommitPosition As Long, writerCheckpoint As Long, chaserCheckpoint As Long, epochPosition As Long, epochNumber As Integer, epochId As Guid, nodePriority As Integer) As MemberInfo
  overload: EventStore.Core.Cluster.MemberInfo.ForVNode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Cluster.MemberInfo.Is(System.Net.IPEndPoint)
  commentId: M:EventStore.Core.Cluster.MemberInfo.Is(System.Net.IPEndPoint)
  id: Is(System.Net.IPEndPoint)
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: Is(IPEndPoint)
  nameWithType: MemberInfo.Is(IPEndPoint)
  fullName: EventStore.Core.Cluster.MemberInfo.Is(System.Net.IPEndPoint)
  type: Method
  source:
    id: Is
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 127
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public bool Is(IPEndPoint endPoint)
    parameters:
    - id: endPoint
      type: System.Net.IPEndPoint
    return:
      type: System.Boolean
    content.vb: Public Function Is(endPoint As IPEndPoint) As Boolean
  overload: EventStore.Core.Cluster.MemberInfo.Is*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Cluster.MemberInfo.Updated(System.Nullable{EventStore.Core.Data.VNodeState},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},EventStore.Core.TransactionLog.LogRecords.EpochRecord)
  commentId: M:EventStore.Core.Cluster.MemberInfo.Updated(System.Nullable{EventStore.Core.Data.VNodeState},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},EventStore.Core.TransactionLog.LogRecords.EpochRecord)
  id: Updated(System.Nullable{EventStore.Core.Data.VNodeState},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},EventStore.Core.TransactionLog.LogRecords.EpochRecord)
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: Updated(Nullable<VNodeState>, Nullable<Boolean>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, EpochRecord)
  nameWithType: MemberInfo.Updated(Nullable<VNodeState>, Nullable<Boolean>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, EpochRecord)
  fullName: EventStore.Core.Cluster.MemberInfo.Updated(System.Nullable<EventStore.Core.Data.VNodeState>, System.Nullable<System.Boolean>, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.Nullable<System.Int64>, EventStore.Core.TransactionLog.LogRecords.EpochRecord)
  type: Method
  source:
    id: Updated
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 137
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public MemberInfo Updated(VNodeState? state = default(VNodeState? ), bool? isAlive = default(bool? ), long? lastCommitPosition = default(long? ), long? writerCheckpoint = default(long? ), long? chaserCheckpoint = default(long? ), EpochRecord epoch = null)
    parameters:
    - id: state
      type: System.Nullable{EventStore.Core.Data.VNodeState}
    - id: isAlive
      type: System.Nullable{System.Boolean}
    - id: lastCommitPosition
      type: System.Nullable{System.Int64}
    - id: writerCheckpoint
      type: System.Nullable{System.Int64}
    - id: chaserCheckpoint
      type: System.Nullable{System.Int64}
    - id: epoch
      type: EventStore.Core.TransactionLog.LogRecords.EpochRecord
    return:
      type: EventStore.Core.Cluster.MemberInfo
    content.vb: Public Function Updated(state As VNodeState? = Nothing, isAlive As Boolean? = Nothing, lastCommitPosition As Long? = Nothing, writerCheckpoint As Long? = Nothing, chaserCheckpoint As Long? = Nothing, epoch As EpochRecord = Nothing) As MemberInfo
  overload: EventStore.Core.Cluster.MemberInfo.Updated*
  nameWithType.vb: MemberInfo.Updated(Nullable(Of VNodeState), Nullable(Of Boolean), Nullable(Of Int64), Nullable(Of Int64), Nullable(Of Int64), EpochRecord)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Cluster.MemberInfo.Updated(System.Nullable(Of EventStore.Core.Data.VNodeState), System.Nullable(Of System.Boolean), System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), EventStore.Core.TransactionLog.LogRecords.EpochRecord)
  name.vb: Updated(Nullable(Of VNodeState), Nullable(Of Boolean), Nullable(Of Int64), Nullable(Of Int64), Nullable(Of Int64), EpochRecord)
- uid: EventStore.Core.Cluster.MemberInfo.ToString
  commentId: M:EventStore.Core.Cluster.MemberInfo.ToString
  id: ToString
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MemberInfo.ToString()
  fullName: EventStore.Core.Cluster.MemberInfo.ToString()
  type: Method
  source:
    id: ToString
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 162
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: EventStore.Core.Cluster.MemberInfo.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Cluster.MemberInfo.Equals(EventStore.Core.Cluster.MemberInfo)
  commentId: M:EventStore.Core.Cluster.MemberInfo.Equals(EventStore.Core.Cluster.MemberInfo)
  id: Equals(EventStore.Core.Cluster.MemberInfo)
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: Equals(MemberInfo)
  nameWithType: MemberInfo.Equals(MemberInfo)
  fullName: EventStore.Core.Cluster.MemberInfo.Equals(EventStore.Core.Cluster.MemberInfo)
  type: Method
  source:
    id: Equals
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 178
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public bool Equals(MemberInfo other)
    parameters:
    - id: other
      type: EventStore.Core.Cluster.MemberInfo
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As MemberInfo) As Boolean
  overload: EventStore.Core.Cluster.MemberInfo.Equals*
  implements:
  - System.IEquatable{EventStore.Core.Cluster.MemberInfo}.Equals(EventStore.Core.Cluster.MemberInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Cluster.MemberInfo.Equals(System.Object)
  commentId: M:EventStore.Core.Cluster.MemberInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: MemberInfo.Equals(Object)
  fullName: EventStore.Core.Cluster.MemberInfo.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 197
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: EventStore.Core.Cluster.MemberInfo.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Cluster.MemberInfo.GetHashCode
  commentId: M:EventStore.Core.Cluster.MemberInfo.GetHashCode
  id: GetHashCode
  parent: EventStore.Core.Cluster.MemberInfo
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: MemberInfo.GetHashCode()
  fullName: EventStore.Core.Cluster.MemberInfo.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Cluster/MemberInfo.cs
    startLine: 204
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Cluster
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: EventStore.Core.Cluster.MemberInfo.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.Cluster
  commentId: N:EventStore.Core.Cluster
  name: EventStore.Core.Cluster
  nameWithType: EventStore.Core.Cluster
  fullName: EventStore.Core.Cluster
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{EventStore.Core.Cluster.MemberInfo}
  commentId: T:System.IEquatable{EventStore.Core.Cluster.MemberInfo}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<MemberInfo>
  nameWithType: IEquatable<MemberInfo>
  fullName: System.IEquatable<EventStore.Core.Cluster.MemberInfo>
  nameWithType.vb: IEquatable(Of MemberInfo)
  fullName.vb: System.IEquatable(Of EventStore.Core.Cluster.MemberInfo)
  name.vb: IEquatable(Of MemberInfo)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Cluster.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: EventStore.Core.Cluster.MemberInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Cluster.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: EventStore.Core.Cluster.MemberInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Cluster.MemberInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<MemberInfo>()
  nameWithType: ProtobufExtensions.Serialize<MemberInfo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Cluster.MemberInfo>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of MemberInfo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Cluster.MemberInfo)()
  name.vb: Serialize(Of MemberInfo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<MemberInfo>
    nameWithType: ProtobufExtensions.Serialize<MemberInfo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Cluster.MemberInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of MemberInfo)
    nameWithType: ProtobufExtensions.Serialize(Of MemberInfo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Cluster.MemberInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Cluster.MemberInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<MemberInfo>()
  nameWithType: ProtobufExtensions.SerializeToArray<MemberInfo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Cluster.MemberInfo>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of MemberInfo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Cluster.MemberInfo)()
  name.vb: SerializeToArray(Of MemberInfo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<MemberInfo>
    nameWithType: ProtobufExtensions.SerializeToArray<MemberInfo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Cluster.MemberInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of MemberInfo)
    nameWithType: ProtobufExtensions.SerializeToArray(Of MemberInfo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Cluster.MemberInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: EventStore.Core.Data.VNodeState
  commentId: T:EventStore.Core.Data.VNodeState
  parent: EventStore.Core.Data
  name: VNodeState
  nameWithType: VNodeState
  fullName: EventStore.Core.Data.VNodeState
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.IPEndPoint
  commentId: T:System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Cluster.MemberInfo.ForManager*
  commentId: Overload:EventStore.Core.Cluster.MemberInfo.ForManager
  name: ForManager
  nameWithType: MemberInfo.ForManager
  fullName: EventStore.Core.Cluster.MemberInfo.ForManager
- uid: EventStore.Core.Cluster.MemberInfo
  commentId: T:EventStore.Core.Cluster.MemberInfo
  parent: EventStore.Core.Cluster
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: EventStore.Core.Cluster.MemberInfo
- uid: EventStore.Core.Cluster.MemberInfo.ForVNode*
  commentId: Overload:EventStore.Core.Cluster.MemberInfo.ForVNode
  name: ForVNode
  nameWithType: MemberInfo.ForVNode
  fullName: EventStore.Core.Cluster.MemberInfo.ForVNode
- uid: EventStore.Core.Cluster.MemberInfo.Is*
  commentId: Overload:EventStore.Core.Cluster.MemberInfo.Is
  name: Is
  nameWithType: MemberInfo.Is
  fullName: EventStore.Core.Cluster.MemberInfo.Is
- uid: EventStore.Core.Cluster.MemberInfo.Updated*
  commentId: Overload:EventStore.Core.Cluster.MemberInfo.Updated
  name: Updated
  nameWithType: MemberInfo.Updated
  fullName: EventStore.Core.Cluster.MemberInfo.Updated
- uid: System.Nullable{EventStore.Core.Data.VNodeState}
  commentId: T:System.Nullable{EventStore.Core.Data.VNodeState}
  parent: System
  definition: System.Nullable`1
  name: Nullable<VNodeState>
  nameWithType: Nullable<VNodeState>
  fullName: System.Nullable<EventStore.Core.Data.VNodeState>
  nameWithType.vb: Nullable(Of VNodeState)
  fullName.vb: System.Nullable(Of EventStore.Core.Data.VNodeState)
  name.vb: Nullable(Of VNodeState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Data.VNodeState
    name: VNodeState
    nameWithType: VNodeState
    fullName: EventStore.Core.Data.VNodeState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Data.VNodeState
    name: VNodeState
    nameWithType: VNodeState
    fullName: EventStore.Core.Data.VNodeState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords.EpochRecord
  commentId: T:EventStore.Core.TransactionLog.LogRecords.EpochRecord
  parent: EventStore.Core.TransactionLog.LogRecords
  name: EpochRecord
  nameWithType: EpochRecord
  fullName: EventStore.Core.TransactionLog.LogRecords.EpochRecord
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.TransactionLog.LogRecords
  commentId: N:EventStore.Core.TransactionLog.LogRecords
  name: EventStore.Core.TransactionLog.LogRecords
  nameWithType: EventStore.Core.TransactionLog.LogRecords
  fullName: EventStore.Core.TransactionLog.LogRecords
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Cluster.MemberInfo.ToString*
  commentId: Overload:EventStore.Core.Cluster.MemberInfo.ToString
  name: ToString
  nameWithType: MemberInfo.ToString
  fullName: EventStore.Core.Cluster.MemberInfo.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Cluster.MemberInfo.Equals*
  commentId: Overload:EventStore.Core.Cluster.MemberInfo.Equals
  name: Equals
  nameWithType: MemberInfo.Equals
  fullName: EventStore.Core.Cluster.MemberInfo.Equals
- uid: System.IEquatable{EventStore.Core.Cluster.MemberInfo}.Equals(EventStore.Core.Cluster.MemberInfo)
  commentId: M:System.IEquatable{EventStore.Core.Cluster.MemberInfo}.Equals(EventStore.Core.Cluster.MemberInfo)
  parent: System.IEquatable{EventStore.Core.Cluster.MemberInfo}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(MemberInfo)
  nameWithType: IEquatable<MemberInfo>.Equals(MemberInfo)
  fullName: System.IEquatable<EventStore.Core.Cluster.MemberInfo>.Equals(EventStore.Core.Cluster.MemberInfo)
  nameWithType.vb: IEquatable(Of MemberInfo).Equals(MemberInfo)
  fullName.vb: System.IEquatable(Of EventStore.Core.Cluster.MemberInfo).Equals(EventStore.Core.Cluster.MemberInfo)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<MemberInfo>.Equals
    fullName: System.IEquatable<EventStore.Core.Cluster.MemberInfo>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Cluster.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: EventStore.Core.Cluster.MemberInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of MemberInfo).Equals
    fullName: System.IEquatable(Of EventStore.Core.Cluster.MemberInfo).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Cluster.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: EventStore.Core.Cluster.MemberInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Cluster.MemberInfo.GetHashCode*
  commentId: Overload:EventStore.Core.Cluster.MemberInfo.GetHashCode
  name: GetHashCode
  nameWithType: MemberInfo.GetHashCode
  fullName: EventStore.Core.Cluster.MemberInfo.GetHashCode

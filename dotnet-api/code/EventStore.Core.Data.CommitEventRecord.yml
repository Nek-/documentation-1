### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Data.CommitEventRecord
  commentId: T:EventStore.Core.Data.CommitEventRecord
  id: CommitEventRecord
  parent: EventStore.Core.Data
  children:
  - EventStore.Core.Data.CommitEventRecord.#ctor(EventStore.Core.Data.EventRecord,System.Int64)
  - EventStore.Core.Data.CommitEventRecord.CommitPosition
  - EventStore.Core.Data.CommitEventRecord.Event
  - EventStore.Core.Data.CommitEventRecord.ToString
  langs:
  - csharp
  - vb
  name: CommitEventRecord
  nameWithType: CommitEventRecord
  fullName: EventStore.Core.Data.CommitEventRecord
  type: Struct
  source:
    remote:
      path: src/EventStore.Core/Data/CommitEventRecord.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CommitEventRecord
    path: ../EventStore/src/EventStore.Core/Data/CommitEventRecord.cs
    startLine: 2
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public struct CommitEventRecord
    content.vb: Public Structure CommitEventRecord
  extensionMethods:
  - EventStore.Core.Data.CommitEventRecord.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Data.CommitEventRecord.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Data.CommitEventRecord.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.Core.Data.CommitEventRecord.Event
  commentId: F:EventStore.Core.Data.CommitEventRecord.Event
  id: Event
  parent: EventStore.Core.Data.CommitEventRecord
  langs:
  - csharp
  - vb
  name: Event
  nameWithType: CommitEventRecord.Event
  fullName: EventStore.Core.Data.CommitEventRecord.Event
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/CommitEventRecord.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Event
    path: ../EventStore/src/EventStore.Core/Data/CommitEventRecord.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly EventRecord Event
    return:
      type: EventStore.Core.Data.EventRecord
    content.vb: Public ReadOnly Event As EventRecord
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.CommitEventRecord.CommitPosition
  commentId: F:EventStore.Core.Data.CommitEventRecord.CommitPosition
  id: CommitPosition
  parent: EventStore.Core.Data.CommitEventRecord
  langs:
  - csharp
  - vb
  name: CommitPosition
  nameWithType: CommitEventRecord.CommitPosition
  fullName: EventStore.Core.Data.CommitEventRecord.CommitPosition
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/CommitEventRecord.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CommitPosition
    path: ../EventStore/src/EventStore.Core/Data/CommitEventRecord.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly long CommitPosition
    return:
      type: System.Int64
    content.vb: Public ReadOnly CommitPosition As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.CommitEventRecord.#ctor(EventStore.Core.Data.EventRecord,System.Int64)
  commentId: M:EventStore.Core.Data.CommitEventRecord.#ctor(EventStore.Core.Data.EventRecord,System.Int64)
  id: '#ctor(EventStore.Core.Data.EventRecord,System.Int64)'
  parent: EventStore.Core.Data.CommitEventRecord
  langs:
  - csharp
  - vb
  name: CommitEventRecord(EventRecord, Int64)
  nameWithType: CommitEventRecord.CommitEventRecord(EventRecord, Int64)
  fullName: EventStore.Core.Data.CommitEventRecord.CommitEventRecord(EventStore.Core.Data.EventRecord, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Data/CommitEventRecord.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Data/CommitEventRecord.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public CommitEventRecord(EventRecord event, long commitPosition)
    parameters:
    - id: event
      type: EventStore.Core.Data.EventRecord
    - id: commitPosition
      type: System.Int64
    content.vb: Public Sub New(event As EventRecord, commitPosition As Long)
  overload: EventStore.Core.Data.CommitEventRecord.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Data.CommitEventRecord.ToString
  commentId: M:EventStore.Core.Data.CommitEventRecord.ToString
  id: ToString
  parent: EventStore.Core.Data.CommitEventRecord
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CommitEventRecord.ToString()
  fullName: EventStore.Core.Data.CommitEventRecord.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Data/CommitEventRecord.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.Core/Data/CommitEventRecord.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.Core.Data.CommitEventRecord.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Data.CommitEventRecord.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<CommitEventRecord>()
  nameWithType: EnumExtensions.EnumValueName<CommitEventRecord>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Data.CommitEventRecord>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of CommitEventRecord)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Data.CommitEventRecord)()
  name.vb: EnumValueName(Of CommitEventRecord)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<CommitEventRecord>
    nameWithType: EnumExtensions.EnumValueName<CommitEventRecord>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Data.CommitEventRecord>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of CommitEventRecord)
    nameWithType: EnumExtensions.EnumValueName(Of CommitEventRecord)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Data.CommitEventRecord)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.CommitEventRecord.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<CommitEventRecord>()
  nameWithType: ProtobufExtensions.Serialize<CommitEventRecord>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Data.CommitEventRecord>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of CommitEventRecord)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Data.CommitEventRecord)()
  name.vb: Serialize(Of CommitEventRecord)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<CommitEventRecord>
    nameWithType: ProtobufExtensions.Serialize<CommitEventRecord>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Data.CommitEventRecord>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of CommitEventRecord)
    nameWithType: ProtobufExtensions.Serialize(Of CommitEventRecord)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Data.CommitEventRecord)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.CommitEventRecord.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<CommitEventRecord>()
  nameWithType: ProtobufExtensions.SerializeToArray<CommitEventRecord>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Data.CommitEventRecord>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of CommitEventRecord)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Data.CommitEventRecord)()
  name.vb: SerializeToArray(Of CommitEventRecord)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<CommitEventRecord>
    nameWithType: ProtobufExtensions.SerializeToArray<CommitEventRecord>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Data.CommitEventRecord>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of CommitEventRecord)
    nameWithType: ProtobufExtensions.SerializeToArray(Of CommitEventRecord)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Data.CommitEventRecord)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Data.EventRecord
  commentId: T:EventStore.Core.Data.EventRecord
  parent: EventStore.Core.Data
  name: EventRecord
  nameWithType: EventRecord
  fullName: EventStore.Core.Data.EventRecord
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Data.CommitEventRecord.#ctor*
  commentId: Overload:EventStore.Core.Data.CommitEventRecord.#ctor
  name: CommitEventRecord
  nameWithType: CommitEventRecord.CommitEventRecord
  fullName: EventStore.Core.Data.CommitEventRecord.CommitEventRecord
- uid: EventStore.Core.Data.CommitEventRecord.ToString*
  commentId: Overload:EventStore.Core.Data.CommitEventRecord.ToString
  name: ToString
  nameWithType: CommitEventRecord.ToString
  fullName: EventStore.Core.Data.CommitEventRecord.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

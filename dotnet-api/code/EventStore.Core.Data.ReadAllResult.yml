### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Data.ReadAllResult
  commentId: T:EventStore.Core.Data.ReadAllResult
  id: ReadAllResult
  parent: EventStore.Core.Data
  children:
  - EventStore.Core.Data.ReadAllResult.AccessDenied
  - EventStore.Core.Data.ReadAllResult.Error
  - EventStore.Core.Data.ReadAllResult.NotModified
  - EventStore.Core.Data.ReadAllResult.Success
  langs:
  - csharp
  - vb
  name: ReadAllResult
  nameWithType: ReadAllResult
  fullName: EventStore.Core.Data.ReadAllResult
  type: Enum
  source:
    remote:
      path: src/EventStore.Core/Data/ReadAllResult.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ReadAllResult
    path: ../EventStore/src/EventStore.Core/Data/ReadAllResult.cs
    startLine: 2
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: 'public enum ReadAllResult : int'
    content.vb: Public Enum ReadAllResult As Integer
  extensionMethods:
  - EventStore.Core.Data.ReadAllResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Data.ReadAllResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Data.ReadAllResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.Core.Data.ReadAllResult.Success
  commentId: F:EventStore.Core.Data.ReadAllResult.Success
  id: Success
  parent: EventStore.Core.Data.ReadAllResult
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: ReadAllResult.Success
  fullName: EventStore.Core.Data.ReadAllResult.Success
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/ReadAllResult.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Success
    path: ../EventStore/src/EventStore.Core/Data/ReadAllResult.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: Success = null
    return:
      type: EventStore.Core.Data.ReadAllResult
    content.vb: Success = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Data.ReadAllResult.NotModified
  commentId: F:EventStore.Core.Data.ReadAllResult.NotModified
  id: NotModified
  parent: EventStore.Core.Data.ReadAllResult
  langs:
  - csharp
  - vb
  name: NotModified
  nameWithType: ReadAllResult.NotModified
  fullName: EventStore.Core.Data.ReadAllResult.NotModified
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/ReadAllResult.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: NotModified
    path: ../EventStore/src/EventStore.Core/Data/ReadAllResult.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: NotModified = null
    return:
      type: EventStore.Core.Data.ReadAllResult
    content.vb: NotModified = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Data.ReadAllResult.Error
  commentId: F:EventStore.Core.Data.ReadAllResult.Error
  id: Error
  parent: EventStore.Core.Data.ReadAllResult
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: ReadAllResult.Error
  fullName: EventStore.Core.Data.ReadAllResult.Error
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/ReadAllResult.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Error
    path: ../EventStore/src/EventStore.Core/Data/ReadAllResult.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: Error = null
    return:
      type: EventStore.Core.Data.ReadAllResult
    content.vb: Error = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Data.ReadAllResult.AccessDenied
  commentId: F:EventStore.Core.Data.ReadAllResult.AccessDenied
  id: AccessDenied
  parent: EventStore.Core.Data.ReadAllResult
  langs:
  - csharp
  - vb
  name: AccessDenied
  nameWithType: ReadAllResult.AccessDenied
  fullName: EventStore.Core.Data.ReadAllResult.AccessDenied
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/ReadAllResult.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: AccessDenied
    path: ../EventStore/src/EventStore.Core/Data/ReadAllResult.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: AccessDenied = null
    return:
      type: EventStore.Core.Data.ReadAllResult
    content.vb: AccessDenied = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Data.ReadAllResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<ReadAllResult>()
  nameWithType: EnumExtensions.EnumValueName<ReadAllResult>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Data.ReadAllResult>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of ReadAllResult)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Data.ReadAllResult)()
  name.vb: EnumValueName(Of ReadAllResult)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<ReadAllResult>
    nameWithType: EnumExtensions.EnumValueName<ReadAllResult>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Data.ReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of ReadAllResult)
    nameWithType: EnumExtensions.EnumValueName(Of ReadAllResult)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Data.ReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.ReadAllResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ReadAllResult>()
  nameWithType: ProtobufExtensions.Serialize<ReadAllResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Data.ReadAllResult>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ReadAllResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Data.ReadAllResult)()
  name.vb: Serialize(Of ReadAllResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ReadAllResult>
    nameWithType: ProtobufExtensions.Serialize<ReadAllResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Data.ReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ReadAllResult)
    nameWithType: ProtobufExtensions.Serialize(Of ReadAllResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Data.ReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.ReadAllResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ReadAllResult>()
  nameWithType: ProtobufExtensions.SerializeToArray<ReadAllResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Data.ReadAllResult>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ReadAllResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Data.ReadAllResult)()
  name.vb: SerializeToArray(Of ReadAllResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ReadAllResult>
    nameWithType: ProtobufExtensions.SerializeToArray<ReadAllResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Data.ReadAllResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ReadAllResult)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ReadAllResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Data.ReadAllResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Data.ReadAllResult
  commentId: T:EventStore.Core.Data.ReadAllResult
  parent: EventStore.Core.Data
  name: ReadAllResult
  nameWithType: ReadAllResult
  fullName: EventStore.Core.Data.ReadAllResult

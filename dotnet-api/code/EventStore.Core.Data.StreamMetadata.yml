### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Data.StreamMetadata
  commentId: T:EventStore.Core.Data.StreamMetadata
  id: StreamMetadata
  parent: EventStore.Core.Data
  children:
  - EventStore.Core.Data.StreamMetadata.#ctor(System.Nullable{System.Int64},System.Nullable{TimeSpan},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{TimeSpan},EventStore.Core.Data.StreamAcl)
  - EventStore.Core.Data.StreamMetadata.Acl
  - EventStore.Core.Data.StreamMetadata.CacheControl
  - EventStore.Core.Data.StreamMetadata.Empty
  - EventStore.Core.Data.StreamMetadata.FromJson(System.String)
  - EventStore.Core.Data.StreamMetadata.FromJsonBytes(System.Byte[])
  - EventStore.Core.Data.StreamMetadata.FromJsonReader(JsonTextReader)
  - EventStore.Core.Data.StreamMetadata.MaxAge
  - EventStore.Core.Data.StreamMetadata.MaxCount
  - EventStore.Core.Data.StreamMetadata.TempStream
  - EventStore.Core.Data.StreamMetadata.ToJsonBytes
  - EventStore.Core.Data.StreamMetadata.ToJsonString
  - EventStore.Core.Data.StreamMetadata.ToString
  - EventStore.Core.Data.StreamMetadata.TruncateBefore
  langs:
  - csharp
  - vb
  name: StreamMetadata
  nameWithType: StreamMetadata
  fullName: EventStore.Core.Data.StreamMetadata
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Data/StreamMetadata.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: StreamMetadata
    path: ../EventStore/src/EventStore.Core/Data/StreamMetadata.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: 'public class StreamMetadata : object'
    content.vb: >-
      Public Class StreamMetadata
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Data.StreamMetadata.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Data.StreamMetadata.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Data.StreamMetadata.Empty
  commentId: F:EventStore.Core.Data.StreamMetadata.Empty
  id: Empty
  parent: EventStore.Core.Data.StreamMetadata
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: StreamMetadata.Empty
  fullName: EventStore.Core.Data.StreamMetadata.Empty
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/StreamMetadata.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Empty
    path: ../EventStore/src/EventStore.Core/Data/StreamMetadata.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public static readonly StreamMetadata Empty
    return:
      type: EventStore.Core.Data.StreamMetadata
    content.vb: Public Shared ReadOnly Empty As StreamMetadata
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EventStore.Core.Data.StreamMetadata.MaxCount
  commentId: F:EventStore.Core.Data.StreamMetadata.MaxCount
  id: MaxCount
  parent: EventStore.Core.Data.StreamMetadata
  langs:
  - csharp
  - vb
  name: MaxCount
  nameWithType: StreamMetadata.MaxCount
  fullName: EventStore.Core.Data.StreamMetadata.MaxCount
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/StreamMetadata.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: MaxCount
    path: ../EventStore/src/EventStore.Core/Data/StreamMetadata.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly long? MaxCount
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public ReadOnly MaxCount As Long?
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.StreamMetadata.MaxAge
  commentId: F:EventStore.Core.Data.StreamMetadata.MaxAge
  id: MaxAge
  parent: EventStore.Core.Data.StreamMetadata
  langs:
  - csharp
  - vb
  name: MaxAge
  nameWithType: StreamMetadata.MaxAge
  fullName: EventStore.Core.Data.StreamMetadata.MaxAge
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/StreamMetadata.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: MaxAge
    path: ../EventStore/src/EventStore.Core/Data/StreamMetadata.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly TimeSpan? MaxAge
    return:
      type: System.Nullable{TimeSpan}
    content.vb: Public ReadOnly MaxAge As TimeSpan?
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.StreamMetadata.TruncateBefore
  commentId: F:EventStore.Core.Data.StreamMetadata.TruncateBefore
  id: TruncateBefore
  parent: EventStore.Core.Data.StreamMetadata
  langs:
  - csharp
  - vb
  name: TruncateBefore
  nameWithType: StreamMetadata.TruncateBefore
  fullName: EventStore.Core.Data.StreamMetadata.TruncateBefore
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/StreamMetadata.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: TruncateBefore
    path: ../EventStore/src/EventStore.Core/Data/StreamMetadata.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly long? TruncateBefore
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public ReadOnly TruncateBefore As Long?
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.StreamMetadata.TempStream
  commentId: F:EventStore.Core.Data.StreamMetadata.TempStream
  id: TempStream
  parent: EventStore.Core.Data.StreamMetadata
  langs:
  - csharp
  - vb
  name: TempStream
  nameWithType: StreamMetadata.TempStream
  fullName: EventStore.Core.Data.StreamMetadata.TempStream
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/StreamMetadata.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: TempStream
    path: ../EventStore/src/EventStore.Core/Data/StreamMetadata.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly bool? TempStream
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public ReadOnly TempStream As Boolean?
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.StreamMetadata.CacheControl
  commentId: F:EventStore.Core.Data.StreamMetadata.CacheControl
  id: CacheControl
  parent: EventStore.Core.Data.StreamMetadata
  langs:
  - csharp
  - vb
  name: CacheControl
  nameWithType: StreamMetadata.CacheControl
  fullName: EventStore.Core.Data.StreamMetadata.CacheControl
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/StreamMetadata.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CacheControl
    path: ../EventStore/src/EventStore.Core/Data/StreamMetadata.cs
    startLine: 20
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly TimeSpan? CacheControl
    return:
      type: System.Nullable{TimeSpan}
    content.vb: Public ReadOnly CacheControl As TimeSpan?
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.StreamMetadata.Acl
  commentId: F:EventStore.Core.Data.StreamMetadata.Acl
  id: Acl
  parent: EventStore.Core.Data.StreamMetadata
  langs:
  - csharp
  - vb
  name: Acl
  nameWithType: StreamMetadata.Acl
  fullName: EventStore.Core.Data.StreamMetadata.Acl
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Data/StreamMetadata.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Acl
    path: ../EventStore/src/EventStore.Core/Data/StreamMetadata.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public readonly StreamAcl Acl
    return:
      type: EventStore.Core.Data.StreamAcl
    content.vb: Public ReadOnly Acl As StreamAcl
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Data.StreamMetadata.#ctor(System.Nullable{System.Int64},System.Nullable{TimeSpan},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{TimeSpan},EventStore.Core.Data.StreamAcl)
  commentId: M:EventStore.Core.Data.StreamMetadata.#ctor(System.Nullable{System.Int64},System.Nullable{TimeSpan},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{TimeSpan},EventStore.Core.Data.StreamAcl)
  id: '#ctor(System.Nullable{System.Int64},System.Nullable{TimeSpan},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{TimeSpan},EventStore.Core.Data.StreamAcl)'
  parent: EventStore.Core.Data.StreamMetadata
  langs:
  - csharp
  - vb
  name: StreamMetadata(Nullable<Int64>, Nullable<TimeSpan>, Nullable<Int64>, Nullable<Boolean>, Nullable<TimeSpan>, StreamAcl)
  nameWithType: StreamMetadata.StreamMetadata(Nullable<Int64>, Nullable<TimeSpan>, Nullable<Int64>, Nullable<Boolean>, Nullable<TimeSpan>, StreamAcl)
  fullName: EventStore.Core.Data.StreamMetadata.StreamMetadata(System.Nullable<System.Int64>, System.Nullable<TimeSpan>, System.Nullable<System.Int64>, System.Nullable<System.Boolean>, System.Nullable<TimeSpan>, EventStore.Core.Data.StreamAcl)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Data/StreamMetadata.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Data/StreamMetadata.cs
    startLine: 23
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public StreamMetadata(long? maxCount = null, TimeSpan? maxAge = null, long? truncateBefore = null, bool? tempStream = null, TimeSpan? cacheControl = null, StreamAcl acl = null)
    parameters:
    - id: maxCount
      type: System.Nullable{System.Int64}
    - id: maxAge
      type: System.Nullable{TimeSpan}
    - id: truncateBefore
      type: System.Nullable{System.Int64}
    - id: tempStream
      type: System.Nullable{System.Boolean}
    - id: cacheControl
      type: System.Nullable{TimeSpan}
    - id: acl
      type: EventStore.Core.Data.StreamAcl
    content.vb: Public Sub New(maxCount As Long? = Nothing, maxAge As TimeSpan? = Nothing, truncateBefore As Long? = Nothing, tempStream As Boolean? = Nothing, cacheControl As TimeSpan? = Nothing, acl As StreamAcl = Nothing)
  overload: EventStore.Core.Data.StreamMetadata.#ctor*
  nameWithType.vb: StreamMetadata.StreamMetadata(Nullable(Of Int64), Nullable(Of TimeSpan), Nullable(Of Int64), Nullable(Of Boolean), Nullable(Of TimeSpan), StreamAcl)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Data.StreamMetadata.StreamMetadata(System.Nullable(Of System.Int64), System.Nullable(Of TimeSpan), System.Nullable(Of System.Int64), System.Nullable(Of System.Boolean), System.Nullable(Of TimeSpan), EventStore.Core.Data.StreamAcl)
  name.vb: StreamMetadata(Nullable(Of Int64), Nullable(Of TimeSpan), Nullable(Of Int64), Nullable(Of Boolean), Nullable(Of TimeSpan), StreamAcl)
- uid: EventStore.Core.Data.StreamMetadata.ToString
  commentId: M:EventStore.Core.Data.StreamMetadata.ToString
  id: ToString
  parent: EventStore.Core.Data.StreamMetadata
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: StreamMetadata.ToString()
  fullName: EventStore.Core.Data.StreamMetadata.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Data/StreamMetadata.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.Core/Data/StreamMetadata.cs
    startLine: 48
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.Core.Data.StreamMetadata.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EventStore.Core.Data.StreamMetadata.FromJsonBytes(System.Byte[])
  commentId: M:EventStore.Core.Data.StreamMetadata.FromJsonBytes(System.Byte[])
  id: FromJsonBytes(System.Byte[])
  parent: EventStore.Core.Data.StreamMetadata
  langs:
  - csharp
  - vb
  name: FromJsonBytes(Byte[])
  nameWithType: StreamMetadata.FromJsonBytes(Byte[])
  fullName: EventStore.Core.Data.StreamMetadata.FromJsonBytes(System.Byte[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Data/StreamMetadata.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: FromJsonBytes
    path: ../EventStore/src/EventStore.Core/Data/StreamMetadata.cs
    startLine: 54
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public static StreamMetadata FromJsonBytes(byte[] json)
    parameters:
    - id: json
      type: System.Byte[]
    return:
      type: EventStore.Core.Data.StreamMetadata
    content.vb: Public Shared Function FromJsonBytes(json As Byte()) As StreamMetadata
  overload: EventStore.Core.Data.StreamMetadata.FromJsonBytes*
  nameWithType.vb: StreamMetadata.FromJsonBytes(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Data.StreamMetadata.FromJsonBytes(System.Byte())
  name.vb: FromJsonBytes(Byte())
- uid: EventStore.Core.Data.StreamMetadata.FromJson(System.String)
  commentId: M:EventStore.Core.Data.StreamMetadata.FromJson(System.String)
  id: FromJson(System.String)
  parent: EventStore.Core.Data.StreamMetadata
  langs:
  - csharp
  - vb
  name: FromJson(String)
  nameWithType: StreamMetadata.FromJson(String)
  fullName: EventStore.Core.Data.StreamMetadata.FromJson(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Data/StreamMetadata.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: FromJson
    path: ../EventStore/src/EventStore.Core/Data/StreamMetadata.cs
    startLine: 62
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public static StreamMetadata FromJson(string json)
    parameters:
    - id: json
      type: System.String
    return:
      type: EventStore.Core.Data.StreamMetadata
    content.vb: Public Shared Function FromJson(json As String) As StreamMetadata
  overload: EventStore.Core.Data.StreamMetadata.FromJson*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Data.StreamMetadata.FromJsonReader(JsonTextReader)
  commentId: M:EventStore.Core.Data.StreamMetadata.FromJsonReader(JsonTextReader)
  id: FromJsonReader(JsonTextReader)
  parent: EventStore.Core.Data.StreamMetadata
  langs:
  - csharp
  - vb
  name: FromJsonReader(JsonTextReader)
  nameWithType: StreamMetadata.FromJsonReader(JsonTextReader)
  fullName: EventStore.Core.Data.StreamMetadata.FromJsonReader(JsonTextReader)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Data/StreamMetadata.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: FromJsonReader
    path: ../EventStore/src/EventStore.Core/Data/StreamMetadata.cs
    startLine: 70
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public static StreamMetadata FromJsonReader(JsonTextReader reader)
    parameters:
    - id: reader
      type: JsonTextReader
    return:
      type: EventStore.Core.Data.StreamMetadata
    content.vb: Public Shared Function FromJsonReader(reader As JsonTextReader) As StreamMetadata
  overload: EventStore.Core.Data.StreamMetadata.FromJsonReader*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Data.StreamMetadata.ToJsonBytes
  commentId: M:EventStore.Core.Data.StreamMetadata.ToJsonBytes
  id: ToJsonBytes
  parent: EventStore.Core.Data.StreamMetadata
  langs:
  - csharp
  - vb
  name: ToJsonBytes()
  nameWithType: StreamMetadata.ToJsonBytes()
  fullName: EventStore.Core.Data.StreamMetadata.ToJsonBytes()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Data/StreamMetadata.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ToJsonBytes
    path: ../EventStore/src/EventStore.Core/Data/StreamMetadata.cs
    startLine: 210
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public byte[] ToJsonBytes()
    return:
      type: System.Byte[]
    content.vb: Public Function ToJsonBytes As Byte()
  overload: EventStore.Core.Data.StreamMetadata.ToJsonBytes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Data.StreamMetadata.ToJsonString
  commentId: M:EventStore.Core.Data.StreamMetadata.ToJsonString
  id: ToJsonString
  parent: EventStore.Core.Data.StreamMetadata
  langs:
  - csharp
  - vb
  name: ToJsonString()
  nameWithType: StreamMetadata.ToJsonString()
  fullName: EventStore.Core.Data.StreamMetadata.ToJsonString()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Data/StreamMetadata.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ToJsonString
    path: ../EventStore/src/EventStore.Core/Data/StreamMetadata.cs
    startLine: 222
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public string ToJsonString()
    return:
      type: System.String
    content.vb: Public Function ToJsonString As String
  overload: EventStore.Core.Data.StreamMetadata.ToJsonString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.StreamMetadata.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<StreamMetadata>()
  nameWithType: ProtobufExtensions.Serialize<StreamMetadata>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Data.StreamMetadata>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of StreamMetadata)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Data.StreamMetadata)()
  name.vb: Serialize(Of StreamMetadata)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<StreamMetadata>
    nameWithType: ProtobufExtensions.Serialize<StreamMetadata>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Data.StreamMetadata>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of StreamMetadata)
    nameWithType: ProtobufExtensions.Serialize(Of StreamMetadata)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Data.StreamMetadata)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.StreamMetadata.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<StreamMetadata>()
  nameWithType: ProtobufExtensions.SerializeToArray<StreamMetadata>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Data.StreamMetadata>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of StreamMetadata)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Data.StreamMetadata)()
  name.vb: SerializeToArray(Of StreamMetadata)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<StreamMetadata>
    nameWithType: ProtobufExtensions.SerializeToArray<StreamMetadata>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Data.StreamMetadata>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of StreamMetadata)
    nameWithType: ProtobufExtensions.SerializeToArray(Of StreamMetadata)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Data.StreamMetadata)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Data.StreamMetadata
  commentId: T:EventStore.Core.Data.StreamMetadata
  parent: EventStore.Core.Data
  name: StreamMetadata
  nameWithType: StreamMetadata
  fullName: EventStore.Core.Data.StreamMetadata
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{TimeSpan}
  commentId: '!:System.Nullable{TimeSpan}'
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: '!:System.Nullable{System.Boolean}'
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.StreamAcl
  commentId: T:EventStore.Core.Data.StreamAcl
  parent: EventStore.Core.Data
  name: StreamAcl
  nameWithType: StreamAcl
  fullName: EventStore.Core.Data.StreamAcl
- uid: EventStore.Core.Data.StreamMetadata.#ctor*
  commentId: Overload:EventStore.Core.Data.StreamMetadata.#ctor
  name: StreamMetadata
  nameWithType: StreamMetadata.StreamMetadata
  fullName: EventStore.Core.Data.StreamMetadata.StreamMetadata
- uid: EventStore.Core.Data.StreamMetadata.ToString*
  commentId: Overload:EventStore.Core.Data.StreamMetadata.ToString
  name: ToString
  nameWithType: StreamMetadata.ToString
  fullName: EventStore.Core.Data.StreamMetadata.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Data.StreamMetadata.FromJsonBytes*
  commentId: Overload:EventStore.Core.Data.StreamMetadata.FromJsonBytes
  name: FromJsonBytes
  nameWithType: StreamMetadata.FromJsonBytes
  fullName: EventStore.Core.Data.StreamMetadata.FromJsonBytes
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Data.StreamMetadata.FromJson*
  commentId: Overload:EventStore.Core.Data.StreamMetadata.FromJson
  name: FromJson
  nameWithType: StreamMetadata.FromJson
  fullName: EventStore.Core.Data.StreamMetadata.FromJson
- uid: EventStore.Core.Data.StreamMetadata.FromJsonReader*
  commentId: Overload:EventStore.Core.Data.StreamMetadata.FromJsonReader
  name: FromJsonReader
  nameWithType: StreamMetadata.FromJsonReader
  fullName: EventStore.Core.Data.StreamMetadata.FromJsonReader
- uid: JsonTextReader
  commentId: '!:JsonTextReader'
  isExternal: true
  name: JsonTextReader
  nameWithType: JsonTextReader
  fullName: JsonTextReader
- uid: EventStore.Core.Data.StreamMetadata.ToJsonBytes*
  commentId: Overload:EventStore.Core.Data.StreamMetadata.ToJsonBytes
  name: ToJsonBytes
  nameWithType: StreamMetadata.ToJsonBytes
  fullName: EventStore.Core.Data.StreamMetadata.ToJsonBytes
- uid: EventStore.Core.Data.StreamMetadata.ToJsonString*
  commentId: Overload:EventStore.Core.Data.StreamMetadata.ToJsonString
  name: ToJsonString
  nameWithType: StreamMetadata.ToJsonString
  fullName: EventStore.Core.Data.StreamMetadata.ToJsonString

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Data.VNodeState
  commentId: T:EventStore.Core.Data.VNodeState
  id: VNodeState
  parent: EventStore.Core.Data
  children:
  - EventStore.Core.Data.VNodeState.CatchingUp
  - EventStore.Core.Data.VNodeState.Clone
  - EventStore.Core.Data.VNodeState.Initializing
  - EventStore.Core.Data.VNodeState.Manager
  - EventStore.Core.Data.VNodeState.Master
  - EventStore.Core.Data.VNodeState.PreMaster
  - EventStore.Core.Data.VNodeState.PreReplica
  - EventStore.Core.Data.VNodeState.Shutdown
  - EventStore.Core.Data.VNodeState.ShuttingDown
  - EventStore.Core.Data.VNodeState.Slave
  - EventStore.Core.Data.VNodeState.Unknown
  langs:
  - csharp
  - vb
  name: VNodeState
  nameWithType: VNodeState
  fullName: EventStore.Core.Data.VNodeState
  type: Enum
  source:
    id: VNodeState
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Data/VNodeState.cs
    startLine: 1
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: public enum VNodeState
    content.vb: Public Enum VNodeState
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Data.VNodeState.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Data.VNodeState.EventStore.Core.Data.VNodeStateExtensions.IsReplica
  - EventStore.Core.Data.VNodeState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Data.VNodeState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.Core.Data.VNodeState.Initializing
  commentId: F:EventStore.Core.Data.VNodeState.Initializing
  id: Initializing
  parent: EventStore.Core.Data.VNodeState
  langs:
  - csharp
  - vb
  name: Initializing
  nameWithType: VNodeState.Initializing
  fullName: EventStore.Core.Data.VNodeState.Initializing
  type: Field
  source:
    id: Initializing
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Data/VNodeState.cs
    startLine: 2
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: Initializing = 0
    return:
      type: EventStore.Core.Data.VNodeState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Data.VNodeState.Unknown
  commentId: F:EventStore.Core.Data.VNodeState.Unknown
  id: Unknown
  parent: EventStore.Core.Data.VNodeState
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: VNodeState.Unknown
  fullName: EventStore.Core.Data.VNodeState.Unknown
  type: Field
  source:
    id: Unknown
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Data/VNodeState.cs
    startLine: 3
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: Unknown = 1
    return:
      type: EventStore.Core.Data.VNodeState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Data.VNodeState.PreReplica
  commentId: F:EventStore.Core.Data.VNodeState.PreReplica
  id: PreReplica
  parent: EventStore.Core.Data.VNodeState
  langs:
  - csharp
  - vb
  name: PreReplica
  nameWithType: VNodeState.PreReplica
  fullName: EventStore.Core.Data.VNodeState.PreReplica
  type: Field
  source:
    id: PreReplica
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Data/VNodeState.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: PreReplica = 2
    return:
      type: EventStore.Core.Data.VNodeState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Data.VNodeState.CatchingUp
  commentId: F:EventStore.Core.Data.VNodeState.CatchingUp
  id: CatchingUp
  parent: EventStore.Core.Data.VNodeState
  langs:
  - csharp
  - vb
  name: CatchingUp
  nameWithType: VNodeState.CatchingUp
  fullName: EventStore.Core.Data.VNodeState.CatchingUp
  type: Field
  source:
    id: CatchingUp
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Data/VNodeState.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: CatchingUp = 3
    return:
      type: EventStore.Core.Data.VNodeState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Data.VNodeState.Clone
  commentId: F:EventStore.Core.Data.VNodeState.Clone
  id: Clone
  parent: EventStore.Core.Data.VNodeState
  langs:
  - csharp
  - vb
  name: Clone
  nameWithType: VNodeState.Clone
  fullName: EventStore.Core.Data.VNodeState.Clone
  type: Field
  source:
    id: Clone
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Data/VNodeState.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: Clone = 4
    return:
      type: EventStore.Core.Data.VNodeState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Data.VNodeState.Slave
  commentId: F:EventStore.Core.Data.VNodeState.Slave
  id: Slave
  parent: EventStore.Core.Data.VNodeState
  langs:
  - csharp
  - vb
  name: Slave
  nameWithType: VNodeState.Slave
  fullName: EventStore.Core.Data.VNodeState.Slave
  type: Field
  source:
    id: Slave
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Data/VNodeState.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: Slave = 5
    return:
      type: EventStore.Core.Data.VNodeState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Data.VNodeState.PreMaster
  commentId: F:EventStore.Core.Data.VNodeState.PreMaster
  id: PreMaster
  parent: EventStore.Core.Data.VNodeState
  langs:
  - csharp
  - vb
  name: PreMaster
  nameWithType: VNodeState.PreMaster
  fullName: EventStore.Core.Data.VNodeState.PreMaster
  type: Field
  source:
    id: PreMaster
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Data/VNodeState.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: PreMaster = 6
    return:
      type: EventStore.Core.Data.VNodeState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Data.VNodeState.Master
  commentId: F:EventStore.Core.Data.VNodeState.Master
  id: Master
  parent: EventStore.Core.Data.VNodeState
  langs:
  - csharp
  - vb
  name: Master
  nameWithType: VNodeState.Master
  fullName: EventStore.Core.Data.VNodeState.Master
  type: Field
  source:
    id: Master
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Data/VNodeState.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: Master = 7
    return:
      type: EventStore.Core.Data.VNodeState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Data.VNodeState.Manager
  commentId: F:EventStore.Core.Data.VNodeState.Manager
  id: Manager
  parent: EventStore.Core.Data.VNodeState
  langs:
  - csharp
  - vb
  name: Manager
  nameWithType: VNodeState.Manager
  fullName: EventStore.Core.Data.VNodeState.Manager
  type: Field
  source:
    id: Manager
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Data/VNodeState.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: Manager = 8
    return:
      type: EventStore.Core.Data.VNodeState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Data.VNodeState.ShuttingDown
  commentId: F:EventStore.Core.Data.VNodeState.ShuttingDown
  id: ShuttingDown
  parent: EventStore.Core.Data.VNodeState
  langs:
  - csharp
  - vb
  name: ShuttingDown
  nameWithType: VNodeState.ShuttingDown
  fullName: EventStore.Core.Data.VNodeState.ShuttingDown
  type: Field
  source:
    id: ShuttingDown
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Data/VNodeState.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: ShuttingDown = 9
    return:
      type: EventStore.Core.Data.VNodeState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Data.VNodeState.Shutdown
  commentId: F:EventStore.Core.Data.VNodeState.Shutdown
  id: Shutdown
  parent: EventStore.Core.Data.VNodeState
  langs:
  - csharp
  - vb
  name: Shutdown
  nameWithType: VNodeState.Shutdown
  fullName: EventStore.Core.Data.VNodeState.Shutdown
  type: Field
  source:
    id: Shutdown
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Data/VNodeState.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Data
  syntax:
    content: Shutdown = 10
    return:
      type: EventStore.Core.Data.VNodeState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.VNodeState.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<VNodeState>()
  nameWithType: EnumExtensions.EnumValueName<VNodeState>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Data.VNodeState>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of VNodeState)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Data.VNodeState)()
  name.vb: EnumValueName(Of VNodeState)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<VNodeState>
    nameWithType: EnumExtensions.EnumValueName<VNodeState>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Data.VNodeState>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of VNodeState)
    nameWithType: EnumExtensions.EnumValueName(Of VNodeState)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Data.VNodeState)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.VNodeState.EventStore.Core.Data.VNodeStateExtensions.IsReplica
  commentId: M:EventStore.Core.Data.VNodeStateExtensions.IsReplica(EventStore.Core.Data.VNodeState)
  parent: EventStore.Core.Data.VNodeStateExtensions
  definition: EventStore.Core.Data.VNodeStateExtensions.IsReplica(EventStore.Core.Data.VNodeState)
  name: IsReplica()
  nameWithType: VNodeStateExtensions.IsReplica()
  fullName: EventStore.Core.Data.VNodeStateExtensions.IsReplica()
  spec.csharp:
  - uid: EventStore.Core.Data.VNodeStateExtensions.IsReplica
    name: IsReplica
    nameWithType: VNodeStateExtensions.IsReplica
    fullName: EventStore.Core.Data.VNodeStateExtensions.IsReplica
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Data.VNodeStateExtensions.IsReplica
    name: IsReplica
    nameWithType: VNodeStateExtensions.IsReplica
    fullName: EventStore.Core.Data.VNodeStateExtensions.IsReplica
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.VNodeState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<VNodeState>()
  nameWithType: ProtobufExtensions.Serialize<VNodeState>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Data.VNodeState>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of VNodeState)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Data.VNodeState)()
  name.vb: Serialize(Of VNodeState)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<VNodeState>
    nameWithType: ProtobufExtensions.Serialize<VNodeState>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Data.VNodeState>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of VNodeState)
    nameWithType: ProtobufExtensions.Serialize(Of VNodeState)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Data.VNodeState)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.VNodeState.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<VNodeState>()
  nameWithType: ProtobufExtensions.SerializeToArray<VNodeState>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Data.VNodeState>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of VNodeState)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Data.VNodeState)()
  name.vb: SerializeToArray(Of VNodeState)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<VNodeState>
    nameWithType: ProtobufExtensions.SerializeToArray<VNodeState>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Data.VNodeState>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of VNodeState)
    nameWithType: ProtobufExtensions.SerializeToArray(Of VNodeState)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Data.VNodeState)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Data.VNodeStateExtensions.IsReplica(EventStore.Core.Data.VNodeState)
  commentId: M:EventStore.Core.Data.VNodeStateExtensions.IsReplica(EventStore.Core.Data.VNodeState)
  name: IsReplica(VNodeState)
  nameWithType: VNodeStateExtensions.IsReplica(VNodeState)
  fullName: EventStore.Core.Data.VNodeStateExtensions.IsReplica(EventStore.Core.Data.VNodeState)
  spec.csharp:
  - uid: EventStore.Core.Data.VNodeStateExtensions.IsReplica(EventStore.Core.Data.VNodeState)
    name: IsReplica
    nameWithType: VNodeStateExtensions.IsReplica
    fullName: EventStore.Core.Data.VNodeStateExtensions.IsReplica
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Data.VNodeState
    name: VNodeState
    nameWithType: VNodeState
    fullName: EventStore.Core.Data.VNodeState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Data.VNodeStateExtensions.IsReplica(EventStore.Core.Data.VNodeState)
    name: IsReplica
    nameWithType: VNodeStateExtensions.IsReplica
    fullName: EventStore.Core.Data.VNodeStateExtensions.IsReplica
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Data.VNodeState
    name: VNodeState
    nameWithType: VNodeState
    fullName: EventStore.Core.Data.VNodeState
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Data.VNodeStateExtensions
  commentId: T:EventStore.Core.Data.VNodeStateExtensions
  parent: EventStore.Core.Data
  name: VNodeStateExtensions
  nameWithType: VNodeStateExtensions
  fullName: EventStore.Core.Data.VNodeStateExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Data.VNodeState
  commentId: T:EventStore.Core.Data.VNodeState
  parent: EventStore.Core.Data
  name: VNodeState
  nameWithType: VNodeState
  fullName: EventStore.Core.Data.VNodeState

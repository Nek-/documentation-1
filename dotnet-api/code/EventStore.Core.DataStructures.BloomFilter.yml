### YamlMime:ManagedReference
items:
- uid: EventStore.Core.DataStructures.BloomFilter
  commentId: T:EventStore.Core.DataStructures.BloomFilter
  id: BloomFilter
  parent: EventStore.Core.DataStructures
  children:
  - EventStore.Core.DataStructures.BloomFilter.#ctor(System.Int32,System.Double)
  - EventStore.Core.DataStructures.BloomFilter.Add(System.Int64)
  - EventStore.Core.DataStructures.BloomFilter.MayExist(System.Int64)
  - EventStore.Core.DataStructures.BloomFilter.NumBits
  - EventStore.Core.DataStructures.BloomFilter.NumHashFunctions
  - EventStore.Core.DataStructures.BloomFilter.toBytes(System.Int64)
  langs:
  - csharp
  - vb
  name: BloomFilter
  nameWithType: BloomFilter
  fullName: EventStore.Core.DataStructures.BloomFilter
  type: Class
  source:
    remote:
      path: src/EventStore.Core/DataStructures/BloomFilter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: BloomFilter
    path: ../EventStore/src/EventStore.Core/DataStructures/BloomFilter.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: 'public class BloomFilter : object'
    content.vb: >-
      Public Class BloomFilter
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.DataStructures.BloomFilter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.DataStructures.BloomFilter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.DataStructures.BloomFilter.NumBits
  commentId: P:EventStore.Core.DataStructures.BloomFilter.NumBits
  id: NumBits
  parent: EventStore.Core.DataStructures.BloomFilter
  langs:
  - csharp
  - vb
  name: NumBits
  nameWithType: BloomFilter.NumBits
  fullName: EventStore.Core.DataStructures.BloomFilter.NumBits
  type: Property
  source:
    remote:
      path: src/EventStore.Core/DataStructures/BloomFilter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: NumBits
    path: ../EventStore/src/EventStore.Core/DataStructures/BloomFilter.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public int NumBits { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NumBits As Integer
  overload: EventStore.Core.DataStructures.BloomFilter.NumBits*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.DataStructures.BloomFilter.NumHashFunctions
  commentId: P:EventStore.Core.DataStructures.BloomFilter.NumHashFunctions
  id: NumHashFunctions
  parent: EventStore.Core.DataStructures.BloomFilter
  langs:
  - csharp
  - vb
  name: NumHashFunctions
  nameWithType: BloomFilter.NumHashFunctions
  fullName: EventStore.Core.DataStructures.BloomFilter.NumHashFunctions
  type: Property
  source:
    remote:
      path: src/EventStore.Core/DataStructures/BloomFilter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: NumHashFunctions
    path: ../EventStore/src/EventStore.Core/DataStructures/BloomFilter.cs
    startLine: 20
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public int NumHashFunctions { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NumHashFunctions As Integer
  overload: EventStore.Core.DataStructures.BloomFilter.NumHashFunctions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.DataStructures.BloomFilter.#ctor(System.Int32,System.Double)
  commentId: M:EventStore.Core.DataStructures.BloomFilter.#ctor(System.Int32,System.Double)
  id: '#ctor(System.Int32,System.Double)'
  parent: EventStore.Core.DataStructures.BloomFilter
  langs:
  - csharp
  - vb
  name: BloomFilter(Int32, Double)
  nameWithType: BloomFilter.BloomFilter(Int32, Double)
  fullName: EventStore.Core.DataStructures.BloomFilter.BloomFilter(System.Int32, System.Double)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/DataStructures/BloomFilter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/DataStructures/BloomFilter.cs
    startLine: 23
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public BloomFilter(int n, double p)
    parameters:
    - id: n
      type: System.Int32
    - id: p
      type: System.Double
    content.vb: Public Sub New(n As Integer, p As Double)
  overload: EventStore.Core.DataStructures.BloomFilter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.DataStructures.BloomFilter.Add(System.Int64)
  commentId: M:EventStore.Core.DataStructures.BloomFilter.Add(System.Int64)
  id: Add(System.Int64)
  parent: EventStore.Core.DataStructures.BloomFilter
  langs:
  - csharp
  - vb
  name: Add(Int64)
  nameWithType: BloomFilter.Add(Int64)
  fullName: EventStore.Core.DataStructures.BloomFilter.Add(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/DataStructures/BloomFilter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Add
    path: ../EventStore/src/EventStore.Core/DataStructures/BloomFilter.cs
    startLine: 43
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public void Add(long item)
    parameters:
    - id: item
      type: System.Int64
    content.vb: Public Sub Add(item As Long)
  overload: EventStore.Core.DataStructures.BloomFilter.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.DataStructures.BloomFilter.MayExist(System.Int64)
  commentId: M:EventStore.Core.DataStructures.BloomFilter.MayExist(System.Int64)
  id: MayExist(System.Int64)
  parent: EventStore.Core.DataStructures.BloomFilter
  langs:
  - csharp
  - vb
  name: MayExist(Int64)
  nameWithType: BloomFilter.MayExist(Int64)
  fullName: EventStore.Core.DataStructures.BloomFilter.MayExist(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/DataStructures/BloomFilter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: MayExist
    path: ../EventStore/src/EventStore.Core/DataStructures/BloomFilter.cs
    startLine: 57
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public bool MayExist(long item)
    parameters:
    - id: item
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Public Function MayExist(item As Long) As Boolean
  overload: EventStore.Core.DataStructures.BloomFilter.MayExist*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.DataStructures.BloomFilter.toBytes(System.Int64)
  commentId: M:EventStore.Core.DataStructures.BloomFilter.toBytes(System.Int64)
  id: toBytes(System.Int64)
  parent: EventStore.Core.DataStructures.BloomFilter
  langs:
  - csharp
  - vb
  name: toBytes(Int64)
  nameWithType: BloomFilter.toBytes(Int64)
  fullName: EventStore.Core.DataStructures.BloomFilter.toBytes(System.Int64)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/DataStructures/BloomFilter.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: toBytes
    path: ../EventStore/src/EventStore.Core/DataStructures/BloomFilter.cs
    startLine: 74
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public static byte[] toBytes(long value)
    parameters:
    - id: value
      type: System.Int64
    return:
      type: System.Byte[]
    content.vb: Public Shared Function toBytes(value As Long) As Byte()
  overload: EventStore.Core.DataStructures.BloomFilter.toBytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Core.DataStructures
  commentId: N:EventStore.Core.DataStructures
  name: EventStore.Core.DataStructures
  nameWithType: EventStore.Core.DataStructures
  fullName: EventStore.Core.DataStructures
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.DataStructures.BloomFilter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<BloomFilter>()
  nameWithType: ProtobufExtensions.Serialize<BloomFilter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.DataStructures.BloomFilter>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of BloomFilter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.DataStructures.BloomFilter)()
  name.vb: Serialize(Of BloomFilter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<BloomFilter>
    nameWithType: ProtobufExtensions.Serialize<BloomFilter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.DataStructures.BloomFilter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of BloomFilter)
    nameWithType: ProtobufExtensions.Serialize(Of BloomFilter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.DataStructures.BloomFilter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.DataStructures.BloomFilter.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<BloomFilter>()
  nameWithType: ProtobufExtensions.SerializeToArray<BloomFilter>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.DataStructures.BloomFilter>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of BloomFilter)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.DataStructures.BloomFilter)()
  name.vb: SerializeToArray(Of BloomFilter)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<BloomFilter>
    nameWithType: ProtobufExtensions.SerializeToArray<BloomFilter>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.DataStructures.BloomFilter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of BloomFilter)
    nameWithType: ProtobufExtensions.SerializeToArray(Of BloomFilter)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.DataStructures.BloomFilter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.DataStructures.BloomFilter.NumBits*
  commentId: Overload:EventStore.Core.DataStructures.BloomFilter.NumBits
  name: NumBits
  nameWithType: BloomFilter.NumBits
  fullName: EventStore.Core.DataStructures.BloomFilter.NumBits
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.DataStructures.BloomFilter.NumHashFunctions*
  commentId: Overload:EventStore.Core.DataStructures.BloomFilter.NumHashFunctions
  name: NumHashFunctions
  nameWithType: BloomFilter.NumHashFunctions
  fullName: EventStore.Core.DataStructures.BloomFilter.NumHashFunctions
- uid: EventStore.Core.DataStructures.BloomFilter.#ctor*
  commentId: Overload:EventStore.Core.DataStructures.BloomFilter.#ctor
  name: BloomFilter
  nameWithType: BloomFilter.BloomFilter
  fullName: EventStore.Core.DataStructures.BloomFilter.BloomFilter
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: EventStore.Core.DataStructures.BloomFilter.Add*
  commentId: Overload:EventStore.Core.DataStructures.BloomFilter.Add
  name: Add
  nameWithType: BloomFilter.Add
  fullName: EventStore.Core.DataStructures.BloomFilter.Add
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.DataStructures.BloomFilter.MayExist*
  commentId: Overload:EventStore.Core.DataStructures.BloomFilter.MayExist
  name: MayExist
  nameWithType: BloomFilter.MayExist
  fullName: EventStore.Core.DataStructures.BloomFilter.MayExist
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.DataStructures.BloomFilter.toBytes*
  commentId: Overload:EventStore.Core.DataStructures.BloomFilter.toBytes
  name: toBytes
  nameWithType: BloomFilter.toBytes
  fullName: EventStore.Core.DataStructures.BloomFilter.toBytes
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()

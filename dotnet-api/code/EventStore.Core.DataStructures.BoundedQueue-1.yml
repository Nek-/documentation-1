### YamlMime:ManagedReference
items:
- uid: EventStore.Core.DataStructures.BoundedQueue`1
  commentId: T:EventStore.Core.DataStructures.BoundedQueue`1
  id: BoundedQueue`1
  parent: EventStore.Core.DataStructures
  children:
  - EventStore.Core.DataStructures.BoundedQueue`1.#ctor(System.Int32)
  - EventStore.Core.DataStructures.BoundedQueue`1.CanAccept
  - EventStore.Core.DataStructures.BoundedQueue`1.Count
  - EventStore.Core.DataStructures.BoundedQueue`1.Dequeue
  - EventStore.Core.DataStructures.BoundedQueue`1.Enqueue(`0)
  - EventStore.Core.DataStructures.BoundedQueue`1.MaxCapacity
  - EventStore.Core.DataStructures.BoundedQueue`1.Peek
  langs:
  - csharp
  - vb
  name: BoundedQueue<T>
  nameWithType: BoundedQueue<T>
  fullName: EventStore.Core.DataStructures.BoundedQueue<T>
  type: Class
  source:
    remote:
      path: src/EventStore.Core/DataStructures/BoundedQueue.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: BoundedQueue
    path: ../EventStore/src/EventStore.Core/DataStructures/BoundedQueue.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: 'public class BoundedQueue<T> : object'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class BoundedQueue(Of T)
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.DataStructures.BoundedQueue`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.DataStructures.BoundedQueue`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  nameWithType.vb: BoundedQueue(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: EventStore.Core.DataStructures.BoundedQueue(Of T)
  name.vb: BoundedQueue(Of T)
- uid: EventStore.Core.DataStructures.BoundedQueue`1.MaxCapacity
  commentId: P:EventStore.Core.DataStructures.BoundedQueue`1.MaxCapacity
  id: MaxCapacity
  parent: EventStore.Core.DataStructures.BoundedQueue`1
  langs:
  - csharp
  - vb
  name: MaxCapacity
  nameWithType: BoundedQueue<T>.MaxCapacity
  fullName: EventStore.Core.DataStructures.BoundedQueue<T>.MaxCapacity
  type: Property
  source:
    remote:
      path: src/EventStore.Core/DataStructures/BoundedQueue.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: MaxCapacity
    path: ../EventStore/src/EventStore.Core/DataStructures/BoundedQueue.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public int MaxCapacity { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaxCapacity As Integer
  overload: EventStore.Core.DataStructures.BoundedQueue`1.MaxCapacity*
  nameWithType.vb: BoundedQueue(Of T).MaxCapacity
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: EventStore.Core.DataStructures.BoundedQueue(Of T).MaxCapacity
- uid: EventStore.Core.DataStructures.BoundedQueue`1.Count
  commentId: P:EventStore.Core.DataStructures.BoundedQueue`1.Count
  id: Count
  parent: EventStore.Core.DataStructures.BoundedQueue`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: BoundedQueue<T>.Count
  fullName: EventStore.Core.DataStructures.BoundedQueue<T>.Count
  type: Property
  source:
    remote:
      path: src/EventStore.Core/DataStructures/BoundedQueue.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Count
    path: ../EventStore/src/EventStore.Core/DataStructures/BoundedQueue.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: EventStore.Core.DataStructures.BoundedQueue`1.Count*
  nameWithType.vb: BoundedQueue(Of T).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: EventStore.Core.DataStructures.BoundedQueue(Of T).Count
- uid: EventStore.Core.DataStructures.BoundedQueue`1.#ctor(System.Int32)
  commentId: M:EventStore.Core.DataStructures.BoundedQueue`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: EventStore.Core.DataStructures.BoundedQueue`1
  langs:
  - csharp
  - vb
  name: BoundedQueue(Int32)
  nameWithType: BoundedQueue<T>.BoundedQueue(Int32)
  fullName: EventStore.Core.DataStructures.BoundedQueue<T>.BoundedQueue(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/DataStructures/BoundedQueue.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/DataStructures/BoundedQueue.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public BoundedQueue(int maxCapacity)
    parameters:
    - id: maxCapacity
      type: System.Int32
    content.vb: Public Sub New(maxCapacity As Integer)
  overload: EventStore.Core.DataStructures.BoundedQueue`1.#ctor*
  nameWithType.vb: BoundedQueue(Of T).BoundedQueue(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.DataStructures.BoundedQueue(Of T).BoundedQueue(System.Int32)
- uid: EventStore.Core.DataStructures.BoundedQueue`1.Enqueue(`0)
  commentId: M:EventStore.Core.DataStructures.BoundedQueue`1.Enqueue(`0)
  id: Enqueue(`0)
  parent: EventStore.Core.DataStructures.BoundedQueue`1
  langs:
  - csharp
  - vb
  name: Enqueue(T)
  nameWithType: BoundedQueue<T>.Enqueue(T)
  fullName: EventStore.Core.DataStructures.BoundedQueue<T>.Enqueue(T)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/DataStructures/BoundedQueue.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Enqueue
    path: ../EventStore/src/EventStore.Core/DataStructures/BoundedQueue.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public void Enqueue(T obj)
    parameters:
    - id: obj
      type: '{T}'
    content.vb: Public Sub Enqueue(obj As T)
  overload: EventStore.Core.DataStructures.BoundedQueue`1.Enqueue*
  nameWithType.vb: BoundedQueue(Of T).Enqueue(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.DataStructures.BoundedQueue(Of T).Enqueue(T)
- uid: EventStore.Core.DataStructures.BoundedQueue`1.Dequeue
  commentId: M:EventStore.Core.DataStructures.BoundedQueue`1.Dequeue
  id: Dequeue
  parent: EventStore.Core.DataStructures.BoundedQueue`1
  langs:
  - csharp
  - vb
  name: Dequeue()
  nameWithType: BoundedQueue<T>.Dequeue()
  fullName: EventStore.Core.DataStructures.BoundedQueue<T>.Dequeue()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/DataStructures/BoundedQueue.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Dequeue
    path: ../EventStore/src/EventStore.Core/DataStructures/BoundedQueue.cs
    startLine: 23
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public T Dequeue()
    return:
      type: '{T}'
    content.vb: Public Function Dequeue As T
  overload: EventStore.Core.DataStructures.BoundedQueue`1.Dequeue*
  nameWithType.vb: BoundedQueue(Of T).Dequeue()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.DataStructures.BoundedQueue(Of T).Dequeue()
- uid: EventStore.Core.DataStructures.BoundedQueue`1.Peek
  commentId: M:EventStore.Core.DataStructures.BoundedQueue`1.Peek
  id: Peek
  parent: EventStore.Core.DataStructures.BoundedQueue`1
  langs:
  - csharp
  - vb
  name: Peek()
  nameWithType: BoundedQueue<T>.Peek()
  fullName: EventStore.Core.DataStructures.BoundedQueue<T>.Peek()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/DataStructures/BoundedQueue.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Peek
    path: ../EventStore/src/EventStore.Core/DataStructures/BoundedQueue.cs
    startLine: 28
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public T Peek()
    return:
      type: '{T}'
    content.vb: Public Function Peek As T
  overload: EventStore.Core.DataStructures.BoundedQueue`1.Peek*
  nameWithType.vb: BoundedQueue(Of T).Peek()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.DataStructures.BoundedQueue(Of T).Peek()
- uid: EventStore.Core.DataStructures.BoundedQueue`1.CanAccept
  commentId: M:EventStore.Core.DataStructures.BoundedQueue`1.CanAccept
  id: CanAccept
  parent: EventStore.Core.DataStructures.BoundedQueue`1
  langs:
  - csharp
  - vb
  name: CanAccept()
  nameWithType: BoundedQueue<T>.CanAccept()
  fullName: EventStore.Core.DataStructures.BoundedQueue<T>.CanAccept()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/DataStructures/BoundedQueue.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CanAccept
    path: ../EventStore/src/EventStore.Core/DataStructures/BoundedQueue.cs
    startLine: 33
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public bool CanAccept()
    return:
      type: System.Boolean
    content.vb: Public Function CanAccept As Boolean
  overload: EventStore.Core.DataStructures.BoundedQueue`1.CanAccept*
  nameWithType.vb: BoundedQueue(Of T).CanAccept()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.DataStructures.BoundedQueue(Of T).CanAccept()
references:
- uid: EventStore.Core.DataStructures
  commentId: N:EventStore.Core.DataStructures
  name: EventStore.Core.DataStructures
  nameWithType: EventStore.Core.DataStructures
  fullName: EventStore.Core.DataStructures
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.DataStructures.BoundedQueue`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<BoundedQueue<T>>()
  nameWithType: ProtobufExtensions.Serialize<BoundedQueue<T>>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.DataStructures.BoundedQueue<T>>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of BoundedQueue(Of T))()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.DataStructures.BoundedQueue(Of T))()
  name.vb: Serialize(Of BoundedQueue(Of T))()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<BoundedQueue<T>>
    nameWithType: ProtobufExtensions.Serialize<BoundedQueue<T>>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.DataStructures.BoundedQueue<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of BoundedQueue(Of T))
    nameWithType: ProtobufExtensions.Serialize(Of BoundedQueue(Of T))
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.DataStructures.BoundedQueue(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.DataStructures.BoundedQueue`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<BoundedQueue<T>>()
  nameWithType: ProtobufExtensions.SerializeToArray<BoundedQueue<T>>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.DataStructures.BoundedQueue<T>>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of BoundedQueue(Of T))()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.DataStructures.BoundedQueue(Of T))()
  name.vb: SerializeToArray(Of BoundedQueue(Of T))()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<BoundedQueue<T>>
    nameWithType: ProtobufExtensions.SerializeToArray<BoundedQueue<T>>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.DataStructures.BoundedQueue<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of BoundedQueue(Of T))
    nameWithType: ProtobufExtensions.SerializeToArray(Of BoundedQueue(Of T))
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.DataStructures.BoundedQueue(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.DataStructures.BoundedQueue`1.MaxCapacity*
  commentId: Overload:EventStore.Core.DataStructures.BoundedQueue`1.MaxCapacity
  name: MaxCapacity
  nameWithType: BoundedQueue<T>.MaxCapacity
  fullName: EventStore.Core.DataStructures.BoundedQueue<T>.MaxCapacity
  nameWithType.vb: BoundedQueue(Of T).MaxCapacity
  fullName.vb: EventStore.Core.DataStructures.BoundedQueue(Of T).MaxCapacity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.DataStructures.BoundedQueue`1.Count*
  commentId: Overload:EventStore.Core.DataStructures.BoundedQueue`1.Count
  name: Count
  nameWithType: BoundedQueue<T>.Count
  fullName: EventStore.Core.DataStructures.BoundedQueue<T>.Count
  nameWithType.vb: BoundedQueue(Of T).Count
  fullName.vb: EventStore.Core.DataStructures.BoundedQueue(Of T).Count
- uid: EventStore.Core.DataStructures.BoundedQueue`1.#ctor*
  commentId: Overload:EventStore.Core.DataStructures.BoundedQueue`1.#ctor
  name: BoundedQueue
  nameWithType: BoundedQueue<T>.BoundedQueue
  fullName: EventStore.Core.DataStructures.BoundedQueue<T>.BoundedQueue
  nameWithType.vb: BoundedQueue(Of T).BoundedQueue
  fullName.vb: EventStore.Core.DataStructures.BoundedQueue(Of T).BoundedQueue
- uid: EventStore.Core.DataStructures.BoundedQueue`1.Enqueue*
  commentId: Overload:EventStore.Core.DataStructures.BoundedQueue`1.Enqueue
  name: Enqueue
  nameWithType: BoundedQueue<T>.Enqueue
  fullName: EventStore.Core.DataStructures.BoundedQueue<T>.Enqueue
  nameWithType.vb: BoundedQueue(Of T).Enqueue
  fullName.vb: EventStore.Core.DataStructures.BoundedQueue(Of T).Enqueue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: EventStore.Core.DataStructures.BoundedQueue`1.Dequeue*
  commentId: Overload:EventStore.Core.DataStructures.BoundedQueue`1.Dequeue
  name: Dequeue
  nameWithType: BoundedQueue<T>.Dequeue
  fullName: EventStore.Core.DataStructures.BoundedQueue<T>.Dequeue
  nameWithType.vb: BoundedQueue(Of T).Dequeue
  fullName.vb: EventStore.Core.DataStructures.BoundedQueue(Of T).Dequeue
- uid: EventStore.Core.DataStructures.BoundedQueue`1.Peek*
  commentId: Overload:EventStore.Core.DataStructures.BoundedQueue`1.Peek
  name: Peek
  nameWithType: BoundedQueue<T>.Peek
  fullName: EventStore.Core.DataStructures.BoundedQueue<T>.Peek
  nameWithType.vb: BoundedQueue(Of T).Peek
  fullName.vb: EventStore.Core.DataStructures.BoundedQueue(Of T).Peek
- uid: EventStore.Core.DataStructures.BoundedQueue`1.CanAccept*
  commentId: Overload:EventStore.Core.DataStructures.BoundedQueue`1.CanAccept
  name: CanAccept
  nameWithType: BoundedQueue<T>.CanAccept
  fullName: EventStore.Core.DataStructures.BoundedQueue<T>.CanAccept
  nameWithType.vb: BoundedQueue(Of T).CanAccept
  fullName.vb: EventStore.Core.DataStructures.BoundedQueue(Of T).CanAccept
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean

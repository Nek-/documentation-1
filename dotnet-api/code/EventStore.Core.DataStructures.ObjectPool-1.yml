### YamlMime:ManagedReference
items:
- uid: EventStore.Core.DataStructures.ObjectPool`1
  commentId: T:EventStore.Core.DataStructures.ObjectPool`1
  id: ObjectPool`1
  parent: EventStore.Core.DataStructures
  children:
  - EventStore.Core.DataStructures.ObjectPool`1.#ctor(System.String,System.Int32,System.Int32,System.Func{`0},System.Action{`0},System.Action{EventStore.Core.DataStructures.ObjectPool{`0}})
  - EventStore.Core.DataStructures.ObjectPool`1.Dispose
  - EventStore.Core.DataStructures.ObjectPool`1.Get
  - EventStore.Core.DataStructures.ObjectPool`1.MarkForDisposal
  - EventStore.Core.DataStructures.ObjectPool`1.ObjectPoolName
  - EventStore.Core.DataStructures.ObjectPool`1.Return(`0)
  langs:
  - csharp
  - vb
  name: ObjectPool<T>
  nameWithType: ObjectPool<T>
  fullName: EventStore.Core.DataStructures.ObjectPool<T>
  type: Class
  source:
    id: ObjectPool
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/DataStructures/ObjectPool.cs
    startLine: 31
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: 'public class ObjectPool<T> : IDisposable'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class ObjectPool(Of T)
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.DataStructures.ObjectPool`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.DataStructures.ObjectPool`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  nameWithType.vb: ObjectPool(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: EventStore.Core.DataStructures.ObjectPool(Of T)
  name.vb: ObjectPool(Of T)
- uid: EventStore.Core.DataStructures.ObjectPool`1.ObjectPoolName
  commentId: F:EventStore.Core.DataStructures.ObjectPool`1.ObjectPoolName
  id: ObjectPoolName
  parent: EventStore.Core.DataStructures.ObjectPool`1
  langs:
  - csharp
  - vb
  name: ObjectPoolName
  nameWithType: ObjectPool<T>.ObjectPoolName
  fullName: EventStore.Core.DataStructures.ObjectPool<T>.ObjectPoolName
  type: Field
  source:
    id: ObjectPoolName
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/DataStructures/ObjectPool.cs
    startLine: 32
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public readonly string ObjectPoolName
    return:
      type: System.String
    content.vb: Public ReadOnly ObjectPoolName As String
  nameWithType.vb: ObjectPool(Of T).ObjectPoolName
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: EventStore.Core.DataStructures.ObjectPool(Of T).ObjectPoolName
- uid: EventStore.Core.DataStructures.ObjectPool`1.#ctor(System.String,System.Int32,System.Int32,System.Func{`0},System.Action{`0},System.Action{EventStore.Core.DataStructures.ObjectPool{`0}})
  commentId: M:EventStore.Core.DataStructures.ObjectPool`1.#ctor(System.String,System.Int32,System.Int32,System.Func{`0},System.Action{`0},System.Action{EventStore.Core.DataStructures.ObjectPool{`0}})
  id: '#ctor(System.String,System.Int32,System.Int32,System.Func{`0},System.Action{`0},System.Action{EventStore.Core.DataStructures.ObjectPool{`0}})'
  parent: EventStore.Core.DataStructures.ObjectPool`1
  langs:
  - csharp
  - vb
  name: ObjectPool(String, Int32, Int32, Func<T>, Action<T>, Action<ObjectPool<T>>)
  nameWithType: ObjectPool<T>.ObjectPool(String, Int32, Int32, Func<T>, Action<T>, Action<ObjectPool<T>>)
  fullName: EventStore.Core.DataStructures.ObjectPool<T>.ObjectPool(System.String, System.Int32, System.Int32, System.Func<T>, System.Action<T>, System.Action<EventStore.Core.DataStructures.ObjectPool<T>>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/DataStructures/ObjectPool.cs
    startLine: 44
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public ObjectPool(string objectPoolName, int initialCount, int maxCount, Func<T> factory, Action<T> dispose = null, Action<ObjectPool<T>> onPoolDisposed = null)
    parameters:
    - id: objectPoolName
      type: System.String
    - id: initialCount
      type: System.Int32
    - id: maxCount
      type: System.Int32
    - id: factory
      type: System.Func{{T}}
    - id: dispose
      type: System.Action{{T}}
    - id: onPoolDisposed
      type: System.Action{EventStore.Core.DataStructures.ObjectPool`1}
    content.vb: Public Sub New(objectPoolName As String, initialCount As Integer, maxCount As Integer, factory As Func(Of T), dispose As Action(Of T) = Nothing, onPoolDisposed As Action(Of ObjectPool(Of T)) = Nothing)
  overload: EventStore.Core.DataStructures.ObjectPool`1.#ctor*
  nameWithType.vb: ObjectPool(Of T).ObjectPool(String, Int32, Int32, Func(Of T), Action(Of T), Action(Of ObjectPool(Of T)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.DataStructures.ObjectPool(Of T).ObjectPool(System.String, System.Int32, System.Int32, System.Func(Of T), System.Action(Of T), System.Action(Of EventStore.Core.DataStructures.ObjectPool(Of T)))
  name.vb: ObjectPool(String, Int32, Int32, Func(Of T), Action(Of T), Action(Of ObjectPool(Of T)))
- uid: EventStore.Core.DataStructures.ObjectPool`1.MarkForDisposal
  commentId: M:EventStore.Core.DataStructures.ObjectPool`1.MarkForDisposal
  id: MarkForDisposal
  parent: EventStore.Core.DataStructures.ObjectPool`1
  langs:
  - csharp
  - vb
  name: MarkForDisposal()
  nameWithType: ObjectPool<T>.MarkForDisposal()
  fullName: EventStore.Core.DataStructures.ObjectPool<T>.MarkForDisposal()
  type: Method
  source:
    id: MarkForDisposal
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/DataStructures/ObjectPool.cs
    startLine: 69
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public void MarkForDisposal()
    content.vb: Public Sub MarkForDisposal
  overload: EventStore.Core.DataStructures.ObjectPool`1.MarkForDisposal*
  nameWithType.vb: ObjectPool(Of T).MarkForDisposal()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.DataStructures.ObjectPool(Of T).MarkForDisposal()
- uid: EventStore.Core.DataStructures.ObjectPool`1.Dispose
  commentId: M:EventStore.Core.DataStructures.ObjectPool`1.Dispose
  id: Dispose
  parent: EventStore.Core.DataStructures.ObjectPool`1
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ObjectPool<T>.Dispose()
  fullName: EventStore.Core.DataStructures.ObjectPool<T>.Dispose()
  type: Method
  source:
    id: Dispose
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/DataStructures/ObjectPool.cs
    startLine: 73
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: EventStore.Core.DataStructures.ObjectPool`1.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: ObjectPool(Of T).Dispose()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.DataStructures.ObjectPool(Of T).Dispose()
- uid: EventStore.Core.DataStructures.ObjectPool`1.Get
  commentId: M:EventStore.Core.DataStructures.ObjectPool`1.Get
  id: Get
  parent: EventStore.Core.DataStructures.ObjectPool`1
  langs:
  - csharp
  - vb
  name: Get()
  nameWithType: ObjectPool<T>.Get()
  fullName: EventStore.Core.DataStructures.ObjectPool<T>.Get()
  type: Method
  source:
    id: Get
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/DataStructures/ObjectPool.cs
    startLine: 78
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public T Get()
    return:
      type: '{T}'
    content.vb: Public Function Get As T
  overload: EventStore.Core.DataStructures.ObjectPool`1.Get*
  nameWithType.vb: ObjectPool(Of T).Get()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.DataStructures.ObjectPool(Of T).Get()
- uid: EventStore.Core.DataStructures.ObjectPool`1.Return(`0)
  commentId: M:EventStore.Core.DataStructures.ObjectPool`1.Return(`0)
  id: Return(`0)
  parent: EventStore.Core.DataStructures.ObjectPool`1
  langs:
  - csharp
  - vb
  name: Return(T)
  nameWithType: ObjectPool<T>.Return(T)
  fullName: EventStore.Core.DataStructures.ObjectPool<T>.Return(T)
  type: Method
  source:
    id: Return
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/DataStructures/ObjectPool.cs
    startLine: 104
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.DataStructures
  syntax:
    content: public void Return(T item)
    parameters:
    - id: item
      type: '{T}'
    content.vb: Public Sub Return(item As T)
  overload: EventStore.Core.DataStructures.ObjectPool`1.Return*
  nameWithType.vb: ObjectPool(Of T).Return(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.DataStructures.ObjectPool(Of T).Return(T)
references:
- uid: EventStore.Core.DataStructures
  commentId: N:EventStore.Core.DataStructures
  name: EventStore.Core.DataStructures
  nameWithType: EventStore.Core.DataStructures
  fullName: EventStore.Core.DataStructures
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.DataStructures.ObjectPool`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ObjectPool<T>>()
  nameWithType: ProtobufExtensions.Serialize<ObjectPool<T>>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.DataStructures.ObjectPool<T>>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ObjectPool(Of T))()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.DataStructures.ObjectPool(Of T))()
  name.vb: Serialize(Of ObjectPool(Of T))()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ObjectPool<T>>
    nameWithType: ProtobufExtensions.Serialize<ObjectPool<T>>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.DataStructures.ObjectPool<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ObjectPool(Of T))
    nameWithType: ProtobufExtensions.Serialize(Of ObjectPool(Of T))
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.DataStructures.ObjectPool(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.DataStructures.ObjectPool`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ObjectPool<T>>()
  nameWithType: ProtobufExtensions.SerializeToArray<ObjectPool<T>>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.DataStructures.ObjectPool<T>>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ObjectPool(Of T))()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.DataStructures.ObjectPool(Of T))()
  name.vb: SerializeToArray(Of ObjectPool(Of T))()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ObjectPool<T>>
    nameWithType: ProtobufExtensions.SerializeToArray<ObjectPool<T>>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.DataStructures.ObjectPool<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ObjectPool(Of T))
    nameWithType: ProtobufExtensions.SerializeToArray(Of ObjectPool(Of T))
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.DataStructures.ObjectPool(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.DataStructures.ObjectPool`1.#ctor*
  commentId: Overload:EventStore.Core.DataStructures.ObjectPool`1.#ctor
  name: ObjectPool
  nameWithType: ObjectPool<T>.ObjectPool
  fullName: EventStore.Core.DataStructures.ObjectPool<T>.ObjectPool
  nameWithType.vb: ObjectPool(Of T).ObjectPool
  fullName.vb: EventStore.Core.DataStructures.ObjectPool(Of T).ObjectPool
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Func{{T}}
  commentId: T:System.Func{``0}
  parent: System
  definition: System.Func`1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullName.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{{T}}
  commentId: T:System.Action{`0}
  parent: System
  definition: System.Action`1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{EventStore.Core.DataStructures.ObjectPool`1}
  commentId: T:System.Action{EventStore.Core.DataStructures.ObjectPool`1}
  parent: System
  definition: System.Action`1
  name: Action<ObjectPool<T>>
  nameWithType: Action<ObjectPool<T>>
  fullName: System.Action<EventStore.Core.DataStructures.ObjectPool<T>>
  nameWithType.vb: Action(Of ObjectPool(Of T))
  fullName.vb: System.Action(Of EventStore.Core.DataStructures.ObjectPool(Of T))
  name.vb: Action(Of ObjectPool(Of T))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.DataStructures.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: EventStore.Core.DataStructures.ObjectPool
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.DataStructures.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: EventStore.Core.DataStructures.ObjectPool
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.DataStructures.ObjectPool`1.MarkForDisposal*
  commentId: Overload:EventStore.Core.DataStructures.ObjectPool`1.MarkForDisposal
  name: MarkForDisposal
  nameWithType: ObjectPool<T>.MarkForDisposal
  fullName: EventStore.Core.DataStructures.ObjectPool<T>.MarkForDisposal
  nameWithType.vb: ObjectPool(Of T).MarkForDisposal
  fullName.vb: EventStore.Core.DataStructures.ObjectPool(Of T).MarkForDisposal
- uid: EventStore.Core.DataStructures.ObjectPool`1.Dispose*
  commentId: Overload:EventStore.Core.DataStructures.ObjectPool`1.Dispose
  name: Dispose
  nameWithType: ObjectPool<T>.Dispose
  fullName: EventStore.Core.DataStructures.ObjectPool<T>.Dispose
  nameWithType.vb: ObjectPool(Of T).Dispose
  fullName.vb: EventStore.Core.DataStructures.ObjectPool(Of T).Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.DataStructures.ObjectPool`1.Get*
  commentId: Overload:EventStore.Core.DataStructures.ObjectPool`1.Get
  name: Get
  nameWithType: ObjectPool<T>.Get
  fullName: EventStore.Core.DataStructures.ObjectPool<T>.Get
  nameWithType.vb: ObjectPool(Of T).Get
  fullName.vb: EventStore.Core.DataStructures.ObjectPool(Of T).Get
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: EventStore.Core.DataStructures.ObjectPool`1.Return*
  commentId: Overload:EventStore.Core.DataStructures.ObjectPool`1.Return
  name: Return
  nameWithType: ObjectPool<T>.Return
  fullName: EventStore.Core.DataStructures.ObjectPool<T>.Return
  nameWithType.vb: ObjectPool(Of T).Return
  fullName.vb: EventStore.Core.DataStructures.ObjectPool(Of T).Return

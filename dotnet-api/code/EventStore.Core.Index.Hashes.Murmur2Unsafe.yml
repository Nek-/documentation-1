### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Index.Hashes.Murmur2Unsafe
  commentId: T:EventStore.Core.Index.Hashes.Murmur2Unsafe
  id: Murmur2Unsafe
  parent: EventStore.Core.Index.Hashes
  children:
  - EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash(System.Byte[])
  - EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash(System.Byte[],System.Int32,System.UInt32,System.UInt32)
  - EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash(System.String)
  langs:
  - csharp
  - vb
  name: Murmur2Unsafe
  nameWithType: Murmur2Unsafe
  fullName: EventStore.Core.Index.Hashes.Murmur2Unsafe
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Index/Hashes/Murmur2Unsafe.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Murmur2Unsafe
    path: ../EventStore/src/EventStore.Core/Index/Hashes/Murmur2Unsafe.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index.Hashes
  syntax:
    content: 'public class Murmur2Unsafe : object, IHasher'
    content.vb: >-
      Public Class Murmur2Unsafe
          Inherits Object
          Implements IHasher
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Index.Hashes.IHasher
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Index.Hashes.Murmur2Unsafe.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Index.Hashes.Murmur2Unsafe.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash(System.String)
  commentId: M:EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash(System.String)
  id: Hash(System.String)
  parent: EventStore.Core.Index.Hashes.Murmur2Unsafe
  langs:
  - csharp
  - vb
  name: Hash(String)
  nameWithType: Murmur2Unsafe.Hash(String)
  fullName: EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash(System.String)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Index/Hashes/Murmur2Unsafe.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Hash
    path: ../EventStore/src/EventStore.Core/Index/Hashes/Murmur2Unsafe.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index.Hashes
  syntax:
    content: public UInt32 Hash(string s)
    parameters:
    - id: s
      type: System.String
    return:
      type: UInt32
    content.vb: Public Function Hash(s As String) As UInt32
  overload: EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash(System.Byte[])
  commentId: M:EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash(System.Byte[])
  id: Hash(System.Byte[])
  parent: EventStore.Core.Index.Hashes.Murmur2Unsafe
  langs:
  - csharp
  - vb
  name: Hash(Byte[])
  nameWithType: Murmur2Unsafe.Hash(Byte[])
  fullName: EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash(System.Byte[])
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Index/Hashes/Murmur2Unsafe.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Hash
    path: ../EventStore/src/EventStore.Core/Index/Hashes/Murmur2Unsafe.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index.Hashes
  syntax:
    content: public uint Hash(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: System.UInt32
    content.vb: Public Function Hash(data As Byte()) As UInteger
  overload: EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash*
  implements:
  - EventStore.Core.Index.Hashes.IHasher.Hash(System.Byte[])
  nameWithType.vb: Murmur2Unsafe.Hash(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash(System.Byte())
  name.vb: Hash(Byte())
- uid: EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash(System.Byte[],System.Int32,System.UInt32,System.UInt32)
  commentId: M:EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash(System.Byte[],System.Int32,System.UInt32,System.UInt32)
  id: Hash(System.Byte[],System.Int32,System.UInt32,System.UInt32)
  parent: EventStore.Core.Index.Hashes.Murmur2Unsafe
  langs:
  - csharp
  - vb
  name: Hash(Byte[], Int32, UInt32, UInt32)
  nameWithType: Murmur2Unsafe.Hash(Byte[], Int32, UInt32, UInt32)
  fullName: EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash(System.Byte[], System.Int32, System.UInt32, System.UInt32)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Index/Hashes/Murmur2Unsafe.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Hash
    path: ../EventStore/src/EventStore.Core/Index/Hashes/Murmur2Unsafe.cs
    startLine: 27
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index.Hashes
  syntax:
    content: public uint Hash(byte[] data, int offset, uint len, uint seed)
    parameters:
    - id: data
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: len
      type: System.UInt32
    - id: seed
      type: System.UInt32
    return:
      type: System.UInt32
    content.vb: Public Function Hash(data As Byte(), offset As Integer, len As UInteger, seed As UInteger) As UInteger
  overload: EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash*
  implements:
  - EventStore.Core.Index.Hashes.IHasher.Hash(System.Byte[],System.Int32,System.UInt32,System.UInt32)
  nameWithType.vb: Murmur2Unsafe.Hash(Byte(), Int32, UInt32, UInt32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash(System.Byte(), System.Int32, System.UInt32, System.UInt32)
  name.vb: Hash(Byte(), Int32, UInt32, UInt32)
references:
- uid: EventStore.Core.Index.Hashes
  commentId: N:EventStore.Core.Index.Hashes
  name: EventStore.Core.Index.Hashes
  nameWithType: EventStore.Core.Index.Hashes
  fullName: EventStore.Core.Index.Hashes
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Index.Hashes.IHasher
  commentId: T:EventStore.Core.Index.Hashes.IHasher
  parent: EventStore.Core.Index.Hashes
  name: IHasher
  nameWithType: IHasher
  fullName: EventStore.Core.Index.Hashes.IHasher
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Index.Hashes.Murmur2Unsafe.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<Murmur2Unsafe>()
  nameWithType: ProtobufExtensions.Serialize<Murmur2Unsafe>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Index.Hashes.Murmur2Unsafe>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of Murmur2Unsafe)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Index.Hashes.Murmur2Unsafe)()
  name.vb: Serialize(Of Murmur2Unsafe)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<Murmur2Unsafe>
    nameWithType: ProtobufExtensions.Serialize<Murmur2Unsafe>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Index.Hashes.Murmur2Unsafe>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of Murmur2Unsafe)
    nameWithType: ProtobufExtensions.Serialize(Of Murmur2Unsafe)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Index.Hashes.Murmur2Unsafe)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Index.Hashes.Murmur2Unsafe.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<Murmur2Unsafe>()
  nameWithType: ProtobufExtensions.SerializeToArray<Murmur2Unsafe>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Index.Hashes.Murmur2Unsafe>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of Murmur2Unsafe)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Index.Hashes.Murmur2Unsafe)()
  name.vb: SerializeToArray(Of Murmur2Unsafe)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<Murmur2Unsafe>
    nameWithType: ProtobufExtensions.SerializeToArray<Murmur2Unsafe>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Index.Hashes.Murmur2Unsafe>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of Murmur2Unsafe)
    nameWithType: ProtobufExtensions.SerializeToArray(Of Murmur2Unsafe)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Index.Hashes.Murmur2Unsafe)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash*
  commentId: Overload:EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash
  name: Hash
  nameWithType: Murmur2Unsafe.Hash
  fullName: EventStore.Core.Index.Hashes.Murmur2Unsafe.Hash
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: UInt32
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: UInt32
- uid: EventStore.Core.Index.Hashes.IHasher.Hash(System.Byte[])
  commentId: M:EventStore.Core.Index.Hashes.IHasher.Hash(System.Byte[])
  parent: EventStore.Core.Index.Hashes.IHasher
  isExternal: true
  name: Hash(Byte[])
  nameWithType: IHasher.Hash(Byte[])
  fullName: EventStore.Core.Index.Hashes.IHasher.Hash(System.Byte[])
  nameWithType.vb: IHasher.Hash(Byte())
  fullName.vb: EventStore.Core.Index.Hashes.IHasher.Hash(System.Byte())
  name.vb: Hash(Byte())
  spec.csharp:
  - uid: EventStore.Core.Index.Hashes.IHasher.Hash(System.Byte[])
    name: Hash
    nameWithType: IHasher.Hash
    fullName: EventStore.Core.Index.Hashes.IHasher.Hash
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Index.Hashes.IHasher.Hash(System.Byte[])
    name: Hash
    nameWithType: IHasher.Hash
    fullName: EventStore.Core.Index.Hashes.IHasher.Hash
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.UInt32
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: EventStore.Core.Index.Hashes.IHasher.Hash(System.Byte[],System.Int32,System.UInt32,System.UInt32)
  commentId: M:EventStore.Core.Index.Hashes.IHasher.Hash(System.Byte[],System.Int32,System.UInt32,System.UInt32)
  parent: EventStore.Core.Index.Hashes.IHasher
  isExternal: true
  name: Hash(Byte[], Int32, UInt32, UInt32)
  nameWithType: IHasher.Hash(Byte[], Int32, UInt32, UInt32)
  fullName: EventStore.Core.Index.Hashes.IHasher.Hash(System.Byte[], System.Int32, System.UInt32, System.UInt32)
  nameWithType.vb: IHasher.Hash(Byte(), Int32, UInt32, UInt32)
  fullName.vb: EventStore.Core.Index.Hashes.IHasher.Hash(System.Byte(), System.Int32, System.UInt32, System.UInt32)
  name.vb: Hash(Byte(), Int32, UInt32, UInt32)
  spec.csharp:
  - uid: EventStore.Core.Index.Hashes.IHasher.Hash(System.Byte[],System.Int32,System.UInt32,System.UInt32)
    name: Hash
    nameWithType: IHasher.Hash
    fullName: EventStore.Core.Index.Hashes.IHasher.Hash
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Index.Hashes.IHasher.Hash(System.Byte[],System.Int32,System.UInt32,System.UInt32)
    name: Hash
    nameWithType: IHasher.Hash
    fullName: EventStore.Core.Index.Hashes.IHasher.Hash
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32

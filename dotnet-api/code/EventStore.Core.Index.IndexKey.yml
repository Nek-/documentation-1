### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Index.IndexKey
  commentId: T:EventStore.Core.Index.IndexKey
  id: IndexKey
  parent: EventStore.Core.Index
  children:
  - EventStore.Core.Index.IndexKey.#ctor(System.String,System.Int64,System.Int64)
  - EventStore.Core.Index.IndexKey.#ctor(System.String,System.Int64,System.Int64,System.UInt64)
  - EventStore.Core.Index.IndexKey.Hash
  - EventStore.Core.Index.IndexKey.Position
  - EventStore.Core.Index.IndexKey.StreamId
  - EventStore.Core.Index.IndexKey.Version
  langs:
  - csharp
  - vb
  name: IndexKey
  nameWithType: IndexKey
  fullName: EventStore.Core.Index.IndexKey
  type: Struct
  source:
    remote:
      path: src/EventStore.Core/Index/IndexKey.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: IndexKey
    path: ../EventStore/src/EventStore.Core/Index/IndexKey.cs
    startLine: 2
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public struct IndexKey
    content.vb: Public Structure IndexKey
  extensionMethods:
  - EventStore.Core.Index.IndexKey.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Index.IndexKey.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Index.IndexKey.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.Core.Index.IndexKey.StreamId
  commentId: F:EventStore.Core.Index.IndexKey.StreamId
  id: StreamId
  parent: EventStore.Core.Index.IndexKey
  langs:
  - csharp
  - vb
  name: StreamId
  nameWithType: IndexKey.StreamId
  fullName: EventStore.Core.Index.IndexKey.StreamId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Index/IndexKey.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: StreamId
    path: ../EventStore/src/EventStore.Core/Index/IndexKey.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public string StreamId
    return:
      type: System.String
    content.vb: Public StreamId As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Index.IndexKey.Version
  commentId: F:EventStore.Core.Index.IndexKey.Version
  id: Version
  parent: EventStore.Core.Index.IndexKey
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: IndexKey.Version
  fullName: EventStore.Core.Index.IndexKey.Version
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Index/IndexKey.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Version
    path: ../EventStore/src/EventStore.Core/Index/IndexKey.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public long Version
    return:
      type: System.Int64
    content.vb: Public Version As Long
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Index.IndexKey.Position
  commentId: F:EventStore.Core.Index.IndexKey.Position
  id: Position
  parent: EventStore.Core.Index.IndexKey
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: IndexKey.Position
  fullName: EventStore.Core.Index.IndexKey.Position
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Index/IndexKey.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Position
    path: ../EventStore/src/EventStore.Core/Index/IndexKey.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public long Position
    return:
      type: System.Int64
    content.vb: Public Position As Long
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Index.IndexKey.Hash
  commentId: F:EventStore.Core.Index.IndexKey.Hash
  id: Hash
  parent: EventStore.Core.Index.IndexKey
  langs:
  - csharp
  - vb
  name: Hash
  nameWithType: IndexKey.Hash
  fullName: EventStore.Core.Index.IndexKey.Hash
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Index/IndexKey.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Hash
    path: ../EventStore/src/EventStore.Core/Index/IndexKey.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public ulong Hash
    return:
      type: System.UInt64
    content.vb: Public Hash As ULong
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Index.IndexKey.#ctor(System.String,System.Int64,System.Int64)
  commentId: M:EventStore.Core.Index.IndexKey.#ctor(System.String,System.Int64,System.Int64)
  id: '#ctor(System.String,System.Int64,System.Int64)'
  parent: EventStore.Core.Index.IndexKey
  langs:
  - csharp
  - vb
  name: IndexKey(String, Int64, Int64)
  nameWithType: IndexKey.IndexKey(String, Int64, Int64)
  fullName: EventStore.Core.Index.IndexKey.IndexKey(System.String, System.Int64, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Index/IndexKey.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Index/IndexKey.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public IndexKey(string streamId, long version, long position)
    parameters:
    - id: streamId
      type: System.String
    - id: version
      type: System.Int64
    - id: position
      type: System.Int64
    content.vb: Public Sub New(streamId As String, version As Long, position As Long)
  overload: EventStore.Core.Index.IndexKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Index.IndexKey.#ctor(System.String,System.Int64,System.Int64,System.UInt64)
  commentId: M:EventStore.Core.Index.IndexKey.#ctor(System.String,System.Int64,System.Int64,System.UInt64)
  id: '#ctor(System.String,System.Int64,System.Int64,System.UInt64)'
  parent: EventStore.Core.Index.IndexKey
  langs:
  - csharp
  - vb
  name: IndexKey(String, Int64, Int64, UInt64)
  nameWithType: IndexKey.IndexKey(String, Int64, Int64, UInt64)
  fullName: EventStore.Core.Index.IndexKey.IndexKey(System.String, System.Int64, System.Int64, System.UInt64)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Index/IndexKey.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Index/IndexKey.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public IndexKey(string streamId, long version, long position, ulong hash)
    parameters:
    - id: streamId
      type: System.String
    - id: version
      type: System.Int64
    - id: position
      type: System.Int64
    - id: hash
      type: System.UInt64
    content.vb: Public Sub New(streamId As String, version As Long, position As Long, hash As ULong)
  overload: EventStore.Core.Index.IndexKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Index
  commentId: N:EventStore.Core.Index
  name: EventStore.Core.Index
  nameWithType: EventStore.Core.Index
  fullName: EventStore.Core.Index
- uid: EventStore.Core.Index.IndexKey.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<IndexKey>()
  nameWithType: EnumExtensions.EnumValueName<IndexKey>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Index.IndexKey>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of IndexKey)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Index.IndexKey)()
  name.vb: EnumValueName(Of IndexKey)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<IndexKey>
    nameWithType: EnumExtensions.EnumValueName<IndexKey>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Index.IndexKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of IndexKey)
    nameWithType: EnumExtensions.EnumValueName(Of IndexKey)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Index.IndexKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Index.IndexKey.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IndexKey>()
  nameWithType: ProtobufExtensions.Serialize<IndexKey>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Index.IndexKey>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IndexKey)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Index.IndexKey)()
  name.vb: Serialize(Of IndexKey)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IndexKey>
    nameWithType: ProtobufExtensions.Serialize<IndexKey>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Index.IndexKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IndexKey)
    nameWithType: ProtobufExtensions.Serialize(Of IndexKey)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Index.IndexKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Index.IndexKey.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IndexKey>()
  nameWithType: ProtobufExtensions.SerializeToArray<IndexKey>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Index.IndexKey>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IndexKey)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Index.IndexKey)()
  name.vb: SerializeToArray(Of IndexKey)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IndexKey>
    nameWithType: ProtobufExtensions.SerializeToArray<IndexKey>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Index.IndexKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IndexKey)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IndexKey)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Index.IndexKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: EventStore.Core.Index.IndexKey.#ctor*
  commentId: Overload:EventStore.Core.Index.IndexKey.#ctor
  name: IndexKey
  nameWithType: IndexKey.IndexKey
  fullName: EventStore.Core.Index.IndexKey.IndexKey

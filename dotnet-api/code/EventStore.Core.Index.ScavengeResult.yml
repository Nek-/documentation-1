### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Index.ScavengeResult
  commentId: T:EventStore.Core.Index.ScavengeResult
  id: ScavengeResult
  parent: EventStore.Core.Index
  children:
  - EventStore.Core.Index.ScavengeResult.Failed(EventStore.Core.Index.PTable,System.Int32,System.Int32)
  - EventStore.Core.Index.ScavengeResult.Index
  - EventStore.Core.Index.ScavengeResult.IsSuccess
  - EventStore.Core.Index.ScavengeResult.Level
  - EventStore.Core.Index.ScavengeResult.NewTable
  - EventStore.Core.Index.ScavengeResult.OldTable
  - EventStore.Core.Index.ScavengeResult.ScavengedMap
  - EventStore.Core.Index.ScavengeResult.SpaceSaved
  - EventStore.Core.Index.ScavengeResult.Success(EventStore.Core.Index.IndexMap,EventStore.Core.Index.PTable,EventStore.Core.Index.PTable,System.Int64,System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: ScavengeResult
  nameWithType: ScavengeResult
  fullName: EventStore.Core.Index.ScavengeResult
  type: Class
  source:
    id: ScavengeResult
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/ScavengeResult.cs
    startLine: 1
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public class ScavengeResult
    content.vb: Public Class ScavengeResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Index.ScavengeResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Index.ScavengeResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Index.ScavengeResult.ScavengedMap
  commentId: F:EventStore.Core.Index.ScavengeResult.ScavengedMap
  id: ScavengedMap
  parent: EventStore.Core.Index.ScavengeResult
  langs:
  - csharp
  - vb
  name: ScavengedMap
  nameWithType: ScavengeResult.ScavengedMap
  fullName: EventStore.Core.Index.ScavengeResult.ScavengedMap
  type: Field
  source:
    id: ScavengedMap
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/ScavengeResult.cs
    startLine: 2
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public readonly IndexMap ScavengedMap
    return:
      type: EventStore.Core.Index.IndexMap
    content.vb: Public ReadOnly ScavengedMap As IndexMap
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Index.ScavengeResult.IsSuccess
  commentId: F:EventStore.Core.Index.ScavengeResult.IsSuccess
  id: IsSuccess
  parent: EventStore.Core.Index.ScavengeResult
  langs:
  - csharp
  - vb
  name: IsSuccess
  nameWithType: ScavengeResult.IsSuccess
  fullName: EventStore.Core.Index.ScavengeResult.IsSuccess
  type: Field
  source:
    id: IsSuccess
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/ScavengeResult.cs
    startLine: 3
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public readonly bool IsSuccess
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsSuccess As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Index.ScavengeResult.OldTable
  commentId: F:EventStore.Core.Index.ScavengeResult.OldTable
  id: OldTable
  parent: EventStore.Core.Index.ScavengeResult
  langs:
  - csharp
  - vb
  name: OldTable
  nameWithType: ScavengeResult.OldTable
  fullName: EventStore.Core.Index.ScavengeResult.OldTable
  type: Field
  source:
    id: OldTable
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/ScavengeResult.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public readonly PTable OldTable
    return:
      type: EventStore.Core.Index.PTable
    content.vb: Public ReadOnly OldTable As PTable
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Index.ScavengeResult.NewTable
  commentId: F:EventStore.Core.Index.ScavengeResult.NewTable
  id: NewTable
  parent: EventStore.Core.Index.ScavengeResult
  langs:
  - csharp
  - vb
  name: NewTable
  nameWithType: ScavengeResult.NewTable
  fullName: EventStore.Core.Index.ScavengeResult.NewTable
  type: Field
  source:
    id: NewTable
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/ScavengeResult.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public readonly PTable NewTable
    return:
      type: EventStore.Core.Index.PTable
    content.vb: Public ReadOnly NewTable As PTable
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Index.ScavengeResult.SpaceSaved
  commentId: F:EventStore.Core.Index.ScavengeResult.SpaceSaved
  id: SpaceSaved
  parent: EventStore.Core.Index.ScavengeResult
  langs:
  - csharp
  - vb
  name: SpaceSaved
  nameWithType: ScavengeResult.SpaceSaved
  fullName: EventStore.Core.Index.ScavengeResult.SpaceSaved
  type: Field
  source:
    id: SpaceSaved
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/ScavengeResult.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public readonly long SpaceSaved
    return:
      type: System.Int64
    content.vb: Public ReadOnly SpaceSaved As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Index.ScavengeResult.Level
  commentId: F:EventStore.Core.Index.ScavengeResult.Level
  id: Level
  parent: EventStore.Core.Index.ScavengeResult
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: ScavengeResult.Level
  fullName: EventStore.Core.Index.ScavengeResult.Level
  type: Field
  source:
    id: Level
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/ScavengeResult.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public readonly int Level
    return:
      type: System.Int32
    content.vb: Public ReadOnly Level As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Index.ScavengeResult.Index
  commentId: F:EventStore.Core.Index.ScavengeResult.Index
  id: Index
  parent: EventStore.Core.Index.ScavengeResult
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: ScavengeResult.Index
  fullName: EventStore.Core.Index.ScavengeResult.Index
  type: Field
  source:
    id: Index
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/ScavengeResult.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public readonly int Index
    return:
      type: System.Int32
    content.vb: Public ReadOnly Index As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Index.ScavengeResult.Success(EventStore.Core.Index.IndexMap,EventStore.Core.Index.PTable,EventStore.Core.Index.PTable,System.Int64,System.Int32,System.Int32)
  commentId: M:EventStore.Core.Index.ScavengeResult.Success(EventStore.Core.Index.IndexMap,EventStore.Core.Index.PTable,EventStore.Core.Index.PTable,System.Int64,System.Int32,System.Int32)
  id: Success(EventStore.Core.Index.IndexMap,EventStore.Core.Index.PTable,EventStore.Core.Index.PTable,System.Int64,System.Int32,System.Int32)
  parent: EventStore.Core.Index.ScavengeResult
  langs:
  - csharp
  - vb
  name: Success(IndexMap, PTable, PTable, Int64, Int32, Int32)
  nameWithType: ScavengeResult.Success(IndexMap, PTable, PTable, Int64, Int32, Int32)
  fullName: EventStore.Core.Index.ScavengeResult.Success(EventStore.Core.Index.IndexMap, EventStore.Core.Index.PTable, EventStore.Core.Index.PTable, System.Int64, System.Int32, System.Int32)
  type: Method
  source:
    id: Success
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/ScavengeResult.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public static ScavengeResult Success(IndexMap scavengedMap, PTable oldTable, PTable newTable, long spaceSaved, int level, int index)
    parameters:
    - id: scavengedMap
      type: EventStore.Core.Index.IndexMap
    - id: oldTable
      type: EventStore.Core.Index.PTable
    - id: newTable
      type: EventStore.Core.Index.PTable
    - id: spaceSaved
      type: System.Int64
    - id: level
      type: System.Int32
    - id: index
      type: System.Int32
    return:
      type: EventStore.Core.Index.ScavengeResult
    content.vb: Public Shared Function Success(scavengedMap As IndexMap, oldTable As PTable, newTable As PTable, spaceSaved As Long, level As Integer, index As Integer) As ScavengeResult
  overload: EventStore.Core.Index.ScavengeResult.Success*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EventStore.Core.Index.ScavengeResult.Failed(EventStore.Core.Index.PTable,System.Int32,System.Int32)
  commentId: M:EventStore.Core.Index.ScavengeResult.Failed(EventStore.Core.Index.PTable,System.Int32,System.Int32)
  id: Failed(EventStore.Core.Index.PTable,System.Int32,System.Int32)
  parent: EventStore.Core.Index.ScavengeResult
  langs:
  - csharp
  - vb
  name: Failed(PTable, Int32, Int32)
  nameWithType: ScavengeResult.Failed(PTable, Int32, Int32)
  fullName: EventStore.Core.Index.ScavengeResult.Failed(EventStore.Core.Index.PTable, System.Int32, System.Int32)
  type: Method
  source:
    id: Failed
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/ScavengeResult.cs
    startLine: 26
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public static ScavengeResult Failed(PTable oldTable, int level, int index)
    parameters:
    - id: oldTable
      type: EventStore.Core.Index.PTable
    - id: level
      type: System.Int32
    - id: index
      type: System.Int32
    return:
      type: EventStore.Core.Index.ScavengeResult
    content.vb: Public Shared Function Failed(oldTable As PTable, level As Integer, index As Integer) As ScavengeResult
  overload: EventStore.Core.Index.ScavengeResult.Failed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Core.Index
  commentId: N:EventStore.Core.Index
  name: EventStore.Core.Index
  nameWithType: EventStore.Core.Index
  fullName: EventStore.Core.Index
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Index.ScavengeResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ScavengeResult>()
  nameWithType: ProtobufExtensions.Serialize<ScavengeResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Index.ScavengeResult>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ScavengeResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Index.ScavengeResult)()
  name.vb: Serialize(Of ScavengeResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ScavengeResult>
    nameWithType: ProtobufExtensions.Serialize<ScavengeResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Index.ScavengeResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ScavengeResult)
    nameWithType: ProtobufExtensions.Serialize(Of ScavengeResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Index.ScavengeResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Index.ScavengeResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ScavengeResult>()
  nameWithType: ProtobufExtensions.SerializeToArray<ScavengeResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Index.ScavengeResult>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ScavengeResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Index.ScavengeResult)()
  name.vb: SerializeToArray(Of ScavengeResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ScavengeResult>
    nameWithType: ProtobufExtensions.SerializeToArray<ScavengeResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Index.ScavengeResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ScavengeResult)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ScavengeResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Index.ScavengeResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Index.IndexMap
  commentId: T:EventStore.Core.Index.IndexMap
  parent: EventStore.Core.Index
  name: IndexMap
  nameWithType: IndexMap
  fullName: EventStore.Core.Index.IndexMap
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Index.PTable
  commentId: T:EventStore.Core.Index.PTable
  parent: EventStore.Core.Index
  name: PTable
  nameWithType: PTable
  fullName: EventStore.Core.Index.PTable
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Index.ScavengeResult.Success*
  commentId: Overload:EventStore.Core.Index.ScavengeResult.Success
  name: Success
  nameWithType: ScavengeResult.Success
  fullName: EventStore.Core.Index.ScavengeResult.Success
- uid: EventStore.Core.Index.ScavengeResult
  commentId: T:EventStore.Core.Index.ScavengeResult
  parent: EventStore.Core.Index
  name: ScavengeResult
  nameWithType: ScavengeResult
  fullName: EventStore.Core.Index.ScavengeResult
- uid: EventStore.Core.Index.ScavengeResult.Failed*
  commentId: Overload:EventStore.Core.Index.ScavengeResult.Failed
  name: Failed
  nameWithType: ScavengeResult.Failed
  fullName: EventStore.Core.Index.ScavengeResult.Failed

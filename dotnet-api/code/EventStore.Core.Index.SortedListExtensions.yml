### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Index.SortedListExtensions
  commentId: T:EventStore.Core.Index.SortedListExtensions
  id: SortedListExtensions
  parent: EventStore.Core.Index
  children:
  - EventStore.Core.Index.SortedListExtensions.LowerBound``2(System.Collections.Generic.SortedList{``0,``1},``0)
  - EventStore.Core.Index.SortedListExtensions.UpperBound``2(System.Collections.Generic.SortedList{``0,``1},``0)
  langs:
  - csharp
  - vb
  name: SortedListExtensions
  nameWithType: SortedListExtensions
  fullName: EventStore.Core.Index.SortedListExtensions
  type: Class
  source:
    id: SortedListExtensions
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/SortedListExtensions.cs
    startLine: 3
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  syntax:
    content: public static class SortedListExtensions
    content.vb: Public Module SortedListExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Core.Index.SortedListExtensions.LowerBound``2(System.Collections.Generic.SortedList{``0,``1},``0)
  commentId: M:EventStore.Core.Index.SortedListExtensions.LowerBound``2(System.Collections.Generic.SortedList{``0,``1},``0)
  id: LowerBound``2(System.Collections.Generic.SortedList{``0,``1},``0)
  isExtensionMethod: true
  parent: EventStore.Core.Index.SortedListExtensions
  langs:
  - csharp
  - vb
  name: LowerBound<TKey, TValue>(SortedList<TKey, TValue>, TKey)
  nameWithType: SortedListExtensions.LowerBound<TKey, TValue>(SortedList<TKey, TValue>, TKey)
  fullName: EventStore.Core.Index.SortedListExtensions.LowerBound<TKey, TValue>(System.Collections.Generic.SortedList<TKey, TValue>, TKey)
  type: Method
  source:
    id: LowerBound
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/SortedListExtensions.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  summary: "\nReturns the index of smallest (according to comparer) element greater than or equal to provided key.\nReturns -1 if all keys are smaller than provided key.\n"
  example: []
  syntax:
    content: public static int LowerBound<TKey, TValue>(this SortedList<TKey, TValue> list, TKey key)
    parameters:
    - id: list
      type: System.Collections.Generic.SortedList{{TKey},{TValue}}
    - id: key
      type: '{TKey}'
    typeParameters:
    - id: TKey
    - id: TValue
    return:
      type: System.Int32
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function LowerBound(Of TKey, TValue)(list As SortedList(Of TKey, TValue), key As TKey) As Integer
  overload: EventStore.Core.Index.SortedListExtensions.LowerBound*
  nameWithType.vb: SortedListExtensions.LowerBound(Of TKey, TValue)(SortedList(Of TKey, TValue), TKey)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Index.SortedListExtensions.LowerBound(Of TKey, TValue)(System.Collections.Generic.SortedList(Of TKey, TValue), TKey)
  name.vb: LowerBound(Of TKey, TValue)(SortedList(Of TKey, TValue), TKey)
- uid: EventStore.Core.Index.SortedListExtensions.UpperBound``2(System.Collections.Generic.SortedList{``0,``1},``0)
  commentId: M:EventStore.Core.Index.SortedListExtensions.UpperBound``2(System.Collections.Generic.SortedList{``0,``1},``0)
  id: UpperBound``2(System.Collections.Generic.SortedList{``0,``1},``0)
  isExtensionMethod: true
  parent: EventStore.Core.Index.SortedListExtensions
  langs:
  - csharp
  - vb
  name: UpperBound<TKey, TValue>(SortedList<TKey, TValue>, TKey)
  nameWithType: SortedListExtensions.UpperBound<TKey, TValue>(SortedList<TKey, TValue>, TKey)
  fullName: EventStore.Core.Index.SortedListExtensions.UpperBound<TKey, TValue>(System.Collections.Generic.SortedList<TKey, TValue>, TKey)
  type: Method
  source:
    id: UpperBound
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/SortedListExtensions.cs
    startLine: 33
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Index
  summary: "\nReturns the index of largest (according to comparer) element less than or equal to provided key.\nReturns -1 if all keys are greater than provided key.\n"
  example: []
  syntax:
    content: public static int UpperBound<TKey, TValue>(this SortedList<TKey, TValue> list, TKey key)
    parameters:
    - id: list
      type: System.Collections.Generic.SortedList{{TKey},{TValue}}
    - id: key
      type: '{TKey}'
    typeParameters:
    - id: TKey
    - id: TValue
    return:
      type: System.Int32
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpperBound(Of TKey, TValue)(list As SortedList(Of TKey, TValue), key As TKey) As Integer
  overload: EventStore.Core.Index.SortedListExtensions.UpperBound*
  nameWithType.vb: SortedListExtensions.UpperBound(Of TKey, TValue)(SortedList(Of TKey, TValue), TKey)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Index.SortedListExtensions.UpperBound(Of TKey, TValue)(System.Collections.Generic.SortedList(Of TKey, TValue), TKey)
  name.vb: UpperBound(Of TKey, TValue)(SortedList(Of TKey, TValue), TKey)
references:
- uid: EventStore.Core.Index
  commentId: N:EventStore.Core.Index
  name: EventStore.Core.Index
  nameWithType: EventStore.Core.Index
  fullName: EventStore.Core.Index
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Index.SortedListExtensions.LowerBound*
  commentId: Overload:EventStore.Core.Index.SortedListExtensions.LowerBound
  name: LowerBound
  nameWithType: SortedListExtensions.LowerBound
  fullName: EventStore.Core.Index.SortedListExtensions.LowerBound
- uid: System.Collections.Generic.SortedList{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.SortedList{``0,``1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.SortedList`2
  name: SortedList<TKey, TValue>
  nameWithType: SortedList<TKey, TValue>
  fullName: System.Collections.Generic.SortedList<TKey, TValue>
  nameWithType.vb: SortedList(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue)
  name.vb: SortedList(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2
    name: SortedList
    nameWithType: SortedList
    fullName: System.Collections.Generic.SortedList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2
    name: SortedList
    nameWithType: SortedList
    fullName: System.Collections.Generic.SortedList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.SortedList`2
  commentId: T:System.Collections.Generic.SortedList`2
  isExternal: true
  name: SortedList<TKey, TValue>
  nameWithType: SortedList<TKey, TValue>
  fullName: System.Collections.Generic.SortedList<TKey, TValue>
  nameWithType.vb: SortedList(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue)
  name.vb: SortedList(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2
    name: SortedList
    nameWithType: SortedList
    fullName: System.Collections.Generic.SortedList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2
    name: SortedList
    nameWithType: SortedList
    fullName: System.Collections.Generic.SortedList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: EventStore.Core.Index.SortedListExtensions.UpperBound*
  commentId: Overload:EventStore.Core.Index.SortedListExtensions.UpperBound
  name: UpperBound
  nameWithType: SortedListExtensions.UpperBound
  fullName: EventStore.Core.Index.SortedListExtensions.UpperBound

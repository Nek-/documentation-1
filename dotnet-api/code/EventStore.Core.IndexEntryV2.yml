### YamlMime:ManagedReference
items:
- uid: EventStore.Core.IndexEntryV2
  commentId: T:EventStore.Core.IndexEntryV2
  id: IndexEntryV2
  parent: EventStore.Core
  children:
  - EventStore.Core.IndexEntryV2.#ctor(System.UInt64,System.Int32,System.Int64)
  - EventStore.Core.IndexEntryV2.Bytes
  - EventStore.Core.IndexEntryV2.CompareTo(EventStore.Core.IndexEntryV2)
  - EventStore.Core.IndexEntryV2.Equals(EventStore.Core.IndexEntryV2)
  - EventStore.Core.IndexEntryV2.Position
  - EventStore.Core.IndexEntryV2.Stream
  - EventStore.Core.IndexEntryV2.ToString
  - EventStore.Core.IndexEntryV2.Version
  langs:
  - csharp
  - vb
  name: IndexEntryV2
  nameWithType: IndexEntryV2
  fullName: EventStore.Core.IndexEntryV2
  type: Struct
  source:
    id: IndexEntryV2
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/IndexEntryV2.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: 'public struct IndexEntryV2 : IComparable<IndexEntryV2>, IEquatable<IndexEntryV2>'
    content.vb: >-
      Public Structure IndexEntryV2
          Implements IComparable(Of IndexEntryV2), IEquatable(Of IndexEntryV2)
  implements:
  - System.IComparable{EventStore.Core.IndexEntryV2}
  - System.IEquatable{EventStore.Core.IndexEntryV2}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.IndexEntryV2.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.IndexEntryV2.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.IndexEntryV2.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: EventStore.Core.IndexEntryV2.Bytes
  commentId: F:EventStore.Core.IndexEntryV2.Bytes
  id: Bytes
  parent: EventStore.Core.IndexEntryV2
  langs:
  - csharp
  - vb
  name: Bytes
  nameWithType: IndexEntryV2.Bytes
  fullName: EventStore.Core.IndexEntryV2.Bytes
  type: Field
  source:
    id: Bytes
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/IndexEntryV2.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public byte *Bytes
    return:
      type: System.Byte*
    content.vb: Public Bytes As Byte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.IndexEntryV2.Version
  commentId: F:EventStore.Core.IndexEntryV2.Version
  id: Version
  parent: EventStore.Core.IndexEntryV2
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: IndexEntryV2.Version
  fullName: EventStore.Core.IndexEntryV2.Version
  type: Field
  source:
    id: Version
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/IndexEntryV2.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public int Version
    return:
      type: System.Int32
    content.vb: Public Version As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.IndexEntryV2.Stream
  commentId: F:EventStore.Core.IndexEntryV2.Stream
  id: Stream
  parent: EventStore.Core.IndexEntryV2
  langs:
  - csharp
  - vb
  name: Stream
  nameWithType: IndexEntryV2.Stream
  fullName: EventStore.Core.IndexEntryV2.Stream
  type: Field
  source:
    id: Stream
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/IndexEntryV2.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public ulong Stream
    return:
      type: System.UInt64
    content.vb: Public Stream As ULong
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.IndexEntryV2.Position
  commentId: F:EventStore.Core.IndexEntryV2.Position
  id: Position
  parent: EventStore.Core.IndexEntryV2
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: IndexEntryV2.Position
  fullName: EventStore.Core.IndexEntryV2.Position
  type: Field
  source:
    id: Position
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/IndexEntryV2.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public long Position
    return:
      type: System.Int64
    content.vb: Public Position As Long
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.IndexEntryV2.#ctor(System.UInt64,System.Int32,System.Int64)
  commentId: M:EventStore.Core.IndexEntryV2.#ctor(System.UInt64,System.Int32,System.Int64)
  id: '#ctor(System.UInt64,System.Int32,System.Int64)'
  parent: EventStore.Core.IndexEntryV2
  langs:
  - csharp
  - vb
  name: IndexEntryV2(UInt64, Int32, Int64)
  nameWithType: IndexEntryV2.IndexEntryV2(UInt64, Int32, Int64)
  fullName: EventStore.Core.IndexEntryV2.IndexEntryV2(System.UInt64, System.Int32, System.Int64)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/IndexEntryV2.cs
    startLine: 11
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public IndexEntryV2(ulong stream, int version, long position)
    parameters:
    - id: stream
      type: System.UInt64
    - id: version
      type: System.Int32
    - id: position
      type: System.Int64
    content.vb: Public Sub New(stream As ULong, version As Integer, position As Long)
  overload: EventStore.Core.IndexEntryV2.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.IndexEntryV2.CompareTo(EventStore.Core.IndexEntryV2)
  commentId: M:EventStore.Core.IndexEntryV2.CompareTo(EventStore.Core.IndexEntryV2)
  id: CompareTo(EventStore.Core.IndexEntryV2)
  parent: EventStore.Core.IndexEntryV2
  langs:
  - csharp
  - vb
  name: CompareTo(IndexEntryV2)
  nameWithType: IndexEntryV2.CompareTo(IndexEntryV2)
  fullName: EventStore.Core.IndexEntryV2.CompareTo(EventStore.Core.IndexEntryV2)
  type: Method
  source:
    id: CompareTo
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/IndexEntryV2.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public int CompareTo(IndexEntryV2 other)
    parameters:
    - id: other
      type: EventStore.Core.IndexEntryV2
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As IndexEntryV2) As Integer
  overload: EventStore.Core.IndexEntryV2.CompareTo*
  implements:
  - System.IComparable{EventStore.Core.IndexEntryV2}.CompareTo(EventStore.Core.IndexEntryV2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.IndexEntryV2.Equals(EventStore.Core.IndexEntryV2)
  commentId: M:EventStore.Core.IndexEntryV2.Equals(EventStore.Core.IndexEntryV2)
  id: Equals(EventStore.Core.IndexEntryV2)
  parent: EventStore.Core.IndexEntryV2
  langs:
  - csharp
  - vb
  name: Equals(IndexEntryV2)
  nameWithType: IndexEntryV2.Equals(IndexEntryV2)
  fullName: EventStore.Core.IndexEntryV2.Equals(EventStore.Core.IndexEntryV2)
  type: Method
  source:
    id: Equals
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/IndexEntryV2.cs
    startLine: 30
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public bool Equals(IndexEntryV2 other)
    parameters:
    - id: other
      type: EventStore.Core.IndexEntryV2
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As IndexEntryV2) As Boolean
  overload: EventStore.Core.IndexEntryV2.Equals*
  implements:
  - System.IEquatable{EventStore.Core.IndexEntryV2}.Equals(EventStore.Core.IndexEntryV2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.IndexEntryV2.ToString
  commentId: M:EventStore.Core.IndexEntryV2.ToString
  id: ToString
  parent: EventStore.Core.IndexEntryV2
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: IndexEntryV2.ToString()
  fullName: EventStore.Core.IndexEntryV2.ToString()
  type: Method
  source:
    id: ToString
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Index/IndexEntryV2.cs
    startLine: 34
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: EventStore.Core.IndexEntryV2.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core
  commentId: N:EventStore.Core
  name: EventStore.Core
  nameWithType: EventStore.Core
  fullName: EventStore.Core
- uid: System.IComparable{EventStore.Core.IndexEntryV2}
  commentId: T:System.IComparable{EventStore.Core.IndexEntryV2}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IndexEntryV2>
  nameWithType: IComparable<IndexEntryV2>
  fullName: System.IComparable<EventStore.Core.IndexEntryV2>
  nameWithType.vb: IComparable(Of IndexEntryV2)
  fullName.vb: System.IComparable(Of EventStore.Core.IndexEntryV2)
  name.vb: IComparable(Of IndexEntryV2)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.IndexEntryV2
    name: IndexEntryV2
    nameWithType: IndexEntryV2
    fullName: EventStore.Core.IndexEntryV2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.IndexEntryV2
    name: IndexEntryV2
    nameWithType: IndexEntryV2
    fullName: EventStore.Core.IndexEntryV2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{EventStore.Core.IndexEntryV2}
  commentId: T:System.IEquatable{EventStore.Core.IndexEntryV2}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IndexEntryV2>
  nameWithType: IEquatable<IndexEntryV2>
  fullName: System.IEquatable<EventStore.Core.IndexEntryV2>
  nameWithType.vb: IEquatable(Of IndexEntryV2)
  fullName.vb: System.IEquatable(Of EventStore.Core.IndexEntryV2)
  name.vb: IEquatable(Of IndexEntryV2)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.IndexEntryV2
    name: IndexEntryV2
    nameWithType: IndexEntryV2
    fullName: EventStore.Core.IndexEntryV2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.IndexEntryV2
    name: IndexEntryV2
    nameWithType: IndexEntryV2
    fullName: EventStore.Core.IndexEntryV2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.IndexEntryV2.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<IndexEntryV2>()
  nameWithType: EnumExtensions.EnumValueName<IndexEntryV2>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.IndexEntryV2>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of IndexEntryV2)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.IndexEntryV2)()
  name.vb: EnumValueName(Of IndexEntryV2)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<IndexEntryV2>
    nameWithType: EnumExtensions.EnumValueName<IndexEntryV2>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.IndexEntryV2>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of IndexEntryV2)
    nameWithType: EnumExtensions.EnumValueName(Of IndexEntryV2)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.IndexEntryV2)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.IndexEntryV2.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IndexEntryV2>()
  nameWithType: ProtobufExtensions.Serialize<IndexEntryV2>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.IndexEntryV2>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IndexEntryV2)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.IndexEntryV2)()
  name.vb: Serialize(Of IndexEntryV2)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IndexEntryV2>
    nameWithType: ProtobufExtensions.Serialize<IndexEntryV2>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.IndexEntryV2>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IndexEntryV2)
    nameWithType: ProtobufExtensions.Serialize(Of IndexEntryV2)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.IndexEntryV2)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.IndexEntryV2.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IndexEntryV2>()
  nameWithType: ProtobufExtensions.SerializeToArray<IndexEntryV2>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.IndexEntryV2>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IndexEntryV2)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.IndexEntryV2)()
  name.vb: SerializeToArray(Of IndexEntryV2)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IndexEntryV2>
    nameWithType: ProtobufExtensions.SerializeToArray<IndexEntryV2>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.IndexEntryV2>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IndexEntryV2)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IndexEntryV2)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.IndexEntryV2)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Byte*
  isExternal: true
  name: Byte*
  nameWithType: Byte*
  fullName: System.Byte*
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.IndexEntryV2.#ctor*
  commentId: Overload:EventStore.Core.IndexEntryV2.#ctor
  name: IndexEntryV2
  nameWithType: IndexEntryV2.IndexEntryV2
  fullName: EventStore.Core.IndexEntryV2.IndexEntryV2
- uid: EventStore.Core.IndexEntryV2.CompareTo*
  commentId: Overload:EventStore.Core.IndexEntryV2.CompareTo
  name: CompareTo
  nameWithType: IndexEntryV2.CompareTo
  fullName: EventStore.Core.IndexEntryV2.CompareTo
- uid: System.IComparable{EventStore.Core.IndexEntryV2}.CompareTo(EventStore.Core.IndexEntryV2)
  commentId: M:System.IComparable{EventStore.Core.IndexEntryV2}.CompareTo(EventStore.Core.IndexEntryV2)
  parent: System.IComparable{EventStore.Core.IndexEntryV2}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IndexEntryV2)
  nameWithType: IComparable<IndexEntryV2>.CompareTo(IndexEntryV2)
  fullName: System.IComparable<EventStore.Core.IndexEntryV2>.CompareTo(EventStore.Core.IndexEntryV2)
  nameWithType.vb: IComparable(Of IndexEntryV2).CompareTo(IndexEntryV2)
  fullName.vb: System.IComparable(Of EventStore.Core.IndexEntryV2).CompareTo(EventStore.Core.IndexEntryV2)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IndexEntryV2>.CompareTo
    fullName: System.IComparable<EventStore.Core.IndexEntryV2>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.IndexEntryV2
    name: IndexEntryV2
    nameWithType: IndexEntryV2
    fullName: EventStore.Core.IndexEntryV2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IndexEntryV2).CompareTo
    fullName: System.IComparable(Of EventStore.Core.IndexEntryV2).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.IndexEntryV2
    name: IndexEntryV2
    nameWithType: IndexEntryV2
    fullName: EventStore.Core.IndexEntryV2
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.IndexEntryV2
  commentId: T:EventStore.Core.IndexEntryV2
  parent: EventStore.Core
  name: IndexEntryV2
  nameWithType: IndexEntryV2
  fullName: EventStore.Core.IndexEntryV2
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.IndexEntryV2.Equals*
  commentId: Overload:EventStore.Core.IndexEntryV2.Equals
  name: Equals
  nameWithType: IndexEntryV2.Equals
  fullName: EventStore.Core.IndexEntryV2.Equals
- uid: System.IEquatable{EventStore.Core.IndexEntryV2}.Equals(EventStore.Core.IndexEntryV2)
  commentId: M:System.IEquatable{EventStore.Core.IndexEntryV2}.Equals(EventStore.Core.IndexEntryV2)
  parent: System.IEquatable{EventStore.Core.IndexEntryV2}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IndexEntryV2)
  nameWithType: IEquatable<IndexEntryV2>.Equals(IndexEntryV2)
  fullName: System.IEquatable<EventStore.Core.IndexEntryV2>.Equals(EventStore.Core.IndexEntryV2)
  nameWithType.vb: IEquatable(Of IndexEntryV2).Equals(IndexEntryV2)
  fullName.vb: System.IEquatable(Of EventStore.Core.IndexEntryV2).Equals(EventStore.Core.IndexEntryV2)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IndexEntryV2>.Equals
    fullName: System.IEquatable<EventStore.Core.IndexEntryV2>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.IndexEntryV2
    name: IndexEntryV2
    nameWithType: IndexEntryV2
    fullName: EventStore.Core.IndexEntryV2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IndexEntryV2).Equals
    fullName: System.IEquatable(Of EventStore.Core.IndexEntryV2).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.IndexEntryV2
    name: IndexEntryV2
    nameWithType: IndexEntryV2
    fullName: EventStore.Core.IndexEntryV2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.IndexEntryV2.ToString*
  commentId: Overload:EventStore.Core.IndexEntryV2.ToString
  name: ToString
  nameWithType: IndexEntryV2.ToString
  fullName: EventStore.Core.IndexEntryV2.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

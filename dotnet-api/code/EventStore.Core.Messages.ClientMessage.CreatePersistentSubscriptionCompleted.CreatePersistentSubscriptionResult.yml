### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  commentId: T:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  id: ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.AccessDenied
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.AlreadyExists
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.Fail
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.Success
  langs:
  - csharp
  - vb
  name: ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  nameWithType: ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  type: Enum
  source:
    id: CreatePersistentSubscriptionResult
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 987
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public enum CreatePersistentSubscriptionResult
    content.vb: Public Enum CreatePersistentSubscriptionResult
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.Success
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.Success
  id: Success
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.Success
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.Success
  type: Field
  source:
    id: Success
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 988
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: Success = 0
    return:
      type: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.AlreadyExists
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.AlreadyExists
  id: AlreadyExists
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  langs:
  - csharp
  - vb
  name: AlreadyExists
  nameWithType: ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.AlreadyExists
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.AlreadyExists
  type: Field
  source:
    id: AlreadyExists
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 989
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: AlreadyExists = 1
    return:
      type: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.Fail
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.Fail
  id: Fail
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  langs:
  - csharp
  - vb
  name: Fail
  nameWithType: ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.Fail
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.Fail
  type: Field
  source:
    id: Fail
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 990
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: Fail = 2
    return:
      type: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.AccessDenied
  commentId: F:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.AccessDenied
  id: AccessDenied
  parent: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  langs:
  - csharp
  - vb
  name: AccessDenied
  nameWithType: ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.AccessDenied
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.AccessDenied
  type: Field
  source:
    id: AccessDenied
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 991
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: AccessDenied = 3
    return:
      type: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>()
  nameWithType: EnumExtensions.EnumValueName<ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)()
  name.vb: EnumValueName(Of ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>
    nameWithType: EnumExtensions.EnumValueName<ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)
    nameWithType: EnumExtensions.EnumValueName(Of ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>()
  nameWithType: ProtobufExtensions.Serialize<ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)()
  name.vb: Serialize(Of ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>
    nameWithType: ProtobufExtensions.Serialize<ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)
    nameWithType: ProtobufExtensions.Serialize(Of ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>()
  nameWithType: ProtobufExtensions.SerializeToArray<ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)()
  name.vb: SerializeToArray(Of ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>
    nameWithType: ProtobufExtensions.SerializeToArray<ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  commentId: T:EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  parent: EventStore.Core.Messages
  name: ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  nameWithType: ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult
  fullName: EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult

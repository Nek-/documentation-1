### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
  commentId: T:EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
  id: ClientMessage.ReadStreamEventsBackward
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.#ctor(System.Guid,System.Guid,EventStore.Core.Messaging.IEnvelope,System.String,System.Int64,System.Int32,System.Boolean,System.Boolean,System.Nullable{System.Int64},System.Security.Principal.IPrincipal)
  - EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.EventStreamId
  - EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.FromEventNumber
  - EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.MaxCount
  - EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.MsgTypeId
  - EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.RequireMaster
  - EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ResolveLinkTos
  - EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ToString
  - EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ValidationStreamVersion
  langs:
  - csharp
  - vb
  name: ClientMessage.ReadStreamEventsBackward
  nameWithType: ClientMessage.ReadStreamEventsBackward
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
  type: Class
  source:
    id: ReadStreamEventsBackward
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 642
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class ReadStreamEventsBackward : ClientMessage.ReadRequestMessage'
    content.vb: >-
      Public Class ReadStreamEventsBackward
          Inherits ClientMessage.ReadRequestMessage
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  inheritedMembers:
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage.InternalCorrId
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage.CorrelationId
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Envelope
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage.User
  - EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Expires
  - EventStore.Core.Messaging.Message.NextMsgId
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.MsgTypeId
  commentId: P:EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: ClientMessage.ReadStreamEventsBackward.MsgTypeId
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.MsgTypeId
  type: Property
  source:
    id: MsgTypeId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 645
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.MsgTypeId
  overload: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.EventStreamId
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.EventStreamId
  id: EventStreamId
  parent: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
  langs:
  - csharp
  - vb
  name: EventStreamId
  nameWithType: ClientMessage.ReadStreamEventsBackward.EventStreamId
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.EventStreamId
  type: Field
  source:
    id: EventStreamId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 649
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string EventStreamId
    return:
      type: System.String
    content.vb: Public ReadOnly EventStreamId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.FromEventNumber
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.FromEventNumber
  id: FromEventNumber
  parent: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
  langs:
  - csharp
  - vb
  name: FromEventNumber
  nameWithType: ClientMessage.ReadStreamEventsBackward.FromEventNumber
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.FromEventNumber
  type: Field
  source:
    id: FromEventNumber
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 650
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly long FromEventNumber
    return:
      type: System.Int64
    content.vb: Public ReadOnly FromEventNumber As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.MaxCount
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.MaxCount
  id: MaxCount
  parent: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
  langs:
  - csharp
  - vb
  name: MaxCount
  nameWithType: ClientMessage.ReadStreamEventsBackward.MaxCount
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.MaxCount
  type: Field
  source:
    id: MaxCount
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 651
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int MaxCount
    return:
      type: System.Int32
    content.vb: Public ReadOnly MaxCount As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ResolveLinkTos
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ResolveLinkTos
  id: ResolveLinkTos
  parent: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
  langs:
  - csharp
  - vb
  name: ResolveLinkTos
  nameWithType: ClientMessage.ReadStreamEventsBackward.ResolveLinkTos
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ResolveLinkTos
  type: Field
  source:
    id: ResolveLinkTos
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 652
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly bool ResolveLinkTos
    return:
      type: System.Boolean
    content.vb: Public ReadOnly ResolveLinkTos As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.RequireMaster
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.RequireMaster
  id: RequireMaster
  parent: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
  langs:
  - csharp
  - vb
  name: RequireMaster
  nameWithType: ClientMessage.ReadStreamEventsBackward.RequireMaster
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.RequireMaster
  type: Field
  source:
    id: RequireMaster
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 653
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly bool RequireMaster
    return:
      type: System.Boolean
    content.vb: Public ReadOnly RequireMaster As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ValidationStreamVersion
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ValidationStreamVersion
  id: ValidationStreamVersion
  parent: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
  langs:
  - csharp
  - vb
  name: ValidationStreamVersion
  nameWithType: ClientMessage.ReadStreamEventsBackward.ValidationStreamVersion
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ValidationStreamVersion
  type: Field
  source:
    id: ValidationStreamVersion
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 655
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly long? ValidationStreamVersion
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public ReadOnly ValidationStreamVersion As Long?
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.#ctor(System.Guid,System.Guid,EventStore.Core.Messaging.IEnvelope,System.String,System.Int64,System.Int32,System.Boolean,System.Boolean,System.Nullable{System.Int64},System.Security.Principal.IPrincipal)
  commentId: M:EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.#ctor(System.Guid,System.Guid,EventStore.Core.Messaging.IEnvelope,System.String,System.Int64,System.Int32,System.Boolean,System.Boolean,System.Nullable{System.Int64},System.Security.Principal.IPrincipal)
  id: '#ctor(System.Guid,System.Guid,EventStore.Core.Messaging.IEnvelope,System.String,System.Int64,System.Int32,System.Boolean,System.Boolean,System.Nullable{System.Int64},System.Security.Principal.IPrincipal)'
  parent: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
  langs:
  - csharp
  - vb
  name: ReadStreamEventsBackward(Guid, Guid, IEnvelope, String, Int64, Int32, Boolean, Boolean, Nullable<Int64>, IPrincipal)
  nameWithType: ClientMessage.ReadStreamEventsBackward.ReadStreamEventsBackward(Guid, Guid, IEnvelope, String, Int64, Int32, Boolean, Boolean, Nullable<Int64>, IPrincipal)
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ReadStreamEventsBackward(System.Guid, System.Guid, EventStore.Core.Messaging.IEnvelope, System.String, System.Int64, System.Int32, System.Boolean, System.Boolean, System.Nullable<System.Int64>, System.Security.Principal.IPrincipal)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 657
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public ReadStreamEventsBackward(Guid internalCorrId, Guid correlationId, IEnvelope envelope, string eventStreamId, long fromEventNumber, int maxCount, bool resolveLinkTos, bool requireMaster, long? validationStreamVersion, IPrincipal user)
    parameters:
    - id: internalCorrId
      type: System.Guid
    - id: correlationId
      type: System.Guid
    - id: envelope
      type: EventStore.Core.Messaging.IEnvelope
    - id: eventStreamId
      type: System.String
    - id: fromEventNumber
      type: System.Int64
    - id: maxCount
      type: System.Int32
    - id: resolveLinkTos
      type: System.Boolean
    - id: requireMaster
      type: System.Boolean
    - id: validationStreamVersion
      type: System.Nullable{System.Int64}
    - id: user
      type: System.Security.Principal.IPrincipal
    content.vb: Public Sub New(internalCorrId As Guid, correlationId As Guid, envelope As IEnvelope, eventStreamId As String, fromEventNumber As Long, maxCount As Integer, resolveLinkTos As Boolean, requireMaster As Boolean, validationStreamVersion As Long?, user As IPrincipal)
  overload: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.#ctor*
  nameWithType.vb: ClientMessage.ReadStreamEventsBackward.ReadStreamEventsBackward(Guid, Guid, IEnvelope, String, Int64, Int32, Boolean, Boolean, Nullable(Of Int64), IPrincipal)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ReadStreamEventsBackward(System.Guid, System.Guid, EventStore.Core.Messaging.IEnvelope, System.String, System.Int64, System.Int32, System.Boolean, System.Boolean, System.Nullable(Of System.Int64), System.Security.Principal.IPrincipal)
  name.vb: ReadStreamEventsBackward(Guid, Guid, IEnvelope, String, Int64, Int32, Boolean, Boolean, Nullable(Of Int64), IPrincipal)
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ToString
  commentId: M:EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ToString
  id: ToString
  parent: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ClientMessage.ReadStreamEventsBackward.ToString()
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ToString()
  type: Method
  source:
    id: ToString
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 672
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  commentId: T:EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  parent: EventStore.Core.Messages
  name: ClientMessage.ReadRequestMessage
  nameWithType: ClientMessage.ReadRequestMessage
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.InternalCorrId
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.InternalCorrId
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  name: InternalCorrId
  nameWithType: ClientMessage.ReadRequestMessage.InternalCorrId
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.InternalCorrId
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.CorrelationId
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.CorrelationId
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  name: CorrelationId
  nameWithType: ClientMessage.ReadRequestMessage.CorrelationId
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.CorrelationId
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Envelope
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Envelope
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  name: Envelope
  nameWithType: ClientMessage.ReadRequestMessage.Envelope
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Envelope
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.User
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.User
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  name: User
  nameWithType: ClientMessage.ReadRequestMessage.User
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.User
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Expires
  commentId: F:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Expires
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  name: Expires
  nameWithType: ClientMessage.ReadRequestMessage.Expires
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.Expires
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ClientMessage.ReadStreamEventsBackward>()
  nameWithType: ProtobufExtensions.Serialize<ClientMessage.ReadStreamEventsBackward>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ClientMessage.ReadStreamEventsBackward)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward)()
  name.vb: Serialize(Of ClientMessage.ReadStreamEventsBackward)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ClientMessage.ReadStreamEventsBackward>
    nameWithType: ProtobufExtensions.Serialize<ClientMessage.ReadStreamEventsBackward>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ClientMessage.ReadStreamEventsBackward)
    nameWithType: ProtobufExtensions.Serialize(Of ClientMessage.ReadStreamEventsBackward)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ClientMessage.ReadStreamEventsBackward>()
  nameWithType: ProtobufExtensions.SerializeToArray<ClientMessage.ReadStreamEventsBackward>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ClientMessage.ReadStreamEventsBackward)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward)()
  name.vb: SerializeToArray(Of ClientMessage.ReadStreamEventsBackward)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ClientMessage.ReadStreamEventsBackward>
    nameWithType: ProtobufExtensions.SerializeToArray<ClientMessage.ReadStreamEventsBackward>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ClientMessage.ReadStreamEventsBackward)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ClientMessage.ReadStreamEventsBackward)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.MsgTypeId
  commentId: P:EventStore.Core.Messages.ClientMessage.ReadRequestMessage.MsgTypeId
  parent: EventStore.Core.Messages.ClientMessage.ReadRequestMessage
  name: MsgTypeId
  nameWithType: ClientMessage.ReadRequestMessage.MsgTypeId
  fullName: EventStore.Core.Messages.ClientMessage.ReadRequestMessage.MsgTypeId
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.MsgTypeId*
  commentId: Overload:EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.MsgTypeId
  name: MsgTypeId
  nameWithType: ClientMessage.ReadStreamEventsBackward.MsgTypeId
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.MsgTypeId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.#ctor*
  commentId: Overload:EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.#ctor
  name: ReadStreamEventsBackward
  nameWithType: ClientMessage.ReadStreamEventsBackward.ReadStreamEventsBackward
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ReadStreamEventsBackward
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: EventStore.Core.Messaging.IEnvelope
  commentId: T:EventStore.Core.Messaging.IEnvelope
  parent: EventStore.Core.Messaging
  name: IEnvelope
  nameWithType: IEnvelope
  fullName: EventStore.Core.Messaging.IEnvelope
- uid: System.Security.Principal.IPrincipal
  commentId: T:System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Security.Principal
  commentId: N:System.Security.Principal
  isExternal: true
  name: System.Security.Principal
  nameWithType: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ToString*
  commentId: Overload:EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ToString
  name: ToString
  nameWithType: ClientMessage.ReadStreamEventsBackward.ToString
  fullName: EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.ToString

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  commentId: T:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  id: ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.InProgress
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.InvalidScavengeId
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.Started
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.Stopped
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.Unauthorized
  langs:
  - csharp
  - vb
  name: ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  nameWithType: ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  type: Enum
  source:
    id: ScavengeResult
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1545
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public enum ScavengeResult
    content.vb: Public Enum ScavengeResult
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.Started
  commentId: F:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.Started
  id: Started
  parent: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  langs:
  - csharp
  - vb
  name: Started
  nameWithType: ClientMessage.ScavengeDatabaseResponse.ScavengeResult.Started
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.Started
  type: Field
  source:
    id: Started
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1546
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: Started = 0
    return:
      type: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.Unauthorized
  commentId: F:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.Unauthorized
  id: Unauthorized
  parent: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  langs:
  - csharp
  - vb
  name: Unauthorized
  nameWithType: ClientMessage.ScavengeDatabaseResponse.ScavengeResult.Unauthorized
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.Unauthorized
  type: Field
  source:
    id: Unauthorized
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1547
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: Unauthorized = 1
    return:
      type: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.InProgress
  commentId: F:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.InProgress
  id: InProgress
  parent: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  langs:
  - csharp
  - vb
  name: InProgress
  nameWithType: ClientMessage.ScavengeDatabaseResponse.ScavengeResult.InProgress
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.InProgress
  type: Field
  source:
    id: InProgress
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1548
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: InProgress = 2
    return:
      type: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.Stopped
  commentId: F:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.Stopped
  id: Stopped
  parent: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  langs:
  - csharp
  - vb
  name: Stopped
  nameWithType: ClientMessage.ScavengeDatabaseResponse.ScavengeResult.Stopped
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.Stopped
  type: Field
  source:
    id: Stopped
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1549
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: Stopped = 3
    return:
      type: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.InvalidScavengeId
  commentId: F:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.InvalidScavengeId
  id: InvalidScavengeId
  parent: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  langs:
  - csharp
  - vb
  name: InvalidScavengeId
  nameWithType: ClientMessage.ScavengeDatabaseResponse.ScavengeResult.InvalidScavengeId
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.InvalidScavengeId
  type: Field
  source:
    id: InvalidScavengeId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1550
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: InvalidScavengeId = 4
    return:
      type: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<ClientMessage.ScavengeDatabaseResponse.ScavengeResult>()
  nameWithType: EnumExtensions.EnumValueName<ClientMessage.ScavengeDatabaseResponse.ScavengeResult>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of ClientMessage.ScavengeDatabaseResponse.ScavengeResult)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult)()
  name.vb: EnumValueName(Of ClientMessage.ScavengeDatabaseResponse.ScavengeResult)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<ClientMessage.ScavengeDatabaseResponse.ScavengeResult>
    nameWithType: EnumExtensions.EnumValueName<ClientMessage.ScavengeDatabaseResponse.ScavengeResult>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of ClientMessage.ScavengeDatabaseResponse.ScavengeResult)
    nameWithType: EnumExtensions.EnumValueName(Of ClientMessage.ScavengeDatabaseResponse.ScavengeResult)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ClientMessage.ScavengeDatabaseResponse.ScavengeResult>()
  nameWithType: ProtobufExtensions.Serialize<ClientMessage.ScavengeDatabaseResponse.ScavengeResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ClientMessage.ScavengeDatabaseResponse.ScavengeResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult)()
  name.vb: Serialize(Of ClientMessage.ScavengeDatabaseResponse.ScavengeResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ClientMessage.ScavengeDatabaseResponse.ScavengeResult>
    nameWithType: ProtobufExtensions.Serialize<ClientMessage.ScavengeDatabaseResponse.ScavengeResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ClientMessage.ScavengeDatabaseResponse.ScavengeResult)
    nameWithType: ProtobufExtensions.Serialize(Of ClientMessage.ScavengeDatabaseResponse.ScavengeResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ClientMessage.ScavengeDatabaseResponse.ScavengeResult>()
  nameWithType: ProtobufExtensions.SerializeToArray<ClientMessage.ScavengeDatabaseResponse.ScavengeResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ClientMessage.ScavengeDatabaseResponse.ScavengeResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult)()
  name.vb: SerializeToArray(Of ClientMessage.ScavengeDatabaseResponse.ScavengeResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ClientMessage.ScavengeDatabaseResponse.ScavengeResult>
    nameWithType: ProtobufExtensions.SerializeToArray<ClientMessage.ScavengeDatabaseResponse.ScavengeResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ClientMessage.ScavengeDatabaseResponse.ScavengeResult)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ClientMessage.ScavengeDatabaseResponse.ScavengeResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  commentId: T:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  parent: EventStore.Core.Messages
  name: ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  nameWithType: ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse
  commentId: T:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse
  id: ClientMessage.ScavengeDatabaseResponse
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.#ctor(Guid,EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult,System.String)
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.CorrelationId
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.MsgTypeId
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.Result
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeId
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ToString
  langs:
  - csharp
  - vb
  name: ClientMessage.ScavengeDatabaseResponse
  nameWithType: ClientMessage.ScavengeDatabaseResponse
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ScavengeDatabaseResponse
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1448
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class ScavengeDatabaseResponse : Message'
    content.vb: >-
      Public Class ScavengeDatabaseResponse
          Inherits Message
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.MsgTypeId
  commentId: P:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: ClientMessage.ScavengeDatabaseResponse.MsgTypeId
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1451
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messaging.Message.MsgTypeId
  overload: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.CorrelationId
  commentId: F:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.CorrelationId
  id: CorrelationId
  parent: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: ClientMessage.ScavengeDatabaseResponse.CorrelationId
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.CorrelationId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CorrelationId
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1453
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Guid CorrelationId
    return:
      type: Guid
    content.vb: Public ReadOnly CorrelationId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.Result
  commentId: F:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.Result
  id: Result
  parent: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: ClientMessage.ScavengeDatabaseResponse.Result
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.Result
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Result
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1454
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly ClientMessage.ScavengeDatabaseResponse.ScavengeResult Result
    return:
      type: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
    content.vb: Public ReadOnly Result As ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeId
  commentId: F:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeId
  id: ScavengeId
  parent: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse
  langs:
  - csharp
  - vb
  name: ScavengeId
  nameWithType: ClientMessage.ScavengeDatabaseResponse.ScavengeId
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ScavengeId
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1455
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string ScavengeId
    return:
      type: System.String
    content.vb: Public ReadOnly ScavengeId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.#ctor(Guid,EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult,System.String)
  commentId: M:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.#ctor(Guid,EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult,System.String)
  id: '#ctor(Guid,EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult,System.String)'
  parent: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse
  langs:
  - csharp
  - vb
  name: ScavengeDatabaseResponse(Guid, ClientMessage.ScavengeDatabaseResponse.ScavengeResult, String)
  nameWithType: ClientMessage.ScavengeDatabaseResponse.ScavengeDatabaseResponse(Guid, ClientMessage.ScavengeDatabaseResponse.ScavengeResult, String)
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeDatabaseResponse(Guid, EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult, System.String)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1457
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public ScavengeDatabaseResponse(Guid correlationId, ClientMessage.ScavengeDatabaseResponse.ScavengeResult result, string scavengeId)
    parameters:
    - id: correlationId
      type: Guid
    - id: result
      type: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
    - id: scavengeId
      type: System.String
    content.vb: Public Sub New(correlationId As Guid, result As ClientMessage.ScavengeDatabaseResponse.ScavengeResult, scavengeId As String)
  overload: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ToString
  commentId: M:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ToString
  id: ToString
  parent: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ClientMessage.ScavengeDatabaseResponse.ToString()
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ToString()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Messages/ClientMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ToString
    path: ../EventStore/src/EventStore.Core/Messages/ClientMessage.cs
    startLine: 1465
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ClientMessage.ScavengeDatabaseResponse>()
  nameWithType: ProtobufExtensions.Serialize<ClientMessage.ScavengeDatabaseResponse>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ClientMessage.ScavengeDatabaseResponse)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse)()
  name.vb: Serialize(Of ClientMessage.ScavengeDatabaseResponse)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ClientMessage.ScavengeDatabaseResponse>
    nameWithType: ProtobufExtensions.Serialize<ClientMessage.ScavengeDatabaseResponse>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ClientMessage.ScavengeDatabaseResponse)
    nameWithType: ProtobufExtensions.Serialize(Of ClientMessage.ScavengeDatabaseResponse)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ClientMessage.ScavengeDatabaseResponse>()
  nameWithType: ProtobufExtensions.SerializeToArray<ClientMessage.ScavengeDatabaseResponse>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ClientMessage.ScavengeDatabaseResponse)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse)()
  name.vb: SerializeToArray(Of ClientMessage.ScavengeDatabaseResponse)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ClientMessage.ScavengeDatabaseResponse>
    nameWithType: ProtobufExtensions.SerializeToArray<ClientMessage.ScavengeDatabaseResponse>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ClientMessage.ScavengeDatabaseResponse)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ClientMessage.ScavengeDatabaseResponse)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messaging.Message.MsgTypeId
  commentId: P:EventStore.Core.Messaging.Message.MsgTypeId
  parent: EventStore.Core.Messaging.Message
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.MsgTypeId*
  commentId: Overload:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.MsgTypeId
  name: MsgTypeId
  nameWithType: ClientMessage.ScavengeDatabaseResponse.MsgTypeId
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.MsgTypeId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  commentId: T:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  parent: EventStore.Core.Messages
  name: ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  nameWithType: ClientMessage.ScavengeDatabaseResponse.ScavengeResult
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.#ctor*
  commentId: Overload:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.#ctor
  name: ScavengeDatabaseResponse
  nameWithType: ClientMessage.ScavengeDatabaseResponse.ScavengeDatabaseResponse
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeDatabaseResponse
- uid: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ToString*
  commentId: Overload:EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ToString
  name: ToString
  nameWithType: ClientMessage.ScavengeDatabaseResponse.ToString
  fullName: EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ToString

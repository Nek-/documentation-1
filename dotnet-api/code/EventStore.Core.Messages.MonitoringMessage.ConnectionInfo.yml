### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo
  commentId: T:EventStore.Core.Messages.MonitoringMessage.ConnectionInfo
  id: MonitoringMessage.ConnectionInfo
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.AvailableSlots
  - EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.AverageItemsPerSecond
  - EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.CountSinceLastMeasurement
  - EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.From
  - EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.InFlightMessages
  - EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.ObservedMeasurements
  - EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.TotalItems
  - EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.Username
  langs:
  - csharp
  - vb
  name: MonitoringMessage.ConnectionInfo
  nameWithType: MonitoringMessage.ConnectionInfo
  fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ConnectionInfo
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 118
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class ConnectionInfo : object'
    content.vb: >-
      Public Class ConnectionInfo
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.From
  commentId: P:EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.From
  id: From
  parent: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo
  langs:
  - csharp
  - vb
  name: From
  nameWithType: MonitoringMessage.ConnectionInfo.From
  fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.From
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: From
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 120
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string From { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property From As String
  overload: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.From*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.Username
  commentId: P:EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.Username
  id: Username
  parent: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: MonitoringMessage.ConnectionInfo.Username
  fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.Username
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Username
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 121
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string Username { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Username As String
  overload: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.Username*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.AverageItemsPerSecond
  commentId: P:EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.AverageItemsPerSecond
  id: AverageItemsPerSecond
  parent: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo
  langs:
  - csharp
  - vb
  name: AverageItemsPerSecond
  nameWithType: MonitoringMessage.ConnectionInfo.AverageItemsPerSecond
  fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.AverageItemsPerSecond
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: AverageItemsPerSecond
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 122
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int AverageItemsPerSecond { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AverageItemsPerSecond As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.AverageItemsPerSecond*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.TotalItems
  commentId: P:EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.TotalItems
  id: TotalItems
  parent: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo
  langs:
  - csharp
  - vb
  name: TotalItems
  nameWithType: MonitoringMessage.ConnectionInfo.TotalItems
  fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.TotalItems
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: TotalItems
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 123
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long TotalItems { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property TotalItems As Long
  overload: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.TotalItems*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.CountSinceLastMeasurement
  commentId: P:EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.CountSinceLastMeasurement
  id: CountSinceLastMeasurement
  parent: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo
  langs:
  - csharp
  - vb
  name: CountSinceLastMeasurement
  nameWithType: MonitoringMessage.ConnectionInfo.CountSinceLastMeasurement
  fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.CountSinceLastMeasurement
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CountSinceLastMeasurement
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 124
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long CountSinceLastMeasurement { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property CountSinceLastMeasurement As Long
  overload: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.CountSinceLastMeasurement*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.ObservedMeasurements
  commentId: P:EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.ObservedMeasurements
  id: ObservedMeasurements
  parent: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo
  langs:
  - csharp
  - vb
  name: ObservedMeasurements
  nameWithType: MonitoringMessage.ConnectionInfo.ObservedMeasurements
  fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.ObservedMeasurements
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ObservedMeasurements
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 125
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public List<Measurement> ObservedMeasurements { get; set; }
    parameters: []
    return:
      type: List{EventStore.Core.Services.PersistentSubscription.Measurement}
    content.vb: Public Property ObservedMeasurements As List(Of Measurement)
  overload: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.ObservedMeasurements*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.AvailableSlots
  commentId: P:EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.AvailableSlots
  id: AvailableSlots
  parent: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo
  langs:
  - csharp
  - vb
  name: AvailableSlots
  nameWithType: MonitoringMessage.ConnectionInfo.AvailableSlots
  fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.AvailableSlots
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: AvailableSlots
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 126
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int AvailableSlots { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AvailableSlots As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.AvailableSlots*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.InFlightMessages
  commentId: P:EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.InFlightMessages
  id: InFlightMessages
  parent: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo
  langs:
  - csharp
  - vb
  name: InFlightMessages
  nameWithType: MonitoringMessage.ConnectionInfo.InFlightMessages
  fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.InFlightMessages
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/MonitoringMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: InFlightMessages
    path: ../EventStore/src/EventStore.Core/Messages/MonitoringMessage.cs
    startLine: 127
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int InFlightMessages { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property InFlightMessages As Integer
  overload: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.InFlightMessages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<MonitoringMessage.ConnectionInfo>()
  nameWithType: ProtobufExtensions.Serialize<MonitoringMessage.ConnectionInfo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.MonitoringMessage.ConnectionInfo>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of MonitoringMessage.ConnectionInfo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.MonitoringMessage.ConnectionInfo)()
  name.vb: Serialize(Of MonitoringMessage.ConnectionInfo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<MonitoringMessage.ConnectionInfo>
    nameWithType: ProtobufExtensions.Serialize<MonitoringMessage.ConnectionInfo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.MonitoringMessage.ConnectionInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of MonitoringMessage.ConnectionInfo)
    nameWithType: ProtobufExtensions.Serialize(Of MonitoringMessage.ConnectionInfo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.MonitoringMessage.ConnectionInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<MonitoringMessage.ConnectionInfo>()
  nameWithType: ProtobufExtensions.SerializeToArray<MonitoringMessage.ConnectionInfo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.MonitoringMessage.ConnectionInfo>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of MonitoringMessage.ConnectionInfo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.MonitoringMessage.ConnectionInfo)()
  name.vb: SerializeToArray(Of MonitoringMessage.ConnectionInfo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<MonitoringMessage.ConnectionInfo>
    nameWithType: ProtobufExtensions.SerializeToArray<MonitoringMessage.ConnectionInfo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.MonitoringMessage.ConnectionInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of MonitoringMessage.ConnectionInfo)
    nameWithType: ProtobufExtensions.SerializeToArray(Of MonitoringMessage.ConnectionInfo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.MonitoringMessage.ConnectionInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.From*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.From
  name: From
  nameWithType: MonitoringMessage.ConnectionInfo.From
  fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.From
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.Username*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.Username
  name: Username
  nameWithType: MonitoringMessage.ConnectionInfo.Username
  fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.Username
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.AverageItemsPerSecond*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.AverageItemsPerSecond
  name: AverageItemsPerSecond
  nameWithType: MonitoringMessage.ConnectionInfo.AverageItemsPerSecond
  fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.AverageItemsPerSecond
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.TotalItems*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.TotalItems
  name: TotalItems
  nameWithType: MonitoringMessage.ConnectionInfo.TotalItems
  fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.TotalItems
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.CountSinceLastMeasurement*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.CountSinceLastMeasurement
  name: CountSinceLastMeasurement
  nameWithType: MonitoringMessage.ConnectionInfo.CountSinceLastMeasurement
  fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.CountSinceLastMeasurement
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.ObservedMeasurements*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.ObservedMeasurements
  name: ObservedMeasurements
  nameWithType: MonitoringMessage.ConnectionInfo.ObservedMeasurements
  fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.ObservedMeasurements
- uid: List{EventStore.Core.Services.PersistentSubscription.Measurement}
  commentId: '!:List{EventStore.Core.Services.PersistentSubscription.Measurement}'
  definition: List`1
  name: List<Measurement>
  nameWithType: List<Measurement>
  fullName: List<EventStore.Core.Services.PersistentSubscription.Measurement>
  nameWithType.vb: List(Of Measurement)
  fullName.vb: List(Of EventStore.Core.Services.PersistentSubscription.Measurement)
  name.vb: List(Of Measurement)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Services.PersistentSubscription.Measurement
    name: Measurement
    nameWithType: Measurement
    fullName: EventStore.Core.Services.PersistentSubscription.Measurement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Services.PersistentSubscription.Measurement
    name: Measurement
    nameWithType: Measurement
    fullName: EventStore.Core.Services.PersistentSubscription.Measurement
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.AvailableSlots*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.AvailableSlots
  name: AvailableSlots
  nameWithType: MonitoringMessage.ConnectionInfo.AvailableSlots
  fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.AvailableSlots
- uid: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.InFlightMessages*
  commentId: Overload:EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.InFlightMessages
  name: InFlightMessages
  nameWithType: MonitoringMessage.ConnectionInfo.InFlightMessages
  fullName: EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.InFlightMessages

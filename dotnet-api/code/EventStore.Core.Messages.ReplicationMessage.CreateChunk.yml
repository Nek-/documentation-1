### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk
  commentId: T:EventStore.Core.Messages.ReplicationMessage.CreateChunk
  id: ReplicationMessage.CreateChunk
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.ReplicationMessage.CreateChunk.#ctor(System.Guid,System.Guid,EventStore.Core.TransactionLog.Chunks.ChunkHeader,System.Int32,System.Boolean)
  - EventStore.Core.Messages.ReplicationMessage.CreateChunk.ChunkHeader
  - EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId
  - EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId
  - EventStore.Core.Messages.ReplicationMessage.CreateChunk.FileSize
  - EventStore.Core.Messages.ReplicationMessage.CreateChunk.IsCompletedChunk
  - EventStore.Core.Messages.ReplicationMessage.CreateChunk.MasterId
  - EventStore.Core.Messages.ReplicationMessage.CreateChunk.MsgTypeId
  - EventStore.Core.Messages.ReplicationMessage.CreateChunk.SubscriptionId
  - EventStore.Core.Messages.ReplicationMessage.CreateChunk.ToString
  langs:
  - csharp
  - vb
  name: ReplicationMessage.CreateChunk
  nameWithType: ReplicationMessage.CreateChunk
  fullName: EventStore.Core.Messages.ReplicationMessage.CreateChunk
  type: Class
  source:
    id: CreateChunk
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 308
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class CreateChunk : Message, ReplicationMessage.IReplicationMessage'
    content.vb: >-
      Public Class CreateChunk
          Inherits Message
          Implements ReplicationMessage.IReplicationMessage
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  implements:
  - EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk.MsgTypeId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.CreateChunk.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Messages.ReplicationMessage.CreateChunk
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: ReplicationMessage.CreateChunk.MsgTypeId
  fullName: EventStore.Core.Messages.ReplicationMessage.CreateChunk.MsgTypeId
  type: Property
  source:
    id: MsgTypeId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 311
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messaging.Message.MsgTypeId
  overload: EventStore.Core.Messages.ReplicationMessage.CreateChunk.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId
  id: EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId
  isEii: true
  parent: EventStore.Core.Messages.ReplicationMessage.CreateChunk
  langs:
  - csharp
  - vb
  name: ReplicationMessage.IReplicationMessage.MasterId
  nameWithType: ReplicationMessage.CreateChunk.ReplicationMessage.IReplicationMessage.MasterId
  fullName: EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  type: Property
  source:
    id: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 315
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: Guid ReplicationMessage.IReplicationMessage.MasterId { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: ReadOnly WriteOnly Property EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId As Guid Implements ReplicationMessage.IReplicationMessage.MasterId
  overload: EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId*
  implements:
  - EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  nameWithType.vb: ReplicationMessage.CreateChunk.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId
  id: EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId
  isEii: true
  parent: EventStore.Core.Messages.ReplicationMessage.CreateChunk
  langs:
  - csharp
  - vb
  name: ReplicationMessage.IReplicationMessage.SubscriptionId
  nameWithType: ReplicationMessage.CreateChunk.ReplicationMessage.IReplicationMessage.SubscriptionId
  fullName: EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  type: Property
  source:
    id: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 319
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: Guid ReplicationMessage.IReplicationMessage.SubscriptionId { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: ReadOnly WriteOnly Property EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId As Guid Implements ReplicationMessage.IReplicationMessage.SubscriptionId
  overload: EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId*
  implements:
  - EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  nameWithType.vb: ReplicationMessage.CreateChunk.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk.MasterId
  commentId: F:EventStore.Core.Messages.ReplicationMessage.CreateChunk.MasterId
  id: MasterId
  parent: EventStore.Core.Messages.ReplicationMessage.CreateChunk
  langs:
  - csharp
  - vb
  name: MasterId
  nameWithType: ReplicationMessage.CreateChunk.MasterId
  fullName: EventStore.Core.Messages.ReplicationMessage.CreateChunk.MasterId
  type: Field
  source:
    id: MasterId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 323
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Guid MasterId
    return:
      type: System.Guid
    content.vb: Public ReadOnly MasterId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk.SubscriptionId
  commentId: F:EventStore.Core.Messages.ReplicationMessage.CreateChunk.SubscriptionId
  id: SubscriptionId
  parent: EventStore.Core.Messages.ReplicationMessage.CreateChunk
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: ReplicationMessage.CreateChunk.SubscriptionId
  fullName: EventStore.Core.Messages.ReplicationMessage.CreateChunk.SubscriptionId
  type: Field
  source:
    id: SubscriptionId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 324
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Guid SubscriptionId
    return:
      type: System.Guid
    content.vb: Public ReadOnly SubscriptionId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk.ChunkHeader
  commentId: F:EventStore.Core.Messages.ReplicationMessage.CreateChunk.ChunkHeader
  id: ChunkHeader
  parent: EventStore.Core.Messages.ReplicationMessage.CreateChunk
  langs:
  - csharp
  - vb
  name: ChunkHeader
  nameWithType: ReplicationMessage.CreateChunk.ChunkHeader
  fullName: EventStore.Core.Messages.ReplicationMessage.CreateChunk.ChunkHeader
  type: Field
  source:
    id: ChunkHeader
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 326
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly ChunkHeader ChunkHeader
    return:
      type: EventStore.Core.TransactionLog.Chunks.ChunkHeader
    content.vb: Public ReadOnly ChunkHeader As ChunkHeader
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk.FileSize
  commentId: F:EventStore.Core.Messages.ReplicationMessage.CreateChunk.FileSize
  id: FileSize
  parent: EventStore.Core.Messages.ReplicationMessage.CreateChunk
  langs:
  - csharp
  - vb
  name: FileSize
  nameWithType: ReplicationMessage.CreateChunk.FileSize
  fullName: EventStore.Core.Messages.ReplicationMessage.CreateChunk.FileSize
  type: Field
  source:
    id: FileSize
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 327
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly int FileSize
    return:
      type: System.Int32
    content.vb: Public ReadOnly FileSize As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk.IsCompletedChunk
  commentId: F:EventStore.Core.Messages.ReplicationMessage.CreateChunk.IsCompletedChunk
  id: IsCompletedChunk
  parent: EventStore.Core.Messages.ReplicationMessage.CreateChunk
  langs:
  - csharp
  - vb
  name: IsCompletedChunk
  nameWithType: ReplicationMessage.CreateChunk.IsCompletedChunk
  fullName: EventStore.Core.Messages.ReplicationMessage.CreateChunk.IsCompletedChunk
  type: Field
  source:
    id: IsCompletedChunk
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 328
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public bool IsCompletedChunk
    return:
      type: System.Boolean
    content.vb: Public IsCompletedChunk As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk.#ctor(System.Guid,System.Guid,EventStore.Core.TransactionLog.Chunks.ChunkHeader,System.Int32,System.Boolean)
  commentId: M:EventStore.Core.Messages.ReplicationMessage.CreateChunk.#ctor(System.Guid,System.Guid,EventStore.Core.TransactionLog.Chunks.ChunkHeader,System.Int32,System.Boolean)
  id: '#ctor(System.Guid,System.Guid,EventStore.Core.TransactionLog.Chunks.ChunkHeader,System.Int32,System.Boolean)'
  parent: EventStore.Core.Messages.ReplicationMessage.CreateChunk
  langs:
  - csharp
  - vb
  name: CreateChunk(Guid, Guid, ChunkHeader, Int32, Boolean)
  nameWithType: ReplicationMessage.CreateChunk.CreateChunk(Guid, Guid, ChunkHeader, Int32, Boolean)
  fullName: EventStore.Core.Messages.ReplicationMessage.CreateChunk.CreateChunk(System.Guid, System.Guid, EventStore.Core.TransactionLog.Chunks.ChunkHeader, System.Int32, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 330
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public CreateChunk(Guid masterId, Guid subscriptionId, ChunkHeader chunkHeader, int fileSize, bool isCompletedChunk)
    parameters:
    - id: masterId
      type: System.Guid
    - id: subscriptionId
      type: System.Guid
    - id: chunkHeader
      type: EventStore.Core.TransactionLog.Chunks.ChunkHeader
    - id: fileSize
      type: System.Int32
    - id: isCompletedChunk
      type: System.Boolean
    content.vb: Public Sub New(masterId As Guid, subscriptionId As Guid, chunkHeader As ChunkHeader, fileSize As Integer, isCompletedChunk As Boolean)
  overload: EventStore.Core.Messages.ReplicationMessage.CreateChunk.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk.ToString
  commentId: M:EventStore.Core.Messages.ReplicationMessage.CreateChunk.ToString
  id: ToString
  parent: EventStore.Core.Messages.ReplicationMessage.CreateChunk
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ReplicationMessage.CreateChunk.ToString()
  fullName: EventStore.Core.Messages.ReplicationMessage.CreateChunk.ToString()
  type: Method
  source:
    id: ToString
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 343
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: EventStore.Core.Messages.ReplicationMessage.CreateChunk.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
  commentId: T:EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
  parent: EventStore.Core.Messages
  name: ReplicationMessage.IReplicationMessage
  nameWithType: ReplicationMessage.IReplicationMessage
  fullName: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ReplicationMessage.CreateChunk>()
  nameWithType: ProtobufExtensions.Serialize<ReplicationMessage.CreateChunk>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ReplicationMessage.CreateChunk>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ReplicationMessage.CreateChunk)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ReplicationMessage.CreateChunk)()
  name.vb: Serialize(Of ReplicationMessage.CreateChunk)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ReplicationMessage.CreateChunk>
    nameWithType: ProtobufExtensions.Serialize<ReplicationMessage.CreateChunk>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ReplicationMessage.CreateChunk>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ReplicationMessage.CreateChunk)
    nameWithType: ProtobufExtensions.Serialize(Of ReplicationMessage.CreateChunk)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ReplicationMessage.CreateChunk)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ReplicationMessage.CreateChunk>()
  nameWithType: ProtobufExtensions.SerializeToArray<ReplicationMessage.CreateChunk>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ReplicationMessage.CreateChunk>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ReplicationMessage.CreateChunk)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ReplicationMessage.CreateChunk)()
  name.vb: SerializeToArray(Of ReplicationMessage.CreateChunk)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ReplicationMessage.CreateChunk>
    nameWithType: ProtobufExtensions.SerializeToArray<ReplicationMessage.CreateChunk>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ReplicationMessage.CreateChunk>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ReplicationMessage.CreateChunk)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ReplicationMessage.CreateChunk)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ReplicationMessage.CreateChunk)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messaging.Message.MsgTypeId
  commentId: P:EventStore.Core.Messaging.Message.MsgTypeId
  parent: EventStore.Core.Messaging.Message
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk.MsgTypeId*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.CreateChunk.MsgTypeId
  name: MsgTypeId
  nameWithType: ReplicationMessage.CreateChunk.MsgTypeId
  fullName: EventStore.Core.Messages.ReplicationMessage.CreateChunk.MsgTypeId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#MasterId
  name: ReplicationMessage.IReplicationMessage.MasterId
  nameWithType: ReplicationMessage.CreateChunk.ReplicationMessage.IReplicationMessage.MasterId
  fullName: EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  nameWithType.vb: ReplicationMessage.CreateChunk.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  name.vb: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
- uid: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
  parent: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
  name: MasterId
  nameWithType: ReplicationMessage.IReplicationMessage.MasterId
  fullName: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.MasterId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore#Core#Messages#ReplicationMessage#IReplicationMessage#SubscriptionId
  name: ReplicationMessage.IReplicationMessage.SubscriptionId
  nameWithType: ReplicationMessage.CreateChunk.ReplicationMessage.IReplicationMessage.SubscriptionId
  fullName: EventStore.Core.Messages.ReplicationMessage.CreateChunk.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  nameWithType.vb: ReplicationMessage.CreateChunk.EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  name.vb: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
- uid: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
  parent: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage
  name: SubscriptionId
  nameWithType: ReplicationMessage.IReplicationMessage.SubscriptionId
  fullName: EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.SubscriptionId
- uid: EventStore.Core.TransactionLog.Chunks.ChunkHeader
  commentId: T:EventStore.Core.TransactionLog.Chunks.ChunkHeader
  parent: EventStore.Core.TransactionLog.Chunks
  name: ChunkHeader
  nameWithType: ChunkHeader
  fullName: EventStore.Core.TransactionLog.Chunks.ChunkHeader
- uid: EventStore.Core.TransactionLog.Chunks
  commentId: N:EventStore.Core.TransactionLog.Chunks
  name: EventStore.Core.TransactionLog.Chunks
  nameWithType: EventStore.Core.TransactionLog.Chunks
  fullName: EventStore.Core.TransactionLog.Chunks
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk.#ctor*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.CreateChunk.#ctor
  name: CreateChunk
  nameWithType: ReplicationMessage.CreateChunk.CreateChunk
  fullName: EventStore.Core.Messages.ReplicationMessage.CreateChunk.CreateChunk
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ReplicationMessage.CreateChunk.ToString*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.CreateChunk.ToString
  name: ToString
  nameWithType: ReplicationMessage.CreateChunk.ToString
  fullName: EventStore.Core.Messages.ReplicationMessage.CreateChunk.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest
  commentId: T:EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest
  id: ReplicationMessage.ReplicaSubscriptionRequest
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.#ctor(System.Guid,EventStore.Core.Messaging.IEnvelope,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,System.Int64,System.Guid,EventStore.Core.Data.Epoch[],System.Net.IPEndPoint,System.Guid,System.Guid,System.Boolean)
  - EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.ChunkId
  - EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.Connection
  - EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.CorrelationId
  - EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.Envelope
  - EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.IsPromotable
  - EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.LastEpochs
  - EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.LogPosition
  - EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.MasterId
  - EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.MsgTypeId
  - EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.ReplicaEndPoint
  - EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.SubscriptionId
  langs:
  - csharp
  - vb
  name: ReplicationMessage.ReplicaSubscriptionRequest
  nameWithType: ReplicationMessage.ReplicaSubscriptionRequest
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest
  type: Class
  source:
    id: ReplicaSubscriptionRequest
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 81
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class ReplicaSubscriptionRequest : Message'
    content.vb: >-
      Public Class ReplicaSubscriptionRequest
          Inherits Message
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.MsgTypeId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: ReplicationMessage.ReplicaSubscriptionRequest.MsgTypeId
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.MsgTypeId
  type: Property
  source:
    id: MsgTypeId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 84
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messaging.Message.MsgTypeId
  overload: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.CorrelationId
  commentId: F:EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.CorrelationId
  id: CorrelationId
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: ReplicationMessage.ReplicaSubscriptionRequest.CorrelationId
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.CorrelationId
  type: Field
  source:
    id: CorrelationId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 88
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Guid CorrelationId
    return:
      type: System.Guid
    content.vb: Public ReadOnly CorrelationId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.Envelope
  commentId: F:EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.Envelope
  id: Envelope
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest
  langs:
  - csharp
  - vb
  name: Envelope
  nameWithType: ReplicationMessage.ReplicaSubscriptionRequest.Envelope
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.Envelope
  type: Field
  source:
    id: Envelope
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 89
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly IEnvelope Envelope
    return:
      type: EventStore.Core.Messaging.IEnvelope
    content.vb: Public ReadOnly Envelope As IEnvelope
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.Connection
  commentId: F:EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.Connection
  id: Connection
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: ReplicationMessage.ReplicaSubscriptionRequest.Connection
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.Connection
  type: Field
  source:
    id: Connection
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 90
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly TcpConnectionManager Connection
    return:
      type: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
    content.vb: Public ReadOnly Connection As TcpConnectionManager
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.LogPosition
  commentId: F:EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.LogPosition
  id: LogPosition
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest
  langs:
  - csharp
  - vb
  name: LogPosition
  nameWithType: ReplicationMessage.ReplicaSubscriptionRequest.LogPosition
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.LogPosition
  type: Field
  source:
    id: LogPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 92
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly long LogPosition
    return:
      type: System.Int64
    content.vb: Public ReadOnly LogPosition As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.ChunkId
  commentId: F:EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.ChunkId
  id: ChunkId
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest
  langs:
  - csharp
  - vb
  name: ChunkId
  nameWithType: ReplicationMessage.ReplicaSubscriptionRequest.ChunkId
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.ChunkId
  type: Field
  source:
    id: ChunkId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 93
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Guid ChunkId
    return:
      type: System.Guid
    content.vb: Public ReadOnly ChunkId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.LastEpochs
  commentId: F:EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.LastEpochs
  id: LastEpochs
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest
  langs:
  - csharp
  - vb
  name: LastEpochs
  nameWithType: ReplicationMessage.ReplicaSubscriptionRequest.LastEpochs
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.LastEpochs
  type: Field
  source:
    id: LastEpochs
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 94
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Epoch[] LastEpochs
    return:
      type: EventStore.Core.Data.Epoch[]
    content.vb: Public ReadOnly LastEpochs As Epoch()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.ReplicaEndPoint
  commentId: F:EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.ReplicaEndPoint
  id: ReplicaEndPoint
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest
  langs:
  - csharp
  - vb
  name: ReplicaEndPoint
  nameWithType: ReplicationMessage.ReplicaSubscriptionRequest.ReplicaEndPoint
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.ReplicaEndPoint
  type: Field
  source:
    id: ReplicaEndPoint
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 95
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly IPEndPoint ReplicaEndPoint
    return:
      type: System.Net.IPEndPoint
    content.vb: Public ReadOnly ReplicaEndPoint As IPEndPoint
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.MasterId
  commentId: F:EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.MasterId
  id: MasterId
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest
  langs:
  - csharp
  - vb
  name: MasterId
  nameWithType: ReplicationMessage.ReplicaSubscriptionRequest.MasterId
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.MasterId
  type: Field
  source:
    id: MasterId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 96
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Guid MasterId
    return:
      type: System.Guid
    content.vb: Public ReadOnly MasterId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.SubscriptionId
  commentId: F:EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.SubscriptionId
  id: SubscriptionId
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: ReplicationMessage.ReplicaSubscriptionRequest.SubscriptionId
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.SubscriptionId
  type: Field
  source:
    id: SubscriptionId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 97
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Guid SubscriptionId
    return:
      type: System.Guid
    content.vb: Public ReadOnly SubscriptionId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.IsPromotable
  commentId: F:EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.IsPromotable
  id: IsPromotable
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest
  langs:
  - csharp
  - vb
  name: IsPromotable
  nameWithType: ReplicationMessage.ReplicaSubscriptionRequest.IsPromotable
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.IsPromotable
  type: Field
  source:
    id: IsPromotable
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 98
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly bool IsPromotable
    return:
      type: System.Boolean
    content.vb: Public ReadOnly IsPromotable As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.#ctor(System.Guid,EventStore.Core.Messaging.IEnvelope,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,System.Int64,System.Guid,EventStore.Core.Data.Epoch[],System.Net.IPEndPoint,System.Guid,System.Guid,System.Boolean)
  commentId: M:EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.#ctor(System.Guid,EventStore.Core.Messaging.IEnvelope,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,System.Int64,System.Guid,EventStore.Core.Data.Epoch[],System.Net.IPEndPoint,System.Guid,System.Guid,System.Boolean)
  id: '#ctor(System.Guid,EventStore.Core.Messaging.IEnvelope,EventStore.Core.Services.Transport.Tcp.TcpConnectionManager,System.Int64,System.Guid,EventStore.Core.Data.Epoch[],System.Net.IPEndPoint,System.Guid,System.Guid,System.Boolean)'
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest
  langs:
  - csharp
  - vb
  name: ReplicaSubscriptionRequest(Guid, IEnvelope, TcpConnectionManager, Int64, Guid, Epoch[], IPEndPoint, Guid, Guid, Boolean)
  nameWithType: ReplicationMessage.ReplicaSubscriptionRequest.ReplicaSubscriptionRequest(Guid, IEnvelope, TcpConnectionManager, Int64, Guid, Epoch[], IPEndPoint, Guid, Guid, Boolean)
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.ReplicaSubscriptionRequest(System.Guid, EventStore.Core.Messaging.IEnvelope, EventStore.Core.Services.Transport.Tcp.TcpConnectionManager, System.Int64, System.Guid, EventStore.Core.Data.Epoch[], System.Net.IPEndPoint, System.Guid, System.Guid, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 100
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public ReplicaSubscriptionRequest(Guid correlationId, IEnvelope envelope, TcpConnectionManager connection, long logPosition, Guid chunkId, Epoch[] lastEpochs, IPEndPoint replicaEndPoint, Guid masterId, Guid subscriptionId, bool isPromotable)
    parameters:
    - id: correlationId
      type: System.Guid
    - id: envelope
      type: EventStore.Core.Messaging.IEnvelope
    - id: connection
      type: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
    - id: logPosition
      type: System.Int64
    - id: chunkId
      type: System.Guid
    - id: lastEpochs
      type: EventStore.Core.Data.Epoch[]
    - id: replicaEndPoint
      type: System.Net.IPEndPoint
    - id: masterId
      type: System.Guid
    - id: subscriptionId
      type: System.Guid
    - id: isPromotable
      type: System.Boolean
    content.vb: Public Sub New(correlationId As Guid, envelope As IEnvelope, connection As TcpConnectionManager, logPosition As Long, chunkId As Guid, lastEpochs As Epoch(), replicaEndPoint As IPEndPoint, masterId As Guid, subscriptionId As Guid, isPromotable As Boolean)
  overload: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.#ctor*
  nameWithType.vb: ReplicationMessage.ReplicaSubscriptionRequest.ReplicaSubscriptionRequest(Guid, IEnvelope, TcpConnectionManager, Int64, Guid, Epoch(), IPEndPoint, Guid, Guid, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.ReplicaSubscriptionRequest(System.Guid, EventStore.Core.Messaging.IEnvelope, EventStore.Core.Services.Transport.Tcp.TcpConnectionManager, System.Int64, System.Guid, EventStore.Core.Data.Epoch(), System.Net.IPEndPoint, System.Guid, System.Guid, System.Boolean)
  name.vb: ReplicaSubscriptionRequest(Guid, IEnvelope, TcpConnectionManager, Int64, Guid, Epoch(), IPEndPoint, Guid, Guid, Boolean)
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ReplicationMessage.ReplicaSubscriptionRequest>()
  nameWithType: ProtobufExtensions.Serialize<ReplicationMessage.ReplicaSubscriptionRequest>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ReplicationMessage.ReplicaSubscriptionRequest)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest)()
  name.vb: Serialize(Of ReplicationMessage.ReplicaSubscriptionRequest)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ReplicationMessage.ReplicaSubscriptionRequest>
    nameWithType: ProtobufExtensions.Serialize<ReplicationMessage.ReplicaSubscriptionRequest>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ReplicationMessage.ReplicaSubscriptionRequest)
    nameWithType: ProtobufExtensions.Serialize(Of ReplicationMessage.ReplicaSubscriptionRequest)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ReplicationMessage.ReplicaSubscriptionRequest>()
  nameWithType: ProtobufExtensions.SerializeToArray<ReplicationMessage.ReplicaSubscriptionRequest>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ReplicationMessage.ReplicaSubscriptionRequest)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest)()
  name.vb: SerializeToArray(Of ReplicationMessage.ReplicaSubscriptionRequest)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ReplicationMessage.ReplicaSubscriptionRequest>
    nameWithType: ProtobufExtensions.SerializeToArray<ReplicationMessage.ReplicaSubscriptionRequest>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ReplicationMessage.ReplicaSubscriptionRequest)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ReplicationMessage.ReplicaSubscriptionRequest)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messaging.Message.MsgTypeId
  commentId: P:EventStore.Core.Messaging.Message.MsgTypeId
  parent: EventStore.Core.Messaging.Message
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.MsgTypeId*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.MsgTypeId
  name: MsgTypeId
  nameWithType: ReplicationMessage.ReplicaSubscriptionRequest.MsgTypeId
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.MsgTypeId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: EventStore.Core.Messaging.IEnvelope
  commentId: T:EventStore.Core.Messaging.IEnvelope
  parent: EventStore.Core.Messaging
  name: IEnvelope
  nameWithType: IEnvelope
  fullName: EventStore.Core.Messaging.IEnvelope
- uid: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
  commentId: T:EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
  parent: EventStore.Core.Services.Transport.Tcp
  name: TcpConnectionManager
  nameWithType: TcpConnectionManager
  fullName: EventStore.Core.Services.Transport.Tcp.TcpConnectionManager
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Data.Epoch[]
  isExternal: true
  name: Epoch[]
  nameWithType: Epoch[]
  fullName: EventStore.Core.Data.Epoch[]
  nameWithType.vb: Epoch()
  fullName.vb: EventStore.Core.Data.Epoch()
  name.vb: Epoch()
  spec.csharp:
  - uid: EventStore.Core.Data.Epoch
    name: Epoch
    nameWithType: Epoch
    fullName: EventStore.Core.Data.Epoch
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Data.Epoch
    name: Epoch
    nameWithType: Epoch
    fullName: EventStore.Core.Data.Epoch
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Net.IPEndPoint
  commentId: T:System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.#ctor*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.#ctor
  name: ReplicaSubscriptionRequest
  nameWithType: ReplicationMessage.ReplicaSubscriptionRequest.ReplicaSubscriptionRequest
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.ReplicaSubscriptionRequest

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats
  commentId: T:EventStore.Core.Messages.ReplicationMessage.ReplicationStats
  id: ReplicationMessage.ReplicationStats
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.ReplicationMessage.ReplicationStats.#ctor(Guid,Guid,System.String,System.Int32,System.Int64,System.Int64,System.Int32,System.Int32)
  - EventStore.Core.Messages.ReplicationMessage.ReplicationStats.ConnectionId
  - EventStore.Core.Messages.ReplicationMessage.ReplicationStats.PendingReceivedBytes
  - EventStore.Core.Messages.ReplicationMessage.ReplicationStats.PendingSendBytes
  - EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SendQueueSize
  - EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SubscriptionEndpoint
  - EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SubscriptionId
  - EventStore.Core.Messages.ReplicationMessage.ReplicationStats.TotalBytesReceived
  - EventStore.Core.Messages.ReplicationMessage.ReplicationStats.TotalBytesSent
  langs:
  - csharp
  - vb
  name: ReplicationMessage.ReplicationStats
  nameWithType: ReplicationMessage.ReplicationStats
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ReplicationStats
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 427
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class ReplicationStats : object'
    content.vb: >-
      Public Class ReplicationStats
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.ReplicationMessage.ReplicationStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.ReplicationMessage.ReplicationStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SubscriptionId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SubscriptionId
  id: SubscriptionId
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicationStats
  langs:
  - csharp
  - vb
  name: SubscriptionId
  nameWithType: ReplicationMessage.ReplicationStats.SubscriptionId
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SubscriptionId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SubscriptionId
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 429
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public Guid SubscriptionId { get; }
    parameters: []
    return:
      type: Guid
    content.vb: Public ReadOnly Property SubscriptionId As Guid
  overload: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SubscriptionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.ConnectionId
  commentId: P:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.ConnectionId
  id: ConnectionId
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicationStats
  langs:
  - csharp
  - vb
  name: ConnectionId
  nameWithType: ReplicationMessage.ReplicationStats.ConnectionId
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.ConnectionId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ConnectionId
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 430
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public Guid ConnectionId { get; }
    parameters: []
    return:
      type: Guid
    content.vb: Public ReadOnly Property ConnectionId As Guid
  overload: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.ConnectionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SubscriptionEndpoint
  commentId: P:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SubscriptionEndpoint
  id: SubscriptionEndpoint
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicationStats
  langs:
  - csharp
  - vb
  name: SubscriptionEndpoint
  nameWithType: ReplicationMessage.ReplicationStats.SubscriptionEndpoint
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SubscriptionEndpoint
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SubscriptionEndpoint
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 431
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public string SubscriptionEndpoint { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SubscriptionEndpoint As String
  overload: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SubscriptionEndpoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.TotalBytesSent
  commentId: P:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.TotalBytesSent
  id: TotalBytesSent
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicationStats
  langs:
  - csharp
  - vb
  name: TotalBytesSent
  nameWithType: ReplicationMessage.ReplicationStats.TotalBytesSent
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.TotalBytesSent
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: TotalBytesSent
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 432
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long TotalBytesSent { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property TotalBytesSent As Long
  overload: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.TotalBytesSent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.TotalBytesReceived
  commentId: P:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.TotalBytesReceived
  id: TotalBytesReceived
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicationStats
  langs:
  - csharp
  - vb
  name: TotalBytesReceived
  nameWithType: ReplicationMessage.ReplicationStats.TotalBytesReceived
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.TotalBytesReceived
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: TotalBytesReceived
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 433
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long TotalBytesReceived { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property TotalBytesReceived As Long
  overload: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.TotalBytesReceived*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.PendingSendBytes
  commentId: P:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.PendingSendBytes
  id: PendingSendBytes
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicationStats
  langs:
  - csharp
  - vb
  name: PendingSendBytes
  nameWithType: ReplicationMessage.ReplicationStats.PendingSendBytes
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.PendingSendBytes
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: PendingSendBytes
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 434
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int PendingSendBytes { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PendingSendBytes As Integer
  overload: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.PendingSendBytes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.PendingReceivedBytes
  commentId: P:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.PendingReceivedBytes
  id: PendingReceivedBytes
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicationStats
  langs:
  - csharp
  - vb
  name: PendingReceivedBytes
  nameWithType: ReplicationMessage.ReplicationStats.PendingReceivedBytes
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.PendingReceivedBytes
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: PendingReceivedBytes
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 435
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int PendingReceivedBytes { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PendingReceivedBytes As Integer
  overload: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.PendingReceivedBytes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SendQueueSize
  commentId: P:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SendQueueSize
  id: SendQueueSize
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicationStats
  langs:
  - csharp
  - vb
  name: SendQueueSize
  nameWithType: ReplicationMessage.ReplicationStats.SendQueueSize
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SendQueueSize
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: SendQueueSize
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 436
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int SendQueueSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SendQueueSize As Integer
  overload: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SendQueueSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.#ctor(Guid,Guid,System.String,System.Int32,System.Int64,System.Int64,System.Int32,System.Int32)
  commentId: M:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.#ctor(Guid,Guid,System.String,System.Int32,System.Int64,System.Int64,System.Int32,System.Int32)
  id: '#ctor(Guid,Guid,System.String,System.Int32,System.Int64,System.Int64,System.Int32,System.Int32)'
  parent: EventStore.Core.Messages.ReplicationMessage.ReplicationStats
  langs:
  - csharp
  - vb
  name: ReplicationStats(Guid, Guid, String, Int32, Int64, Int64, Int32, Int32)
  nameWithType: ReplicationMessage.ReplicationStats.ReplicationStats(Guid, Guid, String, Int32, Int64, Int64, Int32, Int32)
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.ReplicationStats(Guid, Guid, System.String, System.Int32, System.Int64, System.Int64, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessage.cs
    startLine: 438
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public ReplicationStats(Guid subscriptionId, Guid connectionId, string subscriptionEndpoint, int sendQueueSize, long totalBytesSent, long totalBytesReceived, int pendingSendBytes, int pendingReceivedBytes)
    parameters:
    - id: subscriptionId
      type: Guid
    - id: connectionId
      type: Guid
    - id: subscriptionEndpoint
      type: System.String
    - id: sendQueueSize
      type: System.Int32
    - id: totalBytesSent
      type: System.Int64
    - id: totalBytesReceived
      type: System.Int64
    - id: pendingSendBytes
      type: System.Int32
    - id: pendingReceivedBytes
      type: System.Int32
    content.vb: Public Sub New(subscriptionId As Guid, connectionId As Guid, subscriptionEndpoint As String, sendQueueSize As Integer, totalBytesSent As Long, totalBytesReceived As Long, pendingSendBytes As Integer, pendingReceivedBytes As Integer)
  overload: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ReplicationMessage.ReplicationStats>()
  nameWithType: ProtobufExtensions.Serialize<ReplicationMessage.ReplicationStats>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ReplicationMessage.ReplicationStats>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ReplicationMessage.ReplicationStats)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ReplicationMessage.ReplicationStats)()
  name.vb: Serialize(Of ReplicationMessage.ReplicationStats)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ReplicationMessage.ReplicationStats>
    nameWithType: ProtobufExtensions.Serialize<ReplicationMessage.ReplicationStats>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ReplicationMessage.ReplicationStats>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ReplicationMessage.ReplicationStats)
    nameWithType: ProtobufExtensions.Serialize(Of ReplicationMessage.ReplicationStats)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ReplicationMessage.ReplicationStats)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ReplicationMessage.ReplicationStats>()
  nameWithType: ProtobufExtensions.SerializeToArray<ReplicationMessage.ReplicationStats>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ReplicationMessage.ReplicationStats>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ReplicationMessage.ReplicationStats)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ReplicationMessage.ReplicationStats)()
  name.vb: SerializeToArray(Of ReplicationMessage.ReplicationStats)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ReplicationMessage.ReplicationStats>
    nameWithType: ProtobufExtensions.SerializeToArray<ReplicationMessage.ReplicationStats>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ReplicationMessage.ReplicationStats>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ReplicationMessage.ReplicationStats)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ReplicationMessage.ReplicationStats)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ReplicationMessage.ReplicationStats)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SubscriptionId*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SubscriptionId
  name: SubscriptionId
  nameWithType: ReplicationMessage.ReplicationStats.SubscriptionId
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SubscriptionId
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.ConnectionId*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.ConnectionId
  name: ConnectionId
  nameWithType: ReplicationMessage.ReplicationStats.ConnectionId
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.ConnectionId
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SubscriptionEndpoint*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SubscriptionEndpoint
  name: SubscriptionEndpoint
  nameWithType: ReplicationMessage.ReplicationStats.SubscriptionEndpoint
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SubscriptionEndpoint
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.TotalBytesSent*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.TotalBytesSent
  name: TotalBytesSent
  nameWithType: ReplicationMessage.ReplicationStats.TotalBytesSent
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.TotalBytesSent
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.TotalBytesReceived*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.TotalBytesReceived
  name: TotalBytesReceived
  nameWithType: ReplicationMessage.ReplicationStats.TotalBytesReceived
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.TotalBytesReceived
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.PendingSendBytes*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.PendingSendBytes
  name: PendingSendBytes
  nameWithType: ReplicationMessage.ReplicationStats.PendingSendBytes
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.PendingSendBytes
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.PendingReceivedBytes*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.PendingReceivedBytes
  name: PendingReceivedBytes
  nameWithType: ReplicationMessage.ReplicationStats.PendingReceivedBytes
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.PendingReceivedBytes
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SendQueueSize*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SendQueueSize
  name: SendQueueSize
  nameWithType: ReplicationMessage.ReplicationStats.SendQueueSize
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.SendQueueSize
- uid: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.#ctor*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessage.ReplicationStats.#ctor
  name: ReplicationStats
  nameWithType: ReplicationMessage.ReplicationStats.ReplicationStats
  fullName: EventStore.Core.Messages.ReplicationMessage.ReplicationStats.ReplicationStats

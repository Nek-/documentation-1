### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.ReplicationMessageDto.CommitAck
  commentId: T:EventStore.Core.Messages.ReplicationMessageDto.CommitAck
  id: ReplicationMessageDto.CommitAck
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.ReplicationMessageDto.CommitAck.#ctor
  - EventStore.Core.Messages.ReplicationMessageDto.CommitAck.#ctor(System.Int64,System.Int64,System.Int64,System.Int64)
  - EventStore.Core.Messages.ReplicationMessageDto.CommitAck.FirstEventNumber
  - EventStore.Core.Messages.ReplicationMessageDto.CommitAck.LastEventNumber
  - EventStore.Core.Messages.ReplicationMessageDto.CommitAck.LogPosition
  - EventStore.Core.Messages.ReplicationMessageDto.CommitAck.TransactionPosition
  langs:
  - csharp
  - vb
  name: ReplicationMessageDto.CommitAck
  nameWithType: ReplicationMessageDto.CommitAck
  fullName: EventStore.Core.Messages.ReplicationMessageDto.CommitAck
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: CommitAck
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 20
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class CommitAck : object'
    content.vb: >-
      Public Class CommitAck
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.ReplicationMessageDto.CommitAck.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.ReplicationMessageDto.CommitAck.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.LogPosition
  commentId: P:EventStore.Core.Messages.ReplicationMessageDto.CommitAck.LogPosition
  id: LogPosition
  parent: EventStore.Core.Messages.ReplicationMessageDto.CommitAck
  langs:
  - csharp
  - vb
  name: LogPosition
  nameWithType: ReplicationMessageDto.CommitAck.LogPosition
  fullName: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.LogPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: LogPosition
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long LogPosition { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property LogPosition As Long
  overload: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.LogPosition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.TransactionPosition
  commentId: P:EventStore.Core.Messages.ReplicationMessageDto.CommitAck.TransactionPosition
  id: TransactionPosition
  parent: EventStore.Core.Messages.ReplicationMessageDto.CommitAck
  langs:
  - csharp
  - vb
  name: TransactionPosition
  nameWithType: ReplicationMessageDto.CommitAck.TransactionPosition
  fullName: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.TransactionPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: TransactionPosition
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 24
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long TransactionPosition { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property TransactionPosition As Long
  overload: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.TransactionPosition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.FirstEventNumber
  commentId: P:EventStore.Core.Messages.ReplicationMessageDto.CommitAck.FirstEventNumber
  id: FirstEventNumber
  parent: EventStore.Core.Messages.ReplicationMessageDto.CommitAck
  langs:
  - csharp
  - vb
  name: FirstEventNumber
  nameWithType: ReplicationMessageDto.CommitAck.FirstEventNumber
  fullName: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.FirstEventNumber
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: FirstEventNumber
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 26
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long FirstEventNumber { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property FirstEventNumber As Long
  overload: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.FirstEventNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.LastEventNumber
  commentId: P:EventStore.Core.Messages.ReplicationMessageDto.CommitAck.LastEventNumber
  id: LastEventNumber
  parent: EventStore.Core.Messages.ReplicationMessageDto.CommitAck
  langs:
  - csharp
  - vb
  name: LastEventNumber
  nameWithType: ReplicationMessageDto.CommitAck.LastEventNumber
  fullName: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.LastEventNumber
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: LastEventNumber
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 28
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long LastEventNumber { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property LastEventNumber As Long
  overload: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.LastEventNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.#ctor
  commentId: M:EventStore.Core.Messages.ReplicationMessageDto.CommitAck.#ctor
  id: '#ctor'
  parent: EventStore.Core.Messages.ReplicationMessageDto.CommitAck
  langs:
  - csharp
  - vb
  name: CommitAck()
  nameWithType: ReplicationMessageDto.CommitAck.CommitAck()
  fullName: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.CommitAck()
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 30
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public CommitAck()
    content.vb: Public Sub New
  overload: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.#ctor(System.Int64,System.Int64,System.Int64,System.Int64)
  commentId: M:EventStore.Core.Messages.ReplicationMessageDto.CommitAck.#ctor(System.Int64,System.Int64,System.Int64,System.Int64)
  id: '#ctor(System.Int64,System.Int64,System.Int64,System.Int64)'
  parent: EventStore.Core.Messages.ReplicationMessageDto.CommitAck
  langs:
  - csharp
  - vb
  name: CommitAck(Int64, Int64, Int64, Int64)
  nameWithType: ReplicationMessageDto.CommitAck.CommitAck(Int64, Int64, Int64, Int64)
  fullName: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.CommitAck(System.Int64, System.Int64, System.Int64, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 33
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public CommitAck(long logPosition, long transactionPosition, long firstEventNumber, long lastEventNumber)
    parameters:
    - id: logPosition
      type: System.Int64
    - id: transactionPosition
      type: System.Int64
    - id: firstEventNumber
      type: System.Int64
    - id: lastEventNumber
      type: System.Int64
    content.vb: Public Sub New(logPosition As Long, transactionPosition As Long, firstEventNumber As Long, lastEventNumber As Long)
  overload: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ReplicationMessageDto.CommitAck>()
  nameWithType: ProtobufExtensions.Serialize<ReplicationMessageDto.CommitAck>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ReplicationMessageDto.CommitAck>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ReplicationMessageDto.CommitAck)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ReplicationMessageDto.CommitAck)()
  name.vb: Serialize(Of ReplicationMessageDto.CommitAck)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ReplicationMessageDto.CommitAck>
    nameWithType: ProtobufExtensions.Serialize<ReplicationMessageDto.CommitAck>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ReplicationMessageDto.CommitAck>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ReplicationMessageDto.CommitAck)
    nameWithType: ProtobufExtensions.Serialize(Of ReplicationMessageDto.CommitAck)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ReplicationMessageDto.CommitAck)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ReplicationMessageDto.CommitAck>()
  nameWithType: ProtobufExtensions.SerializeToArray<ReplicationMessageDto.CommitAck>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ReplicationMessageDto.CommitAck>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ReplicationMessageDto.CommitAck)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ReplicationMessageDto.CommitAck)()
  name.vb: SerializeToArray(Of ReplicationMessageDto.CommitAck)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ReplicationMessageDto.CommitAck>
    nameWithType: ProtobufExtensions.SerializeToArray<ReplicationMessageDto.CommitAck>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ReplicationMessageDto.CommitAck>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ReplicationMessageDto.CommitAck)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ReplicationMessageDto.CommitAck)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ReplicationMessageDto.CommitAck)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.LogPosition*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessageDto.CommitAck.LogPosition
  name: LogPosition
  nameWithType: ReplicationMessageDto.CommitAck.LogPosition
  fullName: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.LogPosition
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.TransactionPosition*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessageDto.CommitAck.TransactionPosition
  name: TransactionPosition
  nameWithType: ReplicationMessageDto.CommitAck.TransactionPosition
  fullName: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.TransactionPosition
- uid: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.FirstEventNumber*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessageDto.CommitAck.FirstEventNumber
  name: FirstEventNumber
  nameWithType: ReplicationMessageDto.CommitAck.FirstEventNumber
  fullName: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.FirstEventNumber
- uid: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.LastEventNumber*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessageDto.CommitAck.LastEventNumber
  name: LastEventNumber
  nameWithType: ReplicationMessageDto.CommitAck.LastEventNumber
  fullName: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.LastEventNumber
- uid: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.#ctor*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessageDto.CommitAck.#ctor
  name: CommitAck
  nameWithType: ReplicationMessageDto.CommitAck.CommitAck
  fullName: EventStore.Core.Messages.ReplicationMessageDto.CommitAck.CommitAck

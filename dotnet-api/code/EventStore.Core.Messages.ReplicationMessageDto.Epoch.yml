### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.ReplicationMessageDto.Epoch
  commentId: T:EventStore.Core.Messages.ReplicationMessageDto.Epoch
  id: ReplicationMessageDto.Epoch
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.ReplicationMessageDto.Epoch.#ctor
  - EventStore.Core.Messages.ReplicationMessageDto.Epoch.#ctor(System.Int64,System.Int32,System.Byte[])
  - EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochId
  - EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochNumber
  - EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochPosition
  langs:
  - csharp
  - vb
  name: ReplicationMessageDto.Epoch
  nameWithType: ReplicationMessageDto.Epoch
  fullName: EventStore.Core.Messages.ReplicationMessageDto.Epoch
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Epoch
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 41
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class Epoch : object'
    content.vb: >-
      Public Class Epoch
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.ReplicationMessageDto.Epoch.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.ReplicationMessageDto.Epoch.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochPosition
  commentId: P:EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochPosition
  id: EpochPosition
  parent: EventStore.Core.Messages.ReplicationMessageDto.Epoch
  langs:
  - csharp
  - vb
  name: EpochPosition
  nameWithType: ReplicationMessageDto.Epoch.EpochPosition
  fullName: EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochPosition
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EpochPosition
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 43
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public long EpochPosition { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property EpochPosition As Long
  overload: EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochPosition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochNumber
  commentId: P:EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochNumber
  id: EpochNumber
  parent: EventStore.Core.Messages.ReplicationMessageDto.Epoch
  langs:
  - csharp
  - vb
  name: EpochNumber
  nameWithType: ReplicationMessageDto.Epoch.EpochNumber
  fullName: EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochNumber
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EpochNumber
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 45
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public int EpochNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property EpochNumber As Integer
  overload: EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochId
  commentId: P:EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochId
  id: EpochId
  parent: EventStore.Core.Messages.ReplicationMessageDto.Epoch
  langs:
  - csharp
  - vb
  name: EpochId
  nameWithType: ReplicationMessageDto.Epoch.EpochId
  fullName: EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: EpochId
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 47
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public byte[] EpochId { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property EpochId As Byte()
  overload: EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessageDto.Epoch.#ctor
  commentId: M:EventStore.Core.Messages.ReplicationMessageDto.Epoch.#ctor
  id: '#ctor'
  parent: EventStore.Core.Messages.ReplicationMessageDto.Epoch
  langs:
  - csharp
  - vb
  name: Epoch()
  nameWithType: ReplicationMessageDto.Epoch.Epoch()
  fullName: EventStore.Core.Messages.ReplicationMessageDto.Epoch.Epoch()
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 49
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public Epoch()
    content.vb: Public Sub New
  overload: EventStore.Core.Messages.ReplicationMessageDto.Epoch.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.ReplicationMessageDto.Epoch.#ctor(System.Int64,System.Int32,System.Byte[])
  commentId: M:EventStore.Core.Messages.ReplicationMessageDto.Epoch.#ctor(System.Int64,System.Int32,System.Byte[])
  id: '#ctor(System.Int64,System.Int32,System.Byte[])'
  parent: EventStore.Core.Messages.ReplicationMessageDto.Epoch
  langs:
  - csharp
  - vb
  name: Epoch(Int64, Int32, Byte[])
  nameWithType: ReplicationMessageDto.Epoch.Epoch(Int64, Int32, Byte[])
  fullName: EventStore.Core.Messages.ReplicationMessageDto.Epoch.Epoch(System.Int64, System.Int32, System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/ReplicationMessageDto.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/ReplicationMessageDto.cs
    startLine: 52
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public Epoch(long epochPosition, int epochNumber, byte[] epochId)
    parameters:
    - id: epochPosition
      type: System.Int64
    - id: epochNumber
      type: System.Int32
    - id: epochId
      type: System.Byte[]
    content.vb: Public Sub New(epochPosition As Long, epochNumber As Integer, epochId As Byte())
  overload: EventStore.Core.Messages.ReplicationMessageDto.Epoch.#ctor*
  nameWithType.vb: ReplicationMessageDto.Epoch.Epoch(Int64, Int32, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.ReplicationMessageDto.Epoch.Epoch(System.Int64, System.Int32, System.Byte())
  name.vb: Epoch(Int64, Int32, Byte())
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ReplicationMessageDto.Epoch.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<ReplicationMessageDto.Epoch>()
  nameWithType: ProtobufExtensions.Serialize<ReplicationMessageDto.Epoch>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ReplicationMessageDto.Epoch>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of ReplicationMessageDto.Epoch)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ReplicationMessageDto.Epoch)()
  name.vb: Serialize(Of ReplicationMessageDto.Epoch)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<ReplicationMessageDto.Epoch>
    nameWithType: ProtobufExtensions.Serialize<ReplicationMessageDto.Epoch>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.ReplicationMessageDto.Epoch>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of ReplicationMessageDto.Epoch)
    nameWithType: ProtobufExtensions.Serialize(Of ReplicationMessageDto.Epoch)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.ReplicationMessageDto.Epoch)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.ReplicationMessageDto.Epoch.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<ReplicationMessageDto.Epoch>()
  nameWithType: ProtobufExtensions.SerializeToArray<ReplicationMessageDto.Epoch>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ReplicationMessageDto.Epoch>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of ReplicationMessageDto.Epoch)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ReplicationMessageDto.Epoch)()
  name.vb: SerializeToArray(Of ReplicationMessageDto.Epoch)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<ReplicationMessageDto.Epoch>
    nameWithType: ProtobufExtensions.SerializeToArray<ReplicationMessageDto.Epoch>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.ReplicationMessageDto.Epoch>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of ReplicationMessageDto.Epoch)
    nameWithType: ProtobufExtensions.SerializeToArray(Of ReplicationMessageDto.Epoch)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.ReplicationMessageDto.Epoch)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochPosition*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochPosition
  name: EpochPosition
  nameWithType: ReplicationMessageDto.Epoch.EpochPosition
  fullName: EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochPosition
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochNumber*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochNumber
  name: EpochNumber
  nameWithType: ReplicationMessageDto.Epoch.EpochNumber
  fullName: EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochId*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochId
  name: EpochId
  nameWithType: ReplicationMessageDto.Epoch.EpochId
  fullName: EventStore.Core.Messages.ReplicationMessageDto.Epoch.EpochId
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Messages.ReplicationMessageDto.Epoch.#ctor*
  commentId: Overload:EventStore.Core.Messages.ReplicationMessageDto.Epoch.#ctor
  name: Epoch
  nameWithType: ReplicationMessageDto.Epoch.Epoch
  fullName: EventStore.Core.Messages.ReplicationMessageDto.Epoch.Epoch

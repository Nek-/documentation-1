### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.SubscriptionMessage.PollStream
  commentId: T:EventStore.Core.Messages.SubscriptionMessage.PollStream
  id: SubscriptionMessage.PollStream
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.SubscriptionMessage.PollStream.#ctor(System.String,System.Int64,System.Nullable{System.Int64},DateTime,EventStore.Core.Messaging.Message)
  - EventStore.Core.Messages.SubscriptionMessage.PollStream.ExpireAt
  - EventStore.Core.Messages.SubscriptionMessage.PollStream.LastCommitPosition
  - EventStore.Core.Messages.SubscriptionMessage.PollStream.LastEventNumber
  - EventStore.Core.Messages.SubscriptionMessage.PollStream.MsgTypeId
  - EventStore.Core.Messages.SubscriptionMessage.PollStream.OriginalRequest
  - EventStore.Core.Messages.SubscriptionMessage.PollStream.StreamId
  langs:
  - csharp
  - vb
  name: SubscriptionMessage.PollStream
  nameWithType: SubscriptionMessage.PollStream
  fullName: EventStore.Core.Messages.SubscriptionMessage.PollStream
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/SubscriptionMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: PollStream
    path: ../EventStore/src/EventStore.Core/Messages/SubscriptionMessage.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class PollStream : Message'
    content.vb: >-
      Public Class PollStream
          Inherits Message
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.SubscriptionMessage.PollStream.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.SubscriptionMessage.PollStream.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.SubscriptionMessage.PollStream.MsgTypeId
  commentId: P:EventStore.Core.Messages.SubscriptionMessage.PollStream.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Messages.SubscriptionMessage.PollStream
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: SubscriptionMessage.PollStream.MsgTypeId
  fullName: EventStore.Core.Messages.SubscriptionMessage.PollStream.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/SubscriptionMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Core/Messages/SubscriptionMessage.cs
    startLine: 8
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messaging.Message.MsgTypeId
  overload: EventStore.Core.Messages.SubscriptionMessage.PollStream.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.Messages.SubscriptionMessage.PollStream.StreamId
  commentId: F:EventStore.Core.Messages.SubscriptionMessage.PollStream.StreamId
  id: StreamId
  parent: EventStore.Core.Messages.SubscriptionMessage.PollStream
  langs:
  - csharp
  - vb
  name: StreamId
  nameWithType: SubscriptionMessage.PollStream.StreamId
  fullName: EventStore.Core.Messages.SubscriptionMessage.PollStream.StreamId
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/SubscriptionMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: StreamId
    path: ../EventStore/src/EventStore.Core/Messages/SubscriptionMessage.cs
    startLine: 12
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly string StreamId
    return:
      type: System.String
    content.vb: Public ReadOnly StreamId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.SubscriptionMessage.PollStream.LastCommitPosition
  commentId: F:EventStore.Core.Messages.SubscriptionMessage.PollStream.LastCommitPosition
  id: LastCommitPosition
  parent: EventStore.Core.Messages.SubscriptionMessage.PollStream
  langs:
  - csharp
  - vb
  name: LastCommitPosition
  nameWithType: SubscriptionMessage.PollStream.LastCommitPosition
  fullName: EventStore.Core.Messages.SubscriptionMessage.PollStream.LastCommitPosition
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/SubscriptionMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: LastCommitPosition
    path: ../EventStore/src/EventStore.Core/Messages/SubscriptionMessage.cs
    startLine: 13
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly long LastCommitPosition
    return:
      type: System.Int64
    content.vb: Public ReadOnly LastCommitPosition As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.SubscriptionMessage.PollStream.LastEventNumber
  commentId: F:EventStore.Core.Messages.SubscriptionMessage.PollStream.LastEventNumber
  id: LastEventNumber
  parent: EventStore.Core.Messages.SubscriptionMessage.PollStream
  langs:
  - csharp
  - vb
  name: LastEventNumber
  nameWithType: SubscriptionMessage.PollStream.LastEventNumber
  fullName: EventStore.Core.Messages.SubscriptionMessage.PollStream.LastEventNumber
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/SubscriptionMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: LastEventNumber
    path: ../EventStore/src/EventStore.Core/Messages/SubscriptionMessage.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly long? LastEventNumber
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public ReadOnly LastEventNumber As Long?
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.SubscriptionMessage.PollStream.ExpireAt
  commentId: F:EventStore.Core.Messages.SubscriptionMessage.PollStream.ExpireAt
  id: ExpireAt
  parent: EventStore.Core.Messages.SubscriptionMessage.PollStream
  langs:
  - csharp
  - vb
  name: ExpireAt
  nameWithType: SubscriptionMessage.PollStream.ExpireAt
  fullName: EventStore.Core.Messages.SubscriptionMessage.PollStream.ExpireAt
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/SubscriptionMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ExpireAt
    path: ../EventStore/src/EventStore.Core/Messages/SubscriptionMessage.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly DateTime ExpireAt
    return:
      type: DateTime
    content.vb: Public ReadOnly ExpireAt As DateTime
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.SubscriptionMessage.PollStream.OriginalRequest
  commentId: F:EventStore.Core.Messages.SubscriptionMessage.PollStream.OriginalRequest
  id: OriginalRequest
  parent: EventStore.Core.Messages.SubscriptionMessage.PollStream
  langs:
  - csharp
  - vb
  name: OriginalRequest
  nameWithType: SubscriptionMessage.PollStream.OriginalRequest
  fullName: EventStore.Core.Messages.SubscriptionMessage.PollStream.OriginalRequest
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/SubscriptionMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: OriginalRequest
    path: ../EventStore/src/EventStore.Core/Messages/SubscriptionMessage.cs
    startLine: 17
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly Message OriginalRequest
    return:
      type: EventStore.Core.Messaging.Message
    content.vb: Public ReadOnly OriginalRequest As Message
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.SubscriptionMessage.PollStream.#ctor(System.String,System.Int64,System.Nullable{System.Int64},DateTime,EventStore.Core.Messaging.Message)
  commentId: M:EventStore.Core.Messages.SubscriptionMessage.PollStream.#ctor(System.String,System.Int64,System.Nullable{System.Int64},DateTime,EventStore.Core.Messaging.Message)
  id: '#ctor(System.String,System.Int64,System.Nullable{System.Int64},DateTime,EventStore.Core.Messaging.Message)'
  parent: EventStore.Core.Messages.SubscriptionMessage.PollStream
  langs:
  - csharp
  - vb
  name: PollStream(String, Int64, Nullable<Int64>, DateTime, Message)
  nameWithType: SubscriptionMessage.PollStream.PollStream(String, Int64, Nullable<Int64>, DateTime, Message)
  fullName: EventStore.Core.Messages.SubscriptionMessage.PollStream.PollStream(System.String, System.Int64, System.Nullable<System.Int64>, DateTime, EventStore.Core.Messaging.Message)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/SubscriptionMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/SubscriptionMessage.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public PollStream(string streamId, long lastCommitPosition, long? lastEventNumber, DateTime expireAt, Message originalRequest)
    parameters:
    - id: streamId
      type: System.String
    - id: lastCommitPosition
      type: System.Int64
    - id: lastEventNumber
      type: System.Nullable{System.Int64}
    - id: expireAt
      type: DateTime
    - id: originalRequest
      type: EventStore.Core.Messaging.Message
    content.vb: Public Sub New(streamId As String, lastCommitPosition As Long, lastEventNumber As Long?, expireAt As DateTime, originalRequest As Message)
  overload: EventStore.Core.Messages.SubscriptionMessage.PollStream.#ctor*
  nameWithType.vb: SubscriptionMessage.PollStream.PollStream(String, Int64, Nullable(Of Int64), DateTime, Message)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.SubscriptionMessage.PollStream.PollStream(System.String, System.Int64, System.Nullable(Of System.Int64), DateTime, EventStore.Core.Messaging.Message)
  name.vb: PollStream(String, Int64, Nullable(Of Int64), DateTime, Message)
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.SubscriptionMessage.PollStream.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<SubscriptionMessage.PollStream>()
  nameWithType: ProtobufExtensions.Serialize<SubscriptionMessage.PollStream>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.SubscriptionMessage.PollStream>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of SubscriptionMessage.PollStream)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.SubscriptionMessage.PollStream)()
  name.vb: Serialize(Of SubscriptionMessage.PollStream)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<SubscriptionMessage.PollStream>
    nameWithType: ProtobufExtensions.Serialize<SubscriptionMessage.PollStream>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.SubscriptionMessage.PollStream>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of SubscriptionMessage.PollStream)
    nameWithType: ProtobufExtensions.Serialize(Of SubscriptionMessage.PollStream)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.SubscriptionMessage.PollStream)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.SubscriptionMessage.PollStream.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<SubscriptionMessage.PollStream>()
  nameWithType: ProtobufExtensions.SerializeToArray<SubscriptionMessage.PollStream>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.SubscriptionMessage.PollStream>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of SubscriptionMessage.PollStream)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.SubscriptionMessage.PollStream)()
  name.vb: SerializeToArray(Of SubscriptionMessage.PollStream)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<SubscriptionMessage.PollStream>
    nameWithType: ProtobufExtensions.SerializeToArray<SubscriptionMessage.PollStream>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.SubscriptionMessage.PollStream>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of SubscriptionMessage.PollStream)
    nameWithType: ProtobufExtensions.SerializeToArray(Of SubscriptionMessage.PollStream)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.SubscriptionMessage.PollStream)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messaging.Message.MsgTypeId
  commentId: P:EventStore.Core.Messaging.Message.MsgTypeId
  parent: EventStore.Core.Messaging.Message
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId
- uid: EventStore.Core.Messages.SubscriptionMessage.PollStream.MsgTypeId*
  commentId: Overload:EventStore.Core.Messages.SubscriptionMessage.PollStream.MsgTypeId
  name: MsgTypeId
  nameWithType: SubscriptionMessage.PollStream.MsgTypeId
  fullName: EventStore.Core.Messages.SubscriptionMessage.PollStream.MsgTypeId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Nullable{System.Int64}
  commentId: '!:System.Nullable{System.Int64}'
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: EventStore.Core.Messages.SubscriptionMessage.PollStream.#ctor*
  commentId: Overload:EventStore.Core.Messages.SubscriptionMessage.PollStream.#ctor
  name: PollStream
  nameWithType: SubscriptionMessage.PollStream.PollStream
  fullName: EventStore.Core.Messages.SubscriptionMessage.PollStream.PollStream

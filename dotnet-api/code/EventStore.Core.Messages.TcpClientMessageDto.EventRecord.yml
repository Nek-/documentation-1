### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  id: TcpClientMessageDto.EventRecord
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.TcpClientMessageDto.EventRecord.#ctor(EventStore.Core.Data.EventRecord)
  - EventStore.Core.Messages.TcpClientMessageDto.EventRecord.#ctor(EventStore.Core.Data.EventRecord,System.Int64)
  - EventStore.Core.Messages.TcpClientMessageDto.EventRecord.#ctor(System.String,System.Int64,System.Byte[],System.String,System.Int32,System.Int32,System.Byte[],System.Byte[],System.Nullable{System.Int64},System.Nullable{System.Int64})
  - EventStore.Core.Messages.TcpClientMessageDto.EventRecord.Created
  - EventStore.Core.Messages.TcpClientMessageDto.EventRecord.CreatedEpoch
  - EventStore.Core.Messages.TcpClientMessageDto.EventRecord.Data
  - EventStore.Core.Messages.TcpClientMessageDto.EventRecord.DataContentType
  - EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventId
  - EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventNumber
  - EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventStreamId
  - EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventType
  - EventStore.Core.Messages.TcpClientMessageDto.EventRecord.Metadata
  - EventStore.Core.Messages.TcpClientMessageDto.EventRecord.MetadataContentType
  langs:
  - csharp
  - vb
  name: TcpClientMessageDto.EventRecord
  nameWithType: TcpClientMessageDto.EventRecord
  fullName: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  type: Class
  source:
    id: EventRecord
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDtoExtensions.cs
    startLine: 21
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [Serializable]

      [ProtoContract(Name = "EventRecord")]

      public class EventRecord
    content.vb: >-
      <Serializable>

      <ProtoContract(Name:="EventRecord")>

      Public Class EventRecord
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: ProtoBuf.ProtoContractAttribute
    ctor: ProtoBuf.ProtoContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: EventRecord
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventStreamId
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventStreamId
  id: EventStreamId
  parent: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  langs:
  - csharp
  - vb
  name: EventStreamId
  nameWithType: TcpClientMessageDto.EventRecord.EventStreamId
  fullName: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventStreamId
  type: Field
  source:
    id: EventStreamId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 57
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(1, IsRequired = true, Name = "event_stream_id", DataFormat = DataFormat.Default)]

      public readonly string EventStreamId
    return:
      type: System.String
    content.vb: >-
      <ProtoMember(1, IsRequired:=True, Name:="event_stream_id", DataFormat:=DataFormat.Default)>

      Public ReadOnly EventStreamId As String
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: event_stream_id
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 0
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventNumber
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventNumber
  id: EventNumber
  parent: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  langs:
  - csharp
  - vb
  name: EventNumber
  nameWithType: TcpClientMessageDto.EventRecord.EventNumber
  fullName: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventNumber
  type: Field
  source:
    id: EventNumber
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 60
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(2, IsRequired = true, Name = "event_number", DataFormat = DataFormat.TwosComplement)]

      public readonly long EventNumber
    return:
      type: System.Int64
    content.vb: >-
      <ProtoMember(2, IsRequired:=True, Name:="event_number", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly EventNumber As Long
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 2
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: event_number
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventId
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventId
  id: EventId
  parent: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  langs:
  - csharp
  - vb
  name: EventId
  nameWithType: TcpClientMessageDto.EventRecord.EventId
  fullName: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventId
  type: Field
  source:
    id: EventId
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 63
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(3, IsRequired = true, Name = "event_id", DataFormat = DataFormat.Default)]

      public readonly byte[] EventId
    return:
      type: System.Byte[]
    content.vb: >-
      <ProtoMember(3, IsRequired:=True, Name:="event_id", DataFormat:=DataFormat.Default)>

      Public ReadOnly EventId As Byte()
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 3
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: event_id
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 0
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventType
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventType
  id: EventType
  parent: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  langs:
  - csharp
  - vb
  name: EventType
  nameWithType: TcpClientMessageDto.EventRecord.EventType
  fullName: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventType
  type: Field
  source:
    id: EventType
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 66
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(4, IsRequired = true, Name = "event_type", DataFormat = DataFormat.Default)]

      public readonly string EventType
    return:
      type: System.String
    content.vb: >-
      <ProtoMember(4, IsRequired:=True, Name:="event_type", DataFormat:=DataFormat.Default)>

      Public ReadOnly EventType As String
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 4
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: event_type
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 0
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.DataContentType
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.EventRecord.DataContentType
  id: DataContentType
  parent: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  langs:
  - csharp
  - vb
  name: DataContentType
  nameWithType: TcpClientMessageDto.EventRecord.DataContentType
  fullName: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.DataContentType
  type: Field
  source:
    id: DataContentType
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 69
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(5, IsRequired = true, Name = "data_content_type", DataFormat = DataFormat.TwosComplement)]

      public readonly int DataContentType
    return:
      type: System.Int32
    content.vb: >-
      <ProtoMember(5, IsRequired:=True, Name:="data_content_type", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly DataContentType As Integer
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 5
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: data_content_type
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.MetadataContentType
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.EventRecord.MetadataContentType
  id: MetadataContentType
  parent: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  langs:
  - csharp
  - vb
  name: MetadataContentType
  nameWithType: TcpClientMessageDto.EventRecord.MetadataContentType
  fullName: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.MetadataContentType
  type: Field
  source:
    id: MetadataContentType
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 72
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(6, IsRequired = true, Name = "metadata_content_type", DataFormat = DataFormat.TwosComplement)]

      public readonly int MetadataContentType
    return:
      type: System.Int32
    content.vb: >-
      <ProtoMember(6, IsRequired:=True, Name:="metadata_content_type", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly MetadataContentType As Integer
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 6
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: metadata_content_type
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.Data
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.EventRecord.Data
  id: Data
  parent: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: TcpClientMessageDto.EventRecord.Data
  fullName: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.Data
  type: Field
  source:
    id: Data
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 75
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(7, IsRequired = true, Name = "data", DataFormat = DataFormat.Default)]

      public readonly byte[] Data
    return:
      type: System.Byte[]
    content.vb: >-
      <ProtoMember(7, IsRequired:=True, Name:="data", DataFormat:=DataFormat.Default)>

      Public ReadOnly Data As Byte()
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 7
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: data
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 0
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.Metadata
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.EventRecord.Metadata
  id: Metadata
  parent: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: TcpClientMessageDto.EventRecord.Metadata
  fullName: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.Metadata
  type: Field
  source:
    id: Metadata
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 78
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(8, IsRequired = false, Name = "metadata", DataFormat = DataFormat.Default)]

      public readonly byte[] Metadata
    return:
      type: System.Byte[]
    content.vb: >-
      <ProtoMember(8, IsRequired:=False, Name:="metadata", DataFormat:=DataFormat.Default)>

      Public ReadOnly Metadata As Byte()
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 8
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Name
      type: System.String
      value: metadata
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 0
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.Created
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.EventRecord.Created
  id: Created
  parent: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: TcpClientMessageDto.EventRecord.Created
  fullName: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.Created
  type: Field
  source:
    id: Created
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 81
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(9, IsRequired = false, Name = "created", DataFormat = DataFormat.TwosComplement)]

      public readonly long? Created
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <ProtoMember(9, IsRequired:=False, Name:="created", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly Created As Long?
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 9
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Name
      type: System.String
      value: created
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.CreatedEpoch
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.EventRecord.CreatedEpoch
  id: CreatedEpoch
  parent: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  langs:
  - csharp
  - vb
  name: CreatedEpoch
  nameWithType: TcpClientMessageDto.EventRecord.CreatedEpoch
  fullName: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.CreatedEpoch
  type: Field
  source:
    id: CreatedEpoch
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 84
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(10, IsRequired = false, Name = "created_epoch", DataFormat = DataFormat.TwosComplement)]

      public readonly long? CreatedEpoch
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <ProtoMember(10, IsRequired:=False, Name:="created_epoch", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly CreatedEpoch As Long?
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 10
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Name
      type: System.String
      value: created_epoch
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.#ctor(System.String,System.Int64,System.Byte[],System.String,System.Int32,System.Int32,System.Byte[],System.Byte[],System.Nullable{System.Int64},System.Nullable{System.Int64})
  commentId: M:EventStore.Core.Messages.TcpClientMessageDto.EventRecord.#ctor(System.String,System.Int64,System.Byte[],System.String,System.Int32,System.Int32,System.Byte[],System.Byte[],System.Nullable{System.Int64},System.Nullable{System.Int64})
  id: '#ctor(System.String,System.Int64,System.Byte[],System.String,System.Int32,System.Int32,System.Byte[],System.Byte[],System.Nullable{System.Int64},System.Nullable{System.Int64})'
  parent: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  langs:
  - csharp
  - vb
  name: EventRecord(String, Int64, Byte[], String, Int32, Int32, Byte[], Byte[], Nullable<Int64>, Nullable<Int64>)
  nameWithType: TcpClientMessageDto.EventRecord.EventRecord(String, Int64, Byte[], String, Int32, Int32, Byte[], Byte[], Nullable<Int64>, Nullable<Int64>)
  fullName: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventRecord(System.String, System.Int64, System.Byte[], System.String, System.Int32, System.Int32, System.Byte[], System.Byte[], System.Nullable<System.Int64>, System.Nullable<System.Int64>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 88
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public EventRecord(string eventStreamId, long eventNumber, byte[] eventId, string eventType, int dataContentType, int metadataContentType, byte[] data, byte[] metadata, long? created, long? createdEpoch)
    parameters:
    - id: eventStreamId
      type: System.String
    - id: eventNumber
      type: System.Int64
    - id: eventId
      type: System.Byte[]
    - id: eventType
      type: System.String
    - id: dataContentType
      type: System.Int32
    - id: metadataContentType
      type: System.Int32
    - id: data
      type: System.Byte[]
    - id: metadata
      type: System.Byte[]
    - id: created
      type: System.Nullable{System.Int64}
    - id: createdEpoch
      type: System.Nullable{System.Int64}
    content.vb: Public Sub New(eventStreamId As String, eventNumber As Long, eventId As Byte(), eventType As String, dataContentType As Integer, metadataContentType As Integer, data As Byte(), metadata As Byte(), created As Long?, createdEpoch As Long?)
  overload: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.#ctor*
  nameWithType.vb: TcpClientMessageDto.EventRecord.EventRecord(String, Int64, Byte(), String, Int32, Int32, Byte(), Byte(), Nullable(Of Int64), Nullable(Of Int64))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventRecord(System.String, System.Int64, System.Byte(), System.String, System.Int32, System.Int32, System.Byte(), System.Byte(), System.Nullable(Of System.Int64), System.Nullable(Of System.Int64))
  name.vb: EventRecord(String, Int64, Byte(), String, Int32, Int32, Byte(), Byte(), Nullable(Of Int64), Nullable(Of Int64))
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.#ctor(EventStore.Core.Data.EventRecord)
  commentId: M:EventStore.Core.Messages.TcpClientMessageDto.EventRecord.#ctor(EventStore.Core.Data.EventRecord)
  id: '#ctor(EventStore.Core.Data.EventRecord)'
  parent: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  langs:
  - csharp
  - vb
  name: EventRecord(EventRecord)
  nameWithType: TcpClientMessageDto.EventRecord.EventRecord(EventRecord)
  fullName: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventRecord(EventStore.Core.Data.EventRecord)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDtoExtensions.cs
    startLine: 22
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public EventRecord(EventRecord eventRecord)
    parameters:
    - id: eventRecord
      type: EventStore.Core.Data.EventRecord
    content.vb: Public Sub New(eventRecord As EventRecord)
  overload: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.#ctor(EventStore.Core.Data.EventRecord,System.Int64)
  commentId: M:EventStore.Core.Messages.TcpClientMessageDto.EventRecord.#ctor(EventStore.Core.Data.EventRecord,System.Int64)
  id: '#ctor(EventStore.Core.Data.EventRecord,System.Int64)'
  parent: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  langs:
  - csharp
  - vb
  name: EventRecord(EventRecord, Int64)
  nameWithType: TcpClientMessageDto.EventRecord.EventRecord(EventRecord, Int64)
  fullName: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventRecord(EventStore.Core.Data.EventRecord, System.Int64)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDtoExtensions.cs
    startLine: 36
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public EventRecord(EventRecord eventRecord, long eventNumber)
    parameters:
    - id: eventRecord
      type: EventStore.Core.Data.EventRecord
    - id: eventNumber
      type: System.Int64
    content.vb: Public Sub New(eventRecord As EventRecord, eventNumber As Long)
  overload: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TcpClientMessageDto.EventRecord>()
  nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.EventRecord>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.EventRecord>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TcpClientMessageDto.EventRecord)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.EventRecord)()
  name.vb: Serialize(Of TcpClientMessageDto.EventRecord)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TcpClientMessageDto.EventRecord>
    nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.EventRecord>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.EventRecord>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TcpClientMessageDto.EventRecord)
    nameWithType: ProtobufExtensions.Serialize(Of TcpClientMessageDto.EventRecord)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.EventRecord)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TcpClientMessageDto.EventRecord>()
  nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.EventRecord>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.EventRecord>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.EventRecord)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.EventRecord)()
  name.vb: SerializeToArray(Of TcpClientMessageDto.EventRecord)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TcpClientMessageDto.EventRecord>
    nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.EventRecord>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.EventRecord>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TcpClientMessageDto.EventRecord)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.EventRecord)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.EventRecord)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.#ctor*
  commentId: Overload:EventStore.Core.Messages.TcpClientMessageDto.EventRecord.#ctor
  name: EventRecord
  nameWithType: TcpClientMessageDto.EventRecord.EventRecord
  fullName: EventStore.Core.Messages.TcpClientMessageDto.EventRecord.EventRecord
- uid: EventStore.Core.Data.EventRecord
  commentId: T:EventStore.Core.Data.EventRecord
  parent: EventStore.Core.Data
  name: EventRecord
  nameWithType: EventRecord
  fullName: EventStore.Core.Data.EventRecord
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo
  id: TcpClientMessageDto.NotHandled.MasterInfo
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.#ctor(System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint)
  - EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.#ctor(System.String,System.Int32,System.String,System.Int32,System.String,System.Nullable{System.Int32})
  - EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalHttpAddress
  - EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalHttpPort
  - EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalSecureTcpAddress
  - EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalSecureTcpPort
  - EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalTcpAddress
  - EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalTcpPort
  langs:
  - csharp
  - vb
  name: TcpClientMessageDto.NotHandled.MasterInfo
  nameWithType: TcpClientMessageDto.NotHandled.MasterInfo
  fullName: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo
  type: Class
  source:
    id: MasterInfo
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDtoExtensions.cs
    startLine: 52
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [Serializable]

      [ProtoContract(Name = "MasterInfo")]

      public class MasterInfo
    content.vb: >-
      <Serializable>

      <ProtoContract(Name:="MasterInfo")>

      Public Class MasterInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: ProtoBuf.ProtoContractAttribute
    ctor: ProtoBuf.ProtoContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: MasterInfo
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalTcpAddress
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalTcpAddress
  id: ExternalTcpAddress
  parent: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo
  langs:
  - csharp
  - vb
  name: ExternalTcpAddress
  nameWithType: TcpClientMessageDto.NotHandled.MasterInfo.ExternalTcpAddress
  fullName: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalTcpAddress
  type: Field
  source:
    id: ExternalTcpAddress
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 1156
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(1, IsRequired = true, Name = "external_tcp_address", DataFormat = DataFormat.Default)]

      public readonly string ExternalTcpAddress
    return:
      type: System.String
    content.vb: >-
      <ProtoMember(1, IsRequired:=True, Name:="external_tcp_address", DataFormat:=DataFormat.Default)>

      Public ReadOnly ExternalTcpAddress As String
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: external_tcp_address
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 0
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalTcpPort
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalTcpPort
  id: ExternalTcpPort
  parent: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo
  langs:
  - csharp
  - vb
  name: ExternalTcpPort
  nameWithType: TcpClientMessageDto.NotHandled.MasterInfo.ExternalTcpPort
  fullName: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalTcpPort
  type: Field
  source:
    id: ExternalTcpPort
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 1159
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(2, IsRequired = true, Name = "external_tcp_port", DataFormat = DataFormat.TwosComplement)]

      public readonly int ExternalTcpPort
    return:
      type: System.Int32
    content.vb: >-
      <ProtoMember(2, IsRequired:=True, Name:="external_tcp_port", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly ExternalTcpPort As Integer
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 2
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: external_tcp_port
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalHttpAddress
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalHttpAddress
  id: ExternalHttpAddress
  parent: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo
  langs:
  - csharp
  - vb
  name: ExternalHttpAddress
  nameWithType: TcpClientMessageDto.NotHandled.MasterInfo.ExternalHttpAddress
  fullName: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalHttpAddress
  type: Field
  source:
    id: ExternalHttpAddress
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 1162
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(3, IsRequired = true, Name = "external_http_address", DataFormat = DataFormat.Default)]

      public readonly string ExternalHttpAddress
    return:
      type: System.String
    content.vb: >-
      <ProtoMember(3, IsRequired:=True, Name:="external_http_address", DataFormat:=DataFormat.Default)>

      Public ReadOnly ExternalHttpAddress As String
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 3
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: external_http_address
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 0
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalHttpPort
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalHttpPort
  id: ExternalHttpPort
  parent: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo
  langs:
  - csharp
  - vb
  name: ExternalHttpPort
  nameWithType: TcpClientMessageDto.NotHandled.MasterInfo.ExternalHttpPort
  fullName: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalHttpPort
  type: Field
  source:
    id: ExternalHttpPort
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 1165
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(4, IsRequired = true, Name = "external_http_port", DataFormat = DataFormat.TwosComplement)]

      public readonly int ExternalHttpPort
    return:
      type: System.Int32
    content.vb: >-
      <ProtoMember(4, IsRequired:=True, Name:="external_http_port", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly ExternalHttpPort As Integer
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 4
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: external_http_port
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalSecureTcpAddress
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalSecureTcpAddress
  id: ExternalSecureTcpAddress
  parent: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo
  langs:
  - csharp
  - vb
  name: ExternalSecureTcpAddress
  nameWithType: TcpClientMessageDto.NotHandled.MasterInfo.ExternalSecureTcpAddress
  fullName: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalSecureTcpAddress
  type: Field
  source:
    id: ExternalSecureTcpAddress
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 1168
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(5, IsRequired = false, Name = "external_secure_tcp_address", DataFormat = DataFormat.Default)]

      public readonly string ExternalSecureTcpAddress
    return:
      type: System.String
    content.vb: >-
      <ProtoMember(5, IsRequired:=False, Name:="external_secure_tcp_address", DataFormat:=DataFormat.Default)>

      Public ReadOnly ExternalSecureTcpAddress As String
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 5
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Name
      type: System.String
      value: external_secure_tcp_address
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 0
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalSecureTcpPort
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalSecureTcpPort
  id: ExternalSecureTcpPort
  parent: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo
  langs:
  - csharp
  - vb
  name: ExternalSecureTcpPort
  nameWithType: TcpClientMessageDto.NotHandled.MasterInfo.ExternalSecureTcpPort
  fullName: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.ExternalSecureTcpPort
  type: Field
  source:
    id: ExternalSecureTcpPort
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 1171
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(6, IsRequired = false, Name = "external_secure_tcp_port", DataFormat = DataFormat.TwosComplement)]

      public readonly int? ExternalSecureTcpPort
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <ProtoMember(6, IsRequired:=False, Name:="external_secure_tcp_port", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly ExternalSecureTcpPort As Integer?
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 6
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Name
      type: System.String
      value: external_secure_tcp_port
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.#ctor(System.String,System.Int32,System.String,System.Int32,System.String,System.Nullable{System.Int32})
  commentId: M:EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.#ctor(System.String,System.Int32,System.String,System.Int32,System.String,System.Nullable{System.Int32})
  id: '#ctor(System.String,System.Int32,System.String,System.Int32,System.String,System.Nullable{System.Int32})'
  parent: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo
  langs:
  - csharp
  - vb
  name: MasterInfo(String, Int32, String, Int32, String, Nullable<Int32>)
  nameWithType: TcpClientMessageDto.NotHandled.MasterInfo.MasterInfo(String, Int32, String, Int32, String, Nullable<Int32>)
  fullName: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.MasterInfo(System.String, System.Int32, System.String, System.Int32, System.String, System.Nullable<System.Int32>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 1175
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public MasterInfo(string externalTcpAddress, int externalTcpPort, string externalHttpAddress, int externalHttpPort, string externalSecureTcpAddress, int? externalSecureTcpPort)
    parameters:
    - id: externalTcpAddress
      type: System.String
    - id: externalTcpPort
      type: System.Int32
    - id: externalHttpAddress
      type: System.String
    - id: externalHttpPort
      type: System.Int32
    - id: externalSecureTcpAddress
      type: System.String
    - id: externalSecureTcpPort
      type: System.Nullable{System.Int32}
    content.vb: Public Sub New(externalTcpAddress As String, externalTcpPort As Integer, externalHttpAddress As String, externalHttpPort As Integer, externalSecureTcpAddress As String, externalSecureTcpPort As Integer?)
  overload: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.#ctor*
  nameWithType.vb: TcpClientMessageDto.NotHandled.MasterInfo.MasterInfo(String, Int32, String, Int32, String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.MasterInfo(System.String, System.Int32, System.String, System.Int32, System.String, System.Nullable(Of System.Int32))
  name.vb: MasterInfo(String, Int32, String, Int32, String, Nullable(Of Int32))
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.#ctor(System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint)
  commentId: M:EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.#ctor(System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint)
  id: '#ctor(System.Net.IPEndPoint,System.Net.IPEndPoint,System.Net.IPEndPoint)'
  parent: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo
  langs:
  - csharp
  - vb
  name: MasterInfo(IPEndPoint, IPEndPoint, IPEndPoint)
  nameWithType: TcpClientMessageDto.NotHandled.MasterInfo.MasterInfo(IPEndPoint, IPEndPoint, IPEndPoint)
  fullName: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.MasterInfo(System.Net.IPEndPoint, System.Net.IPEndPoint, System.Net.IPEndPoint)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDtoExtensions.cs
    startLine: 53
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public MasterInfo(IPEndPoint externalTcpEndPoint, IPEndPoint externalSecureTcpEndPoint, IPEndPoint externalHttpEndPoint)
    parameters:
    - id: externalTcpEndPoint
      type: System.Net.IPEndPoint
    - id: externalSecureTcpEndPoint
      type: System.Net.IPEndPoint
    - id: externalHttpEndPoint
      type: System.Net.IPEndPoint
    content.vb: Public Sub New(externalTcpEndPoint As IPEndPoint, externalSecureTcpEndPoint As IPEndPoint, externalHttpEndPoint As IPEndPoint)
  overload: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TcpClientMessageDto.NotHandled.MasterInfo>()
  nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.NotHandled.MasterInfo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TcpClientMessageDto.NotHandled.MasterInfo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo)()
  name.vb: Serialize(Of TcpClientMessageDto.NotHandled.MasterInfo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TcpClientMessageDto.NotHandled.MasterInfo>
    nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.NotHandled.MasterInfo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TcpClientMessageDto.NotHandled.MasterInfo)
    nameWithType: ProtobufExtensions.Serialize(Of TcpClientMessageDto.NotHandled.MasterInfo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TcpClientMessageDto.NotHandled.MasterInfo>()
  nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.NotHandled.MasterInfo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.NotHandled.MasterInfo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo)()
  name.vb: SerializeToArray(Of TcpClientMessageDto.NotHandled.MasterInfo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TcpClientMessageDto.NotHandled.MasterInfo>
    nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.NotHandled.MasterInfo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TcpClientMessageDto.NotHandled.MasterInfo)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.NotHandled.MasterInfo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.#ctor*
  commentId: Overload:EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.#ctor
  name: MasterInfo
  nameWithType: TcpClientMessageDto.NotHandled.MasterInfo.MasterInfo
  fullName: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.MasterInfo
- uid: System.Net.IPEndPoint
  commentId: T:System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net

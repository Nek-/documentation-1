### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.NotHandled
  id: TcpClientMessageDto.NotHandled
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.TcpClientMessageDto.NotHandled.#ctor(EventStore.Core.Messages.TcpClientMessageDto.NotHandled.NotHandledReason,System.Byte[])
  - EventStore.Core.Messages.TcpClientMessageDto.NotHandled.AdditionalInfo
  - EventStore.Core.Messages.TcpClientMessageDto.NotHandled.Reason
  langs:
  - csharp
  - vb
  name: TcpClientMessageDto.NotHandled
  nameWithType: TcpClientMessageDto.NotHandled
  fullName: EventStore.Core.Messages.TcpClientMessageDto.NotHandled
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: NotHandled
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 1143
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class NotHandled : object'
    content.vb: >-
      Public Class NotHandled
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.TcpClientMessageDto.NotHandled.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.TcpClientMessageDto.NotHandled.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.Reason
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.NotHandled.Reason
  id: Reason
  parent: EventStore.Core.Messages.TcpClientMessageDto.NotHandled
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: TcpClientMessageDto.NotHandled.Reason
  fullName: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.Reason
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Reason
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 1147
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly TcpClientMessageDto.NotHandled.NotHandledReason Reason
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.NotHandledReason
    content.vb: Public ReadOnly Reason As TcpClientMessageDto.NotHandled.NotHandledReason
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.AdditionalInfo
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.NotHandled.AdditionalInfo
  id: AdditionalInfo
  parent: EventStore.Core.Messages.TcpClientMessageDto.NotHandled
  langs:
  - csharp
  - vb
  name: AdditionalInfo
  nameWithType: TcpClientMessageDto.NotHandled.AdditionalInfo
  fullName: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.AdditionalInfo
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: AdditionalInfo
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 1150
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly byte[] AdditionalInfo
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly AdditionalInfo As Byte()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.#ctor(EventStore.Core.Messages.TcpClientMessageDto.NotHandled.NotHandledReason,System.Byte[])
  commentId: M:EventStore.Core.Messages.TcpClientMessageDto.NotHandled.#ctor(EventStore.Core.Messages.TcpClientMessageDto.NotHandled.NotHandledReason,System.Byte[])
  id: '#ctor(EventStore.Core.Messages.TcpClientMessageDto.NotHandled.NotHandledReason,System.Byte[])'
  parent: EventStore.Core.Messages.TcpClientMessageDto.NotHandled
  langs:
  - csharp
  - vb
  name: NotHandled(TcpClientMessageDto.NotHandled.NotHandledReason, Byte[])
  nameWithType: TcpClientMessageDto.NotHandled.NotHandled(TcpClientMessageDto.NotHandled.NotHandledReason, Byte[])
  fullName: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.NotHandled(EventStore.Core.Messages.TcpClientMessageDto.NotHandled.NotHandledReason, System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 1202
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public NotHandled(TcpClientMessageDto.NotHandled.NotHandledReason reason, byte[] additionalInfo)
    parameters:
    - id: reason
      type: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.NotHandledReason
    - id: additionalInfo
      type: System.Byte[]
    content.vb: Public Sub New(reason As TcpClientMessageDto.NotHandled.NotHandledReason, additionalInfo As Byte())
  overload: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.#ctor*
  nameWithType.vb: TcpClientMessageDto.NotHandled.NotHandled(TcpClientMessageDto.NotHandled.NotHandledReason, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.NotHandled(EventStore.Core.Messages.TcpClientMessageDto.NotHandled.NotHandledReason, System.Byte())
  name.vb: NotHandled(TcpClientMessageDto.NotHandled.NotHandledReason, Byte())
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TcpClientMessageDto.NotHandled>()
  nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.NotHandled>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.NotHandled>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TcpClientMessageDto.NotHandled)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.NotHandled)()
  name.vb: Serialize(Of TcpClientMessageDto.NotHandled)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TcpClientMessageDto.NotHandled>
    nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.NotHandled>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.NotHandled>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TcpClientMessageDto.NotHandled)
    nameWithType: ProtobufExtensions.Serialize(Of TcpClientMessageDto.NotHandled)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.NotHandled)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TcpClientMessageDto.NotHandled>()
  nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.NotHandled>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.NotHandled>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.NotHandled)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.NotHandled)()
  name.vb: SerializeToArray(Of TcpClientMessageDto.NotHandled)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TcpClientMessageDto.NotHandled>
    nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.NotHandled>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.NotHandled>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TcpClientMessageDto.NotHandled)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.NotHandled)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.NotHandled)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.NotHandledReason
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.NotHandled.NotHandledReason
  parent: EventStore.Core.Messages
  name: TcpClientMessageDto.NotHandled.NotHandledReason
  nameWithType: TcpClientMessageDto.NotHandled.NotHandledReason
  fullName: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.NotHandledReason
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.#ctor*
  commentId: Overload:EventStore.Core.Messages.TcpClientMessageDto.NotHandled.#ctor
  name: NotHandled
  nameWithType: TcpClientMessageDto.NotHandled.NotHandled
  fullName: EventStore.Core.Messages.TcpClientMessageDto.NotHandled.NotHandled

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted
  id: TcpClientMessageDto.ReadAllEventsCompleted
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.#ctor(System.Int64,System.Int64,EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent[],System.Int64,System.Int64,EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult,System.String)
  - EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.CommitPosition
  - EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.Error
  - EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.Events
  - EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.NextCommitPosition
  - EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.NextPreparePosition
  - EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.PreparePosition
  - EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.Result
  langs:
  - csharp
  - vb
  name: TcpClientMessageDto.ReadAllEventsCompleted
  nameWithType: TcpClientMessageDto.ReadAllEventsCompleted
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted
  type: Class
  source:
    id: ReadAllEventsCompleted
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 599
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [Serializable]

      [ProtoContract(Name = "ReadAllEventsCompleted")]

      public class ReadAllEventsCompleted
    content.vb: >-
      <Serializable>

      <ProtoContract(Name:="ReadAllEventsCompleted")>

      Public Class ReadAllEventsCompleted
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: ProtoBuf.ProtoContractAttribute
    ctor: ProtoBuf.ProtoContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: ReadAllEventsCompleted
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.CommitPosition
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.CommitPosition
  id: CommitPosition
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted
  langs:
  - csharp
  - vb
  name: CommitPosition
  nameWithType: TcpClientMessageDto.ReadAllEventsCompleted.CommitPosition
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.CommitPosition
  type: Field
  source:
    id: CommitPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 603
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(1, IsRequired = true, Name = "commit_position", DataFormat = DataFormat.TwosComplement)]

      public readonly long CommitPosition
    return:
      type: System.Int64
    content.vb: >-
      <ProtoMember(1, IsRequired:=True, Name:="commit_position", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly CommitPosition As Long
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: commit_position
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.PreparePosition
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.PreparePosition
  id: PreparePosition
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted
  langs:
  - csharp
  - vb
  name: PreparePosition
  nameWithType: TcpClientMessageDto.ReadAllEventsCompleted.PreparePosition
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.PreparePosition
  type: Field
  source:
    id: PreparePosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 606
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(2, IsRequired = true, Name = "prepare_position", DataFormat = DataFormat.TwosComplement)]

      public readonly long PreparePosition
    return:
      type: System.Int64
    content.vb: >-
      <ProtoMember(2, IsRequired:=True, Name:="prepare_position", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly PreparePosition As Long
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 2
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: prepare_position
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.Events
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.Events
  id: Events
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: TcpClientMessageDto.ReadAllEventsCompleted.Events
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.Events
  type: Field
  source:
    id: Events
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 609
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(3, Name = "events", DataFormat = DataFormat.Default)]

      public readonly TcpClientMessageDto.ResolvedEvent[] Events
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent[]
    content.vb: >-
      <ProtoMember(3, Name:="events", DataFormat:=DataFormat.Default)>

      Public ReadOnly Events As TcpClientMessageDto.ResolvedEvent()
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 3
    namedArguments:
    - name: Name
      type: System.String
      value: events
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 0
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.NextCommitPosition
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.NextCommitPosition
  id: NextCommitPosition
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted
  langs:
  - csharp
  - vb
  name: NextCommitPosition
  nameWithType: TcpClientMessageDto.ReadAllEventsCompleted.NextCommitPosition
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.NextCommitPosition
  type: Field
  source:
    id: NextCommitPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 612
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(4, IsRequired = true, Name = "next_commit_position", DataFormat = DataFormat.TwosComplement)]

      public readonly long NextCommitPosition
    return:
      type: System.Int64
    content.vb: >-
      <ProtoMember(4, IsRequired:=True, Name:="next_commit_position", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly NextCommitPosition As Long
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 4
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: next_commit_position
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.NextPreparePosition
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.NextPreparePosition
  id: NextPreparePosition
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted
  langs:
  - csharp
  - vb
  name: NextPreparePosition
  nameWithType: TcpClientMessageDto.ReadAllEventsCompleted.NextPreparePosition
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.NextPreparePosition
  type: Field
  source:
    id: NextPreparePosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 615
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(5, IsRequired = true, Name = "next_prepare_position", DataFormat = DataFormat.TwosComplement)]

      public readonly long NextPreparePosition
    return:
      type: System.Int64
    content.vb: >-
      <ProtoMember(5, IsRequired:=True, Name:="next_prepare_position", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly NextPreparePosition As Long
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 5
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: next_prepare_position
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.Result
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.Result
  id: Result
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: TcpClientMessageDto.ReadAllEventsCompleted.Result
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.Result
  type: Field
  source:
    id: Result
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 618
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(6, IsRequired = false, Name = "result", DataFormat = DataFormat.TwosComplement)]

      public readonly TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult Result
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult
    content.vb: >-
      <ProtoMember(6, IsRequired:=False, Name:="result", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly Result As TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 6
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Name
      type: System.String
      value: result
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.Error
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.Error
  id: Error
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: TcpClientMessageDto.ReadAllEventsCompleted.Error
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.Error
  type: Field
  source:
    id: Error
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 621
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(7, IsRequired = false, Name = "error", DataFormat = DataFormat.Default)]

      public readonly string Error
    return:
      type: System.String
    content.vb: >-
      <ProtoMember(7, IsRequired:=False, Name:="error", DataFormat:=DataFormat.Default)>

      Public ReadOnly Error As String
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 7
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Name
      type: System.String
      value: error
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 0
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.#ctor(System.Int64,System.Int64,EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent[],System.Int64,System.Int64,EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult,System.String)
  commentId: M:EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.#ctor(System.Int64,System.Int64,EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent[],System.Int64,System.Int64,EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult,System.String)
  id: '#ctor(System.Int64,System.Int64,EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent[],System.Int64,System.Int64,EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult,System.String)'
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted
  langs:
  - csharp
  - vb
  name: ReadAllEventsCompleted(Int64, Int64, TcpClientMessageDto.ResolvedEvent[], Int64, Int64, TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult, String)
  nameWithType: TcpClientMessageDto.ReadAllEventsCompleted.ReadAllEventsCompleted(Int64, Int64, TcpClientMessageDto.ResolvedEvent[], Int64, Int64, TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult, String)
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.ReadAllEventsCompleted(System.Int64, System.Int64, EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent[], System.Int64, System.Int64, EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult, System.String)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 642
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public ReadAllEventsCompleted(long commitPosition, long preparePosition, TcpClientMessageDto.ResolvedEvent[] events, long nextCommitPosition, long nextPreparePosition, TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult result, string error)
    parameters:
    - id: commitPosition
      type: System.Int64
    - id: preparePosition
      type: System.Int64
    - id: events
      type: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent[]
    - id: nextCommitPosition
      type: System.Int64
    - id: nextPreparePosition
      type: System.Int64
    - id: result
      type: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult
    - id: error
      type: System.String
    content.vb: Public Sub New(commitPosition As Long, preparePosition As Long, events As TcpClientMessageDto.ResolvedEvent(), nextCommitPosition As Long, nextPreparePosition As Long, result As TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult, error As String)
  overload: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.#ctor*
  nameWithType.vb: TcpClientMessageDto.ReadAllEventsCompleted.ReadAllEventsCompleted(Int64, Int64, TcpClientMessageDto.ResolvedEvent(), Int64, Int64, TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.ReadAllEventsCompleted(System.Int64, System.Int64, EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent(), System.Int64, System.Int64, EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult, System.String)
  name.vb: ReadAllEventsCompleted(Int64, Int64, TcpClientMessageDto.ResolvedEvent(), Int64, Int64, TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult, String)
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TcpClientMessageDto.ReadAllEventsCompleted>()
  nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.ReadAllEventsCompleted>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TcpClientMessageDto.ReadAllEventsCompleted)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted)()
  name.vb: Serialize(Of TcpClientMessageDto.ReadAllEventsCompleted)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TcpClientMessageDto.ReadAllEventsCompleted>
    nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.ReadAllEventsCompleted>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TcpClientMessageDto.ReadAllEventsCompleted)
    nameWithType: ProtobufExtensions.Serialize(Of TcpClientMessageDto.ReadAllEventsCompleted)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TcpClientMessageDto.ReadAllEventsCompleted>()
  nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.ReadAllEventsCompleted>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.ReadAllEventsCompleted)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted)()
  name.vb: SerializeToArray(Of TcpClientMessageDto.ReadAllEventsCompleted)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TcpClientMessageDto.ReadAllEventsCompleted>
    nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.ReadAllEventsCompleted>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TcpClientMessageDto.ReadAllEventsCompleted)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.ReadAllEventsCompleted)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent[]
  isExternal: true
  name: TcpClientMessageDto.ResolvedEvent[]
  nameWithType: TcpClientMessageDto.ResolvedEvent[]
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent[]
  nameWithType.vb: TcpClientMessageDto.ResolvedEvent()
  fullName.vb: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent()
  name.vb: TcpClientMessageDto.ResolvedEvent()
  spec.csharp:
  - uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent
    name: TcpClientMessageDto.ResolvedEvent
    nameWithType: TcpClientMessageDto.ResolvedEvent
    fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent
    name: TcpClientMessageDto.ResolvedEvent
    nameWithType: TcpClientMessageDto.ResolvedEvent
    fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult
  parent: EventStore.Core.Messages
  name: TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult
  nameWithType: TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.#ctor*
  commentId: Overload:EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.#ctor
  name: ReadAllEventsCompleted
  nameWithType: TcpClientMessageDto.ReadAllEventsCompleted.ReadAllEventsCompleted
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.ReadAllEventsCompleted

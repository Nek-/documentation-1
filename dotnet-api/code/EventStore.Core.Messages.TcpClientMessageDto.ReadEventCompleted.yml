### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted
  id: TcpClientMessageDto.ReadEventCompleted
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.#ctor(EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.ReadEventResult,EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent,System.String)
  - EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.Error
  - EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.Event
  - EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.Result
  langs:
  - csharp
  - vb
  name: TcpClientMessageDto.ReadEventCompleted
  nameWithType: TcpClientMessageDto.ReadEventCompleted
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted
  type: Class
  source:
    id: ReadEventCompleted
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 433
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [Serializable]

      [ProtoContract(Name = "ReadEventCompleted")]

      public class ReadEventCompleted
    content.vb: >-
      <Serializable>

      <ProtoContract(Name:="ReadEventCompleted")>

      Public Class ReadEventCompleted
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: ProtoBuf.ProtoContractAttribute
    ctor: ProtoBuf.ProtoContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: ReadEventCompleted
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.Result
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.Result
  id: Result
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: TcpClientMessageDto.ReadEventCompleted.Result
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.Result
  type: Field
  source:
    id: Result
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 437
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(1, IsRequired = true, Name = "result", DataFormat = DataFormat.TwosComplement)]

      public readonly TcpClientMessageDto.ReadEventCompleted.ReadEventResult Result
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.ReadEventResult
    content.vb: >-
      <ProtoMember(1, IsRequired:=True, Name:="result", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly Result As TcpClientMessageDto.ReadEventCompleted.ReadEventResult
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: result
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.Event
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.Event
  id: Event
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted
  langs:
  - csharp
  - vb
  name: Event
  nameWithType: TcpClientMessageDto.ReadEventCompleted.Event
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.Event
  type: Field
  source:
    id: Event
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 440
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(2, IsRequired = true, Name = "event", DataFormat = DataFormat.Default)]

      public readonly TcpClientMessageDto.ResolvedIndexedEvent Event
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent
    content.vb: >-
      <ProtoMember(2, IsRequired:=True, Name:="event", DataFormat:=DataFormat.Default)>

      Public ReadOnly Event As TcpClientMessageDto.ResolvedIndexedEvent
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 2
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: event
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 0
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.Error
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.Error
  id: Error
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: TcpClientMessageDto.ReadEventCompleted.Error
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.Error
  type: Field
  source:
    id: Error
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 443
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(3, IsRequired = false, Name = "error", DataFormat = DataFormat.Default)]

      public readonly string Error
    return:
      type: System.String
    content.vb: >-
      <ProtoMember(3, IsRequired:=False, Name:="error", DataFormat:=DataFormat.Default)>

      Public ReadOnly Error As String
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 3
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Name
      type: System.String
      value: error
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 0
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.#ctor(EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.ReadEventResult,EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent,System.String)
  commentId: M:EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.#ctor(EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.ReadEventResult,EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent,System.String)
  id: '#ctor(EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.ReadEventResult,EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent,System.String)'
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted
  langs:
  - csharp
  - vb
  name: ReadEventCompleted(TcpClientMessageDto.ReadEventCompleted.ReadEventResult, TcpClientMessageDto.ResolvedIndexedEvent, String)
  nameWithType: TcpClientMessageDto.ReadEventCompleted.ReadEventCompleted(TcpClientMessageDto.ReadEventCompleted.ReadEventResult, TcpClientMessageDto.ResolvedIndexedEvent, String)
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.ReadEventCompleted(EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.ReadEventResult, EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent, System.String)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 470
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public ReadEventCompleted(TcpClientMessageDto.ReadEventCompleted.ReadEventResult result, TcpClientMessageDto.ResolvedIndexedEvent event, string error)
    parameters:
    - id: result
      type: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.ReadEventResult
    - id: event
      type: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent
    - id: error
      type: System.String
    content.vb: Public Sub New(result As TcpClientMessageDto.ReadEventCompleted.ReadEventResult, event As TcpClientMessageDto.ResolvedIndexedEvent, error As String)
  overload: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TcpClientMessageDto.ReadEventCompleted>()
  nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.ReadEventCompleted>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TcpClientMessageDto.ReadEventCompleted)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted)()
  name.vb: Serialize(Of TcpClientMessageDto.ReadEventCompleted)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TcpClientMessageDto.ReadEventCompleted>
    nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.ReadEventCompleted>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TcpClientMessageDto.ReadEventCompleted)
    nameWithType: ProtobufExtensions.Serialize(Of TcpClientMessageDto.ReadEventCompleted)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TcpClientMessageDto.ReadEventCompleted>()
  nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.ReadEventCompleted>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.ReadEventCompleted)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted)()
  name.vb: SerializeToArray(Of TcpClientMessageDto.ReadEventCompleted)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TcpClientMessageDto.ReadEventCompleted>
    nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.ReadEventCompleted>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TcpClientMessageDto.ReadEventCompleted)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.ReadEventCompleted)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.ReadEventResult
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.ReadEventResult
  parent: EventStore.Core.Messages
  name: TcpClientMessageDto.ReadEventCompleted.ReadEventResult
  nameWithType: TcpClientMessageDto.ReadEventCompleted.ReadEventResult
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.ReadEventResult
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent
  parent: EventStore.Core.Messages
  name: TcpClientMessageDto.ResolvedIndexedEvent
  nameWithType: TcpClientMessageDto.ResolvedIndexedEvent
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.#ctor*
  commentId: Overload:EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.#ctor
  name: ReadEventCompleted
  nameWithType: TcpClientMessageDto.ReadEventCompleted.ReadEventCompleted
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.ReadEventCompleted

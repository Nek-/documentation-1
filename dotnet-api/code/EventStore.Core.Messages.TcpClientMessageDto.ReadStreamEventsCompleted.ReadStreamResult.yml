### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
  id: TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.AccessDenied
  - EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.Error
  - EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.NoStream
  - EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.NotModified
  - EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.StreamDeleted
  - EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.Success
  langs:
  - csharp
  - vb
  name: TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
  nameWithType: TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
  type: Enum
  source:
    id: ReadStreamResult
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 532
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoContract(Name = "ReadStreamResult")]

      public enum ReadStreamResult
    content.vb: >-
      <ProtoContract(Name:="ReadStreamResult")>

      Public Enum ReadStreamResult
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  - EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  attributes:
  - type: ProtoBuf.ProtoContractAttribute
    ctor: ProtoBuf.ProtoContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: ReadStreamResult
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.Success
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.Success
  id: Success
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.Success
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.Success
  type: Field
  source:
    id: Success
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 536
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoEnum(Name = "Success", Value = 0)]

      Success = 0
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
    content.vb: >-
      <ProtoEnum(Name:="Success", Value:=0)>

      Success = 0
  attributes:
  - type: ProtoBuf.ProtoEnumAttribute
    ctor: ProtoBuf.ProtoEnumAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Success
    - name: Value
      type: System.Int32
      value: 0
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.NoStream
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.NoStream
  id: NoStream
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
  langs:
  - csharp
  - vb
  name: NoStream
  nameWithType: TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.NoStream
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.NoStream
  type: Field
  source:
    id: NoStream
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 539
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoEnum(Name = "NoStream", Value = 1)]

      NoStream = 1
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
    content.vb: >-
      <ProtoEnum(Name:="NoStream", Value:=1)>

      NoStream = 1
  attributes:
  - type: ProtoBuf.ProtoEnumAttribute
    ctor: ProtoBuf.ProtoEnumAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: NoStream
    - name: Value
      type: System.Int32
      value: 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.StreamDeleted
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.StreamDeleted
  id: StreamDeleted
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
  langs:
  - csharp
  - vb
  name: StreamDeleted
  nameWithType: TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.StreamDeleted
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.StreamDeleted
  type: Field
  source:
    id: StreamDeleted
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 542
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoEnum(Name = "StreamDeleted", Value = 2)]

      StreamDeleted = 2
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
    content.vb: >-
      <ProtoEnum(Name:="StreamDeleted", Value:=2)>

      StreamDeleted = 2
  attributes:
  - type: ProtoBuf.ProtoEnumAttribute
    ctor: ProtoBuf.ProtoEnumAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: StreamDeleted
    - name: Value
      type: System.Int32
      value: 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.NotModified
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.NotModified
  id: NotModified
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
  langs:
  - csharp
  - vb
  name: NotModified
  nameWithType: TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.NotModified
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.NotModified
  type: Field
  source:
    id: NotModified
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 545
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoEnum(Name = "NotModified", Value = 3)]

      NotModified = 3
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
    content.vb: >-
      <ProtoEnum(Name:="NotModified", Value:=3)>

      NotModified = 3
  attributes:
  - type: ProtoBuf.ProtoEnumAttribute
    ctor: ProtoBuf.ProtoEnumAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: NotModified
    - name: Value
      type: System.Int32
      value: 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.Error
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.Error
  id: Error
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.Error
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.Error
  type: Field
  source:
    id: Error
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 548
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoEnum(Name = "Error", Value = 4)]

      Error = 4
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
    content.vb: >-
      <ProtoEnum(Name:="Error", Value:=4)>

      Error = 4
  attributes:
  - type: ProtoBuf.ProtoEnumAttribute
    ctor: ProtoBuf.ProtoEnumAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Error
    - name: Value
      type: System.Int32
      value: 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.AccessDenied
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.AccessDenied
  id: AccessDenied
  parent: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
  langs:
  - csharp
  - vb
  name: AccessDenied
  nameWithType: TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.AccessDenied
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.AccessDenied
  type: Field
  source:
    id: AccessDenied
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 551
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoEnum(Name = "AccessDenied", Value = 5)]

      AccessDenied = 5
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
    content.vb: >-
      <ProtoEnum(Name:="AccessDenied", Value:=5)>

      AccessDenied = 5
  attributes:
  - type: ProtoBuf.ProtoEnumAttribute
    ctor: ProtoBuf.ProtoEnumAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: AccessDenied
    - name: Value
      type: System.Int32
      value: 5
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  parent: EventStore.Projections.Core.Utils.EnumExtensions
  definition: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>()
  nameWithType: EnumExtensions.EnumValueName<TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>()
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>()
  nameWithType.vb: EnumExtensions.EnumValueName(Of TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)()
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)()
  name.vb: EnumValueName(Of TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)()
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName<TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>
    nameWithType: EnumExtensions.EnumValueName<TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1
    name: EnumValueName(Of TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)
    nameWithType: EnumExtensions.EnumValueName(Of TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>()
  nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)()
  name.vb: Serialize(Of TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>
    nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)
    nameWithType: ProtobufExtensions.Serialize(Of TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>()
  nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)()
  name.vb: SerializeToArray(Of TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>
    nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  commentId: M:EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
  name: EnumValueName<T>(T)
  nameWithType: EnumExtensions.EnumValueName<T>(T)
  fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>(T)
  nameWithType.vb: EnumExtensions.EnumValueName(Of T)(T)
  fullName.vb: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)(T)
  name.vb: EnumValueName(Of T)(T)
  spec.csharp:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName<T>
    nameWithType: EnumExtensions.EnumValueName<T>
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName``1(``0)
    name: EnumValueName(Of T)
    nameWithType: EnumExtensions.EnumValueName(Of T)
    fullName: EventStore.Projections.Core.Utils.EnumExtensions.EnumValueName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Projections.Core.Utils.EnumExtensions
  commentId: T:EventStore.Projections.Core.Utils.EnumExtensions
  parent: EventStore.Projections.Core.Utils
  name: EnumExtensions
  nameWithType: EnumExtensions
  fullName: EventStore.Projections.Core.Utils.EnumExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Projections.Core.Utils
  commentId: N:EventStore.Projections.Core.Utils
  name: EventStore.Projections.Core.Utils
  nameWithType: EventStore.Projections.Core.Utils
  fullName: EventStore.Projections.Core.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
  parent: EventStore.Core.Messages
  name: TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
  nameWithType: TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult

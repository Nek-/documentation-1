### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent
  id: TcpClientMessageDto.ResolvedEvent
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.#ctor(EventStore.Core.Data.ResolvedEvent)
  - EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.#ctor(EventStore.Core.Messages.TcpClientMessageDto.EventRecord,EventStore.Core.Messages.TcpClientMessageDto.EventRecord,System.Int64,System.Int64)
  - EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.CommitPosition
  - EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.Event
  - EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.Link
  - EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.PreparePosition
  langs:
  - csharp
  - vb
  name: TcpClientMessageDto.ResolvedEvent
  nameWithType: TcpClientMessageDto.ResolvedEvent
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: ResolvedEvent
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 121
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class ResolvedEvent : object'
    content.vb: >-
      Public Class ResolvedEvent
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.#ctor(EventStore.Core.Data.ResolvedEvent)
  commentId: M:EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.#ctor(EventStore.Core.Data.ResolvedEvent)
  id: '#ctor(EventStore.Core.Data.ResolvedEvent)'
  parent: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent
  langs:
  - csharp
  - vb
  name: ResolvedEvent(ResolvedEvent)
  nameWithType: TcpClientMessageDto.ResolvedEvent.ResolvedEvent(ResolvedEvent)
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.ResolvedEvent(EventStore.Core.Data.ResolvedEvent)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDtoExtensions.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDtoExtensions.cs
    startLine: 18
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public ResolvedEvent(ResolvedEvent pair)
    parameters:
    - id: pair
      type: EventStore.Core.Data.ResolvedEvent
    content.vb: Public Sub New(pair As ResolvedEvent)
  overload: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.Event
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.Event
  id: Event
  parent: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent
  langs:
  - csharp
  - vb
  name: Event
  nameWithType: TcpClientMessageDto.ResolvedEvent.Event
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.Event
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Event
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 125
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly TcpClientMessageDto.EventRecord Event
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
    content.vb: Public ReadOnly Event As TcpClientMessageDto.EventRecord
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.Link
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.Link
  id: Link
  parent: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent
  langs:
  - csharp
  - vb
  name: Link
  nameWithType: TcpClientMessageDto.ResolvedEvent.Link
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.Link
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: Link
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 128
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly TcpClientMessageDto.EventRecord Link
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
    content.vb: Public ReadOnly Link As TcpClientMessageDto.EventRecord
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.CommitPosition
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.CommitPosition
  id: CommitPosition
  parent: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent
  langs:
  - csharp
  - vb
  name: CommitPosition
  nameWithType: TcpClientMessageDto.ResolvedEvent.CommitPosition
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.CommitPosition
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: CommitPosition
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 131
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly long CommitPosition
    return:
      type: System.Int64
    content.vb: Public ReadOnly CommitPosition As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.PreparePosition
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.PreparePosition
  id: PreparePosition
  parent: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent
  langs:
  - csharp
  - vb
  name: PreparePosition
  nameWithType: TcpClientMessageDto.ResolvedEvent.PreparePosition
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.PreparePosition
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: PreparePosition
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 134
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly long PreparePosition
    return:
      type: System.Int64
    content.vb: Public ReadOnly PreparePosition As Long
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.#ctor(EventStore.Core.Messages.TcpClientMessageDto.EventRecord,EventStore.Core.Messages.TcpClientMessageDto.EventRecord,System.Int64,System.Int64)
  commentId: M:EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.#ctor(EventStore.Core.Messages.TcpClientMessageDto.EventRecord,EventStore.Core.Messages.TcpClientMessageDto.EventRecord,System.Int64,System.Int64)
  id: '#ctor(EventStore.Core.Messages.TcpClientMessageDto.EventRecord,EventStore.Core.Messages.TcpClientMessageDto.EventRecord,System.Int64,System.Int64)'
  parent: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent
  langs:
  - csharp
  - vb
  name: ResolvedEvent(TcpClientMessageDto.EventRecord, TcpClientMessageDto.EventRecord, Int64, Int64)
  nameWithType: TcpClientMessageDto.ResolvedEvent.ResolvedEvent(TcpClientMessageDto.EventRecord, TcpClientMessageDto.EventRecord, Int64, Int64)
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.ResolvedEvent(EventStore.Core.Messages.TcpClientMessageDto.EventRecord, EventStore.Core.Messages.TcpClientMessageDto.EventRecord, System.Int64, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/TcpClientMessageDto.cs
      branch: master
      repo: https://github.com/EventStore/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 138
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public ResolvedEvent(TcpClientMessageDto.EventRecord event, TcpClientMessageDto.EventRecord link, long commitPosition, long preparePosition)
    parameters:
    - id: event
      type: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
    - id: link
      type: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
    - id: commitPosition
      type: System.Int64
    - id: preparePosition
      type: System.Int64
    content.vb: Public Sub New(event As TcpClientMessageDto.EventRecord, link As TcpClientMessageDto.EventRecord, commitPosition As Long, preparePosition As Long)
  overload: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TcpClientMessageDto.ResolvedEvent>()
  nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.ResolvedEvent>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TcpClientMessageDto.ResolvedEvent)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent)()
  name.vb: Serialize(Of TcpClientMessageDto.ResolvedEvent)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TcpClientMessageDto.ResolvedEvent>
    nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.ResolvedEvent>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TcpClientMessageDto.ResolvedEvent)
    nameWithType: ProtobufExtensions.Serialize(Of TcpClientMessageDto.ResolvedEvent)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TcpClientMessageDto.ResolvedEvent>()
  nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.ResolvedEvent>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.ResolvedEvent)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent)()
  name.vb: SerializeToArray(Of TcpClientMessageDto.ResolvedEvent)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TcpClientMessageDto.ResolvedEvent>
    nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.ResolvedEvent>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TcpClientMessageDto.ResolvedEvent)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.ResolvedEvent)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.#ctor*
  commentId: Overload:EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.#ctor
  name: ResolvedEvent
  nameWithType: TcpClientMessageDto.ResolvedEvent.ResolvedEvent
  fullName: EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.ResolvedEvent
- uid: EventStore.Core.Data.ResolvedEvent
  commentId: T:EventStore.Core.Data.ResolvedEvent
  parent: EventStore.Core.Data
  name: ResolvedEvent
  nameWithType: ResolvedEvent
  fullName: EventStore.Core.Data.ResolvedEvent
- uid: EventStore.Core.Data
  commentId: N:EventStore.Core.Data
  name: EventStore.Core.Data
  nameWithType: EventStore.Core.Data
  fullName: EventStore.Core.Data
- uid: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.EventRecord
  parent: EventStore.Core.Messages
  name: TcpClientMessageDto.EventRecord
  nameWithType: TcpClientMessageDto.EventRecord
  fullName: EventStore.Core.Messages.TcpClientMessageDto.EventRecord
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64

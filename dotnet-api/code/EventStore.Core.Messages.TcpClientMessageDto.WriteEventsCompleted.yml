### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted
  id: TcpClientMessageDto.WriteEventsCompleted
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.#ctor(EventStore.Core.Messages.TcpClientMessageDto.OperationResult,System.String,System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})
  - EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.CommitPosition
  - EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.CurrentVersion
  - EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.FirstEventNumber
  - EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.LastEventNumber
  - EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.Message
  - EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.PreparePosition
  - EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.Result
  langs:
  - csharp
  - vb
  name: TcpClientMessageDto.WriteEventsCompleted
  nameWithType: TcpClientMessageDto.WriteEventsCompleted
  fullName: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted
  type: Class
  source:
    id: WriteEventsCompleted
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 173
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [Serializable]

      [ProtoContract(Name = "WriteEventsCompleted")]

      public class WriteEventsCompleted
    content.vb: >-
      <Serializable>

      <ProtoContract(Name:="WriteEventsCompleted")>

      Public Class WriteEventsCompleted
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: ProtoBuf.ProtoContractAttribute
    ctor: ProtoBuf.ProtoContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: WriteEventsCompleted
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.Result
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.Result
  id: Result
  parent: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: TcpClientMessageDto.WriteEventsCompleted.Result
  fullName: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.Result
  type: Field
  source:
    id: Result
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 177
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(1, IsRequired = true, Name = "result", DataFormat = DataFormat.TwosComplement)]

      public readonly TcpClientMessageDto.OperationResult Result
    return:
      type: EventStore.Core.Messages.TcpClientMessageDto.OperationResult
    content.vb: >-
      <ProtoMember(1, IsRequired:=True, Name:="result", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly Result As TcpClientMessageDto.OperationResult
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: result
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.Message
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.Message
  id: Message
  parent: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: TcpClientMessageDto.WriteEventsCompleted.Message
  fullName: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.Message
  type: Field
  source:
    id: Message
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 180
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(2, IsRequired = false, Name = "message", DataFormat = DataFormat.Default)]

      public readonly string Message
    return:
      type: System.String
    content.vb: >-
      <ProtoMember(2, IsRequired:=False, Name:="message", DataFormat:=DataFormat.Default)>

      Public ReadOnly Message As String
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 2
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Name
      type: System.String
      value: message
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 0
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.FirstEventNumber
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.FirstEventNumber
  id: FirstEventNumber
  parent: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted
  langs:
  - csharp
  - vb
  name: FirstEventNumber
  nameWithType: TcpClientMessageDto.WriteEventsCompleted.FirstEventNumber
  fullName: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.FirstEventNumber
  type: Field
  source:
    id: FirstEventNumber
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 183
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(3, IsRequired = true, Name = "first_event_number", DataFormat = DataFormat.TwosComplement)]

      public readonly long FirstEventNumber
    return:
      type: System.Int64
    content.vb: >-
      <ProtoMember(3, IsRequired:=True, Name:="first_event_number", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly FirstEventNumber As Long
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 3
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: first_event_number
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.LastEventNumber
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.LastEventNumber
  id: LastEventNumber
  parent: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted
  langs:
  - csharp
  - vb
  name: LastEventNumber
  nameWithType: TcpClientMessageDto.WriteEventsCompleted.LastEventNumber
  fullName: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.LastEventNumber
  type: Field
  source:
    id: LastEventNumber
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 186
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(4, IsRequired = true, Name = "last_event_number", DataFormat = DataFormat.TwosComplement)]

      public readonly long LastEventNumber
    return:
      type: System.Int64
    content.vb: >-
      <ProtoMember(4, IsRequired:=True, Name:="last_event_number", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly LastEventNumber As Long
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 4
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: last_event_number
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.PreparePosition
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.PreparePosition
  id: PreparePosition
  parent: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted
  langs:
  - csharp
  - vb
  name: PreparePosition
  nameWithType: TcpClientMessageDto.WriteEventsCompleted.PreparePosition
  fullName: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.PreparePosition
  type: Field
  source:
    id: PreparePosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 189
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(5, IsRequired = false, Name = "prepare_position", DataFormat = DataFormat.TwosComplement)]

      public readonly long? PreparePosition
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <ProtoMember(5, IsRequired:=False, Name:="prepare_position", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly PreparePosition As Long?
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 5
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Name
      type: System.String
      value: prepare_position
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.CommitPosition
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.CommitPosition
  id: CommitPosition
  parent: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted
  langs:
  - csharp
  - vb
  name: CommitPosition
  nameWithType: TcpClientMessageDto.WriteEventsCompleted.CommitPosition
  fullName: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.CommitPosition
  type: Field
  source:
    id: CommitPosition
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 192
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(6, IsRequired = false, Name = "commit_position", DataFormat = DataFormat.TwosComplement)]

      public readonly long? CommitPosition
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <ProtoMember(6, IsRequired:=False, Name:="commit_position", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly CommitPosition As Long?
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 6
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Name
      type: System.String
      value: commit_position
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.CurrentVersion
  commentId: F:EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.CurrentVersion
  id: CurrentVersion
  parent: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted
  langs:
  - csharp
  - vb
  name: CurrentVersion
  nameWithType: TcpClientMessageDto.WriteEventsCompleted.CurrentVersion
  fullName: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.CurrentVersion
  type: Field
  source:
    id: CurrentVersion
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 195
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: >-
      [ProtoMember(7, IsRequired = false, Name = "current_version", DataFormat = DataFormat.TwosComplement)]

      public readonly long? CurrentVersion
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <ProtoMember(7, IsRequired:=False, Name:="current_version", DataFormat:=DataFormat.TwosComplement)>

      Public ReadOnly CurrentVersion As Long?
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 7
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Name
      type: System.String
      value: current_version
    - name: DataFormat
      type: ProtoBuf.DataFormat
      value: 2
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.#ctor(EventStore.Core.Messages.TcpClientMessageDto.OperationResult,System.String,System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})
  commentId: M:EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.#ctor(EventStore.Core.Messages.TcpClientMessageDto.OperationResult,System.String,System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})
  id: '#ctor(EventStore.Core.Messages.TcpClientMessageDto.OperationResult,System.String,System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})'
  parent: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted
  langs:
  - csharp
  - vb
  name: WriteEventsCompleted(TcpClientMessageDto.OperationResult, String, Int64, Int64, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>)
  nameWithType: TcpClientMessageDto.WriteEventsCompleted.WriteEventsCompleted(TcpClientMessageDto.OperationResult, String, Int64, Int64, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>)
  fullName: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.WriteEventsCompleted(EventStore.Core.Messages.TcpClientMessageDto.OperationResult, System.String, System.Int64, System.Int64, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.Nullable<System.Int64>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Messages/TcpClientMessageDto.cs
    startLine: 199
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public WriteEventsCompleted(TcpClientMessageDto.OperationResult result, string message, long firstEventNumber, long lastEventNumber, long? preparePosition, long? commitPosition, long? currentVersion)
    parameters:
    - id: result
      type: EventStore.Core.Messages.TcpClientMessageDto.OperationResult
    - id: message
      type: System.String
    - id: firstEventNumber
      type: System.Int64
    - id: lastEventNumber
      type: System.Int64
    - id: preparePosition
      type: System.Nullable{System.Int64}
    - id: commitPosition
      type: System.Nullable{System.Int64}
    - id: currentVersion
      type: System.Nullable{System.Int64}
    content.vb: Public Sub New(result As TcpClientMessageDto.OperationResult, message As String, firstEventNumber As Long, lastEventNumber As Long, preparePosition As Long?, commitPosition As Long?, currentVersion As Long?)
  overload: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.#ctor*
  nameWithType.vb: TcpClientMessageDto.WriteEventsCompleted.WriteEventsCompleted(TcpClientMessageDto.OperationResult, String, Int64, Int64, Nullable(Of Int64), Nullable(Of Int64), Nullable(Of Int64))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.WriteEventsCompleted(EventStore.Core.Messages.TcpClientMessageDto.OperationResult, System.String, System.Int64, System.Int64, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.Nullable(Of System.Int64))
  name.vb: WriteEventsCompleted(TcpClientMessageDto.OperationResult, String, Int64, Int64, Nullable(Of Int64), Nullable(Of Int64), Nullable(Of Int64))
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<TcpClientMessageDto.WriteEventsCompleted>()
  nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.WriteEventsCompleted>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of TcpClientMessageDto.WriteEventsCompleted)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted)()
  name.vb: Serialize(Of TcpClientMessageDto.WriteEventsCompleted)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<TcpClientMessageDto.WriteEventsCompleted>
    nameWithType: ProtobufExtensions.Serialize<TcpClientMessageDto.WriteEventsCompleted>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of TcpClientMessageDto.WriteEventsCompleted)
    nameWithType: ProtobufExtensions.Serialize(Of TcpClientMessageDto.WriteEventsCompleted)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<TcpClientMessageDto.WriteEventsCompleted>()
  nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.WriteEventsCompleted>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.WriteEventsCompleted)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted)()
  name.vb: SerializeToArray(Of TcpClientMessageDto.WriteEventsCompleted)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<TcpClientMessageDto.WriteEventsCompleted>
    nameWithType: ProtobufExtensions.SerializeToArray<TcpClientMessageDto.WriteEventsCompleted>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of TcpClientMessageDto.WriteEventsCompleted)
    nameWithType: ProtobufExtensions.SerializeToArray(Of TcpClientMessageDto.WriteEventsCompleted)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messages.TcpClientMessageDto.OperationResult
  commentId: T:EventStore.Core.Messages.TcpClientMessageDto.OperationResult
  parent: EventStore.Core.Messages
  name: TcpClientMessageDto.OperationResult
  nameWithType: TcpClientMessageDto.OperationResult
  fullName: EventStore.Core.Messages.TcpClientMessageDto.OperationResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.#ctor*
  commentId: Overload:EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.#ctor
  name: WriteEventsCompleted
  nameWithType: TcpClientMessageDto.WriteEventsCompleted.WriteEventsCompleted
  fullName: EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.WriteEventsCompleted

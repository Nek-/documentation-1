### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Messages.UserManagementMessage.ResponseMessage
  commentId: T:EventStore.Core.Messages.UserManagementMessage.ResponseMessage
  id: UserManagementMessage.ResponseMessage
  parent: EventStore.Core.Messages
  children:
  - EventStore.Core.Messages.UserManagementMessage.ResponseMessage.#ctor(System.Boolean,EventStore.Core.Messages.UserManagementMessage.Error)
  - EventStore.Core.Messages.UserManagementMessage.ResponseMessage.Error
  - EventStore.Core.Messages.UserManagementMessage.ResponseMessage.MsgTypeId
  - EventStore.Core.Messages.UserManagementMessage.ResponseMessage.Success
  langs:
  - csharp
  - vb
  name: UserManagementMessage.ResponseMessage
  nameWithType: UserManagementMessage.ResponseMessage
  fullName: EventStore.Core.Messages.UserManagementMessage.ResponseMessage
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ResponseMessage
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 25
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: 'public class ResponseMessage : Message'
    content.vb: >-
      Public Class ResponseMessage
          Inherits Message
  inheritance:
  - System.Object
  - EventStore.Core.Messaging.Message
  derivedClasses:
  - EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResult
  - EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted
  - EventStore.Core.Messages.UserManagementMessage.UpdateResult
  - EventStore.Core.Messages.UserManagementMessage.UserDetailsResult
  - EventStore.Core.Messages.UserManagementMessage.UserDetailsResultHttpFormatted
  inheritedMembers:
  - EventStore.Core.Messaging.Message.NextMsgId
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Messages.UserManagementMessage.ResponseMessage.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Messages.UserManagementMessage.ResponseMessage.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.MsgTypeId
  commentId: P:EventStore.Core.Messages.UserManagementMessage.ResponseMessage.MsgTypeId
  id: MsgTypeId
  parent: EventStore.Core.Messages.UserManagementMessage.ResponseMessage
  langs:
  - csharp
  - vb
  name: MsgTypeId
  nameWithType: UserManagementMessage.ResponseMessage.MsgTypeId
  fullName: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.MsgTypeId
  type: Property
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: MsgTypeId
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 28
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public override int MsgTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property MsgTypeId As Integer
  overridden: EventStore.Core.Messaging.Message.MsgTypeId
  overload: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.MsgTypeId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.Success
  commentId: F:EventStore.Core.Messages.UserManagementMessage.ResponseMessage.Success
  id: Success
  parent: EventStore.Core.Messages.UserManagementMessage.ResponseMessage
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: UserManagementMessage.ResponseMessage.Success
  fullName: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.Success
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Success
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 32
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly bool Success
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Success As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.Error
  commentId: F:EventStore.Core.Messages.UserManagementMessage.ResponseMessage.Error
  id: Error
  parent: EventStore.Core.Messages.UserManagementMessage.ResponseMessage
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: UserManagementMessage.ResponseMessage.Error
  fullName: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.Error
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Error
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 33
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public readonly UserManagementMessage.Error Error
    return:
      type: EventStore.Core.Messages.UserManagementMessage.Error
    content.vb: Public ReadOnly Error As UserManagementMessage.Error
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.#ctor(System.Boolean,EventStore.Core.Messages.UserManagementMessage.Error)
  commentId: M:EventStore.Core.Messages.UserManagementMessage.ResponseMessage.#ctor(System.Boolean,EventStore.Core.Messages.UserManagementMessage.Error)
  id: '#ctor(System.Boolean,EventStore.Core.Messages.UserManagementMessage.Error)'
  parent: EventStore.Core.Messages.UserManagementMessage.ResponseMessage
  langs:
  - csharp
  - vb
  name: ResponseMessage(Boolean, UserManagementMessage.Error)
  nameWithType: UserManagementMessage.ResponseMessage.ResponseMessage(Boolean, UserManagementMessage.Error)
  fullName: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.ResponseMessage(System.Boolean, EventStore.Core.Messages.UserManagementMessage.Error)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Messages/UserManagementMessage.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Messages/UserManagementMessage.cs
    startLine: 35
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Messages
  syntax:
    content: public ResponseMessage(bool success, UserManagementMessage.Error error)
    parameters:
    - id: success
      type: System.Boolean
    - id: error
      type: EventStore.Core.Messages.UserManagementMessage.Error
    content.vb: Public Sub New(success As Boolean, error As UserManagementMessage.Error)
  overload: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Messaging.Message
  commentId: T:EventStore.Core.Messaging.Message
  parent: EventStore.Core.Messaging
  name: Message
  nameWithType: Message
  fullName: EventStore.Core.Messaging.Message
- uid: EventStore.Core.Messaging.Message.NextMsgId
  commentId: F:EventStore.Core.Messaging.Message.NextMsgId
  parent: EventStore.Core.Messaging.Message
  name: NextMsgId
  nameWithType: Message.NextMsgId
  fullName: EventStore.Core.Messaging.Message.NextMsgId
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<UserManagementMessage.ResponseMessage>()
  nameWithType: ProtobufExtensions.Serialize<UserManagementMessage.ResponseMessage>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.UserManagementMessage.ResponseMessage>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of UserManagementMessage.ResponseMessage)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.UserManagementMessage.ResponseMessage)()
  name.vb: Serialize(Of UserManagementMessage.ResponseMessage)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<UserManagementMessage.ResponseMessage>
    nameWithType: ProtobufExtensions.Serialize<UserManagementMessage.ResponseMessage>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Messages.UserManagementMessage.ResponseMessage>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of UserManagementMessage.ResponseMessage)
    nameWithType: ProtobufExtensions.Serialize(Of UserManagementMessage.ResponseMessage)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Messages.UserManagementMessage.ResponseMessage)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<UserManagementMessage.ResponseMessage>()
  nameWithType: ProtobufExtensions.SerializeToArray<UserManagementMessage.ResponseMessage>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.UserManagementMessage.ResponseMessage>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of UserManagementMessage.ResponseMessage)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.UserManagementMessage.ResponseMessage)()
  name.vb: SerializeToArray(Of UserManagementMessage.ResponseMessage)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<UserManagementMessage.ResponseMessage>
    nameWithType: ProtobufExtensions.SerializeToArray<UserManagementMessage.ResponseMessage>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Messages.UserManagementMessage.ResponseMessage>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of UserManagementMessage.ResponseMessage)
    nameWithType: ProtobufExtensions.SerializeToArray(Of UserManagementMessage.ResponseMessage)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Messages.UserManagementMessage.ResponseMessage)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Messaging
  commentId: N:EventStore.Core.Messaging
  name: EventStore.Core.Messaging
  nameWithType: EventStore.Core.Messaging
  fullName: EventStore.Core.Messaging
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Messaging.Message.MsgTypeId
  commentId: P:EventStore.Core.Messaging.Message.MsgTypeId
  parent: EventStore.Core.Messaging.Message
  name: MsgTypeId
  nameWithType: Message.MsgTypeId
  fullName: EventStore.Core.Messaging.Message.MsgTypeId
- uid: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.MsgTypeId*
  commentId: Overload:EventStore.Core.Messages.UserManagementMessage.ResponseMessage.MsgTypeId
  name: MsgTypeId
  nameWithType: UserManagementMessage.ResponseMessage.MsgTypeId
  fullName: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.MsgTypeId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Messages.UserManagementMessage.Error
  commentId: T:EventStore.Core.Messages.UserManagementMessage.Error
  parent: EventStore.Core.Messages
  name: UserManagementMessage.Error
  nameWithType: UserManagementMessage.Error
  fullName: EventStore.Core.Messages.UserManagementMessage.Error
- uid: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.#ctor*
  commentId: Overload:EventStore.Core.Messages.UserManagementMessage.ResponseMessage.#ctor
  name: ResponseMessage
  nameWithType: UserManagementMessage.ResponseMessage.ResponseMessage
  fullName: EventStore.Core.Messages.UserManagementMessage.ResponseMessage.ResponseMessage

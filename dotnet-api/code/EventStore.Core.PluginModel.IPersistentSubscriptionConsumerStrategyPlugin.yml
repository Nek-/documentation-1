### YamlMime:ManagedReference
items:
- uid: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin
  commentId: T:EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin
  id: IPersistentSubscriptionConsumerStrategyPlugin
  parent: EventStore.Core.PluginModel
  children:
  - EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.GetConsumerStrategyFactory
  - EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.Name
  - EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.Version
  langs:
  - csharp
  - vb
  name: IPersistentSubscriptionConsumerStrategyPlugin
  nameWithType: IPersistentSubscriptionConsumerStrategyPlugin
  fullName: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin
  type: Interface
  source:
    remote:
      path: src/EventStore.Core/PluginModel/IPersistentSubscriptionConsumerStrategyPlugin.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: IPersistentSubscriptionConsumerStrategyPlugin
    path: ../EventStore/src/EventStore.Core/PluginModel/IPersistentSubscriptionConsumerStrategyPlugin.cs
    startLine: 4
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.PluginModel
  syntax:
    content: public interface IPersistentSubscriptionConsumerStrategyPlugin
    content.vb: Public Interface IPersistentSubscriptionConsumerStrategyPlugin
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.Name
  commentId: P:EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.Name
  id: Name
  parent: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IPersistentSubscriptionConsumerStrategyPlugin.Name
  fullName: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.Name
  type: Property
  source:
    remote:
      path: src/EventStore.Core/PluginModel/IPersistentSubscriptionConsumerStrategyPlugin.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Name
    path: ../EventStore/src/EventStore.Core/PluginModel/IPersistentSubscriptionConsumerStrategyPlugin.cs
    startLine: 5
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.PluginModel
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.Version
  commentId: P:EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.Version
  id: Version
  parent: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: IPersistentSubscriptionConsumerStrategyPlugin.Version
  fullName: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.Version
  type: Property
  source:
    remote:
      path: src/EventStore.Core/PluginModel/IPersistentSubscriptionConsumerStrategyPlugin.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: Version
    path: ../EventStore/src/EventStore.Core/PluginModel/IPersistentSubscriptionConsumerStrategyPlugin.cs
    startLine: 7
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.PluginModel
  syntax:
    content: string Version { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Version As String
  overload: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.Version*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.GetConsumerStrategyFactory
  commentId: M:EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.GetConsumerStrategyFactory
  id: GetConsumerStrategyFactory
  parent: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin
  langs:
  - csharp
  - vb
  name: GetConsumerStrategyFactory()
  nameWithType: IPersistentSubscriptionConsumerStrategyPlugin.GetConsumerStrategyFactory()
  fullName: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.GetConsumerStrategyFactory()
  type: Method
  source:
    remote:
      path: src/EventStore.Core/PluginModel/IPersistentSubscriptionConsumerStrategyPlugin.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetConsumerStrategyFactory
    path: ../EventStore/src/EventStore.Core/PluginModel/IPersistentSubscriptionConsumerStrategyPlugin.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.PluginModel
  syntax:
    content: IPersistentSubscriptionConsumerStrategyFactory GetConsumerStrategyFactory()
    return:
      type: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory
    content.vb: Function GetConsumerStrategyFactory As IPersistentSubscriptionConsumerStrategyFactory
  overload: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.GetConsumerStrategyFactory*
references:
- uid: EventStore.Core.PluginModel
  commentId: N:EventStore.Core.PluginModel
  name: EventStore.Core.PluginModel
  nameWithType: EventStore.Core.PluginModel
  fullName: EventStore.Core.PluginModel
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<IPersistentSubscriptionConsumerStrategyPlugin>()
  nameWithType: ProtobufExtensions.Serialize<IPersistentSubscriptionConsumerStrategyPlugin>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of IPersistentSubscriptionConsumerStrategyPlugin)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin)()
  name.vb: Serialize(Of IPersistentSubscriptionConsumerStrategyPlugin)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<IPersistentSubscriptionConsumerStrategyPlugin>
    nameWithType: ProtobufExtensions.Serialize<IPersistentSubscriptionConsumerStrategyPlugin>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of IPersistentSubscriptionConsumerStrategyPlugin)
    nameWithType: ProtobufExtensions.Serialize(Of IPersistentSubscriptionConsumerStrategyPlugin)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<IPersistentSubscriptionConsumerStrategyPlugin>()
  nameWithType: ProtobufExtensions.SerializeToArray<IPersistentSubscriptionConsumerStrategyPlugin>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of IPersistentSubscriptionConsumerStrategyPlugin)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin)()
  name.vb: SerializeToArray(Of IPersistentSubscriptionConsumerStrategyPlugin)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<IPersistentSubscriptionConsumerStrategyPlugin>
    nameWithType: ProtobufExtensions.SerializeToArray<IPersistentSubscriptionConsumerStrategyPlugin>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of IPersistentSubscriptionConsumerStrategyPlugin)
    nameWithType: ProtobufExtensions.SerializeToArray(Of IPersistentSubscriptionConsumerStrategyPlugin)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.Name*
  commentId: Overload:EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.Name
  name: Name
  nameWithType: IPersistentSubscriptionConsumerStrategyPlugin.Name
  fullName: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.Version*
  commentId: Overload:EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.Version
  name: Version
  nameWithType: IPersistentSubscriptionConsumerStrategyPlugin.Version
  fullName: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.Version
- uid: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.GetConsumerStrategyFactory*
  commentId: Overload:EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.GetConsumerStrategyFactory
  name: GetConsumerStrategyFactory
  nameWithType: IPersistentSubscriptionConsumerStrategyPlugin.GetConsumerStrategyFactory
  fullName: EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.GetConsumerStrategyFactory
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory
  commentId: T:EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory
  parent: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  name: IPersistentSubscriptionConsumerStrategyFactory
  nameWithType: IPersistentSubscriptionConsumerStrategyFactory
  fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory
- uid: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  commentId: N:EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  name: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  nameWithType: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy
  fullName: EventStore.Core.Services.PersistentSubscription.ConsumerStrategy

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.HttpSendService
  commentId: T:EventStore.Core.Services.HttpSendService
  id: HttpSendService
  parent: EventStore.Core.Services
  children:
  - EventStore.Core.Services.HttpSendService.#ctor(EventStore.Core.Services.Transport.Http.HttpMessagePipe,System.Boolean)
  - EventStore.Core.Services.HttpSendService.EventStore#Core#Services#Transport#Http#IHttpForwarder#ForwardRequest(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  - EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.HttpBeginSend)
  - EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.HttpEndSend)
  - EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.HttpSend)
  - EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.HttpSendPart)
  - EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.SendOverHttp)
  - EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  langs:
  - csharp
  - vb
  name: HttpSendService
  nameWithType: HttpSendService
  fullName: EventStore.Core.Services.HttpSendService
  type: Class
  source:
    id: HttpSendService
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/HttpSendService.cs
    startLine: 19
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: 'public class HttpSendService : IHttpForwarder, IHandle<SystemMessage.StateChangeMessage>, IHandle<HttpMessage.SendOverHttp>, IHandle<HttpMessage.HttpSend>, IHandle<HttpMessage.HttpBeginSend>, IHandle<HttpMessage.HttpSendPart>, IHandle<HttpMessage.HttpEndSend>'
    content.vb: >-
      Public Class HttpSendService
          Implements IHttpForwarder, IHandle(Of SystemMessage.StateChangeMessage), IHandle(Of HttpMessage.SendOverHttp), IHandle(Of HttpMessage.HttpSend), IHandle(Of HttpMessage.HttpBeginSend), IHandle(Of HttpMessage.HttpSendPart), IHandle(Of HttpMessage.HttpEndSend)
  inheritance:
  - System.Object
  implements:
  - EventStore.Core.Services.Transport.Http.IHttpForwarder
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.SendOverHttp}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpSend}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpBeginSend}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpSendPart}
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpEndSend}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.HttpSendService.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.HttpSendService.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.HttpSendService.#ctor(EventStore.Core.Services.Transport.Http.HttpMessagePipe,System.Boolean)
  commentId: M:EventStore.Core.Services.HttpSendService.#ctor(EventStore.Core.Services.Transport.Http.HttpMessagePipe,System.Boolean)
  id: '#ctor(EventStore.Core.Services.Transport.Http.HttpMessagePipe,System.Boolean)'
  parent: EventStore.Core.Services.HttpSendService
  langs:
  - csharp
  - vb
  name: HttpSendService(HttpMessagePipe, Boolean)
  nameWithType: HttpSendService.HttpSendService(HttpMessagePipe, Boolean)
  fullName: EventStore.Core.Services.HttpSendService.HttpSendService(EventStore.Core.Services.Transport.Http.HttpMessagePipe, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/HttpSendService.cs
    startLine: 35
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: public HttpSendService(HttpMessagePipe httpPipe, bool forwardRequests)
    parameters:
    - id: httpPipe
      type: EventStore.Core.Services.Transport.Http.HttpMessagePipe
    - id: forwardRequests
      type: System.Boolean
    content.vb: Public Sub New(httpPipe As HttpMessagePipe, forwardRequests As Boolean)
  overload: EventStore.Core.Services.HttpSendService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  commentId: M:EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  id: Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  parent: EventStore.Core.Services.HttpSendService
  langs:
  - csharp
  - vb
  name: Handle(SystemMessage.StateChangeMessage)
  nameWithType: HttpSendService.Handle(SystemMessage.StateChangeMessage)
  fullName: EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/HttpSendService.cs
    startLine: 41
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: public void Handle(SystemMessage.StateChangeMessage message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    content.vb: Public Sub Handle(message As SystemMessage.StateChangeMessage)
  overload: EventStore.Core.Services.HttpSendService.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.SendOverHttp)
  commentId: M:EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.SendOverHttp)
  id: Handle(EventStore.Core.Messages.HttpMessage.SendOverHttp)
  parent: EventStore.Core.Services.HttpSendService
  langs:
  - csharp
  - vb
  name: Handle(HttpMessage.SendOverHttp)
  nameWithType: HttpSendService.Handle(HttpMessage.SendOverHttp)
  fullName: EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.SendOverHttp)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/HttpSendService.cs
    startLine: 63
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: public void Handle(HttpMessage.SendOverHttp message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.HttpMessage.SendOverHttp
    content.vb: Public Sub Handle(message As HttpMessage.SendOverHttp)
  overload: EventStore.Core.Services.HttpSendService.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.SendOverHttp}.Handle(EventStore.Core.Messages.HttpMessage.SendOverHttp)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.HttpSend)
  commentId: M:EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.HttpSend)
  id: Handle(EventStore.Core.Messages.HttpMessage.HttpSend)
  parent: EventStore.Core.Services.HttpSendService
  langs:
  - csharp
  - vb
  name: Handle(HttpMessage.HttpSend)
  nameWithType: HttpSendService.Handle(HttpMessage.HttpSend)
  fullName: EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.HttpSend)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/HttpSendService.cs
    startLine: 72
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: public void Handle(HttpMessage.HttpSend message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.HttpMessage.HttpSend
    content.vb: Public Sub Handle(message As HttpMessage.HttpSend)
  overload: EventStore.Core.Services.HttpSendService.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpSend}.Handle(EventStore.Core.Messages.HttpMessage.HttpSend)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.HttpBeginSend)
  commentId: M:EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.HttpBeginSend)
  id: Handle(EventStore.Core.Messages.HttpMessage.HttpBeginSend)
  parent: EventStore.Core.Services.HttpSendService
  langs:
  - csharp
  - vb
  name: Handle(HttpMessage.HttpBeginSend)
  nameWithType: HttpSendService.Handle(HttpMessage.HttpBeginSend)
  fullName: EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.HttpBeginSend)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/HttpSendService.cs
    startLine: 121
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: public void Handle(HttpMessage.HttpBeginSend message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.HttpMessage.HttpBeginSend
    content.vb: Public Sub Handle(message As HttpMessage.HttpBeginSend)
  overload: EventStore.Core.Services.HttpSendService.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpBeginSend}.Handle(EventStore.Core.Messages.HttpMessage.HttpBeginSend)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.HttpSendPart)
  commentId: M:EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.HttpSendPart)
  id: Handle(EventStore.Core.Messages.HttpMessage.HttpSendPart)
  parent: EventStore.Core.Services.HttpSendService
  langs:
  - csharp
  - vb
  name: Handle(HttpMessage.HttpSendPart)
  nameWithType: HttpSendService.Handle(HttpMessage.HttpSendPart)
  fullName: EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.HttpSendPart)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/HttpSendService.cs
    startLine: 131
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: public void Handle(HttpMessage.HttpSendPart message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.HttpMessage.HttpSendPart
    content.vb: Public Sub Handle(message As HttpMessage.HttpSendPart)
  overload: EventStore.Core.Services.HttpSendService.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpSendPart}.Handle(EventStore.Core.Messages.HttpMessage.HttpSendPart)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.HttpEndSend)
  commentId: M:EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.HttpEndSend)
  id: Handle(EventStore.Core.Messages.HttpMessage.HttpEndSend)
  parent: EventStore.Core.Services.HttpSendService
  langs:
  - csharp
  - vb
  name: Handle(HttpMessage.HttpEndSend)
  nameWithType: HttpSendService.Handle(HttpMessage.HttpEndSend)
  fullName: EventStore.Core.Services.HttpSendService.Handle(EventStore.Core.Messages.HttpMessage.HttpEndSend)
  type: Method
  source:
    id: Handle
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/HttpSendService.cs
    startLine: 144
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: public void Handle(HttpMessage.HttpEndSend message)
    parameters:
    - id: message
      type: EventStore.Core.Messages.HttpMessage.HttpEndSend
    content.vb: Public Sub Handle(message As HttpMessage.HttpEndSend)
  overload: EventStore.Core.Services.HttpSendService.Handle*
  implements:
  - EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpEndSend}.Handle(EventStore.Core.Messages.HttpMessage.HttpEndSend)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.HttpSendService.EventStore#Core#Services#Transport#Http#IHttpForwarder#ForwardRequest(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  commentId: M:EventStore.Core.Services.HttpSendService.EventStore#Core#Services#Transport#Http#IHttpForwarder#ForwardRequest(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  id: EventStore#Core#Services#Transport#Http#IHttpForwarder#ForwardRequest(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  isEii: true
  parent: EventStore.Core.Services.HttpSendService
  langs:
  - csharp
  - vb
  name: IHttpForwarder.ForwardRequest(HttpEntityManager)
  nameWithType: HttpSendService.IHttpForwarder.ForwardRequest(HttpEntityManager)
  fullName: EventStore.Core.Services.HttpSendService.EventStore.Core.Services.Transport.Http.IHttpForwarder.ForwardRequest(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  type: Method
  source:
    id: EventStore.Core.Services.Transport.Http.IHttpForwarder.ForwardRequest
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/HttpSendService.cs
    startLine: 151
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services
  syntax:
    content: bool IHttpForwarder.ForwardRequest(HttpEntityManager manager)
    parameters:
    - id: manager
      type: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    return:
      type: System.Boolean
    content.vb: Function EventStore.Core.Services.Transport.Http.IHttpForwarder.ForwardRequest(manager As HttpEntityManager) As Boolean Implements IHttpForwarder.ForwardRequest
  overload: EventStore.Core.Services.HttpSendService.EventStore#Core#Services#Transport#Http#IHttpForwarder#ForwardRequest*
  implements:
  - EventStore.Core.Services.Transport.Http.IHttpForwarder.ForwardRequest(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  nameWithType.vb: HttpSendService.EventStore.Core.Services.Transport.Http.IHttpForwarder.ForwardRequest(HttpEntityManager)
  name.vb: EventStore.Core.Services.Transport.Http.IHttpForwarder.ForwardRequest(HttpEntityManager)
references:
- uid: EventStore.Core.Services
  commentId: N:EventStore.Core.Services
  name: EventStore.Core.Services
  nameWithType: EventStore.Core.Services
  fullName: EventStore.Core.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EventStore.Core.Services.Transport.Http.IHttpForwarder
  commentId: T:EventStore.Core.Services.Transport.Http.IHttpForwarder
  parent: EventStore.Core.Services.Transport.Http
  name: IHttpForwarder
  nameWithType: IHttpForwarder
  fullName: EventStore.Core.Services.Transport.Http.IHttpForwarder
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<SystemMessage.StateChangeMessage>
  nameWithType: IHandle<SystemMessage.StateChangeMessage>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.StateChangeMessage>
  nameWithType.vb: IHandle(Of SystemMessage.StateChangeMessage)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  name.vb: IHandle(Of SystemMessage.StateChangeMessage)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    name: SystemMessage.StateChangeMessage
    nameWithType: SystemMessage.StateChangeMessage
    fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    name: SystemMessage.StateChangeMessage
    nameWithType: SystemMessage.StateChangeMessage
    fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.SendOverHttp}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.SendOverHttp}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<HttpMessage.SendOverHttp>
  nameWithType: IHandle<HttpMessage.SendOverHttp>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.HttpMessage.SendOverHttp>
  nameWithType.vb: IHandle(Of HttpMessage.SendOverHttp)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.HttpMessage.SendOverHttp)
  name.vb: IHandle(Of HttpMessage.SendOverHttp)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.HttpMessage.SendOverHttp
    name: HttpMessage.SendOverHttp
    nameWithType: HttpMessage.SendOverHttp
    fullName: EventStore.Core.Messages.HttpMessage.SendOverHttp
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.HttpMessage.SendOverHttp
    name: HttpMessage.SendOverHttp
    nameWithType: HttpMessage.SendOverHttp
    fullName: EventStore.Core.Messages.HttpMessage.SendOverHttp
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpSend}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpSend}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<HttpMessage.HttpSend>
  nameWithType: IHandle<HttpMessage.HttpSend>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.HttpMessage.HttpSend>
  nameWithType.vb: IHandle(Of HttpMessage.HttpSend)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.HttpMessage.HttpSend)
  name.vb: IHandle(Of HttpMessage.HttpSend)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.HttpMessage.HttpSend
    name: HttpMessage.HttpSend
    nameWithType: HttpMessage.HttpSend
    fullName: EventStore.Core.Messages.HttpMessage.HttpSend
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.HttpMessage.HttpSend
    name: HttpMessage.HttpSend
    nameWithType: HttpMessage.HttpSend
    fullName: EventStore.Core.Messages.HttpMessage.HttpSend
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpBeginSend}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpBeginSend}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<HttpMessage.HttpBeginSend>
  nameWithType: IHandle<HttpMessage.HttpBeginSend>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.HttpMessage.HttpBeginSend>
  nameWithType.vb: IHandle(Of HttpMessage.HttpBeginSend)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.HttpMessage.HttpBeginSend)
  name.vb: IHandle(Of HttpMessage.HttpBeginSend)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.HttpMessage.HttpBeginSend
    name: HttpMessage.HttpBeginSend
    nameWithType: HttpMessage.HttpBeginSend
    fullName: EventStore.Core.Messages.HttpMessage.HttpBeginSend
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.HttpMessage.HttpBeginSend
    name: HttpMessage.HttpBeginSend
    nameWithType: HttpMessage.HttpBeginSend
    fullName: EventStore.Core.Messages.HttpMessage.HttpBeginSend
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpSendPart}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpSendPart}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<HttpMessage.HttpSendPart>
  nameWithType: IHandle<HttpMessage.HttpSendPart>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.HttpMessage.HttpSendPart>
  nameWithType.vb: IHandle(Of HttpMessage.HttpSendPart)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.HttpMessage.HttpSendPart)
  name.vb: IHandle(Of HttpMessage.HttpSendPart)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.HttpMessage.HttpSendPart
    name: HttpMessage.HttpSendPart
    nameWithType: HttpMessage.HttpSendPart
    fullName: EventStore.Core.Messages.HttpMessage.HttpSendPart
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.HttpMessage.HttpSendPart
    name: HttpMessage.HttpSendPart
    nameWithType: HttpMessage.HttpSendPart
    fullName: EventStore.Core.Messages.HttpMessage.HttpSendPart
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpEndSend}
  commentId: T:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpEndSend}
  parent: EventStore.Core.Bus
  definition: EventStore.Core.Bus.IHandle`1
  name: IHandle<HttpMessage.HttpEndSend>
  nameWithType: IHandle<HttpMessage.HttpEndSend>
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.HttpMessage.HttpEndSend>
  nameWithType.vb: IHandle(Of HttpMessage.HttpEndSend)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.HttpMessage.HttpEndSend)
  name.vb: IHandle(Of HttpMessage.HttpEndSend)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventStore.Core.Messages.HttpMessage.HttpEndSend
    name: HttpMessage.HttpEndSend
    nameWithType: HttpMessage.HttpEndSend
    fullName: EventStore.Core.Messages.HttpMessage.HttpEndSend
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventStore.Core.Messages.HttpMessage.HttpEndSend
    name: HttpMessage.HttpEndSend
    nameWithType: HttpMessage.HttpEndSend
    fullName: EventStore.Core.Messages.HttpMessage.HttpEndSend
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.HttpSendService.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<HttpSendService>()
  nameWithType: ProtobufExtensions.Serialize<HttpSendService>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.HttpSendService>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of HttpSendService)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.HttpSendService)()
  name.vb: Serialize(Of HttpSendService)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<HttpSendService>
    nameWithType: ProtobufExtensions.Serialize<HttpSendService>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.HttpSendService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of HttpSendService)
    nameWithType: ProtobufExtensions.Serialize(Of HttpSendService)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.HttpSendService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.HttpSendService.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<HttpSendService>()
  nameWithType: ProtobufExtensions.SerializeToArray<HttpSendService>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.HttpSendService>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of HttpSendService)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.HttpSendService)()
  name.vb: SerializeToArray(Of HttpSendService)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<HttpSendService>
    nameWithType: ProtobufExtensions.SerializeToArray<HttpSendService>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.HttpSendService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of HttpSendService)
    nameWithType: ProtobufExtensions.SerializeToArray(Of HttpSendService)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.HttpSendService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Services.Transport.Http
  commentId: N:EventStore.Core.Services.Transport.Http
  name: EventStore.Core.Services.Transport.Http
  nameWithType: EventStore.Core.Services.Transport.Http
  fullName: EventStore.Core.Services.Transport.Http
- uid: EventStore.Core.Bus.IHandle`1
  commentId: T:EventStore.Core.Bus.IHandle`1
  name: IHandle<T>
  nameWithType: IHandle<T>
  fullName: EventStore.Core.Bus.IHandle<T>
  nameWithType.vb: IHandle(Of T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T)
  name.vb: IHandle(Of T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1
    name: IHandle
    nameWithType: IHandle
    fullName: EventStore.Core.Bus.IHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Bus
  commentId: N:EventStore.Core.Bus
  name: EventStore.Core.Bus
  nameWithType: EventStore.Core.Bus
  fullName: EventStore.Core.Bus
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: EventStore.Core.Services.HttpSendService.#ctor*
  commentId: Overload:EventStore.Core.Services.HttpSendService.#ctor
  name: HttpSendService
  nameWithType: HttpSendService.HttpSendService
  fullName: EventStore.Core.Services.HttpSendService.HttpSendService
- uid: EventStore.Core.Services.Transport.Http.HttpMessagePipe
  commentId: T:EventStore.Core.Services.Transport.Http.HttpMessagePipe
  parent: EventStore.Core.Services.Transport.Http
  name: HttpMessagePipe
  nameWithType: HttpMessagePipe
  fullName: EventStore.Core.Services.Transport.Http.HttpMessagePipe
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EventStore.Core.Services.HttpSendService.Handle*
  commentId: Overload:EventStore.Core.Services.HttpSendService.Handle
  name: Handle
  nameWithType: HttpSendService.Handle
  fullName: EventStore.Core.Services.HttpSendService.Handle
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.SystemMessage.StateChangeMessage}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(SystemMessage.StateChangeMessage)
  nameWithType: IHandle<SystemMessage.StateChangeMessage>.Handle(SystemMessage.StateChangeMessage)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.StateChangeMessage>.Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  nameWithType.vb: IHandle(Of SystemMessage.StateChangeMessage).Handle(SystemMessage.StateChangeMessage)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.StateChangeMessage).Handle(EventStore.Core.Messages.SystemMessage.StateChangeMessage)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<SystemMessage.StateChangeMessage>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.SystemMessage.StateChangeMessage>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    name: SystemMessage.StateChangeMessage
    nameWithType: SystemMessage.StateChangeMessage
    fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of SystemMessage.StateChangeMessage).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.SystemMessage.StateChangeMessage).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
    name: SystemMessage.StateChangeMessage
    nameWithType: SystemMessage.StateChangeMessage
    fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.SystemMessage.StateChangeMessage
  commentId: T:EventStore.Core.Messages.SystemMessage.StateChangeMessage
  parent: EventStore.Core.Messages
  name: SystemMessage.StateChangeMessage
  nameWithType: SystemMessage.StateChangeMessage
  fullName: EventStore.Core.Messages.SystemMessage.StateChangeMessage
- uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
  commentId: M:EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(T)
  nameWithType: IHandle<T>.Handle(T)
  fullName: EventStore.Core.Bus.IHandle<T>.Handle(T)
  nameWithType.vb: IHandle(Of T).Handle(T)
  fullName.vb: EventStore.Core.Bus.IHandle(Of T).Handle(T)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<T>.Handle
    fullName: EventStore.Core.Bus.IHandle<T>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of T).Handle
    fullName: EventStore.Core.Bus.IHandle(Of T).Handle
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages
  commentId: N:EventStore.Core.Messages
  name: EventStore.Core.Messages
  nameWithType: EventStore.Core.Messages
  fullName: EventStore.Core.Messages
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.SendOverHttp}.Handle(EventStore.Core.Messages.HttpMessage.SendOverHttp)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.SendOverHttp}.Handle(EventStore.Core.Messages.HttpMessage.SendOverHttp)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.SendOverHttp}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(HttpMessage.SendOverHttp)
  nameWithType: IHandle<HttpMessage.SendOverHttp>.Handle(HttpMessage.SendOverHttp)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.HttpMessage.SendOverHttp>.Handle(EventStore.Core.Messages.HttpMessage.SendOverHttp)
  nameWithType.vb: IHandle(Of HttpMessage.SendOverHttp).Handle(HttpMessage.SendOverHttp)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.HttpMessage.SendOverHttp).Handle(EventStore.Core.Messages.HttpMessage.SendOverHttp)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<HttpMessage.SendOverHttp>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.HttpMessage.SendOverHttp>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.HttpMessage.SendOverHttp
    name: HttpMessage.SendOverHttp
    nameWithType: HttpMessage.SendOverHttp
    fullName: EventStore.Core.Messages.HttpMessage.SendOverHttp
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of HttpMessage.SendOverHttp).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.HttpMessage.SendOverHttp).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.HttpMessage.SendOverHttp
    name: HttpMessage.SendOverHttp
    nameWithType: HttpMessage.SendOverHttp
    fullName: EventStore.Core.Messages.HttpMessage.SendOverHttp
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.HttpMessage.SendOverHttp
  commentId: T:EventStore.Core.Messages.HttpMessage.SendOverHttp
  parent: EventStore.Core.Messages
  name: HttpMessage.SendOverHttp
  nameWithType: HttpMessage.SendOverHttp
  fullName: EventStore.Core.Messages.HttpMessage.SendOverHttp
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpSend}.Handle(EventStore.Core.Messages.HttpMessage.HttpSend)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpSend}.Handle(EventStore.Core.Messages.HttpMessage.HttpSend)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpSend}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(HttpMessage.HttpSend)
  nameWithType: IHandle<HttpMessage.HttpSend>.Handle(HttpMessage.HttpSend)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.HttpMessage.HttpSend>.Handle(EventStore.Core.Messages.HttpMessage.HttpSend)
  nameWithType.vb: IHandle(Of HttpMessage.HttpSend).Handle(HttpMessage.HttpSend)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.HttpMessage.HttpSend).Handle(EventStore.Core.Messages.HttpMessage.HttpSend)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<HttpMessage.HttpSend>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.HttpMessage.HttpSend>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.HttpMessage.HttpSend
    name: HttpMessage.HttpSend
    nameWithType: HttpMessage.HttpSend
    fullName: EventStore.Core.Messages.HttpMessage.HttpSend
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of HttpMessage.HttpSend).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.HttpMessage.HttpSend).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.HttpMessage.HttpSend
    name: HttpMessage.HttpSend
    nameWithType: HttpMessage.HttpSend
    fullName: EventStore.Core.Messages.HttpMessage.HttpSend
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.HttpMessage.HttpSend
  commentId: T:EventStore.Core.Messages.HttpMessage.HttpSend
  parent: EventStore.Core.Messages
  name: HttpMessage.HttpSend
  nameWithType: HttpMessage.HttpSend
  fullName: EventStore.Core.Messages.HttpMessage.HttpSend
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpBeginSend}.Handle(EventStore.Core.Messages.HttpMessage.HttpBeginSend)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpBeginSend}.Handle(EventStore.Core.Messages.HttpMessage.HttpBeginSend)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpBeginSend}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(HttpMessage.HttpBeginSend)
  nameWithType: IHandle<HttpMessage.HttpBeginSend>.Handle(HttpMessage.HttpBeginSend)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.HttpMessage.HttpBeginSend>.Handle(EventStore.Core.Messages.HttpMessage.HttpBeginSend)
  nameWithType.vb: IHandle(Of HttpMessage.HttpBeginSend).Handle(HttpMessage.HttpBeginSend)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.HttpMessage.HttpBeginSend).Handle(EventStore.Core.Messages.HttpMessage.HttpBeginSend)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<HttpMessage.HttpBeginSend>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.HttpMessage.HttpBeginSend>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.HttpMessage.HttpBeginSend
    name: HttpMessage.HttpBeginSend
    nameWithType: HttpMessage.HttpBeginSend
    fullName: EventStore.Core.Messages.HttpMessage.HttpBeginSend
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of HttpMessage.HttpBeginSend).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.HttpMessage.HttpBeginSend).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.HttpMessage.HttpBeginSend
    name: HttpMessage.HttpBeginSend
    nameWithType: HttpMessage.HttpBeginSend
    fullName: EventStore.Core.Messages.HttpMessage.HttpBeginSend
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.HttpMessage.HttpBeginSend
  commentId: T:EventStore.Core.Messages.HttpMessage.HttpBeginSend
  parent: EventStore.Core.Messages
  name: HttpMessage.HttpBeginSend
  nameWithType: HttpMessage.HttpBeginSend
  fullName: EventStore.Core.Messages.HttpMessage.HttpBeginSend
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpSendPart}.Handle(EventStore.Core.Messages.HttpMessage.HttpSendPart)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpSendPart}.Handle(EventStore.Core.Messages.HttpMessage.HttpSendPart)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpSendPart}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(HttpMessage.HttpSendPart)
  nameWithType: IHandle<HttpMessage.HttpSendPart>.Handle(HttpMessage.HttpSendPart)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.HttpMessage.HttpSendPart>.Handle(EventStore.Core.Messages.HttpMessage.HttpSendPart)
  nameWithType.vb: IHandle(Of HttpMessage.HttpSendPart).Handle(HttpMessage.HttpSendPart)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.HttpMessage.HttpSendPart).Handle(EventStore.Core.Messages.HttpMessage.HttpSendPart)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<HttpMessage.HttpSendPart>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.HttpMessage.HttpSendPart>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.HttpMessage.HttpSendPart
    name: HttpMessage.HttpSendPart
    nameWithType: HttpMessage.HttpSendPart
    fullName: EventStore.Core.Messages.HttpMessage.HttpSendPart
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of HttpMessage.HttpSendPart).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.HttpMessage.HttpSendPart).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.HttpMessage.HttpSendPart
    name: HttpMessage.HttpSendPart
    nameWithType: HttpMessage.HttpSendPart
    fullName: EventStore.Core.Messages.HttpMessage.HttpSendPart
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.HttpMessage.HttpSendPart
  commentId: T:EventStore.Core.Messages.HttpMessage.HttpSendPart
  parent: EventStore.Core.Messages
  name: HttpMessage.HttpSendPart
  nameWithType: HttpMessage.HttpSendPart
  fullName: EventStore.Core.Messages.HttpMessage.HttpSendPart
- uid: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpEndSend}.Handle(EventStore.Core.Messages.HttpMessage.HttpEndSend)
  commentId: M:EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpEndSend}.Handle(EventStore.Core.Messages.HttpMessage.HttpEndSend)
  parent: EventStore.Core.Bus.IHandle{EventStore.Core.Messages.HttpMessage.HttpEndSend}
  definition: EventStore.Core.Bus.IHandle`1.Handle(`0)
  name: Handle(HttpMessage.HttpEndSend)
  nameWithType: IHandle<HttpMessage.HttpEndSend>.Handle(HttpMessage.HttpEndSend)
  fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.HttpMessage.HttpEndSend>.Handle(EventStore.Core.Messages.HttpMessage.HttpEndSend)
  nameWithType.vb: IHandle(Of HttpMessage.HttpEndSend).Handle(HttpMessage.HttpEndSend)
  fullName.vb: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.HttpMessage.HttpEndSend).Handle(EventStore.Core.Messages.HttpMessage.HttpEndSend)
  spec.csharp:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle<HttpMessage.HttpEndSend>.Handle
    fullName: EventStore.Core.Bus.IHandle<EventStore.Core.Messages.HttpMessage.HttpEndSend>.Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.HttpMessage.HttpEndSend
    name: HttpMessage.HttpEndSend
    nameWithType: HttpMessage.HttpEndSend
    fullName: EventStore.Core.Messages.HttpMessage.HttpEndSend
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Bus.IHandle`1.Handle(`0)
    name: Handle
    nameWithType: IHandle(Of HttpMessage.HttpEndSend).Handle
    fullName: EventStore.Core.Bus.IHandle(Of EventStore.Core.Messages.HttpMessage.HttpEndSend).Handle
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Core.Messages.HttpMessage.HttpEndSend
    name: HttpMessage.HttpEndSend
    nameWithType: HttpMessage.HttpEndSend
    fullName: EventStore.Core.Messages.HttpMessage.HttpEndSend
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Messages.HttpMessage.HttpEndSend
  commentId: T:EventStore.Core.Messages.HttpMessage.HttpEndSend
  parent: EventStore.Core.Messages
  name: HttpMessage.HttpEndSend
  nameWithType: HttpMessage.HttpEndSend
  fullName: EventStore.Core.Messages.HttpMessage.HttpEndSend
- uid: EventStore.Core.Services.HttpSendService.EventStore#Core#Services#Transport#Http#IHttpForwarder#ForwardRequest*
  commentId: Overload:EventStore.Core.Services.HttpSendService.EventStore#Core#Services#Transport#Http#IHttpForwarder#ForwardRequest
  name: IHttpForwarder.ForwardRequest
  nameWithType: HttpSendService.IHttpForwarder.ForwardRequest
  fullName: EventStore.Core.Services.HttpSendService.EventStore.Core.Services.Transport.Http.IHttpForwarder.ForwardRequest
  nameWithType.vb: HttpSendService.EventStore.Core.Services.Transport.Http.IHttpForwarder.ForwardRequest
  name.vb: EventStore.Core.Services.Transport.Http.IHttpForwarder.ForwardRequest
- uid: EventStore.Core.Services.Transport.Http.IHttpForwarder.ForwardRequest(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  commentId: M:EventStore.Core.Services.Transport.Http.IHttpForwarder.ForwardRequest(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  parent: EventStore.Core.Services.Transport.Http.IHttpForwarder
  name: ForwardRequest(HttpEntityManager)
  nameWithType: IHttpForwarder.ForwardRequest(HttpEntityManager)
  fullName: EventStore.Core.Services.Transport.Http.IHttpForwarder.ForwardRequest(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Http.IHttpForwarder.ForwardRequest(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
    name: ForwardRequest
    nameWithType: IHttpForwarder.ForwardRequest
    fullName: EventStore.Core.Services.Transport.Http.IHttpForwarder.ForwardRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Http.IHttpForwarder.ForwardRequest(EventStore.Transport.Http.EntityManagement.HttpEntityManager)
    name: ForwardRequest
    nameWithType: IHttpForwarder.ForwardRequest
    fullName: EventStore.Core.Services.Transport.Http.IHttpForwarder.ForwardRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
    name: HttpEntityManager
    nameWithType: HttpEntityManager
    fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Transport.Http.EntityManagement.HttpEntityManager
  commentId: T:EventStore.Transport.Http.EntityManagement.HttpEntityManager
  parent: EventStore.Transport.Http.EntityManagement
  name: HttpEntityManager
  nameWithType: HttpEntityManager
  fullName: EventStore.Transport.Http.EntityManagement.HttpEntityManager
- uid: EventStore.Transport.Http.EntityManagement
  commentId: N:EventStore.Transport.Http.EntityManagement
  name: EventStore.Transport.Http.EntityManagement
  nameWithType: EventStore.Transport.Http.EntityManagement
  fullName: EventStore.Transport.Http.EntityManagement

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Monitoring.Stats.DiskIo
  commentId: T:EventStore.Core.Services.Monitoring.Stats.DiskIo
  id: DiskIo
  parent: EventStore.Core.Services.Monitoring.Stats
  children:
  - EventStore.Core.Services.Monitoring.Stats.DiskIo.#ctor(System.UInt64,System.UInt64,System.UInt64,System.UInt64)
  - EventStore.Core.Services.Monitoring.Stats.DiskIo.GetDiskIo(System.Int32,EventStore.Common.Log.ILogger)
  - EventStore.Core.Services.Monitoring.Stats.DiskIo.ReadBytes
  - EventStore.Core.Services.Monitoring.Stats.DiskIo.ReadOps
  - EventStore.Core.Services.Monitoring.Stats.DiskIo.WriteOps
  - EventStore.Core.Services.Monitoring.Stats.DiskIo.WrittenBytes
  langs:
  - csharp
  - vb
  name: DiskIo
  nameWithType: DiskIo
  fullName: EventStore.Core.Services.Monitoring.Stats.DiskIo
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/DiskIo.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: DiskIo
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/DiskIo.cs
    startLine: 9
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: 'public class DiskIo : object'
    content.vb: >-
      Public Class DiskIo
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  - System.Object.EventStore.Common.Utils.Json.ToJson
  - System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  - EventStore.Core.Services.Monitoring.Stats.DiskIo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  - EventStore.Core.Services.Monitoring.Stats.DiskIo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EventStore.Core.Services.Monitoring.Stats.DiskIo.ReadBytes
  commentId: F:EventStore.Core.Services.Monitoring.Stats.DiskIo.ReadBytes
  id: ReadBytes
  parent: EventStore.Core.Services.Monitoring.Stats.DiskIo
  langs:
  - csharp
  - vb
  name: ReadBytes
  nameWithType: DiskIo.ReadBytes
  fullName: EventStore.Core.Services.Monitoring.Stats.DiskIo.ReadBytes
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/DiskIo.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ReadBytes
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/DiskIo.cs
    startLine: 15
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  summary: "\nThe number of bytes read by EventStore since start.\n"
  example: []
  syntax:
    content: public readonly ulong ReadBytes
    return:
      type: System.UInt64
    content.vb: Public ReadOnly ReadBytes As ULong
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.DiskIo.WrittenBytes
  commentId: F:EventStore.Core.Services.Monitoring.Stats.DiskIo.WrittenBytes
  id: WrittenBytes
  parent: EventStore.Core.Services.Monitoring.Stats.DiskIo
  langs:
  - csharp
  - vb
  name: WrittenBytes
  nameWithType: DiskIo.WrittenBytes
  fullName: EventStore.Core.Services.Monitoring.Stats.DiskIo.WrittenBytes
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/DiskIo.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: WrittenBytes
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/DiskIo.cs
    startLine: 20
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  summary: "\nThe number of bytes written by EventStore since start.\n"
  example: []
  syntax:
    content: public readonly ulong WrittenBytes
    return:
      type: System.UInt64
    content.vb: Public ReadOnly WrittenBytes As ULong
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.DiskIo.ReadOps
  commentId: F:EventStore.Core.Services.Monitoring.Stats.DiskIo.ReadOps
  id: ReadOps
  parent: EventStore.Core.Services.Monitoring.Stats.DiskIo
  langs:
  - csharp
  - vb
  name: ReadOps
  nameWithType: DiskIo.ReadOps
  fullName: EventStore.Core.Services.Monitoring.Stats.DiskIo.ReadOps
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/DiskIo.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: ReadOps
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/DiskIo.cs
    startLine: 25
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  summary: "\nThe number of read operations by EventStore since start.\n"
  example: []
  syntax:
    content: public readonly ulong ReadOps
    return:
      type: System.UInt64
    content.vb: Public ReadOnly ReadOps As ULong
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.DiskIo.WriteOps
  commentId: F:EventStore.Core.Services.Monitoring.Stats.DiskIo.WriteOps
  id: WriteOps
  parent: EventStore.Core.Services.Monitoring.Stats.DiskIo
  langs:
  - csharp
  - vb
  name: WriteOps
  nameWithType: DiskIo.WriteOps
  fullName: EventStore.Core.Services.Monitoring.Stats.DiskIo.WriteOps
  type: Field
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/DiskIo.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: WriteOps
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/DiskIo.cs
    startLine: 30
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  summary: "\nThe number of write operations by EventStore since start.\n"
  example: []
  syntax:
    content: public readonly ulong WriteOps
    return:
      type: System.UInt64
    content.vb: Public ReadOnly WriteOps As ULong
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EventStore.Core.Services.Monitoring.Stats.DiskIo.#ctor(System.UInt64,System.UInt64,System.UInt64,System.UInt64)
  commentId: M:EventStore.Core.Services.Monitoring.Stats.DiskIo.#ctor(System.UInt64,System.UInt64,System.UInt64,System.UInt64)
  id: '#ctor(System.UInt64,System.UInt64,System.UInt64,System.UInt64)'
  parent: EventStore.Core.Services.Monitoring.Stats.DiskIo
  langs:
  - csharp
  - vb
  name: DiskIo(UInt64, UInt64, UInt64, UInt64)
  nameWithType: DiskIo.DiskIo(UInt64, UInt64, UInt64, UInt64)
  fullName: EventStore.Core.Services.Monitoring.Stats.DiskIo.DiskIo(System.UInt64, System.UInt64, System.UInt64, System.UInt64)
  type: Constructor
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/DiskIo.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: .ctor
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/DiskIo.cs
    startLine: 32
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public DiskIo(ulong bytesRead, ulong bytesWritten, ulong readOps, ulong writeOps)
    parameters:
    - id: bytesRead
      type: System.UInt64
    - id: bytesWritten
      type: System.UInt64
    - id: readOps
      type: System.UInt64
    - id: writeOps
      type: System.UInt64
    content.vb: Public Sub New(bytesRead As ULong, bytesWritten As ULong, readOps As ULong, writeOps As ULong)
  overload: EventStore.Core.Services.Monitoring.Stats.DiskIo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EventStore.Core.Services.Monitoring.Stats.DiskIo.GetDiskIo(System.Int32,EventStore.Common.Log.ILogger)
  commentId: M:EventStore.Core.Services.Monitoring.Stats.DiskIo.GetDiskIo(System.Int32,EventStore.Common.Log.ILogger)
  id: GetDiskIo(System.Int32,EventStore.Common.Log.ILogger)
  parent: EventStore.Core.Services.Monitoring.Stats.DiskIo
  langs:
  - csharp
  - vb
  name: GetDiskIo(Int32, ILogger)
  nameWithType: DiskIo.GetDiskIo(Int32, ILogger)
  fullName: EventStore.Core.Services.Monitoring.Stats.DiskIo.GetDiskIo(System.Int32, EventStore.Common.Log.ILogger)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Stats/DiskIo.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetDiskIo
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Stats/DiskIo.cs
    startLine: 39
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Stats
  syntax:
    content: public static DiskIo GetDiskIo(int procId, ILogger logger)
    parameters:
    - id: procId
      type: System.Int32
    - id: logger
      type: EventStore.Common.Log.ILogger
    return:
      type: EventStore.Core.Services.Monitoring.Stats.DiskIo
    content.vb: Public Shared Function GetDiskIo(procId As Integer, logger As ILogger) As DiskIo
  overload: EventStore.Core.Services.Monitoring.Stats.DiskIo.GetDiskIo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EventStore.Core.Services.Monitoring.Stats
  commentId: N:EventStore.Core.Services.Monitoring.Stats
  name: EventStore.Core.Services.Monitoring.Stats
  nameWithType: EventStore.Core.Services.Monitoring.Stats
  fullName: EventStore.Core.Services.Monitoring.Stats
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.EventStore.Common.Utils.Json.ToJsonBytes
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  name: ToJsonBytes()
  nameWithType: Json.ToJsonBytes()
  fullName: EventStore.Common.Utils.Json.ToJsonBytes()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToJson
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToJson(System.Object)
  name: ToJson()
  nameWithType: Json.ToJson()
  fullName: EventStore.Common.Utils.Json.ToJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.EventStore.Common.Utils.Json.ToCanonicalJson
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  parent: EventStore.Common.Utils.Json
  definition: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  name: ToCanonicalJson()
  nameWithType: Json.ToCanonicalJson()
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson()
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Monitoring.Stats.DiskIo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<DiskIo>()
  nameWithType: ProtobufExtensions.Serialize<DiskIo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Monitoring.Stats.DiskIo>()
  nameWithType.vb: ProtobufExtensions.Serialize(Of DiskIo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Monitoring.Stats.DiskIo)()
  name.vb: Serialize(Of DiskIo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize<DiskIo>
    nameWithType: ProtobufExtensions.Serialize<DiskIo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.Monitoring.Stats.DiskIo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1
    name: Serialize(Of DiskIo)
    nameWithType: ProtobufExtensions.Serialize(Of DiskIo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.Monitoring.Stats.DiskIo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Monitoring.Stats.DiskIo.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  parent: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  definition: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<DiskIo>()
  nameWithType: ProtobufExtensions.SerializeToArray<DiskIo>()
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Monitoring.Stats.DiskIo>()
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of DiskIo)()
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Monitoring.Stats.DiskIo)()
  name.vb: SerializeToArray(Of DiskIo)()
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray<DiskIo>
    nameWithType: ProtobufExtensions.SerializeToArray<DiskIo>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.Monitoring.Stats.DiskIo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1
    name: SerializeToArray(Of DiskIo)
    nameWithType: ProtobufExtensions.SerializeToArray(Of DiskIo)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.Monitoring.Stats.DiskIo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  isExternal: true
  name: ToJsonBytes(Object)
  nameWithType: Json.ToJsonBytes(Object)
  fullName: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJsonBytes(System.Object)
    name: ToJsonBytes
    nameWithType: Json.ToJsonBytes
    fullName: EventStore.Common.Utils.Json.ToJsonBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json
  commentId: T:EventStore.Common.Utils.Json
  parent: EventStore.Common.Utils
  name: Json
  nameWithType: Json
  fullName: EventStore.Common.Utils.Json
- uid: EventStore.Common.Utils.Json.ToJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToJson(System.Object)
  isExternal: true
  name: ToJson(Object)
  nameWithType: Json.ToJson(Object)
  fullName: EventStore.Common.Utils.Json.ToJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToJson(System.Object)
    name: ToJson
    nameWithType: Json.ToJson
    fullName: EventStore.Common.Utils.Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  commentId: M:EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  isExternal: true
  name: ToCanonicalJson(Object)
  nameWithType: Json.ToCanonicalJson(Object)
  fullName: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
  spec.csharp:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)
    name: ToCanonicalJson
    nameWithType: Json.ToCanonicalJson
    fullName: EventStore.Common.Utils.Json.ToCanonicalJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
  name: Serialize<T>(T)
  nameWithType: ProtobufExtensions.Serialize<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>(T)
  nameWithType.vb: ProtobufExtensions.Serialize(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ProtobufExtensions.Serialize<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ProtobufExtensions.Serialize(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  commentId: T:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
  parent: EventStore.Core.Services.Transport.Tcp
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions
- uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  commentId: M:EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
  name: SerializeToArray<T>(T)
  nameWithType: ProtobufExtensions.SerializeToArray<T>(T)
  fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>(T)
  nameWithType.vb: ProtobufExtensions.SerializeToArray(Of T)(T)
  fullName.vb: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)(T)
  name.vb: SerializeToArray(Of T)(T)
  spec.csharp:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray<T>
    nameWithType: ProtobufExtensions.SerializeToArray<T>
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)
    name: SerializeToArray(Of T)
    nameWithType: ProtobufExtensions.SerializeToArray(Of T)
    fullName: EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Common.Utils
  commentId: N:EventStore.Common.Utils
  name: EventStore.Common.Utils
  nameWithType: EventStore.Common.Utils
  fullName: EventStore.Common.Utils
- uid: EventStore.Core.Services.Transport.Tcp
  commentId: N:EventStore.Core.Services.Transport.Tcp
  name: EventStore.Core.Services.Transport.Tcp
  nameWithType: EventStore.Core.Services.Transport.Tcp
  fullName: EventStore.Core.Services.Transport.Tcp
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: EventStore.Core.Services.Monitoring.Stats.DiskIo.#ctor*
  commentId: Overload:EventStore.Core.Services.Monitoring.Stats.DiskIo.#ctor
  name: DiskIo
  nameWithType: DiskIo.DiskIo
  fullName: EventStore.Core.Services.Monitoring.Stats.DiskIo.DiskIo
- uid: EventStore.Core.Services.Monitoring.Stats.DiskIo.GetDiskIo*
  commentId: Overload:EventStore.Core.Services.Monitoring.Stats.DiskIo.GetDiskIo
  name: GetDiskIo
  nameWithType: DiskIo.GetDiskIo
  fullName: EventStore.Core.Services.Monitoring.Stats.DiskIo.GetDiskIo
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EventStore.Common.Log.ILogger
  commentId: T:EventStore.Common.Log.ILogger
  parent: EventStore.Common.Log
  name: ILogger
  nameWithType: ILogger
  fullName: EventStore.Common.Log.ILogger
- uid: EventStore.Core.Services.Monitoring.Stats.DiskIo
  commentId: T:EventStore.Core.Services.Monitoring.Stats.DiskIo
  parent: EventStore.Core.Services.Monitoring.Stats
  name: DiskIo
  nameWithType: DiskIo
  fullName: EventStore.Core.Services.Monitoring.Stats.DiskIo
- uid: EventStore.Common.Log
  commentId: N:EventStore.Common.Log
  name: EventStore.Common.Log
  nameWithType: EventStore.Common.Log
  fullName: EventStore.Common.Log

### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder
  commentId: T:EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder
  id: StatsCsvEncoder
  parent: EventStore.Core.Services.Monitoring.Utils
  children:
  - EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader(System.Collections.Generic.Dictionary{System.String,System.Object})
  - EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine(System.Collections.Generic.Dictionary{System.String,System.Object})
  langs:
  - csharp
  - vb
  name: StatsCsvEncoder
  nameWithType: StatsCsvEncoder
  fullName: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder
  type: Class
  source:
    id: StatsCsvEncoder
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Monitoring/Utils/StatsCsvEncoder.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Utils
  syntax:
    content: public static class StatsCsvEncoder
    content.vb: Public Module StatsCsvEncoder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: GetHeader(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder
  langs:
  - csharp
  - vb
  name: GetHeader(Dictionary<String, Object>)
  nameWithType: StatsCsvEncoder.GetHeader(Dictionary<String, Object>)
  fullName: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader(System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    id: GetHeader
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Monitoring/Utils/StatsCsvEncoder.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Utils
  syntax:
    content: public static string GetHeader(Dictionary<string, object> stats)
    parameters:
    - id: stats
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.String
    content.vb: Public Shared Function GetHeader(stats As Dictionary(Of String, Object)) As String
  overload: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader*
  nameWithType.vb: StatsCsvEncoder.GetHeader(Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader(System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: GetHeader(Dictionary(Of String, Object))
- uid: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: GetLine(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder
  langs:
  - csharp
  - vb
  name: GetLine(Dictionary<String, Object>)
  nameWithType: StatsCsvEncoder.GetLine(Dictionary<String, Object>)
  fullName: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine(System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    id: GetLine
    path: /Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/Monitoring/Utils/StatsCsvEncoder.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Utils
  syntax:
    content: public static string GetLine(Dictionary<string, object> stats)
    parameters:
    - id: stats
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.String
    content.vb: Public Shared Function GetLine(stats As Dictionary(Of String, Object)) As String
  overload: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine*
  nameWithType.vb: StatsCsvEncoder.GetLine(Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine(System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: GetLine(Dictionary(Of String, Object))
references:
- uid: EventStore.Core.Services.Monitoring.Utils
  commentId: N:EventStore.Core.Services.Monitoring.Utils
  name: EventStore.Core.Services.Monitoring.Utils
  nameWithType: EventStore.Core.Services.Monitoring.Utils
  fullName: EventStore.Core.Services.Monitoring.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader*
  commentId: Overload:EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader
  name: GetHeader
  nameWithType: StatsCsvEncoder.GetHeader
  fullName: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine*
  commentId: Overload:EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine
  name: GetLine
  nameWithType: StatsCsvEncoder.GetLine
  fullName: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine

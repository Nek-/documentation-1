### YamlMime:ManagedReference
items:
- uid: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder
  commentId: T:EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder
  id: StatsCsvEncoder
  parent: EventStore.Core.Services.Monitoring.Utils
  children:
  - EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader(Dictionary{System.String,System.Object})
  - EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine(Dictionary{System.String,System.Object})
  langs:
  - csharp
  - vb
  name: StatsCsvEncoder
  nameWithType: StatsCsvEncoder
  fullName: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder
  type: Class
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Utils/StatsCsvEncoder.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: StatsCsvEncoder
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Utils/StatsCsvEncoder.cs
    startLine: 6
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Utils
  syntax:
    content: 'public static class StatsCsvEncoder : object'
    content.vb: >-
      Public Module StatsCsvEncoder
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader(Dictionary{System.String,System.Object})
  commentId: M:EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader(Dictionary{System.String,System.Object})
  id: GetHeader(Dictionary{System.String,System.Object})
  parent: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder
  langs:
  - csharp
  - vb
  name: GetHeader(Dictionary<String, Object>)
  nameWithType: StatsCsvEncoder.GetHeader(Dictionary<String, Object>)
  fullName: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader(Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Utils/StatsCsvEncoder.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetHeader
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Utils/StatsCsvEncoder.cs
    startLine: 10
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Utils
  syntax:
    content: public static string GetHeader(Dictionary<string, object> stats)
    parameters:
    - id: stats
      type: Dictionary{System.String,System.Object}
    return:
      type: System.String
    content.vb: Public Shared Function GetHeader(stats As Dictionary(Of String, Object)) As String
  overload: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader*
  nameWithType.vb: StatsCsvEncoder.GetHeader(Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader(Dictionary(Of System.String, System.Object))
  name.vb: GetHeader(Dictionary(Of String, Object))
- uid: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine(Dictionary{System.String,System.Object})
  commentId: M:EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine(Dictionary{System.String,System.Object})
  id: GetLine(Dictionary{System.String,System.Object})
  parent: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder
  langs:
  - csharp
  - vb
  name: GetLine(Dictionary<String, Object>)
  nameWithType: StatsCsvEncoder.GetLine(Dictionary<String, Object>)
  fullName: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine(Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/EventStore.Core/Services/Monitoring/Utils/StatsCsvEncoder.cs
      branch: master
      repo: git@github.com:ChrisChinchilla/EventStore.git
    id: GetLine
    path: ../EventStore/src/EventStore.Core/Services/Monitoring/Utils/StatsCsvEncoder.cs
    startLine: 14
  assemblies:
  - EventStore.Core
  namespace: EventStore.Core.Services.Monitoring.Utils
  syntax:
    content: public static string GetLine(Dictionary<string, object> stats)
    parameters:
    - id: stats
      type: Dictionary{System.String,System.Object}
    return:
      type: System.String
    content.vb: Public Shared Function GetLine(stats As Dictionary(Of String, Object)) As String
  overload: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine*
  nameWithType.vb: StatsCsvEncoder.GetLine(Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine(Dictionary(Of System.String, System.Object))
  name.vb: GetLine(Dictionary(Of String, Object))
references:
- uid: EventStore.Core.Services.Monitoring.Utils
  commentId: N:EventStore.Core.Services.Monitoring.Utils
  name: EventStore.Core.Services.Monitoring.Utils
  nameWithType: EventStore.Core.Services.Monitoring.Utils
  fullName: EventStore.Core.Services.Monitoring.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader*
  commentId: Overload:EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader
  name: GetHeader
  nameWithType: StatsCsvEncoder.GetHeader
  fullName: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetHeader
- uid: Dictionary{System.String,System.Object}
  commentId: '!:Dictionary{System.String,System.Object}'
  definition: Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine*
  commentId: Overload:EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine
  name: GetLine
  nameWithType: StatsCsvEncoder.GetLine
  fullName: EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.GetLine
